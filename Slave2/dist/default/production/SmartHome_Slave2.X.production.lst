

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Oct 26 22:58:47 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1,inline
    34                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1,inline
    35                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,inline
    40                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,inline
    41                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,inline
    58                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,inline
    59                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1,inline
    63                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1,inline
    64                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1,inline
    65                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1,inline
    66                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1,inline
    67                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1,inline
    70                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    71                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    72                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    73                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    74   000000                     
    75                           ; Generated 12/10/2023 GMT
    76                           ; 
    77                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution. Publication is not required when
    91                           ;        this file is used in an embedded application.
    92                           ; 
    93                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    94                           ;        software without specific prior written permission.
    95                           ; 
    96                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    97                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    98                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    99                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   100                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   101                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   102                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   103                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   104                           ; 
   105                           ; 
   106                           ; Code-generator required, PIC18F46K20 Definitions
   107                           ; 
   108                           ; SFR Addresses
   109   000FE0                     bsr             equ	4064
   110   000FE9                     fsr0            equ	4073
   111   000FEA                     fsr0h           equ	4074
   112   000FE9                     fsr0l           equ	4073
   113   000FE1                     fsr1            equ	4065
   114   000FE2                     fsr1h           equ	4066
   115   000FE1                     fsr1l           equ	4065
   116   000FD9                     fsr2            equ	4057
   117   000FDA                     fsr2h           equ	4058
   118   000FD9                     fsr2l           equ	4057
   119   000FEF                     indf0           equ	4079
   120   000FE7                     indf1           equ	4071
   121   000FDF                     indf2           equ	4063
   122   000FF2                     intcon          equ	4082
   123   000000                     nvmcon          equ	0
   124   000FF9                     pcl             equ	4089
   125   000FFA                     pclath          equ	4090
   126   000FFB                     pclatu          equ	4091
   127   000FEB                     plusw0          equ	4075
   128   000FE3                     plusw1          equ	4067
   129   000FDB                     plusw2          equ	4059
   130   000FED                     postdec0        equ	4077
   131   000FE5                     postdec1        equ	4069
   132   000FDD                     postdec2        equ	4061
   133   000FEE                     postinc0        equ	4078
   134   000FE6                     postinc1        equ	4070
   135   000FDE                     postinc2        equ	4062
   136   000FEC                     preinc0         equ	4076
   137   000FE4                     preinc1         equ	4068
   138   000FDC                     preinc2         equ	4060
   139   000FF3                     prod            equ	4083
   140   000FF4                     prodh           equ	4084
   141   000FF3                     prodl           equ	4083
   142   000FD8                     status          equ	4056
   143   000FF5                     tablat          equ	4085
   144   000FF6                     tblptr          equ	4086
   145   000FF7                     tblptrh         equ	4087
   146   000FF6                     tblptrl         equ	4086
   147   000FF8                     tblptru         equ	4088
   148   000FFD                     tosl            equ	4093
   149   000FE8                     wreg            equ	4072
   150   000F77                     SSPMSK          equ	3959	;# 
   151   000F78                     SLRCON          equ	3960	;# 
   152   000F79                     CM2CON1         equ	3961	;# 
   153   000F7A                     CM2CON0         equ	3962	;# 
   154   000F7B                     CM1CON0         equ	3963	;# 
   155   000F7C                     WPUB            equ	3964	;# 
   156   000F7D                     IOCB            equ	3965	;# 
   157   000F7E                     ANSEL           equ	3966	;# 
   158   000F7F                     ANSELH          equ	3967	;# 
   159   000F80                     PORTA           equ	3968	;# 
   160   000F81                     PORTB           equ	3969	;# 
   161   000F82                     PORTC           equ	3970	;# 
   162   000F83                     PORTD           equ	3971	;# 
   163   000F84                     PORTE           equ	3972	;# 
   164   000F89                     LATA            equ	3977	;# 
   165   000F8A                     LATB            equ	3978	;# 
   166   000F8B                     LATC            equ	3979	;# 
   167   000F8C                     LATD            equ	3980	;# 
   168   000F8D                     LATE            equ	3981	;# 
   169   000F92                     TRISA           equ	3986	;# 
   170   000F92                     DDRA            equ	3986	;# 
   171   000F93                     TRISB           equ	3987	;# 
   172   000F93                     DDRB            equ	3987	;# 
   173   000F94                     TRISC           equ	3988	;# 
   174   000F94                     DDRC            equ	3988	;# 
   175   000F95                     TRISD           equ	3989	;# 
   176   000F95                     DDRD            equ	3989	;# 
   177   000F96                     TRISE           equ	3990	;# 
   178   000F96                     DDRE            equ	3990	;# 
   179   000F9B                     OSCTUNE         equ	3995	;# 
   180   000F9D                     PIE1            equ	3997	;# 
   181   000F9E                     PIR1            equ	3998	;# 
   182   000F9F                     IPR1            equ	3999	;# 
   183   000FA0                     PIE2            equ	4000	;# 
   184   000FA1                     PIR2            equ	4001	;# 
   185   000FA2                     IPR2            equ	4002	;# 
   186   000FA6                     EECON1          equ	4006	;# 
   187   000FA7                     EECON2          equ	4007	;# 
   188   000FA8                     EEDATA          equ	4008	;# 
   189   000FA9                     EEADR           equ	4009	;# 
   190   000FAA                     EEADRH          equ	4010	;# 
   191   000FAB                     RCSTA           equ	4011	;# 
   192   000FAB                     RCSTA1          equ	4011	;# 
   193   000FAC                     TXSTA           equ	4012	;# 
   194   000FAC                     TXSTA1          equ	4012	;# 
   195   000FAD                     TXREG           equ	4013	;# 
   196   000FAD                     TXREG1          equ	4013	;# 
   197   000FAE                     RCREG           equ	4014	;# 
   198   000FAE                     RCREG1          equ	4014	;# 
   199   000FAF                     SPBRG           equ	4015	;# 
   200   000FAF                     SPBRG1          equ	4015	;# 
   201   000FB0                     SPBRGH          equ	4016	;# 
   202   000FB1                     T3CON           equ	4017	;# 
   203   000FB2                     TMR3            equ	4018	;# 
   204   000FB2                     TMR3L           equ	4018	;# 
   205   000FB3                     TMR3H           equ	4019	;# 
   206   000FB4                     CVRCON2         equ	4020	;# 
   207   000FB5                     CVRCON          equ	4021	;# 
   208   000FB6                     ECCP1AS         equ	4022	;# 
   209   000FB7                     PWM1CON         equ	4023	;# 
   210   000FB8                     BAUDCON         equ	4024	;# 
   211   000FB8                     BAUDCTL         equ	4024	;# 
   212   000FB9                     PSTRCON         equ	4025	;# 
   213   000FBA                     CCP2CON         equ	4026	;# 
   214   000FBB                     CCPR2           equ	4027	;# 
   215   000FBB                     CCPR2L          equ	4027	;# 
   216   000FBC                     CCPR2H          equ	4028	;# 
   217   000FBD                     CCP1CON         equ	4029	;# 
   218   000FBE                     CCPR1           equ	4030	;# 
   219   000FBE                     CCPR1L          equ	4030	;# 
   220   000FBF                     CCPR1H          equ	4031	;# 
   221   000FC0                     ADCON2          equ	4032	;# 
   222   000FC1                     ADCON1          equ	4033	;# 
   223   000FC2                     ADCON0          equ	4034	;# 
   224   000FC3                     ADRES           equ	4035	;# 
   225   000FC3                     ADRESL          equ	4035	;# 
   226   000FC4                     ADRESH          equ	4036	;# 
   227   000FC5                     SSPCON2         equ	4037	;# 
   228   000FC6                     SSPCON1         equ	4038	;# 
   229   000FC7                     SSPSTAT         equ	4039	;# 
   230   000FC8                     SSPADD          equ	4040	;# 
   231   000FC9                     SSPBUF          equ	4041	;# 
   232   000FCA                     T2CON           equ	4042	;# 
   233   000FCB                     PR2             equ	4043	;# 
   234   000FCB                     MEMCON          equ	4043	;# 
   235   000FCC                     TMR2            equ	4044	;# 
   236   000FCD                     T1CON           equ	4045	;# 
   237   000FCE                     TMR1            equ	4046	;# 
   238   000FCE                     TMR1L           equ	4046	;# 
   239   000FCF                     TMR1H           equ	4047	;# 
   240   000FD0                     RCON            equ	4048	;# 
   241   000FD1                     WDTCON          equ	4049	;# 
   242   000FD2                     HLVDCON         equ	4050	;# 
   243   000FD2                     LVDCON          equ	4050	;# 
   244   000FD3                     OSCCON          equ	4051	;# 
   245   000FD5                     T0CON           equ	4053	;# 
   246   000FD6                     TMR0            equ	4054	;# 
   247   000FD6                     TMR0L           equ	4054	;# 
   248   000FD7                     TMR0H           equ	4055	;# 
   249   000FD8                     STATUS          equ	4056	;# 
   250   000FD9                     FSR2            equ	4057	;# 
   251   000FD9                     FSR2L           equ	4057	;# 
   252   000FDA                     FSR2H           equ	4058	;# 
   253   000FDB                     PLUSW2          equ	4059	;# 
   254   000FDC                     PREINC2         equ	4060	;# 
   255   000FDD                     POSTDEC2        equ	4061	;# 
   256   000FDE                     POSTINC2        equ	4062	;# 
   257   000FDF                     INDF2           equ	4063	;# 
   258   000FE0                     BSR             equ	4064	;# 
   259   000FE1                     FSR1            equ	4065	;# 
   260   000FE1                     FSR1L           equ	4065	;# 
   261   000FE2                     FSR1H           equ	4066	;# 
   262   000FE3                     PLUSW1          equ	4067	;# 
   263   000FE4                     PREINC1         equ	4068	;# 
   264   000FE5                     POSTDEC1        equ	4069	;# 
   265   000FE6                     POSTINC1        equ	4070	;# 
   266   000FE7                     INDF1           equ	4071	;# 
   267   000FE8                     WREG            equ	4072	;# 
   268   000FE9                     FSR0            equ	4073	;# 
   269   000FE9                     FSR0L           equ	4073	;# 
   270   000FEA                     FSR0H           equ	4074	;# 
   271   000FEB                     PLUSW0          equ	4075	;# 
   272   000FEC                     PREINC0         equ	4076	;# 
   273   000FED                     POSTDEC0        equ	4077	;# 
   274   000FEE                     POSTINC0        equ	4078	;# 
   275   000FEF                     INDF0           equ	4079	;# 
   276   000FF0                     INTCON3         equ	4080	;# 
   277   000FF1                     INTCON2         equ	4081	;# 
   278   000FF2                     INTCON          equ	4082	;# 
   279   000FF3                     PROD            equ	4083	;# 
   280   000FF3                     PRODL           equ	4083	;# 
   281   000FF4                     PRODH           equ	4084	;# 
   282   000FF5                     TABLAT          equ	4085	;# 
   283   000FF6                     TBLPTR          equ	4086	;# 
   284   000FF6                     TBLPTRL         equ	4086	;# 
   285   000FF7                     TBLPTRH         equ	4087	;# 
   286   000FF8                     TBLPTRU         equ	4088	;# 
   287   000FF9                     PCLAT           equ	4089	;# 
   288   000FF9                     PC              equ	4089	;# 
   289   000FF9                     PCL             equ	4089	;# 
   290   000FFA                     PCLATH          equ	4090	;# 
   291   000FFB                     PCLATU          equ	4091	;# 
   292   000FFC                     STKPTR          equ	4092	;# 
   293   000FFD                     TOS             equ	4093	;# 
   294   000FFD                     TOSL            equ	4093	;# 
   295   000FFE                     TOSH            equ	4094	;# 
   296   000FFF                     TOSU            equ	4095	;# 
   297   000F77                     SSPMSK          equ	3959	;# 
   298   000F78                     SLRCON          equ	3960	;# 
   299   000F79                     CM2CON1         equ	3961	;# 
   300   000F7A                     CM2CON0         equ	3962	;# 
   301   000F7B                     CM1CON0         equ	3963	;# 
   302   000F7C                     WPUB            equ	3964	;# 
   303   000F7D                     IOCB            equ	3965	;# 
   304   000F7E                     ANSEL           equ	3966	;# 
   305   000F7F                     ANSELH          equ	3967	;# 
   306   000F80                     PORTA           equ	3968	;# 
   307   000F81                     PORTB           equ	3969	;# 
   308   000F82                     PORTC           equ	3970	;# 
   309   000F83                     PORTD           equ	3971	;# 
   310   000F84                     PORTE           equ	3972	;# 
   311   000F89                     LATA            equ	3977	;# 
   312   000F8A                     LATB            equ	3978	;# 
   313   000F8B                     LATC            equ	3979	;# 
   314   000F8C                     LATD            equ	3980	;# 
   315   000F8D                     LATE            equ	3981	;# 
   316   000F92                     TRISA           equ	3986	;# 
   317   000F92                     DDRA            equ	3986	;# 
   318   000F93                     TRISB           equ	3987	;# 
   319   000F93                     DDRB            equ	3987	;# 
   320   000F94                     TRISC           equ	3988	;# 
   321   000F94                     DDRC            equ	3988	;# 
   322   000F95                     TRISD           equ	3989	;# 
   323   000F95                     DDRD            equ	3989	;# 
   324   000F96                     TRISE           equ	3990	;# 
   325   000F96                     DDRE            equ	3990	;# 
   326   000F9B                     OSCTUNE         equ	3995	;# 
   327   000F9D                     PIE1            equ	3997	;# 
   328   000F9E                     PIR1            equ	3998	;# 
   329   000F9F                     IPR1            equ	3999	;# 
   330   000FA0                     PIE2            equ	4000	;# 
   331   000FA1                     PIR2            equ	4001	;# 
   332   000FA2                     IPR2            equ	4002	;# 
   333   000FA6                     EECON1          equ	4006	;# 
   334   000FA7                     EECON2          equ	4007	;# 
   335   000FA8                     EEDATA          equ	4008	;# 
   336   000FA9                     EEADR           equ	4009	;# 
   337   000FAA                     EEADRH          equ	4010	;# 
   338   000FAB                     RCSTA           equ	4011	;# 
   339   000FAB                     RCSTA1          equ	4011	;# 
   340   000FAC                     TXSTA           equ	4012	;# 
   341   000FAC                     TXSTA1          equ	4012	;# 
   342   000FAD                     TXREG           equ	4013	;# 
   343   000FAD                     TXREG1          equ	4013	;# 
   344   000FAE                     RCREG           equ	4014	;# 
   345   000FAE                     RCREG1          equ	4014	;# 
   346   000FAF                     SPBRG           equ	4015	;# 
   347   000FAF                     SPBRG1          equ	4015	;# 
   348   000FB0                     SPBRGH          equ	4016	;# 
   349   000FB1                     T3CON           equ	4017	;# 
   350   000FB2                     TMR3            equ	4018	;# 
   351   000FB2                     TMR3L           equ	4018	;# 
   352   000FB3                     TMR3H           equ	4019	;# 
   353   000FB4                     CVRCON2         equ	4020	;# 
   354   000FB5                     CVRCON          equ	4021	;# 
   355   000FB6                     ECCP1AS         equ	4022	;# 
   356   000FB7                     PWM1CON         equ	4023	;# 
   357   000FB8                     BAUDCON         equ	4024	;# 
   358   000FB8                     BAUDCTL         equ	4024	;# 
   359   000FB9                     PSTRCON         equ	4025	;# 
   360   000FBA                     CCP2CON         equ	4026	;# 
   361   000FBB                     CCPR2           equ	4027	;# 
   362   000FBB                     CCPR2L          equ	4027	;# 
   363   000FBC                     CCPR2H          equ	4028	;# 
   364   000FBD                     CCP1CON         equ	4029	;# 
   365   000FBE                     CCPR1           equ	4030	;# 
   366   000FBE                     CCPR1L          equ	4030	;# 
   367   000FBF                     CCPR1H          equ	4031	;# 
   368   000FC0                     ADCON2          equ	4032	;# 
   369   000FC1                     ADCON1          equ	4033	;# 
   370   000FC2                     ADCON0          equ	4034	;# 
   371   000FC3                     ADRES           equ	4035	;# 
   372   000FC3                     ADRESL          equ	4035	;# 
   373   000FC4                     ADRESH          equ	4036	;# 
   374   000FC5                     SSPCON2         equ	4037	;# 
   375   000FC6                     SSPCON1         equ	4038	;# 
   376   000FC7                     SSPSTAT         equ	4039	;# 
   377   000FC8                     SSPADD          equ	4040	;# 
   378   000FC9                     SSPBUF          equ	4041	;# 
   379   000FCA                     T2CON           equ	4042	;# 
   380   000FCB                     PR2             equ	4043	;# 
   381   000FCB                     MEMCON          equ	4043	;# 
   382   000FCC                     TMR2            equ	4044	;# 
   383   000FCD                     T1CON           equ	4045	;# 
   384   000FCE                     TMR1            equ	4046	;# 
   385   000FCE                     TMR1L           equ	4046	;# 
   386   000FCF                     TMR1H           equ	4047	;# 
   387   000FD0                     RCON            equ	4048	;# 
   388   000FD1                     WDTCON          equ	4049	;# 
   389   000FD2                     HLVDCON         equ	4050	;# 
   390   000FD2                     LVDCON          equ	4050	;# 
   391   000FD3                     OSCCON          equ	4051	;# 
   392   000FD5                     T0CON           equ	4053	;# 
   393   000FD6                     TMR0            equ	4054	;# 
   394   000FD6                     TMR0L           equ	4054	;# 
   395   000FD7                     TMR0H           equ	4055	;# 
   396   000FD8                     STATUS          equ	4056	;# 
   397   000FD9                     FSR2            equ	4057	;# 
   398   000FD9                     FSR2L           equ	4057	;# 
   399   000FDA                     FSR2H           equ	4058	;# 
   400   000FDB                     PLUSW2          equ	4059	;# 
   401   000FDC                     PREINC2         equ	4060	;# 
   402   000FDD                     POSTDEC2        equ	4061	;# 
   403   000FDE                     POSTINC2        equ	4062	;# 
   404   000FDF                     INDF2           equ	4063	;# 
   405   000FE0                     BSR             equ	4064	;# 
   406   000FE1                     FSR1            equ	4065	;# 
   407   000FE1                     FSR1L           equ	4065	;# 
   408   000FE2                     FSR1H           equ	4066	;# 
   409   000FE3                     PLUSW1          equ	4067	;# 
   410   000FE4                     PREINC1         equ	4068	;# 
   411   000FE5                     POSTDEC1        equ	4069	;# 
   412   000FE6                     POSTINC1        equ	4070	;# 
   413   000FE7                     INDF1           equ	4071	;# 
   414   000FE8                     WREG            equ	4072	;# 
   415   000FE9                     FSR0            equ	4073	;# 
   416   000FE9                     FSR0L           equ	4073	;# 
   417   000FEA                     FSR0H           equ	4074	;# 
   418   000FEB                     PLUSW0          equ	4075	;# 
   419   000FEC                     PREINC0         equ	4076	;# 
   420   000FED                     POSTDEC0        equ	4077	;# 
   421   000FEE                     POSTINC0        equ	4078	;# 
   422   000FEF                     INDF0           equ	4079	;# 
   423   000FF0                     INTCON3         equ	4080	;# 
   424   000FF1                     INTCON2         equ	4081	;# 
   425   000FF2                     INTCON          equ	4082	;# 
   426   000FF3                     PROD            equ	4083	;# 
   427   000FF3                     PRODL           equ	4083	;# 
   428   000FF4                     PRODH           equ	4084	;# 
   429   000FF5                     TABLAT          equ	4085	;# 
   430   000FF6                     TBLPTR          equ	4086	;# 
   431   000FF6                     TBLPTRL         equ	4086	;# 
   432   000FF7                     TBLPTRH         equ	4087	;# 
   433   000FF8                     TBLPTRU         equ	4088	;# 
   434   000FF9                     PCLAT           equ	4089	;# 
   435   000FF9                     PC              equ	4089	;# 
   436   000FF9                     PCL             equ	4089	;# 
   437   000FFA                     PCLATH          equ	4090	;# 
   438   000FFB                     PCLATU          equ	4091	;# 
   439   000FFC                     STKPTR          equ	4092	;# 
   440   000FFD                     TOS             equ	4093	;# 
   441   000FFD                     TOSL            equ	4093	;# 
   442   000FFE                     TOSH            equ	4094	;# 
   443   000FFF                     TOSU            equ	4095	;# 
   444   000F77                     SSPMSK          equ	3959	;# 
   445   000F78                     SLRCON          equ	3960	;# 
   446   000F79                     CM2CON1         equ	3961	;# 
   447   000F7A                     CM2CON0         equ	3962	;# 
   448   000F7B                     CM1CON0         equ	3963	;# 
   449   000F7C                     WPUB            equ	3964	;# 
   450   000F7D                     IOCB            equ	3965	;# 
   451   000F7E                     ANSEL           equ	3966	;# 
   452   000F7F                     ANSELH          equ	3967	;# 
   453   000F80                     PORTA           equ	3968	;# 
   454   000F81                     PORTB           equ	3969	;# 
   455   000F82                     PORTC           equ	3970	;# 
   456   000F83                     PORTD           equ	3971	;# 
   457   000F84                     PORTE           equ	3972	;# 
   458   000F89                     LATA            equ	3977	;# 
   459   000F8A                     LATB            equ	3978	;# 
   460   000F8B                     LATC            equ	3979	;# 
   461   000F8C                     LATD            equ	3980	;# 
   462   000F8D                     LATE            equ	3981	;# 
   463   000F92                     TRISA           equ	3986	;# 
   464   000F92                     DDRA            equ	3986	;# 
   465   000F93                     TRISB           equ	3987	;# 
   466   000F93                     DDRB            equ	3987	;# 
   467   000F94                     TRISC           equ	3988	;# 
   468   000F94                     DDRC            equ	3988	;# 
   469   000F95                     TRISD           equ	3989	;# 
   470   000F95                     DDRD            equ	3989	;# 
   471   000F96                     TRISE           equ	3990	;# 
   472   000F96                     DDRE            equ	3990	;# 
   473   000F9B                     OSCTUNE         equ	3995	;# 
   474   000F9D                     PIE1            equ	3997	;# 
   475   000F9E                     PIR1            equ	3998	;# 
   476   000F9F                     IPR1            equ	3999	;# 
   477   000FA0                     PIE2            equ	4000	;# 
   478   000FA1                     PIR2            equ	4001	;# 
   479   000FA2                     IPR2            equ	4002	;# 
   480   000FA6                     EECON1          equ	4006	;# 
   481   000FA7                     EECON2          equ	4007	;# 
   482   000FA8                     EEDATA          equ	4008	;# 
   483   000FA9                     EEADR           equ	4009	;# 
   484   000FAA                     EEADRH          equ	4010	;# 
   485   000FAB                     RCSTA           equ	4011	;# 
   486   000FAB                     RCSTA1          equ	4011	;# 
   487   000FAC                     TXSTA           equ	4012	;# 
   488   000FAC                     TXSTA1          equ	4012	;# 
   489   000FAD                     TXREG           equ	4013	;# 
   490   000FAD                     TXREG1          equ	4013	;# 
   491   000FAE                     RCREG           equ	4014	;# 
   492   000FAE                     RCREG1          equ	4014	;# 
   493   000FAF                     SPBRG           equ	4015	;# 
   494   000FAF                     SPBRG1          equ	4015	;# 
   495   000FB0                     SPBRGH          equ	4016	;# 
   496   000FB1                     T3CON           equ	4017	;# 
   497   000FB2                     TMR3            equ	4018	;# 
   498   000FB2                     TMR3L           equ	4018	;# 
   499   000FB3                     TMR3H           equ	4019	;# 
   500   000FB4                     CVRCON2         equ	4020	;# 
   501   000FB5                     CVRCON          equ	4021	;# 
   502   000FB6                     ECCP1AS         equ	4022	;# 
   503   000FB7                     PWM1CON         equ	4023	;# 
   504   000FB8                     BAUDCON         equ	4024	;# 
   505   000FB8                     BAUDCTL         equ	4024	;# 
   506   000FB9                     PSTRCON         equ	4025	;# 
   507   000FBA                     CCP2CON         equ	4026	;# 
   508   000FBB                     CCPR2           equ	4027	;# 
   509   000FBB                     CCPR2L          equ	4027	;# 
   510   000FBC                     CCPR2H          equ	4028	;# 
   511   000FBD                     CCP1CON         equ	4029	;# 
   512   000FBE                     CCPR1           equ	4030	;# 
   513   000FBE                     CCPR1L          equ	4030	;# 
   514   000FBF                     CCPR1H          equ	4031	;# 
   515   000FC0                     ADCON2          equ	4032	;# 
   516   000FC1                     ADCON1          equ	4033	;# 
   517   000FC2                     ADCON0          equ	4034	;# 
   518   000FC3                     ADRES           equ	4035	;# 
   519   000FC3                     ADRESL          equ	4035	;# 
   520   000FC4                     ADRESH          equ	4036	;# 
   521   000FC5                     SSPCON2         equ	4037	;# 
   522   000FC6                     SSPCON1         equ	4038	;# 
   523   000FC7                     SSPSTAT         equ	4039	;# 
   524   000FC8                     SSPADD          equ	4040	;# 
   525   000FC9                     SSPBUF          equ	4041	;# 
   526   000FCA                     T2CON           equ	4042	;# 
   527   000FCB                     PR2             equ	4043	;# 
   528   000FCB                     MEMCON          equ	4043	;# 
   529   000FCC                     TMR2            equ	4044	;# 
   530   000FCD                     T1CON           equ	4045	;# 
   531   000FCE                     TMR1            equ	4046	;# 
   532   000FCE                     TMR1L           equ	4046	;# 
   533   000FCF                     TMR1H           equ	4047	;# 
   534   000FD0                     RCON            equ	4048	;# 
   535   000FD1                     WDTCON          equ	4049	;# 
   536   000FD2                     HLVDCON         equ	4050	;# 
   537   000FD2                     LVDCON          equ	4050	;# 
   538   000FD3                     OSCCON          equ	4051	;# 
   539   000FD5                     T0CON           equ	4053	;# 
   540   000FD6                     TMR0            equ	4054	;# 
   541   000FD6                     TMR0L           equ	4054	;# 
   542   000FD7                     TMR0H           equ	4055	;# 
   543   000FD8                     STATUS          equ	4056	;# 
   544   000FD9                     FSR2            equ	4057	;# 
   545   000FD9                     FSR2L           equ	4057	;# 
   546   000FDA                     FSR2H           equ	4058	;# 
   547   000FDB                     PLUSW2          equ	4059	;# 
   548   000FDC                     PREINC2         equ	4060	;# 
   549   000FDD                     POSTDEC2        equ	4061	;# 
   550   000FDE                     POSTINC2        equ	4062	;# 
   551   000FDF                     INDF2           equ	4063	;# 
   552   000FE0                     BSR             equ	4064	;# 
   553   000FE1                     FSR1            equ	4065	;# 
   554   000FE1                     FSR1L           equ	4065	;# 
   555   000FE2                     FSR1H           equ	4066	;# 
   556   000FE3                     PLUSW1          equ	4067	;# 
   557   000FE4                     PREINC1         equ	4068	;# 
   558   000FE5                     POSTDEC1        equ	4069	;# 
   559   000FE6                     POSTINC1        equ	4070	;# 
   560   000FE7                     INDF1           equ	4071	;# 
   561   000FE8                     WREG            equ	4072	;# 
   562   000FE9                     FSR0            equ	4073	;# 
   563   000FE9                     FSR0L           equ	4073	;# 
   564   000FEA                     FSR0H           equ	4074	;# 
   565   000FEB                     PLUSW0          equ	4075	;# 
   566   000FEC                     PREINC0         equ	4076	;# 
   567   000FED                     POSTDEC0        equ	4077	;# 
   568   000FEE                     POSTINC0        equ	4078	;# 
   569   000FEF                     INDF0           equ	4079	;# 
   570   000FF0                     INTCON3         equ	4080	;# 
   571   000FF1                     INTCON2         equ	4081	;# 
   572   000FF2                     INTCON          equ	4082	;# 
   573   000FF3                     PROD            equ	4083	;# 
   574   000FF3                     PRODL           equ	4083	;# 
   575   000FF4                     PRODH           equ	4084	;# 
   576   000FF5                     TABLAT          equ	4085	;# 
   577   000FF6                     TBLPTR          equ	4086	;# 
   578   000FF6                     TBLPTRL         equ	4086	;# 
   579   000FF7                     TBLPTRH         equ	4087	;# 
   580   000FF8                     TBLPTRU         equ	4088	;# 
   581   000FF9                     PCLAT           equ	4089	;# 
   582   000FF9                     PC              equ	4089	;# 
   583   000FF9                     PCL             equ	4089	;# 
   584   000FFA                     PCLATH          equ	4090	;# 
   585   000FFB                     PCLATU          equ	4091	;# 
   586   000FFC                     STKPTR          equ	4092	;# 
   587   000FFD                     TOS             equ	4093	;# 
   588   000FFD                     TOSL            equ	4093	;# 
   589   000FFE                     TOSH            equ	4094	;# 
   590   000FFF                     TOSU            equ	4095	;# 
   591   000F77                     SSPMSK          equ	3959	;# 
   592   000F78                     SLRCON          equ	3960	;# 
   593   000F79                     CM2CON1         equ	3961	;# 
   594   000F7A                     CM2CON0         equ	3962	;# 
   595   000F7B                     CM1CON0         equ	3963	;# 
   596   000F7C                     WPUB            equ	3964	;# 
   597   000F7D                     IOCB            equ	3965	;# 
   598   000F7E                     ANSEL           equ	3966	;# 
   599   000F7F                     ANSELH          equ	3967	;# 
   600   000F80                     PORTA           equ	3968	;# 
   601   000F81                     PORTB           equ	3969	;# 
   602   000F82                     PORTC           equ	3970	;# 
   603   000F83                     PORTD           equ	3971	;# 
   604   000F84                     PORTE           equ	3972	;# 
   605   000F89                     LATA            equ	3977	;# 
   606   000F8A                     LATB            equ	3978	;# 
   607   000F8B                     LATC            equ	3979	;# 
   608   000F8C                     LATD            equ	3980	;# 
   609   000F8D                     LATE            equ	3981	;# 
   610   000F92                     TRISA           equ	3986	;# 
   611   000F92                     DDRA            equ	3986	;# 
   612   000F93                     TRISB           equ	3987	;# 
   613   000F93                     DDRB            equ	3987	;# 
   614   000F94                     TRISC           equ	3988	;# 
   615   000F94                     DDRC            equ	3988	;# 
   616   000F95                     TRISD           equ	3989	;# 
   617   000F95                     DDRD            equ	3989	;# 
   618   000F96                     TRISE           equ	3990	;# 
   619   000F96                     DDRE            equ	3990	;# 
   620   000F9B                     OSCTUNE         equ	3995	;# 
   621   000F9D                     PIE1            equ	3997	;# 
   622   000F9E                     PIR1            equ	3998	;# 
   623   000F9F                     IPR1            equ	3999	;# 
   624   000FA0                     PIE2            equ	4000	;# 
   625   000FA1                     PIR2            equ	4001	;# 
   626   000FA2                     IPR2            equ	4002	;# 
   627   000FA6                     EECON1          equ	4006	;# 
   628   000FA7                     EECON2          equ	4007	;# 
   629   000FA8                     EEDATA          equ	4008	;# 
   630   000FA9                     EEADR           equ	4009	;# 
   631   000FAA                     EEADRH          equ	4010	;# 
   632   000FAB                     RCSTA           equ	4011	;# 
   633   000FAB                     RCSTA1          equ	4011	;# 
   634   000FAC                     TXSTA           equ	4012	;# 
   635   000FAC                     TXSTA1          equ	4012	;# 
   636   000FAD                     TXREG           equ	4013	;# 
   637   000FAD                     TXREG1          equ	4013	;# 
   638   000FAE                     RCREG           equ	4014	;# 
   639   000FAE                     RCREG1          equ	4014	;# 
   640   000FAF                     SPBRG           equ	4015	;# 
   641   000FAF                     SPBRG1          equ	4015	;# 
   642   000FB0                     SPBRGH          equ	4016	;# 
   643   000FB1                     T3CON           equ	4017	;# 
   644   000FB2                     TMR3            equ	4018	;# 
   645   000FB2                     TMR3L           equ	4018	;# 
   646   000FB3                     TMR3H           equ	4019	;# 
   647   000FB4                     CVRCON2         equ	4020	;# 
   648   000FB5                     CVRCON          equ	4021	;# 
   649   000FB6                     ECCP1AS         equ	4022	;# 
   650   000FB7                     PWM1CON         equ	4023	;# 
   651   000FB8                     BAUDCON         equ	4024	;# 
   652   000FB8                     BAUDCTL         equ	4024	;# 
   653   000FB9                     PSTRCON         equ	4025	;# 
   654   000FBA                     CCP2CON         equ	4026	;# 
   655   000FBB                     CCPR2           equ	4027	;# 
   656   000FBB                     CCPR2L          equ	4027	;# 
   657   000FBC                     CCPR2H          equ	4028	;# 
   658   000FBD                     CCP1CON         equ	4029	;# 
   659   000FBE                     CCPR1           equ	4030	;# 
   660   000FBE                     CCPR1L          equ	4030	;# 
   661   000FBF                     CCPR1H          equ	4031	;# 
   662   000FC0                     ADCON2          equ	4032	;# 
   663   000FC1                     ADCON1          equ	4033	;# 
   664   000FC2                     ADCON0          equ	4034	;# 
   665   000FC3                     ADRES           equ	4035	;# 
   666   000FC3                     ADRESL          equ	4035	;# 
   667   000FC4                     ADRESH          equ	4036	;# 
   668   000FC5                     SSPCON2         equ	4037	;# 
   669   000FC6                     SSPCON1         equ	4038	;# 
   670   000FC7                     SSPSTAT         equ	4039	;# 
   671   000FC8                     SSPADD          equ	4040	;# 
   672   000FC9                     SSPBUF          equ	4041	;# 
   673   000FCA                     T2CON           equ	4042	;# 
   674   000FCB                     PR2             equ	4043	;# 
   675   000FCB                     MEMCON          equ	4043	;# 
   676   000FCC                     TMR2            equ	4044	;# 
   677   000FCD                     T1CON           equ	4045	;# 
   678   000FCE                     TMR1            equ	4046	;# 
   679   000FCE                     TMR1L           equ	4046	;# 
   680   000FCF                     TMR1H           equ	4047	;# 
   681   000FD0                     RCON            equ	4048	;# 
   682   000FD1                     WDTCON          equ	4049	;# 
   683   000FD2                     HLVDCON         equ	4050	;# 
   684   000FD2                     LVDCON          equ	4050	;# 
   685   000FD3                     OSCCON          equ	4051	;# 
   686   000FD5                     T0CON           equ	4053	;# 
   687   000FD6                     TMR0            equ	4054	;# 
   688   000FD6                     TMR0L           equ	4054	;# 
   689   000FD7                     TMR0H           equ	4055	;# 
   690   000FD8                     STATUS          equ	4056	;# 
   691   000FD9                     FSR2            equ	4057	;# 
   692   000FD9                     FSR2L           equ	4057	;# 
   693   000FDA                     FSR2H           equ	4058	;# 
   694   000FDB                     PLUSW2          equ	4059	;# 
   695   000FDC                     PREINC2         equ	4060	;# 
   696   000FDD                     POSTDEC2        equ	4061	;# 
   697   000FDE                     POSTINC2        equ	4062	;# 
   698   000FDF                     INDF2           equ	4063	;# 
   699   000FE0                     BSR             equ	4064	;# 
   700   000FE1                     FSR1            equ	4065	;# 
   701   000FE1                     FSR1L           equ	4065	;# 
   702   000FE2                     FSR1H           equ	4066	;# 
   703   000FE3                     PLUSW1          equ	4067	;# 
   704   000FE4                     PREINC1         equ	4068	;# 
   705   000FE5                     POSTDEC1        equ	4069	;# 
   706   000FE6                     POSTINC1        equ	4070	;# 
   707   000FE7                     INDF1           equ	4071	;# 
   708   000FE8                     WREG            equ	4072	;# 
   709   000FE9                     FSR0            equ	4073	;# 
   710   000FE9                     FSR0L           equ	4073	;# 
   711   000FEA                     FSR0H           equ	4074	;# 
   712   000FEB                     PLUSW0          equ	4075	;# 
   713   000FEC                     PREINC0         equ	4076	;# 
   714   000FED                     POSTDEC0        equ	4077	;# 
   715   000FEE                     POSTINC0        equ	4078	;# 
   716   000FEF                     INDF0           equ	4079	;# 
   717   000FF0                     INTCON3         equ	4080	;# 
   718   000FF1                     INTCON2         equ	4081	;# 
   719   000FF2                     INTCON          equ	4082	;# 
   720   000FF3                     PROD            equ	4083	;# 
   721   000FF3                     PRODL           equ	4083	;# 
   722   000FF4                     PRODH           equ	4084	;# 
   723   000FF5                     TABLAT          equ	4085	;# 
   724   000FF6                     TBLPTR          equ	4086	;# 
   725   000FF6                     TBLPTRL         equ	4086	;# 
   726   000FF7                     TBLPTRH         equ	4087	;# 
   727   000FF8                     TBLPTRU         equ	4088	;# 
   728   000FF9                     PCLAT           equ	4089	;# 
   729   000FF9                     PC              equ	4089	;# 
   730   000FF9                     PCL             equ	4089	;# 
   731   000FFA                     PCLATH          equ	4090	;# 
   732   000FFB                     PCLATU          equ	4091	;# 
   733   000FFC                     STKPTR          equ	4092	;# 
   734   000FFD                     TOS             equ	4093	;# 
   735   000FFD                     TOSL            equ	4093	;# 
   736   000FFE                     TOSH            equ	4094	;# 
   737   000FFF                     TOSU            equ	4095	;# 
   738   000F77                     SSPMSK          equ	3959	;# 
   739   000F78                     SLRCON          equ	3960	;# 
   740   000F79                     CM2CON1         equ	3961	;# 
   741   000F7A                     CM2CON0         equ	3962	;# 
   742   000F7B                     CM1CON0         equ	3963	;# 
   743   000F7C                     WPUB            equ	3964	;# 
   744   000F7D                     IOCB            equ	3965	;# 
   745   000F7E                     ANSEL           equ	3966	;# 
   746   000F7F                     ANSELH          equ	3967	;# 
   747   000F80                     PORTA           equ	3968	;# 
   748   000F81                     PORTB           equ	3969	;# 
   749   000F82                     PORTC           equ	3970	;# 
   750   000F83                     PORTD           equ	3971	;# 
   751   000F84                     PORTE           equ	3972	;# 
   752   000F89                     LATA            equ	3977	;# 
   753   000F8A                     LATB            equ	3978	;# 
   754   000F8B                     LATC            equ	3979	;# 
   755   000F8C                     LATD            equ	3980	;# 
   756   000F8D                     LATE            equ	3981	;# 
   757   000F92                     TRISA           equ	3986	;# 
   758   000F92                     DDRA            equ	3986	;# 
   759   000F93                     TRISB           equ	3987	;# 
   760   000F93                     DDRB            equ	3987	;# 
   761   000F94                     TRISC           equ	3988	;# 
   762   000F94                     DDRC            equ	3988	;# 
   763   000F95                     TRISD           equ	3989	;# 
   764   000F95                     DDRD            equ	3989	;# 
   765   000F96                     TRISE           equ	3990	;# 
   766   000F96                     DDRE            equ	3990	;# 
   767   000F9B                     OSCTUNE         equ	3995	;# 
   768   000F9D                     PIE1            equ	3997	;# 
   769   000F9E                     PIR1            equ	3998	;# 
   770   000F9F                     IPR1            equ	3999	;# 
   771   000FA0                     PIE2            equ	4000	;# 
   772   000FA1                     PIR2            equ	4001	;# 
   773   000FA2                     IPR2            equ	4002	;# 
   774   000FA6                     EECON1          equ	4006	;# 
   775   000FA7                     EECON2          equ	4007	;# 
   776   000FA8                     EEDATA          equ	4008	;# 
   777   000FA9                     EEADR           equ	4009	;# 
   778   000FAA                     EEADRH          equ	4010	;# 
   779   000FAB                     RCSTA           equ	4011	;# 
   780   000FAB                     RCSTA1          equ	4011	;# 
   781   000FAC                     TXSTA           equ	4012	;# 
   782   000FAC                     TXSTA1          equ	4012	;# 
   783   000FAD                     TXREG           equ	4013	;# 
   784   000FAD                     TXREG1          equ	4013	;# 
   785   000FAE                     RCREG           equ	4014	;# 
   786   000FAE                     RCREG1          equ	4014	;# 
   787   000FAF                     SPBRG           equ	4015	;# 
   788   000FAF                     SPBRG1          equ	4015	;# 
   789   000FB0                     SPBRGH          equ	4016	;# 
   790   000FB1                     T3CON           equ	4017	;# 
   791   000FB2                     TMR3            equ	4018	;# 
   792   000FB2                     TMR3L           equ	4018	;# 
   793   000FB3                     TMR3H           equ	4019	;# 
   794   000FB4                     CVRCON2         equ	4020	;# 
   795   000FB5                     CVRCON          equ	4021	;# 
   796   000FB6                     ECCP1AS         equ	4022	;# 
   797   000FB7                     PWM1CON         equ	4023	;# 
   798   000FB8                     BAUDCON         equ	4024	;# 
   799   000FB8                     BAUDCTL         equ	4024	;# 
   800   000FB9                     PSTRCON         equ	4025	;# 
   801   000FBA                     CCP2CON         equ	4026	;# 
   802   000FBB                     CCPR2           equ	4027	;# 
   803   000FBB                     CCPR2L          equ	4027	;# 
   804   000FBC                     CCPR2H          equ	4028	;# 
   805   000FBD                     CCP1CON         equ	4029	;# 
   806   000FBE                     CCPR1           equ	4030	;# 
   807   000FBE                     CCPR1L          equ	4030	;# 
   808   000FBF                     CCPR1H          equ	4031	;# 
   809   000FC0                     ADCON2          equ	4032	;# 
   810   000FC1                     ADCON1          equ	4033	;# 
   811   000FC2                     ADCON0          equ	4034	;# 
   812   000FC3                     ADRES           equ	4035	;# 
   813   000FC3                     ADRESL          equ	4035	;# 
   814   000FC4                     ADRESH          equ	4036	;# 
   815   000FC5                     SSPCON2         equ	4037	;# 
   816   000FC6                     SSPCON1         equ	4038	;# 
   817   000FC7                     SSPSTAT         equ	4039	;# 
   818   000FC8                     SSPADD          equ	4040	;# 
   819   000FC9                     SSPBUF          equ	4041	;# 
   820   000FCA                     T2CON           equ	4042	;# 
   821   000FCB                     PR2             equ	4043	;# 
   822   000FCB                     MEMCON          equ	4043	;# 
   823   000FCC                     TMR2            equ	4044	;# 
   824   000FCD                     T1CON           equ	4045	;# 
   825   000FCE                     TMR1            equ	4046	;# 
   826   000FCE                     TMR1L           equ	4046	;# 
   827   000FCF                     TMR1H           equ	4047	;# 
   828   000FD0                     RCON            equ	4048	;# 
   829   000FD1                     WDTCON          equ	4049	;# 
   830   000FD2                     HLVDCON         equ	4050	;# 
   831   000FD2                     LVDCON          equ	4050	;# 
   832   000FD3                     OSCCON          equ	4051	;# 
   833   000FD5                     T0CON           equ	4053	;# 
   834   000FD6                     TMR0            equ	4054	;# 
   835   000FD6                     TMR0L           equ	4054	;# 
   836   000FD7                     TMR0H           equ	4055	;# 
   837   000FD8                     STATUS          equ	4056	;# 
   838   000FD9                     FSR2            equ	4057	;# 
   839   000FD9                     FSR2L           equ	4057	;# 
   840   000FDA                     FSR2H           equ	4058	;# 
   841   000FDB                     PLUSW2          equ	4059	;# 
   842   000FDC                     PREINC2         equ	4060	;# 
   843   000FDD                     POSTDEC2        equ	4061	;# 
   844   000FDE                     POSTINC2        equ	4062	;# 
   845   000FDF                     INDF2           equ	4063	;# 
   846   000FE0                     BSR             equ	4064	;# 
   847   000FE1                     FSR1            equ	4065	;# 
   848   000FE1                     FSR1L           equ	4065	;# 
   849   000FE2                     FSR1H           equ	4066	;# 
   850   000FE3                     PLUSW1          equ	4067	;# 
   851   000FE4                     PREINC1         equ	4068	;# 
   852   000FE5                     POSTDEC1        equ	4069	;# 
   853   000FE6                     POSTINC1        equ	4070	;# 
   854   000FE7                     INDF1           equ	4071	;# 
   855   000FE8                     WREG            equ	4072	;# 
   856   000FE9                     FSR0            equ	4073	;# 
   857   000FE9                     FSR0L           equ	4073	;# 
   858   000FEA                     FSR0H           equ	4074	;# 
   859   000FEB                     PLUSW0          equ	4075	;# 
   860   000FEC                     PREINC0         equ	4076	;# 
   861   000FED                     POSTDEC0        equ	4077	;# 
   862   000FEE                     POSTINC0        equ	4078	;# 
   863   000FEF                     INDF0           equ	4079	;# 
   864   000FF0                     INTCON3         equ	4080	;# 
   865   000FF1                     INTCON2         equ	4081	;# 
   866   000FF2                     INTCON          equ	4082	;# 
   867   000FF3                     PROD            equ	4083	;# 
   868   000FF3                     PRODL           equ	4083	;# 
   869   000FF4                     PRODH           equ	4084	;# 
   870   000FF5                     TABLAT          equ	4085	;# 
   871   000FF6                     TBLPTR          equ	4086	;# 
   872   000FF6                     TBLPTRL         equ	4086	;# 
   873   000FF7                     TBLPTRH         equ	4087	;# 
   874   000FF8                     TBLPTRU         equ	4088	;# 
   875   000FF9                     PCLAT           equ	4089	;# 
   876   000FF9                     PC              equ	4089	;# 
   877   000FF9                     PCL             equ	4089	;# 
   878   000FFA                     PCLATH          equ	4090	;# 
   879   000FFB                     PCLATU          equ	4091	;# 
   880   000FFC                     STKPTR          equ	4092	;# 
   881   000FFD                     TOS             equ	4093	;# 
   882   000FFD                     TOSL            equ	4093	;# 
   883   000FFE                     TOSH            equ	4094	;# 
   884   000FFF                     TOSU            equ	4095	;# 
   885   000F77                     SSPMSK          equ	3959	;# 
   886   000F78                     SLRCON          equ	3960	;# 
   887   000F79                     CM2CON1         equ	3961	;# 
   888   000F7A                     CM2CON0         equ	3962	;# 
   889   000F7B                     CM1CON0         equ	3963	;# 
   890   000F7C                     WPUB            equ	3964	;# 
   891   000F7D                     IOCB            equ	3965	;# 
   892   000F7E                     ANSEL           equ	3966	;# 
   893   000F7F                     ANSELH          equ	3967	;# 
   894   000F80                     PORTA           equ	3968	;# 
   895   000F81                     PORTB           equ	3969	;# 
   896   000F82                     PORTC           equ	3970	;# 
   897   000F83                     PORTD           equ	3971	;# 
   898   000F84                     PORTE           equ	3972	;# 
   899   000F89                     LATA            equ	3977	;# 
   900   000F8A                     LATB            equ	3978	;# 
   901   000F8B                     LATC            equ	3979	;# 
   902   000F8C                     LATD            equ	3980	;# 
   903   000F8D                     LATE            equ	3981	;# 
   904   000F92                     TRISA           equ	3986	;# 
   905   000F92                     DDRA            equ	3986	;# 
   906   000F93                     TRISB           equ	3987	;# 
   907   000F93                     DDRB            equ	3987	;# 
   908   000F94                     TRISC           equ	3988	;# 
   909   000F94                     DDRC            equ	3988	;# 
   910   000F95                     TRISD           equ	3989	;# 
   911   000F95                     DDRD            equ	3989	;# 
   912   000F96                     TRISE           equ	3990	;# 
   913   000F96                     DDRE            equ	3990	;# 
   914   000F9B                     OSCTUNE         equ	3995	;# 
   915   000F9D                     PIE1            equ	3997	;# 
   916   000F9E                     PIR1            equ	3998	;# 
   917   000F9F                     IPR1            equ	3999	;# 
   918   000FA0                     PIE2            equ	4000	;# 
   919   000FA1                     PIR2            equ	4001	;# 
   920   000FA2                     IPR2            equ	4002	;# 
   921   000FA6                     EECON1          equ	4006	;# 
   922   000FA7                     EECON2          equ	4007	;# 
   923   000FA8                     EEDATA          equ	4008	;# 
   924   000FA9                     EEADR           equ	4009	;# 
   925   000FAA                     EEADRH          equ	4010	;# 
   926   000FAB                     RCSTA           equ	4011	;# 
   927   000FAB                     RCSTA1          equ	4011	;# 
   928   000FAC                     TXSTA           equ	4012	;# 
   929   000FAC                     TXSTA1          equ	4012	;# 
   930   000FAD                     TXREG           equ	4013	;# 
   931   000FAD                     TXREG1          equ	4013	;# 
   932   000FAE                     RCREG           equ	4014	;# 
   933   000FAE                     RCREG1          equ	4014	;# 
   934   000FAF                     SPBRG           equ	4015	;# 
   935   000FAF                     SPBRG1          equ	4015	;# 
   936   000FB0                     SPBRGH          equ	4016	;# 
   937   000FB1                     T3CON           equ	4017	;# 
   938   000FB2                     TMR3            equ	4018	;# 
   939   000FB2                     TMR3L           equ	4018	;# 
   940   000FB3                     TMR3H           equ	4019	;# 
   941   000FB4                     CVRCON2         equ	4020	;# 
   942   000FB5                     CVRCON          equ	4021	;# 
   943   000FB6                     ECCP1AS         equ	4022	;# 
   944   000FB7                     PWM1CON         equ	4023	;# 
   945   000FB8                     BAUDCON         equ	4024	;# 
   946   000FB8                     BAUDCTL         equ	4024	;# 
   947   000FB9                     PSTRCON         equ	4025	;# 
   948   000FBA                     CCP2CON         equ	4026	;# 
   949   000FBB                     CCPR2           equ	4027	;# 
   950   000FBB                     CCPR2L          equ	4027	;# 
   951   000FBC                     CCPR2H          equ	4028	;# 
   952   000FBD                     CCP1CON         equ	4029	;# 
   953   000FBE                     CCPR1           equ	4030	;# 
   954   000FBE                     CCPR1L          equ	4030	;# 
   955   000FBF                     CCPR1H          equ	4031	;# 
   956   000FC0                     ADCON2          equ	4032	;# 
   957   000FC1                     ADCON1          equ	4033	;# 
   958   000FC2                     ADCON0          equ	4034	;# 
   959   000FC3                     ADRES           equ	4035	;# 
   960   000FC3                     ADRESL          equ	4035	;# 
   961   000FC4                     ADRESH          equ	4036	;# 
   962   000FC5                     SSPCON2         equ	4037	;# 
   963   000FC6                     SSPCON1         equ	4038	;# 
   964   000FC7                     SSPSTAT         equ	4039	;# 
   965   000FC8                     SSPADD          equ	4040	;# 
   966   000FC9                     SSPBUF          equ	4041	;# 
   967   000FCA                     T2CON           equ	4042	;# 
   968   000FCB                     PR2             equ	4043	;# 
   969   000FCB                     MEMCON          equ	4043	;# 
   970   000FCC                     TMR2            equ	4044	;# 
   971   000FCD                     T1CON           equ	4045	;# 
   972   000FCE                     TMR1            equ	4046	;# 
   973   000FCE                     TMR1L           equ	4046	;# 
   974   000FCF                     TMR1H           equ	4047	;# 
   975   000FD0                     RCON            equ	4048	;# 
   976   000FD1                     WDTCON          equ	4049	;# 
   977   000FD2                     HLVDCON         equ	4050	;# 
   978   000FD2                     LVDCON          equ	4050	;# 
   979   000FD3                     OSCCON          equ	4051	;# 
   980   000FD5                     T0CON           equ	4053	;# 
   981   000FD6                     TMR0            equ	4054	;# 
   982   000FD6                     TMR0L           equ	4054	;# 
   983   000FD7                     TMR0H           equ	4055	;# 
   984   000FD8                     STATUS          equ	4056	;# 
   985   000FD9                     FSR2            equ	4057	;# 
   986   000FD9                     FSR2L           equ	4057	;# 
   987   000FDA                     FSR2H           equ	4058	;# 
   988   000FDB                     PLUSW2          equ	4059	;# 
   989   000FDC                     PREINC2         equ	4060	;# 
   990   000FDD                     POSTDEC2        equ	4061	;# 
   991   000FDE                     POSTINC2        equ	4062	;# 
   992   000FDF                     INDF2           equ	4063	;# 
   993   000FE0                     BSR             equ	4064	;# 
   994   000FE1                     FSR1            equ	4065	;# 
   995   000FE1                     FSR1L           equ	4065	;# 
   996   000FE2                     FSR1H           equ	4066	;# 
   997   000FE3                     PLUSW1          equ	4067	;# 
   998   000FE4                     PREINC1         equ	4068	;# 
   999   000FE5                     POSTDEC1        equ	4069	;# 
  1000   000FE6                     POSTINC1        equ	4070	;# 
  1001   000FE7                     INDF1           equ	4071	;# 
  1002   000FE8                     WREG            equ	4072	;# 
  1003   000FE9                     FSR0            equ	4073	;# 
  1004   000FE9                     FSR0L           equ	4073	;# 
  1005   000FEA                     FSR0H           equ	4074	;# 
  1006   000FEB                     PLUSW0          equ	4075	;# 
  1007   000FEC                     PREINC0         equ	4076	;# 
  1008   000FED                     POSTDEC0        equ	4077	;# 
  1009   000FEE                     POSTINC0        equ	4078	;# 
  1010   000FEF                     INDF0           equ	4079	;# 
  1011   000FF0                     INTCON3         equ	4080	;# 
  1012   000FF1                     INTCON2         equ	4081	;# 
  1013   000FF2                     INTCON          equ	4082	;# 
  1014   000FF3                     PROD            equ	4083	;# 
  1015   000FF3                     PRODL           equ	4083	;# 
  1016   000FF4                     PRODH           equ	4084	;# 
  1017   000FF5                     TABLAT          equ	4085	;# 
  1018   000FF6                     TBLPTR          equ	4086	;# 
  1019   000FF6                     TBLPTRL         equ	4086	;# 
  1020   000FF7                     TBLPTRH         equ	4087	;# 
  1021   000FF8                     TBLPTRU         equ	4088	;# 
  1022   000FF9                     PCLAT           equ	4089	;# 
  1023   000FF9                     PC              equ	4089	;# 
  1024   000FF9                     PCL             equ	4089	;# 
  1025   000FFA                     PCLATH          equ	4090	;# 
  1026   000FFB                     PCLATU          equ	4091	;# 
  1027   000FFC                     STKPTR          equ	4092	;# 
  1028   000FFD                     TOS             equ	4093	;# 
  1029   000FFD                     TOSL            equ	4093	;# 
  1030   000FFE                     TOSH            equ	4094	;# 
  1031   000FFF                     TOSU            equ	4095	;# 
  1032   000F77                     SSPMSK          equ	3959	;# 
  1033   000F78                     SLRCON          equ	3960	;# 
  1034   000F79                     CM2CON1         equ	3961	;# 
  1035   000F7A                     CM2CON0         equ	3962	;# 
  1036   000F7B                     CM1CON0         equ	3963	;# 
  1037   000F7C                     WPUB            equ	3964	;# 
  1038   000F7D                     IOCB            equ	3965	;# 
  1039   000F7E                     ANSEL           equ	3966	;# 
  1040   000F7F                     ANSELH          equ	3967	;# 
  1041   000F80                     PORTA           equ	3968	;# 
  1042   000F81                     PORTB           equ	3969	;# 
  1043   000F82                     PORTC           equ	3970	;# 
  1044   000F83                     PORTD           equ	3971	;# 
  1045   000F84                     PORTE           equ	3972	;# 
  1046   000F89                     LATA            equ	3977	;# 
  1047   000F8A                     LATB            equ	3978	;# 
  1048   000F8B                     LATC            equ	3979	;# 
  1049   000F8C                     LATD            equ	3980	;# 
  1050   000F8D                     LATE            equ	3981	;# 
  1051   000F92                     TRISA           equ	3986	;# 
  1052   000F92                     DDRA            equ	3986	;# 
  1053   000F93                     TRISB           equ	3987	;# 
  1054   000F93                     DDRB            equ	3987	;# 
  1055   000F94                     TRISC           equ	3988	;# 
  1056   000F94                     DDRC            equ	3988	;# 
  1057   000F95                     TRISD           equ	3989	;# 
  1058   000F95                     DDRD            equ	3989	;# 
  1059   000F96                     TRISE           equ	3990	;# 
  1060   000F96                     DDRE            equ	3990	;# 
  1061   000F9B                     OSCTUNE         equ	3995	;# 
  1062   000F9D                     PIE1            equ	3997	;# 
  1063   000F9E                     PIR1            equ	3998	;# 
  1064   000F9F                     IPR1            equ	3999	;# 
  1065   000FA0                     PIE2            equ	4000	;# 
  1066   000FA1                     PIR2            equ	4001	;# 
  1067   000FA2                     IPR2            equ	4002	;# 
  1068   000FA6                     EECON1          equ	4006	;# 
  1069   000FA7                     EECON2          equ	4007	;# 
  1070   000FA8                     EEDATA          equ	4008	;# 
  1071   000FA9                     EEADR           equ	4009	;# 
  1072   000FAA                     EEADRH          equ	4010	;# 
  1073   000FAB                     RCSTA           equ	4011	;# 
  1074   000FAB                     RCSTA1          equ	4011	;# 
  1075   000FAC                     TXSTA           equ	4012	;# 
  1076   000FAC                     TXSTA1          equ	4012	;# 
  1077   000FAD                     TXREG           equ	4013	;# 
  1078   000FAD                     TXREG1          equ	4013	;# 
  1079   000FAE                     RCREG           equ	4014	;# 
  1080   000FAE                     RCREG1          equ	4014	;# 
  1081   000FAF                     SPBRG           equ	4015	;# 
  1082   000FAF                     SPBRG1          equ	4015	;# 
  1083   000FB0                     SPBRGH          equ	4016	;# 
  1084   000FB1                     T3CON           equ	4017	;# 
  1085   000FB2                     TMR3            equ	4018	;# 
  1086   000FB2                     TMR3L           equ	4018	;# 
  1087   000FB3                     TMR3H           equ	4019	;# 
  1088   000FB4                     CVRCON2         equ	4020	;# 
  1089   000FB5                     CVRCON          equ	4021	;# 
  1090   000FB6                     ECCP1AS         equ	4022	;# 
  1091   000FB7                     PWM1CON         equ	4023	;# 
  1092   000FB8                     BAUDCON         equ	4024	;# 
  1093   000FB8                     BAUDCTL         equ	4024	;# 
  1094   000FB9                     PSTRCON         equ	4025	;# 
  1095   000FBA                     CCP2CON         equ	4026	;# 
  1096   000FBB                     CCPR2           equ	4027	;# 
  1097   000FBB                     CCPR2L          equ	4027	;# 
  1098   000FBC                     CCPR2H          equ	4028	;# 
  1099   000FBD                     CCP1CON         equ	4029	;# 
  1100   000FBE                     CCPR1           equ	4030	;# 
  1101   000FBE                     CCPR1L          equ	4030	;# 
  1102   000FBF                     CCPR1H          equ	4031	;# 
  1103   000FC0                     ADCON2          equ	4032	;# 
  1104   000FC1                     ADCON1          equ	4033	;# 
  1105   000FC2                     ADCON0          equ	4034	;# 
  1106   000FC3                     ADRES           equ	4035	;# 
  1107   000FC3                     ADRESL          equ	4035	;# 
  1108   000FC4                     ADRESH          equ	4036	;# 
  1109   000FC5                     SSPCON2         equ	4037	;# 
  1110   000FC6                     SSPCON1         equ	4038	;# 
  1111   000FC7                     SSPSTAT         equ	4039	;# 
  1112   000FC8                     SSPADD          equ	4040	;# 
  1113   000FC9                     SSPBUF          equ	4041	;# 
  1114   000FCA                     T2CON           equ	4042	;# 
  1115   000FCB                     PR2             equ	4043	;# 
  1116   000FCB                     MEMCON          equ	4043	;# 
  1117   000FCC                     TMR2            equ	4044	;# 
  1118   000FCD                     T1CON           equ	4045	;# 
  1119   000FCE                     TMR1            equ	4046	;# 
  1120   000FCE                     TMR1L           equ	4046	;# 
  1121   000FCF                     TMR1H           equ	4047	;# 
  1122   000FD0                     RCON            equ	4048	;# 
  1123   000FD1                     WDTCON          equ	4049	;# 
  1124   000FD2                     HLVDCON         equ	4050	;# 
  1125   000FD2                     LVDCON          equ	4050	;# 
  1126   000FD3                     OSCCON          equ	4051	;# 
  1127   000FD5                     T0CON           equ	4053	;# 
  1128   000FD6                     TMR0            equ	4054	;# 
  1129   000FD6                     TMR0L           equ	4054	;# 
  1130   000FD7                     TMR0H           equ	4055	;# 
  1131   000FD8                     STATUS          equ	4056	;# 
  1132   000FD9                     FSR2            equ	4057	;# 
  1133   000FD9                     FSR2L           equ	4057	;# 
  1134   000FDA                     FSR2H           equ	4058	;# 
  1135   000FDB                     PLUSW2          equ	4059	;# 
  1136   000FDC                     PREINC2         equ	4060	;# 
  1137   000FDD                     POSTDEC2        equ	4061	;# 
  1138   000FDE                     POSTINC2        equ	4062	;# 
  1139   000FDF                     INDF2           equ	4063	;# 
  1140   000FE0                     BSR             equ	4064	;# 
  1141   000FE1                     FSR1            equ	4065	;# 
  1142   000FE1                     FSR1L           equ	4065	;# 
  1143   000FE2                     FSR1H           equ	4066	;# 
  1144   000FE3                     PLUSW1          equ	4067	;# 
  1145   000FE4                     PREINC1         equ	4068	;# 
  1146   000FE5                     POSTDEC1        equ	4069	;# 
  1147   000FE6                     POSTINC1        equ	4070	;# 
  1148   000FE7                     INDF1           equ	4071	;# 
  1149   000FE8                     WREG            equ	4072	;# 
  1150   000FE9                     FSR0            equ	4073	;# 
  1151   000FE9                     FSR0L           equ	4073	;# 
  1152   000FEA                     FSR0H           equ	4074	;# 
  1153   000FEB                     PLUSW0          equ	4075	;# 
  1154   000FEC                     PREINC0         equ	4076	;# 
  1155   000FED                     POSTDEC0        equ	4077	;# 
  1156   000FEE                     POSTINC0        equ	4078	;# 
  1157   000FEF                     INDF0           equ	4079	;# 
  1158   000FF0                     INTCON3         equ	4080	;# 
  1159   000FF1                     INTCON2         equ	4081	;# 
  1160   000FF2                     INTCON          equ	4082	;# 
  1161   000FF3                     PROD            equ	4083	;# 
  1162   000FF3                     PRODL           equ	4083	;# 
  1163   000FF4                     PRODH           equ	4084	;# 
  1164   000FF5                     TABLAT          equ	4085	;# 
  1165   000FF6                     TBLPTR          equ	4086	;# 
  1166   000FF6                     TBLPTRL         equ	4086	;# 
  1167   000FF7                     TBLPTRH         equ	4087	;# 
  1168   000FF8                     TBLPTRU         equ	4088	;# 
  1169   000FF9                     PCLAT           equ	4089	;# 
  1170   000FF9                     PC              equ	4089	;# 
  1171   000FF9                     PCL             equ	4089	;# 
  1172   000FFA                     PCLATH          equ	4090	;# 
  1173   000FFB                     PCLATU          equ	4091	;# 
  1174   000FFC                     STKPTR          equ	4092	;# 
  1175   000FFD                     TOS             equ	4093	;# 
  1176   000FFD                     TOSL            equ	4093	;# 
  1177   000FFE                     TOSH            equ	4094	;# 
  1178   000FFF                     TOSU            equ	4095	;# 
  1179   000F77                     SSPMSK          equ	3959	;# 
  1180   000F78                     SLRCON          equ	3960	;# 
  1181   000F79                     CM2CON1         equ	3961	;# 
  1182   000F7A                     CM2CON0         equ	3962	;# 
  1183   000F7B                     CM1CON0         equ	3963	;# 
  1184   000F7C                     WPUB            equ	3964	;# 
  1185   000F7D                     IOCB            equ	3965	;# 
  1186   000F7E                     ANSEL           equ	3966	;# 
  1187   000F7F                     ANSELH          equ	3967	;# 
  1188   000F80                     PORTA           equ	3968	;# 
  1189   000F81                     PORTB           equ	3969	;# 
  1190   000F82                     PORTC           equ	3970	;# 
  1191   000F83                     PORTD           equ	3971	;# 
  1192   000F84                     PORTE           equ	3972	;# 
  1193   000F89                     LATA            equ	3977	;# 
  1194   000F8A                     LATB            equ	3978	;# 
  1195   000F8B                     LATC            equ	3979	;# 
  1196   000F8C                     LATD            equ	3980	;# 
  1197   000F8D                     LATE            equ	3981	;# 
  1198   000F92                     TRISA           equ	3986	;# 
  1199   000F92                     DDRA            equ	3986	;# 
  1200   000F93                     TRISB           equ	3987	;# 
  1201   000F93                     DDRB            equ	3987	;# 
  1202   000F94                     TRISC           equ	3988	;# 
  1203   000F94                     DDRC            equ	3988	;# 
  1204   000F95                     TRISD           equ	3989	;# 
  1205   000F95                     DDRD            equ	3989	;# 
  1206   000F96                     TRISE           equ	3990	;# 
  1207   000F96                     DDRE            equ	3990	;# 
  1208   000F9B                     OSCTUNE         equ	3995	;# 
  1209   000F9D                     PIE1            equ	3997	;# 
  1210   000F9E                     PIR1            equ	3998	;# 
  1211   000F9F                     IPR1            equ	3999	;# 
  1212   000FA0                     PIE2            equ	4000	;# 
  1213   000FA1                     PIR2            equ	4001	;# 
  1214   000FA2                     IPR2            equ	4002	;# 
  1215   000FA6                     EECON1          equ	4006	;# 
  1216   000FA7                     EECON2          equ	4007	;# 
  1217   000FA8                     EEDATA          equ	4008	;# 
  1218   000FA9                     EEADR           equ	4009	;# 
  1219   000FAA                     EEADRH          equ	4010	;# 
  1220   000FAB                     RCSTA           equ	4011	;# 
  1221   000FAB                     RCSTA1          equ	4011	;# 
  1222   000FAC                     TXSTA           equ	4012	;# 
  1223   000FAC                     TXSTA1          equ	4012	;# 
  1224   000FAD                     TXREG           equ	4013	;# 
  1225   000FAD                     TXREG1          equ	4013	;# 
  1226   000FAE                     RCREG           equ	4014	;# 
  1227   000FAE                     RCREG1          equ	4014	;# 
  1228   000FAF                     SPBRG           equ	4015	;# 
  1229   000FAF                     SPBRG1          equ	4015	;# 
  1230   000FB0                     SPBRGH          equ	4016	;# 
  1231   000FB1                     T3CON           equ	4017	;# 
  1232   000FB2                     TMR3            equ	4018	;# 
  1233   000FB2                     TMR3L           equ	4018	;# 
  1234   000FB3                     TMR3H           equ	4019	;# 
  1235   000FB4                     CVRCON2         equ	4020	;# 
  1236   000FB5                     CVRCON          equ	4021	;# 
  1237   000FB6                     ECCP1AS         equ	4022	;# 
  1238   000FB7                     PWM1CON         equ	4023	;# 
  1239   000FB8                     BAUDCON         equ	4024	;# 
  1240   000FB8                     BAUDCTL         equ	4024	;# 
  1241   000FB9                     PSTRCON         equ	4025	;# 
  1242   000FBA                     CCP2CON         equ	4026	;# 
  1243   000FBB                     CCPR2           equ	4027	;# 
  1244   000FBB                     CCPR2L          equ	4027	;# 
  1245   000FBC                     CCPR2H          equ	4028	;# 
  1246   000FBD                     CCP1CON         equ	4029	;# 
  1247   000FBE                     CCPR1           equ	4030	;# 
  1248   000FBE                     CCPR1L          equ	4030	;# 
  1249   000FBF                     CCPR1H          equ	4031	;# 
  1250   000FC0                     ADCON2          equ	4032	;# 
  1251   000FC1                     ADCON1          equ	4033	;# 
  1252   000FC2                     ADCON0          equ	4034	;# 
  1253   000FC3                     ADRES           equ	4035	;# 
  1254   000FC3                     ADRESL          equ	4035	;# 
  1255   000FC4                     ADRESH          equ	4036	;# 
  1256   000FC5                     SSPCON2         equ	4037	;# 
  1257   000FC6                     SSPCON1         equ	4038	;# 
  1258   000FC7                     SSPSTAT         equ	4039	;# 
  1259   000FC8                     SSPADD          equ	4040	;# 
  1260   000FC9                     SSPBUF          equ	4041	;# 
  1261   000FCA                     T2CON           equ	4042	;# 
  1262   000FCB                     PR2             equ	4043	;# 
  1263   000FCB                     MEMCON          equ	4043	;# 
  1264   000FCC                     TMR2            equ	4044	;# 
  1265   000FCD                     T1CON           equ	4045	;# 
  1266   000FCE                     TMR1            equ	4046	;# 
  1267   000FCE                     TMR1L           equ	4046	;# 
  1268   000FCF                     TMR1H           equ	4047	;# 
  1269   000FD0                     RCON            equ	4048	;# 
  1270   000FD1                     WDTCON          equ	4049	;# 
  1271   000FD2                     HLVDCON         equ	4050	;# 
  1272   000FD2                     LVDCON          equ	4050	;# 
  1273   000FD3                     OSCCON          equ	4051	;# 
  1274   000FD5                     T0CON           equ	4053	;# 
  1275   000FD6                     TMR0            equ	4054	;# 
  1276   000FD6                     TMR0L           equ	4054	;# 
  1277   000FD7                     TMR0H           equ	4055	;# 
  1278   000FD8                     STATUS          equ	4056	;# 
  1279   000FD9                     FSR2            equ	4057	;# 
  1280   000FD9                     FSR2L           equ	4057	;# 
  1281   000FDA                     FSR2H           equ	4058	;# 
  1282   000FDB                     PLUSW2          equ	4059	;# 
  1283   000FDC                     PREINC2         equ	4060	;# 
  1284   000FDD                     POSTDEC2        equ	4061	;# 
  1285   000FDE                     POSTINC2        equ	4062	;# 
  1286   000FDF                     INDF2           equ	4063	;# 
  1287   000FE0                     BSR             equ	4064	;# 
  1288   000FE1                     FSR1            equ	4065	;# 
  1289   000FE1                     FSR1L           equ	4065	;# 
  1290   000FE2                     FSR1H           equ	4066	;# 
  1291   000FE3                     PLUSW1          equ	4067	;# 
  1292   000FE4                     PREINC1         equ	4068	;# 
  1293   000FE5                     POSTDEC1        equ	4069	;# 
  1294   000FE6                     POSTINC1        equ	4070	;# 
  1295   000FE7                     INDF1           equ	4071	;# 
  1296   000FE8                     WREG            equ	4072	;# 
  1297   000FE9                     FSR0            equ	4073	;# 
  1298   000FE9                     FSR0L           equ	4073	;# 
  1299   000FEA                     FSR0H           equ	4074	;# 
  1300   000FEB                     PLUSW0          equ	4075	;# 
  1301   000FEC                     PREINC0         equ	4076	;# 
  1302   000FED                     POSTDEC0        equ	4077	;# 
  1303   000FEE                     POSTINC0        equ	4078	;# 
  1304   000FEF                     INDF0           equ	4079	;# 
  1305   000FF0                     INTCON3         equ	4080	;# 
  1306   000FF1                     INTCON2         equ	4081	;# 
  1307   000FF2                     INTCON          equ	4082	;# 
  1308   000FF3                     PROD            equ	4083	;# 
  1309   000FF3                     PRODL           equ	4083	;# 
  1310   000FF4                     PRODH           equ	4084	;# 
  1311   000FF5                     TABLAT          equ	4085	;# 
  1312   000FF6                     TBLPTR          equ	4086	;# 
  1313   000FF6                     TBLPTRL         equ	4086	;# 
  1314   000FF7                     TBLPTRH         equ	4087	;# 
  1315   000FF8                     TBLPTRU         equ	4088	;# 
  1316   000FF9                     PCLAT           equ	4089	;# 
  1317   000FF9                     PC              equ	4089	;# 
  1318   000FF9                     PCL             equ	4089	;# 
  1319   000FFA                     PCLATH          equ	4090	;# 
  1320   000FFB                     PCLATU          equ	4091	;# 
  1321   000FFC                     STKPTR          equ	4092	;# 
  1322   000FFD                     TOS             equ	4093	;# 
  1323   000FFD                     TOSL            equ	4093	;# 
  1324   000FFE                     TOSH            equ	4094	;# 
  1325   000FFF                     TOSU            equ	4095	;# 
  1326   000F77                     SSPMSK          equ	3959	;# 
  1327   000F78                     SLRCON          equ	3960	;# 
  1328   000F79                     CM2CON1         equ	3961	;# 
  1329   000F7A                     CM2CON0         equ	3962	;# 
  1330   000F7B                     CM1CON0         equ	3963	;# 
  1331   000F7C                     WPUB            equ	3964	;# 
  1332   000F7D                     IOCB            equ	3965	;# 
  1333   000F7E                     ANSEL           equ	3966	;# 
  1334   000F7F                     ANSELH          equ	3967	;# 
  1335   000F80                     PORTA           equ	3968	;# 
  1336   000F81                     PORTB           equ	3969	;# 
  1337   000F82                     PORTC           equ	3970	;# 
  1338   000F83                     PORTD           equ	3971	;# 
  1339   000F84                     PORTE           equ	3972	;# 
  1340   000F89                     LATA            equ	3977	;# 
  1341   000F8A                     LATB            equ	3978	;# 
  1342   000F8B                     LATC            equ	3979	;# 
  1343   000F8C                     LATD            equ	3980	;# 
  1344   000F8D                     LATE            equ	3981	;# 
  1345   000F92                     TRISA           equ	3986	;# 
  1346   000F92                     DDRA            equ	3986	;# 
  1347   000F93                     TRISB           equ	3987	;# 
  1348   000F93                     DDRB            equ	3987	;# 
  1349   000F94                     TRISC           equ	3988	;# 
  1350   000F94                     DDRC            equ	3988	;# 
  1351   000F95                     TRISD           equ	3989	;# 
  1352   000F95                     DDRD            equ	3989	;# 
  1353   000F96                     TRISE           equ	3990	;# 
  1354   000F96                     DDRE            equ	3990	;# 
  1355   000F9B                     OSCTUNE         equ	3995	;# 
  1356   000F9D                     PIE1            equ	3997	;# 
  1357   000F9E                     PIR1            equ	3998	;# 
  1358   000F9F                     IPR1            equ	3999	;# 
  1359   000FA0                     PIE2            equ	4000	;# 
  1360   000FA1                     PIR2            equ	4001	;# 
  1361   000FA2                     IPR2            equ	4002	;# 
  1362   000FA6                     EECON1          equ	4006	;# 
  1363   000FA7                     EECON2          equ	4007	;# 
  1364   000FA8                     EEDATA          equ	4008	;# 
  1365   000FA9                     EEADR           equ	4009	;# 
  1366   000FAA                     EEADRH          equ	4010	;# 
  1367   000FAB                     RCSTA           equ	4011	;# 
  1368   000FAB                     RCSTA1          equ	4011	;# 
  1369   000FAC                     TXSTA           equ	4012	;# 
  1370   000FAC                     TXSTA1          equ	4012	;# 
  1371   000FAD                     TXREG           equ	4013	;# 
  1372   000FAD                     TXREG1          equ	4013	;# 
  1373   000FAE                     RCREG           equ	4014	;# 
  1374   000FAE                     RCREG1          equ	4014	;# 
  1375   000FAF                     SPBRG           equ	4015	;# 
  1376   000FAF                     SPBRG1          equ	4015	;# 
  1377   000FB0                     SPBRGH          equ	4016	;# 
  1378   000FB1                     T3CON           equ	4017	;# 
  1379   000FB2                     TMR3            equ	4018	;# 
  1380   000FB2                     TMR3L           equ	4018	;# 
  1381   000FB3                     TMR3H           equ	4019	;# 
  1382   000FB4                     CVRCON2         equ	4020	;# 
  1383   000FB5                     CVRCON          equ	4021	;# 
  1384   000FB6                     ECCP1AS         equ	4022	;# 
  1385   000FB7                     PWM1CON         equ	4023	;# 
  1386   000FB8                     BAUDCON         equ	4024	;# 
  1387   000FB8                     BAUDCTL         equ	4024	;# 
  1388   000FB9                     PSTRCON         equ	4025	;# 
  1389   000FBA                     CCP2CON         equ	4026	;# 
  1390   000FBB                     CCPR2           equ	4027	;# 
  1391   000FBB                     CCPR2L          equ	4027	;# 
  1392   000FBC                     CCPR2H          equ	4028	;# 
  1393   000FBD                     CCP1CON         equ	4029	;# 
  1394   000FBE                     CCPR1           equ	4030	;# 
  1395   000FBE                     CCPR1L          equ	4030	;# 
  1396   000FBF                     CCPR1H          equ	4031	;# 
  1397   000FC0                     ADCON2          equ	4032	;# 
  1398   000FC1                     ADCON1          equ	4033	;# 
  1399   000FC2                     ADCON0          equ	4034	;# 
  1400   000FC3                     ADRES           equ	4035	;# 
  1401   000FC3                     ADRESL          equ	4035	;# 
  1402   000FC4                     ADRESH          equ	4036	;# 
  1403   000FC5                     SSPCON2         equ	4037	;# 
  1404   000FC6                     SSPCON1         equ	4038	;# 
  1405   000FC7                     SSPSTAT         equ	4039	;# 
  1406   000FC8                     SSPADD          equ	4040	;# 
  1407   000FC9                     SSPBUF          equ	4041	;# 
  1408   000FCA                     T2CON           equ	4042	;# 
  1409   000FCB                     PR2             equ	4043	;# 
  1410   000FCB                     MEMCON          equ	4043	;# 
  1411   000FCC                     TMR2            equ	4044	;# 
  1412   000FCD                     T1CON           equ	4045	;# 
  1413   000FCE                     TMR1            equ	4046	;# 
  1414   000FCE                     TMR1L           equ	4046	;# 
  1415   000FCF                     TMR1H           equ	4047	;# 
  1416   000FD0                     RCON            equ	4048	;# 
  1417   000FD1                     WDTCON          equ	4049	;# 
  1418   000FD2                     HLVDCON         equ	4050	;# 
  1419   000FD2                     LVDCON          equ	4050	;# 
  1420   000FD3                     OSCCON          equ	4051	;# 
  1421   000FD5                     T0CON           equ	4053	;# 
  1422   000FD6                     TMR0            equ	4054	;# 
  1423   000FD6                     TMR0L           equ	4054	;# 
  1424   000FD7                     TMR0H           equ	4055	;# 
  1425   000FD8                     STATUS          equ	4056	;# 
  1426   000FD9                     FSR2            equ	4057	;# 
  1427   000FD9                     FSR2L           equ	4057	;# 
  1428   000FDA                     FSR2H           equ	4058	;# 
  1429   000FDB                     PLUSW2          equ	4059	;# 
  1430   000FDC                     PREINC2         equ	4060	;# 
  1431   000FDD                     POSTDEC2        equ	4061	;# 
  1432   000FDE                     POSTINC2        equ	4062	;# 
  1433   000FDF                     INDF2           equ	4063	;# 
  1434   000FE0                     BSR             equ	4064	;# 
  1435   000FE1                     FSR1            equ	4065	;# 
  1436   000FE1                     FSR1L           equ	4065	;# 
  1437   000FE2                     FSR1H           equ	4066	;# 
  1438   000FE3                     PLUSW1          equ	4067	;# 
  1439   000FE4                     PREINC1         equ	4068	;# 
  1440   000FE5                     POSTDEC1        equ	4069	;# 
  1441   000FE6                     POSTINC1        equ	4070	;# 
  1442   000FE7                     INDF1           equ	4071	;# 
  1443   000FE8                     WREG            equ	4072	;# 
  1444   000FE9                     FSR0            equ	4073	;# 
  1445   000FE9                     FSR0L           equ	4073	;# 
  1446   000FEA                     FSR0H           equ	4074	;# 
  1447   000FEB                     PLUSW0          equ	4075	;# 
  1448   000FEC                     PREINC0         equ	4076	;# 
  1449   000FED                     POSTDEC0        equ	4077	;# 
  1450   000FEE                     POSTINC0        equ	4078	;# 
  1451   000FEF                     INDF0           equ	4079	;# 
  1452   000FF0                     INTCON3         equ	4080	;# 
  1453   000FF1                     INTCON2         equ	4081	;# 
  1454   000FF2                     INTCON          equ	4082	;# 
  1455   000FF3                     PROD            equ	4083	;# 
  1456   000FF3                     PRODL           equ	4083	;# 
  1457   000FF4                     PRODH           equ	4084	;# 
  1458   000FF5                     TABLAT          equ	4085	;# 
  1459   000FF6                     TBLPTR          equ	4086	;# 
  1460   000FF6                     TBLPTRL         equ	4086	;# 
  1461   000FF7                     TBLPTRH         equ	4087	;# 
  1462   000FF8                     TBLPTRU         equ	4088	;# 
  1463   000FF9                     PCLAT           equ	4089	;# 
  1464   000FF9                     PC              equ	4089	;# 
  1465   000FF9                     PCL             equ	4089	;# 
  1466   000FFA                     PCLATH          equ	4090	;# 
  1467   000FFB                     PCLATU          equ	4091	;# 
  1468   000FFC                     STKPTR          equ	4092	;# 
  1469   000FFD                     TOS             equ	4093	;# 
  1470   000FFD                     TOSL            equ	4093	;# 
  1471   000FFE                     TOSH            equ	4094	;# 
  1472   000FFF                     TOSU            equ	4095	;# 
  1473   000F77                     SSPMSK          equ	3959	;# 
  1474   000F78                     SLRCON          equ	3960	;# 
  1475   000F79                     CM2CON1         equ	3961	;# 
  1476   000F7A                     CM2CON0         equ	3962	;# 
  1477   000F7B                     CM1CON0         equ	3963	;# 
  1478   000F7C                     WPUB            equ	3964	;# 
  1479   000F7D                     IOCB            equ	3965	;# 
  1480   000F7E                     ANSEL           equ	3966	;# 
  1481   000F7F                     ANSELH          equ	3967	;# 
  1482   000F80                     PORTA           equ	3968	;# 
  1483   000F81                     PORTB           equ	3969	;# 
  1484   000F82                     PORTC           equ	3970	;# 
  1485   000F83                     PORTD           equ	3971	;# 
  1486   000F84                     PORTE           equ	3972	;# 
  1487   000F89                     LATA            equ	3977	;# 
  1488   000F8A                     LATB            equ	3978	;# 
  1489   000F8B                     LATC            equ	3979	;# 
  1490   000F8C                     LATD            equ	3980	;# 
  1491   000F8D                     LATE            equ	3981	;# 
  1492   000F92                     TRISA           equ	3986	;# 
  1493   000F92                     DDRA            equ	3986	;# 
  1494   000F93                     TRISB           equ	3987	;# 
  1495   000F93                     DDRB            equ	3987	;# 
  1496   000F94                     TRISC           equ	3988	;# 
  1497   000F94                     DDRC            equ	3988	;# 
  1498   000F95                     TRISD           equ	3989	;# 
  1499   000F95                     DDRD            equ	3989	;# 
  1500   000F96                     TRISE           equ	3990	;# 
  1501   000F96                     DDRE            equ	3990	;# 
  1502   000F9B                     OSCTUNE         equ	3995	;# 
  1503   000F9D                     PIE1            equ	3997	;# 
  1504   000F9E                     PIR1            equ	3998	;# 
  1505   000F9F                     IPR1            equ	3999	;# 
  1506   000FA0                     PIE2            equ	4000	;# 
  1507   000FA1                     PIR2            equ	4001	;# 
  1508   000FA2                     IPR2            equ	4002	;# 
  1509   000FA6                     EECON1          equ	4006	;# 
  1510   000FA7                     EECON2          equ	4007	;# 
  1511   000FA8                     EEDATA          equ	4008	;# 
  1512   000FA9                     EEADR           equ	4009	;# 
  1513   000FAA                     EEADRH          equ	4010	;# 
  1514   000FAB                     RCSTA           equ	4011	;# 
  1515   000FAB                     RCSTA1          equ	4011	;# 
  1516   000FAC                     TXSTA           equ	4012	;# 
  1517   000FAC                     TXSTA1          equ	4012	;# 
  1518   000FAD                     TXREG           equ	4013	;# 
  1519   000FAD                     TXREG1          equ	4013	;# 
  1520   000FAE                     RCREG           equ	4014	;# 
  1521   000FAE                     RCREG1          equ	4014	;# 
  1522   000FAF                     SPBRG           equ	4015	;# 
  1523   000FAF                     SPBRG1          equ	4015	;# 
  1524   000FB0                     SPBRGH          equ	4016	;# 
  1525   000FB1                     T3CON           equ	4017	;# 
  1526   000FB2                     TMR3            equ	4018	;# 
  1527   000FB2                     TMR3L           equ	4018	;# 
  1528   000FB3                     TMR3H           equ	4019	;# 
  1529   000FB4                     CVRCON2         equ	4020	;# 
  1530   000FB5                     CVRCON          equ	4021	;# 
  1531   000FB6                     ECCP1AS         equ	4022	;# 
  1532   000FB7                     PWM1CON         equ	4023	;# 
  1533   000FB8                     BAUDCON         equ	4024	;# 
  1534   000FB8                     BAUDCTL         equ	4024	;# 
  1535   000FB9                     PSTRCON         equ	4025	;# 
  1536   000FBA                     CCP2CON         equ	4026	;# 
  1537   000FBB                     CCPR2           equ	4027	;# 
  1538   000FBB                     CCPR2L          equ	4027	;# 
  1539   000FBC                     CCPR2H          equ	4028	;# 
  1540   000FBD                     CCP1CON         equ	4029	;# 
  1541   000FBE                     CCPR1           equ	4030	;# 
  1542   000FBE                     CCPR1L          equ	4030	;# 
  1543   000FBF                     CCPR1H          equ	4031	;# 
  1544   000FC0                     ADCON2          equ	4032	;# 
  1545   000FC1                     ADCON1          equ	4033	;# 
  1546   000FC2                     ADCON0          equ	4034	;# 
  1547   000FC3                     ADRES           equ	4035	;# 
  1548   000FC3                     ADRESL          equ	4035	;# 
  1549   000FC4                     ADRESH          equ	4036	;# 
  1550   000FC5                     SSPCON2         equ	4037	;# 
  1551   000FC6                     SSPCON1         equ	4038	;# 
  1552   000FC7                     SSPSTAT         equ	4039	;# 
  1553   000FC8                     SSPADD          equ	4040	;# 
  1554   000FC9                     SSPBUF          equ	4041	;# 
  1555   000FCA                     T2CON           equ	4042	;# 
  1556   000FCB                     PR2             equ	4043	;# 
  1557   000FCB                     MEMCON          equ	4043	;# 
  1558   000FCC                     TMR2            equ	4044	;# 
  1559   000FCD                     T1CON           equ	4045	;# 
  1560   000FCE                     TMR1            equ	4046	;# 
  1561   000FCE                     TMR1L           equ	4046	;# 
  1562   000FCF                     TMR1H           equ	4047	;# 
  1563   000FD0                     RCON            equ	4048	;# 
  1564   000FD1                     WDTCON          equ	4049	;# 
  1565   000FD2                     HLVDCON         equ	4050	;# 
  1566   000FD2                     LVDCON          equ	4050	;# 
  1567   000FD3                     OSCCON          equ	4051	;# 
  1568   000FD5                     T0CON           equ	4053	;# 
  1569   000FD6                     TMR0            equ	4054	;# 
  1570   000FD6                     TMR0L           equ	4054	;# 
  1571   000FD7                     TMR0H           equ	4055	;# 
  1572   000FD8                     STATUS          equ	4056	;# 
  1573   000FD9                     FSR2            equ	4057	;# 
  1574   000FD9                     FSR2L           equ	4057	;# 
  1575   000FDA                     FSR2H           equ	4058	;# 
  1576   000FDB                     PLUSW2          equ	4059	;# 
  1577   000FDC                     PREINC2         equ	4060	;# 
  1578   000FDD                     POSTDEC2        equ	4061	;# 
  1579   000FDE                     POSTINC2        equ	4062	;# 
  1580   000FDF                     INDF2           equ	4063	;# 
  1581   000FE0                     BSR             equ	4064	;# 
  1582   000FE1                     FSR1            equ	4065	;# 
  1583   000FE1                     FSR1L           equ	4065	;# 
  1584   000FE2                     FSR1H           equ	4066	;# 
  1585   000FE3                     PLUSW1          equ	4067	;# 
  1586   000FE4                     PREINC1         equ	4068	;# 
  1587   000FE5                     POSTDEC1        equ	4069	;# 
  1588   000FE6                     POSTINC1        equ	4070	;# 
  1589   000FE7                     INDF1           equ	4071	;# 
  1590   000FE8                     WREG            equ	4072	;# 
  1591   000FE9                     FSR0            equ	4073	;# 
  1592   000FE9                     FSR0L           equ	4073	;# 
  1593   000FEA                     FSR0H           equ	4074	;# 
  1594   000FEB                     PLUSW0          equ	4075	;# 
  1595   000FEC                     PREINC0         equ	4076	;# 
  1596   000FED                     POSTDEC0        equ	4077	;# 
  1597   000FEE                     POSTINC0        equ	4078	;# 
  1598   000FEF                     INDF0           equ	4079	;# 
  1599   000FF0                     INTCON3         equ	4080	;# 
  1600   000FF1                     INTCON2         equ	4081	;# 
  1601   000FF2                     INTCON          equ	4082	;# 
  1602   000FF3                     PROD            equ	4083	;# 
  1603   000FF3                     PRODL           equ	4083	;# 
  1604   000FF4                     PRODH           equ	4084	;# 
  1605   000FF5                     TABLAT          equ	4085	;# 
  1606   000FF6                     TBLPTR          equ	4086	;# 
  1607   000FF6                     TBLPTRL         equ	4086	;# 
  1608   000FF7                     TBLPTRH         equ	4087	;# 
  1609   000FF8                     TBLPTRU         equ	4088	;# 
  1610   000FF9                     PCLAT           equ	4089	;# 
  1611   000FF9                     PC              equ	4089	;# 
  1612   000FF9                     PCL             equ	4089	;# 
  1613   000FFA                     PCLATH          equ	4090	;# 
  1614   000FFB                     PCLATU          equ	4091	;# 
  1615   000FFC                     STKPTR          equ	4092	;# 
  1616   000FFD                     TOS             equ	4093	;# 
  1617   000FFD                     TOSL            equ	4093	;# 
  1618   000FFE                     TOSH            equ	4094	;# 
  1619   000FFF                     TOSU            equ	4095	;# 
  1620   000F77                     SSPMSK          equ	3959	;# 
  1621   000F78                     SLRCON          equ	3960	;# 
  1622   000F79                     CM2CON1         equ	3961	;# 
  1623   000F7A                     CM2CON0         equ	3962	;# 
  1624   000F7B                     CM1CON0         equ	3963	;# 
  1625   000F7C                     WPUB            equ	3964	;# 
  1626   000F7D                     IOCB            equ	3965	;# 
  1627   000F7E                     ANSEL           equ	3966	;# 
  1628   000F7F                     ANSELH          equ	3967	;# 
  1629   000F80                     PORTA           equ	3968	;# 
  1630   000F81                     PORTB           equ	3969	;# 
  1631   000F82                     PORTC           equ	3970	;# 
  1632   000F83                     PORTD           equ	3971	;# 
  1633   000F84                     PORTE           equ	3972	;# 
  1634   000F89                     LATA            equ	3977	;# 
  1635   000F8A                     LATB            equ	3978	;# 
  1636   000F8B                     LATC            equ	3979	;# 
  1637   000F8C                     LATD            equ	3980	;# 
  1638   000F8D                     LATE            equ	3981	;# 
  1639   000F92                     TRISA           equ	3986	;# 
  1640   000F92                     DDRA            equ	3986	;# 
  1641   000F93                     TRISB           equ	3987	;# 
  1642   000F93                     DDRB            equ	3987	;# 
  1643   000F94                     TRISC           equ	3988	;# 
  1644   000F94                     DDRC            equ	3988	;# 
  1645   000F95                     TRISD           equ	3989	;# 
  1646   000F95                     DDRD            equ	3989	;# 
  1647   000F96                     TRISE           equ	3990	;# 
  1648   000F96                     DDRE            equ	3990	;# 
  1649   000F9B                     OSCTUNE         equ	3995	;# 
  1650   000F9D                     PIE1            equ	3997	;# 
  1651   000F9E                     PIR1            equ	3998	;# 
  1652   000F9F                     IPR1            equ	3999	;# 
  1653   000FA0                     PIE2            equ	4000	;# 
  1654   000FA1                     PIR2            equ	4001	;# 
  1655   000FA2                     IPR2            equ	4002	;# 
  1656   000FA6                     EECON1          equ	4006	;# 
  1657   000FA7                     EECON2          equ	4007	;# 
  1658   000FA8                     EEDATA          equ	4008	;# 
  1659   000FA9                     EEADR           equ	4009	;# 
  1660   000FAA                     EEADRH          equ	4010	;# 
  1661   000FAB                     RCSTA           equ	4011	;# 
  1662   000FAB                     RCSTA1          equ	4011	;# 
  1663   000FAC                     TXSTA           equ	4012	;# 
  1664   000FAC                     TXSTA1          equ	4012	;# 
  1665   000FAD                     TXREG           equ	4013	;# 
  1666   000FAD                     TXREG1          equ	4013	;# 
  1667   000FAE                     RCREG           equ	4014	;# 
  1668   000FAE                     RCREG1          equ	4014	;# 
  1669   000FAF                     SPBRG           equ	4015	;# 
  1670   000FAF                     SPBRG1          equ	4015	;# 
  1671   000FB0                     SPBRGH          equ	4016	;# 
  1672   000FB1                     T3CON           equ	4017	;# 
  1673   000FB2                     TMR3            equ	4018	;# 
  1674   000FB2                     TMR3L           equ	4018	;# 
  1675   000FB3                     TMR3H           equ	4019	;# 
  1676   000FB4                     CVRCON2         equ	4020	;# 
  1677   000FB5                     CVRCON          equ	4021	;# 
  1678   000FB6                     ECCP1AS         equ	4022	;# 
  1679   000FB7                     PWM1CON         equ	4023	;# 
  1680   000FB8                     BAUDCON         equ	4024	;# 
  1681   000FB8                     BAUDCTL         equ	4024	;# 
  1682   000FB9                     PSTRCON         equ	4025	;# 
  1683   000FBA                     CCP2CON         equ	4026	;# 
  1684   000FBB                     CCPR2           equ	4027	;# 
  1685   000FBB                     CCPR2L          equ	4027	;# 
  1686   000FBC                     CCPR2H          equ	4028	;# 
  1687   000FBD                     CCP1CON         equ	4029	;# 
  1688   000FBE                     CCPR1           equ	4030	;# 
  1689   000FBE                     CCPR1L          equ	4030	;# 
  1690   000FBF                     CCPR1H          equ	4031	;# 
  1691   000FC0                     ADCON2          equ	4032	;# 
  1692   000FC1                     ADCON1          equ	4033	;# 
  1693   000FC2                     ADCON0          equ	4034	;# 
  1694   000FC3                     ADRES           equ	4035	;# 
  1695   000FC3                     ADRESL          equ	4035	;# 
  1696   000FC4                     ADRESH          equ	4036	;# 
  1697   000FC5                     SSPCON2         equ	4037	;# 
  1698   000FC6                     SSPCON1         equ	4038	;# 
  1699   000FC7                     SSPSTAT         equ	4039	;# 
  1700   000FC8                     SSPADD          equ	4040	;# 
  1701   000FC9                     SSPBUF          equ	4041	;# 
  1702   000FCA                     T2CON           equ	4042	;# 
  1703   000FCB                     PR2             equ	4043	;# 
  1704   000FCB                     MEMCON          equ	4043	;# 
  1705   000FCC                     TMR2            equ	4044	;# 
  1706   000FCD                     T1CON           equ	4045	;# 
  1707   000FCE                     TMR1            equ	4046	;# 
  1708   000FCE                     TMR1L           equ	4046	;# 
  1709   000FCF                     TMR1H           equ	4047	;# 
  1710   000FD0                     RCON            equ	4048	;# 
  1711   000FD1                     WDTCON          equ	4049	;# 
  1712   000FD2                     HLVDCON         equ	4050	;# 
  1713   000FD2                     LVDCON          equ	4050	;# 
  1714   000FD3                     OSCCON          equ	4051	;# 
  1715   000FD5                     T0CON           equ	4053	;# 
  1716   000FD6                     TMR0            equ	4054	;# 
  1717   000FD6                     TMR0L           equ	4054	;# 
  1718   000FD7                     TMR0H           equ	4055	;# 
  1719   000FD8                     STATUS          equ	4056	;# 
  1720   000FD9                     FSR2            equ	4057	;# 
  1721   000FD9                     FSR2L           equ	4057	;# 
  1722   000FDA                     FSR2H           equ	4058	;# 
  1723   000FDB                     PLUSW2          equ	4059	;# 
  1724   000FDC                     PREINC2         equ	4060	;# 
  1725   000FDD                     POSTDEC2        equ	4061	;# 
  1726   000FDE                     POSTINC2        equ	4062	;# 
  1727   000FDF                     INDF2           equ	4063	;# 
  1728   000FE0                     BSR             equ	4064	;# 
  1729   000FE1                     FSR1            equ	4065	;# 
  1730   000FE1                     FSR1L           equ	4065	;# 
  1731   000FE2                     FSR1H           equ	4066	;# 
  1732   000FE3                     PLUSW1          equ	4067	;# 
  1733   000FE4                     PREINC1         equ	4068	;# 
  1734   000FE5                     POSTDEC1        equ	4069	;# 
  1735   000FE6                     POSTINC1        equ	4070	;# 
  1736   000FE7                     INDF1           equ	4071	;# 
  1737   000FE8                     WREG            equ	4072	;# 
  1738   000FE9                     FSR0            equ	4073	;# 
  1739   000FE9                     FSR0L           equ	4073	;# 
  1740   000FEA                     FSR0H           equ	4074	;# 
  1741   000FEB                     PLUSW0          equ	4075	;# 
  1742   000FEC                     PREINC0         equ	4076	;# 
  1743   000FED                     POSTDEC0        equ	4077	;# 
  1744   000FEE                     POSTINC0        equ	4078	;# 
  1745   000FEF                     INDF0           equ	4079	;# 
  1746   000FF0                     INTCON3         equ	4080	;# 
  1747   000FF1                     INTCON2         equ	4081	;# 
  1748   000FF2                     INTCON          equ	4082	;# 
  1749   000FF3                     PROD            equ	4083	;# 
  1750   000FF3                     PRODL           equ	4083	;# 
  1751   000FF4                     PRODH           equ	4084	;# 
  1752   000FF5                     TABLAT          equ	4085	;# 
  1753   000FF6                     TBLPTR          equ	4086	;# 
  1754   000FF6                     TBLPTRL         equ	4086	;# 
  1755   000FF7                     TBLPTRH         equ	4087	;# 
  1756   000FF8                     TBLPTRU         equ	4088	;# 
  1757   000FF9                     PCLAT           equ	4089	;# 
  1758   000FF9                     PC              equ	4089	;# 
  1759   000FF9                     PCL             equ	4089	;# 
  1760   000FFA                     PCLATH          equ	4090	;# 
  1761   000FFB                     PCLATU          equ	4091	;# 
  1762   000FFC                     STKPTR          equ	4092	;# 
  1763   000FFD                     TOS             equ	4093	;# 
  1764   000FFD                     TOSL            equ	4093	;# 
  1765   000FFE                     TOSH            equ	4094	;# 
  1766   000FFF                     TOSU            equ	4095	;# 
  1767   000F77                     SSPMSK          equ	3959	;# 
  1768   000F78                     SLRCON          equ	3960	;# 
  1769   000F79                     CM2CON1         equ	3961	;# 
  1770   000F7A                     CM2CON0         equ	3962	;# 
  1771   000F7B                     CM1CON0         equ	3963	;# 
  1772   000F7C                     WPUB            equ	3964	;# 
  1773   000F7D                     IOCB            equ	3965	;# 
  1774   000F7E                     ANSEL           equ	3966	;# 
  1775   000F7F                     ANSELH          equ	3967	;# 
  1776   000F80                     PORTA           equ	3968	;# 
  1777   000F81                     PORTB           equ	3969	;# 
  1778   000F82                     PORTC           equ	3970	;# 
  1779   000F83                     PORTD           equ	3971	;# 
  1780   000F84                     PORTE           equ	3972	;# 
  1781   000F89                     LATA            equ	3977	;# 
  1782   000F8A                     LATB            equ	3978	;# 
  1783   000F8B                     LATC            equ	3979	;# 
  1784   000F8C                     LATD            equ	3980	;# 
  1785   000F8D                     LATE            equ	3981	;# 
  1786   000F92                     TRISA           equ	3986	;# 
  1787   000F92                     DDRA            equ	3986	;# 
  1788   000F93                     TRISB           equ	3987	;# 
  1789   000F93                     DDRB            equ	3987	;# 
  1790   000F94                     TRISC           equ	3988	;# 
  1791   000F94                     DDRC            equ	3988	;# 
  1792   000F95                     TRISD           equ	3989	;# 
  1793   000F95                     DDRD            equ	3989	;# 
  1794   000F96                     TRISE           equ	3990	;# 
  1795   000F96                     DDRE            equ	3990	;# 
  1796   000F9B                     OSCTUNE         equ	3995	;# 
  1797   000F9D                     PIE1            equ	3997	;# 
  1798   000F9E                     PIR1            equ	3998	;# 
  1799   000F9F                     IPR1            equ	3999	;# 
  1800   000FA0                     PIE2            equ	4000	;# 
  1801   000FA1                     PIR2            equ	4001	;# 
  1802   000FA2                     IPR2            equ	4002	;# 
  1803   000FA6                     EECON1          equ	4006	;# 
  1804   000FA7                     EECON2          equ	4007	;# 
  1805   000FA8                     EEDATA          equ	4008	;# 
  1806   000FA9                     EEADR           equ	4009	;# 
  1807   000FAA                     EEADRH          equ	4010	;# 
  1808   000FAB                     RCSTA           equ	4011	;# 
  1809   000FAB                     RCSTA1          equ	4011	;# 
  1810   000FAC                     TXSTA           equ	4012	;# 
  1811   000FAC                     TXSTA1          equ	4012	;# 
  1812   000FAD                     TXREG           equ	4013	;# 
  1813   000FAD                     TXREG1          equ	4013	;# 
  1814   000FAE                     RCREG           equ	4014	;# 
  1815   000FAE                     RCREG1          equ	4014	;# 
  1816   000FAF                     SPBRG           equ	4015	;# 
  1817   000FAF                     SPBRG1          equ	4015	;# 
  1818   000FB0                     SPBRGH          equ	4016	;# 
  1819   000FB1                     T3CON           equ	4017	;# 
  1820   000FB2                     TMR3            equ	4018	;# 
  1821   000FB2                     TMR3L           equ	4018	;# 
  1822   000FB3                     TMR3H           equ	4019	;# 
  1823   000FB4                     CVRCON2         equ	4020	;# 
  1824   000FB5                     CVRCON          equ	4021	;# 
  1825   000FB6                     ECCP1AS         equ	4022	;# 
  1826   000FB7                     PWM1CON         equ	4023	;# 
  1827   000FB8                     BAUDCON         equ	4024	;# 
  1828   000FB8                     BAUDCTL         equ	4024	;# 
  1829   000FB9                     PSTRCON         equ	4025	;# 
  1830   000FBA                     CCP2CON         equ	4026	;# 
  1831   000FBB                     CCPR2           equ	4027	;# 
  1832   000FBB                     CCPR2L          equ	4027	;# 
  1833   000FBC                     CCPR2H          equ	4028	;# 
  1834   000FBD                     CCP1CON         equ	4029	;# 
  1835   000FBE                     CCPR1           equ	4030	;# 
  1836   000FBE                     CCPR1L          equ	4030	;# 
  1837   000FBF                     CCPR1H          equ	4031	;# 
  1838   000FC0                     ADCON2          equ	4032	;# 
  1839   000FC1                     ADCON1          equ	4033	;# 
  1840   000FC2                     ADCON0          equ	4034	;# 
  1841   000FC3                     ADRES           equ	4035	;# 
  1842   000FC3                     ADRESL          equ	4035	;# 
  1843   000FC4                     ADRESH          equ	4036	;# 
  1844   000FC5                     SSPCON2         equ	4037	;# 
  1845   000FC6                     SSPCON1         equ	4038	;# 
  1846   000FC7                     SSPSTAT         equ	4039	;# 
  1847   000FC8                     SSPADD          equ	4040	;# 
  1848   000FC9                     SSPBUF          equ	4041	;# 
  1849   000FCA                     T2CON           equ	4042	;# 
  1850   000FCB                     PR2             equ	4043	;# 
  1851   000FCB                     MEMCON          equ	4043	;# 
  1852   000FCC                     TMR2            equ	4044	;# 
  1853   000FCD                     T1CON           equ	4045	;# 
  1854   000FCE                     TMR1            equ	4046	;# 
  1855   000FCE                     TMR1L           equ	4046	;# 
  1856   000FCF                     TMR1H           equ	4047	;# 
  1857   000FD0                     RCON            equ	4048	;# 
  1858   000FD1                     WDTCON          equ	4049	;# 
  1859   000FD2                     HLVDCON         equ	4050	;# 
  1860   000FD2                     LVDCON          equ	4050	;# 
  1861   000FD3                     OSCCON          equ	4051	;# 
  1862   000FD5                     T0CON           equ	4053	;# 
  1863   000FD6                     TMR0            equ	4054	;# 
  1864   000FD6                     TMR0L           equ	4054	;# 
  1865   000FD7                     TMR0H           equ	4055	;# 
  1866   000FD8                     STATUS          equ	4056	;# 
  1867   000FD9                     FSR2            equ	4057	;# 
  1868   000FD9                     FSR2L           equ	4057	;# 
  1869   000FDA                     FSR2H           equ	4058	;# 
  1870   000FDB                     PLUSW2          equ	4059	;# 
  1871   000FDC                     PREINC2         equ	4060	;# 
  1872   000FDD                     POSTDEC2        equ	4061	;# 
  1873   000FDE                     POSTINC2        equ	4062	;# 
  1874   000FDF                     INDF2           equ	4063	;# 
  1875   000FE0                     BSR             equ	4064	;# 
  1876   000FE1                     FSR1            equ	4065	;# 
  1877   000FE1                     FSR1L           equ	4065	;# 
  1878   000FE2                     FSR1H           equ	4066	;# 
  1879   000FE3                     PLUSW1          equ	4067	;# 
  1880   000FE4                     PREINC1         equ	4068	;# 
  1881   000FE5                     POSTDEC1        equ	4069	;# 
  1882   000FE6                     POSTINC1        equ	4070	;# 
  1883   000FE7                     INDF1           equ	4071	;# 
  1884   000FE8                     WREG            equ	4072	;# 
  1885   000FE9                     FSR0            equ	4073	;# 
  1886   000FE9                     FSR0L           equ	4073	;# 
  1887   000FEA                     FSR0H           equ	4074	;# 
  1888   000FEB                     PLUSW0          equ	4075	;# 
  1889   000FEC                     PREINC0         equ	4076	;# 
  1890   000FED                     POSTDEC0        equ	4077	;# 
  1891   000FEE                     POSTINC0        equ	4078	;# 
  1892   000FEF                     INDF0           equ	4079	;# 
  1893   000FF0                     INTCON3         equ	4080	;# 
  1894   000FF1                     INTCON2         equ	4081	;# 
  1895   000FF2                     INTCON          equ	4082	;# 
  1896   000FF3                     PROD            equ	4083	;# 
  1897   000FF3                     PRODL           equ	4083	;# 
  1898   000FF4                     PRODH           equ	4084	;# 
  1899   000FF5                     TABLAT          equ	4085	;# 
  1900   000FF6                     TBLPTR          equ	4086	;# 
  1901   000FF6                     TBLPTRL         equ	4086	;# 
  1902   000FF7                     TBLPTRH         equ	4087	;# 
  1903   000FF8                     TBLPTRU         equ	4088	;# 
  1904   000FF9                     PCLAT           equ	4089	;# 
  1905   000FF9                     PC              equ	4089	;# 
  1906   000FF9                     PCL             equ	4089	;# 
  1907   000FFA                     PCLATH          equ	4090	;# 
  1908   000FFB                     PCLATU          equ	4091	;# 
  1909   000FFC                     STKPTR          equ	4092	;# 
  1910   000FFD                     TOS             equ	4093	;# 
  1911   000FFD                     TOSL            equ	4093	;# 
  1912   000FFE                     TOSH            equ	4094	;# 
  1913   000FFF                     TOSU            equ	4095	;# 
  1914   000F77                     SSPMSK          equ	3959	;# 
  1915   000F78                     SLRCON          equ	3960	;# 
  1916   000F79                     CM2CON1         equ	3961	;# 
  1917   000F7A                     CM2CON0         equ	3962	;# 
  1918   000F7B                     CM1CON0         equ	3963	;# 
  1919   000F7C                     WPUB            equ	3964	;# 
  1920   000F7D                     IOCB            equ	3965	;# 
  1921   000F7E                     ANSEL           equ	3966	;# 
  1922   000F7F                     ANSELH          equ	3967	;# 
  1923   000F80                     PORTA           equ	3968	;# 
  1924   000F81                     PORTB           equ	3969	;# 
  1925   000F82                     PORTC           equ	3970	;# 
  1926   000F83                     PORTD           equ	3971	;# 
  1927   000F84                     PORTE           equ	3972	;# 
  1928   000F89                     LATA            equ	3977	;# 
  1929   000F8A                     LATB            equ	3978	;# 
  1930   000F8B                     LATC            equ	3979	;# 
  1931   000F8C                     LATD            equ	3980	;# 
  1932   000F8D                     LATE            equ	3981	;# 
  1933   000F92                     TRISA           equ	3986	;# 
  1934   000F92                     DDRA            equ	3986	;# 
  1935   000F93                     TRISB           equ	3987	;# 
  1936   000F93                     DDRB            equ	3987	;# 
  1937   000F94                     TRISC           equ	3988	;# 
  1938   000F94                     DDRC            equ	3988	;# 
  1939   000F95                     TRISD           equ	3989	;# 
  1940   000F95                     DDRD            equ	3989	;# 
  1941   000F96                     TRISE           equ	3990	;# 
  1942   000F96                     DDRE            equ	3990	;# 
  1943   000F9B                     OSCTUNE         equ	3995	;# 
  1944   000F9D                     PIE1            equ	3997	;# 
  1945   000F9E                     PIR1            equ	3998	;# 
  1946   000F9F                     IPR1            equ	3999	;# 
  1947   000FA0                     PIE2            equ	4000	;# 
  1948   000FA1                     PIR2            equ	4001	;# 
  1949   000FA2                     IPR2            equ	4002	;# 
  1950   000FA6                     EECON1          equ	4006	;# 
  1951   000FA7                     EECON2          equ	4007	;# 
  1952   000FA8                     EEDATA          equ	4008	;# 
  1953   000FA9                     EEADR           equ	4009	;# 
  1954   000FAA                     EEADRH          equ	4010	;# 
  1955   000FAB                     RCSTA           equ	4011	;# 
  1956   000FAB                     RCSTA1          equ	4011	;# 
  1957   000FAC                     TXSTA           equ	4012	;# 
  1958   000FAC                     TXSTA1          equ	4012	;# 
  1959   000FAD                     TXREG           equ	4013	;# 
  1960   000FAD                     TXREG1          equ	4013	;# 
  1961   000FAE                     RCREG           equ	4014	;# 
  1962   000FAE                     RCREG1          equ	4014	;# 
  1963   000FAF                     SPBRG           equ	4015	;# 
  1964   000FAF                     SPBRG1          equ	4015	;# 
  1965   000FB0                     SPBRGH          equ	4016	;# 
  1966   000FB1                     T3CON           equ	4017	;# 
  1967   000FB2                     TMR3            equ	4018	;# 
  1968   000FB2                     TMR3L           equ	4018	;# 
  1969   000FB3                     TMR3H           equ	4019	;# 
  1970   000FB4                     CVRCON2         equ	4020	;# 
  1971   000FB5                     CVRCON          equ	4021	;# 
  1972   000FB6                     ECCP1AS         equ	4022	;# 
  1973   000FB7                     PWM1CON         equ	4023	;# 
  1974   000FB8                     BAUDCON         equ	4024	;# 
  1975   000FB8                     BAUDCTL         equ	4024	;# 
  1976   000FB9                     PSTRCON         equ	4025	;# 
  1977   000FBA                     CCP2CON         equ	4026	;# 
  1978   000FBB                     CCPR2           equ	4027	;# 
  1979   000FBB                     CCPR2L          equ	4027	;# 
  1980   000FBC                     CCPR2H          equ	4028	;# 
  1981   000FBD                     CCP1CON         equ	4029	;# 
  1982   000FBE                     CCPR1           equ	4030	;# 
  1983   000FBE                     CCPR1L          equ	4030	;# 
  1984   000FBF                     CCPR1H          equ	4031	;# 
  1985   000FC0                     ADCON2          equ	4032	;# 
  1986   000FC1                     ADCON1          equ	4033	;# 
  1987   000FC2                     ADCON0          equ	4034	;# 
  1988   000FC3                     ADRES           equ	4035	;# 
  1989   000FC3                     ADRESL          equ	4035	;# 
  1990   000FC4                     ADRESH          equ	4036	;# 
  1991   000FC5                     SSPCON2         equ	4037	;# 
  1992   000FC6                     SSPCON1         equ	4038	;# 
  1993   000FC7                     SSPSTAT         equ	4039	;# 
  1994   000FC8                     SSPADD          equ	4040	;# 
  1995   000FC9                     SSPBUF          equ	4041	;# 
  1996   000FCA                     T2CON           equ	4042	;# 
  1997   000FCB                     PR2             equ	4043	;# 
  1998   000FCB                     MEMCON          equ	4043	;# 
  1999   000FCC                     TMR2            equ	4044	;# 
  2000   000FCD                     T1CON           equ	4045	;# 
  2001   000FCE                     TMR1            equ	4046	;# 
  2002   000FCE                     TMR1L           equ	4046	;# 
  2003   000FCF                     TMR1H           equ	4047	;# 
  2004   000FD0                     RCON            equ	4048	;# 
  2005   000FD1                     WDTCON          equ	4049	;# 
  2006   000FD2                     HLVDCON         equ	4050	;# 
  2007   000FD2                     LVDCON          equ	4050	;# 
  2008   000FD3                     OSCCON          equ	4051	;# 
  2009   000FD5                     T0CON           equ	4053	;# 
  2010   000FD6                     TMR0            equ	4054	;# 
  2011   000FD6                     TMR0L           equ	4054	;# 
  2012   000FD7                     TMR0H           equ	4055	;# 
  2013   000FD8                     STATUS          equ	4056	;# 
  2014   000FD9                     FSR2            equ	4057	;# 
  2015   000FD9                     FSR2L           equ	4057	;# 
  2016   000FDA                     FSR2H           equ	4058	;# 
  2017   000FDB                     PLUSW2          equ	4059	;# 
  2018   000FDC                     PREINC2         equ	4060	;# 
  2019   000FDD                     POSTDEC2        equ	4061	;# 
  2020   000FDE                     POSTINC2        equ	4062	;# 
  2021   000FDF                     INDF2           equ	4063	;# 
  2022   000FE0                     BSR             equ	4064	;# 
  2023   000FE1                     FSR1            equ	4065	;# 
  2024   000FE1                     FSR1L           equ	4065	;# 
  2025   000FE2                     FSR1H           equ	4066	;# 
  2026   000FE3                     PLUSW1          equ	4067	;# 
  2027   000FE4                     PREINC1         equ	4068	;# 
  2028   000FE5                     POSTDEC1        equ	4069	;# 
  2029   000FE6                     POSTINC1        equ	4070	;# 
  2030   000FE7                     INDF1           equ	4071	;# 
  2031   000FE8                     WREG            equ	4072	;# 
  2032   000FE9                     FSR0            equ	4073	;# 
  2033   000FE9                     FSR0L           equ	4073	;# 
  2034   000FEA                     FSR0H           equ	4074	;# 
  2035   000FEB                     PLUSW0          equ	4075	;# 
  2036   000FEC                     PREINC0         equ	4076	;# 
  2037   000FED                     POSTDEC0        equ	4077	;# 
  2038   000FEE                     POSTINC0        equ	4078	;# 
  2039   000FEF                     INDF0           equ	4079	;# 
  2040   000FF0                     INTCON3         equ	4080	;# 
  2041   000FF1                     INTCON2         equ	4081	;# 
  2042   000FF2                     INTCON          equ	4082	;# 
  2043   000FF3                     PROD            equ	4083	;# 
  2044   000FF3                     PRODL           equ	4083	;# 
  2045   000FF4                     PRODH           equ	4084	;# 
  2046   000FF5                     TABLAT          equ	4085	;# 
  2047   000FF6                     TBLPTR          equ	4086	;# 
  2048   000FF6                     TBLPTRL         equ	4086	;# 
  2049   000FF7                     TBLPTRH         equ	4087	;# 
  2050   000FF8                     TBLPTRU         equ	4088	;# 
  2051   000FF9                     PCLAT           equ	4089	;# 
  2052   000FF9                     PC              equ	4089	;# 
  2053   000FF9                     PCL             equ	4089	;# 
  2054   000FFA                     PCLATH          equ	4090	;# 
  2055   000FFB                     PCLATU          equ	4091	;# 
  2056   000FFC                     STKPTR          equ	4092	;# 
  2057   000FFD                     TOS             equ	4093	;# 
  2058   000FFD                     TOSL            equ	4093	;# 
  2059   000FFE                     TOSH            equ	4094	;# 
  2060   000FFF                     TOSU            equ	4095	;# 
  2061   000F77                     SSPMSK          equ	3959	;# 
  2062   000F78                     SLRCON          equ	3960	;# 
  2063   000F79                     CM2CON1         equ	3961	;# 
  2064   000F7A                     CM2CON0         equ	3962	;# 
  2065   000F7B                     CM1CON0         equ	3963	;# 
  2066   000F7C                     WPUB            equ	3964	;# 
  2067   000F7D                     IOCB            equ	3965	;# 
  2068   000F7E                     ANSEL           equ	3966	;# 
  2069   000F7F                     ANSELH          equ	3967	;# 
  2070   000F80                     PORTA           equ	3968	;# 
  2071   000F81                     PORTB           equ	3969	;# 
  2072   000F82                     PORTC           equ	3970	;# 
  2073   000F83                     PORTD           equ	3971	;# 
  2074   000F84                     PORTE           equ	3972	;# 
  2075   000F89                     LATA            equ	3977	;# 
  2076   000F8A                     LATB            equ	3978	;# 
  2077   000F8B                     LATC            equ	3979	;# 
  2078   000F8C                     LATD            equ	3980	;# 
  2079   000F8D                     LATE            equ	3981	;# 
  2080   000F92                     TRISA           equ	3986	;# 
  2081   000F92                     DDRA            equ	3986	;# 
  2082   000F93                     TRISB           equ	3987	;# 
  2083   000F93                     DDRB            equ	3987	;# 
  2084   000F94                     TRISC           equ	3988	;# 
  2085   000F94                     DDRC            equ	3988	;# 
  2086   000F95                     TRISD           equ	3989	;# 
  2087   000F95                     DDRD            equ	3989	;# 
  2088   000F96                     TRISE           equ	3990	;# 
  2089   000F96                     DDRE            equ	3990	;# 
  2090   000F9B                     OSCTUNE         equ	3995	;# 
  2091   000F9D                     PIE1            equ	3997	;# 
  2092   000F9E                     PIR1            equ	3998	;# 
  2093   000F9F                     IPR1            equ	3999	;# 
  2094   000FA0                     PIE2            equ	4000	;# 
  2095   000FA1                     PIR2            equ	4001	;# 
  2096   000FA2                     IPR2            equ	4002	;# 
  2097   000FA6                     EECON1          equ	4006	;# 
  2098   000FA7                     EECON2          equ	4007	;# 
  2099   000FA8                     EEDATA          equ	4008	;# 
  2100   000FA9                     EEADR           equ	4009	;# 
  2101   000FAA                     EEADRH          equ	4010	;# 
  2102   000FAB                     RCSTA           equ	4011	;# 
  2103   000FAB                     RCSTA1          equ	4011	;# 
  2104   000FAC                     TXSTA           equ	4012	;# 
  2105   000FAC                     TXSTA1          equ	4012	;# 
  2106   000FAD                     TXREG           equ	4013	;# 
  2107   000FAD                     TXREG1          equ	4013	;# 
  2108   000FAE                     RCREG           equ	4014	;# 
  2109   000FAE                     RCREG1          equ	4014	;# 
  2110   000FAF                     SPBRG           equ	4015	;# 
  2111   000FAF                     SPBRG1          equ	4015	;# 
  2112   000FB0                     SPBRGH          equ	4016	;# 
  2113   000FB1                     T3CON           equ	4017	;# 
  2114   000FB2                     TMR3            equ	4018	;# 
  2115   000FB2                     TMR3L           equ	4018	;# 
  2116   000FB3                     TMR3H           equ	4019	;# 
  2117   000FB4                     CVRCON2         equ	4020	;# 
  2118   000FB5                     CVRCON          equ	4021	;# 
  2119   000FB6                     ECCP1AS         equ	4022	;# 
  2120   000FB7                     PWM1CON         equ	4023	;# 
  2121   000FB8                     BAUDCON         equ	4024	;# 
  2122   000FB8                     BAUDCTL         equ	4024	;# 
  2123   000FB9                     PSTRCON         equ	4025	;# 
  2124   000FBA                     CCP2CON         equ	4026	;# 
  2125   000FBB                     CCPR2           equ	4027	;# 
  2126   000FBB                     CCPR2L          equ	4027	;# 
  2127   000FBC                     CCPR2H          equ	4028	;# 
  2128   000FBD                     CCP1CON         equ	4029	;# 
  2129   000FBE                     CCPR1           equ	4030	;# 
  2130   000FBE                     CCPR1L          equ	4030	;# 
  2131   000FBF                     CCPR1H          equ	4031	;# 
  2132   000FC0                     ADCON2          equ	4032	;# 
  2133   000FC1                     ADCON1          equ	4033	;# 
  2134   000FC2                     ADCON0          equ	4034	;# 
  2135   000FC3                     ADRES           equ	4035	;# 
  2136   000FC3                     ADRESL          equ	4035	;# 
  2137   000FC4                     ADRESH          equ	4036	;# 
  2138   000FC5                     SSPCON2         equ	4037	;# 
  2139   000FC6                     SSPCON1         equ	4038	;# 
  2140   000FC7                     SSPSTAT         equ	4039	;# 
  2141   000FC8                     SSPADD          equ	4040	;# 
  2142   000FC9                     SSPBUF          equ	4041	;# 
  2143   000FCA                     T2CON           equ	4042	;# 
  2144   000FCB                     PR2             equ	4043	;# 
  2145   000FCB                     MEMCON          equ	4043	;# 
  2146   000FCC                     TMR2            equ	4044	;# 
  2147   000FCD                     T1CON           equ	4045	;# 
  2148   000FCE                     TMR1            equ	4046	;# 
  2149   000FCE                     TMR1L           equ	4046	;# 
  2150   000FCF                     TMR1H           equ	4047	;# 
  2151   000FD0                     RCON            equ	4048	;# 
  2152   000FD1                     WDTCON          equ	4049	;# 
  2153   000FD2                     HLVDCON         equ	4050	;# 
  2154   000FD2                     LVDCON          equ	4050	;# 
  2155   000FD3                     OSCCON          equ	4051	;# 
  2156   000FD5                     T0CON           equ	4053	;# 
  2157   000FD6                     TMR0            equ	4054	;# 
  2158   000FD6                     TMR0L           equ	4054	;# 
  2159   000FD7                     TMR0H           equ	4055	;# 
  2160   000FD8                     STATUS          equ	4056	;# 
  2161   000FD9                     FSR2            equ	4057	;# 
  2162   000FD9                     FSR2L           equ	4057	;# 
  2163   000FDA                     FSR2H           equ	4058	;# 
  2164   000FDB                     PLUSW2          equ	4059	;# 
  2165   000FDC                     PREINC2         equ	4060	;# 
  2166   000FDD                     POSTDEC2        equ	4061	;# 
  2167   000FDE                     POSTINC2        equ	4062	;# 
  2168   000FDF                     INDF2           equ	4063	;# 
  2169   000FE0                     BSR             equ	4064	;# 
  2170   000FE1                     FSR1            equ	4065	;# 
  2171   000FE1                     FSR1L           equ	4065	;# 
  2172   000FE2                     FSR1H           equ	4066	;# 
  2173   000FE3                     PLUSW1          equ	4067	;# 
  2174   000FE4                     PREINC1         equ	4068	;# 
  2175   000FE5                     POSTDEC1        equ	4069	;# 
  2176   000FE6                     POSTINC1        equ	4070	;# 
  2177   000FE7                     INDF1           equ	4071	;# 
  2178   000FE8                     WREG            equ	4072	;# 
  2179   000FE9                     FSR0            equ	4073	;# 
  2180   000FE9                     FSR0L           equ	4073	;# 
  2181   000FEA                     FSR0H           equ	4074	;# 
  2182   000FEB                     PLUSW0          equ	4075	;# 
  2183   000FEC                     PREINC0         equ	4076	;# 
  2184   000FED                     POSTDEC0        equ	4077	;# 
  2185   000FEE                     POSTINC0        equ	4078	;# 
  2186   000FEF                     INDF0           equ	4079	;# 
  2187   000FF0                     INTCON3         equ	4080	;# 
  2188   000FF1                     INTCON2         equ	4081	;# 
  2189   000FF2                     INTCON          equ	4082	;# 
  2190   000FF3                     PROD            equ	4083	;# 
  2191   000FF3                     PRODL           equ	4083	;# 
  2192   000FF4                     PRODH           equ	4084	;# 
  2193   000FF5                     TABLAT          equ	4085	;# 
  2194   000FF6                     TBLPTR          equ	4086	;# 
  2195   000FF6                     TBLPTRL         equ	4086	;# 
  2196   000FF7                     TBLPTRH         equ	4087	;# 
  2197   000FF8                     TBLPTRU         equ	4088	;# 
  2198   000FF9                     PCLAT           equ	4089	;# 
  2199   000FF9                     PC              equ	4089	;# 
  2200   000FF9                     PCL             equ	4089	;# 
  2201   000FFA                     PCLATH          equ	4090	;# 
  2202   000FFB                     PCLATU          equ	4091	;# 
  2203   000FFC                     STKPTR          equ	4092	;# 
  2204   000FFD                     TOS             equ	4093	;# 
  2205   000FFD                     TOSL            equ	4093	;# 
  2206   000FFE                     TOSH            equ	4094	;# 
  2207   000FFF                     TOSU            equ	4095	;# 
  2208   000F77                     SSPMSK          equ	3959	;# 
  2209   000F78                     SLRCON          equ	3960	;# 
  2210   000F79                     CM2CON1         equ	3961	;# 
  2211   000F7A                     CM2CON0         equ	3962	;# 
  2212   000F7B                     CM1CON0         equ	3963	;# 
  2213   000F7C                     WPUB            equ	3964	;# 
  2214   000F7D                     IOCB            equ	3965	;# 
  2215   000F7E                     ANSEL           equ	3966	;# 
  2216   000F7F                     ANSELH          equ	3967	;# 
  2217   000F80                     PORTA           equ	3968	;# 
  2218   000F81                     PORTB           equ	3969	;# 
  2219   000F82                     PORTC           equ	3970	;# 
  2220   000F83                     PORTD           equ	3971	;# 
  2221   000F84                     PORTE           equ	3972	;# 
  2222   000F89                     LATA            equ	3977	;# 
  2223   000F8A                     LATB            equ	3978	;# 
  2224   000F8B                     LATC            equ	3979	;# 
  2225   000F8C                     LATD            equ	3980	;# 
  2226   000F8D                     LATE            equ	3981	;# 
  2227   000F92                     TRISA           equ	3986	;# 
  2228   000F92                     DDRA            equ	3986	;# 
  2229   000F93                     TRISB           equ	3987	;# 
  2230   000F93                     DDRB            equ	3987	;# 
  2231   000F94                     TRISC           equ	3988	;# 
  2232   000F94                     DDRC            equ	3988	;# 
  2233   000F95                     TRISD           equ	3989	;# 
  2234   000F95                     DDRD            equ	3989	;# 
  2235   000F96                     TRISE           equ	3990	;# 
  2236   000F96                     DDRE            equ	3990	;# 
  2237   000F9B                     OSCTUNE         equ	3995	;# 
  2238   000F9D                     PIE1            equ	3997	;# 
  2239   000F9E                     PIR1            equ	3998	;# 
  2240   000F9F                     IPR1            equ	3999	;# 
  2241   000FA0                     PIE2            equ	4000	;# 
  2242   000FA1                     PIR2            equ	4001	;# 
  2243   000FA2                     IPR2            equ	4002	;# 
  2244   000FA6                     EECON1          equ	4006	;# 
  2245   000FA7                     EECON2          equ	4007	;# 
  2246   000FA8                     EEDATA          equ	4008	;# 
  2247   000FA9                     EEADR           equ	4009	;# 
  2248   000FAA                     EEADRH          equ	4010	;# 
  2249   000FAB                     RCSTA           equ	4011	;# 
  2250   000FAB                     RCSTA1          equ	4011	;# 
  2251   000FAC                     TXSTA           equ	4012	;# 
  2252   000FAC                     TXSTA1          equ	4012	;# 
  2253   000FAD                     TXREG           equ	4013	;# 
  2254   000FAD                     TXREG1          equ	4013	;# 
  2255   000FAE                     RCREG           equ	4014	;# 
  2256   000FAE                     RCREG1          equ	4014	;# 
  2257   000FAF                     SPBRG           equ	4015	;# 
  2258   000FAF                     SPBRG1          equ	4015	;# 
  2259   000FB0                     SPBRGH          equ	4016	;# 
  2260   000FB1                     T3CON           equ	4017	;# 
  2261   000FB2                     TMR3            equ	4018	;# 
  2262   000FB2                     TMR3L           equ	4018	;# 
  2263   000FB3                     TMR3H           equ	4019	;# 
  2264   000FB4                     CVRCON2         equ	4020	;# 
  2265   000FB5                     CVRCON          equ	4021	;# 
  2266   000FB6                     ECCP1AS         equ	4022	;# 
  2267   000FB7                     PWM1CON         equ	4023	;# 
  2268   000FB8                     BAUDCON         equ	4024	;# 
  2269   000FB8                     BAUDCTL         equ	4024	;# 
  2270   000FB9                     PSTRCON         equ	4025	;# 
  2271   000FBA                     CCP2CON         equ	4026	;# 
  2272   000FBB                     CCPR2           equ	4027	;# 
  2273   000FBB                     CCPR2L          equ	4027	;# 
  2274   000FBC                     CCPR2H          equ	4028	;# 
  2275   000FBD                     CCP1CON         equ	4029	;# 
  2276   000FBE                     CCPR1           equ	4030	;# 
  2277   000FBE                     CCPR1L          equ	4030	;# 
  2278   000FBF                     CCPR1H          equ	4031	;# 
  2279   000FC0                     ADCON2          equ	4032	;# 
  2280   000FC1                     ADCON1          equ	4033	;# 
  2281   000FC2                     ADCON0          equ	4034	;# 
  2282   000FC3                     ADRES           equ	4035	;# 
  2283   000FC3                     ADRESL          equ	4035	;# 
  2284   000FC4                     ADRESH          equ	4036	;# 
  2285   000FC5                     SSPCON2         equ	4037	;# 
  2286   000FC6                     SSPCON1         equ	4038	;# 
  2287   000FC7                     SSPSTAT         equ	4039	;# 
  2288   000FC8                     SSPADD          equ	4040	;# 
  2289   000FC9                     SSPBUF          equ	4041	;# 
  2290   000FCA                     T2CON           equ	4042	;# 
  2291   000FCB                     PR2             equ	4043	;# 
  2292   000FCB                     MEMCON          equ	4043	;# 
  2293   000FCC                     TMR2            equ	4044	;# 
  2294   000FCD                     T1CON           equ	4045	;# 
  2295   000FCE                     TMR1            equ	4046	;# 
  2296   000FCE                     TMR1L           equ	4046	;# 
  2297   000FCF                     TMR1H           equ	4047	;# 
  2298   000FD0                     RCON            equ	4048	;# 
  2299   000FD1                     WDTCON          equ	4049	;# 
  2300   000FD2                     HLVDCON         equ	4050	;# 
  2301   000FD2                     LVDCON          equ	4050	;# 
  2302   000FD3                     OSCCON          equ	4051	;# 
  2303   000FD5                     T0CON           equ	4053	;# 
  2304   000FD6                     TMR0            equ	4054	;# 
  2305   000FD6                     TMR0L           equ	4054	;# 
  2306   000FD7                     TMR0H           equ	4055	;# 
  2307   000FD8                     STATUS          equ	4056	;# 
  2308   000FD9                     FSR2            equ	4057	;# 
  2309   000FD9                     FSR2L           equ	4057	;# 
  2310   000FDA                     FSR2H           equ	4058	;# 
  2311   000FDB                     PLUSW2          equ	4059	;# 
  2312   000FDC                     PREINC2         equ	4060	;# 
  2313   000FDD                     POSTDEC2        equ	4061	;# 
  2314   000FDE                     POSTINC2        equ	4062	;# 
  2315   000FDF                     INDF2           equ	4063	;# 
  2316   000FE0                     BSR             equ	4064	;# 
  2317   000FE1                     FSR1            equ	4065	;# 
  2318   000FE1                     FSR1L           equ	4065	;# 
  2319   000FE2                     FSR1H           equ	4066	;# 
  2320   000FE3                     PLUSW1          equ	4067	;# 
  2321   000FE4                     PREINC1         equ	4068	;# 
  2322   000FE5                     POSTDEC1        equ	4069	;# 
  2323   000FE6                     POSTINC1        equ	4070	;# 
  2324   000FE7                     INDF1           equ	4071	;# 
  2325   000FE8                     WREG            equ	4072	;# 
  2326   000FE9                     FSR0            equ	4073	;# 
  2327   000FE9                     FSR0L           equ	4073	;# 
  2328   000FEA                     FSR0H           equ	4074	;# 
  2329   000FEB                     PLUSW0          equ	4075	;# 
  2330   000FEC                     PREINC0         equ	4076	;# 
  2331   000FED                     POSTDEC0        equ	4077	;# 
  2332   000FEE                     POSTINC0        equ	4078	;# 
  2333   000FEF                     INDF0           equ	4079	;# 
  2334   000FF0                     INTCON3         equ	4080	;# 
  2335   000FF1                     INTCON2         equ	4081	;# 
  2336   000FF2                     INTCON          equ	4082	;# 
  2337   000FF3                     PROD            equ	4083	;# 
  2338   000FF3                     PRODL           equ	4083	;# 
  2339   000FF4                     PRODH           equ	4084	;# 
  2340   000FF5                     TABLAT          equ	4085	;# 
  2341   000FF6                     TBLPTR          equ	4086	;# 
  2342   000FF6                     TBLPTRL         equ	4086	;# 
  2343   000FF7                     TBLPTRH         equ	4087	;# 
  2344   000FF8                     TBLPTRU         equ	4088	;# 
  2345   000FF9                     PCLAT           equ	4089	;# 
  2346   000FF9                     PC              equ	4089	;# 
  2347   000FF9                     PCL             equ	4089	;# 
  2348   000FFA                     PCLATH          equ	4090	;# 
  2349   000FFB                     PCLATU          equ	4091	;# 
  2350   000FFC                     STKPTR          equ	4092	;# 
  2351   000FFD                     TOS             equ	4093	;# 
  2352   000FFD                     TOSL            equ	4093	;# 
  2353   000FFE                     TOSH            equ	4094	;# 
  2354   000FFF                     TOSU            equ	4095	;# 
  2355   000F77                     SSPMSK          equ	3959	;# 
  2356   000F78                     SLRCON          equ	3960	;# 
  2357   000F79                     CM2CON1         equ	3961	;# 
  2358   000F7A                     CM2CON0         equ	3962	;# 
  2359   000F7B                     CM1CON0         equ	3963	;# 
  2360   000F7C                     WPUB            equ	3964	;# 
  2361   000F7D                     IOCB            equ	3965	;# 
  2362   000F7E                     ANSEL           equ	3966	;# 
  2363   000F7F                     ANSELH          equ	3967	;# 
  2364   000F80                     PORTA           equ	3968	;# 
  2365   000F81                     PORTB           equ	3969	;# 
  2366   000F82                     PORTC           equ	3970	;# 
  2367   000F83                     PORTD           equ	3971	;# 
  2368   000F84                     PORTE           equ	3972	;# 
  2369   000F89                     LATA            equ	3977	;# 
  2370   000F8A                     LATB            equ	3978	;# 
  2371   000F8B                     LATC            equ	3979	;# 
  2372   000F8C                     LATD            equ	3980	;# 
  2373   000F8D                     LATE            equ	3981	;# 
  2374   000F92                     TRISA           equ	3986	;# 
  2375   000F92                     DDRA            equ	3986	;# 
  2376   000F93                     TRISB           equ	3987	;# 
  2377   000F93                     DDRB            equ	3987	;# 
  2378   000F94                     TRISC           equ	3988	;# 
  2379   000F94                     DDRC            equ	3988	;# 
  2380   000F95                     TRISD           equ	3989	;# 
  2381   000F95                     DDRD            equ	3989	;# 
  2382   000F96                     TRISE           equ	3990	;# 
  2383   000F96                     DDRE            equ	3990	;# 
  2384   000F9B                     OSCTUNE         equ	3995	;# 
  2385   000F9D                     PIE1            equ	3997	;# 
  2386   000F9E                     PIR1            equ	3998	;# 
  2387   000F9F                     IPR1            equ	3999	;# 
  2388   000FA0                     PIE2            equ	4000	;# 
  2389   000FA1                     PIR2            equ	4001	;# 
  2390   000FA2                     IPR2            equ	4002	;# 
  2391   000FA6                     EECON1          equ	4006	;# 
  2392   000FA7                     EECON2          equ	4007	;# 
  2393   000FA8                     EEDATA          equ	4008	;# 
  2394   000FA9                     EEADR           equ	4009	;# 
  2395   000FAA                     EEADRH          equ	4010	;# 
  2396   000FAB                     RCSTA           equ	4011	;# 
  2397   000FAB                     RCSTA1          equ	4011	;# 
  2398   000FAC                     TXSTA           equ	4012	;# 
  2399   000FAC                     TXSTA1          equ	4012	;# 
  2400   000FAD                     TXREG           equ	4013	;# 
  2401   000FAD                     TXREG1          equ	4013	;# 
  2402   000FAE                     RCREG           equ	4014	;# 
  2403   000FAE                     RCREG1          equ	4014	;# 
  2404   000FAF                     SPBRG           equ	4015	;# 
  2405   000FAF                     SPBRG1          equ	4015	;# 
  2406   000FB0                     SPBRGH          equ	4016	;# 
  2407   000FB1                     T3CON           equ	4017	;# 
  2408   000FB2                     TMR3            equ	4018	;# 
  2409   000FB2                     TMR3L           equ	4018	;# 
  2410   000FB3                     TMR3H           equ	4019	;# 
  2411   000FB4                     CVRCON2         equ	4020	;# 
  2412   000FB5                     CVRCON          equ	4021	;# 
  2413   000FB6                     ECCP1AS         equ	4022	;# 
  2414   000FB7                     PWM1CON         equ	4023	;# 
  2415   000FB8                     BAUDCON         equ	4024	;# 
  2416   000FB8                     BAUDCTL         equ	4024	;# 
  2417   000FB9                     PSTRCON         equ	4025	;# 
  2418   000FBA                     CCP2CON         equ	4026	;# 
  2419   000FBB                     CCPR2           equ	4027	;# 
  2420   000FBB                     CCPR2L          equ	4027	;# 
  2421   000FBC                     CCPR2H          equ	4028	;# 
  2422   000FBD                     CCP1CON         equ	4029	;# 
  2423   000FBE                     CCPR1           equ	4030	;# 
  2424   000FBE                     CCPR1L          equ	4030	;# 
  2425   000FBF                     CCPR1H          equ	4031	;# 
  2426   000FC0                     ADCON2          equ	4032	;# 
  2427   000FC1                     ADCON1          equ	4033	;# 
  2428   000FC2                     ADCON0          equ	4034	;# 
  2429   000FC3                     ADRES           equ	4035	;# 
  2430   000FC3                     ADRESL          equ	4035	;# 
  2431   000FC4                     ADRESH          equ	4036	;# 
  2432   000FC5                     SSPCON2         equ	4037	;# 
  2433   000FC6                     SSPCON1         equ	4038	;# 
  2434   000FC7                     SSPSTAT         equ	4039	;# 
  2435   000FC8                     SSPADD          equ	4040	;# 
  2436   000FC9                     SSPBUF          equ	4041	;# 
  2437   000FCA                     T2CON           equ	4042	;# 
  2438   000FCB                     PR2             equ	4043	;# 
  2439   000FCB                     MEMCON          equ	4043	;# 
  2440   000FCC                     TMR2            equ	4044	;# 
  2441   000FCD                     T1CON           equ	4045	;# 
  2442   000FCE                     TMR1            equ	4046	;# 
  2443   000FCE                     TMR1L           equ	4046	;# 
  2444   000FCF                     TMR1H           equ	4047	;# 
  2445   000FD0                     RCON            equ	4048	;# 
  2446   000FD1                     WDTCON          equ	4049	;# 
  2447   000FD2                     HLVDCON         equ	4050	;# 
  2448   000FD2                     LVDCON          equ	4050	;# 
  2449   000FD3                     OSCCON          equ	4051	;# 
  2450   000FD5                     T0CON           equ	4053	;# 
  2451   000FD6                     TMR0            equ	4054	;# 
  2452   000FD6                     TMR0L           equ	4054	;# 
  2453   000FD7                     TMR0H           equ	4055	;# 
  2454   000FD8                     STATUS          equ	4056	;# 
  2455   000FD9                     FSR2            equ	4057	;# 
  2456   000FD9                     FSR2L           equ	4057	;# 
  2457   000FDA                     FSR2H           equ	4058	;# 
  2458   000FDB                     PLUSW2          equ	4059	;# 
  2459   000FDC                     PREINC2         equ	4060	;# 
  2460   000FDD                     POSTDEC2        equ	4061	;# 
  2461   000FDE                     POSTINC2        equ	4062	;# 
  2462   000FDF                     INDF2           equ	4063	;# 
  2463   000FE0                     BSR             equ	4064	;# 
  2464   000FE1                     FSR1            equ	4065	;# 
  2465   000FE1                     FSR1L           equ	4065	;# 
  2466   000FE2                     FSR1H           equ	4066	;# 
  2467   000FE3                     PLUSW1          equ	4067	;# 
  2468   000FE4                     PREINC1         equ	4068	;# 
  2469   000FE5                     POSTDEC1        equ	4069	;# 
  2470   000FE6                     POSTINC1        equ	4070	;# 
  2471   000FE7                     INDF1           equ	4071	;# 
  2472   000FE8                     WREG            equ	4072	;# 
  2473   000FE9                     FSR0            equ	4073	;# 
  2474   000FE9                     FSR0L           equ	4073	;# 
  2475   000FEA                     FSR0H           equ	4074	;# 
  2476   000FEB                     PLUSW0          equ	4075	;# 
  2477   000FEC                     PREINC0         equ	4076	;# 
  2478   000FED                     POSTDEC0        equ	4077	;# 
  2479   000FEE                     POSTINC0        equ	4078	;# 
  2480   000FEF                     INDF0           equ	4079	;# 
  2481   000FF0                     INTCON3         equ	4080	;# 
  2482   000FF1                     INTCON2         equ	4081	;# 
  2483   000FF2                     INTCON          equ	4082	;# 
  2484   000FF3                     PROD            equ	4083	;# 
  2485   000FF3                     PRODL           equ	4083	;# 
  2486   000FF4                     PRODH           equ	4084	;# 
  2487   000FF5                     TABLAT          equ	4085	;# 
  2488   000FF6                     TBLPTR          equ	4086	;# 
  2489   000FF6                     TBLPTRL         equ	4086	;# 
  2490   000FF7                     TBLPTRH         equ	4087	;# 
  2491   000FF8                     TBLPTRU         equ	4088	;# 
  2492   000FF9                     PCLAT           equ	4089	;# 
  2493   000FF9                     PC              equ	4089	;# 
  2494   000FF9                     PCL             equ	4089	;# 
  2495   000FFA                     PCLATH          equ	4090	;# 
  2496   000FFB                     PCLATU          equ	4091	;# 
  2497   000FFC                     STKPTR          equ	4092	;# 
  2498   000FFD                     TOS             equ	4093	;# 
  2499   000FFD                     TOSL            equ	4093	;# 
  2500   000FFE                     TOSH            equ	4094	;# 
  2501   000FFF                     TOSU            equ	4095	;# 
  2502   000F77                     SSPMSK          equ	3959	;# 
  2503   000F78                     SLRCON          equ	3960	;# 
  2504   000F79                     CM2CON1         equ	3961	;# 
  2505   000F7A                     CM2CON0         equ	3962	;# 
  2506   000F7B                     CM1CON0         equ	3963	;# 
  2507   000F7C                     WPUB            equ	3964	;# 
  2508   000F7D                     IOCB            equ	3965	;# 
  2509   000F7E                     ANSEL           equ	3966	;# 
  2510   000F7F                     ANSELH          equ	3967	;# 
  2511   000F80                     PORTA           equ	3968	;# 
  2512   000F81                     PORTB           equ	3969	;# 
  2513   000F82                     PORTC           equ	3970	;# 
  2514   000F83                     PORTD           equ	3971	;# 
  2515   000F84                     PORTE           equ	3972	;# 
  2516   000F89                     LATA            equ	3977	;# 
  2517   000F8A                     LATB            equ	3978	;# 
  2518   000F8B                     LATC            equ	3979	;# 
  2519   000F8C                     LATD            equ	3980	;# 
  2520   000F8D                     LATE            equ	3981	;# 
  2521   000F92                     TRISA           equ	3986	;# 
  2522   000F92                     DDRA            equ	3986	;# 
  2523   000F93                     TRISB           equ	3987	;# 
  2524   000F93                     DDRB            equ	3987	;# 
  2525   000F94                     TRISC           equ	3988	;# 
  2526   000F94                     DDRC            equ	3988	;# 
  2527   000F95                     TRISD           equ	3989	;# 
  2528   000F95                     DDRD            equ	3989	;# 
  2529   000F96                     TRISE           equ	3990	;# 
  2530   000F96                     DDRE            equ	3990	;# 
  2531   000F9B                     OSCTUNE         equ	3995	;# 
  2532   000F9D                     PIE1            equ	3997	;# 
  2533   000F9E                     PIR1            equ	3998	;# 
  2534   000F9F                     IPR1            equ	3999	;# 
  2535   000FA0                     PIE2            equ	4000	;# 
  2536   000FA1                     PIR2            equ	4001	;# 
  2537   000FA2                     IPR2            equ	4002	;# 
  2538   000FA6                     EECON1          equ	4006	;# 
  2539   000FA7                     EECON2          equ	4007	;# 
  2540   000FA8                     EEDATA          equ	4008	;# 
  2541   000FA9                     EEADR           equ	4009	;# 
  2542   000FAA                     EEADRH          equ	4010	;# 
  2543   000FAB                     RCSTA           equ	4011	;# 
  2544   000FAB                     RCSTA1          equ	4011	;# 
  2545   000FAC                     TXSTA           equ	4012	;# 
  2546   000FAC                     TXSTA1          equ	4012	;# 
  2547   000FAD                     TXREG           equ	4013	;# 
  2548   000FAD                     TXREG1          equ	4013	;# 
  2549   000FAE                     RCREG           equ	4014	;# 
  2550   000FAE                     RCREG1          equ	4014	;# 
  2551   000FAF                     SPBRG           equ	4015	;# 
  2552   000FAF                     SPBRG1          equ	4015	;# 
  2553   000FB0                     SPBRGH          equ	4016	;# 
  2554   000FB1                     T3CON           equ	4017	;# 
  2555   000FB2                     TMR3            equ	4018	;# 
  2556   000FB2                     TMR3L           equ	4018	;# 
  2557   000FB3                     TMR3H           equ	4019	;# 
  2558   000FB4                     CVRCON2         equ	4020	;# 
  2559   000FB5                     CVRCON          equ	4021	;# 
  2560   000FB6                     ECCP1AS         equ	4022	;# 
  2561   000FB7                     PWM1CON         equ	4023	;# 
  2562   000FB8                     BAUDCON         equ	4024	;# 
  2563   000FB8                     BAUDCTL         equ	4024	;# 
  2564   000FB9                     PSTRCON         equ	4025	;# 
  2565   000FBA                     CCP2CON         equ	4026	;# 
  2566   000FBB                     CCPR2           equ	4027	;# 
  2567   000FBB                     CCPR2L          equ	4027	;# 
  2568   000FBC                     CCPR2H          equ	4028	;# 
  2569   000FBD                     CCP1CON         equ	4029	;# 
  2570   000FBE                     CCPR1           equ	4030	;# 
  2571   000FBE                     CCPR1L          equ	4030	;# 
  2572   000FBF                     CCPR1H          equ	4031	;# 
  2573   000FC0                     ADCON2          equ	4032	;# 
  2574   000FC1                     ADCON1          equ	4033	;# 
  2575   000FC2                     ADCON0          equ	4034	;# 
  2576   000FC3                     ADRES           equ	4035	;# 
  2577   000FC3                     ADRESL          equ	4035	;# 
  2578   000FC4                     ADRESH          equ	4036	;# 
  2579   000FC5                     SSPCON2         equ	4037	;# 
  2580   000FC6                     SSPCON1         equ	4038	;# 
  2581   000FC7                     SSPSTAT         equ	4039	;# 
  2582   000FC8                     SSPADD          equ	4040	;# 
  2583   000FC9                     SSPBUF          equ	4041	;# 
  2584   000FCA                     T2CON           equ	4042	;# 
  2585   000FCB                     PR2             equ	4043	;# 
  2586   000FCB                     MEMCON          equ	4043	;# 
  2587   000FCC                     TMR2            equ	4044	;# 
  2588   000FCD                     T1CON           equ	4045	;# 
  2589   000FCE                     TMR1            equ	4046	;# 
  2590   000FCE                     TMR1L           equ	4046	;# 
  2591   000FCF                     TMR1H           equ	4047	;# 
  2592   000FD0                     RCON            equ	4048	;# 
  2593   000FD1                     WDTCON          equ	4049	;# 
  2594   000FD2                     HLVDCON         equ	4050	;# 
  2595   000FD2                     LVDCON          equ	4050	;# 
  2596   000FD3                     OSCCON          equ	4051	;# 
  2597   000FD5                     T0CON           equ	4053	;# 
  2598   000FD6                     TMR0            equ	4054	;# 
  2599   000FD6                     TMR0L           equ	4054	;# 
  2600   000FD7                     TMR0H           equ	4055	;# 
  2601   000FD8                     STATUS          equ	4056	;# 
  2602   000FD9                     FSR2            equ	4057	;# 
  2603   000FD9                     FSR2L           equ	4057	;# 
  2604   000FDA                     FSR2H           equ	4058	;# 
  2605   000FDB                     PLUSW2          equ	4059	;# 
  2606   000FDC                     PREINC2         equ	4060	;# 
  2607   000FDD                     POSTDEC2        equ	4061	;# 
  2608   000FDE                     POSTINC2        equ	4062	;# 
  2609   000FDF                     INDF2           equ	4063	;# 
  2610   000FE0                     BSR             equ	4064	;# 
  2611   000FE1                     FSR1            equ	4065	;# 
  2612   000FE1                     FSR1L           equ	4065	;# 
  2613   000FE2                     FSR1H           equ	4066	;# 
  2614   000FE3                     PLUSW1          equ	4067	;# 
  2615   000FE4                     PREINC1         equ	4068	;# 
  2616   000FE5                     POSTDEC1        equ	4069	;# 
  2617   000FE6                     POSTINC1        equ	4070	;# 
  2618   000FE7                     INDF1           equ	4071	;# 
  2619   000FE8                     WREG            equ	4072	;# 
  2620   000FE9                     FSR0            equ	4073	;# 
  2621   000FE9                     FSR0L           equ	4073	;# 
  2622   000FEA                     FSR0H           equ	4074	;# 
  2623   000FEB                     PLUSW0          equ	4075	;# 
  2624   000FEC                     PREINC0         equ	4076	;# 
  2625   000FED                     POSTDEC0        equ	4077	;# 
  2626   000FEE                     POSTINC0        equ	4078	;# 
  2627   000FEF                     INDF0           equ	4079	;# 
  2628   000FF0                     INTCON3         equ	4080	;# 
  2629   000FF1                     INTCON2         equ	4081	;# 
  2630   000FF2                     INTCON          equ	4082	;# 
  2631   000FF3                     PROD            equ	4083	;# 
  2632   000FF3                     PRODL           equ	4083	;# 
  2633   000FF4                     PRODH           equ	4084	;# 
  2634   000FF5                     TABLAT          equ	4085	;# 
  2635   000FF6                     TBLPTR          equ	4086	;# 
  2636   000FF6                     TBLPTRL         equ	4086	;# 
  2637   000FF7                     TBLPTRH         equ	4087	;# 
  2638   000FF8                     TBLPTRU         equ	4088	;# 
  2639   000FF9                     PCLAT           equ	4089	;# 
  2640   000FF9                     PC              equ	4089	;# 
  2641   000FF9                     PCL             equ	4089	;# 
  2642   000FFA                     PCLATH          equ	4090	;# 
  2643   000FFB                     PCLATU          equ	4091	;# 
  2644   000FFC                     STKPTR          equ	4092	;# 
  2645   000FFD                     TOS             equ	4093	;# 
  2646   000FFD                     TOSL            equ	4093	;# 
  2647   000FFE                     TOSH            equ	4094	;# 
  2648   000FFF                     TOSU            equ	4095	;# 
  2649   000F77                     SSPMSK          equ	3959	;# 
  2650   000F78                     SLRCON          equ	3960	;# 
  2651   000F79                     CM2CON1         equ	3961	;# 
  2652   000F7A                     CM2CON0         equ	3962	;# 
  2653   000F7B                     CM1CON0         equ	3963	;# 
  2654   000F7C                     WPUB            equ	3964	;# 
  2655   000F7D                     IOCB            equ	3965	;# 
  2656   000F7E                     ANSEL           equ	3966	;# 
  2657   000F7F                     ANSELH          equ	3967	;# 
  2658   000F80                     PORTA           equ	3968	;# 
  2659   000F81                     PORTB           equ	3969	;# 
  2660   000F82                     PORTC           equ	3970	;# 
  2661   000F83                     PORTD           equ	3971	;# 
  2662   000F84                     PORTE           equ	3972	;# 
  2663   000F89                     LATA            equ	3977	;# 
  2664   000F8A                     LATB            equ	3978	;# 
  2665   000F8B                     LATC            equ	3979	;# 
  2666   000F8C                     LATD            equ	3980	;# 
  2667   000F8D                     LATE            equ	3981	;# 
  2668   000F92                     TRISA           equ	3986	;# 
  2669   000F92                     DDRA            equ	3986	;# 
  2670   000F93                     TRISB           equ	3987	;# 
  2671   000F93                     DDRB            equ	3987	;# 
  2672   000F94                     TRISC           equ	3988	;# 
  2673   000F94                     DDRC            equ	3988	;# 
  2674   000F95                     TRISD           equ	3989	;# 
  2675   000F95                     DDRD            equ	3989	;# 
  2676   000F96                     TRISE           equ	3990	;# 
  2677   000F96                     DDRE            equ	3990	;# 
  2678   000F9B                     OSCTUNE         equ	3995	;# 
  2679   000F9D                     PIE1            equ	3997	;# 
  2680   000F9E                     PIR1            equ	3998	;# 
  2681   000F9F                     IPR1            equ	3999	;# 
  2682   000FA0                     PIE2            equ	4000	;# 
  2683   000FA1                     PIR2            equ	4001	;# 
  2684   000FA2                     IPR2            equ	4002	;# 
  2685   000FA6                     EECON1          equ	4006	;# 
  2686   000FA7                     EECON2          equ	4007	;# 
  2687   000FA8                     EEDATA          equ	4008	;# 
  2688   000FA9                     EEADR           equ	4009	;# 
  2689   000FAA                     EEADRH          equ	4010	;# 
  2690   000FAB                     RCSTA           equ	4011	;# 
  2691   000FAB                     RCSTA1          equ	4011	;# 
  2692   000FAC                     TXSTA           equ	4012	;# 
  2693   000FAC                     TXSTA1          equ	4012	;# 
  2694   000FAD                     TXREG           equ	4013	;# 
  2695   000FAD                     TXREG1          equ	4013	;# 
  2696   000FAE                     RCREG           equ	4014	;# 
  2697   000FAE                     RCREG1          equ	4014	;# 
  2698   000FAF                     SPBRG           equ	4015	;# 
  2699   000FAF                     SPBRG1          equ	4015	;# 
  2700   000FB0                     SPBRGH          equ	4016	;# 
  2701   000FB1                     T3CON           equ	4017	;# 
  2702   000FB2                     TMR3            equ	4018	;# 
  2703   000FB2                     TMR3L           equ	4018	;# 
  2704   000FB3                     TMR3H           equ	4019	;# 
  2705   000FB4                     CVRCON2         equ	4020	;# 
  2706   000FB5                     CVRCON          equ	4021	;# 
  2707   000FB6                     ECCP1AS         equ	4022	;# 
  2708   000FB7                     PWM1CON         equ	4023	;# 
  2709   000FB8                     BAUDCON         equ	4024	;# 
  2710   000FB8                     BAUDCTL         equ	4024	;# 
  2711   000FB9                     PSTRCON         equ	4025	;# 
  2712   000FBA                     CCP2CON         equ	4026	;# 
  2713   000FBB                     CCPR2           equ	4027	;# 
  2714   000FBB                     CCPR2L          equ	4027	;# 
  2715   000FBC                     CCPR2H          equ	4028	;# 
  2716   000FBD                     CCP1CON         equ	4029	;# 
  2717   000FBE                     CCPR1           equ	4030	;# 
  2718   000FBE                     CCPR1L          equ	4030	;# 
  2719   000FBF                     CCPR1H          equ	4031	;# 
  2720   000FC0                     ADCON2          equ	4032	;# 
  2721   000FC1                     ADCON1          equ	4033	;# 
  2722   000FC2                     ADCON0          equ	4034	;# 
  2723   000FC3                     ADRES           equ	4035	;# 
  2724   000FC3                     ADRESL          equ	4035	;# 
  2725   000FC4                     ADRESH          equ	4036	;# 
  2726   000FC5                     SSPCON2         equ	4037	;# 
  2727   000FC6                     SSPCON1         equ	4038	;# 
  2728   000FC7                     SSPSTAT         equ	4039	;# 
  2729   000FC8                     SSPADD          equ	4040	;# 
  2730   000FC9                     SSPBUF          equ	4041	;# 
  2731   000FCA                     T2CON           equ	4042	;# 
  2732   000FCB                     PR2             equ	4043	;# 
  2733   000FCB                     MEMCON          equ	4043	;# 
  2734   000FCC                     TMR2            equ	4044	;# 
  2735   000FCD                     T1CON           equ	4045	;# 
  2736   000FCE                     TMR1            equ	4046	;# 
  2737   000FCE                     TMR1L           equ	4046	;# 
  2738   000FCF                     TMR1H           equ	4047	;# 
  2739   000FD0                     RCON            equ	4048	;# 
  2740   000FD1                     WDTCON          equ	4049	;# 
  2741   000FD2                     HLVDCON         equ	4050	;# 
  2742   000FD2                     LVDCON          equ	4050	;# 
  2743   000FD3                     OSCCON          equ	4051	;# 
  2744   000FD5                     T0CON           equ	4053	;# 
  2745   000FD6                     TMR0            equ	4054	;# 
  2746   000FD6                     TMR0L           equ	4054	;# 
  2747   000FD7                     TMR0H           equ	4055	;# 
  2748   000FD8                     STATUS          equ	4056	;# 
  2749   000FD9                     FSR2            equ	4057	;# 
  2750   000FD9                     FSR2L           equ	4057	;# 
  2751   000FDA                     FSR2H           equ	4058	;# 
  2752   000FDB                     PLUSW2          equ	4059	;# 
  2753   000FDC                     PREINC2         equ	4060	;# 
  2754   000FDD                     POSTDEC2        equ	4061	;# 
  2755   000FDE                     POSTINC2        equ	4062	;# 
  2756   000FDF                     INDF2           equ	4063	;# 
  2757   000FE0                     BSR             equ	4064	;# 
  2758   000FE1                     FSR1            equ	4065	;# 
  2759   000FE1                     FSR1L           equ	4065	;# 
  2760   000FE2                     FSR1H           equ	4066	;# 
  2761   000FE3                     PLUSW1          equ	4067	;# 
  2762   000FE4                     PREINC1         equ	4068	;# 
  2763   000FE5                     POSTDEC1        equ	4069	;# 
  2764   000FE6                     POSTINC1        equ	4070	;# 
  2765   000FE7                     INDF1           equ	4071	;# 
  2766   000FE8                     WREG            equ	4072	;# 
  2767   000FE9                     FSR0            equ	4073	;# 
  2768   000FE9                     FSR0L           equ	4073	;# 
  2769   000FEA                     FSR0H           equ	4074	;# 
  2770   000FEB                     PLUSW0          equ	4075	;# 
  2771   000FEC                     PREINC0         equ	4076	;# 
  2772   000FED                     POSTDEC0        equ	4077	;# 
  2773   000FEE                     POSTINC0        equ	4078	;# 
  2774   000FEF                     INDF0           equ	4079	;# 
  2775   000FF0                     INTCON3         equ	4080	;# 
  2776   000FF1                     INTCON2         equ	4081	;# 
  2777   000FF2                     INTCON          equ	4082	;# 
  2778   000FF3                     PROD            equ	4083	;# 
  2779   000FF3                     PRODL           equ	4083	;# 
  2780   000FF4                     PRODH           equ	4084	;# 
  2781   000FF5                     TABLAT          equ	4085	;# 
  2782   000FF6                     TBLPTR          equ	4086	;# 
  2783   000FF6                     TBLPTRL         equ	4086	;# 
  2784   000FF7                     TBLPTRH         equ	4087	;# 
  2785   000FF8                     TBLPTRU         equ	4088	;# 
  2786   000FF9                     PCLAT           equ	4089	;# 
  2787   000FF9                     PC              equ	4089	;# 
  2788   000FF9                     PCL             equ	4089	;# 
  2789   000FFA                     PCLATH          equ	4090	;# 
  2790   000FFB                     PCLATU          equ	4091	;# 
  2791   000FFC                     STKPTR          equ	4092	;# 
  2792   000FFD                     TOS             equ	4093	;# 
  2793   000FFD                     TOSL            equ	4093	;# 
  2794   000FFE                     TOSH            equ	4094	;# 
  2795   000FFF                     TOSU            equ	4095	;# 
  2796   000F77                     SSPMSK          equ	3959	;# 
  2797   000F78                     SLRCON          equ	3960	;# 
  2798   000F79                     CM2CON1         equ	3961	;# 
  2799   000F7A                     CM2CON0         equ	3962	;# 
  2800   000F7B                     CM1CON0         equ	3963	;# 
  2801   000F7C                     WPUB            equ	3964	;# 
  2802   000F7D                     IOCB            equ	3965	;# 
  2803   000F7E                     ANSEL           equ	3966	;# 
  2804   000F7F                     ANSELH          equ	3967	;# 
  2805   000F80                     PORTA           equ	3968	;# 
  2806   000F81                     PORTB           equ	3969	;# 
  2807   000F82                     PORTC           equ	3970	;# 
  2808   000F83                     PORTD           equ	3971	;# 
  2809   000F84                     PORTE           equ	3972	;# 
  2810   000F89                     LATA            equ	3977	;# 
  2811   000F8A                     LATB            equ	3978	;# 
  2812   000F8B                     LATC            equ	3979	;# 
  2813   000F8C                     LATD            equ	3980	;# 
  2814   000F8D                     LATE            equ	3981	;# 
  2815   000F92                     TRISA           equ	3986	;# 
  2816   000F92                     DDRA            equ	3986	;# 
  2817   000F93                     TRISB           equ	3987	;# 
  2818   000F93                     DDRB            equ	3987	;# 
  2819   000F94                     TRISC           equ	3988	;# 
  2820   000F94                     DDRC            equ	3988	;# 
  2821   000F95                     TRISD           equ	3989	;# 
  2822   000F95                     DDRD            equ	3989	;# 
  2823   000F96                     TRISE           equ	3990	;# 
  2824   000F96                     DDRE            equ	3990	;# 
  2825   000F9B                     OSCTUNE         equ	3995	;# 
  2826   000F9D                     PIE1            equ	3997	;# 
  2827   000F9E                     PIR1            equ	3998	;# 
  2828   000F9F                     IPR1            equ	3999	;# 
  2829   000FA0                     PIE2            equ	4000	;# 
  2830   000FA1                     PIR2            equ	4001	;# 
  2831   000FA2                     IPR2            equ	4002	;# 
  2832   000FA6                     EECON1          equ	4006	;# 
  2833   000FA7                     EECON2          equ	4007	;# 
  2834   000FA8                     EEDATA          equ	4008	;# 
  2835   000FA9                     EEADR           equ	4009	;# 
  2836   000FAA                     EEADRH          equ	4010	;# 
  2837   000FAB                     RCSTA           equ	4011	;# 
  2838   000FAB                     RCSTA1          equ	4011	;# 
  2839   000FAC                     TXSTA           equ	4012	;# 
  2840   000FAC                     TXSTA1          equ	4012	;# 
  2841   000FAD                     TXREG           equ	4013	;# 
  2842   000FAD                     TXREG1          equ	4013	;# 
  2843   000FAE                     RCREG           equ	4014	;# 
  2844   000FAE                     RCREG1          equ	4014	;# 
  2845   000FAF                     SPBRG           equ	4015	;# 
  2846   000FAF                     SPBRG1          equ	4015	;# 
  2847   000FB0                     SPBRGH          equ	4016	;# 
  2848   000FB1                     T3CON           equ	4017	;# 
  2849   000FB2                     TMR3            equ	4018	;# 
  2850   000FB2                     TMR3L           equ	4018	;# 
  2851   000FB3                     TMR3H           equ	4019	;# 
  2852   000FB4                     CVRCON2         equ	4020	;# 
  2853   000FB5                     CVRCON          equ	4021	;# 
  2854   000FB6                     ECCP1AS         equ	4022	;# 
  2855   000FB7                     PWM1CON         equ	4023	;# 
  2856   000FB8                     BAUDCON         equ	4024	;# 
  2857   000FB8                     BAUDCTL         equ	4024	;# 
  2858   000FB9                     PSTRCON         equ	4025	;# 
  2859   000FBA                     CCP2CON         equ	4026	;# 
  2860   000FBB                     CCPR2           equ	4027	;# 
  2861   000FBB                     CCPR2L          equ	4027	;# 
  2862   000FBC                     CCPR2H          equ	4028	;# 
  2863   000FBD                     CCP1CON         equ	4029	;# 
  2864   000FBE                     CCPR1           equ	4030	;# 
  2865   000FBE                     CCPR1L          equ	4030	;# 
  2866   000FBF                     CCPR1H          equ	4031	;# 
  2867   000FC0                     ADCON2          equ	4032	;# 
  2868   000FC1                     ADCON1          equ	4033	;# 
  2869   000FC2                     ADCON0          equ	4034	;# 
  2870   000FC3                     ADRES           equ	4035	;# 
  2871   000FC3                     ADRESL          equ	4035	;# 
  2872   000FC4                     ADRESH          equ	4036	;# 
  2873   000FC5                     SSPCON2         equ	4037	;# 
  2874   000FC6                     SSPCON1         equ	4038	;# 
  2875   000FC7                     SSPSTAT         equ	4039	;# 
  2876   000FC8                     SSPADD          equ	4040	;# 
  2877   000FC9                     SSPBUF          equ	4041	;# 
  2878   000FCA                     T2CON           equ	4042	;# 
  2879   000FCB                     PR2             equ	4043	;# 
  2880   000FCB                     MEMCON          equ	4043	;# 
  2881   000FCC                     TMR2            equ	4044	;# 
  2882   000FCD                     T1CON           equ	4045	;# 
  2883   000FCE                     TMR1            equ	4046	;# 
  2884   000FCE                     TMR1L           equ	4046	;# 
  2885   000FCF                     TMR1H           equ	4047	;# 
  2886   000FD0                     RCON            equ	4048	;# 
  2887   000FD1                     WDTCON          equ	4049	;# 
  2888   000FD2                     HLVDCON         equ	4050	;# 
  2889   000FD2                     LVDCON          equ	4050	;# 
  2890   000FD3                     OSCCON          equ	4051	;# 
  2891   000FD5                     T0CON           equ	4053	;# 
  2892   000FD6                     TMR0            equ	4054	;# 
  2893   000FD6                     TMR0L           equ	4054	;# 
  2894   000FD7                     TMR0H           equ	4055	;# 
  2895   000FD8                     STATUS          equ	4056	;# 
  2896   000FD9                     FSR2            equ	4057	;# 
  2897   000FD9                     FSR2L           equ	4057	;# 
  2898   000FDA                     FSR2H           equ	4058	;# 
  2899   000FDB                     PLUSW2          equ	4059	;# 
  2900   000FDC                     PREINC2         equ	4060	;# 
  2901   000FDD                     POSTDEC2        equ	4061	;# 
  2902   000FDE                     POSTINC2        equ	4062	;# 
  2903   000FDF                     INDF2           equ	4063	;# 
  2904   000FE0                     BSR             equ	4064	;# 
  2905   000FE1                     FSR1            equ	4065	;# 
  2906   000FE1                     FSR1L           equ	4065	;# 
  2907   000FE2                     FSR1H           equ	4066	;# 
  2908   000FE3                     PLUSW1          equ	4067	;# 
  2909   000FE4                     PREINC1         equ	4068	;# 
  2910   000FE5                     POSTDEC1        equ	4069	;# 
  2911   000FE6                     POSTINC1        equ	4070	;# 
  2912   000FE7                     INDF1           equ	4071	;# 
  2913   000FE8                     WREG            equ	4072	;# 
  2914   000FE9                     FSR0            equ	4073	;# 
  2915   000FE9                     FSR0L           equ	4073	;# 
  2916   000FEA                     FSR0H           equ	4074	;# 
  2917   000FEB                     PLUSW0          equ	4075	;# 
  2918   000FEC                     PREINC0         equ	4076	;# 
  2919   000FED                     POSTDEC0        equ	4077	;# 
  2920   000FEE                     POSTINC0        equ	4078	;# 
  2921   000FEF                     INDF0           equ	4079	;# 
  2922   000FF0                     INTCON3         equ	4080	;# 
  2923   000FF1                     INTCON2         equ	4081	;# 
  2924   000FF2                     INTCON          equ	4082	;# 
  2925   000FF3                     PROD            equ	4083	;# 
  2926   000FF3                     PRODL           equ	4083	;# 
  2927   000FF4                     PRODH           equ	4084	;# 
  2928   000FF5                     TABLAT          equ	4085	;# 
  2929   000FF6                     TBLPTR          equ	4086	;# 
  2930   000FF6                     TBLPTRL         equ	4086	;# 
  2931   000FF7                     TBLPTRH         equ	4087	;# 
  2932   000FF8                     TBLPTRU         equ	4088	;# 
  2933   000FF9                     PCLAT           equ	4089	;# 
  2934   000FF9                     PC              equ	4089	;# 
  2935   000FF9                     PCL             equ	4089	;# 
  2936   000FFA                     PCLATH          equ	4090	;# 
  2937   000FFB                     PCLATU          equ	4091	;# 
  2938   000FFC                     STKPTR          equ	4092	;# 
  2939   000FFD                     TOS             equ	4093	;# 
  2940   000FFD                     TOSL            equ	4093	;# 
  2941   000FFE                     TOSH            equ	4094	;# 
  2942   000FFF                     TOSU            equ	4095	;# 
  2943   000F77                     SSPMSK          equ	3959	;# 
  2944   000F78                     SLRCON          equ	3960	;# 
  2945   000F79                     CM2CON1         equ	3961	;# 
  2946   000F7A                     CM2CON0         equ	3962	;# 
  2947   000F7B                     CM1CON0         equ	3963	;# 
  2948   000F7C                     WPUB            equ	3964	;# 
  2949   000F7D                     IOCB            equ	3965	;# 
  2950   000F7E                     ANSEL           equ	3966	;# 
  2951   000F7F                     ANSELH          equ	3967	;# 
  2952   000F80                     PORTA           equ	3968	;# 
  2953   000F81                     PORTB           equ	3969	;# 
  2954   000F82                     PORTC           equ	3970	;# 
  2955   000F83                     PORTD           equ	3971	;# 
  2956   000F84                     PORTE           equ	3972	;# 
  2957   000F89                     LATA            equ	3977	;# 
  2958   000F8A                     LATB            equ	3978	;# 
  2959   000F8B                     LATC            equ	3979	;# 
  2960   000F8C                     LATD            equ	3980	;# 
  2961   000F8D                     LATE            equ	3981	;# 
  2962   000F92                     TRISA           equ	3986	;# 
  2963   000F92                     DDRA            equ	3986	;# 
  2964   000F93                     TRISB           equ	3987	;# 
  2965   000F93                     DDRB            equ	3987	;# 
  2966   000F94                     TRISC           equ	3988	;# 
  2967   000F94                     DDRC            equ	3988	;# 
  2968   000F95                     TRISD           equ	3989	;# 
  2969   000F95                     DDRD            equ	3989	;# 
  2970   000F96                     TRISE           equ	3990	;# 
  2971   000F96                     DDRE            equ	3990	;# 
  2972   000F9B                     OSCTUNE         equ	3995	;# 
  2973   000F9D                     PIE1            equ	3997	;# 
  2974   000F9E                     PIR1            equ	3998	;# 
  2975   000F9F                     IPR1            equ	3999	;# 
  2976   000FA0                     PIE2            equ	4000	;# 
  2977   000FA1                     PIR2            equ	4001	;# 
  2978   000FA2                     IPR2            equ	4002	;# 
  2979   000FA6                     EECON1          equ	4006	;# 
  2980   000FA7                     EECON2          equ	4007	;# 
  2981   000FA8                     EEDATA          equ	4008	;# 
  2982   000FA9                     EEADR           equ	4009	;# 
  2983   000FAA                     EEADRH          equ	4010	;# 
  2984   000FAB                     RCSTA           equ	4011	;# 
  2985   000FAB                     RCSTA1          equ	4011	;# 
  2986   000FAC                     TXSTA           equ	4012	;# 
  2987   000FAC                     TXSTA1          equ	4012	;# 
  2988   000FAD                     TXREG           equ	4013	;# 
  2989   000FAD                     TXREG1          equ	4013	;# 
  2990   000FAE                     RCREG           equ	4014	;# 
  2991   000FAE                     RCREG1          equ	4014	;# 
  2992   000FAF                     SPBRG           equ	4015	;# 
  2993   000FAF                     SPBRG1          equ	4015	;# 
  2994   000FB0                     SPBRGH          equ	4016	;# 
  2995   000FB1                     T3CON           equ	4017	;# 
  2996   000FB2                     TMR3            equ	4018	;# 
  2997   000FB2                     TMR3L           equ	4018	;# 
  2998   000FB3                     TMR3H           equ	4019	;# 
  2999   000FB4                     CVRCON2         equ	4020	;# 
  3000   000FB5                     CVRCON          equ	4021	;# 
  3001   000FB6                     ECCP1AS         equ	4022	;# 
  3002   000FB7                     PWM1CON         equ	4023	;# 
  3003   000FB8                     BAUDCON         equ	4024	;# 
  3004   000FB8                     BAUDCTL         equ	4024	;# 
  3005   000FB9                     PSTRCON         equ	4025	;# 
  3006   000FBA                     CCP2CON         equ	4026	;# 
  3007   000FBB                     CCPR2           equ	4027	;# 
  3008   000FBB                     CCPR2L          equ	4027	;# 
  3009   000FBC                     CCPR2H          equ	4028	;# 
  3010   000FBD                     CCP1CON         equ	4029	;# 
  3011   000FBE                     CCPR1           equ	4030	;# 
  3012   000FBE                     CCPR1L          equ	4030	;# 
  3013   000FBF                     CCPR1H          equ	4031	;# 
  3014   000FC0                     ADCON2          equ	4032	;# 
  3015   000FC1                     ADCON1          equ	4033	;# 
  3016   000FC2                     ADCON0          equ	4034	;# 
  3017   000FC3                     ADRES           equ	4035	;# 
  3018   000FC3                     ADRESL          equ	4035	;# 
  3019   000FC4                     ADRESH          equ	4036	;# 
  3020   000FC5                     SSPCON2         equ	4037	;# 
  3021   000FC6                     SSPCON1         equ	4038	;# 
  3022   000FC7                     SSPSTAT         equ	4039	;# 
  3023   000FC8                     SSPADD          equ	4040	;# 
  3024   000FC9                     SSPBUF          equ	4041	;# 
  3025   000FCA                     T2CON           equ	4042	;# 
  3026   000FCB                     PR2             equ	4043	;# 
  3027   000FCB                     MEMCON          equ	4043	;# 
  3028   000FCC                     TMR2            equ	4044	;# 
  3029   000FCD                     T1CON           equ	4045	;# 
  3030   000FCE                     TMR1            equ	4046	;# 
  3031   000FCE                     TMR1L           equ	4046	;# 
  3032   000FCF                     TMR1H           equ	4047	;# 
  3033   000FD0                     RCON            equ	4048	;# 
  3034   000FD1                     WDTCON          equ	4049	;# 
  3035   000FD2                     HLVDCON         equ	4050	;# 
  3036   000FD2                     LVDCON          equ	4050	;# 
  3037   000FD3                     OSCCON          equ	4051	;# 
  3038   000FD5                     T0CON           equ	4053	;# 
  3039   000FD6                     TMR0            equ	4054	;# 
  3040   000FD6                     TMR0L           equ	4054	;# 
  3041   000FD7                     TMR0H           equ	4055	;# 
  3042   000FD8                     STATUS          equ	4056	;# 
  3043   000FD9                     FSR2            equ	4057	;# 
  3044   000FD9                     FSR2L           equ	4057	;# 
  3045   000FDA                     FSR2H           equ	4058	;# 
  3046   000FDB                     PLUSW2          equ	4059	;# 
  3047   000FDC                     PREINC2         equ	4060	;# 
  3048   000FDD                     POSTDEC2        equ	4061	;# 
  3049   000FDE                     POSTINC2        equ	4062	;# 
  3050   000FDF                     INDF2           equ	4063	;# 
  3051   000FE0                     BSR             equ	4064	;# 
  3052   000FE1                     FSR1            equ	4065	;# 
  3053   000FE1                     FSR1L           equ	4065	;# 
  3054   000FE2                     FSR1H           equ	4066	;# 
  3055   000FE3                     PLUSW1          equ	4067	;# 
  3056   000FE4                     PREINC1         equ	4068	;# 
  3057   000FE5                     POSTDEC1        equ	4069	;# 
  3058   000FE6                     POSTINC1        equ	4070	;# 
  3059   000FE7                     INDF1           equ	4071	;# 
  3060   000FE8                     WREG            equ	4072	;# 
  3061   000FE9                     FSR0            equ	4073	;# 
  3062   000FE9                     FSR0L           equ	4073	;# 
  3063   000FEA                     FSR0H           equ	4074	;# 
  3064   000FEB                     PLUSW0          equ	4075	;# 
  3065   000FEC                     PREINC0         equ	4076	;# 
  3066   000FED                     POSTDEC0        equ	4077	;# 
  3067   000FEE                     POSTINC0        equ	4078	;# 
  3068   000FEF                     INDF0           equ	4079	;# 
  3069   000FF0                     INTCON3         equ	4080	;# 
  3070   000FF1                     INTCON2         equ	4081	;# 
  3071   000FF2                     INTCON          equ	4082	;# 
  3072   000FF3                     PROD            equ	4083	;# 
  3073   000FF3                     PRODL           equ	4083	;# 
  3074   000FF4                     PRODH           equ	4084	;# 
  3075   000FF5                     TABLAT          equ	4085	;# 
  3076   000FF6                     TBLPTR          equ	4086	;# 
  3077   000FF6                     TBLPTRL         equ	4086	;# 
  3078   000FF7                     TBLPTRH         equ	4087	;# 
  3079   000FF8                     TBLPTRU         equ	4088	;# 
  3080   000FF9                     PCLAT           equ	4089	;# 
  3081   000FF9                     PC              equ	4089	;# 
  3082   000FF9                     PCL             equ	4089	;# 
  3083   000FFA                     PCLATH          equ	4090	;# 
  3084   000FFB                     PCLATU          equ	4091	;# 
  3085   000FFC                     STKPTR          equ	4092	;# 
  3086   000FFD                     TOS             equ	4093	;# 
  3087   000FFD                     TOSL            equ	4093	;# 
  3088   000FFE                     TOSH            equ	4094	;# 
  3089   000FFF                     TOSU            equ	4095	;# 
  3090   000F77                     SSPMSK          equ	3959	;# 
  3091   000F78                     SLRCON          equ	3960	;# 
  3092   000F79                     CM2CON1         equ	3961	;# 
  3093   000F7A                     CM2CON0         equ	3962	;# 
  3094   000F7B                     CM1CON0         equ	3963	;# 
  3095   000F7C                     WPUB            equ	3964	;# 
  3096   000F7D                     IOCB            equ	3965	;# 
  3097   000F7E                     ANSEL           equ	3966	;# 
  3098   000F7F                     ANSELH          equ	3967	;# 
  3099   000F80                     PORTA           equ	3968	;# 
  3100   000F81                     PORTB           equ	3969	;# 
  3101   000F82                     PORTC           equ	3970	;# 
  3102   000F83                     PORTD           equ	3971	;# 
  3103   000F84                     PORTE           equ	3972	;# 
  3104   000F89                     LATA            equ	3977	;# 
  3105   000F8A                     LATB            equ	3978	;# 
  3106   000F8B                     LATC            equ	3979	;# 
  3107   000F8C                     LATD            equ	3980	;# 
  3108   000F8D                     LATE            equ	3981	;# 
  3109   000F92                     TRISA           equ	3986	;# 
  3110   000F92                     DDRA            equ	3986	;# 
  3111   000F93                     TRISB           equ	3987	;# 
  3112   000F93                     DDRB            equ	3987	;# 
  3113   000F94                     TRISC           equ	3988	;# 
  3114   000F94                     DDRC            equ	3988	;# 
  3115   000F95                     TRISD           equ	3989	;# 
  3116   000F95                     DDRD            equ	3989	;# 
  3117   000F96                     TRISE           equ	3990	;# 
  3118   000F96                     DDRE            equ	3990	;# 
  3119   000F9B                     OSCTUNE         equ	3995	;# 
  3120   000F9D                     PIE1            equ	3997	;# 
  3121   000F9E                     PIR1            equ	3998	;# 
  3122   000F9F                     IPR1            equ	3999	;# 
  3123   000FA0                     PIE2            equ	4000	;# 
  3124   000FA1                     PIR2            equ	4001	;# 
  3125   000FA2                     IPR2            equ	4002	;# 
  3126   000FA6                     EECON1          equ	4006	;# 
  3127   000FA7                     EECON2          equ	4007	;# 
  3128   000FA8                     EEDATA          equ	4008	;# 
  3129   000FA9                     EEADR           equ	4009	;# 
  3130   000FAA                     EEADRH          equ	4010	;# 
  3131   000FAB                     RCSTA           equ	4011	;# 
  3132   000FAB                     RCSTA1          equ	4011	;# 
  3133   000FAC                     TXSTA           equ	4012	;# 
  3134   000FAC                     TXSTA1          equ	4012	;# 
  3135   000FAD                     TXREG           equ	4013	;# 
  3136   000FAD                     TXREG1          equ	4013	;# 
  3137   000FAE                     RCREG           equ	4014	;# 
  3138   000FAE                     RCREG1          equ	4014	;# 
  3139   000FAF                     SPBRG           equ	4015	;# 
  3140   000FAF                     SPBRG1          equ	4015	;# 
  3141   000FB0                     SPBRGH          equ	4016	;# 
  3142   000FB1                     T3CON           equ	4017	;# 
  3143   000FB2                     TMR3            equ	4018	;# 
  3144   000FB2                     TMR3L           equ	4018	;# 
  3145   000FB3                     TMR3H           equ	4019	;# 
  3146   000FB4                     CVRCON2         equ	4020	;# 
  3147   000FB5                     CVRCON          equ	4021	;# 
  3148   000FB6                     ECCP1AS         equ	4022	;# 
  3149   000FB7                     PWM1CON         equ	4023	;# 
  3150   000FB8                     BAUDCON         equ	4024	;# 
  3151   000FB8                     BAUDCTL         equ	4024	;# 
  3152   000FB9                     PSTRCON         equ	4025	;# 
  3153   000FBA                     CCP2CON         equ	4026	;# 
  3154   000FBB                     CCPR2           equ	4027	;# 
  3155   000FBB                     CCPR2L          equ	4027	;# 
  3156   000FBC                     CCPR2H          equ	4028	;# 
  3157   000FBD                     CCP1CON         equ	4029	;# 
  3158   000FBE                     CCPR1           equ	4030	;# 
  3159   000FBE                     CCPR1L          equ	4030	;# 
  3160   000FBF                     CCPR1H          equ	4031	;# 
  3161   000FC0                     ADCON2          equ	4032	;# 
  3162   000FC1                     ADCON1          equ	4033	;# 
  3163   000FC2                     ADCON0          equ	4034	;# 
  3164   000FC3                     ADRES           equ	4035	;# 
  3165   000FC3                     ADRESL          equ	4035	;# 
  3166   000FC4                     ADRESH          equ	4036	;# 
  3167   000FC5                     SSPCON2         equ	4037	;# 
  3168   000FC6                     SSPCON1         equ	4038	;# 
  3169   000FC7                     SSPSTAT         equ	4039	;# 
  3170   000FC8                     SSPADD          equ	4040	;# 
  3171   000FC9                     SSPBUF          equ	4041	;# 
  3172   000FCA                     T2CON           equ	4042	;# 
  3173   000FCB                     PR2             equ	4043	;# 
  3174   000FCB                     MEMCON          equ	4043	;# 
  3175   000FCC                     TMR2            equ	4044	;# 
  3176   000FCD                     T1CON           equ	4045	;# 
  3177   000FCE                     TMR1            equ	4046	;# 
  3178   000FCE                     TMR1L           equ	4046	;# 
  3179   000FCF                     TMR1H           equ	4047	;# 
  3180   000FD0                     RCON            equ	4048	;# 
  3181   000FD1                     WDTCON          equ	4049	;# 
  3182   000FD2                     HLVDCON         equ	4050	;# 
  3183   000FD2                     LVDCON          equ	4050	;# 
  3184   000FD3                     OSCCON          equ	4051	;# 
  3185   000FD5                     T0CON           equ	4053	;# 
  3186   000FD6                     TMR0            equ	4054	;# 
  3187   000FD6                     TMR0L           equ	4054	;# 
  3188   000FD7                     TMR0H           equ	4055	;# 
  3189   000FD8                     STATUS          equ	4056	;# 
  3190   000FD9                     FSR2            equ	4057	;# 
  3191   000FD9                     FSR2L           equ	4057	;# 
  3192   000FDA                     FSR2H           equ	4058	;# 
  3193   000FDB                     PLUSW2          equ	4059	;# 
  3194   000FDC                     PREINC2         equ	4060	;# 
  3195   000FDD                     POSTDEC2        equ	4061	;# 
  3196   000FDE                     POSTINC2        equ	4062	;# 
  3197   000FDF                     INDF2           equ	4063	;# 
  3198   000FE0                     BSR             equ	4064	;# 
  3199   000FE1                     FSR1            equ	4065	;# 
  3200   000FE1                     FSR1L           equ	4065	;# 
  3201   000FE2                     FSR1H           equ	4066	;# 
  3202   000FE3                     PLUSW1          equ	4067	;# 
  3203   000FE4                     PREINC1         equ	4068	;# 
  3204   000FE5                     POSTDEC1        equ	4069	;# 
  3205   000FE6                     POSTINC1        equ	4070	;# 
  3206   000FE7                     INDF1           equ	4071	;# 
  3207   000FE8                     WREG            equ	4072	;# 
  3208   000FE9                     FSR0            equ	4073	;# 
  3209   000FE9                     FSR0L           equ	4073	;# 
  3210   000FEA                     FSR0H           equ	4074	;# 
  3211   000FEB                     PLUSW0          equ	4075	;# 
  3212   000FEC                     PREINC0         equ	4076	;# 
  3213   000FED                     POSTDEC0        equ	4077	;# 
  3214   000FEE                     POSTINC0        equ	4078	;# 
  3215   000FEF                     INDF0           equ	4079	;# 
  3216   000FF0                     INTCON3         equ	4080	;# 
  3217   000FF1                     INTCON2         equ	4081	;# 
  3218   000FF2                     INTCON          equ	4082	;# 
  3219   000FF3                     PROD            equ	4083	;# 
  3220   000FF3                     PRODL           equ	4083	;# 
  3221   000FF4                     PRODH           equ	4084	;# 
  3222   000FF5                     TABLAT          equ	4085	;# 
  3223   000FF6                     TBLPTR          equ	4086	;# 
  3224   000FF6                     TBLPTRL         equ	4086	;# 
  3225   000FF7                     TBLPTRH         equ	4087	;# 
  3226   000FF8                     TBLPTRU         equ	4088	;# 
  3227   000FF9                     PCLAT           equ	4089	;# 
  3228   000FF9                     PC              equ	4089	;# 
  3229   000FF9                     PCL             equ	4089	;# 
  3230   000FFA                     PCLATH          equ	4090	;# 
  3231   000FFB                     PCLATU          equ	4091	;# 
  3232   000FFC                     STKPTR          equ	4092	;# 
  3233   000FFD                     TOS             equ	4093	;# 
  3234   000FFD                     TOSL            equ	4093	;# 
  3235   000FFE                     TOSH            equ	4094	;# 
  3236   000FFF                     TOSU            equ	4095	;# 
  3237   000F77                     SSPMSK          equ	3959	;# 
  3238   000F78                     SLRCON          equ	3960	;# 
  3239   000F79                     CM2CON1         equ	3961	;# 
  3240   000F7A                     CM2CON0         equ	3962	;# 
  3241   000F7B                     CM1CON0         equ	3963	;# 
  3242   000F7C                     WPUB            equ	3964	;# 
  3243   000F7D                     IOCB            equ	3965	;# 
  3244   000F7E                     ANSEL           equ	3966	;# 
  3245   000F7F                     ANSELH          equ	3967	;# 
  3246   000F80                     PORTA           equ	3968	;# 
  3247   000F81                     PORTB           equ	3969	;# 
  3248   000F82                     PORTC           equ	3970	;# 
  3249   000F83                     PORTD           equ	3971	;# 
  3250   000F84                     PORTE           equ	3972	;# 
  3251   000F89                     LATA            equ	3977	;# 
  3252   000F8A                     LATB            equ	3978	;# 
  3253   000F8B                     LATC            equ	3979	;# 
  3254   000F8C                     LATD            equ	3980	;# 
  3255   000F8D                     LATE            equ	3981	;# 
  3256   000F92                     TRISA           equ	3986	;# 
  3257   000F92                     DDRA            equ	3986	;# 
  3258   000F93                     TRISB           equ	3987	;# 
  3259   000F93                     DDRB            equ	3987	;# 
  3260   000F94                     TRISC           equ	3988	;# 
  3261   000F94                     DDRC            equ	3988	;# 
  3262   000F95                     TRISD           equ	3989	;# 
  3263   000F95                     DDRD            equ	3989	;# 
  3264   000F96                     TRISE           equ	3990	;# 
  3265   000F96                     DDRE            equ	3990	;# 
  3266   000F9B                     OSCTUNE         equ	3995	;# 
  3267   000F9D                     PIE1            equ	3997	;# 
  3268   000F9E                     PIR1            equ	3998	;# 
  3269   000F9F                     IPR1            equ	3999	;# 
  3270   000FA0                     PIE2            equ	4000	;# 
  3271   000FA1                     PIR2            equ	4001	;# 
  3272   000FA2                     IPR2            equ	4002	;# 
  3273   000FA6                     EECON1          equ	4006	;# 
  3274   000FA7                     EECON2          equ	4007	;# 
  3275   000FA8                     EEDATA          equ	4008	;# 
  3276   000FA9                     EEADR           equ	4009	;# 
  3277   000FAA                     EEADRH          equ	4010	;# 
  3278   000FAB                     RCSTA           equ	4011	;# 
  3279   000FAB                     RCSTA1          equ	4011	;# 
  3280   000FAC                     TXSTA           equ	4012	;# 
  3281   000FAC                     TXSTA1          equ	4012	;# 
  3282   000FAD                     TXREG           equ	4013	;# 
  3283   000FAD                     TXREG1          equ	4013	;# 
  3284   000FAE                     RCREG           equ	4014	;# 
  3285   000FAE                     RCREG1          equ	4014	;# 
  3286   000FAF                     SPBRG           equ	4015	;# 
  3287   000FAF                     SPBRG1          equ	4015	;# 
  3288   000FB0                     SPBRGH          equ	4016	;# 
  3289   000FB1                     T3CON           equ	4017	;# 
  3290   000FB2                     TMR3            equ	4018	;# 
  3291   000FB2                     TMR3L           equ	4018	;# 
  3292   000FB3                     TMR3H           equ	4019	;# 
  3293   000FB4                     CVRCON2         equ	4020	;# 
  3294   000FB5                     CVRCON          equ	4021	;# 
  3295   000FB6                     ECCP1AS         equ	4022	;# 
  3296   000FB7                     PWM1CON         equ	4023	;# 
  3297   000FB8                     BAUDCON         equ	4024	;# 
  3298   000FB8                     BAUDCTL         equ	4024	;# 
  3299   000FB9                     PSTRCON         equ	4025	;# 
  3300   000FBA                     CCP2CON         equ	4026	;# 
  3301   000FBB                     CCPR2           equ	4027	;# 
  3302   000FBB                     CCPR2L          equ	4027	;# 
  3303   000FBC                     CCPR2H          equ	4028	;# 
  3304   000FBD                     CCP1CON         equ	4029	;# 
  3305   000FBE                     CCPR1           equ	4030	;# 
  3306   000FBE                     CCPR1L          equ	4030	;# 
  3307   000FBF                     CCPR1H          equ	4031	;# 
  3308   000FC0                     ADCON2          equ	4032	;# 
  3309   000FC1                     ADCON1          equ	4033	;# 
  3310   000FC2                     ADCON0          equ	4034	;# 
  3311   000FC3                     ADRES           equ	4035	;# 
  3312   000FC3                     ADRESL          equ	4035	;# 
  3313   000FC4                     ADRESH          equ	4036	;# 
  3314   000FC5                     SSPCON2         equ	4037	;# 
  3315   000FC6                     SSPCON1         equ	4038	;# 
  3316   000FC7                     SSPSTAT         equ	4039	;# 
  3317   000FC8                     SSPADD          equ	4040	;# 
  3318   000FC9                     SSPBUF          equ	4041	;# 
  3319   000FCA                     T2CON           equ	4042	;# 
  3320   000FCB                     PR2             equ	4043	;# 
  3321   000FCB                     MEMCON          equ	4043	;# 
  3322   000FCC                     TMR2            equ	4044	;# 
  3323   000FCD                     T1CON           equ	4045	;# 
  3324   000FCE                     TMR1            equ	4046	;# 
  3325   000FCE                     TMR1L           equ	4046	;# 
  3326   000FCF                     TMR1H           equ	4047	;# 
  3327   000FD0                     RCON            equ	4048	;# 
  3328   000FD1                     WDTCON          equ	4049	;# 
  3329   000FD2                     HLVDCON         equ	4050	;# 
  3330   000FD2                     LVDCON          equ	4050	;# 
  3331   000FD3                     OSCCON          equ	4051	;# 
  3332   000FD5                     T0CON           equ	4053	;# 
  3333   000FD6                     TMR0            equ	4054	;# 
  3334   000FD6                     TMR0L           equ	4054	;# 
  3335   000FD7                     TMR0H           equ	4055	;# 
  3336   000FD8                     STATUS          equ	4056	;# 
  3337   000FD9                     FSR2            equ	4057	;# 
  3338   000FD9                     FSR2L           equ	4057	;# 
  3339   000FDA                     FSR2H           equ	4058	;# 
  3340   000FDB                     PLUSW2          equ	4059	;# 
  3341   000FDC                     PREINC2         equ	4060	;# 
  3342   000FDD                     POSTDEC2        equ	4061	;# 
  3343   000FDE                     POSTINC2        equ	4062	;# 
  3344   000FDF                     INDF2           equ	4063	;# 
  3345   000FE0                     BSR             equ	4064	;# 
  3346   000FE1                     FSR1            equ	4065	;# 
  3347   000FE1                     FSR1L           equ	4065	;# 
  3348   000FE2                     FSR1H           equ	4066	;# 
  3349   000FE3                     PLUSW1          equ	4067	;# 
  3350   000FE4                     PREINC1         equ	4068	;# 
  3351   000FE5                     POSTDEC1        equ	4069	;# 
  3352   000FE6                     POSTINC1        equ	4070	;# 
  3353   000FE7                     INDF1           equ	4071	;# 
  3354   000FE8                     WREG            equ	4072	;# 
  3355   000FE9                     FSR0            equ	4073	;# 
  3356   000FE9                     FSR0L           equ	4073	;# 
  3357   000FEA                     FSR0H           equ	4074	;# 
  3358   000FEB                     PLUSW0          equ	4075	;# 
  3359   000FEC                     PREINC0         equ	4076	;# 
  3360   000FED                     POSTDEC0        equ	4077	;# 
  3361   000FEE                     POSTINC0        equ	4078	;# 
  3362   000FEF                     INDF0           equ	4079	;# 
  3363   000FF0                     INTCON3         equ	4080	;# 
  3364   000FF1                     INTCON2         equ	4081	;# 
  3365   000FF2                     INTCON          equ	4082	;# 
  3366   000FF3                     PROD            equ	4083	;# 
  3367   000FF3                     PRODL           equ	4083	;# 
  3368   000FF4                     PRODH           equ	4084	;# 
  3369   000FF5                     TABLAT          equ	4085	;# 
  3370   000FF6                     TBLPTR          equ	4086	;# 
  3371   000FF6                     TBLPTRL         equ	4086	;# 
  3372   000FF7                     TBLPTRH         equ	4087	;# 
  3373   000FF8                     TBLPTRU         equ	4088	;# 
  3374   000FF9                     PCLAT           equ	4089	;# 
  3375   000FF9                     PC              equ	4089	;# 
  3376   000FF9                     PCL             equ	4089	;# 
  3377   000FFA                     PCLATH          equ	4090	;# 
  3378   000FFB                     PCLATU          equ	4091	;# 
  3379   000FFC                     STKPTR          equ	4092	;# 
  3380   000FFD                     TOS             equ	4093	;# 
  3381   000FFD                     TOSL            equ	4093	;# 
  3382   000FFE                     TOSH            equ	4094	;# 
  3383   000FFF                     TOSU            equ	4095	;# 
  3384   000F77                     SSPMSK          equ	3959	;# 
  3385   000F78                     SLRCON          equ	3960	;# 
  3386   000F79                     CM2CON1         equ	3961	;# 
  3387   000F7A                     CM2CON0         equ	3962	;# 
  3388   000F7B                     CM1CON0         equ	3963	;# 
  3389   000F7C                     WPUB            equ	3964	;# 
  3390   000F7D                     IOCB            equ	3965	;# 
  3391   000F7E                     ANSEL           equ	3966	;# 
  3392   000F7F                     ANSELH          equ	3967	;# 
  3393   000F80                     PORTA           equ	3968	;# 
  3394   000F81                     PORTB           equ	3969	;# 
  3395   000F82                     PORTC           equ	3970	;# 
  3396   000F83                     PORTD           equ	3971	;# 
  3397   000F84                     PORTE           equ	3972	;# 
  3398   000F89                     LATA            equ	3977	;# 
  3399   000F8A                     LATB            equ	3978	;# 
  3400   000F8B                     LATC            equ	3979	;# 
  3401   000F8C                     LATD            equ	3980	;# 
  3402   000F8D                     LATE            equ	3981	;# 
  3403   000F92                     TRISA           equ	3986	;# 
  3404   000F92                     DDRA            equ	3986	;# 
  3405   000F93                     TRISB           equ	3987	;# 
  3406   000F93                     DDRB            equ	3987	;# 
  3407   000F94                     TRISC           equ	3988	;# 
  3408   000F94                     DDRC            equ	3988	;# 
  3409   000F95                     TRISD           equ	3989	;# 
  3410   000F95                     DDRD            equ	3989	;# 
  3411   000F96                     TRISE           equ	3990	;# 
  3412   000F96                     DDRE            equ	3990	;# 
  3413   000F9B                     OSCTUNE         equ	3995	;# 
  3414   000F9D                     PIE1            equ	3997	;# 
  3415   000F9E                     PIR1            equ	3998	;# 
  3416   000F9F                     IPR1            equ	3999	;# 
  3417   000FA0                     PIE2            equ	4000	;# 
  3418   000FA1                     PIR2            equ	4001	;# 
  3419   000FA2                     IPR2            equ	4002	;# 
  3420   000FA6                     EECON1          equ	4006	;# 
  3421   000FA7                     EECON2          equ	4007	;# 
  3422   000FA8                     EEDATA          equ	4008	;# 
  3423   000FA9                     EEADR           equ	4009	;# 
  3424   000FAA                     EEADRH          equ	4010	;# 
  3425   000FAB                     RCSTA           equ	4011	;# 
  3426   000FAB                     RCSTA1          equ	4011	;# 
  3427   000FAC                     TXSTA           equ	4012	;# 
  3428   000FAC                     TXSTA1          equ	4012	;# 
  3429   000FAD                     TXREG           equ	4013	;# 
  3430   000FAD                     TXREG1          equ	4013	;# 
  3431   000FAE                     RCREG           equ	4014	;# 
  3432   000FAE                     RCREG1          equ	4014	;# 
  3433   000FAF                     SPBRG           equ	4015	;# 
  3434   000FAF                     SPBRG1          equ	4015	;# 
  3435   000FB0                     SPBRGH          equ	4016	;# 
  3436   000FB1                     T3CON           equ	4017	;# 
  3437   000FB2                     TMR3            equ	4018	;# 
  3438   000FB2                     TMR3L           equ	4018	;# 
  3439   000FB3                     TMR3H           equ	4019	;# 
  3440   000FB4                     CVRCON2         equ	4020	;# 
  3441   000FB5                     CVRCON          equ	4021	;# 
  3442   000FB6                     ECCP1AS         equ	4022	;# 
  3443   000FB7                     PWM1CON         equ	4023	;# 
  3444   000FB8                     BAUDCON         equ	4024	;# 
  3445   000FB8                     BAUDCTL         equ	4024	;# 
  3446   000FB9                     PSTRCON         equ	4025	;# 
  3447   000FBA                     CCP2CON         equ	4026	;# 
  3448   000FBB                     CCPR2           equ	4027	;# 
  3449   000FBB                     CCPR2L          equ	4027	;# 
  3450   000FBC                     CCPR2H          equ	4028	;# 
  3451   000FBD                     CCP1CON         equ	4029	;# 
  3452   000FBE                     CCPR1           equ	4030	;# 
  3453   000FBE                     CCPR1L          equ	4030	;# 
  3454   000FBF                     CCPR1H          equ	4031	;# 
  3455   000FC0                     ADCON2          equ	4032	;# 
  3456   000FC1                     ADCON1          equ	4033	;# 
  3457   000FC2                     ADCON0          equ	4034	;# 
  3458   000FC3                     ADRES           equ	4035	;# 
  3459   000FC3                     ADRESL          equ	4035	;# 
  3460   000FC4                     ADRESH          equ	4036	;# 
  3461   000FC5                     SSPCON2         equ	4037	;# 
  3462   000FC6                     SSPCON1         equ	4038	;# 
  3463   000FC7                     SSPSTAT         equ	4039	;# 
  3464   000FC8                     SSPADD          equ	4040	;# 
  3465   000FC9                     SSPBUF          equ	4041	;# 
  3466   000FCA                     T2CON           equ	4042	;# 
  3467   000FCB                     PR2             equ	4043	;# 
  3468   000FCB                     MEMCON          equ	4043	;# 
  3469   000FCC                     TMR2            equ	4044	;# 
  3470   000FCD                     T1CON           equ	4045	;# 
  3471   000FCE                     TMR1            equ	4046	;# 
  3472   000FCE                     TMR1L           equ	4046	;# 
  3473   000FCF                     TMR1H           equ	4047	;# 
  3474   000FD0                     RCON            equ	4048	;# 
  3475   000FD1                     WDTCON          equ	4049	;# 
  3476   000FD2                     HLVDCON         equ	4050	;# 
  3477   000FD2                     LVDCON          equ	4050	;# 
  3478   000FD3                     OSCCON          equ	4051	;# 
  3479   000FD5                     T0CON           equ	4053	;# 
  3480   000FD6                     TMR0            equ	4054	;# 
  3481   000FD6                     TMR0L           equ	4054	;# 
  3482   000FD7                     TMR0H           equ	4055	;# 
  3483   000FD8                     STATUS          equ	4056	;# 
  3484   000FD9                     FSR2            equ	4057	;# 
  3485   000FD9                     FSR2L           equ	4057	;# 
  3486   000FDA                     FSR2H           equ	4058	;# 
  3487   000FDB                     PLUSW2          equ	4059	;# 
  3488   000FDC                     PREINC2         equ	4060	;# 
  3489   000FDD                     POSTDEC2        equ	4061	;# 
  3490   000FDE                     POSTINC2        equ	4062	;# 
  3491   000FDF                     INDF2           equ	4063	;# 
  3492   000FE0                     BSR             equ	4064	;# 
  3493   000FE1                     FSR1            equ	4065	;# 
  3494   000FE1                     FSR1L           equ	4065	;# 
  3495   000FE2                     FSR1H           equ	4066	;# 
  3496   000FE3                     PLUSW1          equ	4067	;# 
  3497   000FE4                     PREINC1         equ	4068	;# 
  3498   000FE5                     POSTDEC1        equ	4069	;# 
  3499   000FE6                     POSTINC1        equ	4070	;# 
  3500   000FE7                     INDF1           equ	4071	;# 
  3501   000FE8                     WREG            equ	4072	;# 
  3502   000FE9                     FSR0            equ	4073	;# 
  3503   000FE9                     FSR0L           equ	4073	;# 
  3504   000FEA                     FSR0H           equ	4074	;# 
  3505   000FEB                     PLUSW0          equ	4075	;# 
  3506   000FEC                     PREINC0         equ	4076	;# 
  3507   000FED                     POSTDEC0        equ	4077	;# 
  3508   000FEE                     POSTINC0        equ	4078	;# 
  3509   000FEF                     INDF0           equ	4079	;# 
  3510   000FF0                     INTCON3         equ	4080	;# 
  3511   000FF1                     INTCON2         equ	4081	;# 
  3512   000FF2                     INTCON          equ	4082	;# 
  3513   000FF3                     PROD            equ	4083	;# 
  3514   000FF3                     PRODL           equ	4083	;# 
  3515   000FF4                     PRODH           equ	4084	;# 
  3516   000FF5                     TABLAT          equ	4085	;# 
  3517   000FF6                     TBLPTR          equ	4086	;# 
  3518   000FF6                     TBLPTRL         equ	4086	;# 
  3519   000FF7                     TBLPTRH         equ	4087	;# 
  3520   000FF8                     TBLPTRU         equ	4088	;# 
  3521   000FF9                     PCLAT           equ	4089	;# 
  3522   000FF9                     PC              equ	4089	;# 
  3523   000FF9                     PCL             equ	4089	;# 
  3524   000FFA                     PCLATH          equ	4090	;# 
  3525   000FFB                     PCLATU          equ	4091	;# 
  3526   000FFC                     STKPTR          equ	4092	;# 
  3527   000FFD                     TOS             equ	4093	;# 
  3528   000FFD                     TOSL            equ	4093	;# 
  3529   000FFE                     TOSH            equ	4094	;# 
  3530   000FFF                     TOSU            equ	4095	;# 
  3531   000F77                     SSPMSK          equ	3959	;# 
  3532   000F78                     SLRCON          equ	3960	;# 
  3533   000F79                     CM2CON1         equ	3961	;# 
  3534   000F7A                     CM2CON0         equ	3962	;# 
  3535   000F7B                     CM1CON0         equ	3963	;# 
  3536   000F7C                     WPUB            equ	3964	;# 
  3537   000F7D                     IOCB            equ	3965	;# 
  3538   000F7E                     ANSEL           equ	3966	;# 
  3539   000F7F                     ANSELH          equ	3967	;# 
  3540   000F80                     PORTA           equ	3968	;# 
  3541   000F81                     PORTB           equ	3969	;# 
  3542   000F82                     PORTC           equ	3970	;# 
  3543   000F83                     PORTD           equ	3971	;# 
  3544   000F84                     PORTE           equ	3972	;# 
  3545   000F89                     LATA            equ	3977	;# 
  3546   000F8A                     LATB            equ	3978	;# 
  3547   000F8B                     LATC            equ	3979	;# 
  3548   000F8C                     LATD            equ	3980	;# 
  3549   000F8D                     LATE            equ	3981	;# 
  3550   000F92                     TRISA           equ	3986	;# 
  3551   000F92                     DDRA            equ	3986	;# 
  3552   000F93                     TRISB           equ	3987	;# 
  3553   000F93                     DDRB            equ	3987	;# 
  3554   000F94                     TRISC           equ	3988	;# 
  3555   000F94                     DDRC            equ	3988	;# 
  3556   000F95                     TRISD           equ	3989	;# 
  3557   000F95                     DDRD            equ	3989	;# 
  3558   000F96                     TRISE           equ	3990	;# 
  3559   000F96                     DDRE            equ	3990	;# 
  3560   000F9B                     OSCTUNE         equ	3995	;# 
  3561   000F9D                     PIE1            equ	3997	;# 
  3562   000F9E                     PIR1            equ	3998	;# 
  3563   000F9F                     IPR1            equ	3999	;# 
  3564   000FA0                     PIE2            equ	4000	;# 
  3565   000FA1                     PIR2            equ	4001	;# 
  3566   000FA2                     IPR2            equ	4002	;# 
  3567   000FA6                     EECON1          equ	4006	;# 
  3568   000FA7                     EECON2          equ	4007	;# 
  3569   000FA8                     EEDATA          equ	4008	;# 
  3570   000FA9                     EEADR           equ	4009	;# 
  3571   000FAA                     EEADRH          equ	4010	;# 
  3572   000FAB                     RCSTA           equ	4011	;# 
  3573   000FAB                     RCSTA1          equ	4011	;# 
  3574   000FAC                     TXSTA           equ	4012	;# 
  3575   000FAC                     TXSTA1          equ	4012	;# 
  3576   000FAD                     TXREG           equ	4013	;# 
  3577   000FAD                     TXREG1          equ	4013	;# 
  3578   000FAE                     RCREG           equ	4014	;# 
  3579   000FAE                     RCREG1          equ	4014	;# 
  3580   000FAF                     SPBRG           equ	4015	;# 
  3581   000FAF                     SPBRG1          equ	4015	;# 
  3582   000FB0                     SPBRGH          equ	4016	;# 
  3583   000FB1                     T3CON           equ	4017	;# 
  3584   000FB2                     TMR3            equ	4018	;# 
  3585   000FB2                     TMR3L           equ	4018	;# 
  3586   000FB3                     TMR3H           equ	4019	;# 
  3587   000FB4                     CVRCON2         equ	4020	;# 
  3588   000FB5                     CVRCON          equ	4021	;# 
  3589   000FB6                     ECCP1AS         equ	4022	;# 
  3590   000FB7                     PWM1CON         equ	4023	;# 
  3591   000FB8                     BAUDCON         equ	4024	;# 
  3592   000FB8                     BAUDCTL         equ	4024	;# 
  3593   000FB9                     PSTRCON         equ	4025	;# 
  3594   000FBA                     CCP2CON         equ	4026	;# 
  3595   000FBB                     CCPR2           equ	4027	;# 
  3596   000FBB                     CCPR2L          equ	4027	;# 
  3597   000FBC                     CCPR2H          equ	4028	;# 
  3598   000FBD                     CCP1CON         equ	4029	;# 
  3599   000FBE                     CCPR1           equ	4030	;# 
  3600   000FBE                     CCPR1L          equ	4030	;# 
  3601   000FBF                     CCPR1H          equ	4031	;# 
  3602   000FC0                     ADCON2          equ	4032	;# 
  3603   000FC1                     ADCON1          equ	4033	;# 
  3604   000FC2                     ADCON0          equ	4034	;# 
  3605   000FC3                     ADRES           equ	4035	;# 
  3606   000FC3                     ADRESL          equ	4035	;# 
  3607   000FC4                     ADRESH          equ	4036	;# 
  3608   000FC5                     SSPCON2         equ	4037	;# 
  3609   000FC6                     SSPCON1         equ	4038	;# 
  3610   000FC7                     SSPSTAT         equ	4039	;# 
  3611   000FC8                     SSPADD          equ	4040	;# 
  3612   000FC9                     SSPBUF          equ	4041	;# 
  3613   000FCA                     T2CON           equ	4042	;# 
  3614   000FCB                     PR2             equ	4043	;# 
  3615   000FCB                     MEMCON          equ	4043	;# 
  3616   000FCC                     TMR2            equ	4044	;# 
  3617   000FCD                     T1CON           equ	4045	;# 
  3618   000FCE                     TMR1            equ	4046	;# 
  3619   000FCE                     TMR1L           equ	4046	;# 
  3620   000FCF                     TMR1H           equ	4047	;# 
  3621   000FD0                     RCON            equ	4048	;# 
  3622   000FD1                     WDTCON          equ	4049	;# 
  3623   000FD2                     HLVDCON         equ	4050	;# 
  3624   000FD2                     LVDCON          equ	4050	;# 
  3625   000FD3                     OSCCON          equ	4051	;# 
  3626   000FD5                     T0CON           equ	4053	;# 
  3627   000FD6                     TMR0            equ	4054	;# 
  3628   000FD6                     TMR0L           equ	4054	;# 
  3629   000FD7                     TMR0H           equ	4055	;# 
  3630   000FD8                     STATUS          equ	4056	;# 
  3631   000FD9                     FSR2            equ	4057	;# 
  3632   000FD9                     FSR2L           equ	4057	;# 
  3633   000FDA                     FSR2H           equ	4058	;# 
  3634   000FDB                     PLUSW2          equ	4059	;# 
  3635   000FDC                     PREINC2         equ	4060	;# 
  3636   000FDD                     POSTDEC2        equ	4061	;# 
  3637   000FDE                     POSTINC2        equ	4062	;# 
  3638   000FDF                     INDF2           equ	4063	;# 
  3639   000FE0                     BSR             equ	4064	;# 
  3640   000FE1                     FSR1            equ	4065	;# 
  3641   000FE1                     FSR1L           equ	4065	;# 
  3642   000FE2                     FSR1H           equ	4066	;# 
  3643   000FE3                     PLUSW1          equ	4067	;# 
  3644   000FE4                     PREINC1         equ	4068	;# 
  3645   000FE5                     POSTDEC1        equ	4069	;# 
  3646   000FE6                     POSTINC1        equ	4070	;# 
  3647   000FE7                     INDF1           equ	4071	;# 
  3648   000FE8                     WREG            equ	4072	;# 
  3649   000FE9                     FSR0            equ	4073	;# 
  3650   000FE9                     FSR0L           equ	4073	;# 
  3651   000FEA                     FSR0H           equ	4074	;# 
  3652   000FEB                     PLUSW0          equ	4075	;# 
  3653   000FEC                     PREINC0         equ	4076	;# 
  3654   000FED                     POSTDEC0        equ	4077	;# 
  3655   000FEE                     POSTINC0        equ	4078	;# 
  3656   000FEF                     INDF0           equ	4079	;# 
  3657   000FF0                     INTCON3         equ	4080	;# 
  3658   000FF1                     INTCON2         equ	4081	;# 
  3659   000FF2                     INTCON          equ	4082	;# 
  3660   000FF3                     PROD            equ	4083	;# 
  3661   000FF3                     PRODL           equ	4083	;# 
  3662   000FF4                     PRODH           equ	4084	;# 
  3663   000FF5                     TABLAT          equ	4085	;# 
  3664   000FF6                     TBLPTR          equ	4086	;# 
  3665   000FF6                     TBLPTRL         equ	4086	;# 
  3666   000FF7                     TBLPTRH         equ	4087	;# 
  3667   000FF8                     TBLPTRU         equ	4088	;# 
  3668   000FF9                     PCLAT           equ	4089	;# 
  3669   000FF9                     PC              equ	4089	;# 
  3670   000FF9                     PCL             equ	4089	;# 
  3671   000FFA                     PCLATH          equ	4090	;# 
  3672   000FFB                     PCLATU          equ	4091	;# 
  3673   000FFC                     STKPTR          equ	4092	;# 
  3674   000FFD                     TOS             equ	4093	;# 
  3675   000FFD                     TOSL            equ	4093	;# 
  3676   000FFE                     TOSH            equ	4094	;# 
  3677   000FFF                     TOSU            equ	4095	;# 
  3678   000F77                     SSPMSK          equ	3959	;# 
  3679   000F78                     SLRCON          equ	3960	;# 
  3680   000F79                     CM2CON1         equ	3961	;# 
  3681   000F7A                     CM2CON0         equ	3962	;# 
  3682   000F7B                     CM1CON0         equ	3963	;# 
  3683   000F7C                     WPUB            equ	3964	;# 
  3684   000F7D                     IOCB            equ	3965	;# 
  3685   000F7E                     ANSEL           equ	3966	;# 
  3686   000F7F                     ANSELH          equ	3967	;# 
  3687   000F80                     PORTA           equ	3968	;# 
  3688   000F81                     PORTB           equ	3969	;# 
  3689   000F82                     PORTC           equ	3970	;# 
  3690   000F83                     PORTD           equ	3971	;# 
  3691   000F84                     PORTE           equ	3972	;# 
  3692   000F89                     LATA            equ	3977	;# 
  3693   000F8A                     LATB            equ	3978	;# 
  3694   000F8B                     LATC            equ	3979	;# 
  3695   000F8C                     LATD            equ	3980	;# 
  3696   000F8D                     LATE            equ	3981	;# 
  3697   000F92                     TRISA           equ	3986	;# 
  3698   000F92                     DDRA            equ	3986	;# 
  3699   000F93                     TRISB           equ	3987	;# 
  3700   000F93                     DDRB            equ	3987	;# 
  3701   000F94                     TRISC           equ	3988	;# 
  3702   000F94                     DDRC            equ	3988	;# 
  3703   000F95                     TRISD           equ	3989	;# 
  3704   000F95                     DDRD            equ	3989	;# 
  3705   000F96                     TRISE           equ	3990	;# 
  3706   000F96                     DDRE            equ	3990	;# 
  3707   000F9B                     OSCTUNE         equ	3995	;# 
  3708   000F9D                     PIE1            equ	3997	;# 
  3709   000F9E                     PIR1            equ	3998	;# 
  3710   000F9F                     IPR1            equ	3999	;# 
  3711   000FA0                     PIE2            equ	4000	;# 
  3712   000FA1                     PIR2            equ	4001	;# 
  3713   000FA2                     IPR2            equ	4002	;# 
  3714   000FA6                     EECON1          equ	4006	;# 
  3715   000FA7                     EECON2          equ	4007	;# 
  3716   000FA8                     EEDATA          equ	4008	;# 
  3717   000FA9                     EEADR           equ	4009	;# 
  3718   000FAA                     EEADRH          equ	4010	;# 
  3719   000FAB                     RCSTA           equ	4011	;# 
  3720   000FAB                     RCSTA1          equ	4011	;# 
  3721   000FAC                     TXSTA           equ	4012	;# 
  3722   000FAC                     TXSTA1          equ	4012	;# 
  3723   000FAD                     TXREG           equ	4013	;# 
  3724   000FAD                     TXREG1          equ	4013	;# 
  3725   000FAE                     RCREG           equ	4014	;# 
  3726   000FAE                     RCREG1          equ	4014	;# 
  3727   000FAF                     SPBRG           equ	4015	;# 
  3728   000FAF                     SPBRG1          equ	4015	;# 
  3729   000FB0                     SPBRGH          equ	4016	;# 
  3730   000FB1                     T3CON           equ	4017	;# 
  3731   000FB2                     TMR3            equ	4018	;# 
  3732   000FB2                     TMR3L           equ	4018	;# 
  3733   000FB3                     TMR3H           equ	4019	;# 
  3734   000FB4                     CVRCON2         equ	4020	;# 
  3735   000FB5                     CVRCON          equ	4021	;# 
  3736   000FB6                     ECCP1AS         equ	4022	;# 
  3737   000FB7                     PWM1CON         equ	4023	;# 
  3738   000FB8                     BAUDCON         equ	4024	;# 
  3739   000FB8                     BAUDCTL         equ	4024	;# 
  3740   000FB9                     PSTRCON         equ	4025	;# 
  3741   000FBA                     CCP2CON         equ	4026	;# 
  3742   000FBB                     CCPR2           equ	4027	;# 
  3743   000FBB                     CCPR2L          equ	4027	;# 
  3744   000FBC                     CCPR2H          equ	4028	;# 
  3745   000FBD                     CCP1CON         equ	4029	;# 
  3746   000FBE                     CCPR1           equ	4030	;# 
  3747   000FBE                     CCPR1L          equ	4030	;# 
  3748   000FBF                     CCPR1H          equ	4031	;# 
  3749   000FC0                     ADCON2          equ	4032	;# 
  3750   000FC1                     ADCON1          equ	4033	;# 
  3751   000FC2                     ADCON0          equ	4034	;# 
  3752   000FC3                     ADRES           equ	4035	;# 
  3753   000FC3                     ADRESL          equ	4035	;# 
  3754   000FC4                     ADRESH          equ	4036	;# 
  3755   000FC5                     SSPCON2         equ	4037	;# 
  3756   000FC6                     SSPCON1         equ	4038	;# 
  3757   000FC7                     SSPSTAT         equ	4039	;# 
  3758   000FC8                     SSPADD          equ	4040	;# 
  3759   000FC9                     SSPBUF          equ	4041	;# 
  3760   000FCA                     T2CON           equ	4042	;# 
  3761   000FCB                     PR2             equ	4043	;# 
  3762   000FCB                     MEMCON          equ	4043	;# 
  3763   000FCC                     TMR2            equ	4044	;# 
  3764   000FCD                     T1CON           equ	4045	;# 
  3765   000FCE                     TMR1            equ	4046	;# 
  3766   000FCE                     TMR1L           equ	4046	;# 
  3767   000FCF                     TMR1H           equ	4047	;# 
  3768   000FD0                     RCON            equ	4048	;# 
  3769   000FD1                     WDTCON          equ	4049	;# 
  3770   000FD2                     HLVDCON         equ	4050	;# 
  3771   000FD2                     LVDCON          equ	4050	;# 
  3772   000FD3                     OSCCON          equ	4051	;# 
  3773   000FD5                     T0CON           equ	4053	;# 
  3774   000FD6                     TMR0            equ	4054	;# 
  3775   000FD6                     TMR0L           equ	4054	;# 
  3776   000FD7                     TMR0H           equ	4055	;# 
  3777   000FD8                     STATUS          equ	4056	;# 
  3778   000FD9                     FSR2            equ	4057	;# 
  3779   000FD9                     FSR2L           equ	4057	;# 
  3780   000FDA                     FSR2H           equ	4058	;# 
  3781   000FDB                     PLUSW2          equ	4059	;# 
  3782   000FDC                     PREINC2         equ	4060	;# 
  3783   000FDD                     POSTDEC2        equ	4061	;# 
  3784   000FDE                     POSTINC2        equ	4062	;# 
  3785   000FDF                     INDF2           equ	4063	;# 
  3786   000FE0                     BSR             equ	4064	;# 
  3787   000FE1                     FSR1            equ	4065	;# 
  3788   000FE1                     FSR1L           equ	4065	;# 
  3789   000FE2                     FSR1H           equ	4066	;# 
  3790   000FE3                     PLUSW1          equ	4067	;# 
  3791   000FE4                     PREINC1         equ	4068	;# 
  3792   000FE5                     POSTDEC1        equ	4069	;# 
  3793   000FE6                     POSTINC1        equ	4070	;# 
  3794   000FE7                     INDF1           equ	4071	;# 
  3795   000FE8                     WREG            equ	4072	;# 
  3796   000FE9                     FSR0            equ	4073	;# 
  3797   000FE9                     FSR0L           equ	4073	;# 
  3798   000FEA                     FSR0H           equ	4074	;# 
  3799   000FEB                     PLUSW0          equ	4075	;# 
  3800   000FEC                     PREINC0         equ	4076	;# 
  3801   000FED                     POSTDEC0        equ	4077	;# 
  3802   000FEE                     POSTINC0        equ	4078	;# 
  3803   000FEF                     INDF0           equ	4079	;# 
  3804   000FF0                     INTCON3         equ	4080	;# 
  3805   000FF1                     INTCON2         equ	4081	;# 
  3806   000FF2                     INTCON          equ	4082	;# 
  3807   000FF3                     PROD            equ	4083	;# 
  3808   000FF3                     PRODL           equ	4083	;# 
  3809   000FF4                     PRODH           equ	4084	;# 
  3810   000FF5                     TABLAT          equ	4085	;# 
  3811   000FF6                     TBLPTR          equ	4086	;# 
  3812   000FF6                     TBLPTRL         equ	4086	;# 
  3813   000FF7                     TBLPTRH         equ	4087	;# 
  3814   000FF8                     TBLPTRU         equ	4088	;# 
  3815   000FF9                     PCLAT           equ	4089	;# 
  3816   000FF9                     PC              equ	4089	;# 
  3817   000FF9                     PCL             equ	4089	;# 
  3818   000FFA                     PCLATH          equ	4090	;# 
  3819   000FFB                     PCLATU          equ	4091	;# 
  3820   000FFC                     STKPTR          equ	4092	;# 
  3821   000FFD                     TOS             equ	4093	;# 
  3822   000FFD                     TOSL            equ	4093	;# 
  3823   000FFE                     TOSH            equ	4094	;# 
  3824   000FFF                     TOSU            equ	4095	;# 
  3825   000F77                     SSPMSK          equ	3959	;# 
  3826   000F78                     SLRCON          equ	3960	;# 
  3827   000F79                     CM2CON1         equ	3961	;# 
  3828   000F7A                     CM2CON0         equ	3962	;# 
  3829   000F7B                     CM1CON0         equ	3963	;# 
  3830   000F7C                     WPUB            equ	3964	;# 
  3831   000F7D                     IOCB            equ	3965	;# 
  3832   000F7E                     ANSEL           equ	3966	;# 
  3833   000F7F                     ANSELH          equ	3967	;# 
  3834   000F80                     PORTA           equ	3968	;# 
  3835   000F81                     PORTB           equ	3969	;# 
  3836   000F82                     PORTC           equ	3970	;# 
  3837   000F83                     PORTD           equ	3971	;# 
  3838   000F84                     PORTE           equ	3972	;# 
  3839   000F89                     LATA            equ	3977	;# 
  3840   000F8A                     LATB            equ	3978	;# 
  3841   000F8B                     LATC            equ	3979	;# 
  3842   000F8C                     LATD            equ	3980	;# 
  3843   000F8D                     LATE            equ	3981	;# 
  3844   000F92                     TRISA           equ	3986	;# 
  3845   000F92                     DDRA            equ	3986	;# 
  3846   000F93                     TRISB           equ	3987	;# 
  3847   000F93                     DDRB            equ	3987	;# 
  3848   000F94                     TRISC           equ	3988	;# 
  3849   000F94                     DDRC            equ	3988	;# 
  3850   000F95                     TRISD           equ	3989	;# 
  3851   000F95                     DDRD            equ	3989	;# 
  3852   000F96                     TRISE           equ	3990	;# 
  3853   000F96                     DDRE            equ	3990	;# 
  3854   000F9B                     OSCTUNE         equ	3995	;# 
  3855   000F9D                     PIE1            equ	3997	;# 
  3856   000F9E                     PIR1            equ	3998	;# 
  3857   000F9F                     IPR1            equ	3999	;# 
  3858   000FA0                     PIE2            equ	4000	;# 
  3859   000FA1                     PIR2            equ	4001	;# 
  3860   000FA2                     IPR2            equ	4002	;# 
  3861   000FA6                     EECON1          equ	4006	;# 
  3862   000FA7                     EECON2          equ	4007	;# 
  3863   000FA8                     EEDATA          equ	4008	;# 
  3864   000FA9                     EEADR           equ	4009	;# 
  3865   000FAA                     EEADRH          equ	4010	;# 
  3866   000FAB                     RCSTA           equ	4011	;# 
  3867   000FAB                     RCSTA1          equ	4011	;# 
  3868   000FAC                     TXSTA           equ	4012	;# 
  3869   000FAC                     TXSTA1          equ	4012	;# 
  3870   000FAD                     TXREG           equ	4013	;# 
  3871   000FAD                     TXREG1          equ	4013	;# 
  3872   000FAE                     RCREG           equ	4014	;# 
  3873   000FAE                     RCREG1          equ	4014	;# 
  3874   000FAF                     SPBRG           equ	4015	;# 
  3875   000FAF                     SPBRG1          equ	4015	;# 
  3876   000FB0                     SPBRGH          equ	4016	;# 
  3877   000FB1                     T3CON           equ	4017	;# 
  3878   000FB2                     TMR3            equ	4018	;# 
  3879   000FB2                     TMR3L           equ	4018	;# 
  3880   000FB3                     TMR3H           equ	4019	;# 
  3881   000FB4                     CVRCON2         equ	4020	;# 
  3882   000FB5                     CVRCON          equ	4021	;# 
  3883   000FB6                     ECCP1AS         equ	4022	;# 
  3884   000FB7                     PWM1CON         equ	4023	;# 
  3885   000FB8                     BAUDCON         equ	4024	;# 
  3886   000FB8                     BAUDCTL         equ	4024	;# 
  3887   000FB9                     PSTRCON         equ	4025	;# 
  3888   000FBA                     CCP2CON         equ	4026	;# 
  3889   000FBB                     CCPR2           equ	4027	;# 
  3890   000FBB                     CCPR2L          equ	4027	;# 
  3891   000FBC                     CCPR2H          equ	4028	;# 
  3892   000FBD                     CCP1CON         equ	4029	;# 
  3893   000FBE                     CCPR1           equ	4030	;# 
  3894   000FBE                     CCPR1L          equ	4030	;# 
  3895   000FBF                     CCPR1H          equ	4031	;# 
  3896   000FC0                     ADCON2          equ	4032	;# 
  3897   000FC1                     ADCON1          equ	4033	;# 
  3898   000FC2                     ADCON0          equ	4034	;# 
  3899   000FC3                     ADRES           equ	4035	;# 
  3900   000FC3                     ADRESL          equ	4035	;# 
  3901   000FC4                     ADRESH          equ	4036	;# 
  3902   000FC5                     SSPCON2         equ	4037	;# 
  3903   000FC6                     SSPCON1         equ	4038	;# 
  3904   000FC7                     SSPSTAT         equ	4039	;# 
  3905   000FC8                     SSPADD          equ	4040	;# 
  3906   000FC9                     SSPBUF          equ	4041	;# 
  3907   000FCA                     T2CON           equ	4042	;# 
  3908   000FCB                     PR2             equ	4043	;# 
  3909   000FCB                     MEMCON          equ	4043	;# 
  3910   000FCC                     TMR2            equ	4044	;# 
  3911   000FCD                     T1CON           equ	4045	;# 
  3912   000FCE                     TMR1            equ	4046	;# 
  3913   000FCE                     TMR1L           equ	4046	;# 
  3914   000FCF                     TMR1H           equ	4047	;# 
  3915   000FD0                     RCON            equ	4048	;# 
  3916   000FD1                     WDTCON          equ	4049	;# 
  3917   000FD2                     HLVDCON         equ	4050	;# 
  3918   000FD2                     LVDCON          equ	4050	;# 
  3919   000FD3                     OSCCON          equ	4051	;# 
  3920   000FD5                     T0CON           equ	4053	;# 
  3921   000FD6                     TMR0            equ	4054	;# 
  3922   000FD6                     TMR0L           equ	4054	;# 
  3923   000FD7                     TMR0H           equ	4055	;# 
  3924   000FD8                     STATUS          equ	4056	;# 
  3925   000FD9                     FSR2            equ	4057	;# 
  3926   000FD9                     FSR2L           equ	4057	;# 
  3927   000FDA                     FSR2H           equ	4058	;# 
  3928   000FDB                     PLUSW2          equ	4059	;# 
  3929   000FDC                     PREINC2         equ	4060	;# 
  3930   000FDD                     POSTDEC2        equ	4061	;# 
  3931   000FDE                     POSTINC2        equ	4062	;# 
  3932   000FDF                     INDF2           equ	4063	;# 
  3933   000FE0                     BSR             equ	4064	;# 
  3934   000FE1                     FSR1            equ	4065	;# 
  3935   000FE1                     FSR1L           equ	4065	;# 
  3936   000FE2                     FSR1H           equ	4066	;# 
  3937   000FE3                     PLUSW1          equ	4067	;# 
  3938   000FE4                     PREINC1         equ	4068	;# 
  3939   000FE5                     POSTDEC1        equ	4069	;# 
  3940   000FE6                     POSTINC1        equ	4070	;# 
  3941   000FE7                     INDF1           equ	4071	;# 
  3942   000FE8                     WREG            equ	4072	;# 
  3943   000FE9                     FSR0            equ	4073	;# 
  3944   000FE9                     FSR0L           equ	4073	;# 
  3945   000FEA                     FSR0H           equ	4074	;# 
  3946   000FEB                     PLUSW0          equ	4075	;# 
  3947   000FEC                     PREINC0         equ	4076	;# 
  3948   000FED                     POSTDEC0        equ	4077	;# 
  3949   000FEE                     POSTINC0        equ	4078	;# 
  3950   000FEF                     INDF0           equ	4079	;# 
  3951   000FF0                     INTCON3         equ	4080	;# 
  3952   000FF1                     INTCON2         equ	4081	;# 
  3953   000FF2                     INTCON          equ	4082	;# 
  3954   000FF3                     PROD            equ	4083	;# 
  3955   000FF3                     PRODL           equ	4083	;# 
  3956   000FF4                     PRODH           equ	4084	;# 
  3957   000FF5                     TABLAT          equ	4085	;# 
  3958   000FF6                     TBLPTR          equ	4086	;# 
  3959   000FF6                     TBLPTRL         equ	4086	;# 
  3960   000FF7                     TBLPTRH         equ	4087	;# 
  3961   000FF8                     TBLPTRU         equ	4088	;# 
  3962   000FF9                     PCLAT           equ	4089	;# 
  3963   000FF9                     PC              equ	4089	;# 
  3964   000FF9                     PCL             equ	4089	;# 
  3965   000FFA                     PCLATH          equ	4090	;# 
  3966   000FFB                     PCLATU          equ	4091	;# 
  3967   000FFC                     STKPTR          equ	4092	;# 
  3968   000FFD                     TOS             equ	4093	;# 
  3969   000FFD                     TOSL            equ	4093	;# 
  3970   000FFE                     TOSH            equ	4094	;# 
  3971   000FFF                     TOSU            equ	4095	;# 
  3972   000F77                     SSPMSK          equ	3959	;# 
  3973   000F78                     SLRCON          equ	3960	;# 
  3974   000F79                     CM2CON1         equ	3961	;# 
  3975   000F7A                     CM2CON0         equ	3962	;# 
  3976   000F7B                     CM1CON0         equ	3963	;# 
  3977   000F7C                     WPUB            equ	3964	;# 
  3978   000F7D                     IOCB            equ	3965	;# 
  3979   000F7E                     ANSEL           equ	3966	;# 
  3980   000F7F                     ANSELH          equ	3967	;# 
  3981   000F80                     PORTA           equ	3968	;# 
  3982   000F81                     PORTB           equ	3969	;# 
  3983   000F82                     PORTC           equ	3970	;# 
  3984   000F83                     PORTD           equ	3971	;# 
  3985   000F84                     PORTE           equ	3972	;# 
  3986   000F89                     LATA            equ	3977	;# 
  3987   000F8A                     LATB            equ	3978	;# 
  3988   000F8B                     LATC            equ	3979	;# 
  3989   000F8C                     LATD            equ	3980	;# 
  3990   000F8D                     LATE            equ	3981	;# 
  3991   000F92                     TRISA           equ	3986	;# 
  3992   000F92                     DDRA            equ	3986	;# 
  3993   000F93                     TRISB           equ	3987	;# 
  3994   000F93                     DDRB            equ	3987	;# 
  3995   000F94                     TRISC           equ	3988	;# 
  3996   000F94                     DDRC            equ	3988	;# 
  3997   000F95                     TRISD           equ	3989	;# 
  3998   000F95                     DDRD            equ	3989	;# 
  3999   000F96                     TRISE           equ	3990	;# 
  4000   000F96                     DDRE            equ	3990	;# 
  4001   000F9B                     OSCTUNE         equ	3995	;# 
  4002   000F9D                     PIE1            equ	3997	;# 
  4003   000F9E                     PIR1            equ	3998	;# 
  4004   000F9F                     IPR1            equ	3999	;# 
  4005   000FA0                     PIE2            equ	4000	;# 
  4006   000FA1                     PIR2            equ	4001	;# 
  4007   000FA2                     IPR2            equ	4002	;# 
  4008   000FA6                     EECON1          equ	4006	;# 
  4009   000FA7                     EECON2          equ	4007	;# 
  4010   000FA8                     EEDATA          equ	4008	;# 
  4011   000FA9                     EEADR           equ	4009	;# 
  4012   000FAA                     EEADRH          equ	4010	;# 
  4013   000FAB                     RCSTA           equ	4011	;# 
  4014   000FAB                     RCSTA1          equ	4011	;# 
  4015   000FAC                     TXSTA           equ	4012	;# 
  4016   000FAC                     TXSTA1          equ	4012	;# 
  4017   000FAD                     TXREG           equ	4013	;# 
  4018   000FAD                     TXREG1          equ	4013	;# 
  4019   000FAE                     RCREG           equ	4014	;# 
  4020   000FAE                     RCREG1          equ	4014	;# 
  4021   000FAF                     SPBRG           equ	4015	;# 
  4022   000FAF                     SPBRG1          equ	4015	;# 
  4023   000FB0                     SPBRGH          equ	4016	;# 
  4024   000FB1                     T3CON           equ	4017	;# 
  4025   000FB2                     TMR3            equ	4018	;# 
  4026   000FB2                     TMR3L           equ	4018	;# 
  4027   000FB3                     TMR3H           equ	4019	;# 
  4028   000FB4                     CVRCON2         equ	4020	;# 
  4029   000FB5                     CVRCON          equ	4021	;# 
  4030   000FB6                     ECCP1AS         equ	4022	;# 
  4031   000FB7                     PWM1CON         equ	4023	;# 
  4032   000FB8                     BAUDCON         equ	4024	;# 
  4033   000FB8                     BAUDCTL         equ	4024	;# 
  4034   000FB9                     PSTRCON         equ	4025	;# 
  4035   000FBA                     CCP2CON         equ	4026	;# 
  4036   000FBB                     CCPR2           equ	4027	;# 
  4037   000FBB                     CCPR2L          equ	4027	;# 
  4038   000FBC                     CCPR2H          equ	4028	;# 
  4039   000FBD                     CCP1CON         equ	4029	;# 
  4040   000FBE                     CCPR1           equ	4030	;# 
  4041   000FBE                     CCPR1L          equ	4030	;# 
  4042   000FBF                     CCPR1H          equ	4031	;# 
  4043   000FC0                     ADCON2          equ	4032	;# 
  4044   000FC1                     ADCON1          equ	4033	;# 
  4045   000FC2                     ADCON0          equ	4034	;# 
  4046   000FC3                     ADRES           equ	4035	;# 
  4047   000FC3                     ADRESL          equ	4035	;# 
  4048   000FC4                     ADRESH          equ	4036	;# 
  4049   000FC5                     SSPCON2         equ	4037	;# 
  4050   000FC6                     SSPCON1         equ	4038	;# 
  4051   000FC7                     SSPSTAT         equ	4039	;# 
  4052   000FC8                     SSPADD          equ	4040	;# 
  4053   000FC9                     SSPBUF          equ	4041	;# 
  4054   000FCA                     T2CON           equ	4042	;# 
  4055   000FCB                     PR2             equ	4043	;# 
  4056   000FCB                     MEMCON          equ	4043	;# 
  4057   000FCC                     TMR2            equ	4044	;# 
  4058   000FCD                     T1CON           equ	4045	;# 
  4059   000FCE                     TMR1            equ	4046	;# 
  4060   000FCE                     TMR1L           equ	4046	;# 
  4061   000FCF                     TMR1H           equ	4047	;# 
  4062   000FD0                     RCON            equ	4048	;# 
  4063   000FD1                     WDTCON          equ	4049	;# 
  4064   000FD2                     HLVDCON         equ	4050	;# 
  4065   000FD2                     LVDCON          equ	4050	;# 
  4066   000FD3                     OSCCON          equ	4051	;# 
  4067   000FD5                     T0CON           equ	4053	;# 
  4068   000FD6                     TMR0            equ	4054	;# 
  4069   000FD6                     TMR0L           equ	4054	;# 
  4070   000FD7                     TMR0H           equ	4055	;# 
  4071   000FD8                     STATUS          equ	4056	;# 
  4072   000FD9                     FSR2            equ	4057	;# 
  4073   000FD9                     FSR2L           equ	4057	;# 
  4074   000FDA                     FSR2H           equ	4058	;# 
  4075   000FDB                     PLUSW2          equ	4059	;# 
  4076   000FDC                     PREINC2         equ	4060	;# 
  4077   000FDD                     POSTDEC2        equ	4061	;# 
  4078   000FDE                     POSTINC2        equ	4062	;# 
  4079   000FDF                     INDF2           equ	4063	;# 
  4080   000FE0                     BSR             equ	4064	;# 
  4081   000FE1                     FSR1            equ	4065	;# 
  4082   000FE1                     FSR1L           equ	4065	;# 
  4083   000FE2                     FSR1H           equ	4066	;# 
  4084   000FE3                     PLUSW1          equ	4067	;# 
  4085   000FE4                     PREINC1         equ	4068	;# 
  4086   000FE5                     POSTDEC1        equ	4069	;# 
  4087   000FE6                     POSTINC1        equ	4070	;# 
  4088   000FE7                     INDF1           equ	4071	;# 
  4089   000FE8                     WREG            equ	4072	;# 
  4090   000FE9                     FSR0            equ	4073	;# 
  4091   000FE9                     FSR0L           equ	4073	;# 
  4092   000FEA                     FSR0H           equ	4074	;# 
  4093   000FEB                     PLUSW0          equ	4075	;# 
  4094   000FEC                     PREINC0         equ	4076	;# 
  4095   000FED                     POSTDEC0        equ	4077	;# 
  4096   000FEE                     POSTINC0        equ	4078	;# 
  4097   000FEF                     INDF0           equ	4079	;# 
  4098   000FF0                     INTCON3         equ	4080	;# 
  4099   000FF1                     INTCON2         equ	4081	;# 
  4100   000FF2                     INTCON          equ	4082	;# 
  4101   000FF3                     PROD            equ	4083	;# 
  4102   000FF3                     PRODL           equ	4083	;# 
  4103   000FF4                     PRODH           equ	4084	;# 
  4104   000FF5                     TABLAT          equ	4085	;# 
  4105   000FF6                     TBLPTR          equ	4086	;# 
  4106   000FF6                     TBLPTRL         equ	4086	;# 
  4107   000FF7                     TBLPTRH         equ	4087	;# 
  4108   000FF8                     TBLPTRU         equ	4088	;# 
  4109   000FF9                     PCLAT           equ	4089	;# 
  4110   000FF9                     PC              equ	4089	;# 
  4111   000FF9                     PCL             equ	4089	;# 
  4112   000FFA                     PCLATH          equ	4090	;# 
  4113   000FFB                     PCLATU          equ	4091	;# 
  4114   000FFC                     STKPTR          equ	4092	;# 
  4115   000FFD                     TOS             equ	4093	;# 
  4116   000FFD                     TOSL            equ	4093	;# 
  4117   000FFE                     TOSH            equ	4094	;# 
  4118   000FFF                     TOSU            equ	4095	;# 
  4119   000F77                     SSPMSK          equ	3959	;# 
  4120   000F78                     SLRCON          equ	3960	;# 
  4121   000F79                     CM2CON1         equ	3961	;# 
  4122   000F7A                     CM2CON0         equ	3962	;# 
  4123   000F7B                     CM1CON0         equ	3963	;# 
  4124   000F7C                     WPUB            equ	3964	;# 
  4125   000F7D                     IOCB            equ	3965	;# 
  4126   000F7E                     ANSEL           equ	3966	;# 
  4127   000F7F                     ANSELH          equ	3967	;# 
  4128   000F80                     PORTA           equ	3968	;# 
  4129   000F81                     PORTB           equ	3969	;# 
  4130   000F82                     PORTC           equ	3970	;# 
  4131   000F83                     PORTD           equ	3971	;# 
  4132   000F84                     PORTE           equ	3972	;# 
  4133   000F89                     LATA            equ	3977	;# 
  4134   000F8A                     LATB            equ	3978	;# 
  4135   000F8B                     LATC            equ	3979	;# 
  4136   000F8C                     LATD            equ	3980	;# 
  4137   000F8D                     LATE            equ	3981	;# 
  4138   000F92                     TRISA           equ	3986	;# 
  4139   000F92                     DDRA            equ	3986	;# 
  4140   000F93                     TRISB           equ	3987	;# 
  4141   000F93                     DDRB            equ	3987	;# 
  4142   000F94                     TRISC           equ	3988	;# 
  4143   000F94                     DDRC            equ	3988	;# 
  4144   000F95                     TRISD           equ	3989	;# 
  4145   000F95                     DDRD            equ	3989	;# 
  4146   000F96                     TRISE           equ	3990	;# 
  4147   000F96                     DDRE            equ	3990	;# 
  4148   000F9B                     OSCTUNE         equ	3995	;# 
  4149   000F9D                     PIE1            equ	3997	;# 
  4150   000F9E                     PIR1            equ	3998	;# 
  4151   000F9F                     IPR1            equ	3999	;# 
  4152   000FA0                     PIE2            equ	4000	;# 
  4153   000FA1                     PIR2            equ	4001	;# 
  4154   000FA2                     IPR2            equ	4002	;# 
  4155   000FA6                     EECON1          equ	4006	;# 
  4156   000FA7                     EECON2          equ	4007	;# 
  4157   000FA8                     EEDATA          equ	4008	;# 
  4158   000FA9                     EEADR           equ	4009	;# 
  4159   000FAA                     EEADRH          equ	4010	;# 
  4160   000FAB                     RCSTA           equ	4011	;# 
  4161   000FAB                     RCSTA1          equ	4011	;# 
  4162   000FAC                     TXSTA           equ	4012	;# 
  4163   000FAC                     TXSTA1          equ	4012	;# 
  4164   000FAD                     TXREG           equ	4013	;# 
  4165   000FAD                     TXREG1          equ	4013	;# 
  4166   000FAE                     RCREG           equ	4014	;# 
  4167   000FAE                     RCREG1          equ	4014	;# 
  4168   000FAF                     SPBRG           equ	4015	;# 
  4169   000FAF                     SPBRG1          equ	4015	;# 
  4170   000FB0                     SPBRGH          equ	4016	;# 
  4171   000FB1                     T3CON           equ	4017	;# 
  4172   000FB2                     TMR3            equ	4018	;# 
  4173   000FB2                     TMR3L           equ	4018	;# 
  4174   000FB3                     TMR3H           equ	4019	;# 
  4175   000FB4                     CVRCON2         equ	4020	;# 
  4176   000FB5                     CVRCON          equ	4021	;# 
  4177   000FB6                     ECCP1AS         equ	4022	;# 
  4178   000FB7                     PWM1CON         equ	4023	;# 
  4179   000FB8                     BAUDCON         equ	4024	;# 
  4180   000FB8                     BAUDCTL         equ	4024	;# 
  4181   000FB9                     PSTRCON         equ	4025	;# 
  4182   000FBA                     CCP2CON         equ	4026	;# 
  4183   000FBB                     CCPR2           equ	4027	;# 
  4184   000FBB                     CCPR2L          equ	4027	;# 
  4185   000FBC                     CCPR2H          equ	4028	;# 
  4186   000FBD                     CCP1CON         equ	4029	;# 
  4187   000FBE                     CCPR1           equ	4030	;# 
  4188   000FBE                     CCPR1L          equ	4030	;# 
  4189   000FBF                     CCPR1H          equ	4031	;# 
  4190   000FC0                     ADCON2          equ	4032	;# 
  4191   000FC1                     ADCON1          equ	4033	;# 
  4192   000FC2                     ADCON0          equ	4034	;# 
  4193   000FC3                     ADRES           equ	4035	;# 
  4194   000FC3                     ADRESL          equ	4035	;# 
  4195   000FC4                     ADRESH          equ	4036	;# 
  4196   000FC5                     SSPCON2         equ	4037	;# 
  4197   000FC6                     SSPCON1         equ	4038	;# 
  4198   000FC7                     SSPSTAT         equ	4039	;# 
  4199   000FC8                     SSPADD          equ	4040	;# 
  4200   000FC9                     SSPBUF          equ	4041	;# 
  4201   000FCA                     T2CON           equ	4042	;# 
  4202   000FCB                     PR2             equ	4043	;# 
  4203   000FCB                     MEMCON          equ	4043	;# 
  4204   000FCC                     TMR2            equ	4044	;# 
  4205   000FCD                     T1CON           equ	4045	;# 
  4206   000FCE                     TMR1            equ	4046	;# 
  4207   000FCE                     TMR1L           equ	4046	;# 
  4208   000FCF                     TMR1H           equ	4047	;# 
  4209   000FD0                     RCON            equ	4048	;# 
  4210   000FD1                     WDTCON          equ	4049	;# 
  4211   000FD2                     HLVDCON         equ	4050	;# 
  4212   000FD2                     LVDCON          equ	4050	;# 
  4213   000FD3                     OSCCON          equ	4051	;# 
  4214   000FD5                     T0CON           equ	4053	;# 
  4215   000FD6                     TMR0            equ	4054	;# 
  4216   000FD6                     TMR0L           equ	4054	;# 
  4217   000FD7                     TMR0H           equ	4055	;# 
  4218   000FD8                     STATUS          equ	4056	;# 
  4219   000FD9                     FSR2            equ	4057	;# 
  4220   000FD9                     FSR2L           equ	4057	;# 
  4221   000FDA                     FSR2H           equ	4058	;# 
  4222   000FDB                     PLUSW2          equ	4059	;# 
  4223   000FDC                     PREINC2         equ	4060	;# 
  4224   000FDD                     POSTDEC2        equ	4061	;# 
  4225   000FDE                     POSTINC2        equ	4062	;# 
  4226   000FDF                     INDF2           equ	4063	;# 
  4227   000FE0                     BSR             equ	4064	;# 
  4228   000FE1                     FSR1            equ	4065	;# 
  4229   000FE1                     FSR1L           equ	4065	;# 
  4230   000FE2                     FSR1H           equ	4066	;# 
  4231   000FE3                     PLUSW1          equ	4067	;# 
  4232   000FE4                     PREINC1         equ	4068	;# 
  4233   000FE5                     POSTDEC1        equ	4069	;# 
  4234   000FE6                     POSTINC1        equ	4070	;# 
  4235   000FE7                     INDF1           equ	4071	;# 
  4236   000FE8                     WREG            equ	4072	;# 
  4237   000FE9                     FSR0            equ	4073	;# 
  4238   000FE9                     FSR0L           equ	4073	;# 
  4239   000FEA                     FSR0H           equ	4074	;# 
  4240   000FEB                     PLUSW0          equ	4075	;# 
  4241   000FEC                     PREINC0         equ	4076	;# 
  4242   000FED                     POSTDEC0        equ	4077	;# 
  4243   000FEE                     POSTINC0        equ	4078	;# 
  4244   000FEF                     INDF0           equ	4079	;# 
  4245   000FF0                     INTCON3         equ	4080	;# 
  4246   000FF1                     INTCON2         equ	4081	;# 
  4247   000FF2                     INTCON          equ	4082	;# 
  4248   000FF3                     PROD            equ	4083	;# 
  4249   000FF3                     PRODL           equ	4083	;# 
  4250   000FF4                     PRODH           equ	4084	;# 
  4251   000FF5                     TABLAT          equ	4085	;# 
  4252   000FF6                     TBLPTR          equ	4086	;# 
  4253   000FF6                     TBLPTRL         equ	4086	;# 
  4254   000FF7                     TBLPTRH         equ	4087	;# 
  4255   000FF8                     TBLPTRU         equ	4088	;# 
  4256   000FF9                     PCLAT           equ	4089	;# 
  4257   000FF9                     PC              equ	4089	;# 
  4258   000FF9                     PCL             equ	4089	;# 
  4259   000FFA                     PCLATH          equ	4090	;# 
  4260   000FFB                     PCLATU          equ	4091	;# 
  4261   000FFC                     STKPTR          equ	4092	;# 
  4262   000FFD                     TOS             equ	4093	;# 
  4263   000FFD                     TOSL            equ	4093	;# 
  4264   000FFE                     TOSH            equ	4094	;# 
  4265   000FFF                     TOSU            equ	4095	;# 
  4266   000F77                     SSPMSK          equ	3959	;# 
  4267   000F78                     SLRCON          equ	3960	;# 
  4268   000F79                     CM2CON1         equ	3961	;# 
  4269   000F7A                     CM2CON0         equ	3962	;# 
  4270   000F7B                     CM1CON0         equ	3963	;# 
  4271   000F7C                     WPUB            equ	3964	;# 
  4272   000F7D                     IOCB            equ	3965	;# 
  4273   000F7E                     ANSEL           equ	3966	;# 
  4274   000F7F                     ANSELH          equ	3967	;# 
  4275   000F80                     PORTA           equ	3968	;# 
  4276   000F81                     PORTB           equ	3969	;# 
  4277   000F82                     PORTC           equ	3970	;# 
  4278   000F83                     PORTD           equ	3971	;# 
  4279   000F84                     PORTE           equ	3972	;# 
  4280   000F89                     LATA            equ	3977	;# 
  4281   000F8A                     LATB            equ	3978	;# 
  4282   000F8B                     LATC            equ	3979	;# 
  4283   000F8C                     LATD            equ	3980	;# 
  4284   000F8D                     LATE            equ	3981	;# 
  4285   000F92                     TRISA           equ	3986	;# 
  4286   000F92                     DDRA            equ	3986	;# 
  4287   000F93                     TRISB           equ	3987	;# 
  4288   000F93                     DDRB            equ	3987	;# 
  4289   000F94                     TRISC           equ	3988	;# 
  4290   000F94                     DDRC            equ	3988	;# 
  4291   000F95                     TRISD           equ	3989	;# 
  4292   000F95                     DDRD            equ	3989	;# 
  4293   000F96                     TRISE           equ	3990	;# 
  4294   000F96                     DDRE            equ	3990	;# 
  4295   000F9B                     OSCTUNE         equ	3995	;# 
  4296   000F9D                     PIE1            equ	3997	;# 
  4297   000F9E                     PIR1            equ	3998	;# 
  4298   000F9F                     IPR1            equ	3999	;# 
  4299   000FA0                     PIE2            equ	4000	;# 
  4300   000FA1                     PIR2            equ	4001	;# 
  4301   000FA2                     IPR2            equ	4002	;# 
  4302   000FA6                     EECON1          equ	4006	;# 
  4303   000FA7                     EECON2          equ	4007	;# 
  4304   000FA8                     EEDATA          equ	4008	;# 
  4305   000FA9                     EEADR           equ	4009	;# 
  4306   000FAA                     EEADRH          equ	4010	;# 
  4307   000FAB                     RCSTA           equ	4011	;# 
  4308   000FAB                     RCSTA1          equ	4011	;# 
  4309   000FAC                     TXSTA           equ	4012	;# 
  4310   000FAC                     TXSTA1          equ	4012	;# 
  4311   000FAD                     TXREG           equ	4013	;# 
  4312   000FAD                     TXREG1          equ	4013	;# 
  4313   000FAE                     RCREG           equ	4014	;# 
  4314   000FAE                     RCREG1          equ	4014	;# 
  4315   000FAF                     SPBRG           equ	4015	;# 
  4316   000FAF                     SPBRG1          equ	4015	;# 
  4317   000FB0                     SPBRGH          equ	4016	;# 
  4318   000FB1                     T3CON           equ	4017	;# 
  4319   000FB2                     TMR3            equ	4018	;# 
  4320   000FB2                     TMR3L           equ	4018	;# 
  4321   000FB3                     TMR3H           equ	4019	;# 
  4322   000FB4                     CVRCON2         equ	4020	;# 
  4323   000FB5                     CVRCON          equ	4021	;# 
  4324   000FB6                     ECCP1AS         equ	4022	;# 
  4325   000FB7                     PWM1CON         equ	4023	;# 
  4326   000FB8                     BAUDCON         equ	4024	;# 
  4327   000FB8                     BAUDCTL         equ	4024	;# 
  4328   000FB9                     PSTRCON         equ	4025	;# 
  4329   000FBA                     CCP2CON         equ	4026	;# 
  4330   000FBB                     CCPR2           equ	4027	;# 
  4331   000FBB                     CCPR2L          equ	4027	;# 
  4332   000FBC                     CCPR2H          equ	4028	;# 
  4333   000FBD                     CCP1CON         equ	4029	;# 
  4334   000FBE                     CCPR1           equ	4030	;# 
  4335   000FBE                     CCPR1L          equ	4030	;# 
  4336   000FBF                     CCPR1H          equ	4031	;# 
  4337   000FC0                     ADCON2          equ	4032	;# 
  4338   000FC1                     ADCON1          equ	4033	;# 
  4339   000FC2                     ADCON0          equ	4034	;# 
  4340   000FC3                     ADRES           equ	4035	;# 
  4341   000FC3                     ADRESL          equ	4035	;# 
  4342   000FC4                     ADRESH          equ	4036	;# 
  4343   000FC5                     SSPCON2         equ	4037	;# 
  4344   000FC6                     SSPCON1         equ	4038	;# 
  4345   000FC7                     SSPSTAT         equ	4039	;# 
  4346   000FC8                     SSPADD          equ	4040	;# 
  4347   000FC9                     SSPBUF          equ	4041	;# 
  4348   000FCA                     T2CON           equ	4042	;# 
  4349   000FCB                     PR2             equ	4043	;# 
  4350   000FCB                     MEMCON          equ	4043	;# 
  4351   000FCC                     TMR2            equ	4044	;# 
  4352   000FCD                     T1CON           equ	4045	;# 
  4353   000FCE                     TMR1            equ	4046	;# 
  4354   000FCE                     TMR1L           equ	4046	;# 
  4355   000FCF                     TMR1H           equ	4047	;# 
  4356   000FD0                     RCON            equ	4048	;# 
  4357   000FD1                     WDTCON          equ	4049	;# 
  4358   000FD2                     HLVDCON         equ	4050	;# 
  4359   000FD2                     LVDCON          equ	4050	;# 
  4360   000FD3                     OSCCON          equ	4051	;# 
  4361   000FD5                     T0CON           equ	4053	;# 
  4362   000FD6                     TMR0            equ	4054	;# 
  4363   000FD6                     TMR0L           equ	4054	;# 
  4364   000FD7                     TMR0H           equ	4055	;# 
  4365   000FD8                     STATUS          equ	4056	;# 
  4366   000FD9                     FSR2            equ	4057	;# 
  4367   000FD9                     FSR2L           equ	4057	;# 
  4368   000FDA                     FSR2H           equ	4058	;# 
  4369   000FDB                     PLUSW2          equ	4059	;# 
  4370   000FDC                     PREINC2         equ	4060	;# 
  4371   000FDD                     POSTDEC2        equ	4061	;# 
  4372   000FDE                     POSTINC2        equ	4062	;# 
  4373   000FDF                     INDF2           equ	4063	;# 
  4374   000FE0                     BSR             equ	4064	;# 
  4375   000FE1                     FSR1            equ	4065	;# 
  4376   000FE1                     FSR1L           equ	4065	;# 
  4377   000FE2                     FSR1H           equ	4066	;# 
  4378   000FE3                     PLUSW1          equ	4067	;# 
  4379   000FE4                     PREINC1         equ	4068	;# 
  4380   000FE5                     POSTDEC1        equ	4069	;# 
  4381   000FE6                     POSTINC1        equ	4070	;# 
  4382   000FE7                     INDF1           equ	4071	;# 
  4383   000FE8                     WREG            equ	4072	;# 
  4384   000FE9                     FSR0            equ	4073	;# 
  4385   000FE9                     FSR0L           equ	4073	;# 
  4386   000FEA                     FSR0H           equ	4074	;# 
  4387   000FEB                     PLUSW0          equ	4075	;# 
  4388   000FEC                     PREINC0         equ	4076	;# 
  4389   000FED                     POSTDEC0        equ	4077	;# 
  4390   000FEE                     POSTINC0        equ	4078	;# 
  4391   000FEF                     INDF0           equ	4079	;# 
  4392   000FF0                     INTCON3         equ	4080	;# 
  4393   000FF1                     INTCON2         equ	4081	;# 
  4394   000FF2                     INTCON          equ	4082	;# 
  4395   000FF3                     PROD            equ	4083	;# 
  4396   000FF3                     PRODL           equ	4083	;# 
  4397   000FF4                     PRODH           equ	4084	;# 
  4398   000FF5                     TABLAT          equ	4085	;# 
  4399   000FF6                     TBLPTR          equ	4086	;# 
  4400   000FF6                     TBLPTRL         equ	4086	;# 
  4401   000FF7                     TBLPTRH         equ	4087	;# 
  4402   000FF8                     TBLPTRU         equ	4088	;# 
  4403   000FF9                     PCLAT           equ	4089	;# 
  4404   000FF9                     PC              equ	4089	;# 
  4405   000FF9                     PCL             equ	4089	;# 
  4406   000FFA                     PCLATH          equ	4090	;# 
  4407   000FFB                     PCLATU          equ	4091	;# 
  4408   000FFC                     STKPTR          equ	4092	;# 
  4409   000FFD                     TOS             equ	4093	;# 
  4410   000FFD                     TOSL            equ	4093	;# 
  4411   000FFE                     TOSH            equ	4094	;# 
  4412   000FFF                     TOSU            equ	4095	;# 
  4413                           
  4414 ;; Function _I2C_SlaveDefWrColInterruptHandler is unused but had its address taken
  4415   000000                     _I2C_SlaveDefWrColInterruptHandler equ	0
  4416                           
  4417 ;; Function _I2C_SlaveDefBusColInterruptHandler is unused but had its address taken
  4418   000000                     _I2C_SlaveDefBusColInterruptHandler equ	0
  4419                           
  4420 ;; Function _CCP1_DefaultISR is unused but had its address taken
  4421   000000                     _CCP1_DefaultISR equ	0
  4422                           
  4423                           	psect	idataCOMRAM
  4424   002478                     __pidataCOMRAM:
  4425                           	callstack 0
  4426                           
  4427                           ;initializer for _RB7_Flag
  4428   002478  01                 	db	1
  4429                           
  4430                           ;initializer for _RB6_Flag
  4431   002479  01                 	db	1
  4432                           
  4433                           ;initializer for _RB5_Flag
  4434   00247A  01                 	db	1
  4435                           
  4436                           ;initializer for _RB4_Flag
  4437   00247B  01                 	db	1
  4438                           
  4439                           ;initializer for _Dc_Motor_Gate
  4440   00247C  32                 	db	50
  4441   00247D  3A                 	db	58
  4442                           
  4443                           ;initializer for _InDoor_E
  4444   00247E  03                 	db	3
  4445                           
  4446                           ;initializer for _GREEN_LED
  4447   00247F  24                 	db	36
  4448                           
  4449                           ;initializer for _RED_LED
  4450   002480  71                 	db	113
  4451                           
  4452                           	psect	idataBANK0
  4453   0022AC                     __pidataBANK0:
  4454                           	callstack 0
  4455                           
  4456                           ;initializer for _btn_value
  4457   0022AC  31                 	db	49
  4458   0022AD  32                 	db	50
  4459   0022AE  33                 	db	51
  4460   0022AF  34                 	db	52
  4461   0022B0  35                 	db	53
  4462   0022B1  36                 	db	54
  4463   0022B2  37                 	db	55
  4464   0022B3  38                 	db	56
  4465   0022B4  39                 	db	57
  4466   0022B5  2A                 	db	42
  4467   0022B6  30                 	db	48
  4468   0022B7  23                 	db	35
  4469                           
  4470                           ;initializer for _correctPassword
  4471   0022B8  31                 	db	49
  4472   0022B9  33                 	db	51
  4473   0022BA  39                 	db	57
  4474   0022BB  35                 	db	53
  4475   0022BC  34                 	db	52
  4476   0022BD  34                 	db	52
  4477   0022BE  37                 	db	55
  4478                           
  4479                           ;initializer for _port_registers
  4480   0022BF  80                 	db	128
  4481   0022C0  81                 	db	129
  4482   0022C1  82                 	db	130
  4483   0022C2  83                 	db	131
  4484   0022C3  84                 	db	132
  4485                           
  4486                           ;initializer for _lat_registers
  4487   0022C4  89                 	db	137
  4488   0022C5  8A                 	db	138
  4489   0022C6  8B                 	db	139
  4490   0022C7  8C                 	db	140
  4491   0022C8  8D                 	db	141
  4492                           
  4493                           ;initializer for _tris_registers
  4494   0022C9  92                 	db	146
  4495   0022CA  93                 	db	147
  4496   0022CB  94                 	db	148
  4497   0022CC  95                 	db	149
  4498   0022CD  96                 	db	150
  4499                           
  4500                           ;initializer for _keypad_1
  4501   0022CE  02                 	db	2
  4502   0022CF  0A                 	db	10
  4503   0022D0  12                 	db	18
  4504   0022D1  2A                 	db	42
  4505   0022D2  4B                 	db	75
  4506   0022D3  53                 	db	83
  4507   0022D4  5B                 	db	91
  4508                           
  4509                           ;initializer for _LCD_1
  4510   0022D5  23                 	db	35
  4511   0022D6  2B                 	db	43
  4512   0022D7  33                 	db	51
  4513   0022D8  3B                 	db	59
  4514   0022D9  04                 	db	4
  4515   0022DA  0C                 	db	12
  4516   007CA3                     _TRISC3         set	31907
  4517   007C95                     _TRISA5         set	31893
  4518   007CA4                     _TRISC4         set	31908
  4519   007CA5                     _TRISC5         set	31909
  4520   000FAF                     _SPBRG          set	4015
  4521   000FB0                     _SPBRGH         set	4016
  4522   000FB8                     _BAUDCONbits    set	4024
  4523   000FAD                     _TXREG          set	4013
  4524   000FAC                     _TXSTAbits      set	4012
  4525   000FAE                     _RCREG          set	4014
  4526   000FAB                     _RCSTAbits      set	4011
  4527   000FB2                     _TMR3L          set	4018
  4528   000FB3                     _TMR3H          set	4019
  4529   000FCC                     _TMR2           set	4044
  4530   000FCA                     _T2CONbits      set	4042
  4531   000FCE                     _TMR1L          set	4046
  4532   000FCF                     _TMR1H          set	4047
  4533   000FCD                     _T1CONbits      set	4045
  4534   000FD7                     _TMR0H          set	4055
  4535   000FD6                     _TMR0L          set	4054
  4536   000FD5                     _T0CONbits      set	4053
  4537   000FF0                     _INTCON3bits    set	4080
  4538   000F94                     _TRISCbits      set	3988
  4539   000FA7                     _EECON2         set	4007
  4540   000FA6                     _EECON1bits     set	4006
  4541   000FA8                     _EEDATA         set	4008
  4542   000FA9                     _EEADR          set	4009
  4543   000FAA                     _EEADRH         set	4010
  4544   000FB1                     _T3CONbits      set	4017
  4545   000FBC                     _CCPR2H         set	4028
  4546   000FBB                     _CCPR2L         set	4027
  4547   000FBF                     _CCPR1H         set	4031
  4548   000FBE                     _CCPR1L         set	4030
  4549   000FBA                     _CCP2CONbits    set	4026
  4550   000FBD                     _CCP1CONbits    set	4029
  4551   000FC1                     _ADCON1bits     set	4033
  4552   000FC3                     _ADRESL         set	4035
  4553   000FC4                     _ADRESH         set	4036
  4554   000FC0                     _ADCON2bits     set	4032
  4555   000FC2                     _ADCON0bits     set	4034
  4556   000FA1                     _PIR2bits       set	4001
  4557   000FA0                     _PIE2bits       set	4000
  4558   000FA2                     _IPR2bits       set	4002
  4559   000F9F                     _IPR1bits       set	3999
  4560   000FD0                     _RCONbits       set	4048
  4561   000FC5                     _SSPCON2bits    set	4037
  4562   000F9E                     _PIR1bits       set	3998
  4563   000FC7                     _SSPSTATbits    set	4039
  4564   000F9D                     _PIE1bits       set	3997
  4565   000F77                     _SSPMSK         set	3959
  4566   000FC8                     _SSPADD         set	4040
  4567   000FC6                     _SSPCON1bits    set	4038
  4568   000FC5                     _SSPCON2        set	4037
  4569   000FC6                     _SSPCON1        set	4038
  4570   000FC7                     _SSPSTAT        set	4039
  4571   000FC9                     _SSPBUF         set	4041
  4572   000FF2                     _INTCONbits     set	4082
  4573   000FF1                     _INTCON2bits    set	4081
  4574   000F7C                     _WPUB           set	3964
  4575   000F7F                     _ANSELH         set	3967
  4576   000F7E                     _ANSEL          set	3966
  4577   000F9B                     _OSCTUNE        set	3995
  4578   000FD3                     _OSCCON         set	4051
  4579   000F84                     _PORTE          set	3972
  4580   000F83                     _PORTD          set	3971
  4581   000F82                     _PORTC          set	3970
  4582   000F81                     _PORTB          set	3969
  4583   000F80                     _PORTA          set	3968
  4584   000F95                     _TRISD          set	3989
  4585   000F94                     _TRISC          set	3988
  4586   000F93                     _TRISB          set	3987
  4587   000F92                     _TRISA          set	3986
  4588   000F96                     _TRISE          set	3990
  4589   000F8B                     _LATC           set	3979
  4590   000F8A                     _LATB           set	3978
  4591   000F89                     _LATA           set	3977
  4592   000F8C                     _LATD           set	3980
  4593   000F8D                     _LATE           set	3981
  4594                           
  4595                           	psect	smallconst
  4596   001000                     __psmallconst:
  4597                           	callstack 0
  4598   001000  00                 	db	0
  4599   001001                     STR_2:
  4600   001001  45                 	db	69	;'E'
  4601   001002  6E                 	db	110	;'n'
  4602   001003  74                 	db	116	;'t'
  4603   001004  65                 	db	101	;'e'
  4604   001005  72                 	db	114	;'r'
  4605   001006  20                 	db	32
  4606   001007  74                 	db	116	;'t'
  4607   001008  68                 	db	104	;'h'
  4608   001009  65                 	db	101	;'e'
  4609   00100A  20                 	db	32
  4610   00100B  70                 	db	112	;'p'
  4611   00100C  61                 	db	97	;'a'
  4612   00100D  73                 	db	115	;'s'
  4613   00100E  73                 	db	115	;'s'
  4614   00100F  77                 	db	119	;'w'
  4615   001010  6F                 	db	111	;'o'
  4616   001011  72                 	db	114	;'r'
  4617   001012  64                 	db	100	;'d'
  4618   001013  00                 	db	0
  4619   001014                     STR_1:
  4620   001014  57                 	db	87	;'W'
  4621   001015  72                 	db	114	;'r'
  4622   001016  6F                 	db	111	;'o'
  4623   001017  6E                 	db	110	;'n'
  4624   001018  67                 	db	103	;'g'
  4625   001019  20                 	db	32
  4626   00101A  70                 	db	112	;'p'
  4627   00101B  61                 	db	97	;'a'
  4628   00101C  73                 	db	115	;'s'
  4629   00101D  73                 	db	115	;'s'
  4630   00101E  77                 	db	119	;'w'
  4631   00101F  6F                 	db	111	;'o'
  4632   001020  72                 	db	114	;'r'
  4633   001021  64                 	db	100	;'d'
  4634   001022  21                 	db	33
  4635   001023  21                 	db	33
  4636   001024  21                 	db	33
  4637   001025  00                 	db	0
  4638   001026                     STR_3:
  4639   001026  25                 	db	37
  4640   001027  69                 	db	105	;'i'
  4641   001028  00                 	db	0
  4642   001026                     STR_4           equ	STR_3
  4643   001026                     STR_5           equ	STR_3
  4644   001029  00                 	db	0	; dummy byte at the end
  4645   000003                     __activetblptr  equ	3
  4646                           
  4647                           ; #config settings
  4648                           
  4649                           	psect	cinit
  4650   001F9E                     __pcinit:
  4651                           	callstack 0
  4652   001F9E                     start_initialization:
  4653                           	callstack 0
  4654   001F9E                     __initialization:
  4655                           	callstack 0
  4656                           
  4657                           ; Initialize objects allocated to BANK0 (47 bytes)
  4658                           ; load TBLPTR registers with __pidataBANK0
  4659   001F9E  0EAC               	movlw	low __pidataBANK0
  4660   001FA0  6EF6               	movwf	tblptrl,c
  4661   001FA2  0E22               	movlw	high __pidataBANK0
  4662   001FA4  6EF7               	movwf	tblptrh,c
  4663   001FA6  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  4664   001FA8  6EF8               	movwf	tblptru,c
  4665   001FAA  EE00  F0A8         	lfsr	0,__pdataBANK0
  4666   001FAE  EE10 F02F          	lfsr	1,47
  4667   001FB2                     copy_data0:
  4668   001FB2  0009               	tblrd		*+
  4669   001FB4  CFF5 FFEE          	movff	tablat,postinc0
  4670   001FB8  50E5               	movf	postdec1,w,c
  4671   001FBA  50E1               	movf	fsr1l,w,c
  4672   001FBC  E1FA               	bnz	copy_data0
  4673                           
  4674                           ; Initialize objects allocated to COMRAM (9 bytes)
  4675                           ; load TBLPTR registers with __pidataCOMRAM
  4676   001FBE  0E78               	movlw	low __pidataCOMRAM
  4677   001FC0  6EF6               	movwf	tblptrl,c
  4678   001FC2  0E24               	movlw	high __pidataCOMRAM
  4679   001FC4  6EF7               	movwf	tblptrh,c
  4680   001FC6  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  4681   001FC8  6EF8               	movwf	tblptru,c
  4682   001FCA  EE00  F051         	lfsr	0,__pdataCOMRAM
  4683   001FCE  EE10 F009          	lfsr	1,9
  4684   001FD2                     copy_data1:
  4685   001FD2  0009               	tblrd		*+
  4686   001FD4  CFF5 FFEE          	movff	tablat,postinc0
  4687   001FD8  50E5               	movf	postdec1,w,c
  4688   001FDA  50E1               	movf	fsr1l,w,c
  4689   001FDC  E1FA               	bnz	copy_data1
  4690                           
  4691                           ; Clear objects allocated to BANK0 (72 bytes)
  4692   001FDE  EE00  F060         	lfsr	0,__pbssBANK0
  4693   001FE2  0E48               	movlw	72
  4694   001FE4                     clear_0:
  4695   001FE4  6AEE               	clrf	postinc0,c
  4696   001FE6  06E8               	decf	wreg,f,c
  4697   001FE8  E1FD               	bnz	clear_0
  4698                           
  4699                           ; Clear objects allocated to COMRAM (56 bytes)
  4700   001FEA  EE00  F001         	lfsr	0,__pbssCOMRAM
  4701   001FEE  0E38               	movlw	56
  4702   001FF0                     clear_1:
  4703   001FF0  6AEE               	clrf	postinc0,c
  4704   001FF2  06E8               	decf	wreg,f,c
  4705   001FF4  E1FD               	bnz	clear_1
  4706   001FF6                     end_of_initialization:
  4707                           	callstack 0
  4708   001FF6                     __end_of__initialization:
  4709                           	callstack 0
  4710   001FF6  905A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4711   001FF8  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4712   001FFA  0100               	movlb	0
  4713   001FFC  EFAE  F00A         	goto	_main	;jump to C main() function
  4714                           
  4715                           	psect	bssCOMRAM
  4716   000001                     __pbssCOMRAM:
  4717                           	callstack 0
  4718   000001                     _PWM_Val:
  4719                           	callstack 0
  4720   000001                     	ds	2
  4721   000003                     _timer3_preload:
  4722                           	callstack 0
  4723   000003                     	ds	2
  4724   000005                     _timer1_preload:
  4725                           	callstack 0
  4726   000005                     	ds	2
  4727   000007                     _timer0_preload:
  4728                           	callstack 0
  4729   000007                     	ds	2
  4730   000009                     _I2C_Report_Write_Collision:
  4731                           	callstack 0
  4732   000009                     	ds	2
  4733   00000B                     _I2C_DefaultInterruptHandler@hal_i2c$F2517:
  4734                           	callstack 0
  4735   00000B                     	ds	2
  4736   00000D                     _CCP2_InterrptHandle:
  4737                           	callstack 0
  4738   00000D                     	ds	2
  4739   00000F                     _CCP1_InterrptHandle:
  4740                           	callstack 0
  4741   00000F                     	ds	2
  4742   000011                     _ADC_InterruptHandler:
  4743                           	callstack 0
  4744   000011                     	ds	2
  4745   000013                     _I2C_SlaveWrColInterruptHandler:
  4746                           	callstack 0
  4747   000013                     	ds	2
  4748   000015                     _I2C_SlaveBusColInterruptHandler:
  4749                           	callstack 0
  4750   000015                     	ds	2
  4751   000017                     _I2C_SlaveAddrInterruptHandler:
  4752                           	callstack 0
  4753   000017                     	ds	2
  4754   000019                     _I2C_SlaveWrInterruptHandler:
  4755                           	callstack 0
  4756   000019                     	ds	2
  4757   00001B                     _I2C_SlaveRdInterruptHandler:
  4758                           	callstack 0
  4759   00001B                     	ds	2
  4760   00001D                     _MSSP_InterruptHandler:
  4761                           	callstack 0
  4762   00001D                     	ds	2
  4763   00001F                     _CCP1_flag:
  4764                           	callstack 0
  4765   00001F                     	ds	1
  4766   000020                     _ret@ecu_servoMotor$F5428:
  4767                           	callstack 0
  4768   000020                     	ds	1
  4769   000021                     ECU_Relay_toggle@F3477:
  4770                           	callstack 0
  4771   000021                     	ds	1
  4772   000022                     ECU_Relay_turnOFF@F3472:
  4773                           	callstack 0
  4774   000022                     	ds	1
  4775   000023                     ECU_Relay_turnON@F3467:
  4776                           	callstack 0
  4777   000023                     	ds	1
  4778   000024                     ECU_Relay_Initialize@F3462:
  4779                           	callstack 0
  4780   000024                     	ds	1
  4781   000025                     LED_toggle@F3476:
  4782                           	callstack 0
  4783   000025                     	ds	1
  4784   000026                     LED_turnOFF@F3471:
  4785                           	callstack 0
  4786   000026                     	ds	1
  4787   000027                     LED_turnON@F3466:
  4788                           	callstack 0
  4789   000027                     	ds	1
  4790   000028                     LED_init@F3461:
  4791                           	callstack 0
  4792   000028                     	ds	1
  4793   000029                     _timer2_preload:
  4794                           	callstack 0
  4795   000029                     	ds	1
  4796   00002A                     _SPI_SS:
  4797                           	callstack 0
  4798   00002A                     	ds	1
  4799   00002B                     _SPI_SCK:
  4800                           	callstack 0
  4801   00002B                     	ds	1
  4802   00002C                     _SPI_SDI:
  4803                           	callstack 0
  4804   00002C                     	ds	1
  4805   00002D                     _SPI_SDO:
  4806                           	callstack 0
  4807   00002D                     	ds	1
  4808   00002E                     _i2cSlaveState:
  4809                           	callstack 0
  4810   00002E                     	ds	1
  4811   00002F                     _i2cSlaveAddr:
  4812                           	callstack 0
  4813   00002F                     	ds	1
  4814   000030                     _i2cRdData:
  4815                           	callstack 0
  4816   000030                     	ds	1
  4817   000031                     _i2cWrData:
  4818                           	callstack 0
  4819   000031                     	ds	1
  4820   000032                     _iter:
  4821                           	callstack 0
  4822   000032                     	ds	1
  4823   000033                     _LCD_curser:
  4824                           	callstack 0
  4825   000033                     	ds	1
  4826   000034                     _ret:
  4827                           	callstack 0
  4828   000034                     	ds	1
  4829   000035                     _LDR_Get_Data:
  4830                           	callstack 0
  4831   000035                     	ds	1
  4832   000036                     _pinRC7:
  4833                           	callstack 0
  4834   000036                     	ds	1
  4835   000037                     _pinRC6:
  4836                           	callstack 0
  4837   000037                     	ds	1
  4838   000038                     _NumberPressed:
  4839                           	callstack 0
  4840   000038                     	ds	1
  4841                           
  4842                           	psect	dataCOMRAM
  4843   000051                     __pdataCOMRAM:
  4844                           	callstack 0
  4845   000051                     _RB7_Flag:
  4846                           	callstack 0
  4847   000051                     	ds	1
  4848   000052                     _RB6_Flag:
  4849                           	callstack 0
  4850   000052                     	ds	1
  4851   000053                     _RB5_Flag:
  4852                           	callstack 0
  4853   000053                     	ds	1
  4854   000054                     _RB4_Flag:
  4855                           	callstack 0
  4856   000054                     	ds	1
  4857   000055                     _Dc_Motor_Gate:
  4858                           	callstack 0
  4859   000055                     	ds	2
  4860   000057                     _InDoor_E:
  4861                           	callstack 0
  4862   000057                     	ds	1
  4863   000058                     _GREEN_LED:
  4864                           	callstack 0
  4865   000058                     	ds	1
  4866   000059                     _RED_LED:
  4867                           	callstack 0
  4868   000059                     	ds	1
  4869                           
  4870                           	psect	bssBANK0
  4871   000060                     __pbssBANK0:
  4872                           	callstack 0
  4873   000060                     _currentPassword:
  4874                           	callstack 0
  4875   000060                     	ds	7
  4876   000067                     	ds	6
  4877   00006D                     _USART_OVRR_InterruptHandler:
  4878                           	callstack 0
  4879   00006D                     	ds	2
  4880   00006F                     _USART_FRE_InterruptHandler:
  4881                           	callstack 0
  4882   00006F                     	ds	2
  4883   000071                     _USART_RX_InterruptHandler:
  4884                           	callstack 0
  4885   000071                     	ds	2
  4886   000073                     _USART_TX_InterruptHandler:
  4887                           	callstack 0
  4888   000073                     	ds	2
  4889   000075                     _Timer3_InterruptHandler:
  4890                           	callstack 0
  4891   000075                     	ds	2
  4892   000077                     _Timer2_InterruptHandler:
  4893                           	callstack 0
  4894   000077                     	ds	2
  4895   000079                     _Timer1_InterruptHandler:
  4896                           	callstack 0
  4897   000079                     	ds	2
  4898   00007B                     _Timer0_InterruptHandler:
  4899                           	callstack 0
  4900   00007B                     	ds	2
  4901   00007D                     _SPI_InterruptHandler:
  4902                           	callstack 0
  4903   00007D                     	ds	2
  4904   00007F                     _Interrupt_RB7_Handler_LOW:
  4905                           	callstack 0
  4906   00007F                     	ds	2
  4907   000081                     _Interrupt_RB7_Handler_HIGH:
  4908                           	callstack 0
  4909   000081                     	ds	2
  4910   000083                     _Interrupt_RB6_Handler_LOW:
  4911                           	callstack 0
  4912   000083                     	ds	2
  4913   000085                     _Interrupt_RB6_Handler_HIGH:
  4914                           	callstack 0
  4915   000085                     	ds	2
  4916   000087                     _Interrupt_RB5_Handler_LOW:
  4917                           	callstack 0
  4918   000087                     	ds	2
  4919   000089                     _Interrupt_RB5_Handler_HIGH:
  4920                           	callstack 0
  4921   000089                     	ds	2
  4922   00008B                     _Interrupt_RB4_Handler_LOW:
  4923                           	callstack 0
  4924   00008B                     	ds	2
  4925   00008D                     _Interrupt_RB4_Handler_HIGH:
  4926                           	callstack 0
  4927   00008D                     	ds	2
  4928   00008F                     _Interrupt_INT2_Handler:
  4929                           	callstack 0
  4930   00008F                     	ds	2
  4931   000091                     _Interrupt_INT1_Handler:
  4932                           	callstack 0
  4933   000091                     	ds	2
  4934   000093                     _Interrupt_INT0_Handler:
  4935                           	callstack 0
  4936   000093                     	ds	2
  4937   000095                     _I2C_Report_Receive_OverFlow:
  4938                           	callstack 0
  4939   000095                     	ds	2
  4940   000097                     _CCP1_obj:
  4941                           	callstack 0
  4942   000097                     	ds	11
  4943   0000A2                     _timer1_obj:
  4944                           	callstack 0
  4945   0000A2                     	ds	6
  4946                           
  4947                           	psect	dataBANK0
  4948   0000A8                     __pdataBANK0:
  4949                           	callstack 0
  4950   0000A8                     _btn_value:
  4951                           	callstack 0
  4952   0000A8                     	ds	12
  4953   0000B4                     _correctPassword:
  4954                           	callstack 0
  4955   0000B4                     	ds	7
  4956   0000BB                     _port_registers:
  4957                           	callstack 0
  4958   0000BB                     	ds	5
  4959   0000C0                     _lat_registers:
  4960                           	callstack 0
  4961   0000C0                     	ds	5
  4962   0000C5                     _tris_registers:
  4963                           	callstack 0
  4964   0000C5                     	ds	5
  4965   0000CA                     _keypad_1:
  4966                           	callstack 0
  4967   0000CA                     	ds	7
  4968   0000D1                     _LCD_1:
  4969                           	callstack 0
  4970   0000D1                     	ds	6
  4971                           
  4972                           	psect	cstackBANK0
  4973   0000D7                     __pcstackBANK0:
  4974                           	callstack 0
  4975   0000D7                     ECU_LCD_4Bit_Send_char_Data_Position@rt:
  4976                           	callstack 0
  4977   0000D7                     ECU_LCD_4Bit_Send_String_Data_Postition@rt:
  4978                           	callstack 0
  4979                           
  4980                           ; 1 bytes @ 0x0
  4981   0000D7                     	ds	1
  4982   0000D8                     ??_WrongPassword:
  4983                           
  4984                           ; 1 bytes @ 0x1
  4985   0000D8                     	ds	2
  4986   0000DA                     ??_main:
  4987                           
  4988                           ; 1 bytes @ 0x3
  4989   0000DA                     	ds	2
  4990                           
  4991                           	psect	cstackCOMRAM
  4992   000039                     __pcstackCOMRAM:
  4993                           	callstack 0
  4994   000039                     I2C_SlaveSendTxData@data:
  4995                           	callstack 0
  4996   000039                     
  4997                           ; 1 bytes @ 0x0
  4998   000039                     	ds	1
  4999   00003A                     ??_I2C_Isr:
  5000   00003A                     
  5001                           ; 1 bytes @ 0x1
  5002   00003A                     	ds	2
  5003   00003C                     ??_INTERRUPT_InterruptManagerHigh:
  5004                           
  5005                           ; 1 bytes @ 0x3
  5006   00003C                     	ds	2
  5007   00003E                     I2C_SlaveSetSlaveAddr@slaveAddr:
  5008                           	callstack 0
  5009   00003E                     I2C_SlaveSetSlaveMask@maskAddr:
  5010                           	callstack 0
  5011   00003E                     gpio_pin_direction_initialize@pinConfig:
  5012                           	callstack 0
  5013   00003E                     gpio_pin_write_logic@pinConfig:
  5014                           	callstack 0
  5015   00003E                     gpio_pin_read_logic@pinConfig:
  5016                           	callstack 0
  5017   00003E                     I2C_SlaveSetIsrHandler@handler:
  5018                           	callstack 0
  5019   00003E                     I2C_SlaveSetReadIntHandler@handler:
  5020                           	callstack 0
  5021   00003E                     I2C_SlaveSetWriteIntHandler@handler:
  5022                           	callstack 0
  5023   00003E                     I2C_SlaveSetAddrIntHandler@handler:
  5024                           	callstack 0
  5025   00003E                     I2C_SlaveSetWrColIntHandler@handler:
  5026                           	callstack 0
  5027   00003E                     I2C_SlaveSetBusColIntHandler@handler:
  5028                           	callstack 0
  5029   00003E                     
  5030                           ; 1 bytes @ 0x5
  5031   00003E                     	ds	1
  5032   00003F                     gpio_pin_write_logic@logic:
  5033                           	callstack 0
  5034   00003F                     gpio_pin_read_logic@logic:
  5035                           	callstack 0
  5036   00003F                     ??_gpio_pin_direction_initialize:
  5037                           
  5038                           ; 1 bytes @ 0x6
  5039   00003F                     	ds	1
  5040   000040                     ??_gpio_pin_write_logic:
  5041   000040                     ??_gpio_pin_read_logic:
  5042                           
  5043                           ; 1 bytes @ 0x7
  5044   000040                     	ds	1
  5045   000041                     gpio_pin_direction_initialize@rt:
  5046                           	callstack 0
  5047                           
  5048                           ; 1 bytes @ 0x8
  5049   000041                     	ds	1
  5050   000042                     gpio_pin_write_logic@rt:
  5051                           	callstack 0
  5052   000042                     gpio_pin_read_logic@rt:
  5053                           	callstack 0
  5054   000042                     LED_init@led_config:
  5055                           	callstack 0
  5056                           
  5057                           ; 1 bytes @ 0x9
  5058   000042                     	ds	1
  5059   000043                     gpio_pin_initialize@pinConfig:
  5060                           	callstack 0
  5061   000043                     ECU_DC_Motor_move_right@_dc_motor:
  5062                           	callstack 0
  5063   000043                     ECU_DC_Motor_stop@_dc_motor:
  5064                           	callstack 0
  5065   000043                     keyPad_Read@keypad:
  5066                           	callstack 0
  5067   000043                     LCD_Send_4Bits@_LCD:
  5068                           	callstack 0
  5069   000043                     LCD_4Bits_Send_Enable_Signal@_LCD:
  5070                           	callstack 0
  5071   000043                     LED_turnON@led_config:
  5072                           	callstack 0
  5073   000043                     LED_turnOFF@led_config:
  5074                           	callstack 0
  5075   000043                     ??_LED_init:
  5076                           
  5077                           ; 1 bytes @ 0xA
  5078   000043                     	ds	1
  5079   000044                     ECU_DC_Motor_move_right@rt:
  5080                           	callstack 0
  5081   000044                     ECU_DC_Motor_stop@rt:
  5082                           	callstack 0
  5083   000044                     keyPad_Read@keypad_value:
  5084                           	callstack 0
  5085   000044                     LCD_Send_4Bits@_Data:
  5086                           	callstack 0
  5087   000044                     LCD_4Bits_Send_Enable_Signal@rt:
  5088                           	callstack 0
  5089   000044                     LED_init@rt:
  5090                           	callstack 0
  5091   000044                     ??_LED_turnON:
  5092   000044                     ??_LED_turnOFF:
  5093   000044                     ??_gpio_pin_initialize:
  5094   000044                     
  5095                           ; 1 bytes @ 0xB
  5096   000044                     	ds	1
  5097   000045                     gpio_pin_initialize@rt:
  5098                           	callstack 0
  5099   000045                     keyPad_Read@rt:
  5100                           	callstack 0
  5101   000045                     LCD_Send_4Bits@rt:
  5102                           	callstack 0
  5103   000045                     LED_init@LED:
  5104                           	callstack 0
  5105   000045                     LED_turnON@rt:
  5106                           	callstack 0
  5107   000045                     LED_turnOFF@rt:
  5108                           	callstack 0
  5109   000045                     
  5110                           ; 1 bytes @ 0xC
  5111   000045                     	ds	1
  5112   000046                     ECU_DC_Motor_initialize@_dc_motor:
  5113                           	callstack 0
  5114   000046                     keyPad_Initialize@keypad:
  5115                           	callstack 0
  5116   000046                     keyPad_Read@l_counter:
  5117                           	callstack 0
  5118   000046                     ECU_LCD_4Bit_Send_Command@_LCD:
  5119                           	callstack 0
  5120   000046                     ECU_LCD_4Bit_Send_char_Data@_LCD:
  5121                           	callstack 0
  5122   000046                     LED_turnON@LED:
  5123                           	callstack 0
  5124   000046                     LED_turnOFF@LED:
  5125                           	callstack 0
  5126                           
  5127                           ; 1 bytes @ 0xD
  5128   000046                     	ds	1
  5129   000047                     ECU_DC_Motor_initialize@rt:
  5130                           	callstack 0
  5131   000047                     keyPad_Initialize@rt:
  5132                           	callstack 0
  5133   000047                     keyPad_Read@coloumn_logic:
  5134                           	callstack 0
  5135   000047                     ECU_LCD_4Bit_Send_Command@_Command:
  5136                           	callstack 0
  5137   000047                     ECU_LCD_4Bit_Send_char_Data@_Data:
  5138                           	callstack 0
  5139   000047                     
  5140                           ; 1 bytes @ 0xE
  5141   000047                     	ds	1
  5142   000048                     keyPad_Initialize@l_rows_counter:
  5143                           	callstack 0
  5144   000048                     keyPad_Read@l_rows_counter:
  5145                           	callstack 0
  5146   000048                     ECU_LCD_4Bit_Send_Command@rt:
  5147                           	callstack 0
  5148   000048                     ECU_LCD_4Bit_Send_char_Data@rt:
  5149                           	callstack 0
  5150   000048                     
  5151                           ; 1 bytes @ 0xF
  5152   000048                     	ds	1
  5153   000049                     keyPad_Initialize@l_coloums_counter:
  5154                           	callstack 0
  5155   000049                     keyPad_Read@l_coloumns_counter:
  5156                           	callstack 0
  5157   000049                     ECU_LCD_4Bit_Initialize@_LCD:
  5158                           	callstack 0
  5159   000049                     LCD_4Bits_Set_Curser@_LCD:
  5160                           	callstack 0
  5161                           
  5162                           ; 1 bytes @ 0x10
  5163   000049                     	ds	1
  5164   00004A                     LCD_4Bits_Set_Curser@row:
  5165                           	callstack 0
  5166   00004A                     ??_ECU_LCD_4Bit_Initialize:
  5167                           
  5168                           ; 1 bytes @ 0x11
  5169   00004A                     	ds	1
  5170   00004B                     ECU_LCD_4Bit_Initialize@LCD_Counter:
  5171                           	callstack 0
  5172   00004B                     LCD_4Bits_Set_Curser@coloumn:
  5173                           	callstack 0
  5174                           
  5175                           ; 1 bytes @ 0x12
  5176   00004B                     	ds	1
  5177   00004C                     ECU_LCD_4Bit_Initialize@rt:
  5178                           	callstack 0
  5179   00004C                     LCD_4Bits_Set_Curser@rt:
  5180                           	callstack 0
  5181   00004C                     
  5182                           ; 1 bytes @ 0x13
  5183   00004C                     	ds	1
  5184   00004D                     ECU_LCD_4Bit_Send_char_Data_Position@_LCD:
  5185                           	callstack 0
  5186   00004D                     ECU_LCD_4Bit_Send_String_Data_Postition@_LCD:
  5187                           	callstack 0
  5188                           
  5189                           ; 1 bytes @ 0x14
  5190   00004D                     	ds	1
  5191   00004E                     ECU_LCD_4Bit_Send_char_Data_Position@_Row:
  5192                           	callstack 0
  5193   00004E                     ECU_LCD_4Bit_Send_String_Data_Postition@_Row:
  5194                           	callstack 0
  5195                           
  5196                           ; 1 bytes @ 0x15
  5197   00004E                     	ds	1
  5198   00004F                     ECU_LCD_4Bit_Send_char_Data_Position@_Coloumn:
  5199                           	callstack 0
  5200   00004F                     ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn:
  5201                           	callstack 0
  5202                           
  5203                           ; 1 bytes @ 0x16
  5204   00004F                     	ds	1
  5205   000050                     ECU_LCD_4Bit_Send_char_Data_Position@_Data:
  5206                           	callstack 0
  5207   000050                     ECU_LCD_4Bit_Send_String_Data_Postition@_Str:
  5208                           	callstack 0
  5209                           
  5210                           ; 1 bytes @ 0x17
  5211   000050                     	ds	1
  5212   000051                     
  5213                           ; 1 bytes @ 0x18
  5214 ;;
  5215 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5216 ;;
  5217 ;; *************** function _main *****************
  5218 ;; Defined at:
  5219 ;;		line 158 in file "main.c"
  5220 ;; Parameters:    Size  Location     Type
  5221 ;;		None
  5222 ;; Auto vars:     Size  Location     Type
  5223 ;;		None
  5224 ;; Return value:  Size  Location     Type
  5225 ;;                  1    wreg      void 
  5226 ;; Registers used:
  5227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5228 ;; Tracked objects:
  5229 ;;		On entry : 0/0
  5230 ;;		On exit  : 0/0
  5231 ;;		Unchanged: 0/0
  5232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5235 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5236 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5237 ;;Total ram usage:        2 bytes
  5238 ;; Hardware stack levels required when called: 11
  5239 ;; This function calls:
  5240 ;;		_ECU_DC_Motor_initialize
  5241 ;;		_ECU_DC_Motor_move_right
  5242 ;;		_ECU_DC_Motor_stop
  5243 ;;		_ECU_LCD_4Bit_Initialize
  5244 ;;		_ECU_LCD_4Bit_Send_Command
  5245 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
  5246 ;;		_ECU_LCD_4Bit_Send_char_Data_Position
  5247 ;;		_I2C_Open
  5248 ;;		_I2C_SlaveSetReadIntHandler
  5249 ;;		_LED_init
  5250 ;;		_LED_turnOFF
  5251 ;;		_LED_turnON
  5252 ;;		_SYSTEM_Initialize
  5253 ;;		_WrongPassword
  5254 ;;		_gpio_pin_initialize
  5255 ;;		_gpio_pin_write_logic
  5256 ;;		_keyPad_Initialize
  5257 ;;		_keyPad_Read
  5258 ;; This function is called by:
  5259 ;;		Startup code after reset
  5260 ;; This function uses a non-reentrant model
  5261 ;;
  5262                           
  5263                           	psect	text0
  5264   00155C                     __ptext0:
  5265                           	callstack 0
  5266   00155C                     _main:
  5267                           	callstack 20
  5268   00155C                     
  5269                           ;main.c: 161:     SYSTEM_Initialize();
  5270   00155C  EC0E  F012         	call	_SYSTEM_Initialize	;wreg free
  5271   001560                     
  5272                           ;main.c: 168:     (INTCONbits.GIEH = 1);
  5273   001560  8EF2               	bsf	242,7,c	;volatile
  5274   001562                     
  5275                           ;main.c: 171:     (INTCONbits.GIEL = 1);
  5276   001562  8CF2               	bsf	242,6,c	;volatile
  5277   001564                     
  5278                           ;main.c: 180:     (INTCONbits.PEIE = 1);
  5279   001564  8CF2               	bsf	242,6,c	;volatile
  5280                           
  5281                           ;main.c: 186:     I2C_Open();
  5282   001566  EC30  F010         	call	_I2C_Open	;wreg free
  5283                           
  5284                           ;main.c: 187:     I2C_SlaveSetReadIntHandler(I2C_DefaultInterruptHandler);
  5285   00156A  0EC2               	movlw	low _I2C_DefaultInterruptHandler
  5286   00156C  6E3E               	movwf	I2C_SlaveSetReadIntHandler@handler^0,c
  5287   00156E  0E24               	movlw	high _I2C_DefaultInterruptHandler
  5288   001570  6E3F               	movwf	(I2C_SlaveSetReadIntHandler@handler+1)^0,c
  5289   001572  EC28  F012         	call	_I2C_SlaveSetReadIntHandler	;wreg free
  5290   001576                     
  5291                           ;main.c: 189:     ret = ECU_LCD_4Bit_Initialize(&LCD_1);
  5292   001576  0ED1               	movlw	low _LCD_1
  5293   001578  6E49               	movwf	ECU_LCD_4Bit_Initialize@_LCD^0,c
  5294   00157A  EC12  F00D         	call	_ECU_LCD_4Bit_Initialize	;wreg free
  5295   00157E  6E34               	movwf	_ret^0,c
  5296   001580                     
  5297                           ;main.c: 190:     ret = keyPad_Initialize(&keypad_1);
  5298   001580  0ECA               	movlw	low _keypad_1
  5299   001582  6E46               	movwf	keyPad_Initialize@keypad^0,c
  5300   001584  EC00  F010         	call	_keyPad_Initialize	;wreg free
  5301   001588  6E34               	movwf	_ret^0,c
  5302   00158A                     
  5303                           ;main.c: 191:     ret = ECU_DC_Motor_initialize(&Dc_Motor_Gate);
  5304   00158A  0E55               	movlw	low _Dc_Motor_Gate
  5305   00158C  6E46               	movwf	ECU_DC_Motor_initialize@_dc_motor^0,c
  5306   00158E  EC6E  F011         	call	_ECU_DC_Motor_initialize	;wreg free
  5307   001592  6E34               	movwf	_ret^0,c
  5308   001594                     
  5309                           ;main.c: 192:     ret = LED_init(&RED_LED);
  5310   001594  0E59               	movlw	low _RED_LED
  5311   001596  6E42               	movwf	LED_init@led_config^0,c
  5312   001598  EC92  F00E         	call	_LED_init	;wreg free
  5313   00159C  6E34               	movwf	_ret^0,c
  5314   00159E                     
  5315                           ;main.c: 193:     ret = LED_init(&GREEN_LED);
  5316   00159E  0E58               	movlw	low _GREEN_LED
  5317   0015A0  6E42               	movwf	LED_init@led_config^0,c
  5318   0015A2  EC92  F00E         	call	_LED_init	;wreg free
  5319   0015A6  6E34               	movwf	_ret^0,c
  5320   0015A8                     
  5321                           ;main.c: 194:     ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1, 1, 3, "Enter the
      +                           password");
  5322   0015A8  0ED1               	movlw	low _LCD_1
  5323   0015AA  6E4D               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD^0,c
  5324   0015AC  0E01               	movlw	1
  5325   0015AE  6E4E               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Row^0,c
  5326   0015B0  0E03               	movlw	3
  5327   0015B2  6E4F               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn^0,c
  5328   0015B4  0E01               	movlw	low STR_2
  5329   0015B6  6E50               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str^0,c
  5330   0015B8  EC2F  F00F         	call	_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
  5331   0015BC  6E34               	movwf	_ret^0,c
  5332   0015BE                     
  5333                           ;main.c: 196:     ret = gpio_pin_initialize(&InDoor_E);
  5334   0015BE  0E57               	movlw	low _InDoor_E
  5335   0015C0  6E43               	movwf	gpio_pin_initialize@pinConfig^0,c
  5336   0015C2  ECB9  F010         	call	_gpio_pin_initialize	;wreg free
  5337   0015C6  6E34               	movwf	_ret^0,c
  5338   0015C8                     l9564:
  5339                           
  5340                           ;main.c: 199:     {;main.c: 200:         NumberPressed = '\0';
  5341   0015C8  6A38               	clrf	_NumberPressed^0,c
  5342                           
  5343                           ;main.c: 201:         while(NumberPressed == '\0'){
  5344   0015CA  EF10  F00B         	goto	l9576
  5345   0015CE                     l9566:
  5346                           
  5347                           ;main.c: 202:             ret = keyPad_Read(&keypad_1, &NumberPressed);
  5348   0015CE  0ECA               	movlw	low _keypad_1
  5349   0015D0  6E43               	movwf	keyPad_Read@keypad^0,c
  5350   0015D2  0E38               	movlw	low _NumberPressed
  5351   0015D4  6E44               	movwf	keyPad_Read@keypad_value^0,c
  5352   0015D6  EC86  F00D         	call	_keyPad_Read	;wreg free
  5353   0015DA  6E34               	movwf	_ret^0,c
  5354   0015DC                     
  5355                           ;main.c: 204:             if(130 <= LDR_Get_Data){
  5356   0015DC  0E81               	movlw	129
  5357   0015DE  6435               	cpfsgt	_LDR_Get_Data^0,c	;volatile
  5358   0015E0  EFF4  F00A         	goto	u7451
  5359   0015E4  EFF6  F00A         	goto	u7450
  5360   0015E8                     u7451:
  5361   0015E8  EFFF  F00A         	goto	l9572
  5362   0015EC                     u7450:
  5363   0015EC                     
  5364                           ;main.c: 205:                 ret = gpio_pin_write_logic(&InDoor_E, GPIO_Pin_Logic_LOW);
  5365   0015EC  0E57               	movlw	low _InDoor_E
  5366   0015EE  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  5367   0015F0  0E00               	movlw	0
  5368   0015F2  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  5369   0015F4  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  5370   0015F8  6E34               	movwf	_ret^0,c
  5371                           
  5372                           ;main.c: 206:             }
  5373   0015FA  EF10  F00B         	goto	l9576
  5374   0015FE                     l9572:
  5375   0015FE  0E82               	movlw	130
  5376   001600  6035               	cpfslt	_LDR_Get_Data^0,c	;volatile
  5377   001602  EF05  F00B         	goto	u7461
  5378   001606  EF07  F00B         	goto	u7460
  5379   00160A                     u7461:
  5380   00160A  EF10  F00B         	goto	l162
  5381   00160E                     u7460:
  5382   00160E                     
  5383                           ;main.c: 208:                 ret = gpio_pin_write_logic(&InDoor_E, GPIO_Pin_Logic_HIGH)
      +                          ;
  5384   00160E  0E57               	movlw	low _InDoor_E
  5385   001610  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  5386   001612  0E01               	movlw	1
  5387   001614  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  5388   001616  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  5389   00161A  6E34               	movwf	_ret^0,c
  5390                           
  5391                           ;main.c: 209:             }
  5392   00161C  EF10  F00B         	goto	l9576
  5393   001620                     l162:
  5394   001620                     l9576:
  5395                           
  5396                           ;main.c: 201:         while(NumberPressed == '\0'){
  5397   001620  5038               	movf	_NumberPressed^0,w,c
  5398   001622  B4D8               	btfsc	status,2,c
  5399   001624  EF16  F00B         	goto	u7471
  5400   001628  EF18  F00B         	goto	u7470
  5401   00162C                     u7471:
  5402   00162C  EFE7  F00A         	goto	l9566
  5403   001630                     u7470:
  5404   001630  EF69  F00B         	goto	l9598
  5405   001634                     l9578:
  5406                           
  5407                           ;main.c: 214:             if(130 <= LDR_Get_Data){
  5408   001634  0E81               	movlw	129
  5409   001636  6435               	cpfsgt	_LDR_Get_Data^0,c	;volatile
  5410   001638  EF20  F00B         	goto	u7481
  5411   00163C  EF22  F00B         	goto	u7480
  5412   001640                     u7481:
  5413   001640  EF2B  F00B         	goto	l9582
  5414   001644                     u7480:
  5415   001644                     
  5416                           ;main.c: 215:                 ret = gpio_pin_write_logic(&InDoor_E, GPIO_Pin_Logic_LOW);
  5417   001644  0E57               	movlw	low _InDoor_E
  5418   001646  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  5419   001648  0E00               	movlw	0
  5420   00164A  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  5421   00164C  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  5422   001650  6E34               	movwf	_ret^0,c
  5423                           
  5424                           ;main.c: 216:             }
  5425   001652  EF3A  F00B         	goto	l9586
  5426   001656                     l9582:
  5427   001656  0E82               	movlw	130
  5428   001658  6035               	cpfslt	_LDR_Get_Data^0,c	;volatile
  5429   00165A  EF31  F00B         	goto	u7491
  5430   00165E  EF33  F00B         	goto	u7490
  5431   001662                     u7491:
  5432   001662  EF3A  F00B         	goto	l9586
  5433   001666                     u7490:
  5434   001666                     
  5435                           ;main.c: 218:                 ret = gpio_pin_write_logic(&InDoor_E, GPIO_Pin_Logic_HIGH)
      +                          ;
  5436   001666  0E57               	movlw	low _InDoor_E
  5437   001668  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  5438   00166A  0E01               	movlw	1
  5439   00166C  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  5440   00166E  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  5441   001672  6E34               	movwf	_ret^0,c
  5442   001674                     l9586:
  5443                           
  5444                           ;main.c: 221:             _delay((unsigned long)((550)*(8000000/4000.0)));
  5445   001674  0E06               	movlw	6
  5446   001676  0100               	movlb	0	; () banked
  5447   001678  6FDB               	movwf	(??_main+1)& (0+255),b
  5448   00167A  0E95               	movlw	149
  5449   00167C  6FDA               	movwf	??_main& (0+255),b
  5450   00167E  0E8C               	movlw	140
  5451   001680                     u7827:
  5452   001680  2EE8               	decfsz	wreg,f,c
  5453   001682  D7FE               	bra	u7827
  5454   001684  2FDA               	decfsz	??_main& (0+255),f,b
  5455   001686  D7FC               	bra	u7827
  5456   001688  2FDB               	decfsz	(??_main+1)& (0+255),f,b
  5457   00168A  D7FA               	bra	u7827
  5458   00168C  0000               	nop	
  5459   00168E                     
  5460                           ;main.c: 222:             currentPassword[LCD_curser] = NumberPressed;
  5461   00168E  5033               	movf	_LCD_curser^0,w,c
  5462   001690  0F60               	addlw	low _currentPassword
  5463   001692  6ED9               	movwf	fsr2l,c
  5464   001694  6ADA               	clrf	fsr2h,c
  5465   001696  C038  FFDF         	movff	_NumberPressed,indf2
  5466   00169A                     
  5467                           ;main.c: 223:             ret = ECU_LCD_4Bit_Send_char_Data_Position(&LCD_1, 2, LCD_curs
      +                          er+2, '*');
  5468   00169A  0ED1               	movlw	low _LCD_1
  5469   00169C  6E4D               	movwf	ECU_LCD_4Bit_Send_char_Data_Position@_LCD^0,c
  5470   00169E  0E02               	movlw	2
  5471   0016A0  6E4E               	movwf	ECU_LCD_4Bit_Send_char_Data_Position@_Row^0,c
  5472   0016A2  5033               	movf	_LCD_curser^0,w,c
  5473   0016A4  0F02               	addlw	2
  5474   0016A6  6E4F               	movwf	ECU_LCD_4Bit_Send_char_Data_Position@_Coloumn^0,c
  5475   0016A8  0E2A               	movlw	42
  5476   0016AA  6E50               	movwf	ECU_LCD_4Bit_Send_char_Data_Position@_Data^0,c
  5477   0016AC  ECE2  F010         	call	_ECU_LCD_4Bit_Send_char_Data_Position	;wreg free
  5478   0016B0  6E34               	movwf	_ret^0,c
  5479   0016B2                     
  5480                           ;main.c: 224:             LCD_curser++;
  5481   0016B2  2A33               	incf	_LCD_curser^0,f,c
  5482   0016B4                     
  5483                           ;main.c: 225:             _delay((unsigned long)((250)*(8000000/4000.0)));
  5484   0016B4  0E03               	movlw	3
  5485   0016B6  0100               	movlb	0	; () banked
  5486   0016B8  6FDB               	movwf	(??_main+1)& (0+255),b
  5487   0016BA  0E8A               	movlw	138
  5488   0016BC  6FDA               	movwf	??_main& (0+255),b
  5489   0016BE  0E55               	movlw	85
  5490   0016C0                     u7837:
  5491   0016C0  2EE8               	decfsz	wreg,f,c
  5492   0016C2  D7FE               	bra	u7837
  5493   0016C4  2FDA               	decfsz	??_main& (0+255),f,b
  5494   0016C6  D7FC               	bra	u7837
  5495   0016C8  2FDB               	decfsz	(??_main+1)& (0+255),f,b
  5496   0016CA  D7FA               	bra	u7837
  5497   0016CC  F000 F000          	nop2	
  5498   0016D0                     
  5499                           ;main.c: 226:             NumberPressed = '\0';
  5500   0016D0  6A38               	clrf	_NumberPressed^0,c
  5501   0016D2                     l9598:
  5502                           
  5503                           ;main.c: 212:         while(NumberPressed !='\0'){
  5504   0016D2  5038               	movf	_NumberPressed^0,w,c
  5505   0016D4  A4D8               	btfss	status,2,c
  5506   0016D6  EF6F  F00B         	goto	u7501
  5507   0016DA  EF71  F00B         	goto	u7500
  5508   0016DE                     u7501:
  5509   0016DE  EF1A  F00B         	goto	l9578
  5510   0016E2                     u7500:
  5511   0016E2                     
  5512                           ;main.c: 228:         if(7 == LCD_curser){
  5513   0016E2  0E07               	movlw	7
  5514   0016E4  1833               	xorwf	_LCD_curser^0,w,c
  5515   0016E6  A4D8               	btfss	status,2,c
  5516   0016E8  EF78  F00B         	goto	u7511
  5517   0016EC  EF7A  F00B         	goto	u7510
  5518   0016F0                     u7511:
  5519   0016F0  EFE4  F00A         	goto	l9564
  5520   0016F4                     u7510:
  5521   0016F4                     
  5522                           ;main.c: 229:             ret = ECU_LCD_4Bit_Send_Command(&LCD_1, 0x01);
  5523   0016F4  0ED1               	movlw	low _LCD_1
  5524   0016F6  6E46               	movwf	ECU_LCD_4Bit_Send_Command@_LCD^0,c
  5525   0016F8  0E01               	movlw	1
  5526   0016FA  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  5527   0016FC  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  5528   001700  6E34               	movwf	_ret^0,c
  5529   001702                     
  5530                           ;main.c: 230:             _delay((unsigned long)((10)*(8000000/4000.0)));
  5531   001702  0E1A               	movlw	26
  5532   001704  0100               	movlb	0	; () banked
  5533   001706  6FDA               	movwf	??_main& (0+255),b
  5534   001708  0EF8               	movlw	248
  5535   00170A                     u7847:
  5536   00170A  2EE8               	decfsz	wreg,f,c
  5537   00170C  D7FE               	bra	u7847
  5538   00170E  2FDA               	decfsz	??_main& (0+255),f,b
  5539   001710  D7FC               	bra	u7847
  5540   001712  0000               	nop	
  5541   001714                     
  5542                           ;main.c: 231:             for(iter = 0 ;iter < LCD_curser ; iter++){
  5543   001714  6A32               	clrf	_iter^0,c
  5544   001716  EFA1  F00B         	goto	l9614
  5545   00171A                     l9608:
  5546                           
  5547                           ;main.c: 232:                 if(currentPassword[iter] != correctPassword[iter]){
  5548   00171A  5032               	movf	_iter^0,w,c
  5549   00171C  0FB4               	addlw	low _correctPassword
  5550   00171E  6ED9               	movwf	fsr2l,c
  5551   001720  6ADA               	clrf	fsr2h,c
  5552   001722  5032               	movf	_iter^0,w,c
  5553   001724  0F60               	addlw	low _currentPassword
  5554   001726  6EE1               	movwf	fsr1l,c
  5555   001728  6AE2               	clrf	fsr1h,c
  5556   00172A  50DE               	movf	postinc2,w,c
  5557   00172C  18E6               	xorwf	postinc1,w,c
  5558   00172E  B4D8               	btfsc	status,2,c
  5559   001730  EF9C  F00B         	goto	u7521
  5560   001734  EF9E  F00B         	goto	u7520
  5561   001738                     u7521:
  5562   001738  EFA0  F00B         	goto	l9612
  5563   00173C                     u7520:
  5564   00173C                     
  5565                           ;main.c: 233:                     WrongPassword();
  5566   00173C  EC9D  F00F         	call	_WrongPassword	;wreg free
  5567   001740                     l9612:
  5568                           
  5569                           ;main.c: 235:             }
  5570   001740  2A32               	incf	_iter^0,f,c
  5571   001742                     l9614:
  5572   001742  5033               	movf	_LCD_curser^0,w,c
  5573   001744  5C32               	subwf	_iter^0,w,c
  5574   001746  A0D8               	btfss	status,0,c
  5575   001748  EFA8  F00B         	goto	u7531
  5576   00174C  EFAA  F00B         	goto	u7530
  5577   001750                     u7531:
  5578   001750  EF8D  F00B         	goto	l9608
  5579   001754                     u7530:
  5580   001754                     
  5581                           ;main.c: 237:             ret = LED_turnOFF(&RED_LED);
  5582   001754  0E59               	movlw	low _RED_LED
  5583   001756  6E43               	movwf	LED_turnOFF@led_config^0,c
  5584   001758  EC3D  F00E         	call	_LED_turnOFF	;wreg free
  5585   00175C  6E34               	movwf	_ret^0,c
  5586                           
  5587                           ;main.c: 238:             ret = LED_turnON(&GREEN_LED);
  5588   00175E  0E58               	movlw	low _GREEN_LED
  5589   001760  6E43               	movwf	LED_turnON@led_config^0,c
  5590   001762  ECE8  F00D         	call	_LED_turnON	;wreg free
  5591   001766  6E34               	movwf	_ret^0,c
  5592                           
  5593                           ;main.c: 239:             ret = ECU_DC_Motor_move_right(&Dc_Motor_Gate);
  5594   001768  0E55               	movlw	low _Dc_Motor_Gate
  5595   00176A  6E43               	movwf	ECU_DC_Motor_move_right@_dc_motor^0,c
  5596   00176C  EC3B  F011         	call	_ECU_DC_Motor_move_right	;wreg free
  5597   001770  6E34               	movwf	_ret^0,c
  5598   001772                     
  5599                           ;main.c: 240:             _delay((unsigned long)((1500)*(8000000/4000.0)));
  5600   001772  0E10               	movlw	16
  5601   001774  0100               	movlb	0	; () banked
  5602   001776  6FDB               	movwf	(??_main+1)& (0+255),b
  5603   001778  0E39               	movlw	57
  5604   00177A  6FDA               	movwf	??_main& (0+255),b
  5605   00177C  0E0D               	movlw	13
  5606   00177E                     u7857:
  5607   00177E  2EE8               	decfsz	wreg,f,c
  5608   001780  D7FE               	bra	u7857
  5609   001782  2FDA               	decfsz	??_main& (0+255),f,b
  5610   001784  D7FC               	bra	u7857
  5611   001786  2FDB               	decfsz	(??_main+1)& (0+255),f,b
  5612   001788  D7FA               	bra	u7857
  5613   00178A  F000 F000          	nop2	
  5614   00178E                     
  5615                           ;main.c: 241:             ret = ECU_DC_Motor_stop(&Dc_Motor_Gate);
  5616   00178E  0E55               	movlw	low _Dc_Motor_Gate
  5617   001790  6E43               	movwf	ECU_DC_Motor_stop@_dc_motor^0,c
  5618   001792  EC20  F011         	call	_ECU_DC_Motor_stop	;wreg free
  5619   001796  6E34               	movwf	_ret^0,c
  5620   001798  EFE4  F00A         	goto	l9564
  5621   00179C  EF3B  F000         	goto	start
  5622   0017A0                     __end_of_main:
  5623                           	callstack 0
  5624                           
  5625 ;; *************** function _keyPad_Read *****************
  5626 ;; Defined at:
  5627 ;;		line 39 in file "ECU_layer/KeyPad/ecu_keyPad.c"
  5628 ;; Parameters:    Size  Location     Type
  5629 ;;  keypad          1   10[COMRAM] PTR const struct .
  5630 ;;		 -> keypad_1(7), 
  5631 ;;  keypad_value    1   11[COMRAM] PTR unsigned char 
  5632 ;;		 -> NumberPressed(1), 
  5633 ;; Auto vars:     Size  Location     Type
  5634 ;;  l_coloumns_c    1   16[COMRAM] unsigned char 
  5635 ;;  l_rows_count    1   15[COMRAM] unsigned char 
  5636 ;;  coloumn_logi    1   14[COMRAM] enum E3381
  5637 ;;  l_counter       1   13[COMRAM] unsigned char 
  5638 ;;  rt              1   12[COMRAM] unsigned char 
  5639 ;; Return value:  Size  Location     Type
  5640 ;;                  1    wreg      unsigned char 
  5641 ;; Registers used:
  5642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5643 ;; Tracked objects:
  5644 ;;		On entry : 0/0
  5645 ;;		On exit  : 0/0
  5646 ;;		Unchanged: 0/0
  5647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5648 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5649 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5652 ;;Total ram usage:        7 bytes
  5653 ;; Hardware stack levels used: 1
  5654 ;; Hardware stack levels required when called: 6
  5655 ;; This function calls:
  5656 ;;		_gpio_pin_read_logic
  5657 ;;		_gpio_pin_write_logic
  5658 ;; This function is called by:
  5659 ;;		_main
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text1
  5664   001B0C                     __ptext1:
  5665                           	callstack 0
  5666   001B0C                     _keyPad_Read:
  5667                           	callstack 24
  5668   001B0C                     
  5669                           ;ECU_layer/KeyPad/ecu_keyPad.c: 41:     uint8 l_rows_counter = 0;
  5670   001B0C  6A48               	clrf	keyPad_Read@l_rows_counter^0,c
  5671                           
  5672                           ;ECU_layer/KeyPad/ecu_keyPad.c: 42:     uint8 l_coloumns_counter = 0;
  5673   001B0E  6A49               	clrf	keyPad_Read@l_coloumns_counter^0,c
  5674                           
  5675                           ;ECU_layer/KeyPad/ecu_keyPad.c: 43:     uint8 l_counter = 0;
  5676   001B10  6A46               	clrf	keyPad_Read@l_counter^0,c
  5677   001B12                     
  5678                           ;ECU_layer/KeyPad/ecu_keyPad.c: 44:     logic_t coloumn_logic;;ECU_layer/KeyPad/ecu_keyP
      +                          ad.c: 45:      if(((void*)0) == keypad || ((void*)0) == keypad_value ){
  5679   001B12  5043               	movf	keyPad_Read@keypad^0,w,c
  5680   001B14  B4D8               	btfsc	status,2,c
  5681   001B16  EF8F  F00D         	goto	u7261
  5682   001B1A  EF91  F00D         	goto	u7260
  5683   001B1E                     u7261:
  5684   001B1E  EF99  F00D         	goto	l2068
  5685   001B22                     u7260:
  5686   001B22  5044               	movf	keyPad_Read@keypad_value^0,w,c
  5687   001B24  A4D8               	btfss	status,2,c
  5688   001B26  EF97  F00D         	goto	u7271
  5689   001B2A  EF99  F00D         	goto	u7270
  5690   001B2E                     u7271:
  5691   001B2E  EF9C  F00D         	goto	l2066
  5692   001B32                     u7270:
  5693   001B32                     l2068:
  5694                           
  5695                           ;ECU_layer/KeyPad/ecu_keyPad.c: 46:         rt = (STD_ReturnType)0x00;
  5696   001B32  6A45               	clrf	keyPad_Read@rt^0,c
  5697                           
  5698                           ;ECU_layer/KeyPad/ecu_keyPad.c: 47:     }
  5699   001B34  EFE6  F00D         	goto	l2069
  5700   001B38                     l2066:
  5701                           
  5702                           ;ECU_layer/KeyPad/ecu_keyPad.c: 49:         for(l_rows_counter = 0 ; l_rows_counter < 4 
      +                          ; l_rows_counter++){
  5703   001B38  6A48               	clrf	keyPad_Read@l_rows_counter^0,c
  5704   001B3A                     l2070:
  5705                           
  5706                           ;ECU_layer/KeyPad/ecu_keyPad.c: 50:             for(l_counter = 0 ; l_counter < 4 ; l_co
      +                          unter++){
  5707   001B3A  6A46               	clrf	keyPad_Read@l_counter^0,c
  5708   001B3C                     l9400:
  5709   001B3C  5043               	movf	keyPad_Read@keypad^0,w,c
  5710   001B3E  2446               	addwf	keyPad_Read@l_counter^0,w,c
  5711   001B40  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  5712   001B42  0E00               	movlw	0
  5713   001B44  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  5714   001B46  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  5715   001B4A                     
  5716                           ;ECU_layer/KeyPad/ecu_keyPad.c: 52:             }
  5717   001B4A  2A46               	incf	keyPad_Read@l_counter^0,f,c
  5718   001B4C  0E03               	movlw	3
  5719   001B4E  6446               	cpfsgt	keyPad_Read@l_counter^0,c
  5720   001B50  EFAC  F00D         	goto	u7281
  5721   001B54  EFAE  F00D         	goto	u7280
  5722   001B58                     u7281:
  5723   001B58  EF9E  F00D         	goto	l9400
  5724   001B5C                     u7280:
  5725   001B5C                     
  5726                           ;ECU_layer/KeyPad/ecu_keyPad.c: 53:             gpio_pin_write_logic(&(keypad->KeypadRow
      +                          sConfig[l_rows_counter]), GPIO_Pin_Logic_HIGH );
  5727   001B5C  5043               	movf	keyPad_Read@keypad^0,w,c
  5728   001B5E  2448               	addwf	keyPad_Read@l_rows_counter^0,w,c
  5729   001B60  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  5730   001B62  0E01               	movlw	1
  5731   001B64  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  5732   001B66  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  5733   001B6A                     
  5734                           ;ECU_layer/KeyPad/ecu_keyPad.c: 54:             for(l_coloumns_counter = 0 ; l_coloumns_
      +                          counter < 3 ; l_coloumns_counter++){
  5735   001B6A  6A49               	clrf	keyPad_Read@l_coloumns_counter^0,c
  5736   001B6C                     l9414:
  5737   001B6C  5043               	movf	keyPad_Read@keypad^0,w,c
  5738   001B6E  2449               	addwf	keyPad_Read@l_coloumns_counter^0,w,c
  5739   001B70  0F04               	addlw	4
  5740   001B72  6E3E               	movwf	gpio_pin_read_logic@pinConfig^0,c
  5741   001B74  0E47               	movlw	low keyPad_Read@coloumn_logic
  5742   001B76  6E3F               	movwf	gpio_pin_read_logic@logic^0,c
  5743   001B78  ECD0  F00B         	call	_gpio_pin_read_logic	;wreg free
  5744   001B7C                     
  5745                           ;ECU_layer/KeyPad/ecu_keyPad.c: 56:                if(coloumn_logic == GPIO_Pin_Logic_HI
      +                          GH ){
  5746   001B7C  0447               	decf	keyPad_Read@coloumn_logic^0,w,c
  5747   001B7E  A4D8               	btfss	status,2,c
  5748   001B80  EFC4  F00D         	goto	u7291
  5749   001B84  EFC6  F00D         	goto	u7290
  5750   001B88                     u7291:
  5751   001B88  EFD2  F00D         	goto	l9420
  5752   001B8C                     u7290:
  5753   001B8C                     
  5754                           ;ECU_layer/KeyPad/ecu_keyPad.c: 57:                    *keypad_value = btn_value[l_rows_
      +                          counter][l_coloumns_counter];
  5755   001B8C  5048               	movf	keyPad_Read@l_rows_counter^0,w,c
  5756   001B8E  0D03               	mullw	3
  5757   001B90  50F3               	movf	243,w,c
  5758   001B92  0FA8               	addlw	low _btn_value
  5759   001B94  2449               	addwf	keyPad_Read@l_coloumns_counter^0,w,c
  5760   001B96  6ED9               	movwf	fsr2l,c
  5761   001B98  6ADA               	clrf	fsr2h,c
  5762   001B9A  5044               	movf	keyPad_Read@keypad_value^0,w,c
  5763   001B9C  6EE1               	movwf	fsr1l,c
  5764   001B9E  6AE2               	clrf	fsr1h,c
  5765   001BA0  CFDF FFE7          	movff	indf2,indf1
  5766   001BA4                     l9420:
  5767                           
  5768                           ;ECU_layer/KeyPad/ecu_keyPad.c: 60:             }
  5769   001BA4  2A49               	incf	keyPad_Read@l_coloumns_counter^0,f,c
  5770   001BA6  0E02               	movlw	2
  5771   001BA8  6449               	cpfsgt	keyPad_Read@l_coloumns_counter^0,c
  5772   001BAA  EFD9  F00D         	goto	u7301
  5773   001BAE  EFDB  F00D         	goto	u7300
  5774   001BB2                     u7301:
  5775   001BB2  EFB6  F00D         	goto	l9414
  5776   001BB6                     u7300:
  5777   001BB6                     
  5778                           ;ECU_layer/KeyPad/ecu_keyPad.c: 61:         }
  5779   001BB6  2A48               	incf	keyPad_Read@l_rows_counter^0,f,c
  5780   001BB8  0E03               	movlw	3
  5781   001BBA  6448               	cpfsgt	keyPad_Read@l_rows_counter^0,c
  5782   001BBC  EFE2  F00D         	goto	u7311
  5783   001BC0  EFE4  F00D         	goto	u7310
  5784   001BC4                     u7311:
  5785   001BC4  EF9D  F00D         	goto	l2070
  5786   001BC8                     u7310:
  5787   001BC8                     
  5788                           ;ECU_layer/KeyPad/ecu_keyPad.c: 62:         rt = (STD_ReturnType)0x01;
  5789   001BC8  0E01               	movlw	1
  5790   001BCA  6E45               	movwf	keyPad_Read@rt^0,c
  5791   001BCC                     l2069:
  5792                           
  5793                           ;ECU_layer/KeyPad/ecu_keyPad.c: 64:     return rt;
  5794   001BCC  5045               	movf	keyPad_Read@rt^0,w,c
  5795   001BCE  0012               	return		;funcret
  5796   001BD0                     __end_of_keyPad_Read:
  5797                           	callstack 0
  5798                           
  5799 ;; *************** function _gpio_pin_read_logic *****************
  5800 ;; Defined at:
  5801 ;;		line 139 in file "MCAL_layer/GPIO/hal_gpio.c"
  5802 ;; Parameters:    Size  Location     Type
  5803 ;;  pinConfig       1    5[COMRAM] PTR const struct .
  5804 ;;		 -> keypad_1$KeypadColoumnsConfig(3), keypad_1(7), 
  5805 ;;  logic           1    6[COMRAM] PTR enum E3381
  5806 ;;		 -> ECU_Button_Read@Get_buuton_logic(1), keyPad_Read@coloumn_logic(1), 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  rt              1    9[COMRAM] unsigned char 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      unsigned char 
  5811 ;; Registers used:
  5812 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5818 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5820 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;Total ram usage:        5 bytes
  5823 ;; Hardware stack levels used: 1
  5824 ;; Hardware stack levels required when called: 5
  5825 ;; This function calls:
  5826 ;;		Nothing
  5827 ;; This function is called by:
  5828 ;;		_keyPad_Read
  5829 ;;		_ECU_Button_Read
  5830 ;; This function uses a non-reentrant model
  5831 ;;
  5832                           
  5833                           	psect	text2
  5834   0017A0                     __ptext2:
  5835                           	callstack 0
  5836   0017A0                     _gpio_pin_read_logic:
  5837                           	callstack 24
  5838   0017A0                     
  5839                           ;MCAL_layer/GPIO/hal_gpio.c: 140:     STD_ReturnType rt = (STD_ReturnType)0x01;
  5840   0017A0  0E01               	movlw	1
  5841   0017A2  6E42               	movwf	gpio_pin_read_logic@rt^0,c
  5842                           
  5843                           ;MCAL_layer/GPIO/hal_gpio.c: 141:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 
      +                          -1 || ((void*)0) == logic ){
  5844   0017A4  503E               	movf	gpio_pin_read_logic@pinConfig^0,w,c
  5845   0017A6  B4D8               	btfsc	status,2,c
  5846   0017A8  EFD8  F00B         	goto	u4271
  5847   0017AC  EFDA  F00B         	goto	u4270
  5848   0017B0                     u4271:
  5849   0017B0  EFF2  F00B         	goto	l871
  5850   0017B4                     u4270:
  5851   0017B4  503E               	movf	gpio_pin_read_logic@pinConfig^0,w,c
  5852   0017B6  6ED9               	movwf	fsr2l,c
  5853   0017B8  6ADA               	clrf	fsr2h,c
  5854   0017BA  30DF               	rrcf	223,w,c
  5855   0017BC  32E8               	rrcf	wreg,f,c
  5856   0017BE  32E8               	rrcf	wreg,f,c
  5857   0017C0  0B07               	andlw	7
  5858   0017C2  6E40               	movwf	??_gpio_pin_read_logic^0,c
  5859   0017C4  0E08               	movlw	8
  5860   0017C6  6040               	cpfslt	??_gpio_pin_read_logic^0,c
  5861   0017C8  EFE8  F00B         	goto	u4281
  5862   0017CC  EFEA  F00B         	goto	u4280
  5863   0017D0                     u4281:
  5864   0017D0  EFF2  F00B         	goto	l871
  5865   0017D4                     u4280:
  5866   0017D4  503F               	movf	gpio_pin_read_logic@logic^0,w,c
  5867   0017D6  A4D8               	btfss	status,2,c
  5868   0017D8  EFF0  F00B         	goto	u4291
  5869   0017DC  EFF2  F00B         	goto	u4290
  5870   0017E0                     u4291:
  5871   0017E0  EF77  F00C         	goto	l6788
  5872   0017E4                     u4290:
  5873   0017E4                     l871:
  5874                           
  5875                           ;MCAL_layer/GPIO/hal_gpio.c: 142:         rt = (STD_ReturnType)0x00;
  5876   0017E4  6A42               	clrf	gpio_pin_read_logic@rt^0,c
  5877                           
  5878                           ;MCAL_layer/GPIO/hal_gpio.c: 143:     }
  5879   0017E6  EF92  F00C         	goto	l6790
  5880   0017EA                     l6778:
  5881                           
  5882                           ;MCAL_layer/GPIO/hal_gpio.c: 147:                         *logic = ((PORTA >> pinConfig-
      +                          >pin)&1);break;
  5883   0017EA  503F               	movf	gpio_pin_read_logic@logic^0,w,c
  5884   0017EC  6ED9               	movwf	fsr2l,c
  5885   0017EE  6ADA               	clrf	fsr2h,c
  5886   0017F0  503E               	movf	gpio_pin_read_logic@pinConfig^0,w,c
  5887   0017F2  6EE1               	movwf	fsr1l,c
  5888   0017F4  6AE2               	clrf	fsr1h,c
  5889   0017F6  30E7               	rrcf	231,w,c
  5890   0017F8  32E8               	rrcf	wreg,f,c
  5891   0017FA  32E8               	rrcf	wreg,f,c
  5892   0017FC  0B07               	andlw	7
  5893   0017FE  6E40               	movwf	??_gpio_pin_read_logic^0,c
  5894   001800  CF80 F041          	movff	3968,??_gpio_pin_read_logic+1	;volatile
  5895   001804  2A40               	incf	??_gpio_pin_read_logic^0,f,c
  5896   001806  EF07  F00C         	goto	u4304
  5897   00180A                     u4305:
  5898   00180A  90D8               	bcf	status,0,c
  5899   00180C  3241               	rrcf	(??_gpio_pin_read_logic+1)^0,f,c
  5900   00180E                     u4304:
  5901   00180E  2E40               	decfsz	??_gpio_pin_read_logic^0,f,c
  5902   001810  EF05  F00C         	goto	u4305
  5903   001814  5041               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  5904   001816  0B01               	andlw	1
  5905   001818  6EDF               	movwf	indf2,c
  5906   00181A  EF92  F00C         	goto	l6790
  5907   00181E                     l6780:
  5908                           
  5909                           ;MCAL_layer/GPIO/hal_gpio.c: 149:                         *logic = ((PORTB >> pinConfig-
      +                          >pin)&1);break;
  5910   00181E  503F               	movf	gpio_pin_read_logic@logic^0,w,c
  5911   001820  6ED9               	movwf	fsr2l,c
  5912   001822  6ADA               	clrf	fsr2h,c
  5913   001824  503E               	movf	gpio_pin_read_logic@pinConfig^0,w,c
  5914   001826  6EE1               	movwf	fsr1l,c
  5915   001828  6AE2               	clrf	fsr1h,c
  5916   00182A  30E7               	rrcf	231,w,c
  5917   00182C  32E8               	rrcf	wreg,f,c
  5918   00182E  32E8               	rrcf	wreg,f,c
  5919   001830  0B07               	andlw	7
  5920   001832  6E40               	movwf	??_gpio_pin_read_logic^0,c
  5921   001834  CF81 F041          	movff	3969,??_gpio_pin_read_logic+1	;volatile
  5922   001838  2A40               	incf	??_gpio_pin_read_logic^0,f,c
  5923   00183A  EF21  F00C         	goto	u4314
  5924   00183E                     u4315:
  5925   00183E  90D8               	bcf	status,0,c
  5926   001840  3241               	rrcf	(??_gpio_pin_read_logic+1)^0,f,c
  5927   001842                     u4314:
  5928   001842  2E40               	decfsz	??_gpio_pin_read_logic^0,f,c
  5929   001844  EF1F  F00C         	goto	u4315
  5930   001848  5041               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  5931   00184A  0B01               	andlw	1
  5932   00184C  6EDF               	movwf	indf2,c
  5933   00184E  EF92  F00C         	goto	l6790
  5934   001852                     l6782:
  5935                           
  5936                           ;MCAL_layer/GPIO/hal_gpio.c: 151:                         *logic = ((PORTC >> pinConfig-
      +                          >pin)&1);break;
  5937   001852  503F               	movf	gpio_pin_read_logic@logic^0,w,c
  5938   001854  6ED9               	movwf	fsr2l,c
  5939   001856  6ADA               	clrf	fsr2h,c
  5940   001858  503E               	movf	gpio_pin_read_logic@pinConfig^0,w,c
  5941   00185A  6EE1               	movwf	fsr1l,c
  5942   00185C  6AE2               	clrf	fsr1h,c
  5943   00185E  30E7               	rrcf	231,w,c
  5944   001860  32E8               	rrcf	wreg,f,c
  5945   001862  32E8               	rrcf	wreg,f,c
  5946   001864  0B07               	andlw	7
  5947   001866  6E40               	movwf	??_gpio_pin_read_logic^0,c
  5948   001868  CF82 F041          	movff	3970,??_gpio_pin_read_logic+1	;volatile
  5949   00186C  2A40               	incf	??_gpio_pin_read_logic^0,f,c
  5950   00186E  EF3B  F00C         	goto	u4324
  5951   001872                     u4325:
  5952   001872  90D8               	bcf	status,0,c
  5953   001874  3241               	rrcf	(??_gpio_pin_read_logic+1)^0,f,c
  5954   001876                     u4324:
  5955   001876  2E40               	decfsz	??_gpio_pin_read_logic^0,f,c
  5956   001878  EF39  F00C         	goto	u4325
  5957   00187C  5041               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  5958   00187E  0B01               	andlw	1
  5959   001880  6EDF               	movwf	indf2,c
  5960   001882  EF92  F00C         	goto	l6790
  5961   001886                     l6784:
  5962                           
  5963                           ;MCAL_layer/GPIO/hal_gpio.c: 153:                         *logic = ((PORTD >> pinConfig-
      +                          >pin)&1);break;
  5964   001886  503F               	movf	gpio_pin_read_logic@logic^0,w,c
  5965   001888  6ED9               	movwf	fsr2l,c
  5966   00188A  6ADA               	clrf	fsr2h,c
  5967   00188C  503E               	movf	gpio_pin_read_logic@pinConfig^0,w,c
  5968   00188E  6EE1               	movwf	fsr1l,c
  5969   001890  6AE2               	clrf	fsr1h,c
  5970   001892  30E7               	rrcf	231,w,c
  5971   001894  32E8               	rrcf	wreg,f,c
  5972   001896  32E8               	rrcf	wreg,f,c
  5973   001898  0B07               	andlw	7
  5974   00189A  6E40               	movwf	??_gpio_pin_read_logic^0,c
  5975   00189C  CF83 F041          	movff	3971,??_gpio_pin_read_logic+1	;volatile
  5976   0018A0  2A40               	incf	??_gpio_pin_read_logic^0,f,c
  5977   0018A2  EF55  F00C         	goto	u4334
  5978   0018A6                     u4335:
  5979   0018A6  90D8               	bcf	status,0,c
  5980   0018A8  3241               	rrcf	(??_gpio_pin_read_logic+1)^0,f,c
  5981   0018AA                     u4334:
  5982   0018AA  2E40               	decfsz	??_gpio_pin_read_logic^0,f,c
  5983   0018AC  EF53  F00C         	goto	u4335
  5984   0018B0  5041               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  5985   0018B2  0B01               	andlw	1
  5986   0018B4  6EDF               	movwf	indf2,c
  5987   0018B6  EF92  F00C         	goto	l6790
  5988   0018BA                     l6786:
  5989                           
  5990                           ;MCAL_layer/GPIO/hal_gpio.c: 155:                         *logic = ((PORTE >> pinConfig-
      +                          >pin)&1);break;
  5991   0018BA  503F               	movf	gpio_pin_read_logic@logic^0,w,c
  5992   0018BC  6ED9               	movwf	fsr2l,c
  5993   0018BE  6ADA               	clrf	fsr2h,c
  5994   0018C0  503E               	movf	gpio_pin_read_logic@pinConfig^0,w,c
  5995   0018C2  6EE1               	movwf	fsr1l,c
  5996   0018C4  6AE2               	clrf	fsr1h,c
  5997   0018C6  30E7               	rrcf	231,w,c
  5998   0018C8  32E8               	rrcf	wreg,f,c
  5999   0018CA  32E8               	rrcf	wreg,f,c
  6000   0018CC  0B07               	andlw	7
  6001   0018CE  6E40               	movwf	??_gpio_pin_read_logic^0,c
  6002   0018D0  CF84 F041          	movff	3972,??_gpio_pin_read_logic+1	;volatile
  6003   0018D4  2A40               	incf	??_gpio_pin_read_logic^0,f,c
  6004   0018D6  EF6F  F00C         	goto	u4344
  6005   0018DA                     u4345:
  6006   0018DA  90D8               	bcf	status,0,c
  6007   0018DC  3241               	rrcf	(??_gpio_pin_read_logic+1)^0,f,c
  6008   0018DE                     u4344:
  6009   0018DE  2E40               	decfsz	??_gpio_pin_read_logic^0,f,c
  6010   0018E0  EF6D  F00C         	goto	u4345
  6011   0018E4  5041               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  6012   0018E6  0B01               	andlw	1
  6013   0018E8  6EDF               	movwf	indf2,c
  6014   0018EA  EF92  F00C         	goto	l6790
  6015   0018EE                     l6788:
  6016   0018EE  503E               	movf	gpio_pin_read_logic@pinConfig^0,w,c
  6017   0018F0  6ED9               	movwf	fsr2l,c
  6018   0018F2  6ADA               	clrf	fsr2h,c
  6019   0018F4  50DF               	movf	223,w,c
  6020   0018F6  0B07               	andlw	7
  6021                           
  6022                           ; Switch size 1, requested type "simple"
  6023                           ; Number of cases is 5, Range of values is 0 to 4
  6024                           ; switch strategies available:
  6025                           ; Name         Instructions Cycles
  6026                           ; simple_byte           16     9 (average)
  6027                           ;	Chosen strategy is simple_byte
  6028   0018F8  0A00               	xorlw	0	; case 0
  6029   0018FA  B4D8               	btfsc	status,2,c
  6030   0018FC  EFF5  F00B         	goto	l6778
  6031   001900  0A01               	xorlw	1	; case 1
  6032   001902  B4D8               	btfsc	status,2,c
  6033   001904  EF0F  F00C         	goto	l6780
  6034   001908  0A03               	xorlw	3	; case 2
  6035   00190A  B4D8               	btfsc	status,2,c
  6036   00190C  EF29  F00C         	goto	l6782
  6037   001910  0A01               	xorlw	1	; case 3
  6038   001912  B4D8               	btfsc	status,2,c
  6039   001914  EF43  F00C         	goto	l6784
  6040   001918  0A07               	xorlw	7	; case 4
  6041   00191A  B4D8               	btfsc	status,2,c
  6042   00191C  EF5D  F00C         	goto	l6786
  6043   001920  EFF2  F00B         	goto	l871
  6044   001924                     l6790:
  6045                           
  6046                           ;MCAL_layer/GPIO/hal_gpio.c: 160:     return rt;
  6047   001924  5042               	movf	gpio_pin_read_logic@rt^0,w,c
  6048   001926  0012               	return		;funcret
  6049   001928                     __end_of_gpio_pin_read_logic:
  6050                           	callstack 0
  6051                           
  6052 ;; *************** function _keyPad_Initialize *****************
  6053 ;; Defined at:
  6054 ;;		line 19 in file "ECU_layer/KeyPad/ecu_keyPad.c"
  6055 ;; Parameters:    Size  Location     Type
  6056 ;;  keypad          1   13[COMRAM] PTR const struct .
  6057 ;;		 -> keypad_1(7), 
  6058 ;; Auto vars:     Size  Location     Type
  6059 ;;  l_coloums_co    1   16[COMRAM] unsigned char 
  6060 ;;  l_rows_count    1   15[COMRAM] unsigned char 
  6061 ;;  rt              1   14[COMRAM] unsigned char 
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  1    wreg      unsigned char 
  6064 ;; Registers used:
  6065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6071 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6072 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6074 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6075 ;;Total ram usage:        4 bytes
  6076 ;; Hardware stack levels used: 1
  6077 ;; Hardware stack levels required when called: 7
  6078 ;; This function calls:
  6079 ;;		_gpio_pin_direction_initialize
  6080 ;;		_gpio_pin_initialize
  6081 ;; This function is called by:
  6082 ;;		_main
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text3
  6087   002000                     __ptext3:
  6088                           	callstack 0
  6089   002000                     _keyPad_Initialize:
  6090                           	callstack 23
  6091   002000                     
  6092                           ;ECU_layer/KeyPad/ecu_keyPad.c: 21:     uint8 l_rows_counter = 0;
  6093   002000  6A48               	clrf	keyPad_Initialize@l_rows_counter^0,c
  6094                           
  6095                           ;ECU_layer/KeyPad/ecu_keyPad.c: 22:     uint8 l_coloums_counter =0;
  6096   002002  6A49               	clrf	keyPad_Initialize@l_coloums_counter^0,c
  6097   002004                     
  6098                           ;ECU_layer/KeyPad/ecu_keyPad.c: 23:      if(((void*)0) == keypad ){
  6099   002004  5046               	movf	keyPad_Initialize@keypad^0,w,c
  6100   002006  A4D8               	btfss	status,2,c
  6101   002008  EF08  F010         	goto	u7221
  6102   00200C  EF0A  F010         	goto	u7220
  6103   002010                     u7221:
  6104   002010  EF0D  F010         	goto	l2057
  6105   002014                     u7220:
  6106   002014                     
  6107                           ;ECU_layer/KeyPad/ecu_keyPad.c: 24:         rt = (STD_ReturnType)0x00;
  6108   002014  6A47               	clrf	keyPad_Initialize@rt^0,c
  6109                           
  6110                           ;ECU_layer/KeyPad/ecu_keyPad.c: 25:     }
  6111   002016  EF2E  F010         	goto	l2058
  6112   00201A                     l2057:
  6113                           
  6114                           ;ECU_layer/KeyPad/ecu_keyPad.c: 27:          for(l_rows_counter =0 ; l_rows_counter<4 ; 
      +                          l_rows_counter++){
  6115   00201A  6A48               	clrf	keyPad_Initialize@l_rows_counter^0,c
  6116   00201C                     l9352:
  6117   00201C  5046               	movf	keyPad_Initialize@keypad^0,w,c
  6118   00201E  2448               	addwf	keyPad_Initialize@l_rows_counter^0,w,c
  6119   002020  6E43               	movwf	gpio_pin_initialize@pinConfig^0,c
  6120   002022  ECB9  F010         	call	_gpio_pin_initialize	;wreg free
  6121   002026                     
  6122                           ;ECU_layer/KeyPad/ecu_keyPad.c: 29:          }
  6123   002026  2A48               	incf	keyPad_Initialize@l_rows_counter^0,f,c
  6124   002028  0E03               	movlw	3
  6125   00202A  6448               	cpfsgt	keyPad_Initialize@l_rows_counter^0,c
  6126   00202C  EF1A  F010         	goto	u7231
  6127   002030  EF1C  F010         	goto	u7230
  6128   002034                     u7231:
  6129   002034  EF0E  F010         	goto	l9352
  6130   002038                     u7230:
  6131   002038                     
  6132                           ;ECU_layer/KeyPad/ecu_keyPad.c: 30:          for(l_coloums_counter = 0 ; l_coloums_count
      +                          er<3 ; l_coloums_counter++){
  6133   002038  6A49               	clrf	keyPad_Initialize@l_coloums_counter^0,c
  6134   00203A                     l9362:
  6135   00203A  5046               	movf	keyPad_Initialize@keypad^0,w,c
  6136   00203C  2449               	addwf	keyPad_Initialize@l_coloums_counter^0,w,c
  6137   00203E  0F04               	addlw	4
  6138   002040  6E3E               	movwf	gpio_pin_direction_initialize@pinConfig^0,c
  6139   002042  EC15  F008         	call	_gpio_pin_direction_initialize	;wreg free
  6140   002046                     
  6141                           ;ECU_layer/KeyPad/ecu_keyPad.c: 32:          }
  6142   002046  2A49               	incf	keyPad_Initialize@l_coloums_counter^0,f,c
  6143   002048  0E02               	movlw	2
  6144   00204A  6449               	cpfsgt	keyPad_Initialize@l_coloums_counter^0,c
  6145   00204C  EF2A  F010         	goto	u7241
  6146   002050  EF2C  F010         	goto	u7240
  6147   002054                     u7241:
  6148   002054  EF1D  F010         	goto	l9362
  6149   002058                     u7240:
  6150   002058                     
  6151                           ;ECU_layer/KeyPad/ecu_keyPad.c: 33:         rt = (STD_ReturnType)0x01;
  6152   002058  0E01               	movlw	1
  6153   00205A  6E47               	movwf	keyPad_Initialize@rt^0,c
  6154   00205C                     l2058:
  6155                           
  6156                           ;ECU_layer/KeyPad/ecu_keyPad.c: 35:     return rt;
  6157   00205C  5047               	movf	keyPad_Initialize@rt^0,w,c
  6158   00205E  0012               	return		;funcret
  6159   002060                     __end_of_keyPad_Initialize:
  6160                           	callstack 0
  6161                           
  6162 ;; *************** function _WrongPassword *****************
  6163 ;; Defined at:
  6164 ;;		line 146 in file "main.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;		None
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;Total ram usage:        2 bytes
  6183 ;; Hardware stack levels used: 1
  6184 ;; Hardware stack levels required when called: 10
  6185 ;; This function calls:
  6186 ;;		_ECU_DC_Motor_stop
  6187 ;;		_ECU_LCD_4Bit_Send_Command
  6188 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
  6189 ;;		_LED_turnOFF
  6190 ;;		_LED_turnON
  6191 ;; This function is called by:
  6192 ;;		_main
  6193 ;; This function uses a non-reentrant model
  6194 ;;
  6195                           
  6196                           	psect	text4
  6197   001F3A                     __ptext4:
  6198                           	callstack 0
  6199   001F3A                     _WrongPassword:
  6200                           	callstack 20
  6201   001F3A                     
  6202                           ;main.c: 147:     ret = LED_turnON(&RED_LED);
  6203   001F3A  0E59               	movlw	low _RED_LED
  6204   001F3C  6E43               	movwf	LED_turnON@led_config^0,c
  6205   001F3E  ECE8  F00D         	call	_LED_turnON	;wreg free
  6206   001F42  6E34               	movwf	_ret^0,c
  6207                           
  6208                           ;main.c: 148:     ret = LED_turnOFF(&GREEN_LED);
  6209   001F44  0E58               	movlw	low _GREEN_LED
  6210   001F46  6E43               	movwf	LED_turnOFF@led_config^0,c
  6211   001F48  EC3D  F00E         	call	_LED_turnOFF	;wreg free
  6212   001F4C  6E34               	movwf	_ret^0,c
  6213                           
  6214                           ;main.c: 149:     ret = ECU_DC_Motor_stop(&Dc_Motor_Gate);
  6215   001F4E  0E55               	movlw	low _Dc_Motor_Gate
  6216   001F50  6E43               	movwf	ECU_DC_Motor_stop@_dc_motor^0,c
  6217   001F52  EC20  F011         	call	_ECU_DC_Motor_stop	;wreg free
  6218   001F56  6E34               	movwf	_ret^0,c
  6219   001F58                     
  6220                           ;main.c: 150:     ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1, 1, 3, "Wrong pas
      +                          sword!!!");
  6221   001F58  0ED1               	movlw	low _LCD_1
  6222   001F5A  6E4D               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD^0,c
  6223   001F5C  0E01               	movlw	1
  6224   001F5E  6E4E               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Row^0,c
  6225   001F60  0E03               	movlw	3
  6226   001F62  6E4F               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn^0,c
  6227   001F64  0E14               	movlw	low STR_1
  6228   001F66  6E50               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str^0,c
  6229   001F68  EC2F  F00F         	call	_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
  6230   001F6C  6E34               	movwf	_ret^0,c
  6231   001F6E                     
  6232                           ;main.c: 151:     _delay((unsigned long)((500)*(8000000/4000.0)));
  6233   001F6E  0E06               	movlw	6
  6234   001F70  0100               	movlb	0	; () banked
  6235   001F72  6FD9               	movwf	(??_WrongPassword+1)& (0+255),b
  6236   001F74  0E13               	movlw	19
  6237   001F76  6FD8               	movwf	??_WrongPassword& (0+255),b
  6238   001F78  0EAD               	movlw	173
  6239   001F7A                     u7867:
  6240   001F7A  2EE8               	decfsz	wreg,f,c
  6241   001F7C  D7FE               	bra	u7867
  6242   001F7E  2FD8               	decfsz	??_WrongPassword& (0+255),f,b
  6243   001F80  D7FC               	bra	u7867
  6244   001F82  2FD9               	decfsz	(??_WrongPassword+1)& (0+255),f,b
  6245   001F84  D7FA               	bra	u7867
  6246   001F86  F000 F000          	nop2	
  6247   001F8A                     l9294:
  6248                           
  6249                           ;main.c: 153:         ret = ECU_LCD_4Bit_Send_Command(&LCD_1, 0x01);
  6250   001F8A  0ED1               	movlw	low _LCD_1
  6251   001F8C  6E46               	movwf	ECU_LCD_4Bit_Send_Command@_LCD^0,c
  6252   001F8E  0E01               	movlw	1
  6253   001F90  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  6254   001F92  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  6255   001F96  6E34               	movwf	_ret^0,c
  6256   001F98  EFC5  F00F         	goto	l9294
  6257   001F9C  0012               	return		;funcret
  6258   001F9E                     __end_of_WrongPassword:
  6259                           	callstack 0
  6260                           
  6261 ;; *************** function _LED_turnON *****************
  6262 ;; Defined at:
  6263 ;;		line 28 in file "ECU_layer/LED/ecu_led.c"
  6264 ;; Parameters:    Size  Location     Type
  6265 ;;  led_config      1   10[COMRAM] PTR const struct .
  6266 ;;		 -> GREEN_LED(1), RED_LED(1), 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  LED             1   13[COMRAM] struct .
  6269 ;;  rt              1   12[COMRAM] unsigned char 
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      unsigned char 
  6272 ;; Registers used:
  6273 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6279 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;Total ram usage:        4 bytes
  6284 ;; Hardware stack levels used: 1
  6285 ;; Hardware stack levels required when called: 6
  6286 ;; This function calls:
  6287 ;;		_gpio_pin_write_logic
  6288 ;; This function is called by:
  6289 ;;		_WrongPassword
  6290 ;;		_main
  6291 ;; This function uses a non-reentrant model
  6292 ;;
  6293                           
  6294                           	psect	text5
  6295   001BD0                     __ptext5:
  6296                           	callstack 0
  6297   001BD0                     _LED_turnON:
  6298                           	callstack 23
  6299   001BD0                     
  6300                           ;ECU_layer/LED/ecu_led.c: 29:     STD_ReturnType rt = (STD_ReturnType)0x01;
  6301   001BD0  0E01               	movlw	1
  6302   001BD2  6E45               	movwf	LED_turnON@rt^0,c
  6303                           
  6304                           ;ECU_layer/LED/ecu_led.c: 30:      if(((void*)0) == led_config || led_config->pin_name >
      +                           8 -1 || led_config->port_name > 5 -1 ){
  6305   001BD4  5043               	movf	LED_turnON@led_config^0,w,c
  6306   001BD6  B4D8               	btfsc	status,2,c
  6307   001BD8  EFF0  F00D         	goto	u7031
  6308   001BDC  EFF2  F00D         	goto	u7030
  6309   001BE0                     u7031:
  6310   001BE0  EF0E  F00E         	goto	l2269
  6311   001BE4                     u7030:
  6312   001BE4  5043               	movf	LED_turnON@led_config^0,w,c
  6313   001BE6  6ED9               	movwf	fsr2l,c
  6314   001BE8  6ADA               	clrf	fsr2h,c
  6315   001BEA  38DF               	swapf	223,w,c
  6316   001BEC  0B07               	andlw	7
  6317   001BEE  6E44               	movwf	??_LED_turnON^0,c
  6318   001BF0  0E08               	movlw	8
  6319   001BF2  6044               	cpfslt	??_LED_turnON^0,c
  6320   001BF4  EFFE  F00D         	goto	u7041
  6321   001BF8  EF00  F00E         	goto	u7040
  6322   001BFC                     u7041:
  6323   001BFC  EF0E  F00E         	goto	l2269
  6324   001C00                     u7040:
  6325   001C00  5043               	movf	LED_turnON@led_config^0,w,c
  6326   001C02  6ED9               	movwf	fsr2l,c
  6327   001C04  6ADA               	clrf	fsr2h,c
  6328   001C06  50DF               	movf	223,w,c
  6329   001C08  0B0F               	andlw	15
  6330   001C0A  6E44               	movwf	??_LED_turnON^0,c
  6331   001C0C  0E04               	movlw	4
  6332   001C0E  6444               	cpfsgt	??_LED_turnON^0,c
  6333   001C10  EF0C  F00E         	goto	u7051
  6334   001C14  EF0E  F00E         	goto	u7050
  6335   001C18                     u7051:
  6336   001C18  EF11  F00E         	goto	l2267
  6337   001C1C                     u7050:
  6338   001C1C                     l2269:
  6339                           
  6340                           ;ECU_layer/LED/ecu_led.c: 31:         rt = (STD_ReturnType)0x00;
  6341   001C1C  6A45               	clrf	LED_turnON@rt^0,c
  6342                           
  6343                           ;ECU_layer/LED/ecu_led.c: 32:     }
  6344   001C1E  EF3B  F00E         	goto	l9182
  6345   001C22                     l2267:
  6346                           
  6347                           ;ECU_layer/LED/ecu_led.c: 34:        pinConfig_t LED ={
  6348   001C22  C027  F046         	movff	LED_turnON@F3466,LED_turnON@LED
  6349   001C26  5043               	movf	LED_turnON@led_config^0,w,c
  6350   001C28  6ED9               	movwf	fsr2l,c
  6351   001C2A  6ADA               	clrf	fsr2h,c
  6352   001C2C  50DF               	movf	223,w,c
  6353   001C2E  0B0F               	andlw	15
  6354   001C30  6E44               	movwf	??_LED_turnON^0,c
  6355   001C32  5046               	movf	LED_turnON@LED^0,w,c
  6356   001C34  1844               	xorwf	??_LED_turnON^0,w,c
  6357   001C36  0BF8               	andlw	-8
  6358   001C38  1844               	xorwf	??_LED_turnON^0,w,c
  6359   001C3A  6E46               	movwf	LED_turnON@LED^0,c
  6360   001C3C  5043               	movf	LED_turnON@led_config^0,w,c
  6361   001C3E  6ED9               	movwf	fsr2l,c
  6362   001C40  6ADA               	clrf	fsr2h,c
  6363   001C42  38DF               	swapf	223,w,c
  6364   001C44  0B07               	andlw	7
  6365   001C46  6E44               	movwf	??_LED_turnON^0,c
  6366   001C48  4644               	rlncf	??_LED_turnON^0,f,c
  6367   001C4A  4644               	rlncf	??_LED_turnON^0,f,c
  6368   001C4C  4644               	rlncf	??_LED_turnON^0,f,c
  6369   001C4E  5046               	movf	LED_turnON@LED^0,w,c
  6370   001C50  1844               	xorwf	??_LED_turnON^0,w,c
  6371   001C52  0BC7               	andlw	-57
  6372   001C54  1844               	xorwf	??_LED_turnON^0,w,c
  6373   001C56  6E46               	movwf	LED_turnON@LED^0,c
  6374   001C58  9C46               	bcf	LED_turnON@LED^0,6,c
  6375   001C5A  5043               	movf	LED_turnON@led_config^0,w,c
  6376   001C5C  6ED9               	movwf	fsr2l,c
  6377   001C5E  6ADA               	clrf	fsr2h,c
  6378   001C60  AEDF               	btfss	indf2,7,c
  6379   001C62  D002               	bra	u7065
  6380   001C64  8E46               	bsf	LED_turnON@LED^0,7,c
  6381   001C66  D001               	bra	u7067
  6382   001C68                     u7065:
  6383   001C68  9E46               	bcf	LED_turnON@LED^0,7,c
  6384   001C6A                     u7067:
  6385   001C6A                     
  6386                           ;ECU_layer/LED/ecu_led.c: 40:         gpio_pin_write_logic(&LED , GPIO_Pin_Logic_HIGH);
  6387   001C6A  0E46               	movlw	low LED_turnON@LED
  6388   001C6C  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  6389   001C6E  0E01               	movlw	1
  6390   001C70  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  6391   001C72  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  6392   001C76                     l9182:
  6393                           
  6394                           ;ECU_layer/LED/ecu_led.c: 43:     return rt;
  6395   001C76  5045               	movf	LED_turnON@rt^0,w,c
  6396   001C78  0012               	return		;funcret
  6397   001C7A                     __end_of_LED_turnON:
  6398                           	callstack 0
  6399                           
  6400 ;; *************** function _LED_turnOFF *****************
  6401 ;; Defined at:
  6402 ;;		line 46 in file "ECU_layer/LED/ecu_led.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  led_config      1   10[COMRAM] PTR const struct .
  6405 ;;		 -> GREEN_LED(1), RED_LED(1), 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  LED             1   13[COMRAM] struct .
  6408 ;;  rt              1   12[COMRAM] unsigned char 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      unsigned char 
  6411 ;; Registers used:
  6412 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6418 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6421 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6422 ;;Total ram usage:        4 bytes
  6423 ;; Hardware stack levels used: 1
  6424 ;; Hardware stack levels required when called: 6
  6425 ;; This function calls:
  6426 ;;		_gpio_pin_write_logic
  6427 ;; This function is called by:
  6428 ;;		_WrongPassword
  6429 ;;		_main
  6430 ;; This function uses a non-reentrant model
  6431 ;;
  6432                           
  6433                           	psect	text6
  6434   001C7A                     __ptext6:
  6435                           	callstack 0
  6436   001C7A                     _LED_turnOFF:
  6437                           	callstack 23
  6438   001C7A                     
  6439                           ;ECU_layer/LED/ecu_led.c: 47:     STD_ReturnType rt = (STD_ReturnType)0x01;
  6440   001C7A  0E01               	movlw	1
  6441   001C7C  6E45               	movwf	LED_turnOFF@rt^0,c
  6442                           
  6443                           ;ECU_layer/LED/ecu_led.c: 48:      if(((void*)0) == led_config || led_config->pin_name >
      +                           8 -1 || led_config->port_name > 5 -1 ){
  6444   001C7E  5043               	movf	LED_turnOFF@led_config^0,w,c
  6445   001C80  B4D8               	btfsc	status,2,c
  6446   001C82  EF45  F00E         	goto	u7071
  6447   001C86  EF47  F00E         	goto	u7070
  6448   001C8A                     u7071:
  6449   001C8A  EF63  F00E         	goto	l2278
  6450   001C8E                     u7070:
  6451   001C8E  5043               	movf	LED_turnOFF@led_config^0,w,c
  6452   001C90  6ED9               	movwf	fsr2l,c
  6453   001C92  6ADA               	clrf	fsr2h,c
  6454   001C94  38DF               	swapf	223,w,c
  6455   001C96  0B07               	andlw	7
  6456   001C98  6E44               	movwf	??_LED_turnOFF^0,c
  6457   001C9A  0E08               	movlw	8
  6458   001C9C  6044               	cpfslt	??_LED_turnOFF^0,c
  6459   001C9E  EF53  F00E         	goto	u7081
  6460   001CA2  EF55  F00E         	goto	u7080
  6461   001CA6                     u7081:
  6462   001CA6  EF63  F00E         	goto	l2278
  6463   001CAA                     u7080:
  6464   001CAA  5043               	movf	LED_turnOFF@led_config^0,w,c
  6465   001CAC  6ED9               	movwf	fsr2l,c
  6466   001CAE  6ADA               	clrf	fsr2h,c
  6467   001CB0  50DF               	movf	223,w,c
  6468   001CB2  0B0F               	andlw	15
  6469   001CB4  6E44               	movwf	??_LED_turnOFF^0,c
  6470   001CB6  0E04               	movlw	4
  6471   001CB8  6444               	cpfsgt	??_LED_turnOFF^0,c
  6472   001CBA  EF61  F00E         	goto	u7091
  6473   001CBE  EF63  F00E         	goto	u7090
  6474   001CC2                     u7091:
  6475   001CC2  EF66  F00E         	goto	l2276
  6476   001CC6                     u7090:
  6477   001CC6                     l2278:
  6478                           
  6479                           ;ECU_layer/LED/ecu_led.c: 49:         rt = (STD_ReturnType)0x00;
  6480   001CC6  6A45               	clrf	LED_turnOFF@rt^0,c
  6481                           
  6482                           ;ECU_layer/LED/ecu_led.c: 50:     }
  6483   001CC8  EF90  F00E         	goto	l9200
  6484   001CCC                     l2276:
  6485                           
  6486                           ;ECU_layer/LED/ecu_led.c: 52:        pinConfig_t LED ={
  6487   001CCC  C026  F046         	movff	LED_turnOFF@F3471,LED_turnOFF@LED
  6488   001CD0  5043               	movf	LED_turnOFF@led_config^0,w,c
  6489   001CD2  6ED9               	movwf	fsr2l,c
  6490   001CD4  6ADA               	clrf	fsr2h,c
  6491   001CD6  50DF               	movf	223,w,c
  6492   001CD8  0B0F               	andlw	15
  6493   001CDA  6E44               	movwf	??_LED_turnOFF^0,c
  6494   001CDC  5046               	movf	LED_turnOFF@LED^0,w,c
  6495   001CDE  1844               	xorwf	??_LED_turnOFF^0,w,c
  6496   001CE0  0BF8               	andlw	-8
  6497   001CE2  1844               	xorwf	??_LED_turnOFF^0,w,c
  6498   001CE4  6E46               	movwf	LED_turnOFF@LED^0,c
  6499   001CE6  5043               	movf	LED_turnOFF@led_config^0,w,c
  6500   001CE8  6ED9               	movwf	fsr2l,c
  6501   001CEA  6ADA               	clrf	fsr2h,c
  6502   001CEC  38DF               	swapf	223,w,c
  6503   001CEE  0B07               	andlw	7
  6504   001CF0  6E44               	movwf	??_LED_turnOFF^0,c
  6505   001CF2  4644               	rlncf	??_LED_turnOFF^0,f,c
  6506   001CF4  4644               	rlncf	??_LED_turnOFF^0,f,c
  6507   001CF6  4644               	rlncf	??_LED_turnOFF^0,f,c
  6508   001CF8  5046               	movf	LED_turnOFF@LED^0,w,c
  6509   001CFA  1844               	xorwf	??_LED_turnOFF^0,w,c
  6510   001CFC  0BC7               	andlw	-57
  6511   001CFE  1844               	xorwf	??_LED_turnOFF^0,w,c
  6512   001D00  6E46               	movwf	LED_turnOFF@LED^0,c
  6513   001D02  9C46               	bcf	LED_turnOFF@LED^0,6,c
  6514   001D04  5043               	movf	LED_turnOFF@led_config^0,w,c
  6515   001D06  6ED9               	movwf	fsr2l,c
  6516   001D08  6ADA               	clrf	fsr2h,c
  6517   001D0A  AEDF               	btfss	indf2,7,c
  6518   001D0C  D002               	bra	u7105
  6519   001D0E  8E46               	bsf	LED_turnOFF@LED^0,7,c
  6520   001D10  D001               	bra	u7107
  6521   001D12                     u7105:
  6522   001D12  9E46               	bcf	LED_turnOFF@LED^0,7,c
  6523   001D14                     u7107:
  6524   001D14                     
  6525                           ;ECU_layer/LED/ecu_led.c: 58:         gpio_pin_write_logic(&LED , GPIO_Pin_Logic_LOW);
  6526   001D14  0E46               	movlw	low LED_turnOFF@LED
  6527   001D16  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  6528   001D18  0E00               	movlw	0
  6529   001D1A  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  6530   001D1C  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  6531   001D20                     l9200:
  6532                           
  6533                           ;ECU_layer/LED/ecu_led.c: 61:     return rt;
  6534   001D20  5045               	movf	LED_turnOFF@rt^0,w,c
  6535   001D22  0012               	return		;funcret
  6536   001D24                     __end_of_LED_turnOFF:
  6537                           	callstack 0
  6538                           
  6539 ;; *************** function _ECU_LCD_4Bit_Send_String_Data_Postition *****************
  6540 ;; Defined at:
  6541 ;;		line 123 in file "ECU_layer/LCD/LCD.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  _LCD            1   20[COMRAM] PTR const struct .
  6544 ;;		 -> LCD_1(6), 
  6545 ;;  _Row            1   21[COMRAM] unsigned char 
  6546 ;;  _Coloumn        1   22[COMRAM] unsigned char 
  6547 ;;  _Str            1   23[COMRAM] PTR unsigned char 
  6548 ;;		 -> STR_2(19), STR_1(18), 
  6549 ;; Auto vars:     Size  Location     Type
  6550 ;;  rt              1    0[BANK0 ] unsigned char 
  6551 ;; Return value:  Size  Location     Type
  6552 ;;                  1    wreg      unsigned char 
  6553 ;; Registers used:
  6554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6555 ;; Tracked objects:
  6556 ;;		On entry : 0/0
  6557 ;;		On exit  : 0/0
  6558 ;;		Unchanged: 0/0
  6559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6560 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;Total ram usage:        5 bytes
  6565 ;; Hardware stack levels used: 1
  6566 ;; Hardware stack levels required when called: 9
  6567 ;; This function calls:
  6568 ;;		_ECU_LCD_4Bit_Send_char_Data
  6569 ;;		_LCD_4Bits_Set_Curser
  6570 ;; This function is called by:
  6571 ;;		_WrongPassword
  6572 ;;		_main
  6573 ;; This function uses a non-reentrant model
  6574 ;;
  6575                           
  6576                           	psect	text7
  6577   001E5E                     __ptext7:
  6578                           	callstack 0
  6579   001E5E                     _ECU_LCD_4Bit_Send_String_Data_Postition:
  6580                           	callstack 20
  6581   001E5E                     
  6582                           ;ECU_layer/LCD/LCD.c: 124:     STD_ReturnType rt = (STD_ReturnType)0x00;
  6583   001E5E  0100               	movlb	0	; () banked
  6584   001E60  6BD7               	clrf	ECU_LCD_4Bit_Send_String_Data_Postition@rt& (0+255),b
  6585   001E62                     
  6586                           ; BSR set to: 0
  6587                           ;ECU_layer/LCD/LCD.c: 125:      if(((void*)0) == _LCD){
  6588   001E62  504D               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD^0,w,c
  6589   001E64  A4D8               	btfss	status,2,c
  6590   001E66  EF37  F00F         	goto	u7121
  6591   001E6A  EF39  F00F         	goto	u7120
  6592   001E6E                     u7121:
  6593   001E6E  EF3C  F00F         	goto	l9224
  6594   001E72                     u7120:
  6595   001E72                     
  6596                           ; BSR set to: 0
  6597                           ;ECU_layer/LCD/LCD.c: 126:         rt = (STD_ReturnType)0x00;
  6598   001E72  6BD7               	clrf	ECU_LCD_4Bit_Send_String_Data_Postition@rt& (0+255),b
  6599                           
  6600                           ;ECU_layer/LCD/LCD.c: 127:     }
  6601   001E74  EF64  F00F         	goto	l9232
  6602   001E78                     l9224:
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;ECU_layer/LCD/LCD.c: 129:         LCD_4Bits_Set_Curser(_LCD, _Row, _Coloumn);
  6606   001E78  C04D  F049         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD,LCD_4Bits_Set_Curser@_LCD
  6607   001E7C  C04E  F04A         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Row,LCD_4Bits_Set_Curser@row
  6608   001E80  C04F  F04B         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn,LCD_4Bits_Set_Curser@coloumn
  6609   001E84  ECE5  F00E         	call	_LCD_4Bits_Set_Curser	;wreg free
  6610                           
  6611                           ;ECU_layer/LCD/LCD.c: 130:         while(*_Str){
  6612   001E88  EF55  F00F         	goto	l9230
  6613   001E8C                     l9226:
  6614                           
  6615                           ;ECU_layer/LCD/LCD.c: 131:              rt = ECU_LCD_4Bit_Send_char_Data (_LCD, *_Str++)
      +                          ;
  6616   001E8C  C04D  F046         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD,ECU_LCD_4Bit_Send_char_Data@_LCD
  6617   001E90  C050  FFF6         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Str,tblptrl
  6618   001E94                     	if	1	;There is more than 1 active tblptr byte
  6619   001E94  0E10               	movlw	high __smallconst
  6620   001E96  6EF7               	movwf	tblptrh,c
  6621   001E98                     	endif
  6622   001E98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6623   001E98  6AF8               	clrf	tblptru,c
  6624   001E9A                     	endif
  6625   001E9A                     	if	0	;tblptru may be non-zero
  6626   001E9A                     	endif
  6627   001E9A  0008               	tblrd		*
  6628   001E9C  CFF5 F047          	movff	tablat,ECU_LCD_4Bit_Send_char_Data@_Data
  6629   001EA0  EC5F  F010         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  6630   001EA4  0100               	movlb	0	; () banked
  6631   001EA6  6FD7               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@rt& (0+255),b
  6632   001EA8                     
  6633                           ; BSR set to: 0
  6634   001EA8  2A50               	incf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str^0,f,c
  6635   001EAA                     l9230:
  6636                           
  6637                           ;ECU_layer/LCD/LCD.c: 130:         while(*_Str){
  6638   001EAA  C050  FFF6         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Str,tblptrl
  6639   001EAE                     	if	1	;There is more than 1 active tblptr byte
  6640   001EAE  0E10               	movlw	high __smallconst
  6641   001EB0  6EF7               	movwf	tblptrh,c
  6642   001EB2                     	endif
  6643   001EB2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6644   001EB2  6AF8               	clrf	tblptru,c
  6645   001EB4                     	endif
  6646   001EB4                     	if	0	;tblptru may be non-zero
  6647   001EB4                     	endif
  6648   001EB4  0008               	tblrd		*
  6649   001EB6  50F5               	movf	tablat,w,c
  6650   001EB8  0900               	iorlw	0
  6651   001EBA  A4D8               	btfss	status,2,c
  6652   001EBC  EF62  F00F         	goto	u7131
  6653   001EC0  EF64  F00F         	goto	u7130
  6654   001EC4                     u7131:
  6655   001EC4  EF46  F00F         	goto	l9226
  6656   001EC8                     u7130:
  6657   001EC8                     l9232:
  6658                           
  6659                           ;ECU_layer/LCD/LCD.c: 136:     return rt;
  6660   001EC8  0100               	movlb	0	; () banked
  6661   001ECA  51D7               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@rt& (0+255),w,b
  6662   001ECC                     
  6663                           ; BSR set to: 0
  6664   001ECC  0012               	return		;funcret
  6665   001ECE                     __end_of_ECU_LCD_4Bit_Send_String_Data_Postition:
  6666                           	callstack 0
  6667                           
  6668 ;; *************** function _ECU_DC_Motor_stop *****************
  6669 ;; Defined at:
  6670 ;;		line 47 in file "ECU_layer/DC_Motor/DC_Motor.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  _dc_motor       1   10[COMRAM] PTR const struct .
  6673 ;;		 -> Dc_Motor_Gate(2), 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  rt              1   11[COMRAM] unsigned char 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  1    wreg      unsigned char 
  6678 ;; Registers used:
  6679 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6685 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;Total ram usage:        2 bytes
  6690 ;; Hardware stack levels used: 1
  6691 ;; Hardware stack levels required when called: 6
  6692 ;; This function calls:
  6693 ;;		_gpio_pin_write_logic
  6694 ;; This function is called by:
  6695 ;;		_WrongPassword
  6696 ;;		_main
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text8
  6701   002240                     __ptext8:
  6702                           	callstack 0
  6703   002240                     _ECU_DC_Motor_stop:
  6704                           	callstack 23
  6705   002240                     
  6706                           ;ECU_layer/DC_Motor/DC_Motor.c: 49:     if(((void*)0) == _dc_motor ){
  6707   002240  5043               	movf	ECU_DC_Motor_stop@_dc_motor^0,w,c
  6708   002242  A4D8               	btfss	status,2,c
  6709   002244  EF26  F011         	goto	u7111
  6710   002248  EF28  F011         	goto	u7110
  6711   00224C                     u7111:
  6712   00224C  EF2B  F011         	goto	l9210
  6713   002250                     u7110:
  6714   002250                     
  6715                           ;ECU_layer/DC_Motor/DC_Motor.c: 50:         rt = (STD_ReturnType)0x00;
  6716   002250  6A44               	clrf	ECU_DC_Motor_stop@rt^0,c
  6717                           
  6718                           ;ECU_layer/DC_Motor/DC_Motor.c: 51:     }
  6719   002252  EF39  F011         	goto	l9214
  6720   002256                     l9210:
  6721                           
  6722                           ;ECU_layer/DC_Motor/DC_Motor.c: 53:         gpio_pin_write_logic(&(_dc_motor->dc_motor_p
      +                          in[0x00U]), GPIO_Pin_Logic_LOW);
  6723   002256  C043  F03E         	movff	ECU_DC_Motor_stop@_dc_motor,gpio_pin_write_logic@pinConfig
  6724   00225A  0E00               	movlw	0
  6725   00225C  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  6726   00225E  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  6727                           
  6728                           ;ECU_layer/DC_Motor/DC_Motor.c: 54:         gpio_pin_write_logic(&(_dc_motor->dc_motor_p
      +                          in[0x01U]), GPIO_Pin_Logic_LOW);
  6729   002262  2843               	incf	ECU_DC_Motor_stop@_dc_motor^0,w,c
  6730   002264  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  6731   002266  0E00               	movlw	0
  6732   002268  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  6733   00226A  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  6734   00226E                     
  6735                           ;ECU_layer/DC_Motor/DC_Motor.c: 56:         rt = (STD_ReturnType)0x01;
  6736   00226E  0E01               	movlw	1
  6737   002270  6E44               	movwf	ECU_DC_Motor_stop@rt^0,c
  6738   002272                     l9214:
  6739                           
  6740                           ;ECU_layer/DC_Motor/DC_Motor.c: 58:     return rt;
  6741   002272  5044               	movf	ECU_DC_Motor_stop@rt^0,w,c
  6742   002274  0012               	return		;funcret
  6743   002276                     __end_of_ECU_DC_Motor_stop:
  6744                           	callstack 0
  6745                           
  6746 ;; *************** function _SYSTEM_Initialize *****************
  6747 ;; Defined at:
  6748 ;;		line 50 in file "mcc_generated_files/mcc.c"
  6749 ;; Parameters:    Size  Location     Type
  6750 ;;		None
  6751 ;; Auto vars:     Size  Location     Type
  6752 ;;		None
  6753 ;; Return value:  Size  Location     Type
  6754 ;;                  1    wreg      void 
  6755 ;; Registers used:
  6756 ;;		wreg, status,2, status,0, cstack
  6757 ;; Tracked objects:
  6758 ;;		On entry : 0/0
  6759 ;;		On exit  : 0/0
  6760 ;;		Unchanged: 0/0
  6761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6766 ;;Total ram usage:        0 bytes
  6767 ;; Hardware stack levels used: 1
  6768 ;; Hardware stack levels required when called: 6
  6769 ;; This function calls:
  6770 ;;		_I2C_Initialize
  6771 ;;		_INTERRUPT_Initialize
  6772 ;;		_OSCILLATOR_Initialize
  6773 ;;		_PIN_MANAGER_Initialize
  6774 ;; This function is called by:
  6775 ;;		_main
  6776 ;; This function uses a non-reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text9
  6780   00241C                     __ptext9:
  6781                           	callstack 0
  6782   00241C                     _SYSTEM_Initialize:
  6783                           	callstack 24
  6784   00241C                     
  6785                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
  6786   00241C  EC45  F012         	call	_INTERRUPT_Initialize	;wreg free
  6787   002420                     
  6788                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
  6789   002420  EC17  F012         	call	_I2C_Initialize	;wreg free
  6790   002424                     
  6791                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
  6792   002424  ECC7  F011         	call	_PIN_MANAGER_Initialize	;wreg free
  6793   002428                     
  6794                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
  6795   002428  EC41  F012         	call	_OSCILLATOR_Initialize	;wreg free
  6796   00242C  0012               	return		;funcret
  6797   00242E                     __end_of_SYSTEM_Initialize:
  6798                           	callstack 0
  6799                           
  6800 ;; *************** function _PIN_MANAGER_Initialize *****************
  6801 ;; Defined at:
  6802 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  6803 ;; Parameters:    Size  Location     Type
  6804 ;;		None
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;		None
  6807 ;; Return value:  Size  Location     Type
  6808 ;;                  1    wreg      void 
  6809 ;; Registers used:
  6810 ;;		wreg, status,2
  6811 ;; Tracked objects:
  6812 ;;		On entry : 0/0
  6813 ;;		On exit  : 0/0
  6814 ;;		Unchanged: 0/0
  6815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6820 ;;Total ram usage:        0 bytes
  6821 ;; Hardware stack levels used: 1
  6822 ;; Hardware stack levels required when called: 5
  6823 ;; This function calls:
  6824 ;;		Nothing
  6825 ;; This function is called by:
  6826 ;;		_SYSTEM_Initialize
  6827 ;; This function uses a non-reentrant model
  6828 ;;
  6829                           
  6830                           	psect	text10
  6831   00238E                     __ptext10:
  6832                           	callstack 0
  6833   00238E                     _PIN_MANAGER_Initialize:
  6834                           	callstack 24
  6835   00238E                     
  6836                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  6837   00238E  6A8D               	clrf	141,c	;volatile
  6838                           
  6839                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  6840   002390  6A8C               	clrf	140,c	;volatile
  6841                           
  6842                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  6843   002392  6A89               	clrf	137,c	;volatile
  6844                           
  6845                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  6846   002394  6A8A               	clrf	138,c	;volatile
  6847                           
  6848                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  6849   002396  6A8B               	clrf	139,c	;volatile
  6850   002398                     
  6851                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  6852   002398  0E07               	movlw	7
  6853   00239A  6E96               	movwf	150,c	;volatile
  6854   00239C                     
  6855                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  6856   00239C  6892               	setf	146,c	;volatile
  6857   00239E                     
  6858                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  6859   00239E  6893               	setf	147,c	;volatile
  6860   0023A0                     
  6861                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  6862   0023A0  6894               	setf	148,c	;volatile
  6863   0023A2                     
  6864                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  6865   0023A2  6895               	setf	149,c	;volatile
  6866   0023A4                     
  6867                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  6868   0023A4  687E               	setf	126,c	;volatile
  6869                           
  6870                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  6871   0023A6  0E1F               	movlw	31
  6872   0023A8  6E7F               	movwf	127,c	;volatile
  6873   0023AA                     
  6874                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  6875   0023AA  6A7C               	clrf	124,c	;volatile
  6876   0023AC                     
  6877                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  6878   0023AC  8EF1               	bsf	241,7,c	;volatile
  6879   0023AE  0012               	return		;funcret
  6880   0023B0                     __end_of_PIN_MANAGER_Initialize:
  6881                           	callstack 0
  6882                           
  6883 ;; *************** function _OSCILLATOR_Initialize *****************
  6884 ;; Defined at:
  6885 ;;		line 59 in file "mcc_generated_files/mcc.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      void 
  6892 ;; Registers used:
  6893 ;;		wreg, status,2
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used: 1
  6905 ;; Hardware stack levels required when called: 5
  6906 ;; This function calls:
  6907 ;;		Nothing
  6908 ;; This function is called by:
  6909 ;;		_SYSTEM_Initialize
  6910 ;; This function uses a non-reentrant model
  6911 ;;
  6912                           
  6913                           	psect	text11
  6914   002482                     __ptext11:
  6915                           	callstack 0
  6916   002482                     _OSCILLATOR_Initialize:
  6917                           	callstack 24
  6918   002482                     
  6919                           ;mcc_generated_files/mcc.c: 62:     OSCCON = 0x30;
  6920   002482  0E30               	movlw	48
  6921   002484  6ED3               	movwf	211,c	;volatile
  6922   002486                     
  6923                           ;mcc_generated_files/mcc.c: 64:     OSCTUNE = 0x00;
  6924   002486  6A9B               	clrf	155,c	;volatile
  6925   002488  0012               	return		;funcret
  6926   00248A                     __end_of_OSCILLATOR_Initialize:
  6927                           	callstack 0
  6928                           
  6929 ;; *************** function _INTERRUPT_Initialize *****************
  6930 ;; Defined at:
  6931 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6932 ;; Parameters:    Size  Location     Type
  6933 ;;		None
  6934 ;; Auto vars:     Size  Location     Type
  6935 ;;		None
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  1    wreg      void 
  6938 ;; Registers used:
  6939 ;;		None
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6948 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6949 ;;Total ram usage:        0 bytes
  6950 ;; Hardware stack levels used: 1
  6951 ;; Hardware stack levels required when called: 5
  6952 ;; This function calls:
  6953 ;;		Nothing
  6954 ;; This function is called by:
  6955 ;;		_SYSTEM_Initialize
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text12
  6960   00248A                     __ptext12:
  6961                           	callstack 0
  6962   00248A                     _INTERRUPT_Initialize:
  6963                           	callstack 24
  6964   00248A                     
  6965                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 1;
  6966   00248A  8ED0               	bsf	208,7,c	;volatile
  6967                           
  6968                           ;mcc_generated_files/interrupt_manager.c: 60:     IPR1bits.SSPIP = 1;
  6969   00248C  869F               	bsf	159,3,c	;volatile
  6970                           
  6971                           ;mcc_generated_files/interrupt_manager.c: 63:     IPR2bits.BCLIP = 1;
  6972   00248E  86A2               	bsf	162,3,c	;volatile
  6973   002490  0012               	return		;funcret
  6974   002492                     __end_of_INTERRUPT_Initialize:
  6975                           	callstack 0
  6976                           
  6977 ;; *************** function _I2C_Initialize *****************
  6978 ;; Defined at:
  6979 ;;		line 108 in file "mcc_generated_files/i2c_slave.c"
  6980 ;; Parameters:    Size  Location     Type
  6981 ;;		None
  6982 ;; Auto vars:     Size  Location     Type
  6983 ;;		None
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  1    wreg      void 
  6986 ;; Registers used:
  6987 ;;		wreg, status,2, status,0
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;Total ram usage:        0 bytes
  6998 ;; Hardware stack levels used: 1
  6999 ;; Hardware stack levels required when called: 5
  7000 ;; This function calls:
  7001 ;;		Nothing
  7002 ;; This function is called by:
  7003 ;;		_SYSTEM_Initialize
  7004 ;;		_I2C_Enable
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text13
  7009   00242E                     __ptext13:
  7010                           	callstack 0
  7011   00242E                     _I2C_Initialize:
  7012                           	callstack 24
  7013   00242E                     
  7014                           ;mcc_generated_files/i2c_slave.c: 110:     SSPSTAT = 0x80;
  7015   00242E  0E80               	movlw	128
  7016   002430  6EC7               	movwf	199,c	;volatile
  7017   002432                     
  7018                           ;mcc_generated_files/i2c_slave.c: 111:     SSPCON1 |= 0x06;
  7019   002432  0E06               	movlw	6
  7020   002434  12C6               	iorwf	198,f,c	;volatile
  7021   002436                     
  7022                           ;mcc_generated_files/i2c_slave.c: 112:     SSPCON2 = 0x00;
  7023   002436  6AC5               	clrf	197,c	;volatile
  7024   002438                     
  7025                           ;mcc_generated_files/i2c_slave.c: 113:     SSPCON1bits.SSPEN = 0;
  7026   002438  9AC6               	bcf	198,5,c	;volatile
  7027   00243A  0012               	return		;funcret
  7028   00243C                     __end_of_I2C_Initialize:
  7029                           	callstack 0
  7030                           
  7031 ;; *************** function _LED_init *****************
  7032 ;; Defined at:
  7033 ;;		line 11 in file "ECU_layer/LED/ecu_led.c"
  7034 ;; Parameters:    Size  Location     Type
  7035 ;;  led_config      1    9[COMRAM] PTR const struct .
  7036 ;;		 -> GREEN_LED(1), RED_LED(1), 
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;  LED             1   12[COMRAM] struct .
  7039 ;;  rt              1   11[COMRAM] unsigned char 
  7040 ;; Return value:  Size  Location     Type
  7041 ;;                  1    wreg      unsigned char 
  7042 ;; Registers used:
  7043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7044 ;; Tracked objects:
  7045 ;;		On entry : 0/0
  7046 ;;		On exit  : 0/0
  7047 ;;		Unchanged: 0/0
  7048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7049 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7052 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7053 ;;Total ram usage:        4 bytes
  7054 ;; Hardware stack levels used: 1
  7055 ;; Hardware stack levels required when called: 6
  7056 ;; This function calls:
  7057 ;;		_gpio_pin_direction_initialize
  7058 ;; This function is called by:
  7059 ;;		_main
  7060 ;; This function uses a non-reentrant model
  7061 ;;
  7062                           
  7063                           	psect	text14
  7064   001D24                     __ptext14:
  7065                           	callstack 0
  7066   001D24                     _LED_init:
  7067                           	callstack 24
  7068   001D24                     
  7069                           ;ECU_layer/LED/ecu_led.c: 12:     STD_ReturnType rt = (STD_ReturnType)0x01;
  7070   001D24  0E01               	movlw	1
  7071   001D26  6E44               	movwf	LED_init@rt^0,c
  7072                           
  7073                           ;ECU_layer/LED/ecu_led.c: 13:      if(((void*)0) == led_config || led_config->pin_name >
      +                           8 -1 || led_config->port_name > 5 -1 ){
  7074   001D28  5042               	movf	LED_init@led_config^0,w,c
  7075   001D2A  B4D8               	btfsc	status,2,c
  7076   001D2C  EF9A  F00E         	goto	u4501
  7077   001D30  EF9C  F00E         	goto	u4500
  7078   001D34                     u4501:
  7079   001D34  EFB8  F00E         	goto	l2260
  7080   001D38                     u4500:
  7081   001D38  5042               	movf	LED_init@led_config^0,w,c
  7082   001D3A  6ED9               	movwf	fsr2l,c
  7083   001D3C  6ADA               	clrf	fsr2h,c
  7084   001D3E  38DF               	swapf	223,w,c
  7085   001D40  0B07               	andlw	7
  7086   001D42  6E43               	movwf	??_LED_init^0,c
  7087   001D44  0E08               	movlw	8
  7088   001D46  6043               	cpfslt	??_LED_init^0,c
  7089   001D48  EFA8  F00E         	goto	u4511
  7090   001D4C  EFAA  F00E         	goto	u4510
  7091   001D50                     u4511:
  7092   001D50  EFB8  F00E         	goto	l2260
  7093   001D54                     u4510:
  7094   001D54  5042               	movf	LED_init@led_config^0,w,c
  7095   001D56  6ED9               	movwf	fsr2l,c
  7096   001D58  6ADA               	clrf	fsr2h,c
  7097   001D5A  50DF               	movf	223,w,c
  7098   001D5C  0B0F               	andlw	15
  7099   001D5E  6E43               	movwf	??_LED_init^0,c
  7100   001D60  0E04               	movlw	4
  7101   001D62  6443               	cpfsgt	??_LED_init^0,c
  7102   001D64  EFB6  F00E         	goto	u4521
  7103   001D68  EFB8  F00E         	goto	u4520
  7104   001D6C                     u4521:
  7105   001D6C  EFBB  F00E         	goto	l2258
  7106   001D70                     u4520:
  7107   001D70                     l2260:
  7108                           
  7109                           ;ECU_layer/LED/ecu_led.c: 14:         rt = (STD_ReturnType)0x00;
  7110   001D70  6A44               	clrf	LED_init@rt^0,c
  7111                           
  7112                           ;ECU_layer/LED/ecu_led.c: 15:     }
  7113   001D72  EFE3  F00E         	goto	l6994
  7114   001D76                     l2258:
  7115                           
  7116                           ;ECU_layer/LED/ecu_led.c: 17:         pinConfig_t LED ={
  7117   001D76  C028  F045         	movff	LED_init@F3461,LED_init@LED
  7118   001D7A  5042               	movf	LED_init@led_config^0,w,c
  7119   001D7C  6ED9               	movwf	fsr2l,c
  7120   001D7E  6ADA               	clrf	fsr2h,c
  7121   001D80  50DF               	movf	223,w,c
  7122   001D82  0B0F               	andlw	15
  7123   001D84  6E43               	movwf	??_LED_init^0,c
  7124   001D86  5045               	movf	LED_init@LED^0,w,c
  7125   001D88  1843               	xorwf	??_LED_init^0,w,c
  7126   001D8A  0BF8               	andlw	-8
  7127   001D8C  1843               	xorwf	??_LED_init^0,w,c
  7128   001D8E  6E45               	movwf	LED_init@LED^0,c
  7129   001D90  5042               	movf	LED_init@led_config^0,w,c
  7130   001D92  6ED9               	movwf	fsr2l,c
  7131   001D94  6ADA               	clrf	fsr2h,c
  7132   001D96  38DF               	swapf	223,w,c
  7133   001D98  0B07               	andlw	7
  7134   001D9A  6E43               	movwf	??_LED_init^0,c
  7135   001D9C  4643               	rlncf	??_LED_init^0,f,c
  7136   001D9E  4643               	rlncf	??_LED_init^0,f,c
  7137   001DA0  4643               	rlncf	??_LED_init^0,f,c
  7138   001DA2  5045               	movf	LED_init@LED^0,w,c
  7139   001DA4  1843               	xorwf	??_LED_init^0,w,c
  7140   001DA6  0BC7               	andlw	-57
  7141   001DA8  1843               	xorwf	??_LED_init^0,w,c
  7142   001DAA  6E45               	movwf	LED_init@LED^0,c
  7143   001DAC  9C45               	bcf	LED_init@LED^0,6,c
  7144   001DAE  5042               	movf	LED_init@led_config^0,w,c
  7145   001DB0  6ED9               	movwf	fsr2l,c
  7146   001DB2  6ADA               	clrf	fsr2h,c
  7147   001DB4  AEDF               	btfss	indf2,7,c
  7148   001DB6  D002               	bra	u4535
  7149   001DB8  8E45               	bsf	LED_init@LED^0,7,c
  7150   001DBA  D001               	bra	u4537
  7151   001DBC                     u4535:
  7152   001DBC  9E45               	bcf	LED_init@LED^0,7,c
  7153   001DBE                     u4537:
  7154   001DBE                     
  7155                           ;ECU_layer/LED/ecu_led.c: 23:         gpio_pin_direction_initialize(&LED);
  7156   001DBE  0E45               	movlw	low LED_init@LED
  7157   001DC0  6E3E               	movwf	gpio_pin_direction_initialize@pinConfig^0,c
  7158   001DC2  EC15  F008         	call	_gpio_pin_direction_initialize	;wreg free
  7159   001DC6                     l6994:
  7160                           
  7161                           ;ECU_layer/LED/ecu_led.c: 26:     return rt;
  7162   001DC6  5044               	movf	LED_init@rt^0,w,c
  7163   001DC8  0012               	return		;funcret
  7164   001DCA                     __end_of_LED_init:
  7165                           	callstack 0
  7166                           
  7167 ;; *************** function _I2C_Open *****************
  7168 ;; Defined at:
  7169 ;;		line 116 in file "mcc_generated_files/i2c_slave.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;		None
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;		None
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  1    wreg      void 
  7176 ;; Registers used:
  7177 ;;		wreg, status,2, status,0, cstack
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7187 ;;Total ram usage:        0 bytes
  7188 ;; Hardware stack levels used: 1
  7189 ;; Hardware stack levels required when called: 6
  7190 ;; This function calls:
  7191 ;;		_I2C_SlaveEnableIrq
  7192 ;;		_I2C_SlaveOpen
  7193 ;;		_I2C_SlaveSetAddrIntHandler
  7194 ;;		_I2C_SlaveSetBusColIntHandler
  7195 ;;		_I2C_SlaveSetIsrHandler
  7196 ;;		_I2C_SlaveSetReadIntHandler
  7197 ;;		_I2C_SlaveSetSlaveAddr
  7198 ;;		_I2C_SlaveSetSlaveMask
  7199 ;;		_I2C_SlaveSetWrColIntHandler
  7200 ;;		_I2C_SlaveSetWriteIntHandler
  7201 ;; This function is called by:
  7202 ;;		_main
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text15
  7207   002060                     __ptext15:
  7208                           	callstack 0
  7209   002060                     _I2C_Open:
  7210                           	callstack 24
  7211   002060                     
  7212                           ;mcc_generated_files/i2c_slave.c: 118:     I2C_SlaveOpen();
  7213   002060  ECD8  F011         	call	_I2C_SlaveOpen	;wreg free
  7214   002064                     
  7215                           ;mcc_generated_files/i2c_slave.c: 119:     I2C_SlaveSetSlaveAddr(80);
  7216   002064  0E50               	movlw	80
  7217   002066  EC4D  F012         	call	_I2C_SlaveSetSlaveAddr
  7218   00206A                     
  7219                           ;mcc_generated_files/i2c_slave.c: 120:     I2C_SlaveSetSlaveMask(127);
  7220   00206A  0E7F               	movlw	127
  7221   00206C  EC49  F012         	call	_I2C_SlaveSetSlaveMask
  7222                           
  7223                           ;mcc_generated_files/i2c_slave.c: 121:     I2C_SlaveSetIsrHandler(I2C_Isr);
  7224   002070  0E28               	movlw	low _I2C_Isr
  7225   002072  6E3E               	movwf	I2C_SlaveSetIsrHandler@handler^0,c
  7226   002074  0E19               	movlw	high _I2C_Isr
  7227   002076  6E3F               	movwf	(I2C_SlaveSetIsrHandler@handler+1)^0,c
  7228   002078  EC2D  F012         	call	_I2C_SlaveSetIsrHandler	;wreg free
  7229                           
  7230                           ;mcc_generated_files/i2c_slave.c: 122:     I2C_SlaveSetBusColIntHandler(I2C_SlaveDefBusC
      +                          olInterruptHandler);
  7231   00207C  0E00               	movlw	0
  7232   00207E  6E3E               	movwf	I2C_SlaveSetBusColIntHandler@handler^0,c
  7233   002080  0E00               	movlw	0
  7234   002082  6E3F               	movwf	(I2C_SlaveSetBusColIntHandler@handler+1)^0,c
  7235   002084  EC32  F012         	call	_I2C_SlaveSetBusColIntHandler	;wreg free
  7236                           
  7237                           ;mcc_generated_files/i2c_slave.c: 123:     I2C_SlaveSetWriteIntHandler(I2C_SlaveDefWrInt
      +                          erruptHandler);
  7238   002088  0EA2               	movlw	low _I2C_SlaveDefWrInterruptHandler
  7239   00208A  6E3E               	movwf	I2C_SlaveSetWriteIntHandler@handler^0,c
  7240   00208C  0E24               	movlw	high _I2C_SlaveDefWrInterruptHandler
  7241   00208E  6E3F               	movwf	(I2C_SlaveSetWriteIntHandler@handler+1)^0,c
  7242   002090  EC1E  F012         	call	_I2C_SlaveSetWriteIntHandler	;wreg free
  7243                           
  7244                           ;mcc_generated_files/i2c_slave.c: 124:     I2C_SlaveSetReadIntHandler(I2C_SlaveDefRdInte
      +                          rruptHandler);
  7245   002094  0EB2               	movlw	low _I2C_SlaveDefRdInterruptHandler
  7246   002096  6E3E               	movwf	I2C_SlaveSetReadIntHandler@handler^0,c
  7247   002098  0E24               	movlw	high _I2C_SlaveDefRdInterruptHandler
  7248   00209A  6E3F               	movwf	(I2C_SlaveSetReadIntHandler@handler+1)^0,c
  7249   00209C  EC28  F012         	call	_I2C_SlaveSetReadIntHandler	;wreg free
  7250                           
  7251                           ;mcc_generated_files/i2c_slave.c: 125:     I2C_SlaveSetAddrIntHandler(I2C_SlaveDefAddrIn
      +                          terruptHandler);
  7252   0020A0  0EBA               	movlw	low _I2C_SlaveDefAddrInterruptHandler
  7253   0020A2  6E3E               	movwf	I2C_SlaveSetAddrIntHandler@handler^0,c
  7254   0020A4  0E24               	movlw	high _I2C_SlaveDefAddrInterruptHandler
  7255   0020A6  6E3F               	movwf	(I2C_SlaveSetAddrIntHandler@handler+1)^0,c
  7256   0020A8  EC37  F012         	call	_I2C_SlaveSetAddrIntHandler	;wreg free
  7257                           
  7258                           ;mcc_generated_files/i2c_slave.c: 126:     I2C_SlaveSetWrColIntHandler(I2C_SlaveDefWrCol
      +                          InterruptHandler);
  7259   0020AC  0E00               	movlw	0
  7260   0020AE  6E3E               	movwf	I2C_SlaveSetWrColIntHandler@handler^0,c
  7261   0020B0  0E00               	movlw	0
  7262   0020B2  6E3F               	movwf	(I2C_SlaveSetWrColIntHandler@handler+1)^0,c
  7263   0020B4  EC23  F012         	call	_I2C_SlaveSetWrColIntHandler	;wreg free
  7264   0020B8                     
  7265                           ;mcc_generated_files/i2c_slave.c: 127:     I2C_SlaveEnableIrq();
  7266   0020B8  EC64  F012         	call	_I2C_SlaveEnableIrq	;wreg free
  7267   0020BC  0012               	return		;funcret
  7268   0020BE                     __end_of_I2C_Open:
  7269                           	callstack 0
  7270                           
  7271 ;; *************** function _I2C_SlaveSetWriteIntHandler *****************
  7272 ;; Defined at:
  7273 ;;		line 246 in file "mcc_generated_files/i2c_slave.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  handler         2    5[COMRAM] PTR FTN()void 
  7276 ;;		 -> I2C_SlaveDefWrInterruptHandler(1), 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  1    wreg      void 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7288 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7291 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7292 ;;Total ram usage:        2 bytes
  7293 ;; Hardware stack levels used: 1
  7294 ;; Hardware stack levels required when called: 5
  7295 ;; This function calls:
  7296 ;;		Nothing
  7297 ;; This function is called by:
  7298 ;;		_I2C_Open
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           	psect	text16
  7303   00243C                     __ptext16:
  7304                           	callstack 0
  7305   00243C                     _I2C_SlaveSetWriteIntHandler:
  7306                           	callstack 24
  7307   00243C                     
  7308                           ;mcc_generated_files/i2c_slave.c: 247:     I2C_SlaveWrInterruptHandler = handler;
  7309   00243C  C03E  F019         	movff	I2C_SlaveSetWriteIntHandler@handler,_I2C_SlaveWrInterruptHandler
  7310   002440  C03F  F01A         	movff	I2C_SlaveSetWriteIntHandler@handler+1,_I2C_SlaveWrInterruptHandler+1
  7311   002444  0012               	return		;funcret
  7312   002446                     __end_of_I2C_SlaveSetWriteIntHandler:
  7313                           	callstack 0
  7314                           
  7315 ;; *************** function _I2C_SlaveSetWrColIntHandler *****************
  7316 ;; Defined at:
  7317 ;;		line 279 in file "mcc_generated_files/i2c_slave.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  handler         2    5[COMRAM] PTR FTN()void 
  7320 ;;		 -> I2C_SlaveDefWrColInterruptHandler(1), 
  7321 ;; Auto vars:     Size  Location     Type
  7322 ;;		None
  7323 ;; Return value:  Size  Location     Type
  7324 ;;                  1    wreg      void 
  7325 ;; Registers used:
  7326 ;;		wreg, status,2, status,0
  7327 ;; Tracked objects:
  7328 ;;		On entry : 0/0
  7329 ;;		On exit  : 0/0
  7330 ;;		Unchanged: 0/0
  7331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7336 ;;Total ram usage:        2 bytes
  7337 ;; Hardware stack levels used: 1
  7338 ;; Hardware stack levels required when called: 5
  7339 ;; This function calls:
  7340 ;;		Nothing
  7341 ;; This function is called by:
  7342 ;;		_I2C_Open
  7343 ;; This function uses a non-reentrant model
  7344 ;;
  7345                           
  7346                           	psect	text17
  7347   002446                     __ptext17:
  7348                           	callstack 0
  7349   002446                     _I2C_SlaveSetWrColIntHandler:
  7350                           	callstack 24
  7351   002446                     
  7352                           ;mcc_generated_files/i2c_slave.c: 280:     I2C_SlaveWrColInterruptHandler = handler;
  7353   002446  C03E  F013         	movff	I2C_SlaveSetWrColIntHandler@handler,_I2C_SlaveWrColInterruptHandler
  7354   00244A  C03F  F014         	movff	I2C_SlaveSetWrColIntHandler@handler+1,_I2C_SlaveWrColInterruptHandler+1
  7355   00244E  0012               	return		;funcret
  7356   002450                     __end_of_I2C_SlaveSetWrColIntHandler:
  7357                           	callstack 0
  7358                           
  7359 ;; *************** function _I2C_SlaveSetSlaveMask *****************
  7360 ;; Defined at:
  7361 ;;		line 336 in file "mcc_generated_files/i2c_slave.c"
  7362 ;; Parameters:    Size  Location     Type
  7363 ;;  maskAddr        1    wreg     unsigned char 
  7364 ;; Auto vars:     Size  Location     Type
  7365 ;;  maskAddr        1    5[COMRAM] unsigned char 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  1    wreg      void 
  7368 ;; Registers used:
  7369 ;;		wreg
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7379 ;;Total ram usage:        1 bytes
  7380 ;; Hardware stack levels used: 1
  7381 ;; Hardware stack levels required when called: 5
  7382 ;; This function calls:
  7383 ;;		Nothing
  7384 ;; This function is called by:
  7385 ;;		_I2C_Open
  7386 ;; This function uses a non-reentrant model
  7387 ;;
  7388                           
  7389                           	psect	text18
  7390   002492                     __ptext18:
  7391                           	callstack 0
  7392   002492                     _I2C_SlaveSetSlaveMask:
  7393                           	callstack 24
  7394                           
  7395                           ;incstack = 0
  7396                           ;I2C_SlaveSetSlaveMask@maskAddr stored from wreg
  7397   002492  6E3E               	movwf	I2C_SlaveSetSlaveMask@maskAddr^0,c
  7398   002494                     
  7399                           ;mcc_generated_files/i2c_slave.c: 336: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveMask(uint8_t maskAddr);mcc_generated_files/i2c_slave.c: 337: {;mcc_generated_files/i
      +                          2c_slave.c: 338:     SSPMSK = (uint8_t) (maskAddr);
  7400   002494  C03E  FF77         	movff	I2C_SlaveSetSlaveMask@maskAddr,3959	;volatile
  7401   002498  0012               	return		;funcret
  7402   00249A                     __end_of_I2C_SlaveSetSlaveMask:
  7403                           	callstack 0
  7404                           
  7405 ;; *************** function _I2C_SlaveSetSlaveAddr *****************
  7406 ;; Defined at:
  7407 ;;		line 331 in file "mcc_generated_files/i2c_slave.c"
  7408 ;; Parameters:    Size  Location     Type
  7409 ;;  slaveAddr       1    wreg     unsigned char 
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;  slaveAddr       1    5[COMRAM] unsigned char 
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1    wreg      void 
  7414 ;; Registers used:
  7415 ;;		wreg
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7422 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7424 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7425 ;;Total ram usage:        1 bytes
  7426 ;; Hardware stack levels used: 1
  7427 ;; Hardware stack levels required when called: 5
  7428 ;; This function calls:
  7429 ;;		Nothing
  7430 ;; This function is called by:
  7431 ;;		_I2C_Open
  7432 ;; This function uses a non-reentrant model
  7433 ;;
  7434                           
  7435                           	psect	text19
  7436   00249A                     __ptext19:
  7437                           	callstack 0
  7438   00249A                     _I2C_SlaveSetSlaveAddr:
  7439                           	callstack 24
  7440                           
  7441                           ;incstack = 0
  7442                           ;I2C_SlaveSetSlaveAddr@slaveAddr stored from wreg
  7443   00249A  6E3E               	movwf	I2C_SlaveSetSlaveAddr@slaveAddr^0,c
  7444   00249C                     
  7445                           ;mcc_generated_files/i2c_slave.c: 331: static __attribute__((inline)) void I2C_SlaveSetS
      +                          laveAddr(uint8_t slaveAddr);mcc_generated_files/i2c_slave.c: 332: {;mcc_generated_files/
      +                          i2c_slave.c: 333:     SSPADD = (uint8_t) (slaveAddr);
  7446   00249C  C03E  FFC8         	movff	I2C_SlaveSetSlaveAddr@slaveAddr,4040	;volatile
  7447   0024A0  0012               	return		;funcret
  7448   0024A2                     __end_of_I2C_SlaveSetSlaveAddr:
  7449                           	callstack 0
  7450                           
  7451 ;; *************** function _I2C_SlaveSetReadIntHandler *****************
  7452 ;; Defined at:
  7453 ;;		line 229 in file "mcc_generated_files/i2c_slave.c"
  7454 ;; Parameters:    Size  Location     Type
  7455 ;;  handler         2    5[COMRAM] PTR FTN()void 
  7456 ;;		 -> I2C_SlaveDefRdInterruptHandler(1), I2C_DefaultInterruptHandler(1), 
  7457 ;; Auto vars:     Size  Location     Type
  7458 ;;		None
  7459 ;; Return value:  Size  Location     Type
  7460 ;;                  1    wreg      void 
  7461 ;; Registers used:
  7462 ;;		wreg, status,2, status,0
  7463 ;; Tracked objects:
  7464 ;;		On entry : 0/0
  7465 ;;		On exit  : 0/0
  7466 ;;		Unchanged: 0/0
  7467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7468 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7471 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7472 ;;Total ram usage:        2 bytes
  7473 ;; Hardware stack levels used: 1
  7474 ;; Hardware stack levels required when called: 5
  7475 ;; This function calls:
  7476 ;;		Nothing
  7477 ;; This function is called by:
  7478 ;;		_main
  7479 ;;		_I2C_Open
  7480 ;; This function uses a non-reentrant model
  7481 ;;
  7482                           
  7483                           	psect	text20
  7484   002450                     __ptext20:
  7485                           	callstack 0
  7486   002450                     _I2C_SlaveSetReadIntHandler:
  7487                           	callstack 25
  7488   002450                     
  7489                           ;mcc_generated_files/i2c_slave.c: 230:     I2C_SlaveRdInterruptHandler = handler;
  7490   002450  C03E  F01B         	movff	I2C_SlaveSetReadIntHandler@handler,_I2C_SlaveRdInterruptHandler
  7491   002454  C03F  F01C         	movff	I2C_SlaveSetReadIntHandler@handler+1,_I2C_SlaveRdInterruptHandler+1
  7492   002458  0012               	return		;funcret
  7493   00245A                     __end_of_I2C_SlaveSetReadIntHandler:
  7494                           	callstack 0
  7495                           
  7496 ;; *************** function _I2C_SlaveSetIsrHandler *****************
  7497 ;; Defined at:
  7498 ;;		line 223 in file "mcc_generated_files/i2c_slave.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;  handler         2    5[COMRAM] PTR FTN()void 
  7501 ;;		 -> I2C_Isr(1), 
  7502 ;; Auto vars:     Size  Location     Type
  7503 ;;		None
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  1    wreg      void 
  7506 ;; Registers used:
  7507 ;;		wreg, status,2, status,0
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7516 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7517 ;;Total ram usage:        2 bytes
  7518 ;; Hardware stack levels used: 1
  7519 ;; Hardware stack levels required when called: 5
  7520 ;; This function calls:
  7521 ;;		Nothing
  7522 ;; This function is called by:
  7523 ;;		_I2C_Open
  7524 ;; This function uses a non-reentrant model
  7525 ;;
  7526                           
  7527                           	psect	text21
  7528   00245A                     __ptext21:
  7529                           	callstack 0
  7530   00245A                     _I2C_SlaveSetIsrHandler:
  7531                           	callstack 24
  7532   00245A                     
  7533                           ;mcc_generated_files/i2c_slave.c: 223: void I2C_SlaveSetIsrHandler(i2cInterruptHandler h
      +                          andler);mcc_generated_files/i2c_slave.c: 224: {;mcc_generated_files/i2c_slave.c: 225:   
      +                            MSSP_InterruptHandler = handler;
  7534   00245A  C03E  F01D         	movff	I2C_SlaveSetIsrHandler@handler,_MSSP_InterruptHandler
  7535   00245E  C03F  F01E         	movff	I2C_SlaveSetIsrHandler@handler+1,_MSSP_InterruptHandler+1
  7536   002462  0012               	return		;funcret
  7537   002464                     __end_of_I2C_SlaveSetIsrHandler:
  7538                           	callstack 0
  7539                           
  7540 ;; *************** function _I2C_SlaveSetBusColIntHandler *****************
  7541 ;; Defined at:
  7542 ;;		line 295 in file "mcc_generated_files/i2c_slave.c"
  7543 ;; Parameters:    Size  Location     Type
  7544 ;;  handler         2    5[COMRAM] PTR FTN()void 
  7545 ;;		 -> I2C_SlaveDefBusColInterruptHandler(1), 
  7546 ;; Auto vars:     Size  Location     Type
  7547 ;;		None
  7548 ;; Return value:  Size  Location     Type
  7549 ;;                  1    wreg      void 
  7550 ;; Registers used:
  7551 ;;		wreg, status,2, status,0
  7552 ;; Tracked objects:
  7553 ;;		On entry : 0/0
  7554 ;;		On exit  : 0/0
  7555 ;;		Unchanged: 0/0
  7556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7561 ;;Total ram usage:        2 bytes
  7562 ;; Hardware stack levels used: 1
  7563 ;; Hardware stack levels required when called: 5
  7564 ;; This function calls:
  7565 ;;		Nothing
  7566 ;; This function is called by:
  7567 ;;		_I2C_Open
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text22
  7572   002464                     __ptext22:
  7573                           	callstack 0
  7574   002464                     _I2C_SlaveSetBusColIntHandler:
  7575                           	callstack 24
  7576   002464                     
  7577                           ;mcc_generated_files/i2c_slave.c: 296:     I2C_SlaveBusColInterruptHandler = handler;
  7578   002464  C03E  F015         	movff	I2C_SlaveSetBusColIntHandler@handler,_I2C_SlaveBusColInterruptHandler
  7579   002468  C03F  F016         	movff	I2C_SlaveSetBusColIntHandler@handler+1,_I2C_SlaveBusColInterruptHandler+1
  7580   00246C  0012               	return		;funcret
  7581   00246E                     __end_of_I2C_SlaveSetBusColIntHandler:
  7582                           	callstack 0
  7583                           
  7584 ;; *************** function _I2C_SlaveSetAddrIntHandler *****************
  7585 ;; Defined at:
  7586 ;;		line 263 in file "mcc_generated_files/i2c_slave.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  handler         2    5[COMRAM] PTR FTN()void 
  7589 ;;		 -> I2C_SlaveDefAddrInterruptHandler(1), 
  7590 ;; Auto vars:     Size  Location     Type
  7591 ;;		None
  7592 ;; Return value:  Size  Location     Type
  7593 ;;                  1    wreg      void 
  7594 ;; Registers used:
  7595 ;;		wreg, status,2, status,0
  7596 ;; Tracked objects:
  7597 ;;		On entry : 0/0
  7598 ;;		On exit  : 0/0
  7599 ;;		Unchanged: 0/0
  7600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7605 ;;Total ram usage:        2 bytes
  7606 ;; Hardware stack levels used: 1
  7607 ;; Hardware stack levels required when called: 5
  7608 ;; This function calls:
  7609 ;;		Nothing
  7610 ;; This function is called by:
  7611 ;;		_I2C_Open
  7612 ;; This function uses a non-reentrant model
  7613 ;;
  7614                           
  7615                           	psect	text23
  7616   00246E                     __ptext23:
  7617                           	callstack 0
  7618   00246E                     _I2C_SlaveSetAddrIntHandler:
  7619                           	callstack 24
  7620   00246E                     
  7621                           ;mcc_generated_files/i2c_slave.c: 264:     I2C_SlaveAddrInterruptHandler = handler;
  7622   00246E  C03E  F017         	movff	I2C_SlaveSetAddrIntHandler@handler,_I2C_SlaveAddrInterruptHandler
  7623   002472  C03F  F018         	movff	I2C_SlaveSetAddrIntHandler@handler+1,_I2C_SlaveAddrInterruptHandler+1
  7624   002476  0012               	return		;funcret
  7625   002478                     __end_of_I2C_SlaveSetAddrIntHandler:
  7626                           	callstack 0
  7627                           
  7628 ;; *************** function _I2C_SlaveOpen *****************
  7629 ;; Defined at:
  7630 ;;		line 310 in file "mcc_generated_files/i2c_slave.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;		None
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;                  1    wreg      _Bool 
  7637 ;; Registers used:
  7638 ;;		wreg, status,2, status,0
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;Total ram usage:        0 bytes
  7649 ;; Hardware stack levels used: 1
  7650 ;; Hardware stack levels required when called: 5
  7651 ;; This function calls:
  7652 ;;		Nothing
  7653 ;; This function is called by:
  7654 ;;		_I2C_Open
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text24
  7659   0023B0                     __ptext24:
  7660                           	callstack 0
  7661   0023B0                     _I2C_SlaveOpen:
  7662                           	callstack 24
  7663   0023B0                     
  7664                           ;mcc_generated_files/i2c_slave.c: 312:     if(!SSPCON1bits.SSPEN)
  7665   0023B0  BAC6               	btfsc	198,5,c	;volatile
  7666   0023B2  EFDD  F011         	goto	u4221
  7667   0023B6  EFDF  F011         	goto	u4220
  7668   0023BA                     u4221:
  7669   0023BA  EFE5  F011         	goto	l385
  7670   0023BE                     u4220:
  7671   0023BE                     
  7672                           ;mcc_generated_files/i2c_slave.c: 313:     {;mcc_generated_files/i2c_slave.c: 314:      
      +                             SSPSTAT = 0x80;
  7673   0023BE  0E80               	movlw	128
  7674   0023C0  6EC7               	movwf	199,c	;volatile
  7675   0023C2                     
  7676                           ;mcc_generated_files/i2c_slave.c: 315:         SSPCON1 |= 0x06;
  7677   0023C2  0E06               	movlw	6
  7678   0023C4  12C6               	iorwf	198,f,c	;volatile
  7679   0023C6                     
  7680                           ;mcc_generated_files/i2c_slave.c: 316:         SSPCON2 = 0x00;
  7681   0023C6  6AC5               	clrf	197,c	;volatile
  7682   0023C8                     
  7683                           ;mcc_generated_files/i2c_slave.c: 317:         SSPCON1bits.SSPEN = 1;
  7684   0023C8  8AC6               	bsf	198,5,c	;volatile
  7685   0023CA                     l385:
  7686   0023CA  0012               	return		;funcret
  7687   0023CC                     __end_of_I2C_SlaveOpen:
  7688                           	callstack 0
  7689                           
  7690 ;; *************** function _I2C_SlaveEnableIrq *****************
  7691 ;; Defined at:
  7692 ;;		line 341 in file "mcc_generated_files/i2c_slave.c"
  7693 ;; Parameters:    Size  Location     Type
  7694 ;;		None
  7695 ;; Auto vars:     Size  Location     Type
  7696 ;;		None
  7697 ;; Return value:  Size  Location     Type
  7698 ;;                  1    wreg      void 
  7699 ;; Registers used:
  7700 ;;		None
  7701 ;; Tracked objects:
  7702 ;;		On entry : 0/0
  7703 ;;		On exit  : 0/0
  7704 ;;		Unchanged: 0/0
  7705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7709 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7710 ;;Total ram usage:        0 bytes
  7711 ;; Hardware stack levels used: 1
  7712 ;; Hardware stack levels required when called: 5
  7713 ;; This function calls:
  7714 ;;		Nothing
  7715 ;; This function is called by:
  7716 ;;		_I2C_Open
  7717 ;; This function uses a non-reentrant model
  7718 ;;
  7719                           
  7720                           	psect	text25
  7721   0024C8                     __ptext25:
  7722                           	callstack 0
  7723   0024C8                     _I2C_SlaveEnableIrq:
  7724                           	callstack 24
  7725   0024C8                     
  7726                           ;mcc_generated_files/i2c_slave.c: 343:     PIE1bits.SSPIE = 1;
  7727   0024C8  869D               	bsf	157,3,c	;volatile
  7728   0024CA  0012               	return		;funcret
  7729   0024CC                     __end_of_I2C_SlaveEnableIrq:
  7730                           	callstack 0
  7731                           
  7732 ;; *************** function _ECU_LCD_4Bit_Send_char_Data_Position *****************
  7733 ;; Defined at:
  7734 ;;		line 93 in file "ECU_layer/LCD/LCD.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  _LCD            1   20[COMRAM] PTR const struct .
  7737 ;;		 -> LCD_1(6), 
  7738 ;;  _Row            1   21[COMRAM] unsigned char 
  7739 ;;  _Coloumn        1   22[COMRAM] unsigned char 
  7740 ;;  _Data           1   23[COMRAM] unsigned char 
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;  rt              1    0[BANK0 ] unsigned char 
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  1    wreg      unsigned char 
  7745 ;; Registers used:
  7746 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7752 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7753 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7755 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7756 ;;Total ram usage:        5 bytes
  7757 ;; Hardware stack levels used: 1
  7758 ;; Hardware stack levels required when called: 9
  7759 ;; This function calls:
  7760 ;;		_ECU_LCD_4Bit_Send_char_Data
  7761 ;;		_LCD_4Bits_Set_Curser
  7762 ;; This function is called by:
  7763 ;;		_main
  7764 ;;		_ECU_LCD_4Bit_Send_Custom_Char
  7765 ;; This function uses a non-reentrant model
  7766 ;;
  7767                           
  7768                           	psect	text26
  7769   0021C4                     __ptext26:
  7770                           	callstack 0
  7771   0021C4                     _ECU_LCD_4Bit_Send_char_Data_Position:
  7772                           	callstack 21
  7773   0021C4                     
  7774                           ;ECU_layer/LCD/LCD.c: 95:      if(((void*)0) == _LCD){
  7775   0021C4  504D               	movf	ECU_LCD_4Bit_Send_char_Data_Position@_LCD^0,w,c
  7776   0021C6  A4D8               	btfss	status,2,c
  7777   0021C8  EFE8  F010         	goto	u7321
  7778   0021CC  EFEA  F010         	goto	u7320
  7779   0021D0                     u7321:
  7780   0021D0  EFEE  F010         	goto	l9438
  7781   0021D4                     u7320:
  7782   0021D4                     
  7783                           ;ECU_layer/LCD/LCD.c: 96:         rt = (STD_ReturnType)0x00;
  7784   0021D4  0100               	movlb	0	; () banked
  7785   0021D6  6BD7               	clrf	ECU_LCD_4Bit_Send_char_Data_Position@rt& (0+255),b
  7786                           
  7787                           ;ECU_layer/LCD/LCD.c: 97:     }
  7788   0021D8  EF00  F011         	goto	l9440
  7789   0021DC                     l9438:
  7790                           
  7791                           ;ECU_layer/LCD/LCD.c: 99:         rt = LCD_4Bits_Set_Curser(_LCD, _Row, _Coloumn);
  7792   0021DC  C04D  F049         	movff	ECU_LCD_4Bit_Send_char_Data_Position@_LCD,LCD_4Bits_Set_Curser@_LCD
  7793   0021E0  C04E  F04A         	movff	ECU_LCD_4Bit_Send_char_Data_Position@_Row,LCD_4Bits_Set_Curser@row
  7794   0021E4  C04F  F04B         	movff	ECU_LCD_4Bit_Send_char_Data_Position@_Coloumn,LCD_4Bits_Set_Curser@coloumn
  7795   0021E8  ECE5  F00E         	call	_LCD_4Bits_Set_Curser	;wreg free
  7796   0021EC  0100               	movlb	0	; () banked
  7797   0021EE  6FD7               	movwf	ECU_LCD_4Bit_Send_char_Data_Position@rt& (0+255),b
  7798                           
  7799                           ;ECU_layer/LCD/LCD.c: 100:         rt = ECU_LCD_4Bit_Send_char_Data (_LCD, _Data);
  7800   0021F0  C04D  F046         	movff	ECU_LCD_4Bit_Send_char_Data_Position@_LCD,ECU_LCD_4Bit_Send_char_Data@_LCD
  7801   0021F4  C050  F047         	movff	ECU_LCD_4Bit_Send_char_Data_Position@_Data,ECU_LCD_4Bit_Send_char_Data@_Data
  7802   0021F8  EC5F  F010         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  7803   0021FC  0100               	movlb	0	; () banked
  7804   0021FE  6FD7               	movwf	ECU_LCD_4Bit_Send_char_Data_Position@rt& (0+255),b
  7805   002200                     l9440:
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;ECU_layer/LCD/LCD.c: 103:     return rt;
  7809   002200  51D7               	movf	ECU_LCD_4Bit_Send_char_Data_Position@rt& (0+255),w,b
  7810   002202                     
  7811                           ; BSR set to: 0
  7812   002202  0012               	return		;funcret
  7813   002204                     __end_of_ECU_LCD_4Bit_Send_char_Data_Position:
  7814                           	callstack 0
  7815                           
  7816 ;; *************** function _LCD_4Bits_Set_Curser *****************
  7817 ;; Defined at:
  7818 ;;		line 383 in file "ECU_layer/LCD/LCD.c"
  7819 ;; Parameters:    Size  Location     Type
  7820 ;;  _LCD            1   16[COMRAM] PTR const struct .
  7821 ;;		 -> LCD_1(6), 
  7822 ;;  row             1   17[COMRAM] unsigned char 
  7823 ;;  coloumn         1   18[COMRAM] unsigned char 
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;  rt              1   19[COMRAM] unsigned char 
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1    wreg      unsigned char 
  7828 ;; Registers used:
  7829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7835 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7838 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7839 ;;Total ram usage:        4 bytes
  7840 ;; Hardware stack levels used: 1
  7841 ;; Hardware stack levels required when called: 8
  7842 ;; This function calls:
  7843 ;;		_ECU_LCD_4Bit_Send_Command
  7844 ;; This function is called by:
  7845 ;;		_ECU_LCD_4Bit_Send_char_Data_Position
  7846 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           	psect	text27
  7851   001DCA                     __ptext27:
  7852                           	callstack 0
  7853   001DCA                     _LCD_4Bits_Set_Curser:
  7854                           	callstack 20
  7855   001DCA                     
  7856                           ;ECU_layer/LCD/LCD.c: 384:      STD_ReturnType rt = (STD_ReturnType)0x00;
  7857   001DCA  6A4C               	clrf	LCD_4Bits_Set_Curser@rt^0,c
  7858   001DCC                     
  7859                           ;ECU_layer/LCD/LCD.c: 385:      coloumn-- ;
  7860   001DCC  064B               	decf	LCD_4Bits_Set_Curser@coloumn^0,f,c
  7861   001DCE                     
  7862                           ;ECU_layer/LCD/LCD.c: 386:      if(((void*)0) == _LCD ){
  7863   001DCE  5049               	movf	LCD_4Bits_Set_Curser@_LCD^0,w,c
  7864   001DD0  A4D8               	btfss	status,2,c
  7865   001DD2  EFED  F00E         	goto	u7021
  7866   001DD6  EFEF  F00E         	goto	u7020
  7867   001DDA                     u7021:
  7868   001DDA  EF1A  F00F         	goto	l9162
  7869   001DDE                     u7020:
  7870   001DDE                     
  7871                           ;ECU_layer/LCD/LCD.c: 387:         rt = (STD_ReturnType)0x00;
  7872   001DDE  6A4C               	clrf	LCD_4Bits_Set_Curser@rt^0,c
  7873                           
  7874                           ;ECU_layer/LCD/LCD.c: 388:     }
  7875   001DE0  EF2D  F00F         	goto	l9164
  7876   001DE4                     l9152:
  7877                           
  7878                           ;ECU_layer/LCD/LCD.c: 392:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0x80 
      +                          + coloumn ));break;
  7879   001DE4  C049  F046         	movff	LCD_4Bits_Set_Curser@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  7880   001DE8  504B               	movf	LCD_4Bits_Set_Curser@coloumn^0,w,c
  7881   001DEA  0F80               	addlw	128
  7882   001DEC  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  7883   001DEE  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  7884   001DF2  6E4C               	movwf	LCD_4Bits_Set_Curser@rt^0,c
  7885   001DF4  EF2D  F00F         	goto	l9164
  7886   001DF8                     l9154:
  7887                           
  7888                           ;ECU_layer/LCD/LCD.c: 394:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0xc0 
      +                          + coloumn ));break;
  7889   001DF8  C049  F046         	movff	LCD_4Bits_Set_Curser@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  7890   001DFC  504B               	movf	LCD_4Bits_Set_Curser@coloumn^0,w,c
  7891   001DFE  0FC0               	addlw	192
  7892   001E00  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  7893   001E02  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  7894   001E06  6E4C               	movwf	LCD_4Bits_Set_Curser@rt^0,c
  7895   001E08  EF2D  F00F         	goto	l9164
  7896   001E0C                     l9156:
  7897                           
  7898                           ;ECU_layer/LCD/LCD.c: 396:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0x94 
      +                          + coloumn ));break;
  7899   001E0C  C049  F046         	movff	LCD_4Bits_Set_Curser@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  7900   001E10  504B               	movf	LCD_4Bits_Set_Curser@coloumn^0,w,c
  7901   001E12  0F94               	addlw	148
  7902   001E14  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  7903   001E16  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  7904   001E1A  6E4C               	movwf	LCD_4Bits_Set_Curser@rt^0,c
  7905   001E1C  EF2D  F00F         	goto	l9164
  7906   001E20                     l9158:
  7907                           
  7908                           ;ECU_layer/LCD/LCD.c: 398:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0xd4 
      +                          + coloumn ));break;
  7909   001E20  C049  F046         	movff	LCD_4Bits_Set_Curser@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  7910   001E24  504B               	movf	LCD_4Bits_Set_Curser@coloumn^0,w,c
  7911   001E26  0FD4               	addlw	212
  7912   001E28  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  7913   001E2A  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  7914   001E2E  6E4C               	movwf	LCD_4Bits_Set_Curser@rt^0,c
  7915   001E30  EF2D  F00F         	goto	l9164
  7916   001E34                     l9162:
  7917   001E34  504A               	movf	LCD_4Bits_Set_Curser@row^0,w,c
  7918                           
  7919                           ; Switch size 1, requested type "simple"
  7920                           ; Number of cases is 4, Range of values is 1 to 4
  7921                           ; switch strategies available:
  7922                           ; Name         Instructions Cycles
  7923                           ; simple_byte           13     7 (average)
  7924                           ;	Chosen strategy is simple_byte
  7925   001E36  0A01               	xorlw	1	; case 1
  7926   001E38  B4D8               	btfsc	status,2,c
  7927   001E3A  EFF2  F00E         	goto	l9152
  7928   001E3E  0A03               	xorlw	3	; case 2
  7929   001E40  B4D8               	btfsc	status,2,c
  7930   001E42  EFFC  F00E         	goto	l9154
  7931   001E46  0A01               	xorlw	1	; case 3
  7932   001E48  B4D8               	btfsc	status,2,c
  7933   001E4A  EF06  F00F         	goto	l9156
  7934   001E4E  0A07               	xorlw	7	; case 4
  7935   001E50  B4D8               	btfsc	status,2,c
  7936   001E52  EF10  F00F         	goto	l9158
  7937   001E56  EF2D  F00F         	goto	l9164
  7938   001E5A                     l9164:
  7939                           
  7940                           ;ECU_layer/LCD/LCD.c: 401:      return rt;
  7941   001E5A  504C               	movf	LCD_4Bits_Set_Curser@rt^0,w,c
  7942   001E5C  0012               	return		;funcret
  7943   001E5E                     __end_of_LCD_4Bits_Set_Curser:
  7944                           	callstack 0
  7945                           
  7946 ;; *************** function _ECU_LCD_4Bit_Send_char_Data *****************
  7947 ;; Defined at:
  7948 ;;		line 72 in file "ECU_layer/LCD/LCD.c"
  7949 ;; Parameters:    Size  Location     Type
  7950 ;;  _LCD            1   13[COMRAM] PTR const struct .
  7951 ;;		 -> LCD_1(6), 
  7952 ;;  _Data           1   14[COMRAM] unsigned char 
  7953 ;; Auto vars:     Size  Location     Type
  7954 ;;  rt              1   15[COMRAM] unsigned char 
  7955 ;; Return value:  Size  Location     Type
  7956 ;;                  1    wreg      unsigned char 
  7957 ;; Registers used:
  7958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7959 ;; Tracked objects:
  7960 ;;		On entry : 0/0
  7961 ;;		On exit  : 0/0
  7962 ;;		Unchanged: 0/0
  7963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7965 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7967 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7968 ;;Total ram usage:        3 bytes
  7969 ;; Hardware stack levels used: 1
  7970 ;; Hardware stack levels required when called: 7
  7971 ;; This function calls:
  7972 ;;		_LCD_4Bits_Send_Enable_Signal
  7973 ;;		_LCD_Send_4Bits
  7974 ;;		_gpio_pin_write_logic
  7975 ;; This function is called by:
  7976 ;;		_ECU_LCD_4Bit_Send_char_Data_Position
  7977 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
  7978 ;;		_ECU_LCD_4Bit_Send_String_Data
  7979 ;;		_ECU_LCD_4Bit_Send_Custom_Char
  7980 ;; This function uses a non-reentrant model
  7981 ;;
  7982                           
  7983                           	psect	text28
  7984   0020BE                     __ptext28:
  7985                           	callstack 0
  7986   0020BE                     _ECU_LCD_4Bit_Send_char_Data:
  7987                           	callstack 21
  7988   0020BE                     
  7989                           ;ECU_layer/LCD/LCD.c: 74:     if(((void*)0) == _LCD){
  7990   0020BE  5046               	movf	ECU_LCD_4Bit_Send_char_Data@_LCD^0,w,c
  7991   0020C0  A4D8               	btfss	status,2,c
  7992   0020C2  EF65  F010         	goto	u7011
  7993   0020C6  EF67  F010         	goto	u7010
  7994   0020CA                     u7011:
  7995   0020CA  EF6A  F010         	goto	l9138
  7996   0020CE                     u7010:
  7997   0020CE                     
  7998                           ;ECU_layer/LCD/LCD.c: 75:         rt = (STD_ReturnType)0x00;
  7999   0020CE  6A48               	clrf	ECU_LCD_4Bit_Send_char_Data@rt^0,c
  8000                           
  8001                           ;ECU_layer/LCD/LCD.c: 76:     }
  8002   0020D0  EF8A  F010         	goto	l9140
  8003   0020D4                     l9138:
  8004                           
  8005                           ;ECU_layer/LCD/LCD.c: 78:         rt = gpio_pin_write_logic(&(_LCD->LCD_RS), GPIO_Pin_Lo
      +                          gic_HIGH);
  8006   0020D4  C046  F03E         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,gpio_pin_write_logic@pinConfig
  8007   0020D8  0E01               	movlw	1
  8008   0020DA  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  8009   0020DC  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  8010   0020E0  6E48               	movwf	ECU_LCD_4Bit_Send_char_Data@rt^0,c
  8011                           
  8012                           ;ECU_layer/LCD/LCD.c: 80:         rt = LCD_Send_4Bits(_LCD, _Data >> 4);
  8013   0020E2  C046  F043         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,LCD_Send_4Bits@_LCD
  8014   0020E6  3847               	swapf	ECU_LCD_4Bit_Send_char_Data@_Data^0,w,c
  8015   0020E8  0B0F               	andlw	15
  8016   0020EA  6E44               	movwf	LCD_Send_4Bits@_Data^0,c
  8017   0020EC  EC67  F00F         	call	_LCD_Send_4Bits	;wreg free
  8018   0020F0  6E48               	movwf	ECU_LCD_4Bit_Send_char_Data@rt^0,c
  8019                           
  8020                           ;ECU_layer/LCD/LCD.c: 82:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
  8021   0020F2  C046  F043         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,LCD_4Bits_Send_Enable_Signal@_LCD
  8022   0020F6  EC02  F011         	call	_LCD_4Bits_Send_Enable_Signal	;wreg free
  8023   0020FA  6E48               	movwf	ECU_LCD_4Bit_Send_char_Data@rt^0,c
  8024                           
  8025                           ;ECU_layer/LCD/LCD.c: 84:         rt = LCD_Send_4Bits(_LCD, _Data);
  8026   0020FC  C046  F043         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,LCD_Send_4Bits@_LCD
  8027   002100  C047  F044         	movff	ECU_LCD_4Bit_Send_char_Data@_Data,LCD_Send_4Bits@_Data
  8028   002104  EC67  F00F         	call	_LCD_Send_4Bits	;wreg free
  8029   002108  6E48               	movwf	ECU_LCD_4Bit_Send_char_Data@rt^0,c
  8030                           
  8031                           ;ECU_layer/LCD/LCD.c: 86:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
  8032   00210A  C046  F043         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,LCD_4Bits_Send_Enable_Signal@_LCD
  8033   00210E  EC02  F011         	call	_LCD_4Bits_Send_Enable_Signal	;wreg free
  8034   002112  6E48               	movwf	ECU_LCD_4Bit_Send_char_Data@rt^0,c
  8035   002114                     l9140:
  8036                           
  8037                           ;ECU_layer/LCD/LCD.c: 89:     return rt;
  8038   002114  5048               	movf	ECU_LCD_4Bit_Send_char_Data@rt^0,w,c
  8039   002116  0012               	return		;funcret
  8040   002118                     __end_of_ECU_LCD_4Bit_Send_char_Data:
  8041                           	callstack 0
  8042                           
  8043 ;; *************** function _ECU_LCD_4Bit_Initialize *****************
  8044 ;; Defined at:
  8045 ;;		line 20 in file "ECU_layer/LCD/LCD.c"
  8046 ;; Parameters:    Size  Location     Type
  8047 ;;  _LCD            1   16[COMRAM] PTR const struct .
  8048 ;;		 -> LCD_1(6), 
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;  rt              1   19[COMRAM] unsigned char 
  8051 ;;  LCD_Counter     1   18[COMRAM] unsigned char 
  8052 ;; Return value:  Size  Location     Type
  8053 ;;                  1    wreg      unsigned char 
  8054 ;; Registers used:
  8055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8056 ;; Tracked objects:
  8057 ;;		On entry : 0/0
  8058 ;;		On exit  : 0/0
  8059 ;;		Unchanged: 0/0
  8060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8061 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8065 ;;Total ram usage:        4 bytes
  8066 ;; Hardware stack levels used: 1
  8067 ;; Hardware stack levels required when called: 8
  8068 ;; This function calls:
  8069 ;;		_ECU_LCD_4Bit_Send_Command
  8070 ;;		_gpio_pin_initialize
  8071 ;; This function is called by:
  8072 ;;		_main
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           	psect	text29
  8077   001A24                     __ptext29:
  8078                           	callstack 0
  8079   001A24                     _ECU_LCD_4Bit_Initialize:
  8080                           	callstack 22
  8081   001A24                     
  8082                           ;ECU_layer/LCD/LCD.c: 22:     uint8 LCD_Counter = 0;
  8083   001A24  6A4B               	clrf	ECU_LCD_4Bit_Initialize@LCD_Counter^0,c
  8084   001A26                     
  8085                           ;ECU_layer/LCD/LCD.c: 23:     if(((void*)0) == _LCD ){
  8086   001A26  5049               	movf	ECU_LCD_4Bit_Initialize@_LCD^0,w,c
  8087   001A28  A4D8               	btfss	status,2,c
  8088   001A2A  EF19  F00D         	goto	u7201
  8089   001A2E  EF1B  F00D         	goto	u7200
  8090   001A32                     u7201:
  8091   001A32  EF1E  F00D         	goto	l9302
  8092   001A36                     u7200:
  8093   001A36                     
  8094                           ;ECU_layer/LCD/LCD.c: 24:        rt = (STD_ReturnType)0x00;
  8095   001A36  6A4C               	clrf	ECU_LCD_4Bit_Initialize@rt^0,c
  8096                           
  8097                           ;ECU_layer/LCD/LCD.c: 25:     }
  8098   001A38  EF84  F00D         	goto	l9338
  8099   001A3C                     l9302:
  8100                           
  8101                           ;ECU_layer/LCD/LCD.c: 27:         rt = gpio_pin_initialize(&(_LCD->LCD_E));
  8102   001A3C  2849               	incf	ECU_LCD_4Bit_Initialize@_LCD^0,w,c
  8103   001A3E  6E43               	movwf	gpio_pin_initialize@pinConfig^0,c
  8104   001A40  ECB9  F010         	call	_gpio_pin_initialize	;wreg free
  8105   001A44  6E4C               	movwf	ECU_LCD_4Bit_Initialize@rt^0,c
  8106                           
  8107                           ;ECU_layer/LCD/LCD.c: 28:         rt = gpio_pin_initialize(&(_LCD->LCD_RS));
  8108   001A46  C049  F043         	movff	ECU_LCD_4Bit_Initialize@_LCD,gpio_pin_initialize@pinConfig
  8109   001A4A  ECB9  F010         	call	_gpio_pin_initialize	;wreg free
  8110   001A4E  6E4C               	movwf	ECU_LCD_4Bit_Initialize@rt^0,c
  8111   001A50                     
  8112                           ;ECU_layer/LCD/LCD.c: 29:         for(LCD_Counter = 0; LCD_Counter<4 ; LCD_Counter++){
  8113   001A50  6A4B               	clrf	ECU_LCD_4Bit_Initialize@LCD_Counter^0,c
  8114   001A52                     l9310:
  8115   001A52  5049               	movf	ECU_LCD_4Bit_Initialize@_LCD^0,w,c
  8116   001A54  244B               	addwf	ECU_LCD_4Bit_Initialize@LCD_Counter^0,w,c
  8117   001A56  0F02               	addlw	2
  8118   001A58  6E43               	movwf	gpio_pin_initialize@pinConfig^0,c
  8119   001A5A  ECB9  F010         	call	_gpio_pin_initialize	;wreg free
  8120   001A5E                     
  8121                           ;ECU_layer/LCD/LCD.c: 31:         }
  8122   001A5E  2A4B               	incf	ECU_LCD_4Bit_Initialize@LCD_Counter^0,f,c
  8123   001A60  0E03               	movlw	3
  8124   001A62  644B               	cpfsgt	ECU_LCD_4Bit_Initialize@LCD_Counter^0,c
  8125   001A64  EF36  F00D         	goto	u7211
  8126   001A68  EF38  F00D         	goto	u7210
  8127   001A6C                     u7211:
  8128   001A6C  EF29  F00D         	goto	l9310
  8129   001A70                     u7210:
  8130   001A70                     
  8131                           ;ECU_layer/LCD/LCD.c: 32:         _delay((unsigned long)((15)*(8000000UL/4000.0)));
  8132   001A70  0E27               	movlw	39
  8133   001A72  6E4A               	movwf	??_ECU_LCD_4Bit_Initialize^0,c
  8134   001A74  0EF5               	movlw	245
  8135   001A76                     u7877:
  8136   001A76  2EE8               	decfsz	wreg,f,c
  8137   001A78  D7FE               	bra	u7877
  8138   001A7A  2E4A               	decfsz	??_ECU_LCD_4Bit_Initialize^0,f,c
  8139   001A7C  D7FC               	bra	u7877
  8140   001A7E  0000               	nop	
  8141   001A80  C049  F046         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  8142   001A84  0E38               	movlw	56
  8143   001A86  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  8144   001A88  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  8145   001A8C                     
  8146                           ;ECU_layer/LCD/LCD.c: 34:         _delay((unsigned long)((4.1)*(8000000UL/4000.0)));
  8147   001A8C  0E0B               	movlw	11
  8148   001A8E  6E4A               	movwf	??_ECU_LCD_4Bit_Initialize^0,c
  8149   001A90  0EA5               	movlw	165
  8150   001A92                     u7887:
  8151   001A92  2EE8               	decfsz	wreg,f,c
  8152   001A94  D7FE               	bra	u7887
  8153   001A96  2E4A               	decfsz	??_ECU_LCD_4Bit_Initialize^0,f,c
  8154   001A98  D7FC               	bra	u7887
  8155   001A9A  0000               	nop	
  8156   001A9C  C049  F046         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  8157   001AA0  0E38               	movlw	56
  8158   001AA2  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  8159   001AA4  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  8160   001AA8                     
  8161                           ;ECU_layer/LCD/LCD.c: 36:         _delay((unsigned long)((100)*(8000000UL/4000000.0)));
  8162   001AA8  0E42               	movlw	66
  8163   001AAA                     u7897:
  8164   001AAA  2EE8               	decfsz	wreg,f,c
  8165   001AAC  D7FE               	bra	u7897
  8166   001AAE  F000 F000          	nop2	
  8167   001AB2  C049  F046         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  8168   001AB6  0E38               	movlw	56
  8169   001AB8  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  8170   001ABA  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  8171   001ABE  C049  F046         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  8172   001AC2  0E01               	movlw	1
  8173   001AC4  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  8174   001AC6  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  8175   001ACA  C049  F046         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  8176   001ACE  0E02               	movlw	2
  8177   001AD0  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  8178   001AD2  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  8179   001AD6  C049  F046         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  8180   001ADA  0E06               	movlw	6
  8181   001ADC  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  8182   001ADE  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  8183   001AE2  C049  F046         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  8184   001AE6  0E0C               	movlw	12
  8185   001AE8  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  8186   001AEA  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  8187   001AEE  C049  F046         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  8188   001AF2  0E28               	movlw	40
  8189   001AF4  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  8190   001AF6  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  8191   001AFA                     
  8192                           ;ECU_layer/LCD/LCD.c: 44:         rt = ECU_LCD_4Bit_Send_Command(_LCD,0x80);
  8193   001AFA  C049  F046         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  8194   001AFE  0E80               	movlw	128
  8195   001B00  6E47               	movwf	ECU_LCD_4Bit_Send_Command@_Command^0,c
  8196   001B02  EC8C  F010         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  8197   001B06  6E4C               	movwf	ECU_LCD_4Bit_Initialize@rt^0,c
  8198   001B08                     l9338:
  8199                           
  8200                           ;ECU_layer/LCD/LCD.c: 47:     return rt;
  8201   001B08  504C               	movf	ECU_LCD_4Bit_Initialize@rt^0,w,c
  8202   001B0A  0012               	return		;funcret
  8203   001B0C                     __end_of_ECU_LCD_4Bit_Initialize:
  8204                           	callstack 0
  8205                           
  8206 ;; *************** function _ECU_LCD_4Bit_Send_Command *****************
  8207 ;; Defined at:
  8208 ;;		line 50 in file "ECU_layer/LCD/LCD.c"
  8209 ;; Parameters:    Size  Location     Type
  8210 ;;  _LCD            1   13[COMRAM] PTR const struct .
  8211 ;;		 -> LCD_1(6), 
  8212 ;;  _Command        1   14[COMRAM] unsigned char 
  8213 ;; Auto vars:     Size  Location     Type
  8214 ;;  rt              1   15[COMRAM] unsigned char 
  8215 ;; Return value:  Size  Location     Type
  8216 ;;                  1    wreg      unsigned char 
  8217 ;; Registers used:
  8218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8219 ;; Tracked objects:
  8220 ;;		On entry : 0/0
  8221 ;;		On exit  : 0/0
  8222 ;;		Unchanged: 0/0
  8223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8227 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8228 ;;Total ram usage:        3 bytes
  8229 ;; Hardware stack levels used: 1
  8230 ;; Hardware stack levels required when called: 7
  8231 ;; This function calls:
  8232 ;;		_LCD_4Bits_Send_Enable_Signal
  8233 ;;		_LCD_Send_4Bits
  8234 ;;		_gpio_pin_write_logic
  8235 ;; This function is called by:
  8236 ;;		_WrongPassword
  8237 ;;		_main
  8238 ;;		_ECU_LCD_4Bit_Initialize
  8239 ;;		_LCD_4Bits_Set_Curser
  8240 ;;		_ECU_LCD_4Bit_Send_Custom_Char
  8241 ;; This function uses a non-reentrant model
  8242 ;;
  8243                           
  8244                           	psect	text30
  8245   002118                     __ptext30:
  8246                           	callstack 0
  8247   002118                     _ECU_LCD_4Bit_Send_Command:
  8248                           	callstack 20
  8249   002118                     
  8250                           ;ECU_layer/LCD/LCD.c: 52:     if(((void*)0) == _LCD){
  8251   002118  5046               	movf	ECU_LCD_4Bit_Send_Command@_LCD^0,w,c
  8252   00211A  A4D8               	btfss	status,2,c
  8253   00211C  EF92  F010         	goto	u7001
  8254   002120  EF94  F010         	goto	u7000
  8255   002124                     u7001:
  8256   002124  EF97  F010         	goto	l9126
  8257   002128                     u7000:
  8258   002128                     
  8259                           ;ECU_layer/LCD/LCD.c: 53:        rt = (STD_ReturnType)0x00;
  8260   002128  6A48               	clrf	ECU_LCD_4Bit_Send_Command@rt^0,c
  8261                           
  8262                           ;ECU_layer/LCD/LCD.c: 54:     }
  8263   00212A  EFB7  F010         	goto	l9128
  8264   00212E                     l9126:
  8265                           
  8266                           ;ECU_layer/LCD/LCD.c: 57:         rt = gpio_pin_write_logic(&(_LCD->LCD_RS), GPIO_Pin_Lo
      +                          gic_LOW);
  8267   00212E  C046  F03E         	movff	ECU_LCD_4Bit_Send_Command@_LCD,gpio_pin_write_logic@pinConfig
  8268   002132  0E00               	movlw	0
  8269   002134  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  8270   002136  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  8271   00213A  6E48               	movwf	ECU_LCD_4Bit_Send_Command@rt^0,c
  8272                           
  8273                           ;ECU_layer/LCD/LCD.c: 59:         rt = LCD_Send_4Bits(_LCD, _Command >> 4);
  8274   00213C  C046  F043         	movff	ECU_LCD_4Bit_Send_Command@_LCD,LCD_Send_4Bits@_LCD
  8275   002140  3847               	swapf	ECU_LCD_4Bit_Send_Command@_Command^0,w,c
  8276   002142  0B0F               	andlw	15
  8277   002144  6E44               	movwf	LCD_Send_4Bits@_Data^0,c
  8278   002146  EC67  F00F         	call	_LCD_Send_4Bits	;wreg free
  8279   00214A  6E48               	movwf	ECU_LCD_4Bit_Send_Command@rt^0,c
  8280                           
  8281                           ;ECU_layer/LCD/LCD.c: 61:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
  8282   00214C  C046  F043         	movff	ECU_LCD_4Bit_Send_Command@_LCD,LCD_4Bits_Send_Enable_Signal@_LCD
  8283   002150  EC02  F011         	call	_LCD_4Bits_Send_Enable_Signal	;wreg free
  8284   002154  6E48               	movwf	ECU_LCD_4Bit_Send_Command@rt^0,c
  8285                           
  8286                           ;ECU_layer/LCD/LCD.c: 63:         rt = LCD_Send_4Bits(_LCD, _Command);
  8287   002156  C046  F043         	movff	ECU_LCD_4Bit_Send_Command@_LCD,LCD_Send_4Bits@_LCD
  8288   00215A  C047  F044         	movff	ECU_LCD_4Bit_Send_Command@_Command,LCD_Send_4Bits@_Data
  8289   00215E  EC67  F00F         	call	_LCD_Send_4Bits	;wreg free
  8290   002162  6E48               	movwf	ECU_LCD_4Bit_Send_Command@rt^0,c
  8291                           
  8292                           ;ECU_layer/LCD/LCD.c: 65:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
  8293   002164  C046  F043         	movff	ECU_LCD_4Bit_Send_Command@_LCD,LCD_4Bits_Send_Enable_Signal@_LCD
  8294   002168  EC02  F011         	call	_LCD_4Bits_Send_Enable_Signal	;wreg free
  8295   00216C  6E48               	movwf	ECU_LCD_4Bit_Send_Command@rt^0,c
  8296   00216E                     l9128:
  8297                           
  8298                           ;ECU_layer/LCD/LCD.c: 68:     return rt;
  8299   00216E  5048               	movf	ECU_LCD_4Bit_Send_Command@rt^0,w,c
  8300   002170  0012               	return		;funcret
  8301   002172                     __end_of_ECU_LCD_4Bit_Send_Command:
  8302                           	callstack 0
  8303                           
  8304 ;; *************** function _LCD_Send_4Bits *****************
  8305 ;; Defined at:
  8306 ;;		line 341 in file "ECU_layer/LCD/LCD.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;  _LCD            1   10[COMRAM] PTR const struct .
  8309 ;;		 -> LCD_1(6), 
  8310 ;;  _Data           1   11[COMRAM] unsigned char 
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;  rt              1   12[COMRAM] unsigned char 
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      unsigned char 
  8315 ;; Registers used:
  8316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8322 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;Total ram usage:        3 bytes
  8327 ;; Hardware stack levels used: 1
  8328 ;; Hardware stack levels required when called: 6
  8329 ;; This function calls:
  8330 ;;		_gpio_pin_write_logic
  8331 ;; This function is called by:
  8332 ;;		_ECU_LCD_4Bit_Send_Command
  8333 ;;		_ECU_LCD_4Bit_Send_char_Data
  8334 ;; This function uses a non-reentrant model
  8335 ;;
  8336                           
  8337                           	psect	text31
  8338   001ECE                     __ptext31:
  8339                           	callstack 0
  8340   001ECE                     _LCD_Send_4Bits:
  8341                           	callstack 20
  8342   001ECE                     
  8343                           ;ECU_layer/LCD/LCD.c: 343:      if(((void*)0) == _LCD ){
  8344   001ECE  5043               	movf	LCD_Send_4Bits@_LCD^0,w,c
  8345   001ED0  A4D8               	btfss	status,2,c
  8346   001ED2  EF6D  F00F         	goto	u6981
  8347   001ED6  EF6F  F00F         	goto	u6980
  8348   001EDA                     u6981:
  8349   001EDA  EF72  F00F         	goto	l9098
  8350   001EDE                     u6980:
  8351   001EDE                     
  8352                           ;ECU_layer/LCD/LCD.c: 344:         rt = (STD_ReturnType)0x00;
  8353   001EDE  6A45               	clrf	LCD_Send_4Bits@rt^0,c
  8354                           
  8355                           ;ECU_layer/LCD/LCD.c: 345:     }
  8356   001EE0  EF9B  F00F         	goto	l9100
  8357   001EE4                     l9098:
  8358                           
  8359                           ;ECU_layer/LCD/LCD.c: 347:         rt = gpio_pin_write_logic(&(_LCD->DataPins[0]), (_Dat
      +                          a >> 0) & (uint8)0x01);
  8360   001EE4  5043               	movf	LCD_Send_4Bits@_LCD^0,w,c
  8361   001EE6  0F02               	addlw	2
  8362   001EE8  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  8363   001EEA  5044               	movf	LCD_Send_4Bits@_Data^0,w,c
  8364   001EEC  0B01               	andlw	1
  8365   001EEE  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  8366   001EF0  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  8367   001EF4  6E45               	movwf	LCD_Send_4Bits@rt^0,c
  8368                           
  8369                           ;ECU_layer/LCD/LCD.c: 348:         rt = gpio_pin_write_logic(&(_LCD->DataPins[1]), (_Dat
      +                          a >> 1) & (uint8)0x01);
  8370   001EF6  5043               	movf	LCD_Send_4Bits@_LCD^0,w,c
  8371   001EF8  0F03               	addlw	3
  8372   001EFA  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  8373   001EFC  90D8               	bcf	status,0,c
  8374   001EFE  3044               	rrcf	LCD_Send_4Bits@_Data^0,w,c
  8375   001F00  0B01               	andlw	1
  8376   001F02  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  8377   001F04  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  8378   001F08  6E45               	movwf	LCD_Send_4Bits@rt^0,c
  8379                           
  8380                           ;ECU_layer/LCD/LCD.c: 349:         rt = gpio_pin_write_logic(&(_LCD->DataPins[2]), (_Dat
      +                          a >> 2) & (uint8)0x01);
  8381   001F0A  5043               	movf	LCD_Send_4Bits@_LCD^0,w,c
  8382   001F0C  0F04               	addlw	4
  8383   001F0E  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  8384   001F10  4044               	rrncf	LCD_Send_4Bits@_Data^0,w,c
  8385   001F12  42E8               	rrncf	wreg,f,c
  8386   001F14  0B3F               	andlw	63
  8387   001F16  0B01               	andlw	1
  8388   001F18  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  8389   001F1A  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  8390   001F1E  6E45               	movwf	LCD_Send_4Bits@rt^0,c
  8391                           
  8392                           ;ECU_layer/LCD/LCD.c: 350:         rt = gpio_pin_write_logic(&(_LCD->DataPins[3]), (_Dat
      +                          a >> 3) & (uint8)0x01);
  8393   001F20  5043               	movf	LCD_Send_4Bits@_LCD^0,w,c
  8394   001F22  0F05               	addlw	5
  8395   001F24  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  8396   001F26  3844               	swapf	LCD_Send_4Bits@_Data^0,w,c
  8397   001F28  46E8               	rlncf	wreg,f,c
  8398   001F2A  0B1F               	andlw	31
  8399   001F2C  0B01               	andlw	1
  8400   001F2E  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  8401   001F30  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  8402   001F34  6E45               	movwf	LCD_Send_4Bits@rt^0,c
  8403   001F36                     l9100:
  8404                           
  8405                           ;ECU_layer/LCD/LCD.c: 352:      return rt;
  8406   001F36  5045               	movf	LCD_Send_4Bits@rt^0,w,c
  8407   001F38  0012               	return		;funcret
  8408   001F3A                     __end_of_LCD_Send_4Bits:
  8409                           	callstack 0
  8410                           
  8411 ;; *************** function _LCD_4Bits_Send_Enable_Signal *****************
  8412 ;; Defined at:
  8413 ;;		line 356 in file "ECU_layer/LCD/LCD.c"
  8414 ;; Parameters:    Size  Location     Type
  8415 ;;  _LCD            1   10[COMRAM] PTR const struct .
  8416 ;;		 -> LCD_1(6), 
  8417 ;; Auto vars:     Size  Location     Type
  8418 ;;  rt              1   11[COMRAM] unsigned char 
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  1    wreg      unsigned char 
  8421 ;; Registers used:
  8422 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8428 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8431 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8432 ;;Total ram usage:        2 bytes
  8433 ;; Hardware stack levels used: 1
  8434 ;; Hardware stack levels required when called: 6
  8435 ;; This function calls:
  8436 ;;		_gpio_pin_write_logic
  8437 ;; This function is called by:
  8438 ;;		_ECU_LCD_4Bit_Send_Command
  8439 ;;		_ECU_LCD_4Bit_Send_char_Data
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           	psect	text32
  8444   002204                     __ptext32:
  8445                           	callstack 0
  8446   002204                     _LCD_4Bits_Send_Enable_Signal:
  8447                           	callstack 20
  8448   002204                     
  8449                           ;ECU_layer/LCD/LCD.c: 358:      if(((void*)0) == _LCD ){
  8450   002204  5043               	movf	LCD_4Bits_Send_Enable_Signal@_LCD^0,w,c
  8451   002206  A4D8               	btfss	status,2,c
  8452   002208  EF08  F011         	goto	u6991
  8453   00220C  EF0A  F011         	goto	u6990
  8454   002210                     u6991:
  8455   002210  EF0D  F011         	goto	l9110
  8456   002214                     u6990:
  8457   002214                     
  8458                           ;ECU_layer/LCD/LCD.c: 359:         rt = (STD_ReturnType)0x00;
  8459   002214  6A44               	clrf	LCD_4Bits_Send_Enable_Signal@rt^0,c
  8460                           
  8461                           ;ECU_layer/LCD/LCD.c: 360:     }
  8462   002216  EF1E  F011         	goto	l9116
  8463   00221A                     l9110:
  8464   00221A  2843               	incf	LCD_4Bits_Send_Enable_Signal@_LCD^0,w,c
  8465   00221C  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  8466   00221E  0E01               	movlw	1
  8467   002220  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  8468   002222  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  8469   002226                     
  8470                           ;ECU_layer/LCD/LCD.c: 363:         _delay((unsigned long)((5)*(8000000UL/4000000.0)));
  8471   002226  0E03               	movlw	3
  8472   002228                     u7907:
  8473   002228  2EE8               	decfsz	wreg,f,c
  8474   00222A  D7FE               	bra	u7907
  8475   00222C  0000               	nop	
  8476   00222E                     
  8477                           ;ECU_layer/LCD/LCD.c: 364:         rt = gpio_pin_write_logic(&(_LCD->LCD_E), GPIO_Pin_Lo
      +                          gic_LOW);;
  8478   00222E  2843               	incf	LCD_4Bits_Send_Enable_Signal@_LCD^0,w,c
  8479   002230  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  8480   002232  0E00               	movlw	0
  8481   002234  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  8482   002236  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  8483   00223A  6E44               	movwf	LCD_4Bits_Send_Enable_Signal@rt^0,c
  8484   00223C                     l9116:
  8485                           
  8486                           ;ECU_layer/LCD/LCD.c: 366:      return rt;
  8487   00223C  5044               	movf	LCD_4Bits_Send_Enable_Signal@rt^0,w,c
  8488   00223E  0012               	return		;funcret
  8489   002240                     __end_of_LCD_4Bits_Send_Enable_Signal:
  8490                           	callstack 0
  8491                           
  8492 ;; *************** function _ECU_DC_Motor_move_right *****************
  8493 ;; Defined at:
  8494 ;;		line 18 in file "ECU_layer/DC_Motor/DC_Motor.c"
  8495 ;; Parameters:    Size  Location     Type
  8496 ;;  _dc_motor       1   10[COMRAM] PTR const struct .
  8497 ;;		 -> Dc_Motor_Gate(2), 
  8498 ;; Auto vars:     Size  Location     Type
  8499 ;;  rt              1   11[COMRAM] unsigned char 
  8500 ;; Return value:  Size  Location     Type
  8501 ;;                  1    wreg      unsigned char 
  8502 ;; Registers used:
  8503 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8504 ;; Tracked objects:
  8505 ;;		On entry : 0/0
  8506 ;;		On exit  : 0/0
  8507 ;;		Unchanged: 0/0
  8508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8509 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8510 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8513 ;;Total ram usage:        2 bytes
  8514 ;; Hardware stack levels used: 1
  8515 ;; Hardware stack levels required when called: 6
  8516 ;; This function calls:
  8517 ;;		_gpio_pin_write_logic
  8518 ;; This function is called by:
  8519 ;;		_main
  8520 ;; This function uses a non-reentrant model
  8521 ;;
  8522                           
  8523                           	psect	text33
  8524   002276                     __ptext33:
  8525                           	callstack 0
  8526   002276                     _ECU_DC_Motor_move_right:
  8527                           	callstack 24
  8528   002276                     
  8529                           ;ECU_layer/DC_Motor/DC_Motor.c: 20:     if(((void*)0) == _dc_motor ){
  8530   002276  5043               	movf	ECU_DC_Motor_move_right@_dc_motor^0,w,c
  8531   002278  A4D8               	btfss	status,2,c
  8532   00227A  EF41  F011         	goto	u7331
  8533   00227E  EF43  F011         	goto	u7330
  8534   002282                     u7331:
  8535   002282  EF46  F011         	goto	l9450
  8536   002286                     u7330:
  8537   002286                     
  8538                           ;ECU_layer/DC_Motor/DC_Motor.c: 21:         rt = (STD_ReturnType)0x00;
  8539   002286  6A44               	clrf	ECU_DC_Motor_move_right@rt^0,c
  8540                           
  8541                           ;ECU_layer/DC_Motor/DC_Motor.c: 22:     }
  8542   002288  EF54  F011         	goto	l9454
  8543   00228C                     l9450:
  8544                           
  8545                           ;ECU_layer/DC_Motor/DC_Motor.c: 24:         gpio_pin_write_logic(&(_dc_motor->dc_motor_p
      +                          in[0x00U]), GPIO_Pin_Logic_HIGH);
  8546   00228C  C043  F03E         	movff	ECU_DC_Motor_move_right@_dc_motor,gpio_pin_write_logic@pinConfig
  8547   002290  0E01               	movlw	1
  8548   002292  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  8549   002294  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  8550                           
  8551                           ;ECU_layer/DC_Motor/DC_Motor.c: 25:         gpio_pin_write_logic(&(_dc_motor->dc_motor_p
      +                          in[0x01U]), GPIO_Pin_Logic_LOW);
  8552   002298  2843               	incf	ECU_DC_Motor_move_right@_dc_motor^0,w,c
  8553   00229A  6E3E               	movwf	gpio_pin_write_logic@pinConfig^0,c
  8554   00229C  0E00               	movlw	0
  8555   00229E  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  8556   0022A0  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  8557   0022A4                     
  8558                           ;ECU_layer/DC_Motor/DC_Motor.c: 27:         rt = (STD_ReturnType)0x01;
  8559   0022A4  0E01               	movlw	1
  8560   0022A6  6E44               	movwf	ECU_DC_Motor_move_right@rt^0,c
  8561   0022A8                     l9454:
  8562                           
  8563                           ;ECU_layer/DC_Motor/DC_Motor.c: 29:     return rt;
  8564   0022A8  5044               	movf	ECU_DC_Motor_move_right@rt^0,w,c
  8565   0022AA  0012               	return		;funcret
  8566   0022AC                     __end_of_ECU_DC_Motor_move_right:
  8567                           	callstack 0
  8568                           
  8569 ;; *************** function _ECU_DC_Motor_initialize *****************
  8570 ;; Defined at:
  8571 ;;		line 4 in file "ECU_layer/DC_Motor/DC_Motor.c"
  8572 ;; Parameters:    Size  Location     Type
  8573 ;;  _dc_motor       1   13[COMRAM] PTR const struct .
  8574 ;;		 -> Dc_Motor_Gate(2), 
  8575 ;; Auto vars:     Size  Location     Type
  8576 ;;  rt              1   14[COMRAM] unsigned char 
  8577 ;; Return value:  Size  Location     Type
  8578 ;;                  1    wreg      unsigned char 
  8579 ;; Registers used:
  8580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8581 ;; Tracked objects:
  8582 ;;		On entry : 0/0
  8583 ;;		On exit  : 0/0
  8584 ;;		Unchanged: 0/0
  8585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8586 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8587 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8589 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8590 ;;Total ram usage:        2 bytes
  8591 ;; Hardware stack levels used: 1
  8592 ;; Hardware stack levels required when called: 7
  8593 ;; This function calls:
  8594 ;;		_gpio_pin_initialize
  8595 ;; This function is called by:
  8596 ;;		_main
  8597 ;; This function uses a non-reentrant model
  8598 ;;
  8599                           
  8600                           	psect	text34
  8601   0022DC                     __ptext34:
  8602                           	callstack 0
  8603   0022DC                     _ECU_DC_Motor_initialize:
  8604                           	callstack 23
  8605   0022DC                     
  8606                           ;ECU_layer/DC_Motor/DC_Motor.c: 6:      if(((void*)0) == _dc_motor ){
  8607   0022DC  5046               	movf	ECU_DC_Motor_initialize@_dc_motor^0,w,c
  8608   0022DE  A4D8               	btfss	status,2,c
  8609   0022E0  EF74  F011         	goto	u7251
  8610   0022E4  EF76  F011         	goto	u7250
  8611   0022E8                     u7251:
  8612   0022E8  EF79  F011         	goto	l9378
  8613   0022EC                     u7250:
  8614   0022EC                     
  8615                           ;ECU_layer/DC_Motor/DC_Motor.c: 7:         rt = (STD_ReturnType)0x00;
  8616   0022EC  6A47               	clrf	ECU_DC_Motor_initialize@rt^0,c
  8617                           
  8618                           ;ECU_layer/DC_Motor/DC_Motor.c: 8:     }
  8619   0022EE  EF83  F011         	goto	l9382
  8620   0022F2                     l9378:
  8621                           
  8622                           ;ECU_layer/DC_Motor/DC_Motor.c: 10:         gpio_pin_initialize(&(_dc_motor->dc_motor_pi
      +                          n[0x00U]));
  8623   0022F2  C046  F043         	movff	ECU_DC_Motor_initialize@_dc_motor,gpio_pin_initialize@pinConfig
  8624   0022F6  ECB9  F010         	call	_gpio_pin_initialize	;wreg free
  8625                           
  8626                           ;ECU_layer/DC_Motor/DC_Motor.c: 11:         gpio_pin_initialize(&(_dc_motor->dc_motor_pi
      +                          n[0x01U]));
  8627   0022FA  2846               	incf	ECU_DC_Motor_initialize@_dc_motor^0,w,c
  8628   0022FC  6E43               	movwf	gpio_pin_initialize@pinConfig^0,c
  8629   0022FE  ECB9  F010         	call	_gpio_pin_initialize	;wreg free
  8630   002302                     
  8631                           ;ECU_layer/DC_Motor/DC_Motor.c: 13:         rt = (STD_ReturnType)0x01;
  8632   002302  0E01               	movlw	1
  8633   002304  6E47               	movwf	ECU_DC_Motor_initialize@rt^0,c
  8634   002306                     l9382:
  8635                           
  8636                           ;ECU_layer/DC_Motor/DC_Motor.c: 15:     return rt;
  8637   002306  5047               	movf	ECU_DC_Motor_initialize@rt^0,w,c
  8638   002308  0012               	return		;funcret
  8639   00230A                     __end_of_ECU_DC_Motor_initialize:
  8640                           	callstack 0
  8641                           
  8642 ;; *************** function _gpio_pin_initialize *****************
  8643 ;; Defined at:
  8644 ;;		line 197 in file "MCAL_layer/GPIO/hal_gpio.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;  pinConfig       1   10[COMRAM] PTR const struct .
  8647 ;;		 -> CCP1_obj$CCPx_PIN$port(1), ECU_Relay_Initialize@relay_t(1), pinRC7(1), pinRC6(1), 
  8648 ;;		 -> InDoor_E(1), Dc_Motor_Gate$dc_motor_pin(2), Dc_Motor_Gate(2), keypad_1$KeypadRowsConfig(4), 
  8649 ;;		 -> keypad_1(7), LCD_1$DataPins(4), LCD_1(6), 
  8650 ;; Auto vars:     Size  Location     Type
  8651 ;;  rt              1   12[COMRAM] unsigned char 
  8652 ;; Return value:  Size  Location     Type
  8653 ;;                  1    wreg      unsigned char 
  8654 ;; Registers used:
  8655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8656 ;; Tracked objects:
  8657 ;;		On entry : 0/0
  8658 ;;		On exit  : 0/0
  8659 ;;		Unchanged: 0/0
  8660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8661 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8664 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8665 ;;Total ram usage:        3 bytes
  8666 ;; Hardware stack levels used: 1
  8667 ;; Hardware stack levels required when called: 6
  8668 ;; This function calls:
  8669 ;;		_gpio_pin_direction_initialize
  8670 ;;		_gpio_pin_write_logic
  8671 ;; This function is called by:
  8672 ;;		_main
  8673 ;;		_ECU_DC_Motor_initialize
  8674 ;;		_keyPad_Initialize
  8675 ;;		_ECU_LCD_4Bit_Initialize
  8676 ;;		_CCPx_Init
  8677 ;;		_PinsConfig@hal_usart$F4428
  8678 ;;		_ECU_LCD_8Bit_Initialize
  8679 ;;		_ECU_Relay_Initialize
  8680 ;;		_ECU_Segment_initialize
  8681 ;; This function uses a non-reentrant model
  8682 ;;
  8683                           
  8684                           	psect	text35
  8685   002172                     __ptext35:
  8686                           	callstack 0
  8687   002172                     _gpio_pin_initialize:
  8688                           	callstack 23
  8689   002172                     
  8690                           ;MCAL_layer/GPIO/hal_gpio.c: 198:     STD_ReturnType rt = (STD_ReturnType)0x01;
  8691   002172  0E01               	movlw	1
  8692   002174  6E45               	movwf	gpio_pin_initialize@rt^0,c
  8693                           
  8694                           ;MCAL_layer/GPIO/hal_gpio.c: 199:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 
      +                          -1 ){
  8695   002176  5043               	movf	gpio_pin_initialize@pinConfig^0,w,c
  8696   002178  B4D8               	btfsc	status,2,c
  8697   00217A  EFC1  F010         	goto	u7141
  8698   00217E  EFC3  F010         	goto	u7140
  8699   002182                     u7141:
  8700   002182  EFD3  F010         	goto	l901
  8701   002186                     u7140:
  8702   002186  5043               	movf	gpio_pin_initialize@pinConfig^0,w,c
  8703   002188  6ED9               	movwf	fsr2l,c
  8704   00218A  6ADA               	clrf	fsr2h,c
  8705   00218C  30DF               	rrcf	223,w,c
  8706   00218E  32E8               	rrcf	wreg,f,c
  8707   002190  32E8               	rrcf	wreg,f,c
  8708   002192  0B07               	andlw	7
  8709   002194  6E44               	movwf	??_gpio_pin_initialize^0,c
  8710   002196  0E07               	movlw	7
  8711   002198  6444               	cpfsgt	??_gpio_pin_initialize^0,c
  8712   00219A  EFD1  F010         	goto	u7151
  8713   00219E  EFD3  F010         	goto	u7150
  8714   0021A2                     u7151:
  8715   0021A2  EFD6  F010         	goto	l9240
  8716   0021A6                     u7150:
  8717   0021A6                     l901:
  8718                           
  8719                           ;MCAL_layer/GPIO/hal_gpio.c: 200:         rt = (STD_ReturnType)0x00;
  8720   0021A6  6A45               	clrf	gpio_pin_initialize@rt^0,c
  8721                           
  8722                           ;MCAL_layer/GPIO/hal_gpio.c: 201:     }
  8723   0021A8  EFE0  F010         	goto	l9242
  8724   0021AC                     l9240:
  8725                           
  8726                           ;MCAL_layer/GPIO/hal_gpio.c: 203:         gpio_pin_direction_initialize (pinConfig);
  8727   0021AC  C043  F03E         	movff	gpio_pin_initialize@pinConfig,gpio_pin_direction_initialize@pinConfig
  8728   0021B0  EC15  F008         	call	_gpio_pin_direction_initialize	;wreg free
  8729                           
  8730                           ;MCAL_layer/GPIO/hal_gpio.c: 204:         gpio_pin_write_logic(pinConfig,GPIO_Pin_Logic_
      +                          LOW);
  8731   0021B4  C043  F03E         	movff	gpio_pin_initialize@pinConfig,gpio_pin_write_logic@pinConfig
  8732   0021B8  0E00               	movlw	0
  8733   0021BA  6E3F               	movwf	gpio_pin_write_logic@logic^0,c
  8734   0021BC  EC63  F009         	call	_gpio_pin_write_logic	;wreg free
  8735   0021C0                     l9242:
  8736                           
  8737                           ;MCAL_layer/GPIO/hal_gpio.c: 207:     return rt;
  8738   0021C0  5045               	movf	gpio_pin_initialize@rt^0,w,c
  8739   0021C2  0012               	return		;funcret
  8740   0021C4                     __end_of_gpio_pin_initialize:
  8741                           	callstack 0
  8742                           
  8743 ;; *************** function _gpio_pin_write_logic *****************
  8744 ;; Defined at:
  8745 ;;		line 93 in file "MCAL_layer/GPIO/hal_gpio.c"
  8746 ;; Parameters:    Size  Location     Type
  8747 ;;  pinConfig       1    5[COMRAM] PTR const struct .
  8748 ;;		 -> CCP1_obj$CCPx_PIN$port(1), ECU_Relay_turnOFF@relay_t(1), ECU_Relay_turnON@relay_t(1), ECU_Relay_Initialize@relay
      +_t(1), 
  8749 ;;		 -> LED_turnOFF@LED(1), LED_turnON@LED(1), pinRC7(1), pinRC6(1), 
  8750 ;;		 -> InDoor_E(1), Dc_Motor_Gate$dc_motor_pin(2), Dc_Motor_Gate(2), keypad_1$KeypadRowsConfig(4), 
  8751 ;;		 -> keypad_1(7), LCD_1$DataPins(4), LCD_1(6), 
  8752 ;;  logic           1    6[COMRAM] enum E3381
  8753 ;; Auto vars:     Size  Location     Type
  8754 ;;  rt              1    9[COMRAM] unsigned char 
  8755 ;; Return value:  Size  Location     Type
  8756 ;;                  1    wreg      unsigned char 
  8757 ;; Registers used:
  8758 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8759 ;; Tracked objects:
  8760 ;;		On entry : 0/0
  8761 ;;		On exit  : 0/0
  8762 ;;		Unchanged: 0/0
  8763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8764 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8766 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8767 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8768 ;;Total ram usage:        5 bytes
  8769 ;; Hardware stack levels used: 1
  8770 ;; Hardware stack levels required when called: 5
  8771 ;; This function calls:
  8772 ;;		Nothing
  8773 ;; This function is called by:
  8774 ;;		_main
  8775 ;;		_gpio_pin_initialize
  8776 ;;		_ECU_DC_Motor_move_right
  8777 ;;		_ECU_DC_Motor_stop
  8778 ;;		_keyPad_Read
  8779 ;;		_ECU_LCD_4Bit_Send_Command
  8780 ;;		_ECU_LCD_4Bit_Send_char_Data
  8781 ;;		_LCD_Send_4Bits
  8782 ;;		_LCD_4Bits_Send_Enable_Signal
  8783 ;;		_LED_turnON
  8784 ;;		_LED_turnOFF
  8785 ;;		_ECU_DC_Motor_move_left
  8786 ;;		_ECU_LCD_8Bit_Send_Command
  8787 ;;		_ECU_LCD_8Bit_Send_char_Data
  8788 ;;		_LCD_8Bits_Send_Enable_Signal
  8789 ;;		_ECU_Relay_turnON
  8790 ;;		_ECU_Relay_turnOFF
  8791 ;;		_ECU_Segment_write
  8792 ;;		_ECU_STEPPER_Motor_move_left
  8793 ;;		_ECU_STEPPER_Motor_move_right
  8794 ;;		_ECU_STEPPER_Motor_stop
  8795 ;; This function uses a non-reentrant model
  8796 ;;
  8797                           
  8798                           	psect	text36
  8799   0012C6                     __ptext36:
  8800                           	callstack 0
  8801   0012C6                     _gpio_pin_write_logic:
  8802                           	callstack 24
  8803   0012C6                     
  8804                           ;MCAL_layer/GPIO/hal_gpio.c: 94:     STD_ReturnType rt = (STD_ReturnType)0x01;
  8805   0012C6  0E01               	movlw	1
  8806   0012C8  6E42               	movwf	gpio_pin_write_logic@rt^0,c
  8807                           
  8808                           ;MCAL_layer/GPIO/hal_gpio.c: 95:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 -
      +                          1 ){
  8809   0012CA  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  8810   0012CC  B4D8               	btfsc	status,2,c
  8811   0012CE  EF6B  F009         	goto	u6861
  8812   0012D2  EF6D  F009         	goto	u6860
  8813   0012D6                     u6861:
  8814   0012D6  EF7D  F009         	goto	l843
  8815   0012DA                     u6860:
  8816   0012DA  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  8817   0012DC  6ED9               	movwf	fsr2l,c
  8818   0012DE  6ADA               	clrf	fsr2h,c
  8819   0012E0  30DF               	rrcf	223,w,c
  8820   0012E2  32E8               	rrcf	wreg,f,c
  8821   0012E4  32E8               	rrcf	wreg,f,c
  8822   0012E6  0B07               	andlw	7
  8823   0012E8  6E40               	movwf	??_gpio_pin_write_logic^0,c
  8824   0012EA  0E07               	movlw	7
  8825   0012EC  6440               	cpfsgt	??_gpio_pin_write_logic^0,c
  8826   0012EE  EF7B  F009         	goto	u6871
  8827   0012F2  EF7D  F009         	goto	u6870
  8828   0012F6                     u6871:
  8829   0012F6  EF97  F00A         	goto	l9082
  8830   0012FA                     u6870:
  8831   0012FA                     l843:
  8832                           
  8833                           ;MCAL_layer/GPIO/hal_gpio.c: 96:         rt = (STD_ReturnType)0x00;
  8834   0012FA  6A42               	clrf	gpio_pin_write_logic@rt^0,c
  8835                           
  8836                           ;MCAL_layer/GPIO/hal_gpio.c: 97:     }
  8837   0012FC  EFAC  F00A         	goto	l9084
  8838   001300                     l9058:
  8839                           
  8840                           ;MCAL_layer/GPIO/hal_gpio.c: 103:                         LATA &= ~(1 << pinConfig ->pin
      +                          );break;
  8841   001300  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  8842   001302  6ED9               	movwf	fsr2l,c
  8843   001304  6ADA               	clrf	fsr2h,c
  8844   001306  30DF               	rrcf	223,w,c
  8845   001308  32E8               	rrcf	wreg,f,c
  8846   00130A  32E8               	rrcf	wreg,f,c
  8847   00130C  0B07               	andlw	7
  8848   00130E  6E40               	movwf	??_gpio_pin_write_logic^0,c
  8849   001310  0E01               	movlw	1
  8850   001312  6E41               	movwf	(??_gpio_pin_write_logic+1)^0,c
  8851   001314  2A40               	incf	??_gpio_pin_write_logic^0,f,c
  8852   001316  EF8F  F009         	goto	u6884
  8853   00131A                     u6885:
  8854   00131A  90D8               	bcf	status,0,c
  8855   00131C  3641               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  8856   00131E                     u6884:
  8857   00131E  2E40               	decfsz	??_gpio_pin_write_logic^0,f,c
  8858   001320  EF8D  F009         	goto	u6885
  8859   001324  5041               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  8860   001326  0AFF               	xorlw	255
  8861   001328  1689               	andwf	137,f,c	;volatile
  8862   00132A  EFAC  F00A         	goto	l9084
  8863   00132E                     l9060:
  8864                           
  8865                           ;MCAL_layer/GPIO/hal_gpio.c: 105:                         LATB &= ~(1 << pinConfig ->pin
      +                          );break;
  8866   00132E  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  8867   001330  6ED9               	movwf	fsr2l,c
  8868   001332  6ADA               	clrf	fsr2h,c
  8869   001334  30DF               	rrcf	223,w,c
  8870   001336  32E8               	rrcf	wreg,f,c
  8871   001338  32E8               	rrcf	wreg,f,c
  8872   00133A  0B07               	andlw	7
  8873   00133C  6E40               	movwf	??_gpio_pin_write_logic^0,c
  8874   00133E  0E01               	movlw	1
  8875   001340  6E41               	movwf	(??_gpio_pin_write_logic+1)^0,c
  8876   001342  2A40               	incf	??_gpio_pin_write_logic^0,f,c
  8877   001344  EFA6  F009         	goto	u6894
  8878   001348                     u6895:
  8879   001348  90D8               	bcf	status,0,c
  8880   00134A  3641               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  8881   00134C                     u6894:
  8882   00134C  2E40               	decfsz	??_gpio_pin_write_logic^0,f,c
  8883   00134E  EFA4  F009         	goto	u6895
  8884   001352  5041               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  8885   001354  0AFF               	xorlw	255
  8886   001356  168A               	andwf	138,f,c	;volatile
  8887   001358  EFAC  F00A         	goto	l9084
  8888   00135C                     l9062:
  8889                           
  8890                           ;MCAL_layer/GPIO/hal_gpio.c: 107:                         LATC &= ~(1 << pinConfig ->pin
      +                          );break;
  8891   00135C  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  8892   00135E  6ED9               	movwf	fsr2l,c
  8893   001360  6ADA               	clrf	fsr2h,c
  8894   001362  30DF               	rrcf	223,w,c
  8895   001364  32E8               	rrcf	wreg,f,c
  8896   001366  32E8               	rrcf	wreg,f,c
  8897   001368  0B07               	andlw	7
  8898   00136A  6E40               	movwf	??_gpio_pin_write_logic^0,c
  8899   00136C  0E01               	movlw	1
  8900   00136E  6E41               	movwf	(??_gpio_pin_write_logic+1)^0,c
  8901   001370  2A40               	incf	??_gpio_pin_write_logic^0,f,c
  8902   001372  EFBD  F009         	goto	u6904
  8903   001376                     u6905:
  8904   001376  90D8               	bcf	status,0,c
  8905   001378  3641               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  8906   00137A                     u6904:
  8907   00137A  2E40               	decfsz	??_gpio_pin_write_logic^0,f,c
  8908   00137C  EFBB  F009         	goto	u6905
  8909   001380  5041               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  8910   001382  0AFF               	xorlw	255
  8911   001384  168B               	andwf	139,f,c	;volatile
  8912   001386  EFAC  F00A         	goto	l9084
  8913   00138A                     l9064:
  8914                           
  8915                           ;MCAL_layer/GPIO/hal_gpio.c: 109:                         LATD &= ~(1 << pinConfig ->pin
      +                          );break;
  8916   00138A  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  8917   00138C  6ED9               	movwf	fsr2l,c
  8918   00138E  6ADA               	clrf	fsr2h,c
  8919   001390  30DF               	rrcf	223,w,c
  8920   001392  32E8               	rrcf	wreg,f,c
  8921   001394  32E8               	rrcf	wreg,f,c
  8922   001396  0B07               	andlw	7
  8923   001398  6E40               	movwf	??_gpio_pin_write_logic^0,c
  8924   00139A  0E01               	movlw	1
  8925   00139C  6E41               	movwf	(??_gpio_pin_write_logic+1)^0,c
  8926   00139E  2A40               	incf	??_gpio_pin_write_logic^0,f,c
  8927   0013A0  EFD4  F009         	goto	u6914
  8928   0013A4                     u6915:
  8929   0013A4  90D8               	bcf	status,0,c
  8930   0013A6  3641               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  8931   0013A8                     u6914:
  8932   0013A8  2E40               	decfsz	??_gpio_pin_write_logic^0,f,c
  8933   0013AA  EFD2  F009         	goto	u6915
  8934   0013AE  5041               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  8935   0013B0  0AFF               	xorlw	255
  8936   0013B2  168C               	andwf	140,f,c	;volatile
  8937   0013B4  EFAC  F00A         	goto	l9084
  8938   0013B8                     l9066:
  8939                           
  8940                           ;MCAL_layer/GPIO/hal_gpio.c: 111:                         LATE &= ~(1 << pinConfig ->pin
      +                          );break;
  8941   0013B8  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  8942   0013BA  6ED9               	movwf	fsr2l,c
  8943   0013BC  6ADA               	clrf	fsr2h,c
  8944   0013BE  30DF               	rrcf	223,w,c
  8945   0013C0  32E8               	rrcf	wreg,f,c
  8946   0013C2  32E8               	rrcf	wreg,f,c
  8947   0013C4  0B07               	andlw	7
  8948   0013C6  6E40               	movwf	??_gpio_pin_write_logic^0,c
  8949   0013C8  0E01               	movlw	1
  8950   0013CA  6E41               	movwf	(??_gpio_pin_write_logic+1)^0,c
  8951   0013CC  2A40               	incf	??_gpio_pin_write_logic^0,f,c
  8952   0013CE  EFEB  F009         	goto	u6924
  8953   0013D2                     u6925:
  8954   0013D2  90D8               	bcf	status,0,c
  8955   0013D4  3641               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  8956   0013D6                     u6924:
  8957   0013D6  2E40               	decfsz	??_gpio_pin_write_logic^0,f,c
  8958   0013D8  EFE9  F009         	goto	u6925
  8959   0013DC  5041               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  8960   0013DE  0AFF               	xorlw	255
  8961   0013E0  168D               	andwf	141,f,c	;volatile
  8962   0013E2  EFAC  F00A         	goto	l9084
  8963   0013E6                     l9068:
  8964   0013E6  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  8965   0013E8  6ED9               	movwf	fsr2l,c
  8966   0013EA  6ADA               	clrf	fsr2h,c
  8967   0013EC  50DF               	movf	223,w,c
  8968   0013EE  0B07               	andlw	7
  8969                           
  8970                           ; Switch size 1, requested type "simple"
  8971                           ; Number of cases is 5, Range of values is 0 to 4
  8972                           ; switch strategies available:
  8973                           ; Name         Instructions Cycles
  8974                           ; simple_byte           16     9 (average)
  8975                           ;	Chosen strategy is simple_byte
  8976   0013F0  0A00               	xorlw	0	; case 0
  8977   0013F2  B4D8               	btfsc	status,2,c
  8978   0013F4  EF80  F009         	goto	l9058
  8979   0013F8  0A01               	xorlw	1	; case 1
  8980   0013FA  B4D8               	btfsc	status,2,c
  8981   0013FC  EF97  F009         	goto	l9060
  8982   001400  0A03               	xorlw	3	; case 2
  8983   001402  B4D8               	btfsc	status,2,c
  8984   001404  EFAE  F009         	goto	l9062
  8985   001408  0A01               	xorlw	1	; case 3
  8986   00140A  B4D8               	btfsc	status,2,c
  8987   00140C  EFC5  F009         	goto	l9064
  8988   001410  0A07               	xorlw	7	; case 4
  8989   001412  B4D8               	btfsc	status,2,c
  8990   001414  EFDC  F009         	goto	l9066
  8991   001418  EF7D  F009         	goto	l843
  8992   00141C                     l9070:
  8993                           
  8994                           ;MCAL_layer/GPIO/hal_gpio.c: 118:                         LATA |= (1 << pinConfig ->pin)
      +                          ;break;
  8995   00141C  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  8996   00141E  6ED9               	movwf	fsr2l,c
  8997   001420  6ADA               	clrf	fsr2h,c
  8998   001422  30DF               	rrcf	223,w,c
  8999   001424  32E8               	rrcf	wreg,f,c
  9000   001426  32E8               	rrcf	wreg,f,c
  9001   001428  0B07               	andlw	7
  9002   00142A  6E40               	movwf	??_gpio_pin_write_logic^0,c
  9003   00142C  0E01               	movlw	1
  9004   00142E  6E41               	movwf	(??_gpio_pin_write_logic+1)^0,c
  9005   001430  2A40               	incf	??_gpio_pin_write_logic^0,f,c
  9006   001432  EF1D  F00A         	goto	u6934
  9007   001436                     u6935:
  9008   001436  90D8               	bcf	status,0,c
  9009   001438  3641               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  9010   00143A                     u6934:
  9011   00143A  2E40               	decfsz	??_gpio_pin_write_logic^0,f,c
  9012   00143C  EF1B  F00A         	goto	u6935
  9013   001440  5041               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  9014   001442  1289               	iorwf	137,f,c	;volatile
  9015   001444  EFAC  F00A         	goto	l9084
  9016   001448                     l9072:
  9017                           
  9018                           ;MCAL_layer/GPIO/hal_gpio.c: 120:                         LATB |= (1 << pinConfig ->pin)
      +                          ;break;
  9019   001448  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  9020   00144A  6ED9               	movwf	fsr2l,c
  9021   00144C  6ADA               	clrf	fsr2h,c
  9022   00144E  30DF               	rrcf	223,w,c
  9023   001450  32E8               	rrcf	wreg,f,c
  9024   001452  32E8               	rrcf	wreg,f,c
  9025   001454  0B07               	andlw	7
  9026   001456  6E40               	movwf	??_gpio_pin_write_logic^0,c
  9027   001458  0E01               	movlw	1
  9028   00145A  6E41               	movwf	(??_gpio_pin_write_logic+1)^0,c
  9029   00145C  2A40               	incf	??_gpio_pin_write_logic^0,f,c
  9030   00145E  EF33  F00A         	goto	u6944
  9031   001462                     u6945:
  9032   001462  90D8               	bcf	status,0,c
  9033   001464  3641               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  9034   001466                     u6944:
  9035   001466  2E40               	decfsz	??_gpio_pin_write_logic^0,f,c
  9036   001468  EF31  F00A         	goto	u6945
  9037   00146C  5041               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  9038   00146E  128A               	iorwf	138,f,c	;volatile
  9039   001470  EFAC  F00A         	goto	l9084
  9040   001474                     l9074:
  9041                           
  9042                           ;MCAL_layer/GPIO/hal_gpio.c: 122:                         LATC |= (1 << pinConfig ->pin)
      +                          ;break;
  9043   001474  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  9044   001476  6ED9               	movwf	fsr2l,c
  9045   001478  6ADA               	clrf	fsr2h,c
  9046   00147A  30DF               	rrcf	223,w,c
  9047   00147C  32E8               	rrcf	wreg,f,c
  9048   00147E  32E8               	rrcf	wreg,f,c
  9049   001480  0B07               	andlw	7
  9050   001482  6E40               	movwf	??_gpio_pin_write_logic^0,c
  9051   001484  0E01               	movlw	1
  9052   001486  6E41               	movwf	(??_gpio_pin_write_logic+1)^0,c
  9053   001488  2A40               	incf	??_gpio_pin_write_logic^0,f,c
  9054   00148A  EF49  F00A         	goto	u6954
  9055   00148E                     u6955:
  9056   00148E  90D8               	bcf	status,0,c
  9057   001490  3641               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  9058   001492                     u6954:
  9059   001492  2E40               	decfsz	??_gpio_pin_write_logic^0,f,c
  9060   001494  EF47  F00A         	goto	u6955
  9061   001498  5041               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  9062   00149A  128B               	iorwf	139,f,c	;volatile
  9063   00149C  EFAC  F00A         	goto	l9084
  9064   0014A0                     l9076:
  9065                           
  9066                           ;MCAL_layer/GPIO/hal_gpio.c: 124:                         LATD |= (1 << pinConfig ->pin)
      +                          ;break;
  9067   0014A0  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  9068   0014A2  6ED9               	movwf	fsr2l,c
  9069   0014A4  6ADA               	clrf	fsr2h,c
  9070   0014A6  30DF               	rrcf	223,w,c
  9071   0014A8  32E8               	rrcf	wreg,f,c
  9072   0014AA  32E8               	rrcf	wreg,f,c
  9073   0014AC  0B07               	andlw	7
  9074   0014AE  6E40               	movwf	??_gpio_pin_write_logic^0,c
  9075   0014B0  0E01               	movlw	1
  9076   0014B2  6E41               	movwf	(??_gpio_pin_write_logic+1)^0,c
  9077   0014B4  2A40               	incf	??_gpio_pin_write_logic^0,f,c
  9078   0014B6  EF5F  F00A         	goto	u6964
  9079   0014BA                     u6965:
  9080   0014BA  90D8               	bcf	status,0,c
  9081   0014BC  3641               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  9082   0014BE                     u6964:
  9083   0014BE  2E40               	decfsz	??_gpio_pin_write_logic^0,f,c
  9084   0014C0  EF5D  F00A         	goto	u6965
  9085   0014C4  5041               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  9086   0014C6  128C               	iorwf	140,f,c	;volatile
  9087   0014C8  EFAC  F00A         	goto	l9084
  9088   0014CC                     l9078:
  9089                           
  9090                           ;MCAL_layer/GPIO/hal_gpio.c: 126:                         LATE |= (1 << pinConfig ->pin)
      +                          ;break;
  9091   0014CC  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  9092   0014CE  6ED9               	movwf	fsr2l,c
  9093   0014D0  6ADA               	clrf	fsr2h,c
  9094   0014D2  30DF               	rrcf	223,w,c
  9095   0014D4  32E8               	rrcf	wreg,f,c
  9096   0014D6  32E8               	rrcf	wreg,f,c
  9097   0014D8  0B07               	andlw	7
  9098   0014DA  6E40               	movwf	??_gpio_pin_write_logic^0,c
  9099   0014DC  0E01               	movlw	1
  9100   0014DE  6E41               	movwf	(??_gpio_pin_write_logic+1)^0,c
  9101   0014E0  2A40               	incf	??_gpio_pin_write_logic^0,f,c
  9102   0014E2  EF75  F00A         	goto	u6974
  9103   0014E6                     u6975:
  9104   0014E6  90D8               	bcf	status,0,c
  9105   0014E8  3641               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  9106   0014EA                     u6974:
  9107   0014EA  2E40               	decfsz	??_gpio_pin_write_logic^0,f,c
  9108   0014EC  EF73  F00A         	goto	u6975
  9109   0014F0  5041               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  9110   0014F2  128D               	iorwf	141,f,c	;volatile
  9111   0014F4  EFAC  F00A         	goto	l9084
  9112   0014F8                     l9080:
  9113   0014F8  503E               	movf	gpio_pin_write_logic@pinConfig^0,w,c
  9114   0014FA  6ED9               	movwf	fsr2l,c
  9115   0014FC  6ADA               	clrf	fsr2h,c
  9116   0014FE  50DF               	movf	223,w,c
  9117   001500  0B07               	andlw	7
  9118                           
  9119                           ; Switch size 1, requested type "simple"
  9120                           ; Number of cases is 5, Range of values is 0 to 4
  9121                           ; switch strategies available:
  9122                           ; Name         Instructions Cycles
  9123                           ; simple_byte           16     9 (average)
  9124                           ;	Chosen strategy is simple_byte
  9125   001502  0A00               	xorlw	0	; case 0
  9126   001504  B4D8               	btfsc	status,2,c
  9127   001506  EF0E  F00A         	goto	l9070
  9128   00150A  0A01               	xorlw	1	; case 1
  9129   00150C  B4D8               	btfsc	status,2,c
  9130   00150E  EF24  F00A         	goto	l9072
  9131   001512  0A03               	xorlw	3	; case 2
  9132   001514  B4D8               	btfsc	status,2,c
  9133   001516  EF3A  F00A         	goto	l9074
  9134   00151A  0A01               	xorlw	1	; case 3
  9135   00151C  B4D8               	btfsc	status,2,c
  9136   00151E  EF50  F00A         	goto	l9076
  9137   001522  0A07               	xorlw	7	; case 4
  9138   001524  B4D8               	btfsc	status,2,c
  9139   001526  EF66  F00A         	goto	l9078
  9140   00152A  EF7D  F009         	goto	l843
  9141   00152E                     l9082:
  9142   00152E  503F               	movf	gpio_pin_write_logic@logic^0,w,c
  9143   001530  6E40               	movwf	??_gpio_pin_write_logic^0,c
  9144   001532  6A41               	clrf	(??_gpio_pin_write_logic+1)^0,c
  9145                           
  9146                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9147                           ; Switch size 1, requested type "simple"
  9148                           ; Number of cases is 1, Range of values is 0 to 0
  9149                           ; switch strategies available:
  9150                           ; Name         Instructions Cycles
  9151                           ; simple_byte            4     3 (average)
  9152                           ;	Chosen strategy is simple_byte
  9153   001534  5041               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  9154   001536  0A00               	xorlw	0	; case 0
  9155   001538  B4D8               	btfsc	status,2,c
  9156   00153A  EFA1  F00A         	goto	l10052
  9157   00153E  EF7D  F009         	goto	l843
  9158   001542                     l10052:
  9159                           
  9160                           ; Switch size 1, requested type "simple"
  9161                           ; Number of cases is 2, Range of values is 0 to 1
  9162                           ; switch strategies available:
  9163                           ; Name         Instructions Cycles
  9164                           ; simple_byte            7     4 (average)
  9165                           ;	Chosen strategy is simple_byte
  9166   001542  5040               	movf	??_gpio_pin_write_logic^0,w,c
  9167   001544  0A00               	xorlw	0	; case 0
  9168   001546  B4D8               	btfsc	status,2,c
  9169   001548  EFF3  F009         	goto	l9068
  9170   00154C  0A01               	xorlw	1	; case 1
  9171   00154E  B4D8               	btfsc	status,2,c
  9172   001550  EF7C  F00A         	goto	l9080
  9173   001554  EF7D  F009         	goto	l843
  9174   001558                     l9084:
  9175                           
  9176                           ;MCAL_layer/GPIO/hal_gpio.c: 133:     return rt;
  9177   001558  5042               	movf	gpio_pin_write_logic@rt^0,w,c
  9178   00155A  0012               	return		;funcret
  9179   00155C                     __end_of_gpio_pin_write_logic:
  9180                           	callstack 0
  9181                           
  9182 ;; *************** function _gpio_pin_direction_initialize *****************
  9183 ;; Defined at:
  9184 ;;		line 20 in file "MCAL_layer/GPIO/hal_gpio.c"
  9185 ;; Parameters:    Size  Location     Type
  9186 ;;  pinConfig       1    5[COMRAM] PTR const struct .
  9187 ;;		 -> CCP1_obj$CCPx_PIN$port(1), ECU_Relay_Initialize@relay_t(1), LED_init@LED(1), pinRC7(1), 
  9188 ;;		 -> pinRC6(1), InDoor_E(1), Dc_Motor_Gate$dc_motor_pin(2), Dc_Motor_Gate(2), 
  9189 ;;		 -> keypad_1$KeypadColoumnsConfig(3), keypad_1$KeypadRowsConfig(4), keypad_1(7), LCD_1$DataPins(4), 
  9190 ;;		 -> LCD_1(6), 
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;  rt              1    8[COMRAM] unsigned char 
  9193 ;; Return value:  Size  Location     Type
  9194 ;;                  1    wreg      unsigned char 
  9195 ;; Registers used:
  9196 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9197 ;; Tracked objects:
  9198 ;;		On entry : 0/0
  9199 ;;		On exit  : 0/0
  9200 ;;		Unchanged: 0/0
  9201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9202 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9203 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9204 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9205 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9206 ;;Total ram usage:        4 bytes
  9207 ;; Hardware stack levels used: 1
  9208 ;; Hardware stack levels required when called: 5
  9209 ;; This function calls:
  9210 ;;		Nothing
  9211 ;; This function is called by:
  9212 ;;		_gpio_pin_initialize
  9213 ;;		_keyPad_Initialize
  9214 ;;		_LED_init
  9215 ;;		_Interrupt_INTx_Pin_Init
  9216 ;;		_Interrupt_RBx_Pin_Init
  9217 ;;		_ECU_Button_Intalize
  9218 ;;		_ECU_STEPPER_Motor_initialize
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           	psect	text37
  9223   00102A                     __ptext37:
  9224                           	callstack 0
  9225   00102A                     _gpio_pin_direction_initialize:
  9226                           	callstack 23
  9227   00102A                     
  9228                           ;MCAL_layer/GPIO/hal_gpio.c: 21:     STD_ReturnType rt = (STD_ReturnType)0x01;
  9229   00102A  0E01               	movlw	1
  9230   00102C  6E41               	movwf	gpio_pin_direction_initialize@rt^0,c
  9231                           
  9232                           ;MCAL_layer/GPIO/hal_gpio.c: 22:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 -
      +                          1 ){
  9233   00102E  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9234   001030  B4D8               	btfsc	status,2,c
  9235   001032  EF1D  F008         	goto	u3941
  9236   001036  EF1F  F008         	goto	u3940
  9237   00103A                     u3941:
  9238   00103A  EF2F  F008         	goto	l800
  9239   00103E                     u3940:
  9240   00103E  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9241   001040  6ED9               	movwf	fsr2l,c
  9242   001042  6ADA               	clrf	fsr2h,c
  9243   001044  30DF               	rrcf	223,w,c
  9244   001046  32E8               	rrcf	wreg,f,c
  9245   001048  32E8               	rrcf	wreg,f,c
  9246   00104A  0B07               	andlw	7
  9247   00104C  6E3F               	movwf	??_gpio_pin_direction_initialize^0,c
  9248   00104E  0E07               	movlw	7
  9249   001050  643F               	cpfsgt	??_gpio_pin_direction_initialize^0,c
  9250   001052  EF2D  F008         	goto	u3951
  9251   001056  EF2F  F008         	goto	u3950
  9252   00105A                     u3951:
  9253   00105A  EF4B  F009         	goto	l6540
  9254   00105E                     u3950:
  9255   00105E                     l800:
  9256                           
  9257                           ;MCAL_layer/GPIO/hal_gpio.c: 23:         rt = (STD_ReturnType)0x00;
  9258   00105E  6A41               	clrf	gpio_pin_direction_initialize@rt^0,c
  9259                           
  9260                           ;MCAL_layer/GPIO/hal_gpio.c: 24:     }
  9261   001060  EF61  F009         	goto	l6542
  9262   001064                     l6516:
  9263                           
  9264                           ;MCAL_layer/GPIO/hal_gpio.c: 30:                         TRISA &= ~(1 << pinConfig ->pin
      +                          );break;
  9265   001064  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9266   001066  6ED9               	movwf	fsr2l,c
  9267   001068  6ADA               	clrf	fsr2h,c
  9268   00106A  30DF               	rrcf	223,w,c
  9269   00106C  32E8               	rrcf	wreg,f,c
  9270   00106E  32E8               	rrcf	wreg,f,c
  9271   001070  0B07               	andlw	7
  9272   001072  6E3F               	movwf	??_gpio_pin_direction_initialize^0,c
  9273   001074  0E01               	movlw	1
  9274   001076  6E40               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  9275   001078  2A3F               	incf	??_gpio_pin_direction_initialize^0,f,c
  9276   00107A  EF41  F008         	goto	u3964
  9277   00107E                     u3965:
  9278   00107E  90D8               	bcf	status,0,c
  9279   001080  3640               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  9280   001082                     u3964:
  9281   001082  2E3F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  9282   001084  EF3F  F008         	goto	u3965
  9283   001088  5040               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  9284   00108A  0AFF               	xorlw	255
  9285   00108C  1692               	andwf	146,f,c	;volatile
  9286   00108E  EF61  F009         	goto	l6542
  9287   001092                     l6518:
  9288                           
  9289                           ;MCAL_layer/GPIO/hal_gpio.c: 32:                         TRISB &= ~(1 << pinConfig ->pin
      +                          );break;
  9290   001092  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9291   001094  6ED9               	movwf	fsr2l,c
  9292   001096  6ADA               	clrf	fsr2h,c
  9293   001098  30DF               	rrcf	223,w,c
  9294   00109A  32E8               	rrcf	wreg,f,c
  9295   00109C  32E8               	rrcf	wreg,f,c
  9296   00109E  0B07               	andlw	7
  9297   0010A0  6E3F               	movwf	??_gpio_pin_direction_initialize^0,c
  9298   0010A2  0E01               	movlw	1
  9299   0010A4  6E40               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  9300   0010A6  2A3F               	incf	??_gpio_pin_direction_initialize^0,f,c
  9301   0010A8  EF58  F008         	goto	u3974
  9302   0010AC                     u3975:
  9303   0010AC  90D8               	bcf	status,0,c
  9304   0010AE  3640               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  9305   0010B0                     u3974:
  9306   0010B0  2E3F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  9307   0010B2  EF56  F008         	goto	u3975
  9308   0010B6  5040               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  9309   0010B8  0AFF               	xorlw	255
  9310   0010BA  1693               	andwf	147,f,c	;volatile
  9311   0010BC  EF61  F009         	goto	l6542
  9312   0010C0                     l6520:
  9313                           
  9314                           ;MCAL_layer/GPIO/hal_gpio.c: 34:                         TRISC &= ~(1 << pinConfig ->pin
      +                          );break;
  9315   0010C0  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9316   0010C2  6ED9               	movwf	fsr2l,c
  9317   0010C4  6ADA               	clrf	fsr2h,c
  9318   0010C6  30DF               	rrcf	223,w,c
  9319   0010C8  32E8               	rrcf	wreg,f,c
  9320   0010CA  32E8               	rrcf	wreg,f,c
  9321   0010CC  0B07               	andlw	7
  9322   0010CE  6E3F               	movwf	??_gpio_pin_direction_initialize^0,c
  9323   0010D0  0E01               	movlw	1
  9324   0010D2  6E40               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  9325   0010D4  2A3F               	incf	??_gpio_pin_direction_initialize^0,f,c
  9326   0010D6  EF6F  F008         	goto	u3984
  9327   0010DA                     u3985:
  9328   0010DA  90D8               	bcf	status,0,c
  9329   0010DC  3640               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  9330   0010DE                     u3984:
  9331   0010DE  2E3F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  9332   0010E0  EF6D  F008         	goto	u3985
  9333   0010E4  5040               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  9334   0010E6  0AFF               	xorlw	255
  9335   0010E8  1694               	andwf	148,f,c	;volatile
  9336   0010EA  EF61  F009         	goto	l6542
  9337   0010EE                     l6522:
  9338                           
  9339                           ;MCAL_layer/GPIO/hal_gpio.c: 36:                         TRISD &= ~(1 << pinConfig ->pin
      +                          );break;
  9340   0010EE  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9341   0010F0  6ED9               	movwf	fsr2l,c
  9342   0010F2  6ADA               	clrf	fsr2h,c
  9343   0010F4  30DF               	rrcf	223,w,c
  9344   0010F6  32E8               	rrcf	wreg,f,c
  9345   0010F8  32E8               	rrcf	wreg,f,c
  9346   0010FA  0B07               	andlw	7
  9347   0010FC  6E3F               	movwf	??_gpio_pin_direction_initialize^0,c
  9348   0010FE  0E01               	movlw	1
  9349   001100  6E40               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  9350   001102  2A3F               	incf	??_gpio_pin_direction_initialize^0,f,c
  9351   001104  EF86  F008         	goto	u3994
  9352   001108                     u3995:
  9353   001108  90D8               	bcf	status,0,c
  9354   00110A  3640               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  9355   00110C                     u3994:
  9356   00110C  2E3F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  9357   00110E  EF84  F008         	goto	u3995
  9358   001112  5040               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  9359   001114  0AFF               	xorlw	255
  9360   001116  1695               	andwf	149,f,c	;volatile
  9361   001118  EF61  F009         	goto	l6542
  9362   00111C                     l6524:
  9363                           
  9364                           ;MCAL_layer/GPIO/hal_gpio.c: 38:                         TRISE &= ~(1 << pinConfig ->pin
      +                          );break;
  9365   00111C  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9366   00111E  6ED9               	movwf	fsr2l,c
  9367   001120  6ADA               	clrf	fsr2h,c
  9368   001122  30DF               	rrcf	223,w,c
  9369   001124  32E8               	rrcf	wreg,f,c
  9370   001126  32E8               	rrcf	wreg,f,c
  9371   001128  0B07               	andlw	7
  9372   00112A  6E3F               	movwf	??_gpio_pin_direction_initialize^0,c
  9373   00112C  0E01               	movlw	1
  9374   00112E  6E40               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  9375   001130  2A3F               	incf	??_gpio_pin_direction_initialize^0,f,c
  9376   001132  EF9D  F008         	goto	u4004
  9377   001136                     u4005:
  9378   001136  90D8               	bcf	status,0,c
  9379   001138  3640               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  9380   00113A                     u4004:
  9381   00113A  2E3F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  9382   00113C  EF9B  F008         	goto	u4005
  9383   001140  5040               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  9384   001142  0AFF               	xorlw	255
  9385   001144  1696               	andwf	150,f,c	;volatile
  9386   001146  EF61  F009         	goto	l6542
  9387   00114A                     l6526:
  9388   00114A  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9389   00114C  6ED9               	movwf	fsr2l,c
  9390   00114E  6ADA               	clrf	fsr2h,c
  9391   001150  50DF               	movf	223,w,c
  9392   001152  0B07               	andlw	7
  9393                           
  9394                           ; Switch size 1, requested type "simple"
  9395                           ; Number of cases is 5, Range of values is 0 to 4
  9396                           ; switch strategies available:
  9397                           ; Name         Instructions Cycles
  9398                           ; simple_byte           16     9 (average)
  9399                           ;	Chosen strategy is simple_byte
  9400   001154  0A00               	xorlw	0	; case 0
  9401   001156  B4D8               	btfsc	status,2,c
  9402   001158  EF32  F008         	goto	l6516
  9403   00115C  0A01               	xorlw	1	; case 1
  9404   00115E  B4D8               	btfsc	status,2,c
  9405   001160  EF49  F008         	goto	l6518
  9406   001164  0A03               	xorlw	3	; case 2
  9407   001166  B4D8               	btfsc	status,2,c
  9408   001168  EF60  F008         	goto	l6520
  9409   00116C  0A01               	xorlw	1	; case 3
  9410   00116E  B4D8               	btfsc	status,2,c
  9411   001170  EF77  F008         	goto	l6522
  9412   001174  0A07               	xorlw	7	; case 4
  9413   001176  B4D8               	btfsc	status,2,c
  9414   001178  EF8E  F008         	goto	l6524
  9415   00117C  EF2F  F008         	goto	l800
  9416   001180                     l6528:
  9417                           
  9418                           ;MCAL_layer/GPIO/hal_gpio.c: 47:                         TRISA |= (1 << pinConfig ->pin)
      +                          ;break;
  9419   001180  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9420   001182  6ED9               	movwf	fsr2l,c
  9421   001184  6ADA               	clrf	fsr2h,c
  9422   001186  30DF               	rrcf	223,w,c
  9423   001188  32E8               	rrcf	wreg,f,c
  9424   00118A  32E8               	rrcf	wreg,f,c
  9425   00118C  0B07               	andlw	7
  9426   00118E  6E3F               	movwf	??_gpio_pin_direction_initialize^0,c
  9427   001190  0E01               	movlw	1
  9428   001192  6E40               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  9429   001194  2A3F               	incf	??_gpio_pin_direction_initialize^0,f,c
  9430   001196  EFCF  F008         	goto	u4014
  9431   00119A                     u4015:
  9432   00119A  90D8               	bcf	status,0,c
  9433   00119C  3640               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  9434   00119E                     u4014:
  9435   00119E  2E3F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  9436   0011A0  EFCD  F008         	goto	u4015
  9437   0011A4  5040               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  9438   0011A6  1292               	iorwf	146,f,c	;volatile
  9439   0011A8  EF2F  F008         	goto	l800
  9440   0011AC                     l6530:
  9441                           
  9442                           ;MCAL_layer/GPIO/hal_gpio.c: 49:                         TRISB |= (1 << pinConfig ->pin)
      +                          ;break;
  9443   0011AC  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9444   0011AE  6ED9               	movwf	fsr2l,c
  9445   0011B0  6ADA               	clrf	fsr2h,c
  9446   0011B2  30DF               	rrcf	223,w,c
  9447   0011B4  32E8               	rrcf	wreg,f,c
  9448   0011B6  32E8               	rrcf	wreg,f,c
  9449   0011B8  0B07               	andlw	7
  9450   0011BA  6E3F               	movwf	??_gpio_pin_direction_initialize^0,c
  9451   0011BC  0E01               	movlw	1
  9452   0011BE  6E40               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  9453   0011C0  2A3F               	incf	??_gpio_pin_direction_initialize^0,f,c
  9454   0011C2  EFE5  F008         	goto	u4024
  9455   0011C6                     u4025:
  9456   0011C6  90D8               	bcf	status,0,c
  9457   0011C8  3640               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  9458   0011CA                     u4024:
  9459   0011CA  2E3F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  9460   0011CC  EFE3  F008         	goto	u4025
  9461   0011D0  5040               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  9462   0011D2  1293               	iorwf	147,f,c	;volatile
  9463   0011D4  EF2F  F008         	goto	l800
  9464   0011D8                     l6532:
  9465                           
  9466                           ;MCAL_layer/GPIO/hal_gpio.c: 51:                         TRISC |= (1 << pinConfig ->pin)
      +                          ;break;
  9467   0011D8  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9468   0011DA  6ED9               	movwf	fsr2l,c
  9469   0011DC  6ADA               	clrf	fsr2h,c
  9470   0011DE  30DF               	rrcf	223,w,c
  9471   0011E0  32E8               	rrcf	wreg,f,c
  9472   0011E2  32E8               	rrcf	wreg,f,c
  9473   0011E4  0B07               	andlw	7
  9474   0011E6  6E3F               	movwf	??_gpio_pin_direction_initialize^0,c
  9475   0011E8  0E01               	movlw	1
  9476   0011EA  6E40               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  9477   0011EC  2A3F               	incf	??_gpio_pin_direction_initialize^0,f,c
  9478   0011EE  EFFB  F008         	goto	u4034
  9479   0011F2                     u4035:
  9480   0011F2  90D8               	bcf	status,0,c
  9481   0011F4  3640               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  9482   0011F6                     u4034:
  9483   0011F6  2E3F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  9484   0011F8  EFF9  F008         	goto	u4035
  9485   0011FC  5040               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  9486   0011FE  1294               	iorwf	148,f,c	;volatile
  9487   001200  EF2F  F008         	goto	l800
  9488   001204                     l6534:
  9489                           
  9490                           ;MCAL_layer/GPIO/hal_gpio.c: 53:                         TRISD |= (1 << pinConfig ->pin)
      +                          ;break;
  9491   001204  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9492   001206  6ED9               	movwf	fsr2l,c
  9493   001208  6ADA               	clrf	fsr2h,c
  9494   00120A  30DF               	rrcf	223,w,c
  9495   00120C  32E8               	rrcf	wreg,f,c
  9496   00120E  32E8               	rrcf	wreg,f,c
  9497   001210  0B07               	andlw	7
  9498   001212  6E3F               	movwf	??_gpio_pin_direction_initialize^0,c
  9499   001214  0E01               	movlw	1
  9500   001216  6E40               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  9501   001218  2A3F               	incf	??_gpio_pin_direction_initialize^0,f,c
  9502   00121A  EF11  F009         	goto	u4044
  9503   00121E                     u4045:
  9504   00121E  90D8               	bcf	status,0,c
  9505   001220  3640               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  9506   001222                     u4044:
  9507   001222  2E3F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  9508   001224  EF0F  F009         	goto	u4045
  9509   001228  5040               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  9510   00122A  1295               	iorwf	149,f,c	;volatile
  9511   00122C  EF2F  F008         	goto	l800
  9512   001230                     l6536:
  9513                           
  9514                           ;MCAL_layer/GPIO/hal_gpio.c: 55:                         TRISE |= (1 << pinConfig ->pin)
      +                          ;break;
  9515   001230  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9516   001232  6ED9               	movwf	fsr2l,c
  9517   001234  6ADA               	clrf	fsr2h,c
  9518   001236  30DF               	rrcf	223,w,c
  9519   001238  32E8               	rrcf	wreg,f,c
  9520   00123A  32E8               	rrcf	wreg,f,c
  9521   00123C  0B07               	andlw	7
  9522   00123E  6E3F               	movwf	??_gpio_pin_direction_initialize^0,c
  9523   001240  0E01               	movlw	1
  9524   001242  6E40               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  9525   001244  2A3F               	incf	??_gpio_pin_direction_initialize^0,f,c
  9526   001246  EF27  F009         	goto	u4054
  9527   00124A                     u4055:
  9528   00124A  90D8               	bcf	status,0,c
  9529   00124C  3640               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  9530   00124E                     u4054:
  9531   00124E  2E3F               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  9532   001250  EF25  F009         	goto	u4055
  9533   001254  5040               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  9534   001256  1296               	iorwf	150,f,c	;volatile
  9535   001258  EF2F  F008         	goto	l800
  9536   00125C                     l821:
  9537                           
  9538                           ;MCAL_layer/GPIO/hal_gpio.c: 57:                 }
  9539   00125C  EF2F  F008         	goto	l800
  9540   001260                     l6538:
  9541   001260  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9542   001262  6ED9               	movwf	fsr2l,c
  9543   001264  6ADA               	clrf	fsr2h,c
  9544   001266  50DF               	movf	223,w,c
  9545   001268  0B07               	andlw	7
  9546                           
  9547                           ; Switch size 1, requested type "simple"
  9548                           ; Number of cases is 5, Range of values is 0 to 4
  9549                           ; switch strategies available:
  9550                           ; Name         Instructions Cycles
  9551                           ; simple_byte           16     9 (average)
  9552                           ;	Chosen strategy is simple_byte
  9553   00126A  0A00               	xorlw	0	; case 0
  9554   00126C  B4D8               	btfsc	status,2,c
  9555   00126E  EFC0  F008         	goto	l6528
  9556   001272  0A01               	xorlw	1	; case 1
  9557   001274  B4D8               	btfsc	status,2,c
  9558   001276  EFD6  F008         	goto	l6530
  9559   00127A  0A03               	xorlw	3	; case 2
  9560   00127C  B4D8               	btfsc	status,2,c
  9561   00127E  EFEC  F008         	goto	l6532
  9562   001282  0A01               	xorlw	1	; case 3
  9563   001284  B4D8               	btfsc	status,2,c
  9564   001286  EF02  F009         	goto	l6534
  9565   00128A  0A07               	xorlw	7	; case 4
  9566   00128C  B4D8               	btfsc	status,2,c
  9567   00128E  EF18  F009         	goto	l6536
  9568   001292  EF2E  F009         	goto	l821
  9569   001296                     l6540:
  9570   001296  503E               	movf	gpio_pin_direction_initialize@pinConfig^0,w,c
  9571   001298  6ED9               	movwf	fsr2l,c
  9572   00129A  6ADA               	clrf	fsr2h,c
  9573   00129C  BCDF               	btfsc	indf2,6,c
  9574   00129E  EF53  F009         	goto	u4061
  9575   0012A2  EF56  F009         	goto	u4060
  9576   0012A6                     u4061:
  9577   0012A6  0E01               	movlw	1
  9578   0012A8  EF57  F009         	goto	u4066
  9579   0012AC                     u4060:
  9580   0012AC  0E00               	movlw	0
  9581   0012AE                     u4066:
  9582                           
  9583                           ; Switch size 1, requested type "simple"
  9584                           ; Number of cases is 2, Range of values is 0 to 1
  9585                           ; switch strategies available:
  9586                           ; Name         Instructions Cycles
  9587                           ; simple_byte            7     4 (average)
  9588                           ;	Chosen strategy is simple_byte
  9589   0012AE  0A00               	xorlw	0	; case 0
  9590   0012B0  B4D8               	btfsc	status,2,c
  9591   0012B2  EFA5  F008         	goto	l6526
  9592   0012B6  0A01               	xorlw	1	; case 1
  9593   0012B8  B4D8               	btfsc	status,2,c
  9594   0012BA  EF30  F009         	goto	l6538
  9595   0012BE  EF2F  F008         	goto	l800
  9596   0012C2                     l6542:
  9597                           
  9598                           ;MCAL_layer/GPIO/hal_gpio.c: 61:     return rt;
  9599   0012C2  5041               	movf	gpio_pin_direction_initialize@rt^0,w,c
  9600   0012C4  0012               	return		;funcret
  9601   0012C6                     __end_of_gpio_pin_direction_initialize:
  9602                           	callstack 0
  9603                           
  9604 ;; *************** function _INTERRUPT_InterruptManagerHigh *****************
  9605 ;; Defined at:
  9606 ;;		line 68 in file "mcc_generated_files/interrupt_manager.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;		None
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;		None
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  1    wreg      void 
  9613 ;; Registers used:
  9614 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9620 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9621 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9623 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9624 ;;Total ram usage:        2 bytes
  9625 ;; Hardware stack levels used: 1
  9626 ;; Hardware stack levels required when called: 4
  9627 ;; This function calls:
  9628 ;;		NULL
  9629 ;;		_I2C_Isr
  9630 ;; This function is called by:
  9631 ;;		Interrupt level 2
  9632 ;; This function uses a non-reentrant model
  9633 ;;
  9634                           
  9635                           	psect	intcode
  9636   000008                     __pintcode:
  9637                           	callstack 0
  9638   000008                     _INTERRUPT_InterruptManagerHigh:
  9639                           	callstack 20
  9640                           
  9641                           ;incstack = 0
  9642   000008  825A               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9643   00000A  CFFA F03C          	movff	pclath,??_INTERRUPT_InterruptManagerHigh
  9644   00000E  CFFB F03D          	movff	pclatu,??_INTERRUPT_InterruptManagerHigh+1
  9645   000012                     
  9646                           ;mcc_generated_files/interrupt_manager.c: 71:     if(PIE1bits.SSPIE == 1 && PIR1bits.SSP
      +                          IF == 1)
  9647   000012  A69D               	btfss	157,3,c	;volatile
  9648   000014  EF0E  F000         	goto	i2u146_41
  9649   000018  EF10  F000         	goto	i2u146_40
  9650   00001C                     i2u146_41:
  9651   00001C  EF25  F000         	goto	i2l476
  9652   000020                     i2u146_40:
  9653   000020  A69E               	btfss	158,3,c	;volatile
  9654   000022  EF15  F000         	goto	i2u147_41
  9655   000026  EF17  F000         	goto	i2u147_40
  9656   00002A                     i2u147_41:
  9657   00002A  EF25  F000         	goto	i2l476
  9658   00002E                     i2u147_40:
  9659   00002E                     i2l4206:
  9660                           
  9661                           ;mcc_generated_files/interrupt_manager.c: 72:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:         MSSP_InterruptHandler();
  9662   00002E  D802               	call	i2u148_48
  9663   000030  EF23  F000         	goto	i2u148_49
  9664   000034                     i2u148_48:
  9665   000034  0005               	push	
  9666   000036  6EFA               	movwf	pclath,c
  9667   000038  501D               	movf	_MSSP_InterruptHandler^0,w,c
  9668   00003A  6EFD               	movwf	tosl,c
  9669   00003C  501E               	movf	(_MSSP_InterruptHandler+1)^0,w,c
  9670   00003E  6EFE               	movwf	tosh,c
  9671   000040  6AFF               	clrf	tosu,c
  9672   000042  50FA               	movf	pclath,w,c
  9673   000044  0012               	return		;indir
  9674   000046                     i2u148_49:
  9675                           
  9676                           ;mcc_generated_files/interrupt_manager.c: 74:     }
  9677   000046  EF35  F000         	goto	i2l480
  9678   00004A                     i2l476:
  9679   00004A  A6A0               	btfss	160,3,c	;volatile
  9680   00004C  EF2A  F000         	goto	i2u149_41
  9681   000050  EF2C  F000         	goto	i2u149_40
  9682   000054                     i2u149_41:
  9683   000054  EF35  F000         	goto	i2l480
  9684   000058                     i2u149_40:
  9685   000058  A6A1               	btfss	161,3,c	;volatile
  9686   00005A  EF31  F000         	goto	i2u150_41
  9687   00005E  EF33  F000         	goto	i2u150_40
  9688   000062                     i2u150_41:
  9689   000062  EF35  F000         	goto	i2l480
  9690   000066                     i2u150_40:
  9691   000066  EF17  F000         	goto	i2l4206
  9692   00006A                     i2l480:
  9693   00006A  C03D  FFFB         	movff	??_INTERRUPT_InterruptManagerHigh+1,pclatu
  9694   00006E  C03C  FFFA         	movff	??_INTERRUPT_InterruptManagerHigh,pclath
  9695   000072  925A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9696   000074  0011               	retfie		f
  9697   000076                     __end_of_INTERRUPT_InterruptManagerHigh:
  9698                           	callstack 0
  9699                           
  9700 ;; *************** function _I2C_Isr *****************
  9701 ;; Defined at:
  9702 ;;		line 165 in file "mcc_generated_files/i2c_slave.c"
  9703 ;; Parameters:    Size  Location     Type
  9704 ;;		None
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;		None
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  1    wreg      void 
  9709 ;; Registers used:
  9710 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9718 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9719 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9720 ;;Total ram usage:        2 bytes
  9721 ;; Hardware stack levels used: 1
  9722 ;; Hardware stack levels required when called: 3
  9723 ;; This function calls:
  9724 ;;		_I2C_SlaveAddrCallBack
  9725 ;;		_I2C_SlaveClearIrq
  9726 ;;		_I2C_SlaveIsAddr
  9727 ;;		_I2C_SlaveIsRead
  9728 ;;		_I2C_SlaveIsRxBufFull
  9729 ;;		_I2C_SlaveIsTxBufEmpty
  9730 ;;		_I2C_SlaveRdCallBack
  9731 ;;		_I2C_SlaveReleaseClock
  9732 ;;		_I2C_SlaveWrCallBack
  9733 ;; This function is called by:
  9734 ;;		_I2C_Open
  9735 ;;		_INTERRUPT_InterruptManagerHigh
  9736 ;; This function uses a non-reentrant model
  9737 ;;
  9738                           
  9739                           	psect	text39
  9740   001928                     __ptext39:
  9741                           	callstack 0
  9742   001928                     _I2C_Isr:
  9743                           	callstack 20
  9744   001928                     
  9745                           ;mcc_generated_files/i2c_slave.c: 167:     I2C_SlaveClearIrq();
  9746   001928  EC68  F012         	call	_I2C_SlaveClearIrq	;wreg free
  9747   00192C                     
  9748                           ;mcc_generated_files/i2c_slave.c: 169:     if(I2C_SlaveIsAddr())
  9749   00192C  EC04  F012         	call	_I2C_SlaveIsAddr	;wreg free
  9750   001930  0900               	iorlw	0
  9751   001932  B4D8               	btfsc	status,2,c
  9752   001934  EF9E  F00C         	goto	i2u96_41
  9753   001938  EFA0  F00C         	goto	i2u96_40
  9754   00193C                     i2u96_41:
  9755   00193C  EFB2  F00C         	goto	i2l3824
  9756   001940                     i2u96_40:
  9757   001940                     
  9758                           ;mcc_generated_files/i2c_slave.c: 170:     {;mcc_generated_files/i2c_slave.c: 171:      
      +                             if(I2C_SlaveIsRead())
  9759   001940  ECFA  F011         	call	_I2C_SlaveIsRead	;wreg free
  9760   001944  0900               	iorlw	0
  9761   001946  B4D8               	btfsc	status,2,c
  9762   001948  EFA8  F00C         	goto	i2u97_41
  9763   00194C  EFAA  F00C         	goto	i2u97_40
  9764   001950                     i2u97_41:
  9765   001950  EFAE  F00C         	goto	i2l3822
  9766   001954                     i2u97_40:
  9767   001954                     
  9768                           ;mcc_generated_files/i2c_slave.c: 172:         {;mcc_generated_files/i2c_slave.c: 173:  
      +                                     i2cSlaveState = I2C_ADDR_TX;
  9769   001954  0E01               	movlw	1
  9770   001956  6E2E               	movwf	_i2cSlaveState^0,c	;volatile
  9771                           
  9772                           ;mcc_generated_files/i2c_slave.c: 174:         }
  9773   001958  EFF2  F00C         	goto	i2l3848
  9774   00195C                     i2l3822:
  9775                           
  9776                           ;mcc_generated_files/i2c_slave.c: 176:         {;mcc_generated_files/i2c_slave.c: 177:  
      +                                     i2cSlaveState = I2C_ADDR_RX;
  9777   00195C  0E02               	movlw	2
  9778   00195E  6E2E               	movwf	_i2cSlaveState^0,c	;volatile
  9779   001960  EFF2  F00C         	goto	i2l3848
  9780   001964                     i2l3824:
  9781                           
  9782                           ;mcc_generated_files/i2c_slave.c: 181:     {;mcc_generated_files/i2c_slave.c: 182:      
      +                             if(I2C_SlaveIsRead())
  9783   001964  ECFA  F011         	call	_I2C_SlaveIsRead	;wreg free
  9784   001968  0900               	iorlw	0
  9785   00196A  B4D8               	btfsc	status,2,c
  9786   00196C  EFBA  F00C         	goto	i2u98_41
  9787   001970  EFBC  F00C         	goto	i2u98_40
  9788   001974                     i2u98_41:
  9789   001974  EFC0  F00C         	goto	i2l3828
  9790   001978                     i2u98_40:
  9791   001978                     
  9792                           ;mcc_generated_files/i2c_slave.c: 183:         {;mcc_generated_files/i2c_slave.c: 184:  
      +                                     i2cSlaveState = I2C_DATA_TX;
  9793   001978  0E03               	movlw	3
  9794   00197A  6E2E               	movwf	_i2cSlaveState^0,c	;volatile
  9795                           
  9796                           ;mcc_generated_files/i2c_slave.c: 185:         }
  9797   00197C  EFF2  F00C         	goto	i2l3848
  9798   001980                     i2l3828:
  9799                           
  9800                           ;mcc_generated_files/i2c_slave.c: 187:         {;mcc_generated_files/i2c_slave.c: 188:  
      +                                     i2cSlaveState = I2C_DATA_RX;
  9801   001980  0E04               	movlw	4
  9802   001982  6E2E               	movwf	_i2cSlaveState^0,c	;volatile
  9803   001984  EFF2  F00C         	goto	i2l3848
  9804   001988                     i2l3830:
  9805                           
  9806                           ;mcc_generated_files/i2c_slave.c: 195:             I2C_SlaveAddrCallBack();
  9807   001988  ECB1  F011         	call	_I2C_SlaveAddrCallBack	;wreg free
  9808   00198C                     
  9809                           ;mcc_generated_files/i2c_slave.c: 196:             if(I2C_SlaveIsTxBufEmpty())
  9810   00198C  ECE6  F011         	call	_I2C_SlaveIsTxBufEmpty	;wreg free
  9811   001990  0900               	iorlw	0
  9812   001992  B4D8               	btfsc	status,2,c
  9813   001994  EFCE  F00C         	goto	i2u99_41
  9814   001998  EFD0  F00C         	goto	i2u99_40
  9815   00199C                     i2u99_41:
  9816   00199C  EF0F  F00D         	goto	i2l3850
  9817   0019A0                     i2u99_40:
  9818   0019A0                     i2l3834:
  9819                           
  9820                           ;mcc_generated_files/i2c_slave.c: 197:             {;mcc_generated_files/i2c_slave.c: 19
      +                          8:                 I2C_SlaveWrCallBack();
  9821   0019A0  EC85  F011         	call	_I2C_SlaveWrCallBack	;wreg free
  9822   0019A4  EF0F  F00D         	goto	i2l3850
  9823   0019A8                     i2l3836:
  9824                           
  9825                           ;mcc_generated_files/i2c_slave.c: 202:             I2C_SlaveAddrCallBack();
  9826   0019A8  ECB1  F011         	call	_I2C_SlaveAddrCallBack	;wreg free
  9827                           
  9828                           ;mcc_generated_files/i2c_slave.c: 203:             break;
  9829   0019AC  EF0F  F00D         	goto	i2l3850
  9830   0019B0                     i2l3838:
  9831                           
  9832                           ;mcc_generated_files/i2c_slave.c: 205:             if(I2C_SlaveIsTxBufEmpty())
  9833   0019B0  ECE6  F011         	call	_I2C_SlaveIsTxBufEmpty	;wreg free
  9834   0019B4  0900               	iorlw	0
  9835   0019B6  B4D8               	btfsc	status,2,c
  9836   0019B8  EFE0  F00C         	goto	i2u100_41
  9837   0019BC  EFE2  F00C         	goto	i2u100_40
  9838   0019C0                     i2u100_41:
  9839   0019C0  EF0F  F00D         	goto	i2l3850
  9840   0019C4                     i2u100_40:
  9841   0019C4  EFD0  F00C         	goto	i2l3834
  9842   0019C8                     i2l3842:
  9843                           
  9844                           ;mcc_generated_files/i2c_slave.c: 211:             if(I2C_SlaveIsRxBufFull())
  9845   0019C8  ECF0  F011         	call	_I2C_SlaveIsRxBufFull	;wreg free
  9846   0019CC  0900               	iorlw	0
  9847   0019CE  B4D8               	btfsc	status,2,c
  9848   0019D0  EFEC  F00C         	goto	i2u101_41
  9849   0019D4  EFEE  F00C         	goto	i2u101_40
  9850   0019D8                     i2u101_41:
  9851   0019D8  EF0F  F00D         	goto	i2l3850
  9852   0019DC                     i2u101_40:
  9853   0019DC                     
  9854                           ;mcc_generated_files/i2c_slave.c: 212:             {;mcc_generated_files/i2c_slave.c: 21
      +                          3:                 I2C_SlaveRdCallBack();
  9855   0019DC  EC9B  F011         	call	_I2C_SlaveRdCallBack	;wreg free
  9856   0019E0  EF0F  F00D         	goto	i2l3850
  9857   0019E4                     i2l3848:
  9858   0019E4  502E               	movf	_i2cSlaveState^0,w,c	;volatile
  9859   0019E6  6E3A               	movwf	??_I2C_Isr^0,c
  9860   0019E8  6A3B               	clrf	(??_I2C_Isr+1)^0,c
  9861                           
  9862                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9863                           ; Switch size 1, requested type "simple"
  9864                           ; Number of cases is 1, Range of values is 0 to 0
  9865                           ; switch strategies available:
  9866                           ; Name         Instructions Cycles
  9867                           ; simple_byte            4     3 (average)
  9868                           ;	Chosen strategy is simple_byte
  9869   0019EA  503B               	movf	(??_I2C_Isr+1)^0,w,c
  9870   0019EC  0A00               	xorlw	0	; case 0
  9871   0019EE  B4D8               	btfsc	status,2,c
  9872   0019F0  EFFC  F00C         	goto	i2l10054
  9873   0019F4  EF0F  F00D         	goto	i2l3850
  9874   0019F8                     i2l10054:
  9875                           
  9876                           ; Switch size 1, requested type "simple"
  9877                           ; Number of cases is 4, Range of values is 1 to 4
  9878                           ; switch strategies available:
  9879                           ; Name         Instructions Cycles
  9880                           ; simple_byte           13     7 (average)
  9881                           ;	Chosen strategy is simple_byte
  9882   0019F8  503A               	movf	??_I2C_Isr^0,w,c
  9883   0019FA  0A01               	xorlw	1	; case 1
  9884   0019FC  B4D8               	btfsc	status,2,c
  9885   0019FE  EFC4  F00C         	goto	i2l3830
  9886   001A02  0A03               	xorlw	3	; case 2
  9887   001A04  B4D8               	btfsc	status,2,c
  9888   001A06  EFD4  F00C         	goto	i2l3836
  9889   001A0A  0A01               	xorlw	1	; case 3
  9890   001A0C  B4D8               	btfsc	status,2,c
  9891   001A0E  EFD8  F00C         	goto	i2l3838
  9892   001A12  0A07               	xorlw	7	; case 4
  9893   001A14  B4D8               	btfsc	status,2,c
  9894   001A16  EFE4  F00C         	goto	i2l3842
  9895   001A1A  EF0F  F00D         	goto	i2l3850
  9896   001A1E                     i2l3850:
  9897                           
  9898                           ;mcc_generated_files/i2c_slave.c: 219:     I2C_SlaveReleaseClock();
  9899   001A1E  EC66  F012         	call	_I2C_SlaveReleaseClock	;wreg free
  9900   001A22  0012               	return		;funcret
  9901   001A24                     __end_of_I2C_Isr:
  9902                           	callstack 0
  9903                           
  9904 ;; *************** function _I2C_SlaveWrCallBack *****************
  9905 ;; Defined at:
  9906 ;;		line 250 in file "mcc_generated_files/i2c_slave.c"
  9907 ;; Parameters:    Size  Location     Type
  9908 ;;		None
  9909 ;; Auto vars:     Size  Location     Type
  9910 ;;		None
  9911 ;; Return value:  Size  Location     Type
  9912 ;;                  1    wreg      void 
  9913 ;; Registers used:
  9914 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  9915 ;; Tracked objects:
  9916 ;;		On entry : 0/0
  9917 ;;		On exit  : 0/0
  9918 ;;		Unchanged: 0/0
  9919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9924 ;;Total ram usage:        0 bytes
  9925 ;; Hardware stack levels used: 1
  9926 ;; Hardware stack levels required when called: 2
  9927 ;; This function calls:
  9928 ;;		NULL
  9929 ;;		_I2C_SlaveDefWrInterruptHandler
  9930 ;; This function is called by:
  9931 ;;		_I2C_Isr
  9932 ;; This function uses a non-reentrant model
  9933 ;;
  9934                           
  9935                           	psect	text40
  9936   00230A                     __ptext40:
  9937                           	callstack 0
  9938   00230A                     _I2C_SlaveWrCallBack:
  9939                           	callstack 20
  9940   00230A                     
  9941                           ;mcc_generated_files/i2c_slave.c: 252:     if (I2C_SlaveWrInterruptHandler)
  9942   00230A  5019               	movf	_I2C_SlaveWrInterruptHandler^0,w,c
  9943   00230C  101A               	iorwf	(_I2C_SlaveWrInterruptHandler+1)^0,w,c
  9944   00230E  B4D8               	btfsc	status,2,c
  9945   002310  EF8C  F011         	goto	i2u52_41
  9946   002314  EF8E  F011         	goto	i2u52_40
  9947   002318                     i2u52_41:
  9948   002318  EF9A  F011         	goto	i2l348
  9949   00231C                     i2u52_40:
  9950   00231C                     
  9951                           ;mcc_generated_files/i2c_slave.c: 253:     {;mcc_generated_files/i2c_slave.c: 254:      
      +                             I2C_SlaveWrInterruptHandler();
  9952   00231C  D802               	call	i2u53_48
  9953   00231E  EF9A  F011         	goto	i2u53_49
  9954   002322                     i2u53_48:
  9955   002322  0005               	push	
  9956   002324  6EFA               	movwf	pclath,c
  9957   002326  5019               	movf	_I2C_SlaveWrInterruptHandler^0,w,c
  9958   002328  6EFD               	movwf	tosl,c
  9959   00232A  501A               	movf	(_I2C_SlaveWrInterruptHandler+1)^0,w,c
  9960   00232C  6EFE               	movwf	tosh,c
  9961   00232E  6AFF               	clrf	tosu,c
  9962   002330  50FA               	movf	pclath,w,c
  9963   002332  0012               	return		;indir
  9964   002334                     i2u53_49:
  9965   002334                     i2l348:
  9966   002334  0012               	return		;funcret
  9967   002336                     __end_of_I2C_SlaveWrCallBack:
  9968                           	callstack 0
  9969                           
  9970 ;; *************** function _I2C_SlaveDefWrInterruptHandler *****************
  9971 ;; Defined at:
  9972 ;;		line 258 in file "mcc_generated_files/i2c_slave.c"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;		None
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;		None
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  1    wreg      void 
  9979 ;; Registers used:
  9980 ;;		wreg, status,2, cstack
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9990 ;;Total ram usage:        0 bytes
  9991 ;; Hardware stack levels used: 1
  9992 ;; Hardware stack levels required when called: 1
  9993 ;; This function calls:
  9994 ;;		_I2C_SlaveSendTxData
  9995 ;; This function is called by:
  9996 ;;		_I2C_Open
  9997 ;;		_I2C_SlaveWrCallBack
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           	psect	text41
 10002   0024A2                     __ptext41:
 10003                           	callstack 0
 10004   0024A2                     _I2C_SlaveDefWrInterruptHandler:
 10005                           	callstack 20
 10006   0024A2                     
 10007                           ;mcc_generated_files/i2c_slave.c: 259:     I2C_SlaveSendTxData(i2cWrData);
 10008   0024A2  5031               	movf	_i2cWrData^0,w,c	;volatile
 10009   0024A4  EC55  F012         	call	_I2C_SlaveSendTxData
 10010   0024A8  0012               	return		;funcret
 10011   0024AA                     __end_of_I2C_SlaveDefWrInterruptHandler:
 10012                           	callstack 0
 10013                           
 10014 ;; *************** function _I2C_SlaveSendTxData *****************
 10015 ;; Defined at:
 10016 ;;		line 391 in file "mcc_generated_files/i2c_slave.c"
 10017 ;; Parameters:    Size  Location     Type
 10018 ;;  data            1    wreg     unsigned char 
 10019 ;; Auto vars:     Size  Location     Type
 10020 ;;  data            1    0[COMRAM] unsigned char 
 10021 ;; Return value:  Size  Location     Type
 10022 ;;                  1    wreg      void 
 10023 ;; Registers used:
 10024 ;;		wreg
 10025 ;; Tracked objects:
 10026 ;;		On entry : 0/0
 10027 ;;		On exit  : 0/0
 10028 ;;		Unchanged: 0/0
 10029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10031 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10034 ;;Total ram usage:        1 bytes
 10035 ;; Hardware stack levels used: 1
 10036 ;; This function calls:
 10037 ;;		Nothing
 10038 ;; This function is called by:
 10039 ;;		_I2C_SlaveDefWrInterruptHandler
 10040 ;;		_I2C_Write
 10041 ;; This function uses a non-reentrant model
 10042 ;;
 10043                           
 10044                           	psect	text42
 10045   0024AA                     __ptext42:
 10046                           	callstack 0
 10047   0024AA                     _I2C_SlaveSendTxData:
 10048                           	callstack 20
 10049                           
 10050                           ;incstack = 0
 10051                           ;I2C_SlaveSendTxData@data stored from wreg
 10052   0024AA  6E39               	movwf	I2C_SlaveSendTxData@data^0,c
 10053   0024AC                     
 10054                           ;mcc_generated_files/i2c_slave.c: 391: static __attribute__((inline)) void I2C_SlaveSend
      +                          TxData(uint8_t data);mcc_generated_files/i2c_slave.c: 392: {;mcc_generated_files/i2c_sla
      +                          ve.c: 393:     SSPBUF = data;
 10055   0024AC  C039  FFC9         	movff	I2C_SlaveSendTxData@data,4041	;volatile
 10056   0024B0  0012               	return		;funcret
 10057   0024B2                     __end_of_I2C_SlaveSendTxData:
 10058                           	callstack 0
 10059                           
 10060 ;; *************** function _I2C_SlaveReleaseClock *****************
 10061 ;; Defined at:
 10062 ;;		line 361 in file "mcc_generated_files/i2c_slave.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;		None
 10065 ;; Auto vars:     Size  Location     Type
 10066 ;;		None
 10067 ;; Return value:  Size  Location     Type
 10068 ;;                  1    wreg      void 
 10069 ;; Registers used:
 10070 ;;		None
 10071 ;; Tracked objects:
 10072 ;;		On entry : 0/0
 10073 ;;		On exit  : 0/0
 10074 ;;		Unchanged: 0/0
 10075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10080 ;;Total ram usage:        0 bytes
 10081 ;; Hardware stack levels used: 1
 10082 ;; This function calls:
 10083 ;;		Nothing
 10084 ;; This function is called by:
 10085 ;;		_I2C_Isr
 10086 ;; This function uses a non-reentrant model
 10087 ;;
 10088                           
 10089                           	psect	text43
 10090   0024CC                     __ptext43:
 10091                           	callstack 0
 10092   0024CC                     _I2C_SlaveReleaseClock:
 10093                           	callstack 22
 10094   0024CC                     
 10095                           ;mcc_generated_files/i2c_slave.c: 363:     SSPCON1bits.CKP = 1;
 10096   0024CC  88C6               	bsf	198,4,c	;volatile
 10097   0024CE  0012               	return		;funcret
 10098   0024D0                     __end_of_I2C_SlaveReleaseClock:
 10099                           	callstack 0
 10100                           
 10101 ;; *************** function _I2C_SlaveRdCallBack *****************
 10102 ;; Defined at:
 10103 ;;		line 233 in file "mcc_generated_files/i2c_slave.c"
 10104 ;; Parameters:    Size  Location     Type
 10105 ;;		None
 10106 ;; Auto vars:     Size  Location     Type
 10107 ;;		None
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  1    wreg      void 
 10110 ;; Registers used:
 10111 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10121 ;;Total ram usage:        0 bytes
 10122 ;; Hardware stack levels used: 1
 10123 ;; Hardware stack levels required when called: 2
 10124 ;; This function calls:
 10125 ;;		NULL
 10126 ;;		_I2C_DefaultInterruptHandler
 10127 ;;		_I2C_SlaveDefRdInterruptHandler
 10128 ;; This function is called by:
 10129 ;;		_I2C_Isr
 10130 ;; This function uses a non-reentrant model
 10131 ;;
 10132                           
 10133                           	psect	text44
 10134   002336                     __ptext44:
 10135                           	callstack 0
 10136   002336                     _I2C_SlaveRdCallBack:
 10137                           	callstack 20
 10138   002336                     
 10139                           ;mcc_generated_files/i2c_slave.c: 235:     if (I2C_SlaveRdInterruptHandler)
 10140   002336  501B               	movf	_I2C_SlaveRdInterruptHandler^0,w,c
 10141   002338  101C               	iorwf	(_I2C_SlaveRdInterruptHandler+1)^0,w,c
 10142   00233A  B4D8               	btfsc	status,2,c
 10143   00233C  EFA2  F011         	goto	i2u55_41
 10144   002340  EFA4  F011         	goto	i2u55_40
 10145   002344                     i2u55_41:
 10146   002344  EFB0  F011         	goto	i2l338
 10147   002348                     i2u55_40:
 10148   002348                     
 10149                           ;mcc_generated_files/i2c_slave.c: 236:     {;mcc_generated_files/i2c_slave.c: 237:      
      +                             I2C_SlaveRdInterruptHandler();
 10150   002348  D802               	call	i2u56_48
 10151   00234A  EFB0  F011         	goto	i2u56_49
 10152   00234E                     i2u56_48:
 10153   00234E  0005               	push	
 10154   002350  6EFA               	movwf	pclath,c
 10155   002352  501B               	movf	_I2C_SlaveRdInterruptHandler^0,w,c
 10156   002354  6EFD               	movwf	tosl,c
 10157   002356  501C               	movf	(_I2C_SlaveRdInterruptHandler+1)^0,w,c
 10158   002358  6EFE               	movwf	tosh,c
 10159   00235A  6AFF               	clrf	tosu,c
 10160   00235C  50FA               	movf	pclath,w,c
 10161   00235E  0012               	return		;indir
 10162   002360                     i2u56_49:
 10163   002360                     i2l338:
 10164   002360  0012               	return		;funcret
 10165   002362                     __end_of_I2C_SlaveRdCallBack:
 10166                           	callstack 0
 10167                           
 10168 ;; *************** function _I2C_DefaultInterruptHandler *****************
 10169 ;; Defined at:
 10170 ;;		line 135 in file "main.c"
 10171 ;; Parameters:    Size  Location     Type
 10172 ;;		None
 10173 ;; Auto vars:     Size  Location     Type
 10174 ;;		None
 10175 ;; Return value:  Size  Location     Type
 10176 ;;                  1    wreg      void 
 10177 ;; Registers used:
 10178 ;;		None
 10179 ;; Tracked objects:
 10180 ;;		On entry : 0/0
 10181 ;;		On exit  : 0/0
 10182 ;;		Unchanged: 0/0
 10183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10188 ;;Total ram usage:        0 bytes
 10189 ;; Hardware stack levels used: 1
 10190 ;; This function calls:
 10191 ;;		Nothing
 10192 ;; This function is called by:
 10193 ;;		_main
 10194 ;;		_I2C_SlaveRdCallBack
 10195 ;; This function uses a non-reentrant model
 10196 ;;
 10197                           
 10198                           	psect	text45
 10199   0024C2                     __ptext45:
 10200                           	callstack 0
 10201   0024C2                     _I2C_DefaultInterruptHandler:
 10202                           	callstack 21
 10203   0024C2                     
 10204                           ;main.c: 136:     LDR_Get_Data = SSPBUF;
 10205   0024C2  CFC9 F035          	movff	4041,_LDR_Get_Data	;volatile
 10206   0024C6  0012               	return		;funcret
 10207   0024C8                     __end_of_I2C_DefaultInterruptHandler:
 10208                           	callstack 0
 10209                           
 10210 ;; *************** function _I2C_SlaveDefRdInterruptHandler *****************
 10211 ;; Defined at:
 10212 ;;		line 241 in file "mcc_generated_files/i2c_slave.c"
 10213 ;; Parameters:    Size  Location     Type
 10214 ;;		None
 10215 ;; Auto vars:     Size  Location     Type
 10216 ;;		None
 10217 ;; Return value:  Size  Location     Type
 10218 ;;                  1    wreg      void 
 10219 ;; Registers used:
 10220 ;;		wreg, status,2, cstack
 10221 ;; Tracked objects:
 10222 ;;		On entry : 0/0
 10223 ;;		On exit  : 0/0
 10224 ;;		Unchanged: 0/0
 10225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10230 ;;Total ram usage:        0 bytes
 10231 ;; Hardware stack levels used: 1
 10232 ;; Hardware stack levels required when called: 1
 10233 ;; This function calls:
 10234 ;;		_I2C_SlaveGetRxData
 10235 ;; This function is called by:
 10236 ;;		_I2C_Open
 10237 ;;		_I2C_SlaveRdCallBack
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           
 10241                           	psect	text46
 10242   0024B2                     __ptext46:
 10243                           	callstack 0
 10244   0024B2                     _I2C_SlaveDefRdInterruptHandler:
 10245                           	callstack 20
 10246   0024B2                     
 10247                           ;mcc_generated_files/i2c_slave.c: 242:     i2cRdData = I2C_SlaveGetRxData();
 10248   0024B2  EC6A  F012         	call	_I2C_SlaveGetRxData	;wreg free
 10249   0024B6  6E30               	movwf	_i2cRdData^0,c	;volatile
 10250   0024B8  0012               	return		;funcret
 10251   0024BA                     __end_of_I2C_SlaveDefRdInterruptHandler:
 10252                           	callstack 0
 10253                           
 10254 ;; *************** function _I2C_SlaveIsTxBufEmpty *****************
 10255 ;; Defined at:
 10256 ;;		line 381 in file "mcc_generated_files/i2c_slave.c"
 10257 ;; Parameters:    Size  Location     Type
 10258 ;;		None
 10259 ;; Auto vars:     Size  Location     Type
 10260 ;;		None
 10261 ;; Return value:  Size  Location     Type
 10262 ;;                  1    wreg      _Bool 
 10263 ;; Registers used:
 10264 ;;		wreg
 10265 ;; Tracked objects:
 10266 ;;		On entry : 0/0
 10267 ;;		On exit  : 0/0
 10268 ;;		Unchanged: 0/0
 10269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10274 ;;Total ram usage:        0 bytes
 10275 ;; Hardware stack levels used: 1
 10276 ;; This function calls:
 10277 ;;		Nothing
 10278 ;; This function is called by:
 10279 ;;		_I2C_Isr
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283                           	psect	text47
 10284   0023CC                     __ptext47:
 10285                           	callstack 0
 10286   0023CC                     _I2C_SlaveIsTxBufEmpty:
 10287                           	callstack 22
 10288   0023CC                     
 10289                           ;mcc_generated_files/i2c_slave.c: 383:     return !SSPSTATbits.BF;
 10290   0023CC  A0C7               	btfss	199,0,c	;volatile
 10291   0023CE  EFEB  F011         	goto	i2u50_41
 10292   0023D2  EFEE  F011         	goto	i2u50_40
 10293   0023D6                     i2u50_41:
 10294   0023D6  0E01               	movlw	1
 10295   0023D8  EFEF  F011         	goto	i2u51_40
 10296   0023DC                     i2u50_40:
 10297   0023DC  0E00               	movlw	0
 10298   0023DE                     i2u51_40:
 10299   0023DE  0012               	return		;funcret
 10300   0023E0                     __end_of_I2C_SlaveIsTxBufEmpty:
 10301                           	callstack 0
 10302                           
 10303 ;; *************** function _I2C_SlaveIsRxBufFull *****************
 10304 ;; Defined at:
 10305 ;;		line 386 in file "mcc_generated_files/i2c_slave.c"
 10306 ;; Parameters:    Size  Location     Type
 10307 ;;		None
 10308 ;; Auto vars:     Size  Location     Type
 10309 ;;		None
 10310 ;; Return value:  Size  Location     Type
 10311 ;;                  1    wreg      _Bool 
 10312 ;; Registers used:
 10313 ;;		wreg
 10314 ;; Tracked objects:
 10315 ;;		On entry : 0/0
 10316 ;;		On exit  : 0/0
 10317 ;;		Unchanged: 0/0
 10318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10323 ;;Total ram usage:        0 bytes
 10324 ;; Hardware stack levels used: 1
 10325 ;; This function calls:
 10326 ;;		Nothing
 10327 ;; This function is called by:
 10328 ;;		_I2C_Isr
 10329 ;; This function uses a non-reentrant model
 10330 ;;
 10331                           
 10332                           	psect	text48
 10333   0023E0                     __ptext48:
 10334                           	callstack 0
 10335   0023E0                     _I2C_SlaveIsRxBufFull:
 10336                           	callstack 22
 10337   0023E0                     
 10338                           ;mcc_generated_files/i2c_slave.c: 388:     return SSPSTATbits.BF;
 10339   0023E0  B0C7               	btfsc	199,0,c	;volatile
 10340   0023E2  EFF5  F011         	goto	i2u54_41
 10341   0023E6  EFF8  F011         	goto	i2u54_40
 10342   0023EA                     i2u54_41:
 10343   0023EA  0E01               	movlw	1
 10344   0023EC  EFF9  F011         	goto	i2u54_46
 10345   0023F0                     i2u54_40:
 10346   0023F0  0E00               	movlw	0
 10347   0023F2                     i2u54_46:
 10348   0023F2  0012               	return		;funcret
 10349   0023F4                     __end_of_I2C_SlaveIsRxBufFull:
 10350                           	callstack 0
 10351                           
 10352 ;; *************** function _I2C_SlaveIsRead *****************
 10353 ;; Defined at:
 10354 ;;		line 351 in file "mcc_generated_files/i2c_slave.c"
 10355 ;; Parameters:    Size  Location     Type
 10356 ;;		None
 10357 ;; Auto vars:     Size  Location     Type
 10358 ;;		None
 10359 ;; Return value:  Size  Location     Type
 10360 ;;                  1    wreg      _Bool 
 10361 ;; Registers used:
 10362 ;;		wreg
 10363 ;; Tracked objects:
 10364 ;;		On entry : 0/0
 10365 ;;		On exit  : 0/0
 10366 ;;		Unchanged: 0/0
 10367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10368 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10369 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10371 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10372 ;;Total ram usage:        0 bytes
 10373 ;; Hardware stack levels used: 1
 10374 ;; This function calls:
 10375 ;;		Nothing
 10376 ;; This function is called by:
 10377 ;;		_I2C_Isr
 10378 ;;		_I2C_IsRead
 10379 ;; This function uses a non-reentrant model
 10380 ;;
 10381                           
 10382                           	psect	text49
 10383   0023F4                     __ptext49:
 10384                           	callstack 0
 10385   0023F4                     _I2C_SlaveIsRead:
 10386                           	callstack 22
 10387   0023F4                     
 10388                           ;mcc_generated_files/i2c_slave.c: 353:     return (SSPSTATbits.R_nW);
 10389   0023F4  B4C7               	btfsc	199,2,c	;volatile
 10390   0023F6  EFFF  F011         	goto	i2u45_41
 10391   0023FA  EF02  F012         	goto	i2u45_40
 10392   0023FE                     i2u45_41:
 10393   0023FE  0E01               	movlw	1
 10394   002400  EF03  F012         	goto	i2u45_46
 10395   002404                     i2u45_40:
 10396   002404  0E00               	movlw	0
 10397   002406                     i2u45_46:
 10398   002406  0012               	return		;funcret
 10399   002408                     __end_of_I2C_SlaveIsRead:
 10400                           	callstack 0
 10401                           
 10402 ;; *************** function _I2C_SlaveIsAddr *****************
 10403 ;; Defined at:
 10404 ;;		line 346 in file "mcc_generated_files/i2c_slave.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;		None
 10407 ;; Auto vars:     Size  Location     Type
 10408 ;;		None
 10409 ;; Return value:  Size  Location     Type
 10410 ;;                  1    wreg      _Bool 
 10411 ;; Registers used:
 10412 ;;		wreg
 10413 ;; Tracked objects:
 10414 ;;		On entry : 0/0
 10415 ;;		On exit  : 0/0
 10416 ;;		Unchanged: 0/0
 10417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10422 ;;Total ram usage:        0 bytes
 10423 ;; Hardware stack levels used: 1
 10424 ;; This function calls:
 10425 ;;		Nothing
 10426 ;; This function is called by:
 10427 ;;		_I2C_Isr
 10428 ;; This function uses a non-reentrant model
 10429 ;;
 10430                           
 10431                           	psect	text50
 10432   002408                     __ptext50:
 10433                           	callstack 0
 10434   002408                     _I2C_SlaveIsAddr:
 10435                           	callstack 22
 10436   002408                     
 10437                           ;mcc_generated_files/i2c_slave.c: 348:     return !(SSPSTATbits.D_nA);
 10438   002408  AAC7               	btfss	199,5,c	;volatile
 10439   00240A  EF09  F012         	goto	i2u46_41
 10440   00240E  EF0C  F012         	goto	i2u46_40
 10441   002412                     i2u46_41:
 10442   002412  0E01               	movlw	1
 10443   002414  EF0D  F012         	goto	i2u47_40
 10444   002418                     i2u46_40:
 10445   002418  0E00               	movlw	0
 10446   00241A                     i2u47_40:
 10447   00241A  0012               	return		;funcret
 10448   00241C                     __end_of_I2C_SlaveIsAddr:
 10449                           	callstack 0
 10450                           
 10451 ;; *************** function _I2C_SlaveClearIrq *****************
 10452 ;; Defined at:
 10453 ;;		line 356 in file "mcc_generated_files/i2c_slave.c"
 10454 ;; Parameters:    Size  Location     Type
 10455 ;;		None
 10456 ;; Auto vars:     Size  Location     Type
 10457 ;;		None
 10458 ;; Return value:  Size  Location     Type
 10459 ;;                  1    wreg      void 
 10460 ;; Registers used:
 10461 ;;		None
 10462 ;; Tracked objects:
 10463 ;;		On entry : 0/0
 10464 ;;		On exit  : 0/0
 10465 ;;		Unchanged: 0/0
 10466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10471 ;;Total ram usage:        0 bytes
 10472 ;; Hardware stack levels used: 1
 10473 ;; This function calls:
 10474 ;;		Nothing
 10475 ;; This function is called by:
 10476 ;;		_I2C_Isr
 10477 ;; This function uses a non-reentrant model
 10478 ;;
 10479                           
 10480                           	psect	text51
 10481   0024D0                     __ptext51:
 10482                           	callstack 0
 10483   0024D0                     _I2C_SlaveClearIrq:
 10484                           	callstack 22
 10485   0024D0                     
 10486                           ;mcc_generated_files/i2c_slave.c: 358:     PIR1bits.SSPIF = 0;
 10487   0024D0  969E               	bcf	158,3,c	;volatile
 10488   0024D2  0012               	return		;funcret
 10489   0024D4                     __end_of_I2C_SlaveClearIrq:
 10490                           	callstack 0
 10491                           
 10492 ;; *************** function _I2C_SlaveAddrCallBack *****************
 10493 ;; Defined at:
 10494 ;;		line 267 in file "mcc_generated_files/i2c_slave.c"
 10495 ;; Parameters:    Size  Location     Type
 10496 ;;		None
 10497 ;; Auto vars:     Size  Location     Type
 10498 ;;		None
 10499 ;; Return value:  Size  Location     Type
 10500 ;;                  1    wreg      void 
 10501 ;; Registers used:
 10502 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 10503 ;; Tracked objects:
 10504 ;;		On entry : 0/0
 10505 ;;		On exit  : 0/0
 10506 ;;		Unchanged: 0/0
 10507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10512 ;;Total ram usage:        0 bytes
 10513 ;; Hardware stack levels used: 1
 10514 ;; Hardware stack levels required when called: 2
 10515 ;; This function calls:
 10516 ;;		NULL
 10517 ;;		_I2C_SlaveDefAddrInterruptHandler
 10518 ;; This function is called by:
 10519 ;;		_I2C_Isr
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523                           	psect	text52
 10524   002362                     __ptext52:
 10525                           	callstack 0
 10526   002362                     _I2C_SlaveAddrCallBack:
 10527                           	callstack 20
 10528   002362                     
 10529                           ;mcc_generated_files/i2c_slave.c: 269:     if (I2C_SlaveAddrInterruptHandler) {
 10530   002362  5017               	movf	_I2C_SlaveAddrInterruptHandler^0,w,c
 10531   002364  1018               	iorwf	(_I2C_SlaveAddrInterruptHandler+1)^0,w,c
 10532   002366  B4D8               	btfsc	status,2,c
 10533   002368  EFB8  F011         	goto	i2u48_41
 10534   00236C  EFBA  F011         	goto	i2u48_40
 10535   002370                     i2u48_41:
 10536   002370  EFC6  F011         	goto	i2l358
 10537   002374                     i2u48_40:
 10538   002374                     
 10539                           ;mcc_generated_files/i2c_slave.c: 270:         I2C_SlaveAddrInterruptHandler();
 10540   002374  D802               	call	i2u49_48
 10541   002376  EFC6  F011         	goto	i2u49_49
 10542   00237A                     i2u49_48:
 10543   00237A  0005               	push	
 10544   00237C  6EFA               	movwf	pclath,c
 10545   00237E  5017               	movf	_I2C_SlaveAddrInterruptHandler^0,w,c
 10546   002380  6EFD               	movwf	tosl,c
 10547   002382  5018               	movf	(_I2C_SlaveAddrInterruptHandler+1)^0,w,c
 10548   002384  6EFE               	movwf	tosh,c
 10549   002386  6AFF               	clrf	tosu,c
 10550   002388  50FA               	movf	pclath,w,c
 10551   00238A  0012               	return		;indir
 10552   00238C                     i2u49_49:
 10553   00238C                     i2l358:
 10554   00238C  0012               	return		;funcret
 10555   00238E                     __end_of_I2C_SlaveAddrCallBack:
 10556                           	callstack 0
 10557                           
 10558 ;; *************** function _I2C_SlaveDefAddrInterruptHandler *****************
 10559 ;; Defined at:
 10560 ;;		line 274 in file "mcc_generated_files/i2c_slave.c"
 10561 ;; Parameters:    Size  Location     Type
 10562 ;;		None
 10563 ;; Auto vars:     Size  Location     Type
 10564 ;;		None
 10565 ;; Return value:  Size  Location     Type
 10566 ;;                  1    wreg      void 
 10567 ;; Registers used:
 10568 ;;		wreg, status,2, cstack
 10569 ;; Tracked objects:
 10570 ;;		On entry : 0/0
 10571 ;;		On exit  : 0/0
 10572 ;;		Unchanged: 0/0
 10573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10578 ;;Total ram usage:        0 bytes
 10579 ;; Hardware stack levels used: 1
 10580 ;; Hardware stack levels required when called: 1
 10581 ;; This function calls:
 10582 ;;		_I2C_SlaveGetRxData
 10583 ;; This function is called by:
 10584 ;;		_I2C_Open
 10585 ;;		_I2C_SlaveAddrCallBack
 10586 ;; This function uses a non-reentrant model
 10587 ;;
 10588                           
 10589                           	psect	text53
 10590   0024BA                     __ptext53:
 10591                           	callstack 0
 10592   0024BA                     _I2C_SlaveDefAddrInterruptHandler:
 10593                           	callstack 20
 10594   0024BA                     
 10595                           ;mcc_generated_files/i2c_slave.c: 275:     i2cSlaveAddr = I2C_SlaveGetRxData();
 10596   0024BA  EC6A  F012         	call	_I2C_SlaveGetRxData	;wreg free
 10597   0024BE  6E2F               	movwf	_i2cSlaveAddr^0,c	;volatile
 10598   0024C0  0012               	return		;funcret
 10599   0024C2                     __end_of_I2C_SlaveDefAddrInterruptHandler:
 10600                           	callstack 0
 10601                           
 10602 ;; *************** function _I2C_SlaveGetRxData *****************
 10603 ;; Defined at:
 10604 ;;		line 396 in file "mcc_generated_files/i2c_slave.c"
 10605 ;; Parameters:    Size  Location     Type
 10606 ;;		None
 10607 ;; Auto vars:     Size  Location     Type
 10608 ;;		None
 10609 ;; Return value:  Size  Location     Type
 10610 ;;                  1    wreg      unsigned char 
 10611 ;; Registers used:
 10612 ;;		wreg, status,2
 10613 ;; Tracked objects:
 10614 ;;		On entry : 0/0
 10615 ;;		On exit  : 0/0
 10616 ;;		Unchanged: 0/0
 10617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10622 ;;Total ram usage:        0 bytes
 10623 ;; Hardware stack levels used: 1
 10624 ;; This function calls:
 10625 ;;		Nothing
 10626 ;; This function is called by:
 10627 ;;		_I2C_SlaveDefRdInterruptHandler
 10628 ;;		_I2C_SlaveDefAddrInterruptHandler
 10629 ;;		_I2C_Read
 10630 ;; This function uses a non-reentrant model
 10631 ;;
 10632                           
 10633                           	psect	text54
 10634   0024D4                     __ptext54:
 10635                           	callstack 0
 10636   0024D4                     _I2C_SlaveGetRxData:
 10637                           	callstack 20
 10638   0024D4                     
 10639                           ;mcc_generated_files/i2c_slave.c: 398:     return SSPBUF;
 10640   0024D4  50C9               	movf	201,w,c	;volatile
 10641   0024D6  0012               	return		;funcret
 10642   0024D8                     __end_of_I2C_SlaveGetRxData:
 10643                           	callstack 0
 10644                           
 10645                           	psect	rparam
 10646   000001                     ___rparam_used  equ	1
 10647   000000                     ___param_bank   equ	0
 10648   000000                     __Lparam        equ	__Lrparam
 10649   000000                     __Hparam        equ	__Hrparam
 10650                           
 10651                           	psect	temp
 10652   00005A                     btemp:
 10653                           	callstack 0
 10654   00005A                     	ds	1
 10655   00005A                     int$flags       set	btemp
 10656   00005B                     wtemp8          set	btemp+1
 10657   00005B                     ttemp5          set	btemp+1
 10658   00005E                     ttemp6          set	btemp+4
 10659   000062                     ttemp7          set	btemp+8
 10660                           
 10661                           	psect	config
 10662                           
 10663                           ; Padding undefined space
 10664   300000                     	org	3145728
 10665   300000  FF                 	db	255
 10666                           
 10667                           ;Config register CONFIG1H @ 0x300001
 10668                           ;	Oscillator Selection bits
 10669                           ;	FOSC = HS, HS oscillator
 10670                           ;	Fail-Safe Clock Monitor Enable bit
 10671                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 10672                           ;	Internal/External Oscillator Switchover bit
 10673                           ;	IESO = OFF, Oscillator Switchover mode disabled
 10674   300001                     	org	3145729
 10675   300001  02                 	db	2
 10676                           
 10677                           ;Config register CONFIG2L @ 0x300002
 10678                           ;	Power-up Timer Enable bit
 10679                           ;	PWRTEN = OFF, PWRT disabled
 10680                           ;	Brown-out Reset Enable bits
 10681                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 10682                           ;	Brown Out Reset Voltage bits
 10683                           ;	BORV = 18, VBOR set to 1.8 V nominal
 10684   300002                     	org	3145730
 10685   300002  1F                 	db	31
 10686                           
 10687                           ;Config register CONFIG2H @ 0x300003
 10688                           ;	Watchdog Timer Enable bit
 10689                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 10690                           ;	Watchdog Timer Postscale Select bits
 10691                           ;	WDTPS = 32768, 1:32768
 10692   300003                     	org	3145731
 10693   300003  1E                 	db	30
 10694                           
 10695                           ; Padding undefined space
 10696   300004                     	org	3145732
 10697   300004  FF                 	db	255
 10698                           
 10699                           ;Config register CONFIG3H @ 0x300005
 10700                           ;	CCP2 MUX bit
 10701                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 10702                           ;	PORTB A/D Enable bit
 10703                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 10704                           ;	Low-Power Timer1 Oscillator Enable bit
 10705                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 10706                           ;	HFINTOSC Fast Start-up
 10707                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 10708                           ;	MCLR Pin Enable bit
 10709                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 10710   300005                     	org	3145733
 10711   300005  8B                 	db	139
 10712                           
 10713                           ;Config register CONFIG4L @ 0x300006
 10714                           ;	Stack Full/Underflow Reset Enable bit
 10715                           ;	STVREN = ON, Stack full/underflow will cause Reset
 10716                           ;	Single-Supply ICSP Enable bit
 10717                           ;	LVP = ON, Single-Supply ICSP enabled
 10718                           ;	Extended Instruction Set Enable bit
 10719                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 10720                           ;	Background Debugger Enable bit
 10721                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 10722   300006                     	org	3145734
 10723   300006  85                 	db	133
 10724                           
 10725                           ; Padding undefined space
 10726   300007                     	org	3145735
 10727   300007  FF                 	db	255
 10728                           
 10729                           ;Config register CONFIG5L @ 0x300008
 10730                           ;	Code Protection Block 0
 10731                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 10732                           ;	Code Protection Block 1
 10733                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 10734                           ;	Code Protection Block 2
 10735                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 10736                           ;	Code Protection Block 3
 10737                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 10738   300008                     	org	3145736
 10739   300008  0F                 	db	15
 10740                           
 10741                           ;Config register CONFIG5H @ 0x300009
 10742                           ;	Boot Block Code Protection bit
 10743                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 10744                           ;	Data EEPROM Code Protection bit
 10745                           ;	CPD = OFF, Data EEPROM not code-protected
 10746   300009                     	org	3145737
 10747   300009  C0                 	db	192
 10748                           
 10749                           ;Config register CONFIG6L @ 0x30000A
 10750                           ;	Write Protection Block 0
 10751                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 10752                           ;	Write Protection Block 1
 10753                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 10754                           ;	Write Protection Block 2
 10755                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 10756                           ;	Write Protection Block 3
 10757                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 10758   30000A                     	org	3145738
 10759   30000A  0F                 	db	15
 10760                           
 10761                           ;Config register CONFIG6H @ 0x30000B
 10762                           ;	Configuration Register Write Protection bit
 10763                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 10764                           ;	Boot Block Write Protection bit
 10765                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 10766                           ;	Data EEPROM Write Protection bit
 10767                           ;	WRTD = OFF, Data EEPROM not write-protected
 10768   30000B                     	org	3145739
 10769   30000B  E0                 	db	224
 10770                           
 10771                           ;Config register CONFIG7L @ 0x30000C
 10772                           ;	Table Read Protection Block 0
 10773                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 10774                           ;	Table Read Protection Block 1
 10775                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 10776                           ;	Table Read Protection Block 2
 10777                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 10778                           ;	Table Read Protection Block 3
 10779                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 10780   30000C                     	org	3145740
 10781   30000C  0F                 	db	15
 10782                           
 10783                           ;Config register CONFIG7H @ 0x30000D
 10784                           ;	Boot Block Table Read Protection bit
 10785                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 10786   30000D                     	org	3145741
 10787   30000D  40                 	db	64
 10788                           tosu	equ	0xFFF
 10789                           tosh	equ	0xFFE
 10790                           tosl	equ	0xFFD
 10791                           stkptr	equ	0xFFC
 10792                           pclatu	equ	0xFFB
 10793                           pclath	equ	0xFFA
 10794                           pcl	equ	0xFF9
 10795                           tblptru	equ	0xFF8
 10796                           tblptrh	equ	0xFF7
 10797                           tblptrl	equ	0xFF6
 10798                           tablat	equ	0xFF5
 10799                           prodh	equ	0xFF4
 10800                           prodl	equ	0xFF3
 10801                           indf0	equ	0xFEF
 10802                           postinc0	equ	0xFEE
 10803                           postdec0	equ	0xFED
 10804                           preinc0	equ	0xFEC
 10805                           plusw0	equ	0xFEB
 10806                           fsr0h	equ	0xFEA
 10807                           fsr0l	equ	0xFE9
 10808                           wreg	equ	0xFE8
 10809                           indf1	equ	0xFE7
 10810                           postinc1	equ	0xFE6
 10811                           postdec1	equ	0xFE5
 10812                           preinc1	equ	0xFE4
 10813                           plusw1	equ	0xFE3
 10814                           fsr1h	equ	0xFE2
 10815                           fsr1l	equ	0xFE1
 10816                           bsr	equ	0xFE0
 10817                           indf2	equ	0xFDF
 10818                           postinc2	equ	0xFDE
 10819                           postdec2	equ	0xFDD
 10820                           preinc2	equ	0xFDC
 10821                           plusw2	equ	0xFDB
 10822                           fsr2h	equ	0xFDA
 10823                           fsr2l	equ	0xFD9
 10824                           status	equ	0xFD8

Data Sizes:
    Strings     40
    Constant    0
    Data        56
    BSS         128
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     24      89
    BANK0           160      5     124
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_Conversion_Result@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Interrupt_Configuration@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Result_Format_Control@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Voltage_Reference_Control@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP1_InterrptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), NULL(), 

    CCP1_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCP1_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP2_InterrptHandle	PTR FTN()void  size(2) Largest target is 2
		 -> CCP1_obj$CCP2_InterruptHandler(BANK0[2]), NULL(), 

    CCPx_Compare_mode_config@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Compare_mode_config@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_CompareMode_IsComplete@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_CompareMode_IsComplete@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_CompareMode_WriteData@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_CompareMode_WriteData@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_Deinit@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Deinit@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_Init@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Init@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_Interrupt_Configuration@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Interrupt_Configuration@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_Timer_Config@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Timer_Config@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ECU_DC_Motor_initialize@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> Dc_Motor_Gate(COMRAM[2]), 

    ECU_DC_Motor_move_right@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> Dc_Motor_Gate(COMRAM[2]), 

    ECU_DC_Motor_stop@_dc_motor	PTR const struct . size(1) Largest target is 2
		 -> Dc_Motor_Gate(COMRAM[2]), 

    ECU_LCD_4Bit_Initialize@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(BANK0[6]), 

    ECU_LCD_4Bit_Send_char_Data@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(BANK0[6]), 

    ECU_LCD_4Bit_Send_char_Data_Position@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(BANK0[6]), 

    ECU_LCD_4Bit_Send_Command@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(BANK0[6]), 

    ECU_LCD_4Bit_Send_String_Data_Postition@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(BANK0[6]), 

    ECU_LCD_4Bit_Send_String_Data_Postition@_Str	PTR unsigned char  size(1) Largest target is 19
		 -> STR_1(CODE[18]), STR_2(CODE[19]), 

    EUSART_BaudRateCalculation@_EUSART$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_BaudRateCalculation@_EUSART$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_BaudRateCalculation@_EUSART$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_BaudRateCalculation@_EUSART$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_RX_Init@_EUSART$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_RX_Init@_EUSART$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_RX_Init@_EUSART$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_RX_Init@_EUSART$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TX_Init@_EUSART$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TX_Init@_EUSART$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TX_Init@_EUSART$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TX_Init@_EUSART$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    f$.$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> Convert_uint16_to_string@Temp_String(COMRAM[6]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@pinConfig	PTR const struct . size(1) Largest target is 7
		 -> CCP1_obj$CCPx_PIN$port(BANK0[1]), Dc_Motor_Gate(COMRAM[2]), Dc_Motor_Gate$dc_motor_pin(COMRAM[2]), ECU_Relay_Initialize@relay_t(COMRAM[1]), 
		 -> InDoor_E(COMRAM[1]), keypad_1(BANK0[7]), keypad_1$KeypadColoumnsConfig(BANK0[3]), keypad_1$KeypadRowsConfig(BANK0[4]), 
		 -> LCD_1(BANK0[6]), LCD_1$DataPins(BANK0[4]), LED_init@LED(COMRAM[1]), pinRC6(COMRAM[1]), 
		 -> pinRC7(COMRAM[1]), 

    gpio_pin_initialize@pinConfig	PTR const struct . size(1) Largest target is 7
		 -> CCP1_obj$CCPx_PIN$port(BANK0[1]), Dc_Motor_Gate(COMRAM[2]), Dc_Motor_Gate$dc_motor_pin(COMRAM[2]), ECU_Relay_Initialize@relay_t(COMRAM[1]), 
		 -> InDoor_E(COMRAM[1]), keypad_1(BANK0[7]), keypad_1$KeypadRowsConfig(BANK0[4]), LCD_1(BANK0[6]), 
		 -> LCD_1$DataPins(BANK0[4]), pinRC6(COMRAM[1]), pinRC7(COMRAM[1]), 

    gpio_pin_read_logic@logic	PTR enum E3381 size(1) Largest target is 1
		 -> ECU_Button_Read@Get_buuton_logic(COMRAM[1]), keyPad_Read@coloumn_logic(COMRAM[1]), 

    gpio_pin_read_logic@pinConfig	PTR const struct . size(1) Largest target is 7
		 -> keypad_1(BANK0[7]), keypad_1$KeypadColoumnsConfig(BANK0[3]), 

    gpio_pin_write_logic@pinConfig	PTR const struct . size(1) Largest target is 7
		 -> CCP1_obj$CCPx_PIN$port(BANK0[1]), Dc_Motor_Gate(COMRAM[2]), Dc_Motor_Gate$dc_motor_pin(COMRAM[2]), ECU_Relay_Initialize@relay_t(COMRAM[1]), 
		 -> ECU_Relay_turnOFF@relay_t(COMRAM[1]), ECU_Relay_turnON@relay_t(COMRAM[1]), InDoor_E(COMRAM[1]), keypad_1(BANK0[7]), 
		 -> keypad_1$KeypadRowsConfig(BANK0[4]), LCD_1(BANK0[6]), LCD_1$DataPins(BANK0[4]), LED_turnOFF@LED(COMRAM[1]), 
		 -> LED_turnON@LED(COMRAM[1]), pinRC6(COMRAM[1]), pinRC7(COMRAM[1]), 

    I2C_DefaultInterruptHandler@hal_i2c$F2517	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Init@_I2C$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Init@_I2C$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    I2C_Init@_I2C$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_Config@_I2C$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_Config@_I2C$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_Config@_I2C$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Configuration@_I2C$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Configuration@_I2C$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Configuration@_I2C$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Slave_Mode_Configuration@_I2C$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configuration@_I2C$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configuration@_I2C$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_SlaveAddrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), NULL(), 

    I2C_SlaveBusColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), NULL(), 

    I2C_SlaveRdInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_DefaultInterruptHandler(), I2C_SlaveDefRdInterruptHandler(), NULL(), 

    I2C_SlaveSetAddrIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefAddrInterruptHandler(), 

    I2C_SlaveSetBusColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefBusColInterruptHandler(), 

    I2C_SlaveSetIsrHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), 

    I2C_SlaveSetReadIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_DefaultInterruptHandler(), I2C_SlaveDefRdInterruptHandler(), 

    I2C_SlaveSetWrColIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), 

    I2C_SlaveSetWriteIntHandler@handler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), 

    I2C_SlaveWrColInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrColInterruptHandler(), NULL(), 

    I2C_SlaveWrInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_SlaveDefWrInterruptHandler(), NULL(), 

    Interrupt_INT0_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INT1_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INT2_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_Init@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Set_Handler@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RB4_Handler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB4_Handler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB5_Handler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB5_Handler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB6_Handler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB6_Handler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB7_Handler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB7_Handler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RBx_Pin_Init@RBx$Interrupt_Handle_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@RBx$Interrupt_Handle_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Set_Handler@RBx$Interrupt_Handle_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Set_Handler@RBx$Interrupt_Handle_LOW	PTR FTN()void  size(2) Largest target is 0

    keyPad_Initialize@keypad	PTR const struct . size(1) Largest target is 7
		 -> keypad_1(BANK0[7]), 

    keyPad_Read@keypad	PTR const struct . size(1) Largest target is 7
		 -> keypad_1(BANK0[7]), 

    keyPad_Read@keypad_value	PTR unsigned char  size(1) Largest target is 1
		 -> NumberPressed(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(1) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    LCD_4Bits_Send_Enable_Signal@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(BANK0[6]), 

    LCD_4Bits_Set_Curser@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(BANK0[6]), 

    LCD_Send_4Bits@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(BANK0[6]), 

    LED_init@led_config	PTR const struct . size(1) Largest target is 1
		 -> GREEN_LED(COMRAM[1]), RED_LED(COMRAM[1]), 

    LED_turnOFF@led_config	PTR const struct . size(1) Largest target is 1
		 -> GREEN_LED(COMRAM[1]), RED_LED(COMRAM[1]), 

    LED_turnON@led_config	PTR const struct . size(1) Largest target is 1
		 -> GREEN_LED(COMRAM[1]), RED_LED(COMRAM[1]), 

    MSSP_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> I2C_Isr(), NULL(), 

    PinsConfig@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    port_registers	PTR volatile unsigned char [5] size(1) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    S1297$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1647$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    S1647$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2230$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2230$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    S2230$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    S2666$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2709$Interrupt_Handle_HIGH	PTR FTN()void  size(2) Largest target is 0

    S2709$Interrupt_Handle_LOW	PTR FTN()void  size(2) Largest target is 0

    S3181$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3521$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3724$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3976$TIMER2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4125$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4365$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4365$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4365$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4365$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S5978$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> Convert_uint16_to_string@Temp_String(COMRAM[6]), 

    S5978$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    SPI_Clock_Phase_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_Clock_polarity_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_Interrupt_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    SPI_Mode_Variant_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_Sample_Mode_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Init@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Interrupt_Configuration@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer0_Prescaler_Config@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Read_Value@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Set_Mode@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Set_Resolution@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer0_Write_Value@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer1_Init@_timer1$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_Interrupt_Configuration@_timer1$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    timer1_obj$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_Set_Mode@_timer1$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_Set_Resolution@_timer1$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer2_Init@_timer2$TIMER2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Interrupt_Configuration@_timer2$TIMER2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_Init@_timer3$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Interrupt_Configuration@_timer3$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_Set_Mode@_timer3$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Set_Resolution@_timer3$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(1) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 

    USART_FRE_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_OVRR_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_3(CODE[3]), STR_4(CODE[3]), STR_5(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_ECU_LCD_4Bit_Send_String_Data_Postition
    _main->_ECU_LCD_4Bit_Send_char_Data_Position
    _keyPad_Read->_gpio_pin_read_logic
    _keyPad_Read->_gpio_pin_write_logic
    _keyPad_Initialize->_gpio_pin_initialize
    _WrongPassword->_ECU_LCD_4Bit_Send_String_Data_Postition
    _LED_turnON->_gpio_pin_write_logic
    _LED_turnOFF->_gpio_pin_write_logic
    _ECU_LCD_4Bit_Send_String_Data_Postition->_LCD_4Bits_Set_Curser
    _ECU_DC_Motor_stop->_gpio_pin_write_logic
    _LED_init->_gpio_pin_direction_initialize
    _I2C_Open->_I2C_SlaveSetAddrIntHandler
    _I2C_Open->_I2C_SlaveSetBusColIntHandler
    _I2C_Open->_I2C_SlaveSetIsrHandler
    _I2C_Open->_I2C_SlaveSetReadIntHandler
    _I2C_Open->_I2C_SlaveSetWrColIntHandler
    _I2C_Open->_I2C_SlaveSetWriteIntHandler
    _ECU_LCD_4Bit_Send_char_Data_Position->_LCD_4Bits_Set_Curser
    _LCD_4Bits_Set_Curser->_ECU_LCD_4Bit_Send_Command
    _ECU_LCD_4Bit_Send_char_Data->_LCD_Send_4Bits
    _ECU_LCD_4Bit_Initialize->_ECU_LCD_4Bit_Send_Command
    _ECU_LCD_4Bit_Send_Command->_LCD_Send_4Bits
    _LCD_Send_4Bits->_gpio_pin_write_logic
    _LCD_4Bits_Send_Enable_Signal->_gpio_pin_write_logic
    _ECU_DC_Motor_move_right->_gpio_pin_write_logic
    _ECU_DC_Motor_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _INTERRUPT_InterruptManagerHigh in COMRAM

    _INTERRUPT_InterruptManagerHigh->_I2C_Isr
    _I2C_SlaveDefWrInterruptHandler->_I2C_SlaveSendTxData

Critical Paths under _main in BANK0

    _main->_WrongPassword
    _WrongPassword->_ECU_LCD_4Bit_Send_String_Data_Postition

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManagerHigh in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   54539
                                              3 BANK0      2     2      0
            _ECU_DC_Motor_initialize
            _ECU_DC_Motor_move_right
                  _ECU_DC_Motor_stop
            _ECU_LCD_4Bit_Initialize
          _ECU_LCD_4Bit_Send_Command
_ECU_LCD_4Bit_Send_String_Data_Posti
_ECU_LCD_4Bit_Send_char_Data_Positio
                           _I2C_Open
         _I2C_SlaveSetReadIntHandler
                           _LED_init
                        _LED_turnOFF
                         _LED_turnON
                  _SYSTEM_Initialize
                      _WrongPassword
                _gpio_pin_initialize
               _gpio_pin_write_logic
                  _keyPad_Initialize
                        _keyPad_Read
 ---------------------------------------------------------------------------------
 (1) _keyPad_Read                                          7     5      2    1972
                                             10 COMRAM     7     5      2
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  5     3      2     337
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _keyPad_Initialize                                    4     3      1    2232
                                             13 COMRAM     4     3      1
      _gpio_pin_direction_initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (1) _WrongPassword                                        2     2      0   15291
                                              1 BANK0      2     2      0
                  _ECU_DC_Motor_stop
          _ECU_LCD_4Bit_Send_Command
_ECU_LCD_4Bit_Send_String_Data_Posti
                        _LED_turnOFF
                         _LED_turnON
 ---------------------------------------------------------------------------------
 (2) _LED_turnON                                           4     3      1    1251
                                             10 COMRAM     4     3      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _LED_turnOFF                                          4     3      1    1251
                                             10 COMRAM     4     3      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _ECU_LCD_4Bit_Send_String_Data_Postition              5     1      4    8006
                                             20 COMRAM     4     0      4
                                              0 BANK0      1     1      0
        _ECU_LCD_4Bit_Send_char_Data
               _LCD_4Bits_Set_Curser
 ---------------------------------------------------------------------------------
 (2) _ECU_DC_Motor_stop                                    2     1      1    1076
                                             10 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LED_init                                             4     3      1     566
                                              9 COMRAM     4     3      1
      _gpio_pin_direction_initialize
 ---------------------------------------------------------------------------------
 (1) _I2C_Open                                             0     0      0     197
                 _I2C_SlaveEnableIrq
                      _I2C_SlaveOpen
         _I2C_SlaveSetAddrIntHandler
       _I2C_SlaveSetBusColIntHandler
             _I2C_SlaveSetIsrHandler
         _I2C_SlaveSetReadIntHandler
              _I2C_SlaveSetSlaveAddr
              _I2C_SlaveSetSlaveMask
        _I2C_SlaveSetWrColIntHandler
        _I2C_SlaveSetWriteIntHandler
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWriteIntHandler                          2     0      2      23
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetWrColIntHandler                          2     0      2      23
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveMask                                1     1      0      29
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetSlaveAddr                                1     1      0      29
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_SlaveSetReadIntHandler                           2     0      2      24
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetIsrHandler                               2     0      2      23
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetBusColIntHandler                         2     0      2      23
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveSetAddrIntHandler                           2     0      2      23
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveOpen                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_SlaveEnableIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECU_LCD_4Bit_Send_char_Data_Position                 5     1      4    7975
                                             20 COMRAM     4     0      4
                                              0 BANK0      1     1      0
        _ECU_LCD_4Bit_Send_char_Data
               _LCD_4Bits_Set_Curser
 ---------------------------------------------------------------------------------
 (3) _LCD_4Bits_Set_Curser                                 4     1      3    4087
                                             16 COMRAM     4     1      3
          _ECU_LCD_4Bit_Send_Command
 ---------------------------------------------------------------------------------
 (3) _ECU_LCD_4Bit_Send_char_Data                          3     1      2    3635
                                             13 COMRAM     3     1      2
       _LCD_4Bits_Send_Enable_Signal
                     _LCD_Send_4Bits
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _ECU_LCD_4Bit_Initialize                              4     3      1    5807
                                             16 COMRAM     4     3      1
          _ECU_LCD_4Bit_Send_Command
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _ECU_LCD_4Bit_Send_Command                            3     1      2    3707
                                             13 COMRAM     3     1      2
       _LCD_4Bits_Send_Enable_Signal
                     _LCD_Send_4Bits
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _LCD_Send_4Bits                                       3     1      2    1289
                                             10 COMRAM     3     1      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _LCD_4Bits_Send_Enable_Signal                         2     1      1    1085
                                             10 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _ECU_DC_Motor_move_right                              2     1      1    1073
                                             10 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _ECU_DC_Motor_initialize                              2     1      1    1655
                                             13 COMRAM     2     1      1
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  3     2      1    1519
                                             10 COMRAM     3     2      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_write_logic                                 5     3      2     937
                                              5 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        4     3      1     367
                                              5 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManagerHigh                       2     2      0      15
                                              3 COMRAM     2     2      0
                                NULL *
                            _I2C_Isr *
 ---------------------------------------------------------------------------------
 (8) _I2C_Isr                                              2     2      0      15
                                              1 COMRAM     2     2      0
              _I2C_SlaveAddrCallBack
                  _I2C_SlaveClearIrq
                    _I2C_SlaveIsAddr
                    _I2C_SlaveIsRead
               _I2C_SlaveIsRxBufFull
              _I2C_SlaveIsTxBufEmpty
                _I2C_SlaveRdCallBack
              _I2C_SlaveReleaseClock
                _I2C_SlaveWrCallBack
 ---------------------------------------------------------------------------------
 (9) _I2C_SlaveWrCallBack                                  0     0      0      15
                                NULL *
     _I2C_SlaveDefWrInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_SlaveDefWrInterruptHandler                      0     0      0      15
                _I2C_SlaveSendTxData
 ---------------------------------------------------------------------------------
 (11) _I2C_SlaveSendTxData                                 1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C_SlaveReleaseClock                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_SlaveRdCallBack                                  0     0      0       0
                                NULL *
        _I2C_DefaultInterruptHandler *
     _I2C_SlaveDefRdInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_SlaveDefRdInterruptHandler                      0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (10) _I2C_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_SlaveIsTxBufEmpty                                0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_SlaveIsRxBufFull                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_SlaveIsRead                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_SlaveIsAddr                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_SlaveClearIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_SlaveAddrCallBack                                0     0      0       0
                                NULL *
   _I2C_SlaveDefAddrInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_SlaveDefAddrInterruptHandler                    0     0      0       0
                 _I2C_SlaveGetRxData
 ---------------------------------------------------------------------------------
 (11) _I2C_SlaveGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ECU_DC_Motor_initialize
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_write_logic
   _ECU_DC_Motor_move_right
     _gpio_pin_write_logic
   _ECU_DC_Motor_stop
     _gpio_pin_write_logic
   _ECU_LCD_4Bit_Initialize
     _ECU_LCD_4Bit_Send_Command
       _LCD_4Bits_Send_Enable_Signal
         _gpio_pin_write_logic
       _LCD_Send_4Bits
         _gpio_pin_write_logic
       _gpio_pin_write_logic
     _gpio_pin_initialize
   _ECU_LCD_4Bit_Send_Command
   _ECU_LCD_4Bit_Send_String_Data_Postition
     _ECU_LCD_4Bit_Send_char_Data
       _LCD_4Bits_Send_Enable_Signal
       _LCD_Send_4Bits
       _gpio_pin_write_logic
     _LCD_4Bits_Set_Curser
       _ECU_LCD_4Bit_Send_Command
   _ECU_LCD_4Bit_Send_char_Data_Position
     _ECU_LCD_4Bit_Send_char_Data
     _LCD_4Bits_Set_Curser
   _I2C_Open
     _I2C_SlaveEnableIrq
     _I2C_SlaveOpen
     _I2C_SlaveSetAddrIntHandler
     _I2C_SlaveSetBusColIntHandler
     _I2C_SlaveSetIsrHandler
     _I2C_SlaveSetReadIntHandler
     _I2C_SlaveSetSlaveAddr
     _I2C_SlaveSetSlaveMask
     _I2C_SlaveSetWrColIntHandler
     _I2C_SlaveSetWriteIntHandler
   _I2C_SlaveSetReadIntHandler
   _LED_init
     _gpio_pin_direction_initialize
   _LED_turnOFF
     _gpio_pin_write_logic
   _LED_turnON
     _gpio_pin_write_logic
   _SYSTEM_Initialize
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _WrongPassword
     _ECU_DC_Motor_stop
     _ECU_LCD_4Bit_Send_Command
     _ECU_LCD_4Bit_Send_String_Data_Postition
     _LED_turnOFF
     _LED_turnON
   _gpio_pin_initialize
   _gpio_pin_write_logic
   _keyPad_Initialize
     _gpio_pin_direction_initialize
     _gpio_pin_initialize
   _keyPad_Read
     _gpio_pin_read_logic
     _gpio_pin_write_logic

 _INTERRUPT_InterruptManagerHigh (ROOT)
   NULL(Fake) *
   _I2C_Isr *
     _I2C_SlaveAddrCallBack
       NULL(Fake) *
       _I2C_SlaveDefAddrInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveClearIrq
     _I2C_SlaveIsAddr
     _I2C_SlaveIsRead
     _I2C_SlaveIsRxBufFull
     _I2C_SlaveIsTxBufEmpty
     _I2C_SlaveRdCallBack
       NULL(Fake) *
       _I2C_DefaultInterruptHandler *
       _I2C_SlaveDefRdInterruptHandler *
         _I2C_SlaveGetRxData
     _I2C_SlaveReleaseClock
     _I2C_SlaveWrCallBack
       NULL(Fake) *
       _I2C_SlaveDefWrInterruptHandler *
         _I2C_SlaveSendTxData

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      5     124     77.5%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     24      89     94.7%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRllllll     23      0       0      0.0%
BITBIGSFRllllh      17      0       0      0.0%
BITBIGSFRlllh       14      0       0      0.0%
BITBIGSFRlllllh      6      0       0      0.0%
BITBIGSFRllh         5      0       0      0.0%
BITBIGSFRlh          5      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     213      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Oct 26 22:58:47 2024

                          ECU_Relay_toggle@F3477 0021                                      _SSPSTATbits 0FC7  
                                             l30 2488                                               l27 242C  
                                             l63 23AE                                  LED_toggle@F3476 0025  
                   __end_of_LCD_4Bits_Set_Curser 1E5E                                    _Dc_Motor_Gate 0055  
                                            l162 1620                                              l331 2462  
                                            l334 2458                                              l344 2444  
                                            l354 2476                                              l364 244E  
                                            l285 243A                                              l374 246C  
                                            l391 24A0                                              l471 2490  
                                            l800 105E                                              l288 20BC  
                                            l385 23CA                                              l394 2498  
                                            l821 125C                                              l901 21A6  
                                            l397 24CA                                              l823 12C4  
                                            l903 21C2                                              l843 12FA  
                                            l871 17E4                                              l881 1926  
                                            l866 155A             __end_of_I2C_SlaveSetBusColIntHandler 246E  
                   _I2C_SlaveSetBusColIntHandler 2464                                   _LCD_Send_4Bits 1ECE  
                          ??_I2C_SlaveRdCallBack 0039                              _I2C_SlaveSendTxData 24AA  
                                            _ret 0034                    I2C_SlaveSetSlaveMask@maskAddr 003E  
                                __end_of_I2C_Isr 1A24                 LCD_4Bits_Send_Enable_Signal@_LCD 0043  
                     ?_ECU_LCD_4Bit_Send_Command 0046                                              tosl 0FFD  
                                            wreg 0FE8                              _I2C_SlaveWrCallBack 230A  
                                   ?_keyPad_Read 0043                                      ?_LED_turnON 0043  
                                           l2113 2170                                             l2034 22AA  
                                           l2123 2202                                             l2108 1B0A  
                                           l2044 2274                                             l2060 2038  
                                           l2029 2308                                             l2222 223E  
                                           l2118 2116                                             l2070 1B3A  
                                           l2063 205E                                             l2217 1F38  
                                           l2057 201A                                             l2058 205C  
                                           l2066 1B38                                             l2139 1ECC  
                                           l2260 1D70                                             l2068 1B32  
                                           l2077 1BCE                                             l2069 1BCC  
                                           l2238 1E5C                                             l2264 1DC8  
                                           l2273 1C78                                             l2258 1D76  
                                           l2282 1D22                                             l2267 1C22  
                                           l2276 1CCC                                             l2269 1C1C  
                                           l2278 1CC6                                             l6520 10C0  
                                           l6512 102A                                             l6600 23A0  
                                           l6530 11AC                                             l6522 10EE  
                                           l6514 103E                                             l6610 2482  
                                           l6602 23A2                                             l6532 11D8  
                                           l6524 111C                                             l6516 1064  
                                           l6540 1296                                             l9100 1F36  
                                           l6700 23C6                                             l6612 2486  
                                           l6604 23A4                                             l6534 1204  
                                           l6526 114A                                             l6518 1092  
                                           l6542 12C2                                             l9110 221A  
                                           l6702 23C8                                             l6710 245A  
                                           l6606 23AA                                             l6536 1230  
                                           l6528 1180                                             l9112 2226  
                                           l9104 2204                                             l9120 2118  
                                           l6720 24C8                                             l6712 2464  
                                           l6608 23AC                                             l9200 1D20  
                                           l6538 1260                                             l9114 222E  
                                           l9106 2204                                             l9122 2118  
                                           l6706 249C                                             l6714 243C  
                                           l9210 2256                                             l9060 132E  
                                           l9116 223C                                             l9108 2214  
                                           l9124 2128                                             l9300 1A36  
                                           l9140 2114                                             l9132 20BE  
                                           l6716 246E                                             l6708 2494  
                                           l9212 226E                                             l9204 2240  
                                           l9220 1E62                                             l9070 141C  
                                           l9062 135C                                             l9054 12C6  
                                           l9126 212E                                             l9310 1A52  
                                           l9302 1A3C                                             l9134 20BE  
                                           l9150 1DDE                                             l6718 2446  
                                           l6590 2438                                             l6582 248A  
                                           l9214 2272                                             l9206 2240  
                                           l9230 1EAA                                             l9222 1E72  
                                           l9080 14F8                                             l9072 1448  
                                           l9064 138A                                             l9056 12DA  
                                           l9240 21AC                                             l9128 216E  
                                           l9320 1A8C                                             l9312 1A5E  
                                           l9304 1A50                                             l9136 20CE  
                                           l9152 1DE4                                             l9144 1DCA  
                                           l6584 242E                                             l6592 238E  
                                           l9208 2250                                             l9232 1EC8  
                                           l9224 1E78                                             l9400 1B3C  
                                           l9074 1474                                             l9066 13B8  
                                           l9058 1300                                             l9082 152E  
                                           l9242 21C0                                             l9330 1AD6  
                                           l9322 1AA8                                             l9314 1A60  
                                           l9138 20D4                                             l9154 1DF8  
                                           l9162 1E34                                             l9146 1DCC  
                                           l6682 2450                                             l6586 2432  
                                           l6594 2398                                             l9226 1E8C  
                                           l9218 1E5E                                             l9170 1BE4  
                                           l9402 1B4A                                             l9076 14A0  
                                           l9068 13E6                                             l9084 1558  
                                           l9236 2172                                             l9092 1ECE  
                                           l9332 1AE2                                             l9324 1AB2  
                                           l9316 1A70                                             l9156 1E0C  
                                           l9164 1E5A                                             l9148 1DCE  
                                           l6588 2436                                             l6596 239C  
                                           l9228 1EA8                                             l9180 1C6A  
                                           l9172 1C00                                             l6780 181E  
                                           l6772 17A0                                             l9420 1BA4  
                                           l9404 1B4C                                             l9078 14CC  
                                           l9238 2186                                             l9094 1ECE  
                                           l9334 1AEE                                             l9326 1ABE  
                                           l9318 1A80                                             l9158 1E20  
                                           l6694 23B0                                             l6598 239E  
                                           l6870 2424                                             l9190 1CAA  
                                           l9174 1C26                                             l9182 1C76  
                                           l9342 2000                                             l6782 1852  
                                           l6790 1924                                             l6774 17B4  
                                           l9422 1BA6                                             l9414 1B6C  
                                           l9406 1B5C                                             l9096 1EDE  
                                           l9336 1AFA                                             l9328 1ACA  
                                           l9440 2200                                             l9432 21C4  
                                           l6696 23BE                                             l6872 2428  
                                           l9192 1CD0                                             l9176 1C58  
                                           l9168 1BD0                                             l9352 201C  
                                           l9344 2004                                             l6784 1886  
                                           l6776 17D4                                             l9424 1BB6  
                                           l9416 1B7C                                             l9408 1B6A  
                                           l9600 16E2                                             l9450 228C  
                                           l9098 1EE4                                             l9338 1B08  
                                           l9434 21C4                                             l6698 23C2  
                                           l6882 2060                                             l6866 241C  
                                           l9194 1D02                                             l9186 1C7A  
                                           l9178 1C5A                                             l9290 1F58  
                                           l9362 203A                                             l9354 2026  
                                           l9346 2014                                             l6786 18BA  
                                           l6778 17EA                                             l9426 1BB8  
                                           l9418 1B8C                                             l9610 173C  
                                           l9602 16F4                                             l9380 2302  
                                           l9372 22DC                                             l9452 22A4  
                                           l9444 2276                                             l9436 21D4  
                                           l6884 2064                                             l6980 1D24  
                                           l6868 2420                                             l9196 1D04  
                                           l9188 1C8E                                             l9292 1F6E  
                                           l9364 2046                                             l9356 2028  
                                           l6788 18EE                                             l9428 1BC8  
                                           l9620 178E                                             l9612 1740  
                                           l9604 1702                                             l9382 2306  
                                           l9374 22DC                                             l9454 22A8  
                                           l9446 2276                                             l9438 21DC  
                                           l6886 206A                                             l6990 1DAE  
                                           l6982 1D38                                             l9198 1D14  
                                           l9294 1F8A                                             l9366 2048  
                                           l9390 1B22                                             l9614 1742  
                                           l9606 1714                                             l9550 1576  
                                           l9542 155C                                             l9376 22EC  
                                           l9448 2286                                             l9296 1A24  
                                           l6888 20B8                                             l6992 1DBE  
                                           l6984 1D54                                             l9288 1F3A  
                                           l9368 2058                                             l9616 1754  
                                           l9608 171A                                             l9560 15A8  
                                           l9552 1580                                             l9544 1560  
                                           l9378 22F2                                             l9298 1A26  
                                           l6986 1D7A                                             l6994 1DC6  
                                           l9386 1B0C                                             l9618 1772  
                                           l9570 15EC                                             l9562 15BE  
                                           l9554 158A                                             l9546 1562  
                                           l6988 1DAC                                             l9388 1B12  
                                           l9580 1644                                             l9572 15FE  
                                           l9564 15C8                                             l9556 1594  
                                           l9548 1564                                             l9590 169A  
                                           l9582 1656                                             l9574 160E  
                                           l9566 15CE                                             l9558 159E  
                                           l9592 16B2                                             l9584 1666  
                                           l9568 15DC                                             l9576 1620  
                                           l9594 16B4                                             l9586 1674  
                                           l9578 1634                                             l9596 16D0  
                                           l9588 168E                                             l9598 16D2  
                                           STR_1 1014                                             STR_2 1001  
                                           STR_3 1026                                             _LATA 0F89  
                                           _LATB 0F8A                                             _LATC 0F8B  
                                           _LATD 0F8C                                             _LATE 0F8D  
                                           u4004 113A                                             u4005 1136  
                                           u4014 119E                                             u4015 119A  
                                           u4024 11CA                                             u4025 11C6  
                                           u4034 11F6                                             u4035 11F2  
                                           u4060 12AC                                             u4044 1222  
                                           u4220 23BE                                             u4061 12A6  
                                           u4045 121E                                             u4221 23BA  
                                           u4054 124E                                             u4055 124A  
                                           u4304 180E                                             u4305 180A  
                                           u4066 12AE                                             u4314 1842  
                                           u4315 183E                                             u4500 1D38  
                                           u4324 1876                                             u4501 1D34  
                                           u4325 1872                                             u4510 1D54  
                                           u4334 18AA                                             u4270 17B4  
                                           u4511 1D50                                             u4335 18A6  
                                           u4271 17B0                                             u7000 2128  
                                           u4520 1D70                                             u4344 18DE  
                                           u4280 17D4                                             u7001 2124  
                                           u4521 1D6C                                             u4345 18DA  
                                           u4281 17D0                                             u7010 20CE  
                                           u4290 17E4                                             u7011 20CA  
                                           u4291 17E0                                             u7020 1DDE  
                                           u7021 1DDA                                             u7110 2250  
                                           u7030 1BE4                                             u4535 1DBC  
                                           u7111 224C                                             u7031 1BE0  
                                           u7200 1A36                                             u7120 1E72  
                                           u7040 1C00                                             u7201 1A32  
                                           u4537 1DBE                                             u7121 1E6E  
                                           u7105 1D12                                             u7041 1BFC  
                                           u7210 1A70                                             u7130 1EC8  
                                           u7050 1C1C                                             u7211 1A6C  
                                           u7131 1EC4                                             u7107 1D14  
                                           u7051 1C18                                             u3940 103E  
                                           u7140 2186                                             u7220 2014  
                                           u7300 1BB6                                             u3941 103A  
                                           u7141 2182                                             u7221 2010  
                                           u7301 1BB2                                             u3950 105E  
                                           u7150 21A6                                             u7070 1C8E  
                                           u7230 2038                                             u7310 1BC8  
                                           u3951 105A                                             u7151 21A2  
                                           u7071 1C8A                                             u7231 2034  
                                           u7311 1BC4                                             u7320 21D4  
                                           u7080 1CAA                                             u7240 2058  
                                           u7321 21D0                                             u7081 1CA6  
                                           u7065 1C68                                             u7241 2054  
                                           u7250 22EC                                             u7330 2286  
                                           u7090 1CC6                                             u7251 22E8  
                                           u7331 2282                                             u7091 1CC2  
                                           u7067 1C6A                                             u3964 1082  
                                           u7260 1B22                                             u7500 16E2  
                                           u3965 107E                                             u7261 1B1E  
                                           u7501 16DE                                             u3974 10B0  
                                           u7270 1B32                                             u7510 16F4  
                                           u3975 10AC                                             u7271 1B2E  
                                           u7511 16F0                                             u3984 10DE  
                                           u7280 1B5C                                             u7520 173C  
                                           u3985 10DA                                             u7281 1B58  
                                           u7521 1738                                             u3994 110C  
                                           u7290 1B8C                                             u7530 1754  
                                           u7450 15EC                                             u3995 1108  
                                           u7291 1B88                                             u7531 1750  
                                           u7451 15E8                                             u7460 160E  
                                           u7461 160A                                             u7470 1630  
                                           u7471 162C                                             u6904 137A  
                                           u7480 1644                                             u6905 1376  
                                           u7481 1640                                             u6914 13A8  
                                           u7490 1666                                             u6915 13A4  
                                           u7491 1662                                             u6924 13D6  
                                           u6860 12DA                                             u6925 13D2  
                                           u6861 12D6                                             u6934 143A  
                                           u6870 12FA                                             u6935 1436  
                                           u6871 12F6                  __end_of_ECU_DC_Motor_move_right 22AC  
                                           u6944 1466                                             u6945 1462  
                                           u6954 1492                                             u6955 148E  
                                           u7907 2228                                             u7827 1680  
                                           u6964 14BE                                             u6884 131E  
                                           u6980 1EDE                                             u6965 14BA  
                                           u6885 131A                                             u6981 1EDA  
                                           u7837 16C0                                             u6974 14EA  
                                           u6894 134C                                             u6990 2214  
                                           u6975 14E6                                             u6895 1348  
                                           u6991 2210                                             u7847 170A  
                                           u7857 177E                                             u7867 1F7A  
                                           u7877 1A76                                             u7887 1A92  
                                           u7897 1AAA                                             _TMR2 0FCC  
                                           _WPUB 0F7C                          __end_of_I2C_SlaveIsAddr 241C  
                        __end_of_I2C_SlaveIsRead 2408                                             _main 155C  
                                           _iter 0032                I2C_SlaveSetAddrIntHandler@handler 003E  
                                           fsr1h 0FE2                                             fsr2h 0FDA  
                                           indf1 0FE7                                             indf2 0FDF  
                                           fsr1l 0FE1                                             fsr2l 0FD9  
                               __end_of_I2C_Open 20BE                                             btemp 005A  
                   gpio_pin_read_logic@pinConfig 003E                             ?_I2C_SlaveSendTxData 0039  
                                           prodl 0FF3                                             start 0076  
                     ECU_DC_Motor_stop@_dc_motor 0043                             ?_I2C_SlaveWrCallBack 0039  
                 LCD_4Bits_Send_Enable_Signal@rt 0044                                     ___param_bank 0000  
              I2C_SlaveSetReadIntHandler@handler 003E                    __end_of_I2C_SlaveAddrCallBack 238E  
                           _gpio_pin_write_logic 12C6                                     ?_LED_turnOFF 0043  
                         __end_of_LCD_Send_4Bits 1F3A                    __end_of_OSCILLATOR_Initialize 248A  
       __end_of_I2C_SlaveDefAddrInterruptHandler 24C2               ??_I2C_SlaveDefAddrInterruptHandler 0039  
              ?_I2C_SlaveDefAddrInterruptHandler 0039                 _I2C_SlaveDefAddrInterruptHandler 24BA  
                                          l10052 1542                                 __end_of_LED_init 1DCA  
                                          ?_main 0039                                            _EEADR 0FA9  
                                          _ANSEL 0F7E                                            _LCD_1 00D1  
                                          i2l135 24C6                                            i2l400 241A  
                                          i2l403 2406                                            i2l421 23DE  
                                          i2l341 24B8                                            i2l430 24D6  
                                          i2l406 24D2                                            i2l351 24A8  
                                          i2l424 23F2                                            i2l328 1A22  
                                          i2l361 24C0                                            i2l409 24CE  
                                          i2l338 2360                                            i2l427 24B0  
                                          i2l348 2334                                            i2l358 238C  
                                          i2l480 006A                                            i2l476 004A  
                                          _RCREG 0FAE                            _I2C_SlaveReleaseClock 24CC  
                                          _TMR0H 0FD7                                            _TMR1H 0FCF  
                                          _TMR0L 0FD6                                            _TMR1L 0FCE  
                                          _TMR3H 0FB3                                            _TMR3L 0FB2  
                                          _SPBRG 0FAF                                            _PORTA 0F80  
                                          _PORTB 0F81                                            _PORTC 0F82  
                                          _PORTD 0F83                                            _PORTE 0F84  
                                          _TRISA 0F92                                            _TRISB 0F93  
                                          _TRISC 0F94                                            _TRISD 0F95  
                                          _TRISE 0F96                              ECU_DC_Motor_stop@rt 0044  
                                          _TXREG 0FAD                             keyPad_Read@l_counter 0046  
                  ?_I2C_SlaveSetBusColIntHandler 003E                __end_of_ECU_LCD_4Bit_Send_Command 2172  
                          LED_turnOFF@led_config 0043                           ??_I2C_SlaveIsRxBufFull 0039  
                                          pclath 0FFA                                            pclatu 0FFB  
                                          tablat 0FF5                                            ttemp5 005B  
                                          ttemp6 005E                                            ttemp7 0062  
                                          status 0FD8                                            wtemp8 005B  
                          ??_I2C_SlaveSendTxData 0039                        keyPad_Read@l_rows_counter 0048  
                          ??_I2C_SlaveWrCallBack 003A                   ?_gpio_pin_direction_initialize 003E  
            __end_of_I2C_DefaultInterruptHandler 24C8                      _I2C_DefaultInterruptHandler 24C2  
                          _I2C_SlaveSetSlaveAddr 249A                                  __initialization 1F9E  
                          _I2C_SlaveSetSlaveMask 2492                                     __end_of_main 17A0  
                          ?_gpio_pin_write_logic 003E                            ECU_Relay_turnON@F3467 0023  
                                      ??_I2C_Isr 003A                         gpio_pin_read_logic@logic 003F  
                                  _lat_registers 00C0                                  ?_LCD_Send_4Bits 0043  
                                LED_turnON@F3466 0027                    ??_I2C_DefaultInterruptHandler 0039  
                                         ??_main 00DA                                    __activetblptr 0003  
                      ECU_DC_Motor_move_right@rt 0044                                      LED_init@LED 0045  
                    _I2C_SlaveRdInterruptHandler 001B                      _I2C_SlaveWrInterruptHandler 0019  
                     __end_of_I2C_SlaveEnableIrq 24CC                       __end_of_I2C_SlaveGetRxData 24D8  
                                         _ADRESH 0FC4                                           _EEADRH 0FAA  
                                         _ADRESL 0FC3                          _ECU_LCD_4Bit_Initialize 1A24  
                                         _EEDATA 0FA8                                           _CCPR1H 0FBF  
                                         _CCPR2H 0FBC                                           _CCPR1L 0FBE  
                                         _CCPR2L 0FBB                                _keyPad_Initialize 2000  
                                         _EECON2 0FA7                                           _ANSELH 0F7F  
                                         i2l3202 24D4                                           i2l3210 24B2  
                                         i2l3212 24A2                                           i2l3214 24BA  
                                         i2l3206 24AC                                           i2l3208 24C2  
                                         i2l4202 0012                                           i2l4204 0020  
                                         i2l4206 002E                                           i2l3440 2408  
                                         i2l4208 0058                                           i2l3434 23F4  
                                         i2l3444 2362                                           i2l3460 2336  
                                         i2l3452 230A                                           i2l3446 2374  
                                         i2l3438 24D0                                           i2l3462 2348  
                                         i2l3454 231C                                           i2l3456 23E0  
                                         i2l3448 23CC                                           i2l3464 24CC  
                                         i2l3820 1954                                           i2l3830 1988  
                                         i2l3822 195C                                           i2l3814 1928  
                                         i2l3832 198C                                           i2l3824 1964  
                                         i2l3816 192C                                           i2l3842 19C8  
                                         i2l3834 19A0                                           i2l3850 1A1E  
                                         i2l3826 1978                                           i2l3818 1940  
                                         i2l3844 19DC                                           i2l3836 19A8  
                                         i2l3828 1980                                           i2l3838 19B0  
                                         i2l3848 19E4                               ?_keyPad_Initialize 0046  
                                         _OSCCON 0FD3                                 ?_I2C_SlaveIsAddr 0039  
                       LCD_4Bits_Set_Curser@_LCD 0049                                           _SPBRGH 0FB0  
                                         _SSPADD 0FC8                                 ?_I2C_SlaveIsRead 0039  
                                         _TRISA5 7C95                                           _TRISC3 7CA3  
                                         _TRISC4 7CA4                                           _TRISC5 7CA5  
                                         _SSPBUF 0FC9                                           _SPI_SS 002A  
                                         _SSPMSK 0F77                             _LCD_4Bits_Set_Curser 1DCA  
                             LED_init@led_config 0042                              ??_keyPad_Initialize 0047  
                         _I2C_SlaveSetIsrHandler 245A                                           _pinRC6 0037  
                                         _pinRC7 0036                                           clear_0 1FE4  
                                         clear_1 1FF0                                           isa$std 0001  
                         ?_I2C_SlaveReleaseClock 0039                                  _currentPassword 0060  
                            _CCP2_InterrptHandle 000D                          ??_I2C_SlaveIsTxBufEmpty 0039  
                                   __pdataCOMRAM 0051                                        ?_I2C_Open 0039  
                  ECU_LCD_4Bit_Send_char_Data@rt 0048                       _USART_FRE_InterruptHandler 006F  
            I2C_SlaveSetBusColIntHandler@handler 003E                                     __mediumconst 0000  
                      ECU_LCD_4Bit_Initialize@rt 004C                                           tblptrh 0FF7  
                                         tblptrl 0FF6                        __end_of_keyPad_Initialize 2060  
                                         tblptru 0FF8                        _Interrupt_RB4_Handler_LOW 008B  
                                  _I2C_SlaveOpen 23B0                      _USART_OVRR_InterruptHandler 006D  
                        _Timer0_InterruptHandler 007B                 ??_INTERRUPT_InterruptManagerHigh 003C  
                ?_INTERRUPT_InterruptManagerHigh 0039                                _SYSTEM_Initialize 241C  
                                     __accesstop 0060                          __end_of__initialization 1FF6  
                          ?_LCD_4Bits_Set_Curser 0049                                    _WrongPassword 1F3A  
             I2C_SlaveSetWrColIntHandler@handler 003E                     ??_I2C_SlaveSetAddrIntHandler 0040  
                             ?_SYSTEM_Initialize 0039                                    ___rparam_used 0001  
                                      ?_LED_init 0042                           ?_I2C_SlaveSetSlaveAddr 0039  
                         ?_I2C_SlaveSetSlaveMask 0039                       _I2C_Report_Write_Collision 0009  
   __end_of_ECU_LCD_4Bit_Send_char_Data_Position 2204           ??_ECU_LCD_4Bit_Send_char_Data_Position 0051  
          ?_ECU_LCD_4Bit_Send_char_Data_Position 004D             _ECU_LCD_4Bit_Send_char_Data_Position 21C4  
                         ??_gpio_pin_write_logic 0040                                   __pcstackCOMRAM 0039  
                                   __pidataBANK0 22AC                              ??_SYSTEM_Initialize 003E  
                      _USART_TX_InterruptHandler 0073              __end_of_ECU_LCD_4Bit_Send_char_Data 2118  
                    _ECU_LCD_4Bit_Send_char_Data 20BE                           ECU_Relay_turnOFF@F3472 0022  
                 I2C_SlaveSetSlaveAddr@slaveAddr 003E                     ??_I2C_SlaveSetReadIntHandler 0040  
                               LED_turnOFF@F3471 0026                                       ??_I2C_Open 0040  
                      ??_ECU_LCD_4Bit_Initialize 004A                      ??_ECU_LCD_4Bit_Send_Command 0048  
                                 ?_I2C_SlaveOpen 0039                        _Interrupt_RB5_Handler_LOW 0087  
                                   ??_LED_turnON 0044                        __end_of_SYSTEM_Initialize 242E  
                                     __pbssBANK0 0060                                  _correctPassword 00B4  
                                 ?_WrongPassword 0039              __end_of_I2C_SlaveSetWrColIntHandler 2450  
                    _I2C_SlaveSetWrColIntHandler 2446                                       ??_LED_init 0043  
       ECU_LCD_4Bit_Send_char_Data_Position@_LCD 004D                      __end_of_I2C_SlaveRdCallBack 2362  
                  ??_I2C_SlaveSetWrColIntHandler 0040         ECU_LCD_4Bit_Send_char_Data_Position@_Row 004E  
                                        _I2C_Isr 1928                               __end_of_LED_turnON 1C7A  
                               LCD_Send_4Bits@rt 0045                                          i2l10054 19F8  
                       _ret@ecu_servoMotor$F5428 0020                                          _RED_LED 0059  
                        _ECU_DC_Motor_initialize 22DC                                          i2u50_40 23DC  
                                        i2u50_41 23D6                                          i2u51_40 23DE  
                                        i2u52_40 231C                                          i2u52_41 2318  
                                        i2u45_40 2404                                          i2u45_41 23FE  
                                        i2u45_46 2406                                          i2u46_40 2418  
                                        i2u54_40 23F0                                          i2u53_48 2322  
                                        i2u46_41 2412                                          i2u54_41 23EA  
                                        i2u53_49 2334                                          _OSCTUNE 0F9B  
                                        i2u54_46 23F2                                          i2u47_40 241A  
                                        i2u55_40 2348                                          i2u55_41 2344  
                                        i2u48_40 2374                                          i2u48_41 2370  
                                        i2u56_48 234E                                          i2u56_49 2360  
                                        i2u49_48 237A                                          i2u49_49 238C  
                                        i2u96_40 1940                                          i2u96_41 193C  
                                        i2u97_40 1954                                          i2u97_41 1950  
                                        i2u98_40 1978                                          i2u98_41 1974  
                      _Interrupt_RB6_Handler_LOW 0083                                          i2u99_40 19A0  
                                        i2u99_41 199C                                          _SSPCON1 0FC6  
                                        _SSPCON2 0FC5                                          _SPI_SDI 002C  
                                        _SPI_SCK 002B                                          _SPI_SDO 002D  
                                        _SSPSTAT 0FC7                                          _PWM_Val 0001  
                  ECU_LCD_4Bit_Send_Command@_LCD 0046                           ??_LCD_4Bits_Set_Curser 004C  
                          gpio_pin_initialize@rt 0045                                   _tris_registers 00C5  
                                      _CCP1_flag 001F                            gpio_pin_read_logic@rt 0042  
                      _ECU_LCD_4Bit_Send_Command 2118                             _ADC_InterruptHandler 0011  
                                        __Hparam 0000                                     LED_turnON@rt 0045  
                                        __Lparam 0000                                 ??_LCD_Send_4Bits 0045  
                           _SPI_InterruptHandler 007D                              _gpio_pin_initialize 2172  
                             LCD_Send_4Bits@_LCD 0043                              _gpio_pin_read_logic 17A0  
                        I2C_SlaveSendTxData@data 0039                                     __psmallconst 1000  
                          _I2C_SlaveAddrCallBack 2362                          _Timer1_InterruptHandler 0079  
                        _ECU_DC_Motor_move_right 2276                                          __pcinit 1F9E  
                                  keyPad_Read@rt 0045                                   _I2C_Initialize 242E  
                                        __ramtop 1000                                          __ptext0 155C  
                                        __ptext1 1B0C                                          __ptext2 17A0  
                                        __ptext3 2000                                          __ptext4 1F3A  
                                        __ptext5 1BD0                                          __ptext6 1C7A  
                                        __ptext7 1E5E                                          __ptext8 2240  
                                        __ptext9 241C                                        _T0CONbits 0FD5  
                                      _T1CONbits 0FCD                                  ??_I2C_SlaveOpen 003E  
                ??_gpio_pin_direction_initialize 003F                            _OSCILLATOR_Initialize 2482  
                                      _T2CONbits 0FCA                                        _T3CONbits 0FB1  
                                      _GREEN_LED 0058                         ??_PIN_MANAGER_Initialize 003E  
                           ?_gpio_pin_initialize 0043                        _Interrupt_RB7_Handler_LOW 007F  
                  I2C_SlaveSetIsrHandler@handler 003E                             ?_gpio_pin_read_logic 003E  
                    __end_of_I2C_SlaveSendTxData 24B2                                  ??_WrongPassword 00D8  
                           end_of_initialization 1FF6                      __end_of_I2C_SlaveWrCallBack 2336  
             __end_of_I2C_SlaveSetAddrIntHandler 2478                       _I2C_SlaveSetAddrIntHandler 246E  
                             _I2C_SlaveEnableIrq 24C8                               _I2C_SlaveGetRxData 24D4  
                        ?_I2C_SlaveSetIsrHandler 003E                                     _i2cSlaveAddr 002F  
                     _Interrupt_RB4_Handler_HIGH 008D                                        _RCSTAbits 0FAB  
                                     _timer1_obj 00A2                                          postdec1 0FE5  
                                        postinc0 0FEE                                          postinc1 0FE6  
                                        postinc2 0FDE                           __end_of_I2C_Initialize 243C  
                        ??_I2C_SlaveReleaseClock 0039                              ?_I2C_SlaveEnableIrq 0039  
                            ?_I2C_SlaveGetRxData 0039               __end_of_I2C_SlaveSetReadIntHandler 245A  
                     _I2C_SlaveSetReadIntHandler 2450                     ?_I2C_SlaveSetWriteIntHandler 003E  
                      ??_ECU_DC_Motor_initialize 0047                    __end_of_I2C_SlaveIsTxBufEmpty 23E0  
                                      _TRISCbits 0F94                     gpio_pin_initialize@pinConfig 0043  
                          ??_gpio_pin_initialize 0044                            ??_gpio_pin_read_logic 0040  
                           ??_I2C_SlaveEnableIrq 003E                             ??_I2C_SlaveGetRxData 0039  
               ECU_DC_Motor_initialize@_dc_motor 0046                          ??_I2C_SlaveSetSlaveAddr 003E  
                        ??_I2C_SlaveSetSlaveMask 003E                                      _CCP1CONbits 0FBD  
                                    _CCP2CONbits 0FBA                                        _TXSTAbits 0FAC  
                 __end_of_I2C_SlaveSetIsrHandler 2464                        ??_ECU_DC_Motor_move_right 0044  
                         ?_I2C_SlaveAddrCallBack 0039                     __end_of_INTERRUPT_Initialize 2492  
                                ?_I2C_Initialize 0039                    Convert_uint16_to_string@F3619 0067  
                                    _BAUDCONbits 0FB8                                    __pidataCOMRAM 2478  
                                 _timer0_preload 0007        ECU_LCD_4Bit_Send_String_Data_Postition@rt 00D7  
                                      _i2cRdData 0030                           ?_OSCILLATOR_Initialize 0039  
                                 _timer1_preload 0005                                        _i2cWrData 0031  
                                 _timer2_preload 0029                             LED_turnON@led_config 0043  
                            start_initialization 1F9E                                   _timer3_preload 0003  
                                  ??_keyPad_Read 0045           gpio_pin_direction_initialize@pinConfig 003E  
          __end_of_gpio_pin_direction_initialize 12C6                    _gpio_pin_direction_initialize 102A  
                gpio_pin_direction_initialize@rt 0041                                   LED_turnOFF@LED 0046  
                        _Timer2_InterruptHandler 0077                                       LED_init@rt 0044  
                       keyPad_Read@coloumn_logic 0047                          LCD_4Bits_Set_Curser@row 004A  
                     _Interrupt_RB5_Handler_HIGH 0089                        _USART_RX_InterruptHandler 0071  
      _I2C_DefaultInterruptHandler@hal_i2c$F2517 000B                                      __pdataBANK0 00A8  
             keyPad_Initialize@l_coloums_counter 0049                                    ??_LED_turnOFF 0044  
                                       ?_I2C_Isr 0039                                     _LDR_Get_Data 0035  
           __end_of_LCD_4Bits_Send_Enable_Signal 2240                     _LCD_4Bits_Send_Enable_Signal 2204  
__end_of_ECU_LCD_4Bit_Send_String_Data_Postition 1ECE        ??_ECU_LCD_4Bit_Send_String_Data_Postition 0051  
       ?_ECU_LCD_4Bit_Send_String_Data_Postition 004D          _ECU_LCD_4Bit_Send_String_Data_Postition 1E5E  
                                    __pbssCOMRAM 0001                                    __pcstackBANK0 00D7  
                              keyPad_Read@keypad 0043                                    LED_init@F3461 0028  
   ECU_LCD_4Bit_Send_char_Data_Position@_Coloumn 004F                              __end_of_keyPad_Read 1BD0  
                                  _NumberPressed 0038                   ??_I2C_SlaveSetBusColIntHandler 0040  
                         _PIN_MANAGER_Initialize 238E                     ?_I2C_DefaultInterruptHandler 0039  
                                      __pintcode 0008                              keyPad_Initialize@rt 0047  
                            _CCP1_InterrptHandle 000F                        gpio_pin_write_logic@logic 003F  
              ECU_LCD_4Bit_Send_Command@_Command 0047                         ?_ECU_LCD_4Bit_Initialize 0049  
      ECU_LCD_4Bit_Send_char_Data_Position@_Data 0050                                ??_I2C_SlaveIsAddr 0039  
                                      _btn_value 00A8                                ??_I2C_SlaveIsRead 0039  
               ??_I2C_SlaveDefRdInterruptHandler 0039                  ?_I2C_SlaveDefRdInterruptHandler 0039  
               ??_I2C_SlaveDefWrInterruptHandler 003A                  ?_I2C_SlaveDefWrInterruptHandler 0039  
                                    __smallconst 1000                                         _I2C_Open 2060  
                                       _CCP1_obj 0097                              __end_of_LED_turnOFF 1D24  
                  ?_LCD_4Bits_Send_Enable_Signal 0043                             _INTERRUPT_Initialize 248A  
                    ?_I2C_SlaveSetAddrIntHandler 003E                                         _RB4_Flag 0054  
                                       _RB5_Flag 0053                                         _RB6_Flag 0052  
                                       _RB7_Flag 0051                 ECU_DC_Motor_move_right@_dc_motor 0043  
                                       _IPR1bits 0F9F                                         _IPR2bits 0FA2  
                                       _LED_init 1D24                                         _PIE1bits 0F9D  
                                       _PIE2bits 0FA0                                _I2C_SlaveClearIrq 24D0  
                                       i2u100_40 19C4                                         i2u100_41 19C0  
                                       i2u101_40 19DC                                         i2u101_41 19D8  
                                       i2u150_40 0066                                         i2u150_41 0062  
                                       i2u146_40 0020                                         i2u146_41 001C  
                                       i2u147_40 002E                                         i2u147_41 002A  
                                       i2u149_40 0058                                         i2u148_48 0034  
                                       i2u149_41 0054                                         i2u148_49 0046  
                                       _PIR1bits 0F9E                                         _PIR2bits 0FA1  
                             ?_I2C_SlaveClearIrq 0039                                         _RCONbits 0FD0  
                     _Interrupt_RB6_Handler_HIGH 0085                     __end_of_I2C_SlaveIsRxBufFull 23F4  
             ECU_LCD_4Bit_Initialize@LCD_Counter 004B                      _I2C_Report_Receive_OverFlow 0095  
                        _Timer3_InterruptHandler 0075                      ?_I2C_SlaveSetReadIntHandler 003E  
                  __end_of_I2C_SlaveReleaseClock 24D0                              ??_I2C_SlaveClearIrq 0039  
                                     _ADCON0bits 0FC2                                       _ADCON1bits 0FC1  
                                     _ADCON2bits 0FC0                            __end_of_I2C_SlaveOpen 23CC  
                                       _InDoor_E 0057                                      _keyPad_Read 1B0C  
                                    _INTCON2bits 0FF1                        ECU_DC_Motor_initialize@rt 0047  
                                    _INTCON3bits 0FF0                                        copy_data0 1FB2  
                                      copy_data1 1FD2                            ?_INTERRUPT_Initialize 0039  
              _I2C_SlaveDefWrColInterruptHandler 0000                            __end_of_WrongPassword 1F9E  
ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn 004F                        __end_of_I2C_SlaveClearIrq 24D4  
                      ECU_Relay_Initialize@F3462 0024                                    LED_turnON@LED 0046  
                                  LED_turnOFF@rt 0045                    __end_of_I2C_SlaveSetSlaveAddr 24A2  
                                     _EECON1bits 0FA6                    __end_of_I2C_SlaveSetSlaveMask 249A  
                               ??_I2C_Initialize 003E                          ??_I2C_SlaveAddrCallBack 0039  
                                       __Hrparam 0000                           LCD_4Bits_Set_Curser@rt 004C  
                                       __Lrparam 0000                                  _CCP1_DefaultISR 0000  
                    ECU_LCD_4Bit_Send_Command@rt 0048                  __end_of_ECU_LCD_4Bit_Initialize 1B0C  
                        ??_OSCILLATOR_Initialize 003E                     ?_ECU_LCD_4Bit_Send_char_Data 0046  
                  _I2C_SlaveAddrInterruptHandler 0017                              LCD_Send_4Bits@_Data 0044  
                                    _LED_turnOFF 1C7A                    gpio_pin_write_logic@pinConfig 003E  
                         _Interrupt_INT0_Handler 0093                      __end_of_gpio_pin_initialize 21C4  
               ECU_LCD_4Bit_Send_char_Data@_Data 0047                      __end_of_gpio_pin_read_logic 1928  
             _I2C_SlaveDefBusColInterruptHandler 0000                           _Interrupt_INT1_Handler 0091  
                         _Interrupt_INT2_Handler 008F                   _I2C_SlaveWrColInterruptHandler 0013  
                                       __ptext10 238E                                         __ptext11 2482  
                                       __ptext20 2450                                         __ptext12 248A  
                                       __ptext21 245A                                         __ptext13 242E  
                                       __ptext30 2118                                         __ptext22 2464  
                                       __ptext14 1D24                                         __ptext31 1ECE  
                                       __ptext23 246E                                         __ptext15 2060  
                                       __ptext40 230A                                         __ptext32 2204  
                                       __ptext24 23B0                                         __ptext16 243C  
                                       __ptext41 24A2                                         __ptext33 2276  
                                       __ptext25 24C8                                         __ptext17 2446  
                                       __ptext50 2408                                         __ptext42 24AA  
                                       __ptext34 22DC                                         __ptext26 21C4  
                                       __ptext18 2492                                         __ptext51 24D0  
                                       __ptext43 24CC                                         __ptext35 2172  
                                       __ptext27 1DCA                                         __ptext19 249A  
                                       __ptext52 2362                                         __ptext44 2336  
                                       __ptext36 12C6                                         __ptext28 20BE  
                                       __ptext53 24BA                                         __ptext45 24C2  
                                       __ptext37 102A                                         __ptext29 1A24  
                                       __ptext54 24D4                                         __ptext46 24B2  
                                       __ptext47 23CC                                         __ptext39 1928  
                                       __ptext48 23E0                                         __ptext49 23F4  
                          _I2C_SlaveIsTxBufEmpty 23CC                   ??_LCD_4Bits_Send_Enable_Signal 0044  
                        keyPad_Initialize@keypad 0046                                _ECU_DC_Motor_stop 2240  
                                       _keypad_1 00CA                               ?_ECU_DC_Motor_stop 0043  
                   ?_I2C_SlaveSetWrColIntHandler 003E                    keyPad_Read@l_coloumns_counter 0049  
                                       isa$xinst 0000                       _Interrupt_RB7_Handler_HIGH 0081  
                                       int$flags 005A                              ??_ECU_DC_Motor_stop 0044  
                    LCD_4Bits_Set_Curser@coloumn 004B                         ?_ECU_DC_Motor_initialize 0046  
                  ??_ECU_LCD_4Bit_Send_char_Data 0048                           gpio_pin_write_logic@rt 0042  
                                     _LCD_curser 0033                                       _INTCONbits 0FF2  
         ECU_LCD_4Bit_Send_char_Data_Position@rt 00D7                           ??_INTERRUPT_Initialize 003E  
                   __end_of_gpio_pin_write_logic 155C                                       _LED_turnON 1BD0  
                ECU_LCD_4Bit_Send_char_Data@_LCD 0046                        __end_of_ECU_DC_Motor_stop 2276  
                           _I2C_SlaveIsRxBufFull 23E0                                         intlevel2 0000  
                _I2C_SlaveBusColInterruptHandler 0015                      ECU_LCD_4Bit_Initialize@_LCD 0049  
                        ?_PIN_MANAGER_Initialize 0039                         ?_ECU_DC_Motor_move_right 0043  
                            _I2C_SlaveRdCallBack 2336                                  _I2C_SlaveIsAddr 2408  
                                _I2C_SlaveIsRead 23F4                                    _i2cSlaveState 002E  
             I2C_SlaveSetWriteIntHandler@handler 003E              __end_of_I2C_SlaveSetWriteIntHandler 2446  
                    _I2C_SlaveSetWriteIntHandler 243C           __end_of_INTERRUPT_InterruptManagerHigh 0076  
                 _INTERRUPT_InterruptManagerHigh 0008                          keyPad_Read@keypad_value 0044  
                                 _port_registers 00BB                             ?_I2C_SlaveRdCallBack 0039  
                         ?_I2C_SlaveIsTxBufEmpty 0039                    ??_I2C_SlaveSetWriteIntHandler 0040  
    ECU_LCD_4Bit_Send_String_Data_Postition@_LCD 004D                                      _SSPCON1bits 0FC6  
                                    _SSPCON2bits 0FC5      ECU_LCD_4Bit_Send_String_Data_Postition@_Row 004E  
    ECU_LCD_4Bit_Send_String_Data_Postition@_Str 0050                         ??_I2C_SlaveSetIsrHandler 0040  
                          ?_I2C_SlaveIsRxBufFull 0039                   __end_of_PIN_MANAGER_Initialize 23B0  
         __end_of_I2C_SlaveDefRdInterruptHandler 24BA                   _I2C_SlaveDefRdInterruptHandler 24B2  
         __end_of_I2C_SlaveDefWrInterruptHandler 24AA                   _I2C_SlaveDefWrInterruptHandler 24A2  
                          _MSSP_InterruptHandler 001D                  __end_of_ECU_DC_Motor_initialize 230A  
                keyPad_Initialize@l_rows_counter 0048  
