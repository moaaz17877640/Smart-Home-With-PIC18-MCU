

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Oct 24 01:40:17 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,inline
    29                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,inline
    30                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,inline
    31                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1,inline
    32                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=1
    46                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1,group=1
    47                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1,group=1
    48                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1,group=1
    49                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1,inline
    54                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1,inline
    58                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1,inline
    59                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1
    62                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    63                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1,inline
    76                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1,inline
    77                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1,inline
    78                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1,inline
    79                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1,inline
    80                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1,inline
    81                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1,inline
    82                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1
    83                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1
    84                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1
    85                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    86                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1,inline
    93                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1,inline
    94                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1,inline
    95                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1,inline
    97                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1,inline
    98                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1,inline
    99                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1
   101                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1
   102                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
   103                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1
   116                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1
   117                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1
   118                           	psect	text100,global,reloc=2,class=CODE,space=0,delta=1
   119                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1,group=1
   121                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1,group=1
   122                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1
   131                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   132                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1
   134                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   135                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1
   139                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   140                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   141                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   142                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   143                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   144   000000                     
   145                           ; Generated 12/10/2023 GMT
   146                           ; 
   147                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   148                           ; All rights reserved.
   149                           ; 
   150                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   151                           ; 
   152                           ; Redistribution and use in source and binary forms, with or without modification, are
   153                           ; permitted provided that the following conditions are met:
   154                           ; 
   155                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   156                           ;        conditions and the following disclaimer.
   157                           ; 
   158                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   159                           ;        of conditions and the following disclaimer in the documentation and/or other
   160                           ;        materials provided with the distribution. Publication is not required when
   161                           ;        this file is used in an embedded application.
   162                           ; 
   163                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   164                           ;        software without specific prior written permission.
   165                           ; 
   166                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   167                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   168                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   169                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   170                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   171                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   172                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   173                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   174                           ; 
   175                           ; 
   176                           ; Code-generator required, PIC18F46K20 Definitions
   177                           ; 
   178                           ; SFR Addresses
   179   000FE0                     bsr             equ	4064
   180   000FE9                     fsr0            equ	4073
   181   000FEA                     fsr0h           equ	4074
   182   000FE9                     fsr0l           equ	4073
   183   000FE1                     fsr1            equ	4065
   184   000FE2                     fsr1h           equ	4066
   185   000FE1                     fsr1l           equ	4065
   186   000FD9                     fsr2            equ	4057
   187   000FDA                     fsr2h           equ	4058
   188   000FD9                     fsr2l           equ	4057
   189   000FEF                     indf0           equ	4079
   190   000FE7                     indf1           equ	4071
   191   000FDF                     indf2           equ	4063
   192   000FF2                     intcon          equ	4082
   193   000000                     nvmcon          equ	0
   194   000FF9                     pcl             equ	4089
   195   000FFA                     pclath          equ	4090
   196   000FFB                     pclatu          equ	4091
   197   000FEB                     plusw0          equ	4075
   198   000FE3                     plusw1          equ	4067
   199   000FDB                     plusw2          equ	4059
   200   000FED                     postdec0        equ	4077
   201   000FE5                     postdec1        equ	4069
   202   000FDD                     postdec2        equ	4061
   203   000FEE                     postinc0        equ	4078
   204   000FE6                     postinc1        equ	4070
   205   000FDE                     postinc2        equ	4062
   206   000FEC                     preinc0         equ	4076
   207   000FE4                     preinc1         equ	4068
   208   000FDC                     preinc2         equ	4060
   209   000FF3                     prod            equ	4083
   210   000FF4                     prodh           equ	4084
   211   000FF3                     prodl           equ	4083
   212   000FD8                     status          equ	4056
   213   000FF5                     tablat          equ	4085
   214   000FF6                     tblptr          equ	4086
   215   000FF7                     tblptrh         equ	4087
   216   000FF6                     tblptrl         equ	4086
   217   000FF8                     tblptru         equ	4088
   218   000FFD                     tosl            equ	4093
   219   000FE8                     wreg            equ	4072
   220   000F77                     SSPMSK          equ	3959	;# 
   221   000F78                     SLRCON          equ	3960	;# 
   222   000F79                     CM2CON1         equ	3961	;# 
   223   000F7A                     CM2CON0         equ	3962	;# 
   224   000F7B                     CM1CON0         equ	3963	;# 
   225   000F7C                     WPUB            equ	3964	;# 
   226   000F7D                     IOCB            equ	3965	;# 
   227   000F7E                     ANSEL           equ	3966	;# 
   228   000F7F                     ANSELH          equ	3967	;# 
   229   000F80                     PORTA           equ	3968	;# 
   230   000F81                     PORTB           equ	3969	;# 
   231   000F82                     PORTC           equ	3970	;# 
   232   000F83                     PORTD           equ	3971	;# 
   233   000F84                     PORTE           equ	3972	;# 
   234   000F89                     LATA            equ	3977	;# 
   235   000F8A                     LATB            equ	3978	;# 
   236   000F8B                     LATC            equ	3979	;# 
   237   000F8C                     LATD            equ	3980	;# 
   238   000F8D                     LATE            equ	3981	;# 
   239   000F92                     TRISA           equ	3986	;# 
   240   000F92                     DDRA            equ	3986	;# 
   241   000F93                     TRISB           equ	3987	;# 
   242   000F93                     DDRB            equ	3987	;# 
   243   000F94                     TRISC           equ	3988	;# 
   244   000F94                     DDRC            equ	3988	;# 
   245   000F95                     TRISD           equ	3989	;# 
   246   000F95                     DDRD            equ	3989	;# 
   247   000F96                     TRISE           equ	3990	;# 
   248   000F96                     DDRE            equ	3990	;# 
   249   000F9B                     OSCTUNE         equ	3995	;# 
   250   000F9D                     PIE1            equ	3997	;# 
   251   000F9E                     PIR1            equ	3998	;# 
   252   000F9F                     IPR1            equ	3999	;# 
   253   000FA0                     PIE2            equ	4000	;# 
   254   000FA1                     PIR2            equ	4001	;# 
   255   000FA2                     IPR2            equ	4002	;# 
   256   000FA6                     EECON1          equ	4006	;# 
   257   000FA7                     EECON2          equ	4007	;# 
   258   000FA8                     EEDATA          equ	4008	;# 
   259   000FA9                     EEADR           equ	4009	;# 
   260   000FAA                     EEADRH          equ	4010	;# 
   261   000FAB                     RCSTA           equ	4011	;# 
   262   000FAB                     RCSTA1          equ	4011	;# 
   263   000FAC                     TXSTA           equ	4012	;# 
   264   000FAC                     TXSTA1          equ	4012	;# 
   265   000FAD                     TXREG           equ	4013	;# 
   266   000FAD                     TXREG1          equ	4013	;# 
   267   000FAE                     RCREG           equ	4014	;# 
   268   000FAE                     RCREG1          equ	4014	;# 
   269   000FAF                     SPBRG           equ	4015	;# 
   270   000FAF                     SPBRG1          equ	4015	;# 
   271   000FB0                     SPBRGH          equ	4016	;# 
   272   000FB1                     T3CON           equ	4017	;# 
   273   000FB2                     TMR3            equ	4018	;# 
   274   000FB2                     TMR3L           equ	4018	;# 
   275   000FB3                     TMR3H           equ	4019	;# 
   276   000FB4                     CVRCON2         equ	4020	;# 
   277   000FB5                     CVRCON          equ	4021	;# 
   278   000FB6                     ECCP1AS         equ	4022	;# 
   279   000FB7                     PWM1CON         equ	4023	;# 
   280   000FB8                     BAUDCON         equ	4024	;# 
   281   000FB8                     BAUDCTL         equ	4024	;# 
   282   000FB9                     PSTRCON         equ	4025	;# 
   283   000FBA                     CCP2CON         equ	4026	;# 
   284   000FBB                     CCPR2           equ	4027	;# 
   285   000FBB                     CCPR2L          equ	4027	;# 
   286   000FBC                     CCPR2H          equ	4028	;# 
   287   000FBD                     CCP1CON         equ	4029	;# 
   288   000FBE                     CCPR1           equ	4030	;# 
   289   000FBE                     CCPR1L          equ	4030	;# 
   290   000FBF                     CCPR1H          equ	4031	;# 
   291   000FC0                     ADCON2          equ	4032	;# 
   292   000FC1                     ADCON1          equ	4033	;# 
   293   000FC2                     ADCON0          equ	4034	;# 
   294   000FC3                     ADRES           equ	4035	;# 
   295   000FC3                     ADRESL          equ	4035	;# 
   296   000FC4                     ADRESH          equ	4036	;# 
   297   000FC5                     SSPCON2         equ	4037	;# 
   298   000FC6                     SSPCON1         equ	4038	;# 
   299   000FC7                     SSPSTAT         equ	4039	;# 
   300   000FC8                     SSPADD          equ	4040	;# 
   301   000FC9                     SSPBUF          equ	4041	;# 
   302   000FCA                     T2CON           equ	4042	;# 
   303   000FCB                     PR2             equ	4043	;# 
   304   000FCB                     MEMCON          equ	4043	;# 
   305   000FCC                     TMR2            equ	4044	;# 
   306   000FCD                     T1CON           equ	4045	;# 
   307   000FCE                     TMR1            equ	4046	;# 
   308   000FCE                     TMR1L           equ	4046	;# 
   309   000FCF                     TMR1H           equ	4047	;# 
   310   000FD0                     RCON            equ	4048	;# 
   311   000FD1                     WDTCON          equ	4049	;# 
   312   000FD2                     HLVDCON         equ	4050	;# 
   313   000FD2                     LVDCON          equ	4050	;# 
   314   000FD3                     OSCCON          equ	4051	;# 
   315   000FD5                     T0CON           equ	4053	;# 
   316   000FD6                     TMR0            equ	4054	;# 
   317   000FD6                     TMR0L           equ	4054	;# 
   318   000FD7                     TMR0H           equ	4055	;# 
   319   000FD8                     STATUS          equ	4056	;# 
   320   000FD9                     FSR2            equ	4057	;# 
   321   000FD9                     FSR2L           equ	4057	;# 
   322   000FDA                     FSR2H           equ	4058	;# 
   323   000FDB                     PLUSW2          equ	4059	;# 
   324   000FDC                     PREINC2         equ	4060	;# 
   325   000FDD                     POSTDEC2        equ	4061	;# 
   326   000FDE                     POSTINC2        equ	4062	;# 
   327   000FDF                     INDF2           equ	4063	;# 
   328   000FE0                     BSR             equ	4064	;# 
   329   000FE1                     FSR1            equ	4065	;# 
   330   000FE1                     FSR1L           equ	4065	;# 
   331   000FE2                     FSR1H           equ	4066	;# 
   332   000FE3                     PLUSW1          equ	4067	;# 
   333   000FE4                     PREINC1         equ	4068	;# 
   334   000FE5                     POSTDEC1        equ	4069	;# 
   335   000FE6                     POSTINC1        equ	4070	;# 
   336   000FE7                     INDF1           equ	4071	;# 
   337   000FE8                     WREG            equ	4072	;# 
   338   000FE9                     FSR0            equ	4073	;# 
   339   000FE9                     FSR0L           equ	4073	;# 
   340   000FEA                     FSR0H           equ	4074	;# 
   341   000FEB                     PLUSW0          equ	4075	;# 
   342   000FEC                     PREINC0         equ	4076	;# 
   343   000FED                     POSTDEC0        equ	4077	;# 
   344   000FEE                     POSTINC0        equ	4078	;# 
   345   000FEF                     INDF0           equ	4079	;# 
   346   000FF0                     INTCON3         equ	4080	;# 
   347   000FF1                     INTCON2         equ	4081	;# 
   348   000FF2                     INTCON          equ	4082	;# 
   349   000FF3                     PROD            equ	4083	;# 
   350   000FF3                     PRODL           equ	4083	;# 
   351   000FF4                     PRODH           equ	4084	;# 
   352   000FF5                     TABLAT          equ	4085	;# 
   353   000FF6                     TBLPTR          equ	4086	;# 
   354   000FF6                     TBLPTRL         equ	4086	;# 
   355   000FF7                     TBLPTRH         equ	4087	;# 
   356   000FF8                     TBLPTRU         equ	4088	;# 
   357   000FF9                     PCLAT           equ	4089	;# 
   358   000FF9                     PC              equ	4089	;# 
   359   000FF9                     PCL             equ	4089	;# 
   360   000FFA                     PCLATH          equ	4090	;# 
   361   000FFB                     PCLATU          equ	4091	;# 
   362   000FFC                     STKPTR          equ	4092	;# 
   363   000FFD                     TOS             equ	4093	;# 
   364   000FFD                     TOSL            equ	4093	;# 
   365   000FFE                     TOSH            equ	4094	;# 
   366   000FFF                     TOSU            equ	4095	;# 
   367   000F77                     SSPMSK          equ	3959	;# 
   368   000F78                     SLRCON          equ	3960	;# 
   369   000F79                     CM2CON1         equ	3961	;# 
   370   000F7A                     CM2CON0         equ	3962	;# 
   371   000F7B                     CM1CON0         equ	3963	;# 
   372   000F7C                     WPUB            equ	3964	;# 
   373   000F7D                     IOCB            equ	3965	;# 
   374   000F7E                     ANSEL           equ	3966	;# 
   375   000F7F                     ANSELH          equ	3967	;# 
   376   000F80                     PORTA           equ	3968	;# 
   377   000F81                     PORTB           equ	3969	;# 
   378   000F82                     PORTC           equ	3970	;# 
   379   000F83                     PORTD           equ	3971	;# 
   380   000F84                     PORTE           equ	3972	;# 
   381   000F89                     LATA            equ	3977	;# 
   382   000F8A                     LATB            equ	3978	;# 
   383   000F8B                     LATC            equ	3979	;# 
   384   000F8C                     LATD            equ	3980	;# 
   385   000F8D                     LATE            equ	3981	;# 
   386   000F92                     TRISA           equ	3986	;# 
   387   000F92                     DDRA            equ	3986	;# 
   388   000F93                     TRISB           equ	3987	;# 
   389   000F93                     DDRB            equ	3987	;# 
   390   000F94                     TRISC           equ	3988	;# 
   391   000F94                     DDRC            equ	3988	;# 
   392   000F95                     TRISD           equ	3989	;# 
   393   000F95                     DDRD            equ	3989	;# 
   394   000F96                     TRISE           equ	3990	;# 
   395   000F96                     DDRE            equ	3990	;# 
   396   000F9B                     OSCTUNE         equ	3995	;# 
   397   000F9D                     PIE1            equ	3997	;# 
   398   000F9E                     PIR1            equ	3998	;# 
   399   000F9F                     IPR1            equ	3999	;# 
   400   000FA0                     PIE2            equ	4000	;# 
   401   000FA1                     PIR2            equ	4001	;# 
   402   000FA2                     IPR2            equ	4002	;# 
   403   000FA6                     EECON1          equ	4006	;# 
   404   000FA7                     EECON2          equ	4007	;# 
   405   000FA8                     EEDATA          equ	4008	;# 
   406   000FA9                     EEADR           equ	4009	;# 
   407   000FAA                     EEADRH          equ	4010	;# 
   408   000FAB                     RCSTA           equ	4011	;# 
   409   000FAB                     RCSTA1          equ	4011	;# 
   410   000FAC                     TXSTA           equ	4012	;# 
   411   000FAC                     TXSTA1          equ	4012	;# 
   412   000FAD                     TXREG           equ	4013	;# 
   413   000FAD                     TXREG1          equ	4013	;# 
   414   000FAE                     RCREG           equ	4014	;# 
   415   000FAE                     RCREG1          equ	4014	;# 
   416   000FAF                     SPBRG           equ	4015	;# 
   417   000FAF                     SPBRG1          equ	4015	;# 
   418   000FB0                     SPBRGH          equ	4016	;# 
   419   000FB1                     T3CON           equ	4017	;# 
   420   000FB2                     TMR3            equ	4018	;# 
   421   000FB2                     TMR3L           equ	4018	;# 
   422   000FB3                     TMR3H           equ	4019	;# 
   423   000FB4                     CVRCON2         equ	4020	;# 
   424   000FB5                     CVRCON          equ	4021	;# 
   425   000FB6                     ECCP1AS         equ	4022	;# 
   426   000FB7                     PWM1CON         equ	4023	;# 
   427   000FB8                     BAUDCON         equ	4024	;# 
   428   000FB8                     BAUDCTL         equ	4024	;# 
   429   000FB9                     PSTRCON         equ	4025	;# 
   430   000FBA                     CCP2CON         equ	4026	;# 
   431   000FBB                     CCPR2           equ	4027	;# 
   432   000FBB                     CCPR2L          equ	4027	;# 
   433   000FBC                     CCPR2H          equ	4028	;# 
   434   000FBD                     CCP1CON         equ	4029	;# 
   435   000FBE                     CCPR1           equ	4030	;# 
   436   000FBE                     CCPR1L          equ	4030	;# 
   437   000FBF                     CCPR1H          equ	4031	;# 
   438   000FC0                     ADCON2          equ	4032	;# 
   439   000FC1                     ADCON1          equ	4033	;# 
   440   000FC2                     ADCON0          equ	4034	;# 
   441   000FC3                     ADRES           equ	4035	;# 
   442   000FC3                     ADRESL          equ	4035	;# 
   443   000FC4                     ADRESH          equ	4036	;# 
   444   000FC5                     SSPCON2         equ	4037	;# 
   445   000FC6                     SSPCON1         equ	4038	;# 
   446   000FC7                     SSPSTAT         equ	4039	;# 
   447   000FC8                     SSPADD          equ	4040	;# 
   448   000FC9                     SSPBUF          equ	4041	;# 
   449   000FCA                     T2CON           equ	4042	;# 
   450   000FCB                     PR2             equ	4043	;# 
   451   000FCB                     MEMCON          equ	4043	;# 
   452   000FCC                     TMR2            equ	4044	;# 
   453   000FCD                     T1CON           equ	4045	;# 
   454   000FCE                     TMR1            equ	4046	;# 
   455   000FCE                     TMR1L           equ	4046	;# 
   456   000FCF                     TMR1H           equ	4047	;# 
   457   000FD0                     RCON            equ	4048	;# 
   458   000FD1                     WDTCON          equ	4049	;# 
   459   000FD2                     HLVDCON         equ	4050	;# 
   460   000FD2                     LVDCON          equ	4050	;# 
   461   000FD3                     OSCCON          equ	4051	;# 
   462   000FD5                     T0CON           equ	4053	;# 
   463   000FD6                     TMR0            equ	4054	;# 
   464   000FD6                     TMR0L           equ	4054	;# 
   465   000FD7                     TMR0H           equ	4055	;# 
   466   000FD8                     STATUS          equ	4056	;# 
   467   000FD9                     FSR2            equ	4057	;# 
   468   000FD9                     FSR2L           equ	4057	;# 
   469   000FDA                     FSR2H           equ	4058	;# 
   470   000FDB                     PLUSW2          equ	4059	;# 
   471   000FDC                     PREINC2         equ	4060	;# 
   472   000FDD                     POSTDEC2        equ	4061	;# 
   473   000FDE                     POSTINC2        equ	4062	;# 
   474   000FDF                     INDF2           equ	4063	;# 
   475   000FE0                     BSR             equ	4064	;# 
   476   000FE1                     FSR1            equ	4065	;# 
   477   000FE1                     FSR1L           equ	4065	;# 
   478   000FE2                     FSR1H           equ	4066	;# 
   479   000FE3                     PLUSW1          equ	4067	;# 
   480   000FE4                     PREINC1         equ	4068	;# 
   481   000FE5                     POSTDEC1        equ	4069	;# 
   482   000FE6                     POSTINC1        equ	4070	;# 
   483   000FE7                     INDF1           equ	4071	;# 
   484   000FE8                     WREG            equ	4072	;# 
   485   000FE9                     FSR0            equ	4073	;# 
   486   000FE9                     FSR0L           equ	4073	;# 
   487   000FEA                     FSR0H           equ	4074	;# 
   488   000FEB                     PLUSW0          equ	4075	;# 
   489   000FEC                     PREINC0         equ	4076	;# 
   490   000FED                     POSTDEC0        equ	4077	;# 
   491   000FEE                     POSTINC0        equ	4078	;# 
   492   000FEF                     INDF0           equ	4079	;# 
   493   000FF0                     INTCON3         equ	4080	;# 
   494   000FF1                     INTCON2         equ	4081	;# 
   495   000FF2                     INTCON          equ	4082	;# 
   496   000FF3                     PROD            equ	4083	;# 
   497   000FF3                     PRODL           equ	4083	;# 
   498   000FF4                     PRODH           equ	4084	;# 
   499   000FF5                     TABLAT          equ	4085	;# 
   500   000FF6                     TBLPTR          equ	4086	;# 
   501   000FF6                     TBLPTRL         equ	4086	;# 
   502   000FF7                     TBLPTRH         equ	4087	;# 
   503   000FF8                     TBLPTRU         equ	4088	;# 
   504   000FF9                     PCLAT           equ	4089	;# 
   505   000FF9                     PC              equ	4089	;# 
   506   000FF9                     PCL             equ	4089	;# 
   507   000FFA                     PCLATH          equ	4090	;# 
   508   000FFB                     PCLATU          equ	4091	;# 
   509   000FFC                     STKPTR          equ	4092	;# 
   510   000FFD                     TOS             equ	4093	;# 
   511   000FFD                     TOSL            equ	4093	;# 
   512   000FFE                     TOSH            equ	4094	;# 
   513   000FFF                     TOSU            equ	4095	;# 
   514   000F77                     SSPMSK          equ	3959	;# 
   515   000F78                     SLRCON          equ	3960	;# 
   516   000F79                     CM2CON1         equ	3961	;# 
   517   000F7A                     CM2CON0         equ	3962	;# 
   518   000F7B                     CM1CON0         equ	3963	;# 
   519   000F7C                     WPUB            equ	3964	;# 
   520   000F7D                     IOCB            equ	3965	;# 
   521   000F7E                     ANSEL           equ	3966	;# 
   522   000F7F                     ANSELH          equ	3967	;# 
   523   000F80                     PORTA           equ	3968	;# 
   524   000F81                     PORTB           equ	3969	;# 
   525   000F82                     PORTC           equ	3970	;# 
   526   000F83                     PORTD           equ	3971	;# 
   527   000F84                     PORTE           equ	3972	;# 
   528   000F89                     LATA            equ	3977	;# 
   529   000F8A                     LATB            equ	3978	;# 
   530   000F8B                     LATC            equ	3979	;# 
   531   000F8C                     LATD            equ	3980	;# 
   532   000F8D                     LATE            equ	3981	;# 
   533   000F92                     TRISA           equ	3986	;# 
   534   000F92                     DDRA            equ	3986	;# 
   535   000F93                     TRISB           equ	3987	;# 
   536   000F93                     DDRB            equ	3987	;# 
   537   000F94                     TRISC           equ	3988	;# 
   538   000F94                     DDRC            equ	3988	;# 
   539   000F95                     TRISD           equ	3989	;# 
   540   000F95                     DDRD            equ	3989	;# 
   541   000F96                     TRISE           equ	3990	;# 
   542   000F96                     DDRE            equ	3990	;# 
   543   000F9B                     OSCTUNE         equ	3995	;# 
   544   000F9D                     PIE1            equ	3997	;# 
   545   000F9E                     PIR1            equ	3998	;# 
   546   000F9F                     IPR1            equ	3999	;# 
   547   000FA0                     PIE2            equ	4000	;# 
   548   000FA1                     PIR2            equ	4001	;# 
   549   000FA2                     IPR2            equ	4002	;# 
   550   000FA6                     EECON1          equ	4006	;# 
   551   000FA7                     EECON2          equ	4007	;# 
   552   000FA8                     EEDATA          equ	4008	;# 
   553   000FA9                     EEADR           equ	4009	;# 
   554   000FAA                     EEADRH          equ	4010	;# 
   555   000FAB                     RCSTA           equ	4011	;# 
   556   000FAB                     RCSTA1          equ	4011	;# 
   557   000FAC                     TXSTA           equ	4012	;# 
   558   000FAC                     TXSTA1          equ	4012	;# 
   559   000FAD                     TXREG           equ	4013	;# 
   560   000FAD                     TXREG1          equ	4013	;# 
   561   000FAE                     RCREG           equ	4014	;# 
   562   000FAE                     RCREG1          equ	4014	;# 
   563   000FAF                     SPBRG           equ	4015	;# 
   564   000FAF                     SPBRG1          equ	4015	;# 
   565   000FB0                     SPBRGH          equ	4016	;# 
   566   000FB1                     T3CON           equ	4017	;# 
   567   000FB2                     TMR3            equ	4018	;# 
   568   000FB2                     TMR3L           equ	4018	;# 
   569   000FB3                     TMR3H           equ	4019	;# 
   570   000FB4                     CVRCON2         equ	4020	;# 
   571   000FB5                     CVRCON          equ	4021	;# 
   572   000FB6                     ECCP1AS         equ	4022	;# 
   573   000FB7                     PWM1CON         equ	4023	;# 
   574   000FB8                     BAUDCON         equ	4024	;# 
   575   000FB8                     BAUDCTL         equ	4024	;# 
   576   000FB9                     PSTRCON         equ	4025	;# 
   577   000FBA                     CCP2CON         equ	4026	;# 
   578   000FBB                     CCPR2           equ	4027	;# 
   579   000FBB                     CCPR2L          equ	4027	;# 
   580   000FBC                     CCPR2H          equ	4028	;# 
   581   000FBD                     CCP1CON         equ	4029	;# 
   582   000FBE                     CCPR1           equ	4030	;# 
   583   000FBE                     CCPR1L          equ	4030	;# 
   584   000FBF                     CCPR1H          equ	4031	;# 
   585   000FC0                     ADCON2          equ	4032	;# 
   586   000FC1                     ADCON1          equ	4033	;# 
   587   000FC2                     ADCON0          equ	4034	;# 
   588   000FC3                     ADRES           equ	4035	;# 
   589   000FC3                     ADRESL          equ	4035	;# 
   590   000FC4                     ADRESH          equ	4036	;# 
   591   000FC5                     SSPCON2         equ	4037	;# 
   592   000FC6                     SSPCON1         equ	4038	;# 
   593   000FC7                     SSPSTAT         equ	4039	;# 
   594   000FC8                     SSPADD          equ	4040	;# 
   595   000FC9                     SSPBUF          equ	4041	;# 
   596   000FCA                     T2CON           equ	4042	;# 
   597   000FCB                     PR2             equ	4043	;# 
   598   000FCB                     MEMCON          equ	4043	;# 
   599   000FCC                     TMR2            equ	4044	;# 
   600   000FCD                     T1CON           equ	4045	;# 
   601   000FCE                     TMR1            equ	4046	;# 
   602   000FCE                     TMR1L           equ	4046	;# 
   603   000FCF                     TMR1H           equ	4047	;# 
   604   000FD0                     RCON            equ	4048	;# 
   605   000FD1                     WDTCON          equ	4049	;# 
   606   000FD2                     HLVDCON         equ	4050	;# 
   607   000FD2                     LVDCON          equ	4050	;# 
   608   000FD3                     OSCCON          equ	4051	;# 
   609   000FD5                     T0CON           equ	4053	;# 
   610   000FD6                     TMR0            equ	4054	;# 
   611   000FD6                     TMR0L           equ	4054	;# 
   612   000FD7                     TMR0H           equ	4055	;# 
   613   000FD8                     STATUS          equ	4056	;# 
   614   000FD9                     FSR2            equ	4057	;# 
   615   000FD9                     FSR2L           equ	4057	;# 
   616   000FDA                     FSR2H           equ	4058	;# 
   617   000FDB                     PLUSW2          equ	4059	;# 
   618   000FDC                     PREINC2         equ	4060	;# 
   619   000FDD                     POSTDEC2        equ	4061	;# 
   620   000FDE                     POSTINC2        equ	4062	;# 
   621   000FDF                     INDF2           equ	4063	;# 
   622   000FE0                     BSR             equ	4064	;# 
   623   000FE1                     FSR1            equ	4065	;# 
   624   000FE1                     FSR1L           equ	4065	;# 
   625   000FE2                     FSR1H           equ	4066	;# 
   626   000FE3                     PLUSW1          equ	4067	;# 
   627   000FE4                     PREINC1         equ	4068	;# 
   628   000FE5                     POSTDEC1        equ	4069	;# 
   629   000FE6                     POSTINC1        equ	4070	;# 
   630   000FE7                     INDF1           equ	4071	;# 
   631   000FE8                     WREG            equ	4072	;# 
   632   000FE9                     FSR0            equ	4073	;# 
   633   000FE9                     FSR0L           equ	4073	;# 
   634   000FEA                     FSR0H           equ	4074	;# 
   635   000FEB                     PLUSW0          equ	4075	;# 
   636   000FEC                     PREINC0         equ	4076	;# 
   637   000FED                     POSTDEC0        equ	4077	;# 
   638   000FEE                     POSTINC0        equ	4078	;# 
   639   000FEF                     INDF0           equ	4079	;# 
   640   000FF0                     INTCON3         equ	4080	;# 
   641   000FF1                     INTCON2         equ	4081	;# 
   642   000FF2                     INTCON          equ	4082	;# 
   643   000FF3                     PROD            equ	4083	;# 
   644   000FF3                     PRODL           equ	4083	;# 
   645   000FF4                     PRODH           equ	4084	;# 
   646   000FF5                     TABLAT          equ	4085	;# 
   647   000FF6                     TBLPTR          equ	4086	;# 
   648   000FF6                     TBLPTRL         equ	4086	;# 
   649   000FF7                     TBLPTRH         equ	4087	;# 
   650   000FF8                     TBLPTRU         equ	4088	;# 
   651   000FF9                     PCLAT           equ	4089	;# 
   652   000FF9                     PC              equ	4089	;# 
   653   000FF9                     PCL             equ	4089	;# 
   654   000FFA                     PCLATH          equ	4090	;# 
   655   000FFB                     PCLATU          equ	4091	;# 
   656   000FFC                     STKPTR          equ	4092	;# 
   657   000FFD                     TOS             equ	4093	;# 
   658   000FFD                     TOSL            equ	4093	;# 
   659   000FFE                     TOSH            equ	4094	;# 
   660   000FFF                     TOSU            equ	4095	;# 
   661   000F77                     SSPMSK          equ	3959	;# 
   662   000F78                     SLRCON          equ	3960	;# 
   663   000F79                     CM2CON1         equ	3961	;# 
   664   000F7A                     CM2CON0         equ	3962	;# 
   665   000F7B                     CM1CON0         equ	3963	;# 
   666   000F7C                     WPUB            equ	3964	;# 
   667   000F7D                     IOCB            equ	3965	;# 
   668   000F7E                     ANSEL           equ	3966	;# 
   669   000F7F                     ANSELH          equ	3967	;# 
   670   000F80                     PORTA           equ	3968	;# 
   671   000F81                     PORTB           equ	3969	;# 
   672   000F82                     PORTC           equ	3970	;# 
   673   000F83                     PORTD           equ	3971	;# 
   674   000F84                     PORTE           equ	3972	;# 
   675   000F89                     LATA            equ	3977	;# 
   676   000F8A                     LATB            equ	3978	;# 
   677   000F8B                     LATC            equ	3979	;# 
   678   000F8C                     LATD            equ	3980	;# 
   679   000F8D                     LATE            equ	3981	;# 
   680   000F92                     TRISA           equ	3986	;# 
   681   000F92                     DDRA            equ	3986	;# 
   682   000F93                     TRISB           equ	3987	;# 
   683   000F93                     DDRB            equ	3987	;# 
   684   000F94                     TRISC           equ	3988	;# 
   685   000F94                     DDRC            equ	3988	;# 
   686   000F95                     TRISD           equ	3989	;# 
   687   000F95                     DDRD            equ	3989	;# 
   688   000F96                     TRISE           equ	3990	;# 
   689   000F96                     DDRE            equ	3990	;# 
   690   000F9B                     OSCTUNE         equ	3995	;# 
   691   000F9D                     PIE1            equ	3997	;# 
   692   000F9E                     PIR1            equ	3998	;# 
   693   000F9F                     IPR1            equ	3999	;# 
   694   000FA0                     PIE2            equ	4000	;# 
   695   000FA1                     PIR2            equ	4001	;# 
   696   000FA2                     IPR2            equ	4002	;# 
   697   000FA6                     EECON1          equ	4006	;# 
   698   000FA7                     EECON2          equ	4007	;# 
   699   000FA8                     EEDATA          equ	4008	;# 
   700   000FA9                     EEADR           equ	4009	;# 
   701   000FAA                     EEADRH          equ	4010	;# 
   702   000FAB                     RCSTA           equ	4011	;# 
   703   000FAB                     RCSTA1          equ	4011	;# 
   704   000FAC                     TXSTA           equ	4012	;# 
   705   000FAC                     TXSTA1          equ	4012	;# 
   706   000FAD                     TXREG           equ	4013	;# 
   707   000FAD                     TXREG1          equ	4013	;# 
   708   000FAE                     RCREG           equ	4014	;# 
   709   000FAE                     RCREG1          equ	4014	;# 
   710   000FAF                     SPBRG           equ	4015	;# 
   711   000FAF                     SPBRG1          equ	4015	;# 
   712   000FB0                     SPBRGH          equ	4016	;# 
   713   000FB1                     T3CON           equ	4017	;# 
   714   000FB2                     TMR3            equ	4018	;# 
   715   000FB2                     TMR3L           equ	4018	;# 
   716   000FB3                     TMR3H           equ	4019	;# 
   717   000FB4                     CVRCON2         equ	4020	;# 
   718   000FB5                     CVRCON          equ	4021	;# 
   719   000FB6                     ECCP1AS         equ	4022	;# 
   720   000FB7                     PWM1CON         equ	4023	;# 
   721   000FB8                     BAUDCON         equ	4024	;# 
   722   000FB8                     BAUDCTL         equ	4024	;# 
   723   000FB9                     PSTRCON         equ	4025	;# 
   724   000FBA                     CCP2CON         equ	4026	;# 
   725   000FBB                     CCPR2           equ	4027	;# 
   726   000FBB                     CCPR2L          equ	4027	;# 
   727   000FBC                     CCPR2H          equ	4028	;# 
   728   000FBD                     CCP1CON         equ	4029	;# 
   729   000FBE                     CCPR1           equ	4030	;# 
   730   000FBE                     CCPR1L          equ	4030	;# 
   731   000FBF                     CCPR1H          equ	4031	;# 
   732   000FC0                     ADCON2          equ	4032	;# 
   733   000FC1                     ADCON1          equ	4033	;# 
   734   000FC2                     ADCON0          equ	4034	;# 
   735   000FC3                     ADRES           equ	4035	;# 
   736   000FC3                     ADRESL          equ	4035	;# 
   737   000FC4                     ADRESH          equ	4036	;# 
   738   000FC5                     SSPCON2         equ	4037	;# 
   739   000FC6                     SSPCON1         equ	4038	;# 
   740   000FC7                     SSPSTAT         equ	4039	;# 
   741   000FC8                     SSPADD          equ	4040	;# 
   742   000FC9                     SSPBUF          equ	4041	;# 
   743   000FCA                     T2CON           equ	4042	;# 
   744   000FCB                     PR2             equ	4043	;# 
   745   000FCB                     MEMCON          equ	4043	;# 
   746   000FCC                     TMR2            equ	4044	;# 
   747   000FCD                     T1CON           equ	4045	;# 
   748   000FCE                     TMR1            equ	4046	;# 
   749   000FCE                     TMR1L           equ	4046	;# 
   750   000FCF                     TMR1H           equ	4047	;# 
   751   000FD0                     RCON            equ	4048	;# 
   752   000FD1                     WDTCON          equ	4049	;# 
   753   000FD2                     HLVDCON         equ	4050	;# 
   754   000FD2                     LVDCON          equ	4050	;# 
   755   000FD3                     OSCCON          equ	4051	;# 
   756   000FD5                     T0CON           equ	4053	;# 
   757   000FD6                     TMR0            equ	4054	;# 
   758   000FD6                     TMR0L           equ	4054	;# 
   759   000FD7                     TMR0H           equ	4055	;# 
   760   000FD8                     STATUS          equ	4056	;# 
   761   000FD9                     FSR2            equ	4057	;# 
   762   000FD9                     FSR2L           equ	4057	;# 
   763   000FDA                     FSR2H           equ	4058	;# 
   764   000FDB                     PLUSW2          equ	4059	;# 
   765   000FDC                     PREINC2         equ	4060	;# 
   766   000FDD                     POSTDEC2        equ	4061	;# 
   767   000FDE                     POSTINC2        equ	4062	;# 
   768   000FDF                     INDF2           equ	4063	;# 
   769   000FE0                     BSR             equ	4064	;# 
   770   000FE1                     FSR1            equ	4065	;# 
   771   000FE1                     FSR1L           equ	4065	;# 
   772   000FE2                     FSR1H           equ	4066	;# 
   773   000FE3                     PLUSW1          equ	4067	;# 
   774   000FE4                     PREINC1         equ	4068	;# 
   775   000FE5                     POSTDEC1        equ	4069	;# 
   776   000FE6                     POSTINC1        equ	4070	;# 
   777   000FE7                     INDF1           equ	4071	;# 
   778   000FE8                     WREG            equ	4072	;# 
   779   000FE9                     FSR0            equ	4073	;# 
   780   000FE9                     FSR0L           equ	4073	;# 
   781   000FEA                     FSR0H           equ	4074	;# 
   782   000FEB                     PLUSW0          equ	4075	;# 
   783   000FEC                     PREINC0         equ	4076	;# 
   784   000FED                     POSTDEC0        equ	4077	;# 
   785   000FEE                     POSTINC0        equ	4078	;# 
   786   000FEF                     INDF0           equ	4079	;# 
   787   000FF0                     INTCON3         equ	4080	;# 
   788   000FF1                     INTCON2         equ	4081	;# 
   789   000FF2                     INTCON          equ	4082	;# 
   790   000FF3                     PROD            equ	4083	;# 
   791   000FF3                     PRODL           equ	4083	;# 
   792   000FF4                     PRODH           equ	4084	;# 
   793   000FF5                     TABLAT          equ	4085	;# 
   794   000FF6                     TBLPTR          equ	4086	;# 
   795   000FF6                     TBLPTRL         equ	4086	;# 
   796   000FF7                     TBLPTRH         equ	4087	;# 
   797   000FF8                     TBLPTRU         equ	4088	;# 
   798   000FF9                     PCLAT           equ	4089	;# 
   799   000FF9                     PC              equ	4089	;# 
   800   000FF9                     PCL             equ	4089	;# 
   801   000FFA                     PCLATH          equ	4090	;# 
   802   000FFB                     PCLATU          equ	4091	;# 
   803   000FFC                     STKPTR          equ	4092	;# 
   804   000FFD                     TOS             equ	4093	;# 
   805   000FFD                     TOSL            equ	4093	;# 
   806   000FFE                     TOSH            equ	4094	;# 
   807   000FFF                     TOSU            equ	4095	;# 
   808   000F77                     SSPMSK          equ	3959	;# 
   809   000F78                     SLRCON          equ	3960	;# 
   810   000F79                     CM2CON1         equ	3961	;# 
   811   000F7A                     CM2CON0         equ	3962	;# 
   812   000F7B                     CM1CON0         equ	3963	;# 
   813   000F7C                     WPUB            equ	3964	;# 
   814   000F7D                     IOCB            equ	3965	;# 
   815   000F7E                     ANSEL           equ	3966	;# 
   816   000F7F                     ANSELH          equ	3967	;# 
   817   000F80                     PORTA           equ	3968	;# 
   818   000F81                     PORTB           equ	3969	;# 
   819   000F82                     PORTC           equ	3970	;# 
   820   000F83                     PORTD           equ	3971	;# 
   821   000F84                     PORTE           equ	3972	;# 
   822   000F89                     LATA            equ	3977	;# 
   823   000F8A                     LATB            equ	3978	;# 
   824   000F8B                     LATC            equ	3979	;# 
   825   000F8C                     LATD            equ	3980	;# 
   826   000F8D                     LATE            equ	3981	;# 
   827   000F92                     TRISA           equ	3986	;# 
   828   000F92                     DDRA            equ	3986	;# 
   829   000F93                     TRISB           equ	3987	;# 
   830   000F93                     DDRB            equ	3987	;# 
   831   000F94                     TRISC           equ	3988	;# 
   832   000F94                     DDRC            equ	3988	;# 
   833   000F95                     TRISD           equ	3989	;# 
   834   000F95                     DDRD            equ	3989	;# 
   835   000F96                     TRISE           equ	3990	;# 
   836   000F96                     DDRE            equ	3990	;# 
   837   000F9B                     OSCTUNE         equ	3995	;# 
   838   000F9D                     PIE1            equ	3997	;# 
   839   000F9E                     PIR1            equ	3998	;# 
   840   000F9F                     IPR1            equ	3999	;# 
   841   000FA0                     PIE2            equ	4000	;# 
   842   000FA1                     PIR2            equ	4001	;# 
   843   000FA2                     IPR2            equ	4002	;# 
   844   000FA6                     EECON1          equ	4006	;# 
   845   000FA7                     EECON2          equ	4007	;# 
   846   000FA8                     EEDATA          equ	4008	;# 
   847   000FA9                     EEADR           equ	4009	;# 
   848   000FAA                     EEADRH          equ	4010	;# 
   849   000FAB                     RCSTA           equ	4011	;# 
   850   000FAB                     RCSTA1          equ	4011	;# 
   851   000FAC                     TXSTA           equ	4012	;# 
   852   000FAC                     TXSTA1          equ	4012	;# 
   853   000FAD                     TXREG           equ	4013	;# 
   854   000FAD                     TXREG1          equ	4013	;# 
   855   000FAE                     RCREG           equ	4014	;# 
   856   000FAE                     RCREG1          equ	4014	;# 
   857   000FAF                     SPBRG           equ	4015	;# 
   858   000FAF                     SPBRG1          equ	4015	;# 
   859   000FB0                     SPBRGH          equ	4016	;# 
   860   000FB1                     T3CON           equ	4017	;# 
   861   000FB2                     TMR3            equ	4018	;# 
   862   000FB2                     TMR3L           equ	4018	;# 
   863   000FB3                     TMR3H           equ	4019	;# 
   864   000FB4                     CVRCON2         equ	4020	;# 
   865   000FB5                     CVRCON          equ	4021	;# 
   866   000FB6                     ECCP1AS         equ	4022	;# 
   867   000FB7                     PWM1CON         equ	4023	;# 
   868   000FB8                     BAUDCON         equ	4024	;# 
   869   000FB8                     BAUDCTL         equ	4024	;# 
   870   000FB9                     PSTRCON         equ	4025	;# 
   871   000FBA                     CCP2CON         equ	4026	;# 
   872   000FBB                     CCPR2           equ	4027	;# 
   873   000FBB                     CCPR2L          equ	4027	;# 
   874   000FBC                     CCPR2H          equ	4028	;# 
   875   000FBD                     CCP1CON         equ	4029	;# 
   876   000FBE                     CCPR1           equ	4030	;# 
   877   000FBE                     CCPR1L          equ	4030	;# 
   878   000FBF                     CCPR1H          equ	4031	;# 
   879   000FC0                     ADCON2          equ	4032	;# 
   880   000FC1                     ADCON1          equ	4033	;# 
   881   000FC2                     ADCON0          equ	4034	;# 
   882   000FC3                     ADRES           equ	4035	;# 
   883   000FC3                     ADRESL          equ	4035	;# 
   884   000FC4                     ADRESH          equ	4036	;# 
   885   000FC5                     SSPCON2         equ	4037	;# 
   886   000FC6                     SSPCON1         equ	4038	;# 
   887   000FC7                     SSPSTAT         equ	4039	;# 
   888   000FC8                     SSPADD          equ	4040	;# 
   889   000FC9                     SSPBUF          equ	4041	;# 
   890   000FCA                     T2CON           equ	4042	;# 
   891   000FCB                     PR2             equ	4043	;# 
   892   000FCB                     MEMCON          equ	4043	;# 
   893   000FCC                     TMR2            equ	4044	;# 
   894   000FCD                     T1CON           equ	4045	;# 
   895   000FCE                     TMR1            equ	4046	;# 
   896   000FCE                     TMR1L           equ	4046	;# 
   897   000FCF                     TMR1H           equ	4047	;# 
   898   000FD0                     RCON            equ	4048	;# 
   899   000FD1                     WDTCON          equ	4049	;# 
   900   000FD2                     HLVDCON         equ	4050	;# 
   901   000FD2                     LVDCON          equ	4050	;# 
   902   000FD3                     OSCCON          equ	4051	;# 
   903   000FD5                     T0CON           equ	4053	;# 
   904   000FD6                     TMR0            equ	4054	;# 
   905   000FD6                     TMR0L           equ	4054	;# 
   906   000FD7                     TMR0H           equ	4055	;# 
   907   000FD8                     STATUS          equ	4056	;# 
   908   000FD9                     FSR2            equ	4057	;# 
   909   000FD9                     FSR2L           equ	4057	;# 
   910   000FDA                     FSR2H           equ	4058	;# 
   911   000FDB                     PLUSW2          equ	4059	;# 
   912   000FDC                     PREINC2         equ	4060	;# 
   913   000FDD                     POSTDEC2        equ	4061	;# 
   914   000FDE                     POSTINC2        equ	4062	;# 
   915   000FDF                     INDF2           equ	4063	;# 
   916   000FE0                     BSR             equ	4064	;# 
   917   000FE1                     FSR1            equ	4065	;# 
   918   000FE1                     FSR1L           equ	4065	;# 
   919   000FE2                     FSR1H           equ	4066	;# 
   920   000FE3                     PLUSW1          equ	4067	;# 
   921   000FE4                     PREINC1         equ	4068	;# 
   922   000FE5                     POSTDEC1        equ	4069	;# 
   923   000FE6                     POSTINC1        equ	4070	;# 
   924   000FE7                     INDF1           equ	4071	;# 
   925   000FE8                     WREG            equ	4072	;# 
   926   000FE9                     FSR0            equ	4073	;# 
   927   000FE9                     FSR0L           equ	4073	;# 
   928   000FEA                     FSR0H           equ	4074	;# 
   929   000FEB                     PLUSW0          equ	4075	;# 
   930   000FEC                     PREINC0         equ	4076	;# 
   931   000FED                     POSTDEC0        equ	4077	;# 
   932   000FEE                     POSTINC0        equ	4078	;# 
   933   000FEF                     INDF0           equ	4079	;# 
   934   000FF0                     INTCON3         equ	4080	;# 
   935   000FF1                     INTCON2         equ	4081	;# 
   936   000FF2                     INTCON          equ	4082	;# 
   937   000FF3                     PROD            equ	4083	;# 
   938   000FF3                     PRODL           equ	4083	;# 
   939   000FF4                     PRODH           equ	4084	;# 
   940   000FF5                     TABLAT          equ	4085	;# 
   941   000FF6                     TBLPTR          equ	4086	;# 
   942   000FF6                     TBLPTRL         equ	4086	;# 
   943   000FF7                     TBLPTRH         equ	4087	;# 
   944   000FF8                     TBLPTRU         equ	4088	;# 
   945   000FF9                     PCLAT           equ	4089	;# 
   946   000FF9                     PC              equ	4089	;# 
   947   000FF9                     PCL             equ	4089	;# 
   948   000FFA                     PCLATH          equ	4090	;# 
   949   000FFB                     PCLATU          equ	4091	;# 
   950   000FFC                     STKPTR          equ	4092	;# 
   951   000FFD                     TOS             equ	4093	;# 
   952   000FFD                     TOSL            equ	4093	;# 
   953   000FFE                     TOSH            equ	4094	;# 
   954   000FFF                     TOSU            equ	4095	;# 
   955   000F77                     SSPMSK          equ	3959	;# 
   956   000F78                     SLRCON          equ	3960	;# 
   957   000F79                     CM2CON1         equ	3961	;# 
   958   000F7A                     CM2CON0         equ	3962	;# 
   959   000F7B                     CM1CON0         equ	3963	;# 
   960   000F7C                     WPUB            equ	3964	;# 
   961   000F7D                     IOCB            equ	3965	;# 
   962   000F7E                     ANSEL           equ	3966	;# 
   963   000F7F                     ANSELH          equ	3967	;# 
   964   000F80                     PORTA           equ	3968	;# 
   965   000F81                     PORTB           equ	3969	;# 
   966   000F82                     PORTC           equ	3970	;# 
   967   000F83                     PORTD           equ	3971	;# 
   968   000F84                     PORTE           equ	3972	;# 
   969   000F89                     LATA            equ	3977	;# 
   970   000F8A                     LATB            equ	3978	;# 
   971   000F8B                     LATC            equ	3979	;# 
   972   000F8C                     LATD            equ	3980	;# 
   973   000F8D                     LATE            equ	3981	;# 
   974   000F92                     TRISA           equ	3986	;# 
   975   000F92                     DDRA            equ	3986	;# 
   976   000F93                     TRISB           equ	3987	;# 
   977   000F93                     DDRB            equ	3987	;# 
   978   000F94                     TRISC           equ	3988	;# 
   979   000F94                     DDRC            equ	3988	;# 
   980   000F95                     TRISD           equ	3989	;# 
   981   000F95                     DDRD            equ	3989	;# 
   982   000F96                     TRISE           equ	3990	;# 
   983   000F96                     DDRE            equ	3990	;# 
   984   000F9B                     OSCTUNE         equ	3995	;# 
   985   000F9D                     PIE1            equ	3997	;# 
   986   000F9E                     PIR1            equ	3998	;# 
   987   000F9F                     IPR1            equ	3999	;# 
   988   000FA0                     PIE2            equ	4000	;# 
   989   000FA1                     PIR2            equ	4001	;# 
   990   000FA2                     IPR2            equ	4002	;# 
   991   000FA6                     EECON1          equ	4006	;# 
   992   000FA7                     EECON2          equ	4007	;# 
   993   000FA8                     EEDATA          equ	4008	;# 
   994   000FA9                     EEADR           equ	4009	;# 
   995   000FAA                     EEADRH          equ	4010	;# 
   996   000FAB                     RCSTA           equ	4011	;# 
   997   000FAB                     RCSTA1          equ	4011	;# 
   998   000FAC                     TXSTA           equ	4012	;# 
   999   000FAC                     TXSTA1          equ	4012	;# 
  1000   000FAD                     TXREG           equ	4013	;# 
  1001   000FAD                     TXREG1          equ	4013	;# 
  1002   000FAE                     RCREG           equ	4014	;# 
  1003   000FAE                     RCREG1          equ	4014	;# 
  1004   000FAF                     SPBRG           equ	4015	;# 
  1005   000FAF                     SPBRG1          equ	4015	;# 
  1006   000FB0                     SPBRGH          equ	4016	;# 
  1007   000FB1                     T3CON           equ	4017	;# 
  1008   000FB2                     TMR3            equ	4018	;# 
  1009   000FB2                     TMR3L           equ	4018	;# 
  1010   000FB3                     TMR3H           equ	4019	;# 
  1011   000FB4                     CVRCON2         equ	4020	;# 
  1012   000FB5                     CVRCON          equ	4021	;# 
  1013   000FB6                     ECCP1AS         equ	4022	;# 
  1014   000FB7                     PWM1CON         equ	4023	;# 
  1015   000FB8                     BAUDCON         equ	4024	;# 
  1016   000FB8                     BAUDCTL         equ	4024	;# 
  1017   000FB9                     PSTRCON         equ	4025	;# 
  1018   000FBA                     CCP2CON         equ	4026	;# 
  1019   000FBB                     CCPR2           equ	4027	;# 
  1020   000FBB                     CCPR2L          equ	4027	;# 
  1021   000FBC                     CCPR2H          equ	4028	;# 
  1022   000FBD                     CCP1CON         equ	4029	;# 
  1023   000FBE                     CCPR1           equ	4030	;# 
  1024   000FBE                     CCPR1L          equ	4030	;# 
  1025   000FBF                     CCPR1H          equ	4031	;# 
  1026   000FC0                     ADCON2          equ	4032	;# 
  1027   000FC1                     ADCON1          equ	4033	;# 
  1028   000FC2                     ADCON0          equ	4034	;# 
  1029   000FC3                     ADRES           equ	4035	;# 
  1030   000FC3                     ADRESL          equ	4035	;# 
  1031   000FC4                     ADRESH          equ	4036	;# 
  1032   000FC5                     SSPCON2         equ	4037	;# 
  1033   000FC6                     SSPCON1         equ	4038	;# 
  1034   000FC7                     SSPSTAT         equ	4039	;# 
  1035   000FC8                     SSPADD          equ	4040	;# 
  1036   000FC9                     SSPBUF          equ	4041	;# 
  1037   000FCA                     T2CON           equ	4042	;# 
  1038   000FCB                     PR2             equ	4043	;# 
  1039   000FCB                     MEMCON          equ	4043	;# 
  1040   000FCC                     TMR2            equ	4044	;# 
  1041   000FCD                     T1CON           equ	4045	;# 
  1042   000FCE                     TMR1            equ	4046	;# 
  1043   000FCE                     TMR1L           equ	4046	;# 
  1044   000FCF                     TMR1H           equ	4047	;# 
  1045   000FD0                     RCON            equ	4048	;# 
  1046   000FD1                     WDTCON          equ	4049	;# 
  1047   000FD2                     HLVDCON         equ	4050	;# 
  1048   000FD2                     LVDCON          equ	4050	;# 
  1049   000FD3                     OSCCON          equ	4051	;# 
  1050   000FD5                     T0CON           equ	4053	;# 
  1051   000FD6                     TMR0            equ	4054	;# 
  1052   000FD6                     TMR0L           equ	4054	;# 
  1053   000FD7                     TMR0H           equ	4055	;# 
  1054   000FD8                     STATUS          equ	4056	;# 
  1055   000FD9                     FSR2            equ	4057	;# 
  1056   000FD9                     FSR2L           equ	4057	;# 
  1057   000FDA                     FSR2H           equ	4058	;# 
  1058   000FDB                     PLUSW2          equ	4059	;# 
  1059   000FDC                     PREINC2         equ	4060	;# 
  1060   000FDD                     POSTDEC2        equ	4061	;# 
  1061   000FDE                     POSTINC2        equ	4062	;# 
  1062   000FDF                     INDF2           equ	4063	;# 
  1063   000FE0                     BSR             equ	4064	;# 
  1064   000FE1                     FSR1            equ	4065	;# 
  1065   000FE1                     FSR1L           equ	4065	;# 
  1066   000FE2                     FSR1H           equ	4066	;# 
  1067   000FE3                     PLUSW1          equ	4067	;# 
  1068   000FE4                     PREINC1         equ	4068	;# 
  1069   000FE5                     POSTDEC1        equ	4069	;# 
  1070   000FE6                     POSTINC1        equ	4070	;# 
  1071   000FE7                     INDF1           equ	4071	;# 
  1072   000FE8                     WREG            equ	4072	;# 
  1073   000FE9                     FSR0            equ	4073	;# 
  1074   000FE9                     FSR0L           equ	4073	;# 
  1075   000FEA                     FSR0H           equ	4074	;# 
  1076   000FEB                     PLUSW0          equ	4075	;# 
  1077   000FEC                     PREINC0         equ	4076	;# 
  1078   000FED                     POSTDEC0        equ	4077	;# 
  1079   000FEE                     POSTINC0        equ	4078	;# 
  1080   000FEF                     INDF0           equ	4079	;# 
  1081   000FF0                     INTCON3         equ	4080	;# 
  1082   000FF1                     INTCON2         equ	4081	;# 
  1083   000FF2                     INTCON          equ	4082	;# 
  1084   000FF3                     PROD            equ	4083	;# 
  1085   000FF3                     PRODL           equ	4083	;# 
  1086   000FF4                     PRODH           equ	4084	;# 
  1087   000FF5                     TABLAT          equ	4085	;# 
  1088   000FF6                     TBLPTR          equ	4086	;# 
  1089   000FF6                     TBLPTRL         equ	4086	;# 
  1090   000FF7                     TBLPTRH         equ	4087	;# 
  1091   000FF8                     TBLPTRU         equ	4088	;# 
  1092   000FF9                     PCLAT           equ	4089	;# 
  1093   000FF9                     PC              equ	4089	;# 
  1094   000FF9                     PCL             equ	4089	;# 
  1095   000FFA                     PCLATH          equ	4090	;# 
  1096   000FFB                     PCLATU          equ	4091	;# 
  1097   000FFC                     STKPTR          equ	4092	;# 
  1098   000FFD                     TOS             equ	4093	;# 
  1099   000FFD                     TOSL            equ	4093	;# 
  1100   000FFE                     TOSH            equ	4094	;# 
  1101   000FFF                     TOSU            equ	4095	;# 
  1102   000F77                     SSPMSK          equ	3959	;# 
  1103   000F78                     SLRCON          equ	3960	;# 
  1104   000F79                     CM2CON1         equ	3961	;# 
  1105   000F7A                     CM2CON0         equ	3962	;# 
  1106   000F7B                     CM1CON0         equ	3963	;# 
  1107   000F7C                     WPUB            equ	3964	;# 
  1108   000F7D                     IOCB            equ	3965	;# 
  1109   000F7E                     ANSEL           equ	3966	;# 
  1110   000F7F                     ANSELH          equ	3967	;# 
  1111   000F80                     PORTA           equ	3968	;# 
  1112   000F81                     PORTB           equ	3969	;# 
  1113   000F82                     PORTC           equ	3970	;# 
  1114   000F83                     PORTD           equ	3971	;# 
  1115   000F84                     PORTE           equ	3972	;# 
  1116   000F89                     LATA            equ	3977	;# 
  1117   000F8A                     LATB            equ	3978	;# 
  1118   000F8B                     LATC            equ	3979	;# 
  1119   000F8C                     LATD            equ	3980	;# 
  1120   000F8D                     LATE            equ	3981	;# 
  1121   000F92                     TRISA           equ	3986	;# 
  1122   000F92                     DDRA            equ	3986	;# 
  1123   000F93                     TRISB           equ	3987	;# 
  1124   000F93                     DDRB            equ	3987	;# 
  1125   000F94                     TRISC           equ	3988	;# 
  1126   000F94                     DDRC            equ	3988	;# 
  1127   000F95                     TRISD           equ	3989	;# 
  1128   000F95                     DDRD            equ	3989	;# 
  1129   000F96                     TRISE           equ	3990	;# 
  1130   000F96                     DDRE            equ	3990	;# 
  1131   000F9B                     OSCTUNE         equ	3995	;# 
  1132   000F9D                     PIE1            equ	3997	;# 
  1133   000F9E                     PIR1            equ	3998	;# 
  1134   000F9F                     IPR1            equ	3999	;# 
  1135   000FA0                     PIE2            equ	4000	;# 
  1136   000FA1                     PIR2            equ	4001	;# 
  1137   000FA2                     IPR2            equ	4002	;# 
  1138   000FA6                     EECON1          equ	4006	;# 
  1139   000FA7                     EECON2          equ	4007	;# 
  1140   000FA8                     EEDATA          equ	4008	;# 
  1141   000FA9                     EEADR           equ	4009	;# 
  1142   000FAA                     EEADRH          equ	4010	;# 
  1143   000FAB                     RCSTA           equ	4011	;# 
  1144   000FAB                     RCSTA1          equ	4011	;# 
  1145   000FAC                     TXSTA           equ	4012	;# 
  1146   000FAC                     TXSTA1          equ	4012	;# 
  1147   000FAD                     TXREG           equ	4013	;# 
  1148   000FAD                     TXREG1          equ	4013	;# 
  1149   000FAE                     RCREG           equ	4014	;# 
  1150   000FAE                     RCREG1          equ	4014	;# 
  1151   000FAF                     SPBRG           equ	4015	;# 
  1152   000FAF                     SPBRG1          equ	4015	;# 
  1153   000FB0                     SPBRGH          equ	4016	;# 
  1154   000FB1                     T3CON           equ	4017	;# 
  1155   000FB2                     TMR3            equ	4018	;# 
  1156   000FB2                     TMR3L           equ	4018	;# 
  1157   000FB3                     TMR3H           equ	4019	;# 
  1158   000FB4                     CVRCON2         equ	4020	;# 
  1159   000FB5                     CVRCON          equ	4021	;# 
  1160   000FB6                     ECCP1AS         equ	4022	;# 
  1161   000FB7                     PWM1CON         equ	4023	;# 
  1162   000FB8                     BAUDCON         equ	4024	;# 
  1163   000FB8                     BAUDCTL         equ	4024	;# 
  1164   000FB9                     PSTRCON         equ	4025	;# 
  1165   000FBA                     CCP2CON         equ	4026	;# 
  1166   000FBB                     CCPR2           equ	4027	;# 
  1167   000FBB                     CCPR2L          equ	4027	;# 
  1168   000FBC                     CCPR2H          equ	4028	;# 
  1169   000FBD                     CCP1CON         equ	4029	;# 
  1170   000FBE                     CCPR1           equ	4030	;# 
  1171   000FBE                     CCPR1L          equ	4030	;# 
  1172   000FBF                     CCPR1H          equ	4031	;# 
  1173   000FC0                     ADCON2          equ	4032	;# 
  1174   000FC1                     ADCON1          equ	4033	;# 
  1175   000FC2                     ADCON0          equ	4034	;# 
  1176   000FC3                     ADRES           equ	4035	;# 
  1177   000FC3                     ADRESL          equ	4035	;# 
  1178   000FC4                     ADRESH          equ	4036	;# 
  1179   000FC5                     SSPCON2         equ	4037	;# 
  1180   000FC6                     SSPCON1         equ	4038	;# 
  1181   000FC7                     SSPSTAT         equ	4039	;# 
  1182   000FC8                     SSPADD          equ	4040	;# 
  1183   000FC9                     SSPBUF          equ	4041	;# 
  1184   000FCA                     T2CON           equ	4042	;# 
  1185   000FCB                     PR2             equ	4043	;# 
  1186   000FCB                     MEMCON          equ	4043	;# 
  1187   000FCC                     TMR2            equ	4044	;# 
  1188   000FCD                     T1CON           equ	4045	;# 
  1189   000FCE                     TMR1            equ	4046	;# 
  1190   000FCE                     TMR1L           equ	4046	;# 
  1191   000FCF                     TMR1H           equ	4047	;# 
  1192   000FD0                     RCON            equ	4048	;# 
  1193   000FD1                     WDTCON          equ	4049	;# 
  1194   000FD2                     HLVDCON         equ	4050	;# 
  1195   000FD2                     LVDCON          equ	4050	;# 
  1196   000FD3                     OSCCON          equ	4051	;# 
  1197   000FD5                     T0CON           equ	4053	;# 
  1198   000FD6                     TMR0            equ	4054	;# 
  1199   000FD6                     TMR0L           equ	4054	;# 
  1200   000FD7                     TMR0H           equ	4055	;# 
  1201   000FD8                     STATUS          equ	4056	;# 
  1202   000FD9                     FSR2            equ	4057	;# 
  1203   000FD9                     FSR2L           equ	4057	;# 
  1204   000FDA                     FSR2H           equ	4058	;# 
  1205   000FDB                     PLUSW2          equ	4059	;# 
  1206   000FDC                     PREINC2         equ	4060	;# 
  1207   000FDD                     POSTDEC2        equ	4061	;# 
  1208   000FDE                     POSTINC2        equ	4062	;# 
  1209   000FDF                     INDF2           equ	4063	;# 
  1210   000FE0                     BSR             equ	4064	;# 
  1211   000FE1                     FSR1            equ	4065	;# 
  1212   000FE1                     FSR1L           equ	4065	;# 
  1213   000FE2                     FSR1H           equ	4066	;# 
  1214   000FE3                     PLUSW1          equ	4067	;# 
  1215   000FE4                     PREINC1         equ	4068	;# 
  1216   000FE5                     POSTDEC1        equ	4069	;# 
  1217   000FE6                     POSTINC1        equ	4070	;# 
  1218   000FE7                     INDF1           equ	4071	;# 
  1219   000FE8                     WREG            equ	4072	;# 
  1220   000FE9                     FSR0            equ	4073	;# 
  1221   000FE9                     FSR0L           equ	4073	;# 
  1222   000FEA                     FSR0H           equ	4074	;# 
  1223   000FEB                     PLUSW0          equ	4075	;# 
  1224   000FEC                     PREINC0         equ	4076	;# 
  1225   000FED                     POSTDEC0        equ	4077	;# 
  1226   000FEE                     POSTINC0        equ	4078	;# 
  1227   000FEF                     INDF0           equ	4079	;# 
  1228   000FF0                     INTCON3         equ	4080	;# 
  1229   000FF1                     INTCON2         equ	4081	;# 
  1230   000FF2                     INTCON          equ	4082	;# 
  1231   000FF3                     PROD            equ	4083	;# 
  1232   000FF3                     PRODL           equ	4083	;# 
  1233   000FF4                     PRODH           equ	4084	;# 
  1234   000FF5                     TABLAT          equ	4085	;# 
  1235   000FF6                     TBLPTR          equ	4086	;# 
  1236   000FF6                     TBLPTRL         equ	4086	;# 
  1237   000FF7                     TBLPTRH         equ	4087	;# 
  1238   000FF8                     TBLPTRU         equ	4088	;# 
  1239   000FF9                     PCLAT           equ	4089	;# 
  1240   000FF9                     PC              equ	4089	;# 
  1241   000FF9                     PCL             equ	4089	;# 
  1242   000FFA                     PCLATH          equ	4090	;# 
  1243   000FFB                     PCLATU          equ	4091	;# 
  1244   000FFC                     STKPTR          equ	4092	;# 
  1245   000FFD                     TOS             equ	4093	;# 
  1246   000FFD                     TOSL            equ	4093	;# 
  1247   000FFE                     TOSH            equ	4094	;# 
  1248   000FFF                     TOSU            equ	4095	;# 
  1249   000F77                     SSPMSK          equ	3959	;# 
  1250   000F78                     SLRCON          equ	3960	;# 
  1251   000F79                     CM2CON1         equ	3961	;# 
  1252   000F7A                     CM2CON0         equ	3962	;# 
  1253   000F7B                     CM1CON0         equ	3963	;# 
  1254   000F7C                     WPUB            equ	3964	;# 
  1255   000F7D                     IOCB            equ	3965	;# 
  1256   000F7E                     ANSEL           equ	3966	;# 
  1257   000F7F                     ANSELH          equ	3967	;# 
  1258   000F80                     PORTA           equ	3968	;# 
  1259   000F81                     PORTB           equ	3969	;# 
  1260   000F82                     PORTC           equ	3970	;# 
  1261   000F83                     PORTD           equ	3971	;# 
  1262   000F84                     PORTE           equ	3972	;# 
  1263   000F89                     LATA            equ	3977	;# 
  1264   000F8A                     LATB            equ	3978	;# 
  1265   000F8B                     LATC            equ	3979	;# 
  1266   000F8C                     LATD            equ	3980	;# 
  1267   000F8D                     LATE            equ	3981	;# 
  1268   000F92                     TRISA           equ	3986	;# 
  1269   000F92                     DDRA            equ	3986	;# 
  1270   000F93                     TRISB           equ	3987	;# 
  1271   000F93                     DDRB            equ	3987	;# 
  1272   000F94                     TRISC           equ	3988	;# 
  1273   000F94                     DDRC            equ	3988	;# 
  1274   000F95                     TRISD           equ	3989	;# 
  1275   000F95                     DDRD            equ	3989	;# 
  1276   000F96                     TRISE           equ	3990	;# 
  1277   000F96                     DDRE            equ	3990	;# 
  1278   000F9B                     OSCTUNE         equ	3995	;# 
  1279   000F9D                     PIE1            equ	3997	;# 
  1280   000F9E                     PIR1            equ	3998	;# 
  1281   000F9F                     IPR1            equ	3999	;# 
  1282   000FA0                     PIE2            equ	4000	;# 
  1283   000FA1                     PIR2            equ	4001	;# 
  1284   000FA2                     IPR2            equ	4002	;# 
  1285   000FA6                     EECON1          equ	4006	;# 
  1286   000FA7                     EECON2          equ	4007	;# 
  1287   000FA8                     EEDATA          equ	4008	;# 
  1288   000FA9                     EEADR           equ	4009	;# 
  1289   000FAA                     EEADRH          equ	4010	;# 
  1290   000FAB                     RCSTA           equ	4011	;# 
  1291   000FAB                     RCSTA1          equ	4011	;# 
  1292   000FAC                     TXSTA           equ	4012	;# 
  1293   000FAC                     TXSTA1          equ	4012	;# 
  1294   000FAD                     TXREG           equ	4013	;# 
  1295   000FAD                     TXREG1          equ	4013	;# 
  1296   000FAE                     RCREG           equ	4014	;# 
  1297   000FAE                     RCREG1          equ	4014	;# 
  1298   000FAF                     SPBRG           equ	4015	;# 
  1299   000FAF                     SPBRG1          equ	4015	;# 
  1300   000FB0                     SPBRGH          equ	4016	;# 
  1301   000FB1                     T3CON           equ	4017	;# 
  1302   000FB2                     TMR3            equ	4018	;# 
  1303   000FB2                     TMR3L           equ	4018	;# 
  1304   000FB3                     TMR3H           equ	4019	;# 
  1305   000FB4                     CVRCON2         equ	4020	;# 
  1306   000FB5                     CVRCON          equ	4021	;# 
  1307   000FB6                     ECCP1AS         equ	4022	;# 
  1308   000FB7                     PWM1CON         equ	4023	;# 
  1309   000FB8                     BAUDCON         equ	4024	;# 
  1310   000FB8                     BAUDCTL         equ	4024	;# 
  1311   000FB9                     PSTRCON         equ	4025	;# 
  1312   000FBA                     CCP2CON         equ	4026	;# 
  1313   000FBB                     CCPR2           equ	4027	;# 
  1314   000FBB                     CCPR2L          equ	4027	;# 
  1315   000FBC                     CCPR2H          equ	4028	;# 
  1316   000FBD                     CCP1CON         equ	4029	;# 
  1317   000FBE                     CCPR1           equ	4030	;# 
  1318   000FBE                     CCPR1L          equ	4030	;# 
  1319   000FBF                     CCPR1H          equ	4031	;# 
  1320   000FC0                     ADCON2          equ	4032	;# 
  1321   000FC1                     ADCON1          equ	4033	;# 
  1322   000FC2                     ADCON0          equ	4034	;# 
  1323   000FC3                     ADRES           equ	4035	;# 
  1324   000FC3                     ADRESL          equ	4035	;# 
  1325   000FC4                     ADRESH          equ	4036	;# 
  1326   000FC5                     SSPCON2         equ	4037	;# 
  1327   000FC6                     SSPCON1         equ	4038	;# 
  1328   000FC7                     SSPSTAT         equ	4039	;# 
  1329   000FC8                     SSPADD          equ	4040	;# 
  1330   000FC9                     SSPBUF          equ	4041	;# 
  1331   000FCA                     T2CON           equ	4042	;# 
  1332   000FCB                     PR2             equ	4043	;# 
  1333   000FCB                     MEMCON          equ	4043	;# 
  1334   000FCC                     TMR2            equ	4044	;# 
  1335   000FCD                     T1CON           equ	4045	;# 
  1336   000FCE                     TMR1            equ	4046	;# 
  1337   000FCE                     TMR1L           equ	4046	;# 
  1338   000FCF                     TMR1H           equ	4047	;# 
  1339   000FD0                     RCON            equ	4048	;# 
  1340   000FD1                     WDTCON          equ	4049	;# 
  1341   000FD2                     HLVDCON         equ	4050	;# 
  1342   000FD2                     LVDCON          equ	4050	;# 
  1343   000FD3                     OSCCON          equ	4051	;# 
  1344   000FD5                     T0CON           equ	4053	;# 
  1345   000FD6                     TMR0            equ	4054	;# 
  1346   000FD6                     TMR0L           equ	4054	;# 
  1347   000FD7                     TMR0H           equ	4055	;# 
  1348   000FD8                     STATUS          equ	4056	;# 
  1349   000FD9                     FSR2            equ	4057	;# 
  1350   000FD9                     FSR2L           equ	4057	;# 
  1351   000FDA                     FSR2H           equ	4058	;# 
  1352   000FDB                     PLUSW2          equ	4059	;# 
  1353   000FDC                     PREINC2         equ	4060	;# 
  1354   000FDD                     POSTDEC2        equ	4061	;# 
  1355   000FDE                     POSTINC2        equ	4062	;# 
  1356   000FDF                     INDF2           equ	4063	;# 
  1357   000FE0                     BSR             equ	4064	;# 
  1358   000FE1                     FSR1            equ	4065	;# 
  1359   000FE1                     FSR1L           equ	4065	;# 
  1360   000FE2                     FSR1H           equ	4066	;# 
  1361   000FE3                     PLUSW1          equ	4067	;# 
  1362   000FE4                     PREINC1         equ	4068	;# 
  1363   000FE5                     POSTDEC1        equ	4069	;# 
  1364   000FE6                     POSTINC1        equ	4070	;# 
  1365   000FE7                     INDF1           equ	4071	;# 
  1366   000FE8                     WREG            equ	4072	;# 
  1367   000FE9                     FSR0            equ	4073	;# 
  1368   000FE9                     FSR0L           equ	4073	;# 
  1369   000FEA                     FSR0H           equ	4074	;# 
  1370   000FEB                     PLUSW0          equ	4075	;# 
  1371   000FEC                     PREINC0         equ	4076	;# 
  1372   000FED                     POSTDEC0        equ	4077	;# 
  1373   000FEE                     POSTINC0        equ	4078	;# 
  1374   000FEF                     INDF0           equ	4079	;# 
  1375   000FF0                     INTCON3         equ	4080	;# 
  1376   000FF1                     INTCON2         equ	4081	;# 
  1377   000FF2                     INTCON          equ	4082	;# 
  1378   000FF3                     PROD            equ	4083	;# 
  1379   000FF3                     PRODL           equ	4083	;# 
  1380   000FF4                     PRODH           equ	4084	;# 
  1381   000FF5                     TABLAT          equ	4085	;# 
  1382   000FF6                     TBLPTR          equ	4086	;# 
  1383   000FF6                     TBLPTRL         equ	4086	;# 
  1384   000FF7                     TBLPTRH         equ	4087	;# 
  1385   000FF8                     TBLPTRU         equ	4088	;# 
  1386   000FF9                     PCLAT           equ	4089	;# 
  1387   000FF9                     PC              equ	4089	;# 
  1388   000FF9                     PCL             equ	4089	;# 
  1389   000FFA                     PCLATH          equ	4090	;# 
  1390   000FFB                     PCLATU          equ	4091	;# 
  1391   000FFC                     STKPTR          equ	4092	;# 
  1392   000FFD                     TOS             equ	4093	;# 
  1393   000FFD                     TOSL            equ	4093	;# 
  1394   000FFE                     TOSH            equ	4094	;# 
  1395   000FFF                     TOSU            equ	4095	;# 
  1396   000F77                     SSPMSK          equ	3959	;# 
  1397   000F78                     SLRCON          equ	3960	;# 
  1398   000F79                     CM2CON1         equ	3961	;# 
  1399   000F7A                     CM2CON0         equ	3962	;# 
  1400   000F7B                     CM1CON0         equ	3963	;# 
  1401   000F7C                     WPUB            equ	3964	;# 
  1402   000F7D                     IOCB            equ	3965	;# 
  1403   000F7E                     ANSEL           equ	3966	;# 
  1404   000F7F                     ANSELH          equ	3967	;# 
  1405   000F80                     PORTA           equ	3968	;# 
  1406   000F81                     PORTB           equ	3969	;# 
  1407   000F82                     PORTC           equ	3970	;# 
  1408   000F83                     PORTD           equ	3971	;# 
  1409   000F84                     PORTE           equ	3972	;# 
  1410   000F89                     LATA            equ	3977	;# 
  1411   000F8A                     LATB            equ	3978	;# 
  1412   000F8B                     LATC            equ	3979	;# 
  1413   000F8C                     LATD            equ	3980	;# 
  1414   000F8D                     LATE            equ	3981	;# 
  1415   000F92                     TRISA           equ	3986	;# 
  1416   000F92                     DDRA            equ	3986	;# 
  1417   000F93                     TRISB           equ	3987	;# 
  1418   000F93                     DDRB            equ	3987	;# 
  1419   000F94                     TRISC           equ	3988	;# 
  1420   000F94                     DDRC            equ	3988	;# 
  1421   000F95                     TRISD           equ	3989	;# 
  1422   000F95                     DDRD            equ	3989	;# 
  1423   000F96                     TRISE           equ	3990	;# 
  1424   000F96                     DDRE            equ	3990	;# 
  1425   000F9B                     OSCTUNE         equ	3995	;# 
  1426   000F9D                     PIE1            equ	3997	;# 
  1427   000F9E                     PIR1            equ	3998	;# 
  1428   000F9F                     IPR1            equ	3999	;# 
  1429   000FA0                     PIE2            equ	4000	;# 
  1430   000FA1                     PIR2            equ	4001	;# 
  1431   000FA2                     IPR2            equ	4002	;# 
  1432   000FA6                     EECON1          equ	4006	;# 
  1433   000FA7                     EECON2          equ	4007	;# 
  1434   000FA8                     EEDATA          equ	4008	;# 
  1435   000FA9                     EEADR           equ	4009	;# 
  1436   000FAA                     EEADRH          equ	4010	;# 
  1437   000FAB                     RCSTA           equ	4011	;# 
  1438   000FAB                     RCSTA1          equ	4011	;# 
  1439   000FAC                     TXSTA           equ	4012	;# 
  1440   000FAC                     TXSTA1          equ	4012	;# 
  1441   000FAD                     TXREG           equ	4013	;# 
  1442   000FAD                     TXREG1          equ	4013	;# 
  1443   000FAE                     RCREG           equ	4014	;# 
  1444   000FAE                     RCREG1          equ	4014	;# 
  1445   000FAF                     SPBRG           equ	4015	;# 
  1446   000FAF                     SPBRG1          equ	4015	;# 
  1447   000FB0                     SPBRGH          equ	4016	;# 
  1448   000FB1                     T3CON           equ	4017	;# 
  1449   000FB2                     TMR3            equ	4018	;# 
  1450   000FB2                     TMR3L           equ	4018	;# 
  1451   000FB3                     TMR3H           equ	4019	;# 
  1452   000FB4                     CVRCON2         equ	4020	;# 
  1453   000FB5                     CVRCON          equ	4021	;# 
  1454   000FB6                     ECCP1AS         equ	4022	;# 
  1455   000FB7                     PWM1CON         equ	4023	;# 
  1456   000FB8                     BAUDCON         equ	4024	;# 
  1457   000FB8                     BAUDCTL         equ	4024	;# 
  1458   000FB9                     PSTRCON         equ	4025	;# 
  1459   000FBA                     CCP2CON         equ	4026	;# 
  1460   000FBB                     CCPR2           equ	4027	;# 
  1461   000FBB                     CCPR2L          equ	4027	;# 
  1462   000FBC                     CCPR2H          equ	4028	;# 
  1463   000FBD                     CCP1CON         equ	4029	;# 
  1464   000FBE                     CCPR1           equ	4030	;# 
  1465   000FBE                     CCPR1L          equ	4030	;# 
  1466   000FBF                     CCPR1H          equ	4031	;# 
  1467   000FC0                     ADCON2          equ	4032	;# 
  1468   000FC1                     ADCON1          equ	4033	;# 
  1469   000FC2                     ADCON0          equ	4034	;# 
  1470   000FC3                     ADRES           equ	4035	;# 
  1471   000FC3                     ADRESL          equ	4035	;# 
  1472   000FC4                     ADRESH          equ	4036	;# 
  1473   000FC5                     SSPCON2         equ	4037	;# 
  1474   000FC6                     SSPCON1         equ	4038	;# 
  1475   000FC7                     SSPSTAT         equ	4039	;# 
  1476   000FC8                     SSPADD          equ	4040	;# 
  1477   000FC9                     SSPBUF          equ	4041	;# 
  1478   000FCA                     T2CON           equ	4042	;# 
  1479   000FCB                     PR2             equ	4043	;# 
  1480   000FCB                     MEMCON          equ	4043	;# 
  1481   000FCC                     TMR2            equ	4044	;# 
  1482   000FCD                     T1CON           equ	4045	;# 
  1483   000FCE                     TMR1            equ	4046	;# 
  1484   000FCE                     TMR1L           equ	4046	;# 
  1485   000FCF                     TMR1H           equ	4047	;# 
  1486   000FD0                     RCON            equ	4048	;# 
  1487   000FD1                     WDTCON          equ	4049	;# 
  1488   000FD2                     HLVDCON         equ	4050	;# 
  1489   000FD2                     LVDCON          equ	4050	;# 
  1490   000FD3                     OSCCON          equ	4051	;# 
  1491   000FD5                     T0CON           equ	4053	;# 
  1492   000FD6                     TMR0            equ	4054	;# 
  1493   000FD6                     TMR0L           equ	4054	;# 
  1494   000FD7                     TMR0H           equ	4055	;# 
  1495   000FD8                     STATUS          equ	4056	;# 
  1496   000FD9                     FSR2            equ	4057	;# 
  1497   000FD9                     FSR2L           equ	4057	;# 
  1498   000FDA                     FSR2H           equ	4058	;# 
  1499   000FDB                     PLUSW2          equ	4059	;# 
  1500   000FDC                     PREINC2         equ	4060	;# 
  1501   000FDD                     POSTDEC2        equ	4061	;# 
  1502   000FDE                     POSTINC2        equ	4062	;# 
  1503   000FDF                     INDF2           equ	4063	;# 
  1504   000FE0                     BSR             equ	4064	;# 
  1505   000FE1                     FSR1            equ	4065	;# 
  1506   000FE1                     FSR1L           equ	4065	;# 
  1507   000FE2                     FSR1H           equ	4066	;# 
  1508   000FE3                     PLUSW1          equ	4067	;# 
  1509   000FE4                     PREINC1         equ	4068	;# 
  1510   000FE5                     POSTDEC1        equ	4069	;# 
  1511   000FE6                     POSTINC1        equ	4070	;# 
  1512   000FE7                     INDF1           equ	4071	;# 
  1513   000FE8                     WREG            equ	4072	;# 
  1514   000FE9                     FSR0            equ	4073	;# 
  1515   000FE9                     FSR0L           equ	4073	;# 
  1516   000FEA                     FSR0H           equ	4074	;# 
  1517   000FEB                     PLUSW0          equ	4075	;# 
  1518   000FEC                     PREINC0         equ	4076	;# 
  1519   000FED                     POSTDEC0        equ	4077	;# 
  1520   000FEE                     POSTINC0        equ	4078	;# 
  1521   000FEF                     INDF0           equ	4079	;# 
  1522   000FF0                     INTCON3         equ	4080	;# 
  1523   000FF1                     INTCON2         equ	4081	;# 
  1524   000FF2                     INTCON          equ	4082	;# 
  1525   000FF3                     PROD            equ	4083	;# 
  1526   000FF3                     PRODL           equ	4083	;# 
  1527   000FF4                     PRODH           equ	4084	;# 
  1528   000FF5                     TABLAT          equ	4085	;# 
  1529   000FF6                     TBLPTR          equ	4086	;# 
  1530   000FF6                     TBLPTRL         equ	4086	;# 
  1531   000FF7                     TBLPTRH         equ	4087	;# 
  1532   000FF8                     TBLPTRU         equ	4088	;# 
  1533   000FF9                     PCLAT           equ	4089	;# 
  1534   000FF9                     PC              equ	4089	;# 
  1535   000FF9                     PCL             equ	4089	;# 
  1536   000FFA                     PCLATH          equ	4090	;# 
  1537   000FFB                     PCLATU          equ	4091	;# 
  1538   000FFC                     STKPTR          equ	4092	;# 
  1539   000FFD                     TOS             equ	4093	;# 
  1540   000FFD                     TOSL            equ	4093	;# 
  1541   000FFE                     TOSH            equ	4094	;# 
  1542   000FFF                     TOSU            equ	4095	;# 
  1543   000F77                     SSPMSK          equ	3959	;# 
  1544   000F78                     SLRCON          equ	3960	;# 
  1545   000F79                     CM2CON1         equ	3961	;# 
  1546   000F7A                     CM2CON0         equ	3962	;# 
  1547   000F7B                     CM1CON0         equ	3963	;# 
  1548   000F7C                     WPUB            equ	3964	;# 
  1549   000F7D                     IOCB            equ	3965	;# 
  1550   000F7E                     ANSEL           equ	3966	;# 
  1551   000F7F                     ANSELH          equ	3967	;# 
  1552   000F80                     PORTA           equ	3968	;# 
  1553   000F81                     PORTB           equ	3969	;# 
  1554   000F82                     PORTC           equ	3970	;# 
  1555   000F83                     PORTD           equ	3971	;# 
  1556   000F84                     PORTE           equ	3972	;# 
  1557   000F89                     LATA            equ	3977	;# 
  1558   000F8A                     LATB            equ	3978	;# 
  1559   000F8B                     LATC            equ	3979	;# 
  1560   000F8C                     LATD            equ	3980	;# 
  1561   000F8D                     LATE            equ	3981	;# 
  1562   000F92                     TRISA           equ	3986	;# 
  1563   000F92                     DDRA            equ	3986	;# 
  1564   000F93                     TRISB           equ	3987	;# 
  1565   000F93                     DDRB            equ	3987	;# 
  1566   000F94                     TRISC           equ	3988	;# 
  1567   000F94                     DDRC            equ	3988	;# 
  1568   000F95                     TRISD           equ	3989	;# 
  1569   000F95                     DDRD            equ	3989	;# 
  1570   000F96                     TRISE           equ	3990	;# 
  1571   000F96                     DDRE            equ	3990	;# 
  1572   000F9B                     OSCTUNE         equ	3995	;# 
  1573   000F9D                     PIE1            equ	3997	;# 
  1574   000F9E                     PIR1            equ	3998	;# 
  1575   000F9F                     IPR1            equ	3999	;# 
  1576   000FA0                     PIE2            equ	4000	;# 
  1577   000FA1                     PIR2            equ	4001	;# 
  1578   000FA2                     IPR2            equ	4002	;# 
  1579   000FA6                     EECON1          equ	4006	;# 
  1580   000FA7                     EECON2          equ	4007	;# 
  1581   000FA8                     EEDATA          equ	4008	;# 
  1582   000FA9                     EEADR           equ	4009	;# 
  1583   000FAA                     EEADRH          equ	4010	;# 
  1584   000FAB                     RCSTA           equ	4011	;# 
  1585   000FAB                     RCSTA1          equ	4011	;# 
  1586   000FAC                     TXSTA           equ	4012	;# 
  1587   000FAC                     TXSTA1          equ	4012	;# 
  1588   000FAD                     TXREG           equ	4013	;# 
  1589   000FAD                     TXREG1          equ	4013	;# 
  1590   000FAE                     RCREG           equ	4014	;# 
  1591   000FAE                     RCREG1          equ	4014	;# 
  1592   000FAF                     SPBRG           equ	4015	;# 
  1593   000FAF                     SPBRG1          equ	4015	;# 
  1594   000FB0                     SPBRGH          equ	4016	;# 
  1595   000FB1                     T3CON           equ	4017	;# 
  1596   000FB2                     TMR3            equ	4018	;# 
  1597   000FB2                     TMR3L           equ	4018	;# 
  1598   000FB3                     TMR3H           equ	4019	;# 
  1599   000FB4                     CVRCON2         equ	4020	;# 
  1600   000FB5                     CVRCON          equ	4021	;# 
  1601   000FB6                     ECCP1AS         equ	4022	;# 
  1602   000FB7                     PWM1CON         equ	4023	;# 
  1603   000FB8                     BAUDCON         equ	4024	;# 
  1604   000FB8                     BAUDCTL         equ	4024	;# 
  1605   000FB9                     PSTRCON         equ	4025	;# 
  1606   000FBA                     CCP2CON         equ	4026	;# 
  1607   000FBB                     CCPR2           equ	4027	;# 
  1608   000FBB                     CCPR2L          equ	4027	;# 
  1609   000FBC                     CCPR2H          equ	4028	;# 
  1610   000FBD                     CCP1CON         equ	4029	;# 
  1611   000FBE                     CCPR1           equ	4030	;# 
  1612   000FBE                     CCPR1L          equ	4030	;# 
  1613   000FBF                     CCPR1H          equ	4031	;# 
  1614   000FC0                     ADCON2          equ	4032	;# 
  1615   000FC1                     ADCON1          equ	4033	;# 
  1616   000FC2                     ADCON0          equ	4034	;# 
  1617   000FC3                     ADRES           equ	4035	;# 
  1618   000FC3                     ADRESL          equ	4035	;# 
  1619   000FC4                     ADRESH          equ	4036	;# 
  1620   000FC5                     SSPCON2         equ	4037	;# 
  1621   000FC6                     SSPCON1         equ	4038	;# 
  1622   000FC7                     SSPSTAT         equ	4039	;# 
  1623   000FC8                     SSPADD          equ	4040	;# 
  1624   000FC9                     SSPBUF          equ	4041	;# 
  1625   000FCA                     T2CON           equ	4042	;# 
  1626   000FCB                     PR2             equ	4043	;# 
  1627   000FCB                     MEMCON          equ	4043	;# 
  1628   000FCC                     TMR2            equ	4044	;# 
  1629   000FCD                     T1CON           equ	4045	;# 
  1630   000FCE                     TMR1            equ	4046	;# 
  1631   000FCE                     TMR1L           equ	4046	;# 
  1632   000FCF                     TMR1H           equ	4047	;# 
  1633   000FD0                     RCON            equ	4048	;# 
  1634   000FD1                     WDTCON          equ	4049	;# 
  1635   000FD2                     HLVDCON         equ	4050	;# 
  1636   000FD2                     LVDCON          equ	4050	;# 
  1637   000FD3                     OSCCON          equ	4051	;# 
  1638   000FD5                     T0CON           equ	4053	;# 
  1639   000FD6                     TMR0            equ	4054	;# 
  1640   000FD6                     TMR0L           equ	4054	;# 
  1641   000FD7                     TMR0H           equ	4055	;# 
  1642   000FD8                     STATUS          equ	4056	;# 
  1643   000FD9                     FSR2            equ	4057	;# 
  1644   000FD9                     FSR2L           equ	4057	;# 
  1645   000FDA                     FSR2H           equ	4058	;# 
  1646   000FDB                     PLUSW2          equ	4059	;# 
  1647   000FDC                     PREINC2         equ	4060	;# 
  1648   000FDD                     POSTDEC2        equ	4061	;# 
  1649   000FDE                     POSTINC2        equ	4062	;# 
  1650   000FDF                     INDF2           equ	4063	;# 
  1651   000FE0                     BSR             equ	4064	;# 
  1652   000FE1                     FSR1            equ	4065	;# 
  1653   000FE1                     FSR1L           equ	4065	;# 
  1654   000FE2                     FSR1H           equ	4066	;# 
  1655   000FE3                     PLUSW1          equ	4067	;# 
  1656   000FE4                     PREINC1         equ	4068	;# 
  1657   000FE5                     POSTDEC1        equ	4069	;# 
  1658   000FE6                     POSTINC1        equ	4070	;# 
  1659   000FE7                     INDF1           equ	4071	;# 
  1660   000FE8                     WREG            equ	4072	;# 
  1661   000FE9                     FSR0            equ	4073	;# 
  1662   000FE9                     FSR0L           equ	4073	;# 
  1663   000FEA                     FSR0H           equ	4074	;# 
  1664   000FEB                     PLUSW0          equ	4075	;# 
  1665   000FEC                     PREINC0         equ	4076	;# 
  1666   000FED                     POSTDEC0        equ	4077	;# 
  1667   000FEE                     POSTINC0        equ	4078	;# 
  1668   000FEF                     INDF0           equ	4079	;# 
  1669   000FF0                     INTCON3         equ	4080	;# 
  1670   000FF1                     INTCON2         equ	4081	;# 
  1671   000FF2                     INTCON          equ	4082	;# 
  1672   000FF3                     PROD            equ	4083	;# 
  1673   000FF3                     PRODL           equ	4083	;# 
  1674   000FF4                     PRODH           equ	4084	;# 
  1675   000FF5                     TABLAT          equ	4085	;# 
  1676   000FF6                     TBLPTR          equ	4086	;# 
  1677   000FF6                     TBLPTRL         equ	4086	;# 
  1678   000FF7                     TBLPTRH         equ	4087	;# 
  1679   000FF8                     TBLPTRU         equ	4088	;# 
  1680   000FF9                     PCLAT           equ	4089	;# 
  1681   000FF9                     PC              equ	4089	;# 
  1682   000FF9                     PCL             equ	4089	;# 
  1683   000FFA                     PCLATH          equ	4090	;# 
  1684   000FFB                     PCLATU          equ	4091	;# 
  1685   000FFC                     STKPTR          equ	4092	;# 
  1686   000FFD                     TOS             equ	4093	;# 
  1687   000FFD                     TOSL            equ	4093	;# 
  1688   000FFE                     TOSH            equ	4094	;# 
  1689   000FFF                     TOSU            equ	4095	;# 
  1690   000F77                     SSPMSK          equ	3959	;# 
  1691   000F78                     SLRCON          equ	3960	;# 
  1692   000F79                     CM2CON1         equ	3961	;# 
  1693   000F7A                     CM2CON0         equ	3962	;# 
  1694   000F7B                     CM1CON0         equ	3963	;# 
  1695   000F7C                     WPUB            equ	3964	;# 
  1696   000F7D                     IOCB            equ	3965	;# 
  1697   000F7E                     ANSEL           equ	3966	;# 
  1698   000F7F                     ANSELH          equ	3967	;# 
  1699   000F80                     PORTA           equ	3968	;# 
  1700   000F81                     PORTB           equ	3969	;# 
  1701   000F82                     PORTC           equ	3970	;# 
  1702   000F83                     PORTD           equ	3971	;# 
  1703   000F84                     PORTE           equ	3972	;# 
  1704   000F89                     LATA            equ	3977	;# 
  1705   000F8A                     LATB            equ	3978	;# 
  1706   000F8B                     LATC            equ	3979	;# 
  1707   000F8C                     LATD            equ	3980	;# 
  1708   000F8D                     LATE            equ	3981	;# 
  1709   000F92                     TRISA           equ	3986	;# 
  1710   000F92                     DDRA            equ	3986	;# 
  1711   000F93                     TRISB           equ	3987	;# 
  1712   000F93                     DDRB            equ	3987	;# 
  1713   000F94                     TRISC           equ	3988	;# 
  1714   000F94                     DDRC            equ	3988	;# 
  1715   000F95                     TRISD           equ	3989	;# 
  1716   000F95                     DDRD            equ	3989	;# 
  1717   000F96                     TRISE           equ	3990	;# 
  1718   000F96                     DDRE            equ	3990	;# 
  1719   000F9B                     OSCTUNE         equ	3995	;# 
  1720   000F9D                     PIE1            equ	3997	;# 
  1721   000F9E                     PIR1            equ	3998	;# 
  1722   000F9F                     IPR1            equ	3999	;# 
  1723   000FA0                     PIE2            equ	4000	;# 
  1724   000FA1                     PIR2            equ	4001	;# 
  1725   000FA2                     IPR2            equ	4002	;# 
  1726   000FA6                     EECON1          equ	4006	;# 
  1727   000FA7                     EECON2          equ	4007	;# 
  1728   000FA8                     EEDATA          equ	4008	;# 
  1729   000FA9                     EEADR           equ	4009	;# 
  1730   000FAA                     EEADRH          equ	4010	;# 
  1731   000FAB                     RCSTA           equ	4011	;# 
  1732   000FAB                     RCSTA1          equ	4011	;# 
  1733   000FAC                     TXSTA           equ	4012	;# 
  1734   000FAC                     TXSTA1          equ	4012	;# 
  1735   000FAD                     TXREG           equ	4013	;# 
  1736   000FAD                     TXREG1          equ	4013	;# 
  1737   000FAE                     RCREG           equ	4014	;# 
  1738   000FAE                     RCREG1          equ	4014	;# 
  1739   000FAF                     SPBRG           equ	4015	;# 
  1740   000FAF                     SPBRG1          equ	4015	;# 
  1741   000FB0                     SPBRGH          equ	4016	;# 
  1742   000FB1                     T3CON           equ	4017	;# 
  1743   000FB2                     TMR3            equ	4018	;# 
  1744   000FB2                     TMR3L           equ	4018	;# 
  1745   000FB3                     TMR3H           equ	4019	;# 
  1746   000FB4                     CVRCON2         equ	4020	;# 
  1747   000FB5                     CVRCON          equ	4021	;# 
  1748   000FB6                     ECCP1AS         equ	4022	;# 
  1749   000FB7                     PWM1CON         equ	4023	;# 
  1750   000FB8                     BAUDCON         equ	4024	;# 
  1751   000FB8                     BAUDCTL         equ	4024	;# 
  1752   000FB9                     PSTRCON         equ	4025	;# 
  1753   000FBA                     CCP2CON         equ	4026	;# 
  1754   000FBB                     CCPR2           equ	4027	;# 
  1755   000FBB                     CCPR2L          equ	4027	;# 
  1756   000FBC                     CCPR2H          equ	4028	;# 
  1757   000FBD                     CCP1CON         equ	4029	;# 
  1758   000FBE                     CCPR1           equ	4030	;# 
  1759   000FBE                     CCPR1L          equ	4030	;# 
  1760   000FBF                     CCPR1H          equ	4031	;# 
  1761   000FC0                     ADCON2          equ	4032	;# 
  1762   000FC1                     ADCON1          equ	4033	;# 
  1763   000FC2                     ADCON0          equ	4034	;# 
  1764   000FC3                     ADRES           equ	4035	;# 
  1765   000FC3                     ADRESL          equ	4035	;# 
  1766   000FC4                     ADRESH          equ	4036	;# 
  1767   000FC5                     SSPCON2         equ	4037	;# 
  1768   000FC6                     SSPCON1         equ	4038	;# 
  1769   000FC7                     SSPSTAT         equ	4039	;# 
  1770   000FC8                     SSPADD          equ	4040	;# 
  1771   000FC9                     SSPBUF          equ	4041	;# 
  1772   000FCA                     T2CON           equ	4042	;# 
  1773   000FCB                     PR2             equ	4043	;# 
  1774   000FCB                     MEMCON          equ	4043	;# 
  1775   000FCC                     TMR2            equ	4044	;# 
  1776   000FCD                     T1CON           equ	4045	;# 
  1777   000FCE                     TMR1            equ	4046	;# 
  1778   000FCE                     TMR1L           equ	4046	;# 
  1779   000FCF                     TMR1H           equ	4047	;# 
  1780   000FD0                     RCON            equ	4048	;# 
  1781   000FD1                     WDTCON          equ	4049	;# 
  1782   000FD2                     HLVDCON         equ	4050	;# 
  1783   000FD2                     LVDCON          equ	4050	;# 
  1784   000FD3                     OSCCON          equ	4051	;# 
  1785   000FD5                     T0CON           equ	4053	;# 
  1786   000FD6                     TMR0            equ	4054	;# 
  1787   000FD6                     TMR0L           equ	4054	;# 
  1788   000FD7                     TMR0H           equ	4055	;# 
  1789   000FD8                     STATUS          equ	4056	;# 
  1790   000FD9                     FSR2            equ	4057	;# 
  1791   000FD9                     FSR2L           equ	4057	;# 
  1792   000FDA                     FSR2H           equ	4058	;# 
  1793   000FDB                     PLUSW2          equ	4059	;# 
  1794   000FDC                     PREINC2         equ	4060	;# 
  1795   000FDD                     POSTDEC2        equ	4061	;# 
  1796   000FDE                     POSTINC2        equ	4062	;# 
  1797   000FDF                     INDF2           equ	4063	;# 
  1798   000FE0                     BSR             equ	4064	;# 
  1799   000FE1                     FSR1            equ	4065	;# 
  1800   000FE1                     FSR1L           equ	4065	;# 
  1801   000FE2                     FSR1H           equ	4066	;# 
  1802   000FE3                     PLUSW1          equ	4067	;# 
  1803   000FE4                     PREINC1         equ	4068	;# 
  1804   000FE5                     POSTDEC1        equ	4069	;# 
  1805   000FE6                     POSTINC1        equ	4070	;# 
  1806   000FE7                     INDF1           equ	4071	;# 
  1807   000FE8                     WREG            equ	4072	;# 
  1808   000FE9                     FSR0            equ	4073	;# 
  1809   000FE9                     FSR0L           equ	4073	;# 
  1810   000FEA                     FSR0H           equ	4074	;# 
  1811   000FEB                     PLUSW0          equ	4075	;# 
  1812   000FEC                     PREINC0         equ	4076	;# 
  1813   000FED                     POSTDEC0        equ	4077	;# 
  1814   000FEE                     POSTINC0        equ	4078	;# 
  1815   000FEF                     INDF0           equ	4079	;# 
  1816   000FF0                     INTCON3         equ	4080	;# 
  1817   000FF1                     INTCON2         equ	4081	;# 
  1818   000FF2                     INTCON          equ	4082	;# 
  1819   000FF3                     PROD            equ	4083	;# 
  1820   000FF3                     PRODL           equ	4083	;# 
  1821   000FF4                     PRODH           equ	4084	;# 
  1822   000FF5                     TABLAT          equ	4085	;# 
  1823   000FF6                     TBLPTR          equ	4086	;# 
  1824   000FF6                     TBLPTRL         equ	4086	;# 
  1825   000FF7                     TBLPTRH         equ	4087	;# 
  1826   000FF8                     TBLPTRU         equ	4088	;# 
  1827   000FF9                     PCLAT           equ	4089	;# 
  1828   000FF9                     PC              equ	4089	;# 
  1829   000FF9                     PCL             equ	4089	;# 
  1830   000FFA                     PCLATH          equ	4090	;# 
  1831   000FFB                     PCLATU          equ	4091	;# 
  1832   000FFC                     STKPTR          equ	4092	;# 
  1833   000FFD                     TOS             equ	4093	;# 
  1834   000FFD                     TOSL            equ	4093	;# 
  1835   000FFE                     TOSH            equ	4094	;# 
  1836   000FFF                     TOSU            equ	4095	;# 
  1837   000F77                     SSPMSK          equ	3959	;# 
  1838   000F78                     SLRCON          equ	3960	;# 
  1839   000F79                     CM2CON1         equ	3961	;# 
  1840   000F7A                     CM2CON0         equ	3962	;# 
  1841   000F7B                     CM1CON0         equ	3963	;# 
  1842   000F7C                     WPUB            equ	3964	;# 
  1843   000F7D                     IOCB            equ	3965	;# 
  1844   000F7E                     ANSEL           equ	3966	;# 
  1845   000F7F                     ANSELH          equ	3967	;# 
  1846   000F80                     PORTA           equ	3968	;# 
  1847   000F81                     PORTB           equ	3969	;# 
  1848   000F82                     PORTC           equ	3970	;# 
  1849   000F83                     PORTD           equ	3971	;# 
  1850   000F84                     PORTE           equ	3972	;# 
  1851   000F89                     LATA            equ	3977	;# 
  1852   000F8A                     LATB            equ	3978	;# 
  1853   000F8B                     LATC            equ	3979	;# 
  1854   000F8C                     LATD            equ	3980	;# 
  1855   000F8D                     LATE            equ	3981	;# 
  1856   000F92                     TRISA           equ	3986	;# 
  1857   000F92                     DDRA            equ	3986	;# 
  1858   000F93                     TRISB           equ	3987	;# 
  1859   000F93                     DDRB            equ	3987	;# 
  1860   000F94                     TRISC           equ	3988	;# 
  1861   000F94                     DDRC            equ	3988	;# 
  1862   000F95                     TRISD           equ	3989	;# 
  1863   000F95                     DDRD            equ	3989	;# 
  1864   000F96                     TRISE           equ	3990	;# 
  1865   000F96                     DDRE            equ	3990	;# 
  1866   000F9B                     OSCTUNE         equ	3995	;# 
  1867   000F9D                     PIE1            equ	3997	;# 
  1868   000F9E                     PIR1            equ	3998	;# 
  1869   000F9F                     IPR1            equ	3999	;# 
  1870   000FA0                     PIE2            equ	4000	;# 
  1871   000FA1                     PIR2            equ	4001	;# 
  1872   000FA2                     IPR2            equ	4002	;# 
  1873   000FA6                     EECON1          equ	4006	;# 
  1874   000FA7                     EECON2          equ	4007	;# 
  1875   000FA8                     EEDATA          equ	4008	;# 
  1876   000FA9                     EEADR           equ	4009	;# 
  1877   000FAA                     EEADRH          equ	4010	;# 
  1878   000FAB                     RCSTA           equ	4011	;# 
  1879   000FAB                     RCSTA1          equ	4011	;# 
  1880   000FAC                     TXSTA           equ	4012	;# 
  1881   000FAC                     TXSTA1          equ	4012	;# 
  1882   000FAD                     TXREG           equ	4013	;# 
  1883   000FAD                     TXREG1          equ	4013	;# 
  1884   000FAE                     RCREG           equ	4014	;# 
  1885   000FAE                     RCREG1          equ	4014	;# 
  1886   000FAF                     SPBRG           equ	4015	;# 
  1887   000FAF                     SPBRG1          equ	4015	;# 
  1888   000FB0                     SPBRGH          equ	4016	;# 
  1889   000FB1                     T3CON           equ	4017	;# 
  1890   000FB2                     TMR3            equ	4018	;# 
  1891   000FB2                     TMR3L           equ	4018	;# 
  1892   000FB3                     TMR3H           equ	4019	;# 
  1893   000FB4                     CVRCON2         equ	4020	;# 
  1894   000FB5                     CVRCON          equ	4021	;# 
  1895   000FB6                     ECCP1AS         equ	4022	;# 
  1896   000FB7                     PWM1CON         equ	4023	;# 
  1897   000FB8                     BAUDCON         equ	4024	;# 
  1898   000FB8                     BAUDCTL         equ	4024	;# 
  1899   000FB9                     PSTRCON         equ	4025	;# 
  1900   000FBA                     CCP2CON         equ	4026	;# 
  1901   000FBB                     CCPR2           equ	4027	;# 
  1902   000FBB                     CCPR2L          equ	4027	;# 
  1903   000FBC                     CCPR2H          equ	4028	;# 
  1904   000FBD                     CCP1CON         equ	4029	;# 
  1905   000FBE                     CCPR1           equ	4030	;# 
  1906   000FBE                     CCPR1L          equ	4030	;# 
  1907   000FBF                     CCPR1H          equ	4031	;# 
  1908   000FC0                     ADCON2          equ	4032	;# 
  1909   000FC1                     ADCON1          equ	4033	;# 
  1910   000FC2                     ADCON0          equ	4034	;# 
  1911   000FC3                     ADRES           equ	4035	;# 
  1912   000FC3                     ADRESL          equ	4035	;# 
  1913   000FC4                     ADRESH          equ	4036	;# 
  1914   000FC5                     SSPCON2         equ	4037	;# 
  1915   000FC6                     SSPCON1         equ	4038	;# 
  1916   000FC7                     SSPSTAT         equ	4039	;# 
  1917   000FC8                     SSPADD          equ	4040	;# 
  1918   000FC9                     SSPBUF          equ	4041	;# 
  1919   000FCA                     T2CON           equ	4042	;# 
  1920   000FCB                     PR2             equ	4043	;# 
  1921   000FCB                     MEMCON          equ	4043	;# 
  1922   000FCC                     TMR2            equ	4044	;# 
  1923   000FCD                     T1CON           equ	4045	;# 
  1924   000FCE                     TMR1            equ	4046	;# 
  1925   000FCE                     TMR1L           equ	4046	;# 
  1926   000FCF                     TMR1H           equ	4047	;# 
  1927   000FD0                     RCON            equ	4048	;# 
  1928   000FD1                     WDTCON          equ	4049	;# 
  1929   000FD2                     HLVDCON         equ	4050	;# 
  1930   000FD2                     LVDCON          equ	4050	;# 
  1931   000FD3                     OSCCON          equ	4051	;# 
  1932   000FD5                     T0CON           equ	4053	;# 
  1933   000FD6                     TMR0            equ	4054	;# 
  1934   000FD6                     TMR0L           equ	4054	;# 
  1935   000FD7                     TMR0H           equ	4055	;# 
  1936   000FD8                     STATUS          equ	4056	;# 
  1937   000FD9                     FSR2            equ	4057	;# 
  1938   000FD9                     FSR2L           equ	4057	;# 
  1939   000FDA                     FSR2H           equ	4058	;# 
  1940   000FDB                     PLUSW2          equ	4059	;# 
  1941   000FDC                     PREINC2         equ	4060	;# 
  1942   000FDD                     POSTDEC2        equ	4061	;# 
  1943   000FDE                     POSTINC2        equ	4062	;# 
  1944   000FDF                     INDF2           equ	4063	;# 
  1945   000FE0                     BSR             equ	4064	;# 
  1946   000FE1                     FSR1            equ	4065	;# 
  1947   000FE1                     FSR1L           equ	4065	;# 
  1948   000FE2                     FSR1H           equ	4066	;# 
  1949   000FE3                     PLUSW1          equ	4067	;# 
  1950   000FE4                     PREINC1         equ	4068	;# 
  1951   000FE5                     POSTDEC1        equ	4069	;# 
  1952   000FE6                     POSTINC1        equ	4070	;# 
  1953   000FE7                     INDF1           equ	4071	;# 
  1954   000FE8                     WREG            equ	4072	;# 
  1955   000FE9                     FSR0            equ	4073	;# 
  1956   000FE9                     FSR0L           equ	4073	;# 
  1957   000FEA                     FSR0H           equ	4074	;# 
  1958   000FEB                     PLUSW0          equ	4075	;# 
  1959   000FEC                     PREINC0         equ	4076	;# 
  1960   000FED                     POSTDEC0        equ	4077	;# 
  1961   000FEE                     POSTINC0        equ	4078	;# 
  1962   000FEF                     INDF0           equ	4079	;# 
  1963   000FF0                     INTCON3         equ	4080	;# 
  1964   000FF1                     INTCON2         equ	4081	;# 
  1965   000FF2                     INTCON          equ	4082	;# 
  1966   000FF3                     PROD            equ	4083	;# 
  1967   000FF3                     PRODL           equ	4083	;# 
  1968   000FF4                     PRODH           equ	4084	;# 
  1969   000FF5                     TABLAT          equ	4085	;# 
  1970   000FF6                     TBLPTR          equ	4086	;# 
  1971   000FF6                     TBLPTRL         equ	4086	;# 
  1972   000FF7                     TBLPTRH         equ	4087	;# 
  1973   000FF8                     TBLPTRU         equ	4088	;# 
  1974   000FF9                     PCLAT           equ	4089	;# 
  1975   000FF9                     PC              equ	4089	;# 
  1976   000FF9                     PCL             equ	4089	;# 
  1977   000FFA                     PCLATH          equ	4090	;# 
  1978   000FFB                     PCLATU          equ	4091	;# 
  1979   000FFC                     STKPTR          equ	4092	;# 
  1980   000FFD                     TOS             equ	4093	;# 
  1981   000FFD                     TOSL            equ	4093	;# 
  1982   000FFE                     TOSH            equ	4094	;# 
  1983   000FFF                     TOSU            equ	4095	;# 
  1984   000F77                     SSPMSK          equ	3959	;# 
  1985   000F78                     SLRCON          equ	3960	;# 
  1986   000F79                     CM2CON1         equ	3961	;# 
  1987   000F7A                     CM2CON0         equ	3962	;# 
  1988   000F7B                     CM1CON0         equ	3963	;# 
  1989   000F7C                     WPUB            equ	3964	;# 
  1990   000F7D                     IOCB            equ	3965	;# 
  1991   000F7E                     ANSEL           equ	3966	;# 
  1992   000F7F                     ANSELH          equ	3967	;# 
  1993   000F80                     PORTA           equ	3968	;# 
  1994   000F81                     PORTB           equ	3969	;# 
  1995   000F82                     PORTC           equ	3970	;# 
  1996   000F83                     PORTD           equ	3971	;# 
  1997   000F84                     PORTE           equ	3972	;# 
  1998   000F89                     LATA            equ	3977	;# 
  1999   000F8A                     LATB            equ	3978	;# 
  2000   000F8B                     LATC            equ	3979	;# 
  2001   000F8C                     LATD            equ	3980	;# 
  2002   000F8D                     LATE            equ	3981	;# 
  2003   000F92                     TRISA           equ	3986	;# 
  2004   000F92                     DDRA            equ	3986	;# 
  2005   000F93                     TRISB           equ	3987	;# 
  2006   000F93                     DDRB            equ	3987	;# 
  2007   000F94                     TRISC           equ	3988	;# 
  2008   000F94                     DDRC            equ	3988	;# 
  2009   000F95                     TRISD           equ	3989	;# 
  2010   000F95                     DDRD            equ	3989	;# 
  2011   000F96                     TRISE           equ	3990	;# 
  2012   000F96                     DDRE            equ	3990	;# 
  2013   000F9B                     OSCTUNE         equ	3995	;# 
  2014   000F9D                     PIE1            equ	3997	;# 
  2015   000F9E                     PIR1            equ	3998	;# 
  2016   000F9F                     IPR1            equ	3999	;# 
  2017   000FA0                     PIE2            equ	4000	;# 
  2018   000FA1                     PIR2            equ	4001	;# 
  2019   000FA2                     IPR2            equ	4002	;# 
  2020   000FA6                     EECON1          equ	4006	;# 
  2021   000FA7                     EECON2          equ	4007	;# 
  2022   000FA8                     EEDATA          equ	4008	;# 
  2023   000FA9                     EEADR           equ	4009	;# 
  2024   000FAA                     EEADRH          equ	4010	;# 
  2025   000FAB                     RCSTA           equ	4011	;# 
  2026   000FAB                     RCSTA1          equ	4011	;# 
  2027   000FAC                     TXSTA           equ	4012	;# 
  2028   000FAC                     TXSTA1          equ	4012	;# 
  2029   000FAD                     TXREG           equ	4013	;# 
  2030   000FAD                     TXREG1          equ	4013	;# 
  2031   000FAE                     RCREG           equ	4014	;# 
  2032   000FAE                     RCREG1          equ	4014	;# 
  2033   000FAF                     SPBRG           equ	4015	;# 
  2034   000FAF                     SPBRG1          equ	4015	;# 
  2035   000FB0                     SPBRGH          equ	4016	;# 
  2036   000FB1                     T3CON           equ	4017	;# 
  2037   000FB2                     TMR3            equ	4018	;# 
  2038   000FB2                     TMR3L           equ	4018	;# 
  2039   000FB3                     TMR3H           equ	4019	;# 
  2040   000FB4                     CVRCON2         equ	4020	;# 
  2041   000FB5                     CVRCON          equ	4021	;# 
  2042   000FB6                     ECCP1AS         equ	4022	;# 
  2043   000FB7                     PWM1CON         equ	4023	;# 
  2044   000FB8                     BAUDCON         equ	4024	;# 
  2045   000FB8                     BAUDCTL         equ	4024	;# 
  2046   000FB9                     PSTRCON         equ	4025	;# 
  2047   000FBA                     CCP2CON         equ	4026	;# 
  2048   000FBB                     CCPR2           equ	4027	;# 
  2049   000FBB                     CCPR2L          equ	4027	;# 
  2050   000FBC                     CCPR2H          equ	4028	;# 
  2051   000FBD                     CCP1CON         equ	4029	;# 
  2052   000FBE                     CCPR1           equ	4030	;# 
  2053   000FBE                     CCPR1L          equ	4030	;# 
  2054   000FBF                     CCPR1H          equ	4031	;# 
  2055   000FC0                     ADCON2          equ	4032	;# 
  2056   000FC1                     ADCON1          equ	4033	;# 
  2057   000FC2                     ADCON0          equ	4034	;# 
  2058   000FC3                     ADRES           equ	4035	;# 
  2059   000FC3                     ADRESL          equ	4035	;# 
  2060   000FC4                     ADRESH          equ	4036	;# 
  2061   000FC5                     SSPCON2         equ	4037	;# 
  2062   000FC6                     SSPCON1         equ	4038	;# 
  2063   000FC7                     SSPSTAT         equ	4039	;# 
  2064   000FC8                     SSPADD          equ	4040	;# 
  2065   000FC9                     SSPBUF          equ	4041	;# 
  2066   000FCA                     T2CON           equ	4042	;# 
  2067   000FCB                     PR2             equ	4043	;# 
  2068   000FCB                     MEMCON          equ	4043	;# 
  2069   000FCC                     TMR2            equ	4044	;# 
  2070   000FCD                     T1CON           equ	4045	;# 
  2071   000FCE                     TMR1            equ	4046	;# 
  2072   000FCE                     TMR1L           equ	4046	;# 
  2073   000FCF                     TMR1H           equ	4047	;# 
  2074   000FD0                     RCON            equ	4048	;# 
  2075   000FD1                     WDTCON          equ	4049	;# 
  2076   000FD2                     HLVDCON         equ	4050	;# 
  2077   000FD2                     LVDCON          equ	4050	;# 
  2078   000FD3                     OSCCON          equ	4051	;# 
  2079   000FD5                     T0CON           equ	4053	;# 
  2080   000FD6                     TMR0            equ	4054	;# 
  2081   000FD6                     TMR0L           equ	4054	;# 
  2082   000FD7                     TMR0H           equ	4055	;# 
  2083   000FD8                     STATUS          equ	4056	;# 
  2084   000FD9                     FSR2            equ	4057	;# 
  2085   000FD9                     FSR2L           equ	4057	;# 
  2086   000FDA                     FSR2H           equ	4058	;# 
  2087   000FDB                     PLUSW2          equ	4059	;# 
  2088   000FDC                     PREINC2         equ	4060	;# 
  2089   000FDD                     POSTDEC2        equ	4061	;# 
  2090   000FDE                     POSTINC2        equ	4062	;# 
  2091   000FDF                     INDF2           equ	4063	;# 
  2092   000FE0                     BSR             equ	4064	;# 
  2093   000FE1                     FSR1            equ	4065	;# 
  2094   000FE1                     FSR1L           equ	4065	;# 
  2095   000FE2                     FSR1H           equ	4066	;# 
  2096   000FE3                     PLUSW1          equ	4067	;# 
  2097   000FE4                     PREINC1         equ	4068	;# 
  2098   000FE5                     POSTDEC1        equ	4069	;# 
  2099   000FE6                     POSTINC1        equ	4070	;# 
  2100   000FE7                     INDF1           equ	4071	;# 
  2101   000FE8                     WREG            equ	4072	;# 
  2102   000FE9                     FSR0            equ	4073	;# 
  2103   000FE9                     FSR0L           equ	4073	;# 
  2104   000FEA                     FSR0H           equ	4074	;# 
  2105   000FEB                     PLUSW0          equ	4075	;# 
  2106   000FEC                     PREINC0         equ	4076	;# 
  2107   000FED                     POSTDEC0        equ	4077	;# 
  2108   000FEE                     POSTINC0        equ	4078	;# 
  2109   000FEF                     INDF0           equ	4079	;# 
  2110   000FF0                     INTCON3         equ	4080	;# 
  2111   000FF1                     INTCON2         equ	4081	;# 
  2112   000FF2                     INTCON          equ	4082	;# 
  2113   000FF3                     PROD            equ	4083	;# 
  2114   000FF3                     PRODL           equ	4083	;# 
  2115   000FF4                     PRODH           equ	4084	;# 
  2116   000FF5                     TABLAT          equ	4085	;# 
  2117   000FF6                     TBLPTR          equ	4086	;# 
  2118   000FF6                     TBLPTRL         equ	4086	;# 
  2119   000FF7                     TBLPTRH         equ	4087	;# 
  2120   000FF8                     TBLPTRU         equ	4088	;# 
  2121   000FF9                     PCLAT           equ	4089	;# 
  2122   000FF9                     PC              equ	4089	;# 
  2123   000FF9                     PCL             equ	4089	;# 
  2124   000FFA                     PCLATH          equ	4090	;# 
  2125   000FFB                     PCLATU          equ	4091	;# 
  2126   000FFC                     STKPTR          equ	4092	;# 
  2127   000FFD                     TOS             equ	4093	;# 
  2128   000FFD                     TOSL            equ	4093	;# 
  2129   000FFE                     TOSH            equ	4094	;# 
  2130   000FFF                     TOSU            equ	4095	;# 
  2131   000F77                     SSPMSK          equ	3959	;# 
  2132   000F78                     SLRCON          equ	3960	;# 
  2133   000F79                     CM2CON1         equ	3961	;# 
  2134   000F7A                     CM2CON0         equ	3962	;# 
  2135   000F7B                     CM1CON0         equ	3963	;# 
  2136   000F7C                     WPUB            equ	3964	;# 
  2137   000F7D                     IOCB            equ	3965	;# 
  2138   000F7E                     ANSEL           equ	3966	;# 
  2139   000F7F                     ANSELH          equ	3967	;# 
  2140   000F80                     PORTA           equ	3968	;# 
  2141   000F81                     PORTB           equ	3969	;# 
  2142   000F82                     PORTC           equ	3970	;# 
  2143   000F83                     PORTD           equ	3971	;# 
  2144   000F84                     PORTE           equ	3972	;# 
  2145   000F89                     LATA            equ	3977	;# 
  2146   000F8A                     LATB            equ	3978	;# 
  2147   000F8B                     LATC            equ	3979	;# 
  2148   000F8C                     LATD            equ	3980	;# 
  2149   000F8D                     LATE            equ	3981	;# 
  2150   000F92                     TRISA           equ	3986	;# 
  2151   000F92                     DDRA            equ	3986	;# 
  2152   000F93                     TRISB           equ	3987	;# 
  2153   000F93                     DDRB            equ	3987	;# 
  2154   000F94                     TRISC           equ	3988	;# 
  2155   000F94                     DDRC            equ	3988	;# 
  2156   000F95                     TRISD           equ	3989	;# 
  2157   000F95                     DDRD            equ	3989	;# 
  2158   000F96                     TRISE           equ	3990	;# 
  2159   000F96                     DDRE            equ	3990	;# 
  2160   000F9B                     OSCTUNE         equ	3995	;# 
  2161   000F9D                     PIE1            equ	3997	;# 
  2162   000F9E                     PIR1            equ	3998	;# 
  2163   000F9F                     IPR1            equ	3999	;# 
  2164   000FA0                     PIE2            equ	4000	;# 
  2165   000FA1                     PIR2            equ	4001	;# 
  2166   000FA2                     IPR2            equ	4002	;# 
  2167   000FA6                     EECON1          equ	4006	;# 
  2168   000FA7                     EECON2          equ	4007	;# 
  2169   000FA8                     EEDATA          equ	4008	;# 
  2170   000FA9                     EEADR           equ	4009	;# 
  2171   000FAA                     EEADRH          equ	4010	;# 
  2172   000FAB                     RCSTA           equ	4011	;# 
  2173   000FAB                     RCSTA1          equ	4011	;# 
  2174   000FAC                     TXSTA           equ	4012	;# 
  2175   000FAC                     TXSTA1          equ	4012	;# 
  2176   000FAD                     TXREG           equ	4013	;# 
  2177   000FAD                     TXREG1          equ	4013	;# 
  2178   000FAE                     RCREG           equ	4014	;# 
  2179   000FAE                     RCREG1          equ	4014	;# 
  2180   000FAF                     SPBRG           equ	4015	;# 
  2181   000FAF                     SPBRG1          equ	4015	;# 
  2182   000FB0                     SPBRGH          equ	4016	;# 
  2183   000FB1                     T3CON           equ	4017	;# 
  2184   000FB2                     TMR3            equ	4018	;# 
  2185   000FB2                     TMR3L           equ	4018	;# 
  2186   000FB3                     TMR3H           equ	4019	;# 
  2187   000FB4                     CVRCON2         equ	4020	;# 
  2188   000FB5                     CVRCON          equ	4021	;# 
  2189   000FB6                     ECCP1AS         equ	4022	;# 
  2190   000FB7                     PWM1CON         equ	4023	;# 
  2191   000FB8                     BAUDCON         equ	4024	;# 
  2192   000FB8                     BAUDCTL         equ	4024	;# 
  2193   000FB9                     PSTRCON         equ	4025	;# 
  2194   000FBA                     CCP2CON         equ	4026	;# 
  2195   000FBB                     CCPR2           equ	4027	;# 
  2196   000FBB                     CCPR2L          equ	4027	;# 
  2197   000FBC                     CCPR2H          equ	4028	;# 
  2198   000FBD                     CCP1CON         equ	4029	;# 
  2199   000FBE                     CCPR1           equ	4030	;# 
  2200   000FBE                     CCPR1L          equ	4030	;# 
  2201   000FBF                     CCPR1H          equ	4031	;# 
  2202   000FC0                     ADCON2          equ	4032	;# 
  2203   000FC1                     ADCON1          equ	4033	;# 
  2204   000FC2                     ADCON0          equ	4034	;# 
  2205   000FC3                     ADRES           equ	4035	;# 
  2206   000FC3                     ADRESL          equ	4035	;# 
  2207   000FC4                     ADRESH          equ	4036	;# 
  2208   000FC5                     SSPCON2         equ	4037	;# 
  2209   000FC6                     SSPCON1         equ	4038	;# 
  2210   000FC7                     SSPSTAT         equ	4039	;# 
  2211   000FC8                     SSPADD          equ	4040	;# 
  2212   000FC9                     SSPBUF          equ	4041	;# 
  2213   000FCA                     T2CON           equ	4042	;# 
  2214   000FCB                     PR2             equ	4043	;# 
  2215   000FCB                     MEMCON          equ	4043	;# 
  2216   000FCC                     TMR2            equ	4044	;# 
  2217   000FCD                     T1CON           equ	4045	;# 
  2218   000FCE                     TMR1            equ	4046	;# 
  2219   000FCE                     TMR1L           equ	4046	;# 
  2220   000FCF                     TMR1H           equ	4047	;# 
  2221   000FD0                     RCON            equ	4048	;# 
  2222   000FD1                     WDTCON          equ	4049	;# 
  2223   000FD2                     HLVDCON         equ	4050	;# 
  2224   000FD2                     LVDCON          equ	4050	;# 
  2225   000FD3                     OSCCON          equ	4051	;# 
  2226   000FD5                     T0CON           equ	4053	;# 
  2227   000FD6                     TMR0            equ	4054	;# 
  2228   000FD6                     TMR0L           equ	4054	;# 
  2229   000FD7                     TMR0H           equ	4055	;# 
  2230   000FD8                     STATUS          equ	4056	;# 
  2231   000FD9                     FSR2            equ	4057	;# 
  2232   000FD9                     FSR2L           equ	4057	;# 
  2233   000FDA                     FSR2H           equ	4058	;# 
  2234   000FDB                     PLUSW2          equ	4059	;# 
  2235   000FDC                     PREINC2         equ	4060	;# 
  2236   000FDD                     POSTDEC2        equ	4061	;# 
  2237   000FDE                     POSTINC2        equ	4062	;# 
  2238   000FDF                     INDF2           equ	4063	;# 
  2239   000FE0                     BSR             equ	4064	;# 
  2240   000FE1                     FSR1            equ	4065	;# 
  2241   000FE1                     FSR1L           equ	4065	;# 
  2242   000FE2                     FSR1H           equ	4066	;# 
  2243   000FE3                     PLUSW1          equ	4067	;# 
  2244   000FE4                     PREINC1         equ	4068	;# 
  2245   000FE5                     POSTDEC1        equ	4069	;# 
  2246   000FE6                     POSTINC1        equ	4070	;# 
  2247   000FE7                     INDF1           equ	4071	;# 
  2248   000FE8                     WREG            equ	4072	;# 
  2249   000FE9                     FSR0            equ	4073	;# 
  2250   000FE9                     FSR0L           equ	4073	;# 
  2251   000FEA                     FSR0H           equ	4074	;# 
  2252   000FEB                     PLUSW0          equ	4075	;# 
  2253   000FEC                     PREINC0         equ	4076	;# 
  2254   000FED                     POSTDEC0        equ	4077	;# 
  2255   000FEE                     POSTINC0        equ	4078	;# 
  2256   000FEF                     INDF0           equ	4079	;# 
  2257   000FF0                     INTCON3         equ	4080	;# 
  2258   000FF1                     INTCON2         equ	4081	;# 
  2259   000FF2                     INTCON          equ	4082	;# 
  2260   000FF3                     PROD            equ	4083	;# 
  2261   000FF3                     PRODL           equ	4083	;# 
  2262   000FF4                     PRODH           equ	4084	;# 
  2263   000FF5                     TABLAT          equ	4085	;# 
  2264   000FF6                     TBLPTR          equ	4086	;# 
  2265   000FF6                     TBLPTRL         equ	4086	;# 
  2266   000FF7                     TBLPTRH         equ	4087	;# 
  2267   000FF8                     TBLPTRU         equ	4088	;# 
  2268   000FF9                     PCLAT           equ	4089	;# 
  2269   000FF9                     PC              equ	4089	;# 
  2270   000FF9                     PCL             equ	4089	;# 
  2271   000FFA                     PCLATH          equ	4090	;# 
  2272   000FFB                     PCLATU          equ	4091	;# 
  2273   000FFC                     STKPTR          equ	4092	;# 
  2274   000FFD                     TOS             equ	4093	;# 
  2275   000FFD                     TOSL            equ	4093	;# 
  2276   000FFE                     TOSH            equ	4094	;# 
  2277   000FFF                     TOSU            equ	4095	;# 
  2278   000F77                     SSPMSK          equ	3959	;# 
  2279   000F78                     SLRCON          equ	3960	;# 
  2280   000F79                     CM2CON1         equ	3961	;# 
  2281   000F7A                     CM2CON0         equ	3962	;# 
  2282   000F7B                     CM1CON0         equ	3963	;# 
  2283   000F7C                     WPUB            equ	3964	;# 
  2284   000F7D                     IOCB            equ	3965	;# 
  2285   000F7E                     ANSEL           equ	3966	;# 
  2286   000F7F                     ANSELH          equ	3967	;# 
  2287   000F80                     PORTA           equ	3968	;# 
  2288   000F81                     PORTB           equ	3969	;# 
  2289   000F82                     PORTC           equ	3970	;# 
  2290   000F83                     PORTD           equ	3971	;# 
  2291   000F84                     PORTE           equ	3972	;# 
  2292   000F89                     LATA            equ	3977	;# 
  2293   000F8A                     LATB            equ	3978	;# 
  2294   000F8B                     LATC            equ	3979	;# 
  2295   000F8C                     LATD            equ	3980	;# 
  2296   000F8D                     LATE            equ	3981	;# 
  2297   000F92                     TRISA           equ	3986	;# 
  2298   000F92                     DDRA            equ	3986	;# 
  2299   000F93                     TRISB           equ	3987	;# 
  2300   000F93                     DDRB            equ	3987	;# 
  2301   000F94                     TRISC           equ	3988	;# 
  2302   000F94                     DDRC            equ	3988	;# 
  2303   000F95                     TRISD           equ	3989	;# 
  2304   000F95                     DDRD            equ	3989	;# 
  2305   000F96                     TRISE           equ	3990	;# 
  2306   000F96                     DDRE            equ	3990	;# 
  2307   000F9B                     OSCTUNE         equ	3995	;# 
  2308   000F9D                     PIE1            equ	3997	;# 
  2309   000F9E                     PIR1            equ	3998	;# 
  2310   000F9F                     IPR1            equ	3999	;# 
  2311   000FA0                     PIE2            equ	4000	;# 
  2312   000FA1                     PIR2            equ	4001	;# 
  2313   000FA2                     IPR2            equ	4002	;# 
  2314   000FA6                     EECON1          equ	4006	;# 
  2315   000FA7                     EECON2          equ	4007	;# 
  2316   000FA8                     EEDATA          equ	4008	;# 
  2317   000FA9                     EEADR           equ	4009	;# 
  2318   000FAA                     EEADRH          equ	4010	;# 
  2319   000FAB                     RCSTA           equ	4011	;# 
  2320   000FAB                     RCSTA1          equ	4011	;# 
  2321   000FAC                     TXSTA           equ	4012	;# 
  2322   000FAC                     TXSTA1          equ	4012	;# 
  2323   000FAD                     TXREG           equ	4013	;# 
  2324   000FAD                     TXREG1          equ	4013	;# 
  2325   000FAE                     RCREG           equ	4014	;# 
  2326   000FAE                     RCREG1          equ	4014	;# 
  2327   000FAF                     SPBRG           equ	4015	;# 
  2328   000FAF                     SPBRG1          equ	4015	;# 
  2329   000FB0                     SPBRGH          equ	4016	;# 
  2330   000FB1                     T3CON           equ	4017	;# 
  2331   000FB2                     TMR3            equ	4018	;# 
  2332   000FB2                     TMR3L           equ	4018	;# 
  2333   000FB3                     TMR3H           equ	4019	;# 
  2334   000FB4                     CVRCON2         equ	4020	;# 
  2335   000FB5                     CVRCON          equ	4021	;# 
  2336   000FB6                     ECCP1AS         equ	4022	;# 
  2337   000FB7                     PWM1CON         equ	4023	;# 
  2338   000FB8                     BAUDCON         equ	4024	;# 
  2339   000FB8                     BAUDCTL         equ	4024	;# 
  2340   000FB9                     PSTRCON         equ	4025	;# 
  2341   000FBA                     CCP2CON         equ	4026	;# 
  2342   000FBB                     CCPR2           equ	4027	;# 
  2343   000FBB                     CCPR2L          equ	4027	;# 
  2344   000FBC                     CCPR2H          equ	4028	;# 
  2345   000FBD                     CCP1CON         equ	4029	;# 
  2346   000FBE                     CCPR1           equ	4030	;# 
  2347   000FBE                     CCPR1L          equ	4030	;# 
  2348   000FBF                     CCPR1H          equ	4031	;# 
  2349   000FC0                     ADCON2          equ	4032	;# 
  2350   000FC1                     ADCON1          equ	4033	;# 
  2351   000FC2                     ADCON0          equ	4034	;# 
  2352   000FC3                     ADRES           equ	4035	;# 
  2353   000FC3                     ADRESL          equ	4035	;# 
  2354   000FC4                     ADRESH          equ	4036	;# 
  2355   000FC5                     SSPCON2         equ	4037	;# 
  2356   000FC6                     SSPCON1         equ	4038	;# 
  2357   000FC7                     SSPSTAT         equ	4039	;# 
  2358   000FC8                     SSPADD          equ	4040	;# 
  2359   000FC9                     SSPBUF          equ	4041	;# 
  2360   000FCA                     T2CON           equ	4042	;# 
  2361   000FCB                     PR2             equ	4043	;# 
  2362   000FCB                     MEMCON          equ	4043	;# 
  2363   000FCC                     TMR2            equ	4044	;# 
  2364   000FCD                     T1CON           equ	4045	;# 
  2365   000FCE                     TMR1            equ	4046	;# 
  2366   000FCE                     TMR1L           equ	4046	;# 
  2367   000FCF                     TMR1H           equ	4047	;# 
  2368   000FD0                     RCON            equ	4048	;# 
  2369   000FD1                     WDTCON          equ	4049	;# 
  2370   000FD2                     HLVDCON         equ	4050	;# 
  2371   000FD2                     LVDCON          equ	4050	;# 
  2372   000FD3                     OSCCON          equ	4051	;# 
  2373   000FD5                     T0CON           equ	4053	;# 
  2374   000FD6                     TMR0            equ	4054	;# 
  2375   000FD6                     TMR0L           equ	4054	;# 
  2376   000FD7                     TMR0H           equ	4055	;# 
  2377   000FD8                     STATUS          equ	4056	;# 
  2378   000FD9                     FSR2            equ	4057	;# 
  2379   000FD9                     FSR2L           equ	4057	;# 
  2380   000FDA                     FSR2H           equ	4058	;# 
  2381   000FDB                     PLUSW2          equ	4059	;# 
  2382   000FDC                     PREINC2         equ	4060	;# 
  2383   000FDD                     POSTDEC2        equ	4061	;# 
  2384   000FDE                     POSTINC2        equ	4062	;# 
  2385   000FDF                     INDF2           equ	4063	;# 
  2386   000FE0                     BSR             equ	4064	;# 
  2387   000FE1                     FSR1            equ	4065	;# 
  2388   000FE1                     FSR1L           equ	4065	;# 
  2389   000FE2                     FSR1H           equ	4066	;# 
  2390   000FE3                     PLUSW1          equ	4067	;# 
  2391   000FE4                     PREINC1         equ	4068	;# 
  2392   000FE5                     POSTDEC1        equ	4069	;# 
  2393   000FE6                     POSTINC1        equ	4070	;# 
  2394   000FE7                     INDF1           equ	4071	;# 
  2395   000FE8                     WREG            equ	4072	;# 
  2396   000FE9                     FSR0            equ	4073	;# 
  2397   000FE9                     FSR0L           equ	4073	;# 
  2398   000FEA                     FSR0H           equ	4074	;# 
  2399   000FEB                     PLUSW0          equ	4075	;# 
  2400   000FEC                     PREINC0         equ	4076	;# 
  2401   000FED                     POSTDEC0        equ	4077	;# 
  2402   000FEE                     POSTINC0        equ	4078	;# 
  2403   000FEF                     INDF0           equ	4079	;# 
  2404   000FF0                     INTCON3         equ	4080	;# 
  2405   000FF1                     INTCON2         equ	4081	;# 
  2406   000FF2                     INTCON          equ	4082	;# 
  2407   000FF3                     PROD            equ	4083	;# 
  2408   000FF3                     PRODL           equ	4083	;# 
  2409   000FF4                     PRODH           equ	4084	;# 
  2410   000FF5                     TABLAT          equ	4085	;# 
  2411   000FF6                     TBLPTR          equ	4086	;# 
  2412   000FF6                     TBLPTRL         equ	4086	;# 
  2413   000FF7                     TBLPTRH         equ	4087	;# 
  2414   000FF8                     TBLPTRU         equ	4088	;# 
  2415   000FF9                     PCLAT           equ	4089	;# 
  2416   000FF9                     PC              equ	4089	;# 
  2417   000FF9                     PCL             equ	4089	;# 
  2418   000FFA                     PCLATH          equ	4090	;# 
  2419   000FFB                     PCLATU          equ	4091	;# 
  2420   000FFC                     STKPTR          equ	4092	;# 
  2421   000FFD                     TOS             equ	4093	;# 
  2422   000FFD                     TOSL            equ	4093	;# 
  2423   000FFE                     TOSH            equ	4094	;# 
  2424   000FFF                     TOSU            equ	4095	;# 
  2425   000F77                     SSPMSK          equ	3959	;# 
  2426   000F78                     SLRCON          equ	3960	;# 
  2427   000F79                     CM2CON1         equ	3961	;# 
  2428   000F7A                     CM2CON0         equ	3962	;# 
  2429   000F7B                     CM1CON0         equ	3963	;# 
  2430   000F7C                     WPUB            equ	3964	;# 
  2431   000F7D                     IOCB            equ	3965	;# 
  2432   000F7E                     ANSEL           equ	3966	;# 
  2433   000F7F                     ANSELH          equ	3967	;# 
  2434   000F80                     PORTA           equ	3968	;# 
  2435   000F81                     PORTB           equ	3969	;# 
  2436   000F82                     PORTC           equ	3970	;# 
  2437   000F83                     PORTD           equ	3971	;# 
  2438   000F84                     PORTE           equ	3972	;# 
  2439   000F89                     LATA            equ	3977	;# 
  2440   000F8A                     LATB            equ	3978	;# 
  2441   000F8B                     LATC            equ	3979	;# 
  2442   000F8C                     LATD            equ	3980	;# 
  2443   000F8D                     LATE            equ	3981	;# 
  2444   000F92                     TRISA           equ	3986	;# 
  2445   000F92                     DDRA            equ	3986	;# 
  2446   000F93                     TRISB           equ	3987	;# 
  2447   000F93                     DDRB            equ	3987	;# 
  2448   000F94                     TRISC           equ	3988	;# 
  2449   000F94                     DDRC            equ	3988	;# 
  2450   000F95                     TRISD           equ	3989	;# 
  2451   000F95                     DDRD            equ	3989	;# 
  2452   000F96                     TRISE           equ	3990	;# 
  2453   000F96                     DDRE            equ	3990	;# 
  2454   000F9B                     OSCTUNE         equ	3995	;# 
  2455   000F9D                     PIE1            equ	3997	;# 
  2456   000F9E                     PIR1            equ	3998	;# 
  2457   000F9F                     IPR1            equ	3999	;# 
  2458   000FA0                     PIE2            equ	4000	;# 
  2459   000FA1                     PIR2            equ	4001	;# 
  2460   000FA2                     IPR2            equ	4002	;# 
  2461   000FA6                     EECON1          equ	4006	;# 
  2462   000FA7                     EECON2          equ	4007	;# 
  2463   000FA8                     EEDATA          equ	4008	;# 
  2464   000FA9                     EEADR           equ	4009	;# 
  2465   000FAA                     EEADRH          equ	4010	;# 
  2466   000FAB                     RCSTA           equ	4011	;# 
  2467   000FAB                     RCSTA1          equ	4011	;# 
  2468   000FAC                     TXSTA           equ	4012	;# 
  2469   000FAC                     TXSTA1          equ	4012	;# 
  2470   000FAD                     TXREG           equ	4013	;# 
  2471   000FAD                     TXREG1          equ	4013	;# 
  2472   000FAE                     RCREG           equ	4014	;# 
  2473   000FAE                     RCREG1          equ	4014	;# 
  2474   000FAF                     SPBRG           equ	4015	;# 
  2475   000FAF                     SPBRG1          equ	4015	;# 
  2476   000FB0                     SPBRGH          equ	4016	;# 
  2477   000FB1                     T3CON           equ	4017	;# 
  2478   000FB2                     TMR3            equ	4018	;# 
  2479   000FB2                     TMR3L           equ	4018	;# 
  2480   000FB3                     TMR3H           equ	4019	;# 
  2481   000FB4                     CVRCON2         equ	4020	;# 
  2482   000FB5                     CVRCON          equ	4021	;# 
  2483   000FB6                     ECCP1AS         equ	4022	;# 
  2484   000FB7                     PWM1CON         equ	4023	;# 
  2485   000FB8                     BAUDCON         equ	4024	;# 
  2486   000FB8                     BAUDCTL         equ	4024	;# 
  2487   000FB9                     PSTRCON         equ	4025	;# 
  2488   000FBA                     CCP2CON         equ	4026	;# 
  2489   000FBB                     CCPR2           equ	4027	;# 
  2490   000FBB                     CCPR2L          equ	4027	;# 
  2491   000FBC                     CCPR2H          equ	4028	;# 
  2492   000FBD                     CCP1CON         equ	4029	;# 
  2493   000FBE                     CCPR1           equ	4030	;# 
  2494   000FBE                     CCPR1L          equ	4030	;# 
  2495   000FBF                     CCPR1H          equ	4031	;# 
  2496   000FC0                     ADCON2          equ	4032	;# 
  2497   000FC1                     ADCON1          equ	4033	;# 
  2498   000FC2                     ADCON0          equ	4034	;# 
  2499   000FC3                     ADRES           equ	4035	;# 
  2500   000FC3                     ADRESL          equ	4035	;# 
  2501   000FC4                     ADRESH          equ	4036	;# 
  2502   000FC5                     SSPCON2         equ	4037	;# 
  2503   000FC6                     SSPCON1         equ	4038	;# 
  2504   000FC7                     SSPSTAT         equ	4039	;# 
  2505   000FC8                     SSPADD          equ	4040	;# 
  2506   000FC9                     SSPBUF          equ	4041	;# 
  2507   000FCA                     T2CON           equ	4042	;# 
  2508   000FCB                     PR2             equ	4043	;# 
  2509   000FCB                     MEMCON          equ	4043	;# 
  2510   000FCC                     TMR2            equ	4044	;# 
  2511   000FCD                     T1CON           equ	4045	;# 
  2512   000FCE                     TMR1            equ	4046	;# 
  2513   000FCE                     TMR1L           equ	4046	;# 
  2514   000FCF                     TMR1H           equ	4047	;# 
  2515   000FD0                     RCON            equ	4048	;# 
  2516   000FD1                     WDTCON          equ	4049	;# 
  2517   000FD2                     HLVDCON         equ	4050	;# 
  2518   000FD2                     LVDCON          equ	4050	;# 
  2519   000FD3                     OSCCON          equ	4051	;# 
  2520   000FD5                     T0CON           equ	4053	;# 
  2521   000FD6                     TMR0            equ	4054	;# 
  2522   000FD6                     TMR0L           equ	4054	;# 
  2523   000FD7                     TMR0H           equ	4055	;# 
  2524   000FD8                     STATUS          equ	4056	;# 
  2525   000FD9                     FSR2            equ	4057	;# 
  2526   000FD9                     FSR2L           equ	4057	;# 
  2527   000FDA                     FSR2H           equ	4058	;# 
  2528   000FDB                     PLUSW2          equ	4059	;# 
  2529   000FDC                     PREINC2         equ	4060	;# 
  2530   000FDD                     POSTDEC2        equ	4061	;# 
  2531   000FDE                     POSTINC2        equ	4062	;# 
  2532   000FDF                     INDF2           equ	4063	;# 
  2533   000FE0                     BSR             equ	4064	;# 
  2534   000FE1                     FSR1            equ	4065	;# 
  2535   000FE1                     FSR1L           equ	4065	;# 
  2536   000FE2                     FSR1H           equ	4066	;# 
  2537   000FE3                     PLUSW1          equ	4067	;# 
  2538   000FE4                     PREINC1         equ	4068	;# 
  2539   000FE5                     POSTDEC1        equ	4069	;# 
  2540   000FE6                     POSTINC1        equ	4070	;# 
  2541   000FE7                     INDF1           equ	4071	;# 
  2542   000FE8                     WREG            equ	4072	;# 
  2543   000FE9                     FSR0            equ	4073	;# 
  2544   000FE9                     FSR0L           equ	4073	;# 
  2545   000FEA                     FSR0H           equ	4074	;# 
  2546   000FEB                     PLUSW0          equ	4075	;# 
  2547   000FEC                     PREINC0         equ	4076	;# 
  2548   000FED                     POSTDEC0        equ	4077	;# 
  2549   000FEE                     POSTINC0        equ	4078	;# 
  2550   000FEF                     INDF0           equ	4079	;# 
  2551   000FF0                     INTCON3         equ	4080	;# 
  2552   000FF1                     INTCON2         equ	4081	;# 
  2553   000FF2                     INTCON          equ	4082	;# 
  2554   000FF3                     PROD            equ	4083	;# 
  2555   000FF3                     PRODL           equ	4083	;# 
  2556   000FF4                     PRODH           equ	4084	;# 
  2557   000FF5                     TABLAT          equ	4085	;# 
  2558   000FF6                     TBLPTR          equ	4086	;# 
  2559   000FF6                     TBLPTRL         equ	4086	;# 
  2560   000FF7                     TBLPTRH         equ	4087	;# 
  2561   000FF8                     TBLPTRU         equ	4088	;# 
  2562   000FF9                     PCLAT           equ	4089	;# 
  2563   000FF9                     PC              equ	4089	;# 
  2564   000FF9                     PCL             equ	4089	;# 
  2565   000FFA                     PCLATH          equ	4090	;# 
  2566   000FFB                     PCLATU          equ	4091	;# 
  2567   000FFC                     STKPTR          equ	4092	;# 
  2568   000FFD                     TOS             equ	4093	;# 
  2569   000FFD                     TOSL            equ	4093	;# 
  2570   000FFE                     TOSH            equ	4094	;# 
  2571   000FFF                     TOSU            equ	4095	;# 
  2572   000F77                     SSPMSK          equ	3959	;# 
  2573   000F78                     SLRCON          equ	3960	;# 
  2574   000F79                     CM2CON1         equ	3961	;# 
  2575   000F7A                     CM2CON0         equ	3962	;# 
  2576   000F7B                     CM1CON0         equ	3963	;# 
  2577   000F7C                     WPUB            equ	3964	;# 
  2578   000F7D                     IOCB            equ	3965	;# 
  2579   000F7E                     ANSEL           equ	3966	;# 
  2580   000F7F                     ANSELH          equ	3967	;# 
  2581   000F80                     PORTA           equ	3968	;# 
  2582   000F81                     PORTB           equ	3969	;# 
  2583   000F82                     PORTC           equ	3970	;# 
  2584   000F83                     PORTD           equ	3971	;# 
  2585   000F84                     PORTE           equ	3972	;# 
  2586   000F89                     LATA            equ	3977	;# 
  2587   000F8A                     LATB            equ	3978	;# 
  2588   000F8B                     LATC            equ	3979	;# 
  2589   000F8C                     LATD            equ	3980	;# 
  2590   000F8D                     LATE            equ	3981	;# 
  2591   000F92                     TRISA           equ	3986	;# 
  2592   000F92                     DDRA            equ	3986	;# 
  2593   000F93                     TRISB           equ	3987	;# 
  2594   000F93                     DDRB            equ	3987	;# 
  2595   000F94                     TRISC           equ	3988	;# 
  2596   000F94                     DDRC            equ	3988	;# 
  2597   000F95                     TRISD           equ	3989	;# 
  2598   000F95                     DDRD            equ	3989	;# 
  2599   000F96                     TRISE           equ	3990	;# 
  2600   000F96                     DDRE            equ	3990	;# 
  2601   000F9B                     OSCTUNE         equ	3995	;# 
  2602   000F9D                     PIE1            equ	3997	;# 
  2603   000F9E                     PIR1            equ	3998	;# 
  2604   000F9F                     IPR1            equ	3999	;# 
  2605   000FA0                     PIE2            equ	4000	;# 
  2606   000FA1                     PIR2            equ	4001	;# 
  2607   000FA2                     IPR2            equ	4002	;# 
  2608   000FA6                     EECON1          equ	4006	;# 
  2609   000FA7                     EECON2          equ	4007	;# 
  2610   000FA8                     EEDATA          equ	4008	;# 
  2611   000FA9                     EEADR           equ	4009	;# 
  2612   000FAA                     EEADRH          equ	4010	;# 
  2613   000FAB                     RCSTA           equ	4011	;# 
  2614   000FAB                     RCSTA1          equ	4011	;# 
  2615   000FAC                     TXSTA           equ	4012	;# 
  2616   000FAC                     TXSTA1          equ	4012	;# 
  2617   000FAD                     TXREG           equ	4013	;# 
  2618   000FAD                     TXREG1          equ	4013	;# 
  2619   000FAE                     RCREG           equ	4014	;# 
  2620   000FAE                     RCREG1          equ	4014	;# 
  2621   000FAF                     SPBRG           equ	4015	;# 
  2622   000FAF                     SPBRG1          equ	4015	;# 
  2623   000FB0                     SPBRGH          equ	4016	;# 
  2624   000FB1                     T3CON           equ	4017	;# 
  2625   000FB2                     TMR3            equ	4018	;# 
  2626   000FB2                     TMR3L           equ	4018	;# 
  2627   000FB3                     TMR3H           equ	4019	;# 
  2628   000FB4                     CVRCON2         equ	4020	;# 
  2629   000FB5                     CVRCON          equ	4021	;# 
  2630   000FB6                     ECCP1AS         equ	4022	;# 
  2631   000FB7                     PWM1CON         equ	4023	;# 
  2632   000FB8                     BAUDCON         equ	4024	;# 
  2633   000FB8                     BAUDCTL         equ	4024	;# 
  2634   000FB9                     PSTRCON         equ	4025	;# 
  2635   000FBA                     CCP2CON         equ	4026	;# 
  2636   000FBB                     CCPR2           equ	4027	;# 
  2637   000FBB                     CCPR2L          equ	4027	;# 
  2638   000FBC                     CCPR2H          equ	4028	;# 
  2639   000FBD                     CCP1CON         equ	4029	;# 
  2640   000FBE                     CCPR1           equ	4030	;# 
  2641   000FBE                     CCPR1L          equ	4030	;# 
  2642   000FBF                     CCPR1H          equ	4031	;# 
  2643   000FC0                     ADCON2          equ	4032	;# 
  2644   000FC1                     ADCON1          equ	4033	;# 
  2645   000FC2                     ADCON0          equ	4034	;# 
  2646   000FC3                     ADRES           equ	4035	;# 
  2647   000FC3                     ADRESL          equ	4035	;# 
  2648   000FC4                     ADRESH          equ	4036	;# 
  2649   000FC5                     SSPCON2         equ	4037	;# 
  2650   000FC6                     SSPCON1         equ	4038	;# 
  2651   000FC7                     SSPSTAT         equ	4039	;# 
  2652   000FC8                     SSPADD          equ	4040	;# 
  2653   000FC9                     SSPBUF          equ	4041	;# 
  2654   000FCA                     T2CON           equ	4042	;# 
  2655   000FCB                     PR2             equ	4043	;# 
  2656   000FCB                     MEMCON          equ	4043	;# 
  2657   000FCC                     TMR2            equ	4044	;# 
  2658   000FCD                     T1CON           equ	4045	;# 
  2659   000FCE                     TMR1            equ	4046	;# 
  2660   000FCE                     TMR1L           equ	4046	;# 
  2661   000FCF                     TMR1H           equ	4047	;# 
  2662   000FD0                     RCON            equ	4048	;# 
  2663   000FD1                     WDTCON          equ	4049	;# 
  2664   000FD2                     HLVDCON         equ	4050	;# 
  2665   000FD2                     LVDCON          equ	4050	;# 
  2666   000FD3                     OSCCON          equ	4051	;# 
  2667   000FD5                     T0CON           equ	4053	;# 
  2668   000FD6                     TMR0            equ	4054	;# 
  2669   000FD6                     TMR0L           equ	4054	;# 
  2670   000FD7                     TMR0H           equ	4055	;# 
  2671   000FD8                     STATUS          equ	4056	;# 
  2672   000FD9                     FSR2            equ	4057	;# 
  2673   000FD9                     FSR2L           equ	4057	;# 
  2674   000FDA                     FSR2H           equ	4058	;# 
  2675   000FDB                     PLUSW2          equ	4059	;# 
  2676   000FDC                     PREINC2         equ	4060	;# 
  2677   000FDD                     POSTDEC2        equ	4061	;# 
  2678   000FDE                     POSTINC2        equ	4062	;# 
  2679   000FDF                     INDF2           equ	4063	;# 
  2680   000FE0                     BSR             equ	4064	;# 
  2681   000FE1                     FSR1            equ	4065	;# 
  2682   000FE1                     FSR1L           equ	4065	;# 
  2683   000FE2                     FSR1H           equ	4066	;# 
  2684   000FE3                     PLUSW1          equ	4067	;# 
  2685   000FE4                     PREINC1         equ	4068	;# 
  2686   000FE5                     POSTDEC1        equ	4069	;# 
  2687   000FE6                     POSTINC1        equ	4070	;# 
  2688   000FE7                     INDF1           equ	4071	;# 
  2689   000FE8                     WREG            equ	4072	;# 
  2690   000FE9                     FSR0            equ	4073	;# 
  2691   000FE9                     FSR0L           equ	4073	;# 
  2692   000FEA                     FSR0H           equ	4074	;# 
  2693   000FEB                     PLUSW0          equ	4075	;# 
  2694   000FEC                     PREINC0         equ	4076	;# 
  2695   000FED                     POSTDEC0        equ	4077	;# 
  2696   000FEE                     POSTINC0        equ	4078	;# 
  2697   000FEF                     INDF0           equ	4079	;# 
  2698   000FF0                     INTCON3         equ	4080	;# 
  2699   000FF1                     INTCON2         equ	4081	;# 
  2700   000FF2                     INTCON          equ	4082	;# 
  2701   000FF3                     PROD            equ	4083	;# 
  2702   000FF3                     PRODL           equ	4083	;# 
  2703   000FF4                     PRODH           equ	4084	;# 
  2704   000FF5                     TABLAT          equ	4085	;# 
  2705   000FF6                     TBLPTR          equ	4086	;# 
  2706   000FF6                     TBLPTRL         equ	4086	;# 
  2707   000FF7                     TBLPTRH         equ	4087	;# 
  2708   000FF8                     TBLPTRU         equ	4088	;# 
  2709   000FF9                     PCLAT           equ	4089	;# 
  2710   000FF9                     PC              equ	4089	;# 
  2711   000FF9                     PCL             equ	4089	;# 
  2712   000FFA                     PCLATH          equ	4090	;# 
  2713   000FFB                     PCLATU          equ	4091	;# 
  2714   000FFC                     STKPTR          equ	4092	;# 
  2715   000FFD                     TOS             equ	4093	;# 
  2716   000FFD                     TOSL            equ	4093	;# 
  2717   000FFE                     TOSH            equ	4094	;# 
  2718   000FFF                     TOSU            equ	4095	;# 
  2719   000F77                     SSPMSK          equ	3959	;# 
  2720   000F78                     SLRCON          equ	3960	;# 
  2721   000F79                     CM2CON1         equ	3961	;# 
  2722   000F7A                     CM2CON0         equ	3962	;# 
  2723   000F7B                     CM1CON0         equ	3963	;# 
  2724   000F7C                     WPUB            equ	3964	;# 
  2725   000F7D                     IOCB            equ	3965	;# 
  2726   000F7E                     ANSEL           equ	3966	;# 
  2727   000F7F                     ANSELH          equ	3967	;# 
  2728   000F80                     PORTA           equ	3968	;# 
  2729   000F81                     PORTB           equ	3969	;# 
  2730   000F82                     PORTC           equ	3970	;# 
  2731   000F83                     PORTD           equ	3971	;# 
  2732   000F84                     PORTE           equ	3972	;# 
  2733   000F89                     LATA            equ	3977	;# 
  2734   000F8A                     LATB            equ	3978	;# 
  2735   000F8B                     LATC            equ	3979	;# 
  2736   000F8C                     LATD            equ	3980	;# 
  2737   000F8D                     LATE            equ	3981	;# 
  2738   000F92                     TRISA           equ	3986	;# 
  2739   000F92                     DDRA            equ	3986	;# 
  2740   000F93                     TRISB           equ	3987	;# 
  2741   000F93                     DDRB            equ	3987	;# 
  2742   000F94                     TRISC           equ	3988	;# 
  2743   000F94                     DDRC            equ	3988	;# 
  2744   000F95                     TRISD           equ	3989	;# 
  2745   000F95                     DDRD            equ	3989	;# 
  2746   000F96                     TRISE           equ	3990	;# 
  2747   000F96                     DDRE            equ	3990	;# 
  2748   000F9B                     OSCTUNE         equ	3995	;# 
  2749   000F9D                     PIE1            equ	3997	;# 
  2750   000F9E                     PIR1            equ	3998	;# 
  2751   000F9F                     IPR1            equ	3999	;# 
  2752   000FA0                     PIE2            equ	4000	;# 
  2753   000FA1                     PIR2            equ	4001	;# 
  2754   000FA2                     IPR2            equ	4002	;# 
  2755   000FA6                     EECON1          equ	4006	;# 
  2756   000FA7                     EECON2          equ	4007	;# 
  2757   000FA8                     EEDATA          equ	4008	;# 
  2758   000FA9                     EEADR           equ	4009	;# 
  2759   000FAA                     EEADRH          equ	4010	;# 
  2760   000FAB                     RCSTA           equ	4011	;# 
  2761   000FAB                     RCSTA1          equ	4011	;# 
  2762   000FAC                     TXSTA           equ	4012	;# 
  2763   000FAC                     TXSTA1          equ	4012	;# 
  2764   000FAD                     TXREG           equ	4013	;# 
  2765   000FAD                     TXREG1          equ	4013	;# 
  2766   000FAE                     RCREG           equ	4014	;# 
  2767   000FAE                     RCREG1          equ	4014	;# 
  2768   000FAF                     SPBRG           equ	4015	;# 
  2769   000FAF                     SPBRG1          equ	4015	;# 
  2770   000FB0                     SPBRGH          equ	4016	;# 
  2771   000FB1                     T3CON           equ	4017	;# 
  2772   000FB2                     TMR3            equ	4018	;# 
  2773   000FB2                     TMR3L           equ	4018	;# 
  2774   000FB3                     TMR3H           equ	4019	;# 
  2775   000FB4                     CVRCON2         equ	4020	;# 
  2776   000FB5                     CVRCON          equ	4021	;# 
  2777   000FB6                     ECCP1AS         equ	4022	;# 
  2778   000FB7                     PWM1CON         equ	4023	;# 
  2779   000FB8                     BAUDCON         equ	4024	;# 
  2780   000FB8                     BAUDCTL         equ	4024	;# 
  2781   000FB9                     PSTRCON         equ	4025	;# 
  2782   000FBA                     CCP2CON         equ	4026	;# 
  2783   000FBB                     CCPR2           equ	4027	;# 
  2784   000FBB                     CCPR2L          equ	4027	;# 
  2785   000FBC                     CCPR2H          equ	4028	;# 
  2786   000FBD                     CCP1CON         equ	4029	;# 
  2787   000FBE                     CCPR1           equ	4030	;# 
  2788   000FBE                     CCPR1L          equ	4030	;# 
  2789   000FBF                     CCPR1H          equ	4031	;# 
  2790   000FC0                     ADCON2          equ	4032	;# 
  2791   000FC1                     ADCON1          equ	4033	;# 
  2792   000FC2                     ADCON0          equ	4034	;# 
  2793   000FC3                     ADRES           equ	4035	;# 
  2794   000FC3                     ADRESL          equ	4035	;# 
  2795   000FC4                     ADRESH          equ	4036	;# 
  2796   000FC5                     SSPCON2         equ	4037	;# 
  2797   000FC6                     SSPCON1         equ	4038	;# 
  2798   000FC7                     SSPSTAT         equ	4039	;# 
  2799   000FC8                     SSPADD          equ	4040	;# 
  2800   000FC9                     SSPBUF          equ	4041	;# 
  2801   000FCA                     T2CON           equ	4042	;# 
  2802   000FCB                     PR2             equ	4043	;# 
  2803   000FCB                     MEMCON          equ	4043	;# 
  2804   000FCC                     TMR2            equ	4044	;# 
  2805   000FCD                     T1CON           equ	4045	;# 
  2806   000FCE                     TMR1            equ	4046	;# 
  2807   000FCE                     TMR1L           equ	4046	;# 
  2808   000FCF                     TMR1H           equ	4047	;# 
  2809   000FD0                     RCON            equ	4048	;# 
  2810   000FD1                     WDTCON          equ	4049	;# 
  2811   000FD2                     HLVDCON         equ	4050	;# 
  2812   000FD2                     LVDCON          equ	4050	;# 
  2813   000FD3                     OSCCON          equ	4051	;# 
  2814   000FD5                     T0CON           equ	4053	;# 
  2815   000FD6                     TMR0            equ	4054	;# 
  2816   000FD6                     TMR0L           equ	4054	;# 
  2817   000FD7                     TMR0H           equ	4055	;# 
  2818   000FD8                     STATUS          equ	4056	;# 
  2819   000FD9                     FSR2            equ	4057	;# 
  2820   000FD9                     FSR2L           equ	4057	;# 
  2821   000FDA                     FSR2H           equ	4058	;# 
  2822   000FDB                     PLUSW2          equ	4059	;# 
  2823   000FDC                     PREINC2         equ	4060	;# 
  2824   000FDD                     POSTDEC2        equ	4061	;# 
  2825   000FDE                     POSTINC2        equ	4062	;# 
  2826   000FDF                     INDF2           equ	4063	;# 
  2827   000FE0                     BSR             equ	4064	;# 
  2828   000FE1                     FSR1            equ	4065	;# 
  2829   000FE1                     FSR1L           equ	4065	;# 
  2830   000FE2                     FSR1H           equ	4066	;# 
  2831   000FE3                     PLUSW1          equ	4067	;# 
  2832   000FE4                     PREINC1         equ	4068	;# 
  2833   000FE5                     POSTDEC1        equ	4069	;# 
  2834   000FE6                     POSTINC1        equ	4070	;# 
  2835   000FE7                     INDF1           equ	4071	;# 
  2836   000FE8                     WREG            equ	4072	;# 
  2837   000FE9                     FSR0            equ	4073	;# 
  2838   000FE9                     FSR0L           equ	4073	;# 
  2839   000FEA                     FSR0H           equ	4074	;# 
  2840   000FEB                     PLUSW0          equ	4075	;# 
  2841   000FEC                     PREINC0         equ	4076	;# 
  2842   000FED                     POSTDEC0        equ	4077	;# 
  2843   000FEE                     POSTINC0        equ	4078	;# 
  2844   000FEF                     INDF0           equ	4079	;# 
  2845   000FF0                     INTCON3         equ	4080	;# 
  2846   000FF1                     INTCON2         equ	4081	;# 
  2847   000FF2                     INTCON          equ	4082	;# 
  2848   000FF3                     PROD            equ	4083	;# 
  2849   000FF3                     PRODL           equ	4083	;# 
  2850   000FF4                     PRODH           equ	4084	;# 
  2851   000FF5                     TABLAT          equ	4085	;# 
  2852   000FF6                     TBLPTR          equ	4086	;# 
  2853   000FF6                     TBLPTRL         equ	4086	;# 
  2854   000FF7                     TBLPTRH         equ	4087	;# 
  2855   000FF8                     TBLPTRU         equ	4088	;# 
  2856   000FF9                     PCLAT           equ	4089	;# 
  2857   000FF9                     PC              equ	4089	;# 
  2858   000FF9                     PCL             equ	4089	;# 
  2859   000FFA                     PCLATH          equ	4090	;# 
  2860   000FFB                     PCLATU          equ	4091	;# 
  2861   000FFC                     STKPTR          equ	4092	;# 
  2862   000FFD                     TOS             equ	4093	;# 
  2863   000FFD                     TOSL            equ	4093	;# 
  2864   000FFE                     TOSH            equ	4094	;# 
  2865   000FFF                     TOSU            equ	4095	;# 
  2866   000F77                     SSPMSK          equ	3959	;# 
  2867   000F78                     SLRCON          equ	3960	;# 
  2868   000F79                     CM2CON1         equ	3961	;# 
  2869   000F7A                     CM2CON0         equ	3962	;# 
  2870   000F7B                     CM1CON0         equ	3963	;# 
  2871   000F7C                     WPUB            equ	3964	;# 
  2872   000F7D                     IOCB            equ	3965	;# 
  2873   000F7E                     ANSEL           equ	3966	;# 
  2874   000F7F                     ANSELH          equ	3967	;# 
  2875   000F80                     PORTA           equ	3968	;# 
  2876   000F81                     PORTB           equ	3969	;# 
  2877   000F82                     PORTC           equ	3970	;# 
  2878   000F83                     PORTD           equ	3971	;# 
  2879   000F84                     PORTE           equ	3972	;# 
  2880   000F89                     LATA            equ	3977	;# 
  2881   000F8A                     LATB            equ	3978	;# 
  2882   000F8B                     LATC            equ	3979	;# 
  2883   000F8C                     LATD            equ	3980	;# 
  2884   000F8D                     LATE            equ	3981	;# 
  2885   000F92                     TRISA           equ	3986	;# 
  2886   000F92                     DDRA            equ	3986	;# 
  2887   000F93                     TRISB           equ	3987	;# 
  2888   000F93                     DDRB            equ	3987	;# 
  2889   000F94                     TRISC           equ	3988	;# 
  2890   000F94                     DDRC            equ	3988	;# 
  2891   000F95                     TRISD           equ	3989	;# 
  2892   000F95                     DDRD            equ	3989	;# 
  2893   000F96                     TRISE           equ	3990	;# 
  2894   000F96                     DDRE            equ	3990	;# 
  2895   000F9B                     OSCTUNE         equ	3995	;# 
  2896   000F9D                     PIE1            equ	3997	;# 
  2897   000F9E                     PIR1            equ	3998	;# 
  2898   000F9F                     IPR1            equ	3999	;# 
  2899   000FA0                     PIE2            equ	4000	;# 
  2900   000FA1                     PIR2            equ	4001	;# 
  2901   000FA2                     IPR2            equ	4002	;# 
  2902   000FA6                     EECON1          equ	4006	;# 
  2903   000FA7                     EECON2          equ	4007	;# 
  2904   000FA8                     EEDATA          equ	4008	;# 
  2905   000FA9                     EEADR           equ	4009	;# 
  2906   000FAA                     EEADRH          equ	4010	;# 
  2907   000FAB                     RCSTA           equ	4011	;# 
  2908   000FAB                     RCSTA1          equ	4011	;# 
  2909   000FAC                     TXSTA           equ	4012	;# 
  2910   000FAC                     TXSTA1          equ	4012	;# 
  2911   000FAD                     TXREG           equ	4013	;# 
  2912   000FAD                     TXREG1          equ	4013	;# 
  2913   000FAE                     RCREG           equ	4014	;# 
  2914   000FAE                     RCREG1          equ	4014	;# 
  2915   000FAF                     SPBRG           equ	4015	;# 
  2916   000FAF                     SPBRG1          equ	4015	;# 
  2917   000FB0                     SPBRGH          equ	4016	;# 
  2918   000FB1                     T3CON           equ	4017	;# 
  2919   000FB2                     TMR3            equ	4018	;# 
  2920   000FB2                     TMR3L           equ	4018	;# 
  2921   000FB3                     TMR3H           equ	4019	;# 
  2922   000FB4                     CVRCON2         equ	4020	;# 
  2923   000FB5                     CVRCON          equ	4021	;# 
  2924   000FB6                     ECCP1AS         equ	4022	;# 
  2925   000FB7                     PWM1CON         equ	4023	;# 
  2926   000FB8                     BAUDCON         equ	4024	;# 
  2927   000FB8                     BAUDCTL         equ	4024	;# 
  2928   000FB9                     PSTRCON         equ	4025	;# 
  2929   000FBA                     CCP2CON         equ	4026	;# 
  2930   000FBB                     CCPR2           equ	4027	;# 
  2931   000FBB                     CCPR2L          equ	4027	;# 
  2932   000FBC                     CCPR2H          equ	4028	;# 
  2933   000FBD                     CCP1CON         equ	4029	;# 
  2934   000FBE                     CCPR1           equ	4030	;# 
  2935   000FBE                     CCPR1L          equ	4030	;# 
  2936   000FBF                     CCPR1H          equ	4031	;# 
  2937   000FC0                     ADCON2          equ	4032	;# 
  2938   000FC1                     ADCON1          equ	4033	;# 
  2939   000FC2                     ADCON0          equ	4034	;# 
  2940   000FC3                     ADRES           equ	4035	;# 
  2941   000FC3                     ADRESL          equ	4035	;# 
  2942   000FC4                     ADRESH          equ	4036	;# 
  2943   000FC5                     SSPCON2         equ	4037	;# 
  2944   000FC6                     SSPCON1         equ	4038	;# 
  2945   000FC7                     SSPSTAT         equ	4039	;# 
  2946   000FC8                     SSPADD          equ	4040	;# 
  2947   000FC9                     SSPBUF          equ	4041	;# 
  2948   000FCA                     T2CON           equ	4042	;# 
  2949   000FCB                     PR2             equ	4043	;# 
  2950   000FCB                     MEMCON          equ	4043	;# 
  2951   000FCC                     TMR2            equ	4044	;# 
  2952   000FCD                     T1CON           equ	4045	;# 
  2953   000FCE                     TMR1            equ	4046	;# 
  2954   000FCE                     TMR1L           equ	4046	;# 
  2955   000FCF                     TMR1H           equ	4047	;# 
  2956   000FD0                     RCON            equ	4048	;# 
  2957   000FD1                     WDTCON          equ	4049	;# 
  2958   000FD2                     HLVDCON         equ	4050	;# 
  2959   000FD2                     LVDCON          equ	4050	;# 
  2960   000FD3                     OSCCON          equ	4051	;# 
  2961   000FD5                     T0CON           equ	4053	;# 
  2962   000FD6                     TMR0            equ	4054	;# 
  2963   000FD6                     TMR0L           equ	4054	;# 
  2964   000FD7                     TMR0H           equ	4055	;# 
  2965   000FD8                     STATUS          equ	4056	;# 
  2966   000FD9                     FSR2            equ	4057	;# 
  2967   000FD9                     FSR2L           equ	4057	;# 
  2968   000FDA                     FSR2H           equ	4058	;# 
  2969   000FDB                     PLUSW2          equ	4059	;# 
  2970   000FDC                     PREINC2         equ	4060	;# 
  2971   000FDD                     POSTDEC2        equ	4061	;# 
  2972   000FDE                     POSTINC2        equ	4062	;# 
  2973   000FDF                     INDF2           equ	4063	;# 
  2974   000FE0                     BSR             equ	4064	;# 
  2975   000FE1                     FSR1            equ	4065	;# 
  2976   000FE1                     FSR1L           equ	4065	;# 
  2977   000FE2                     FSR1H           equ	4066	;# 
  2978   000FE3                     PLUSW1          equ	4067	;# 
  2979   000FE4                     PREINC1         equ	4068	;# 
  2980   000FE5                     POSTDEC1        equ	4069	;# 
  2981   000FE6                     POSTINC1        equ	4070	;# 
  2982   000FE7                     INDF1           equ	4071	;# 
  2983   000FE8                     WREG            equ	4072	;# 
  2984   000FE9                     FSR0            equ	4073	;# 
  2985   000FE9                     FSR0L           equ	4073	;# 
  2986   000FEA                     FSR0H           equ	4074	;# 
  2987   000FEB                     PLUSW0          equ	4075	;# 
  2988   000FEC                     PREINC0         equ	4076	;# 
  2989   000FED                     POSTDEC0        equ	4077	;# 
  2990   000FEE                     POSTINC0        equ	4078	;# 
  2991   000FEF                     INDF0           equ	4079	;# 
  2992   000FF0                     INTCON3         equ	4080	;# 
  2993   000FF1                     INTCON2         equ	4081	;# 
  2994   000FF2                     INTCON          equ	4082	;# 
  2995   000FF3                     PROD            equ	4083	;# 
  2996   000FF3                     PRODL           equ	4083	;# 
  2997   000FF4                     PRODH           equ	4084	;# 
  2998   000FF5                     TABLAT          equ	4085	;# 
  2999   000FF6                     TBLPTR          equ	4086	;# 
  3000   000FF6                     TBLPTRL         equ	4086	;# 
  3001   000FF7                     TBLPTRH         equ	4087	;# 
  3002   000FF8                     TBLPTRU         equ	4088	;# 
  3003   000FF9                     PCLAT           equ	4089	;# 
  3004   000FF9                     PC              equ	4089	;# 
  3005   000FF9                     PCL             equ	4089	;# 
  3006   000FFA                     PCLATH          equ	4090	;# 
  3007   000FFB                     PCLATU          equ	4091	;# 
  3008   000FFC                     STKPTR          equ	4092	;# 
  3009   000FFD                     TOS             equ	4093	;# 
  3010   000FFD                     TOSL            equ	4093	;# 
  3011   000FFE                     TOSH            equ	4094	;# 
  3012   000FFF                     TOSU            equ	4095	;# 
  3013   000F77                     SSPMSK          equ	3959	;# 
  3014   000F78                     SLRCON          equ	3960	;# 
  3015   000F79                     CM2CON1         equ	3961	;# 
  3016   000F7A                     CM2CON0         equ	3962	;# 
  3017   000F7B                     CM1CON0         equ	3963	;# 
  3018   000F7C                     WPUB            equ	3964	;# 
  3019   000F7D                     IOCB            equ	3965	;# 
  3020   000F7E                     ANSEL           equ	3966	;# 
  3021   000F7F                     ANSELH          equ	3967	;# 
  3022   000F80                     PORTA           equ	3968	;# 
  3023   000F81                     PORTB           equ	3969	;# 
  3024   000F82                     PORTC           equ	3970	;# 
  3025   000F83                     PORTD           equ	3971	;# 
  3026   000F84                     PORTE           equ	3972	;# 
  3027   000F89                     LATA            equ	3977	;# 
  3028   000F8A                     LATB            equ	3978	;# 
  3029   000F8B                     LATC            equ	3979	;# 
  3030   000F8C                     LATD            equ	3980	;# 
  3031   000F8D                     LATE            equ	3981	;# 
  3032   000F92                     TRISA           equ	3986	;# 
  3033   000F92                     DDRA            equ	3986	;# 
  3034   000F93                     TRISB           equ	3987	;# 
  3035   000F93                     DDRB            equ	3987	;# 
  3036   000F94                     TRISC           equ	3988	;# 
  3037   000F94                     DDRC            equ	3988	;# 
  3038   000F95                     TRISD           equ	3989	;# 
  3039   000F95                     DDRD            equ	3989	;# 
  3040   000F96                     TRISE           equ	3990	;# 
  3041   000F96                     DDRE            equ	3990	;# 
  3042   000F9B                     OSCTUNE         equ	3995	;# 
  3043   000F9D                     PIE1            equ	3997	;# 
  3044   000F9E                     PIR1            equ	3998	;# 
  3045   000F9F                     IPR1            equ	3999	;# 
  3046   000FA0                     PIE2            equ	4000	;# 
  3047   000FA1                     PIR2            equ	4001	;# 
  3048   000FA2                     IPR2            equ	4002	;# 
  3049   000FA6                     EECON1          equ	4006	;# 
  3050   000FA7                     EECON2          equ	4007	;# 
  3051   000FA8                     EEDATA          equ	4008	;# 
  3052   000FA9                     EEADR           equ	4009	;# 
  3053   000FAA                     EEADRH          equ	4010	;# 
  3054   000FAB                     RCSTA           equ	4011	;# 
  3055   000FAB                     RCSTA1          equ	4011	;# 
  3056   000FAC                     TXSTA           equ	4012	;# 
  3057   000FAC                     TXSTA1          equ	4012	;# 
  3058   000FAD                     TXREG           equ	4013	;# 
  3059   000FAD                     TXREG1          equ	4013	;# 
  3060   000FAE                     RCREG           equ	4014	;# 
  3061   000FAE                     RCREG1          equ	4014	;# 
  3062   000FAF                     SPBRG           equ	4015	;# 
  3063   000FAF                     SPBRG1          equ	4015	;# 
  3064   000FB0                     SPBRGH          equ	4016	;# 
  3065   000FB1                     T3CON           equ	4017	;# 
  3066   000FB2                     TMR3            equ	4018	;# 
  3067   000FB2                     TMR3L           equ	4018	;# 
  3068   000FB3                     TMR3H           equ	4019	;# 
  3069   000FB4                     CVRCON2         equ	4020	;# 
  3070   000FB5                     CVRCON          equ	4021	;# 
  3071   000FB6                     ECCP1AS         equ	4022	;# 
  3072   000FB7                     PWM1CON         equ	4023	;# 
  3073   000FB8                     BAUDCON         equ	4024	;# 
  3074   000FB8                     BAUDCTL         equ	4024	;# 
  3075   000FB9                     PSTRCON         equ	4025	;# 
  3076   000FBA                     CCP2CON         equ	4026	;# 
  3077   000FBB                     CCPR2           equ	4027	;# 
  3078   000FBB                     CCPR2L          equ	4027	;# 
  3079   000FBC                     CCPR2H          equ	4028	;# 
  3080   000FBD                     CCP1CON         equ	4029	;# 
  3081   000FBE                     CCPR1           equ	4030	;# 
  3082   000FBE                     CCPR1L          equ	4030	;# 
  3083   000FBF                     CCPR1H          equ	4031	;# 
  3084   000FC0                     ADCON2          equ	4032	;# 
  3085   000FC1                     ADCON1          equ	4033	;# 
  3086   000FC2                     ADCON0          equ	4034	;# 
  3087   000FC3                     ADRES           equ	4035	;# 
  3088   000FC3                     ADRESL          equ	4035	;# 
  3089   000FC4                     ADRESH          equ	4036	;# 
  3090   000FC5                     SSPCON2         equ	4037	;# 
  3091   000FC6                     SSPCON1         equ	4038	;# 
  3092   000FC7                     SSPSTAT         equ	4039	;# 
  3093   000FC8                     SSPADD          equ	4040	;# 
  3094   000FC9                     SSPBUF          equ	4041	;# 
  3095   000FCA                     T2CON           equ	4042	;# 
  3096   000FCB                     PR2             equ	4043	;# 
  3097   000FCB                     MEMCON          equ	4043	;# 
  3098   000FCC                     TMR2            equ	4044	;# 
  3099   000FCD                     T1CON           equ	4045	;# 
  3100   000FCE                     TMR1            equ	4046	;# 
  3101   000FCE                     TMR1L           equ	4046	;# 
  3102   000FCF                     TMR1H           equ	4047	;# 
  3103   000FD0                     RCON            equ	4048	;# 
  3104   000FD1                     WDTCON          equ	4049	;# 
  3105   000FD2                     HLVDCON         equ	4050	;# 
  3106   000FD2                     LVDCON          equ	4050	;# 
  3107   000FD3                     OSCCON          equ	4051	;# 
  3108   000FD5                     T0CON           equ	4053	;# 
  3109   000FD6                     TMR0            equ	4054	;# 
  3110   000FD6                     TMR0L           equ	4054	;# 
  3111   000FD7                     TMR0H           equ	4055	;# 
  3112   000FD8                     STATUS          equ	4056	;# 
  3113   000FD9                     FSR2            equ	4057	;# 
  3114   000FD9                     FSR2L           equ	4057	;# 
  3115   000FDA                     FSR2H           equ	4058	;# 
  3116   000FDB                     PLUSW2          equ	4059	;# 
  3117   000FDC                     PREINC2         equ	4060	;# 
  3118   000FDD                     POSTDEC2        equ	4061	;# 
  3119   000FDE                     POSTINC2        equ	4062	;# 
  3120   000FDF                     INDF2           equ	4063	;# 
  3121   000FE0                     BSR             equ	4064	;# 
  3122   000FE1                     FSR1            equ	4065	;# 
  3123   000FE1                     FSR1L           equ	4065	;# 
  3124   000FE2                     FSR1H           equ	4066	;# 
  3125   000FE3                     PLUSW1          equ	4067	;# 
  3126   000FE4                     PREINC1         equ	4068	;# 
  3127   000FE5                     POSTDEC1        equ	4069	;# 
  3128   000FE6                     POSTINC1        equ	4070	;# 
  3129   000FE7                     INDF1           equ	4071	;# 
  3130   000FE8                     WREG            equ	4072	;# 
  3131   000FE9                     FSR0            equ	4073	;# 
  3132   000FE9                     FSR0L           equ	4073	;# 
  3133   000FEA                     FSR0H           equ	4074	;# 
  3134   000FEB                     PLUSW0          equ	4075	;# 
  3135   000FEC                     PREINC0         equ	4076	;# 
  3136   000FED                     POSTDEC0        equ	4077	;# 
  3137   000FEE                     POSTINC0        equ	4078	;# 
  3138   000FEF                     INDF0           equ	4079	;# 
  3139   000FF0                     INTCON3         equ	4080	;# 
  3140   000FF1                     INTCON2         equ	4081	;# 
  3141   000FF2                     INTCON          equ	4082	;# 
  3142   000FF3                     PROD            equ	4083	;# 
  3143   000FF3                     PRODL           equ	4083	;# 
  3144   000FF4                     PRODH           equ	4084	;# 
  3145   000FF5                     TABLAT          equ	4085	;# 
  3146   000FF6                     TBLPTR          equ	4086	;# 
  3147   000FF6                     TBLPTRL         equ	4086	;# 
  3148   000FF7                     TBLPTRH         equ	4087	;# 
  3149   000FF8                     TBLPTRU         equ	4088	;# 
  3150   000FF9                     PCLAT           equ	4089	;# 
  3151   000FF9                     PC              equ	4089	;# 
  3152   000FF9                     PCL             equ	4089	;# 
  3153   000FFA                     PCLATH          equ	4090	;# 
  3154   000FFB                     PCLATU          equ	4091	;# 
  3155   000FFC                     STKPTR          equ	4092	;# 
  3156   000FFD                     TOS             equ	4093	;# 
  3157   000FFD                     TOSL            equ	4093	;# 
  3158   000FFE                     TOSH            equ	4094	;# 
  3159   000FFF                     TOSU            equ	4095	;# 
  3160   000F77                     SSPMSK          equ	3959	;# 
  3161   000F78                     SLRCON          equ	3960	;# 
  3162   000F79                     CM2CON1         equ	3961	;# 
  3163   000F7A                     CM2CON0         equ	3962	;# 
  3164   000F7B                     CM1CON0         equ	3963	;# 
  3165   000F7C                     WPUB            equ	3964	;# 
  3166   000F7D                     IOCB            equ	3965	;# 
  3167   000F7E                     ANSEL           equ	3966	;# 
  3168   000F7F                     ANSELH          equ	3967	;# 
  3169   000F80                     PORTA           equ	3968	;# 
  3170   000F81                     PORTB           equ	3969	;# 
  3171   000F82                     PORTC           equ	3970	;# 
  3172   000F83                     PORTD           equ	3971	;# 
  3173   000F84                     PORTE           equ	3972	;# 
  3174   000F89                     LATA            equ	3977	;# 
  3175   000F8A                     LATB            equ	3978	;# 
  3176   000F8B                     LATC            equ	3979	;# 
  3177   000F8C                     LATD            equ	3980	;# 
  3178   000F8D                     LATE            equ	3981	;# 
  3179   000F92                     TRISA           equ	3986	;# 
  3180   000F92                     DDRA            equ	3986	;# 
  3181   000F93                     TRISB           equ	3987	;# 
  3182   000F93                     DDRB            equ	3987	;# 
  3183   000F94                     TRISC           equ	3988	;# 
  3184   000F94                     DDRC            equ	3988	;# 
  3185   000F95                     TRISD           equ	3989	;# 
  3186   000F95                     DDRD            equ	3989	;# 
  3187   000F96                     TRISE           equ	3990	;# 
  3188   000F96                     DDRE            equ	3990	;# 
  3189   000F9B                     OSCTUNE         equ	3995	;# 
  3190   000F9D                     PIE1            equ	3997	;# 
  3191   000F9E                     PIR1            equ	3998	;# 
  3192   000F9F                     IPR1            equ	3999	;# 
  3193   000FA0                     PIE2            equ	4000	;# 
  3194   000FA1                     PIR2            equ	4001	;# 
  3195   000FA2                     IPR2            equ	4002	;# 
  3196   000FA6                     EECON1          equ	4006	;# 
  3197   000FA7                     EECON2          equ	4007	;# 
  3198   000FA8                     EEDATA          equ	4008	;# 
  3199   000FA9                     EEADR           equ	4009	;# 
  3200   000FAA                     EEADRH          equ	4010	;# 
  3201   000FAB                     RCSTA           equ	4011	;# 
  3202   000FAB                     RCSTA1          equ	4011	;# 
  3203   000FAC                     TXSTA           equ	4012	;# 
  3204   000FAC                     TXSTA1          equ	4012	;# 
  3205   000FAD                     TXREG           equ	4013	;# 
  3206   000FAD                     TXREG1          equ	4013	;# 
  3207   000FAE                     RCREG           equ	4014	;# 
  3208   000FAE                     RCREG1          equ	4014	;# 
  3209   000FAF                     SPBRG           equ	4015	;# 
  3210   000FAF                     SPBRG1          equ	4015	;# 
  3211   000FB0                     SPBRGH          equ	4016	;# 
  3212   000FB1                     T3CON           equ	4017	;# 
  3213   000FB2                     TMR3            equ	4018	;# 
  3214   000FB2                     TMR3L           equ	4018	;# 
  3215   000FB3                     TMR3H           equ	4019	;# 
  3216   000FB4                     CVRCON2         equ	4020	;# 
  3217   000FB5                     CVRCON          equ	4021	;# 
  3218   000FB6                     ECCP1AS         equ	4022	;# 
  3219   000FB7                     PWM1CON         equ	4023	;# 
  3220   000FB8                     BAUDCON         equ	4024	;# 
  3221   000FB8                     BAUDCTL         equ	4024	;# 
  3222   000FB9                     PSTRCON         equ	4025	;# 
  3223   000FBA                     CCP2CON         equ	4026	;# 
  3224   000FBB                     CCPR2           equ	4027	;# 
  3225   000FBB                     CCPR2L          equ	4027	;# 
  3226   000FBC                     CCPR2H          equ	4028	;# 
  3227   000FBD                     CCP1CON         equ	4029	;# 
  3228   000FBE                     CCPR1           equ	4030	;# 
  3229   000FBE                     CCPR1L          equ	4030	;# 
  3230   000FBF                     CCPR1H          equ	4031	;# 
  3231   000FC0                     ADCON2          equ	4032	;# 
  3232   000FC1                     ADCON1          equ	4033	;# 
  3233   000FC2                     ADCON0          equ	4034	;# 
  3234   000FC3                     ADRES           equ	4035	;# 
  3235   000FC3                     ADRESL          equ	4035	;# 
  3236   000FC4                     ADRESH          equ	4036	;# 
  3237   000FC5                     SSPCON2         equ	4037	;# 
  3238   000FC6                     SSPCON1         equ	4038	;# 
  3239   000FC7                     SSPSTAT         equ	4039	;# 
  3240   000FC8                     SSPADD          equ	4040	;# 
  3241   000FC9                     SSPBUF          equ	4041	;# 
  3242   000FCA                     T2CON           equ	4042	;# 
  3243   000FCB                     PR2             equ	4043	;# 
  3244   000FCB                     MEMCON          equ	4043	;# 
  3245   000FCC                     TMR2            equ	4044	;# 
  3246   000FCD                     T1CON           equ	4045	;# 
  3247   000FCE                     TMR1            equ	4046	;# 
  3248   000FCE                     TMR1L           equ	4046	;# 
  3249   000FCF                     TMR1H           equ	4047	;# 
  3250   000FD0                     RCON            equ	4048	;# 
  3251   000FD1                     WDTCON          equ	4049	;# 
  3252   000FD2                     HLVDCON         equ	4050	;# 
  3253   000FD2                     LVDCON          equ	4050	;# 
  3254   000FD3                     OSCCON          equ	4051	;# 
  3255   000FD5                     T0CON           equ	4053	;# 
  3256   000FD6                     TMR0            equ	4054	;# 
  3257   000FD6                     TMR0L           equ	4054	;# 
  3258   000FD7                     TMR0H           equ	4055	;# 
  3259   000FD8                     STATUS          equ	4056	;# 
  3260   000FD9                     FSR2            equ	4057	;# 
  3261   000FD9                     FSR2L           equ	4057	;# 
  3262   000FDA                     FSR2H           equ	4058	;# 
  3263   000FDB                     PLUSW2          equ	4059	;# 
  3264   000FDC                     PREINC2         equ	4060	;# 
  3265   000FDD                     POSTDEC2        equ	4061	;# 
  3266   000FDE                     POSTINC2        equ	4062	;# 
  3267   000FDF                     INDF2           equ	4063	;# 
  3268   000FE0                     BSR             equ	4064	;# 
  3269   000FE1                     FSR1            equ	4065	;# 
  3270   000FE1                     FSR1L           equ	4065	;# 
  3271   000FE2                     FSR1H           equ	4066	;# 
  3272   000FE3                     PLUSW1          equ	4067	;# 
  3273   000FE4                     PREINC1         equ	4068	;# 
  3274   000FE5                     POSTDEC1        equ	4069	;# 
  3275   000FE6                     POSTINC1        equ	4070	;# 
  3276   000FE7                     INDF1           equ	4071	;# 
  3277   000FE8                     WREG            equ	4072	;# 
  3278   000FE9                     FSR0            equ	4073	;# 
  3279   000FE9                     FSR0L           equ	4073	;# 
  3280   000FEA                     FSR0H           equ	4074	;# 
  3281   000FEB                     PLUSW0          equ	4075	;# 
  3282   000FEC                     PREINC0         equ	4076	;# 
  3283   000FED                     POSTDEC0        equ	4077	;# 
  3284   000FEE                     POSTINC0        equ	4078	;# 
  3285   000FEF                     INDF0           equ	4079	;# 
  3286   000FF0                     INTCON3         equ	4080	;# 
  3287   000FF1                     INTCON2         equ	4081	;# 
  3288   000FF2                     INTCON          equ	4082	;# 
  3289   000FF3                     PROD            equ	4083	;# 
  3290   000FF3                     PRODL           equ	4083	;# 
  3291   000FF4                     PRODH           equ	4084	;# 
  3292   000FF5                     TABLAT          equ	4085	;# 
  3293   000FF6                     TBLPTR          equ	4086	;# 
  3294   000FF6                     TBLPTRL         equ	4086	;# 
  3295   000FF7                     TBLPTRH         equ	4087	;# 
  3296   000FF8                     TBLPTRU         equ	4088	;# 
  3297   000FF9                     PCLAT           equ	4089	;# 
  3298   000FF9                     PC              equ	4089	;# 
  3299   000FF9                     PCL             equ	4089	;# 
  3300   000FFA                     PCLATH          equ	4090	;# 
  3301   000FFB                     PCLATU          equ	4091	;# 
  3302   000FFC                     STKPTR          equ	4092	;# 
  3303   000FFD                     TOS             equ	4093	;# 
  3304   000FFD                     TOSL            equ	4093	;# 
  3305   000FFE                     TOSH            equ	4094	;# 
  3306   000FFF                     TOSU            equ	4095	;# 
  3307   000F77                     SSPMSK          equ	3959	;# 
  3308   000F78                     SLRCON          equ	3960	;# 
  3309   000F79                     CM2CON1         equ	3961	;# 
  3310   000F7A                     CM2CON0         equ	3962	;# 
  3311   000F7B                     CM1CON0         equ	3963	;# 
  3312   000F7C                     WPUB            equ	3964	;# 
  3313   000F7D                     IOCB            equ	3965	;# 
  3314   000F7E                     ANSEL           equ	3966	;# 
  3315   000F7F                     ANSELH          equ	3967	;# 
  3316   000F80                     PORTA           equ	3968	;# 
  3317   000F81                     PORTB           equ	3969	;# 
  3318   000F82                     PORTC           equ	3970	;# 
  3319   000F83                     PORTD           equ	3971	;# 
  3320   000F84                     PORTE           equ	3972	;# 
  3321   000F89                     LATA            equ	3977	;# 
  3322   000F8A                     LATB            equ	3978	;# 
  3323   000F8B                     LATC            equ	3979	;# 
  3324   000F8C                     LATD            equ	3980	;# 
  3325   000F8D                     LATE            equ	3981	;# 
  3326   000F92                     TRISA           equ	3986	;# 
  3327   000F92                     DDRA            equ	3986	;# 
  3328   000F93                     TRISB           equ	3987	;# 
  3329   000F93                     DDRB            equ	3987	;# 
  3330   000F94                     TRISC           equ	3988	;# 
  3331   000F94                     DDRC            equ	3988	;# 
  3332   000F95                     TRISD           equ	3989	;# 
  3333   000F95                     DDRD            equ	3989	;# 
  3334   000F96                     TRISE           equ	3990	;# 
  3335   000F96                     DDRE            equ	3990	;# 
  3336   000F9B                     OSCTUNE         equ	3995	;# 
  3337   000F9D                     PIE1            equ	3997	;# 
  3338   000F9E                     PIR1            equ	3998	;# 
  3339   000F9F                     IPR1            equ	3999	;# 
  3340   000FA0                     PIE2            equ	4000	;# 
  3341   000FA1                     PIR2            equ	4001	;# 
  3342   000FA2                     IPR2            equ	4002	;# 
  3343   000FA6                     EECON1          equ	4006	;# 
  3344   000FA7                     EECON2          equ	4007	;# 
  3345   000FA8                     EEDATA          equ	4008	;# 
  3346   000FA9                     EEADR           equ	4009	;# 
  3347   000FAA                     EEADRH          equ	4010	;# 
  3348   000FAB                     RCSTA           equ	4011	;# 
  3349   000FAB                     RCSTA1          equ	4011	;# 
  3350   000FAC                     TXSTA           equ	4012	;# 
  3351   000FAC                     TXSTA1          equ	4012	;# 
  3352   000FAD                     TXREG           equ	4013	;# 
  3353   000FAD                     TXREG1          equ	4013	;# 
  3354   000FAE                     RCREG           equ	4014	;# 
  3355   000FAE                     RCREG1          equ	4014	;# 
  3356   000FAF                     SPBRG           equ	4015	;# 
  3357   000FAF                     SPBRG1          equ	4015	;# 
  3358   000FB0                     SPBRGH          equ	4016	;# 
  3359   000FB1                     T3CON           equ	4017	;# 
  3360   000FB2                     TMR3            equ	4018	;# 
  3361   000FB2                     TMR3L           equ	4018	;# 
  3362   000FB3                     TMR3H           equ	4019	;# 
  3363   000FB4                     CVRCON2         equ	4020	;# 
  3364   000FB5                     CVRCON          equ	4021	;# 
  3365   000FB6                     ECCP1AS         equ	4022	;# 
  3366   000FB7                     PWM1CON         equ	4023	;# 
  3367   000FB8                     BAUDCON         equ	4024	;# 
  3368   000FB8                     BAUDCTL         equ	4024	;# 
  3369   000FB9                     PSTRCON         equ	4025	;# 
  3370   000FBA                     CCP2CON         equ	4026	;# 
  3371   000FBB                     CCPR2           equ	4027	;# 
  3372   000FBB                     CCPR2L          equ	4027	;# 
  3373   000FBC                     CCPR2H          equ	4028	;# 
  3374   000FBD                     CCP1CON         equ	4029	;# 
  3375   000FBE                     CCPR1           equ	4030	;# 
  3376   000FBE                     CCPR1L          equ	4030	;# 
  3377   000FBF                     CCPR1H          equ	4031	;# 
  3378   000FC0                     ADCON2          equ	4032	;# 
  3379   000FC1                     ADCON1          equ	4033	;# 
  3380   000FC2                     ADCON0          equ	4034	;# 
  3381   000FC3                     ADRES           equ	4035	;# 
  3382   000FC3                     ADRESL          equ	4035	;# 
  3383   000FC4                     ADRESH          equ	4036	;# 
  3384   000FC5                     SSPCON2         equ	4037	;# 
  3385   000FC6                     SSPCON1         equ	4038	;# 
  3386   000FC7                     SSPSTAT         equ	4039	;# 
  3387   000FC8                     SSPADD          equ	4040	;# 
  3388   000FC9                     SSPBUF          equ	4041	;# 
  3389   000FCA                     T2CON           equ	4042	;# 
  3390   000FCB                     PR2             equ	4043	;# 
  3391   000FCB                     MEMCON          equ	4043	;# 
  3392   000FCC                     TMR2            equ	4044	;# 
  3393   000FCD                     T1CON           equ	4045	;# 
  3394   000FCE                     TMR1            equ	4046	;# 
  3395   000FCE                     TMR1L           equ	4046	;# 
  3396   000FCF                     TMR1H           equ	4047	;# 
  3397   000FD0                     RCON            equ	4048	;# 
  3398   000FD1                     WDTCON          equ	4049	;# 
  3399   000FD2                     HLVDCON         equ	4050	;# 
  3400   000FD2                     LVDCON          equ	4050	;# 
  3401   000FD3                     OSCCON          equ	4051	;# 
  3402   000FD5                     T0CON           equ	4053	;# 
  3403   000FD6                     TMR0            equ	4054	;# 
  3404   000FD6                     TMR0L           equ	4054	;# 
  3405   000FD7                     TMR0H           equ	4055	;# 
  3406   000FD8                     STATUS          equ	4056	;# 
  3407   000FD9                     FSR2            equ	4057	;# 
  3408   000FD9                     FSR2L           equ	4057	;# 
  3409   000FDA                     FSR2H           equ	4058	;# 
  3410   000FDB                     PLUSW2          equ	4059	;# 
  3411   000FDC                     PREINC2         equ	4060	;# 
  3412   000FDD                     POSTDEC2        equ	4061	;# 
  3413   000FDE                     POSTINC2        equ	4062	;# 
  3414   000FDF                     INDF2           equ	4063	;# 
  3415   000FE0                     BSR             equ	4064	;# 
  3416   000FE1                     FSR1            equ	4065	;# 
  3417   000FE1                     FSR1L           equ	4065	;# 
  3418   000FE2                     FSR1H           equ	4066	;# 
  3419   000FE3                     PLUSW1          equ	4067	;# 
  3420   000FE4                     PREINC1         equ	4068	;# 
  3421   000FE5                     POSTDEC1        equ	4069	;# 
  3422   000FE6                     POSTINC1        equ	4070	;# 
  3423   000FE7                     INDF1           equ	4071	;# 
  3424   000FE8                     WREG            equ	4072	;# 
  3425   000FE9                     FSR0            equ	4073	;# 
  3426   000FE9                     FSR0L           equ	4073	;# 
  3427   000FEA                     FSR0H           equ	4074	;# 
  3428   000FEB                     PLUSW0          equ	4075	;# 
  3429   000FEC                     PREINC0         equ	4076	;# 
  3430   000FED                     POSTDEC0        equ	4077	;# 
  3431   000FEE                     POSTINC0        equ	4078	;# 
  3432   000FEF                     INDF0           equ	4079	;# 
  3433   000FF0                     INTCON3         equ	4080	;# 
  3434   000FF1                     INTCON2         equ	4081	;# 
  3435   000FF2                     INTCON          equ	4082	;# 
  3436   000FF3                     PROD            equ	4083	;# 
  3437   000FF3                     PRODL           equ	4083	;# 
  3438   000FF4                     PRODH           equ	4084	;# 
  3439   000FF5                     TABLAT          equ	4085	;# 
  3440   000FF6                     TBLPTR          equ	4086	;# 
  3441   000FF6                     TBLPTRL         equ	4086	;# 
  3442   000FF7                     TBLPTRH         equ	4087	;# 
  3443   000FF8                     TBLPTRU         equ	4088	;# 
  3444   000FF9                     PCLAT           equ	4089	;# 
  3445   000FF9                     PC              equ	4089	;# 
  3446   000FF9                     PCL             equ	4089	;# 
  3447   000FFA                     PCLATH          equ	4090	;# 
  3448   000FFB                     PCLATU          equ	4091	;# 
  3449   000FFC                     STKPTR          equ	4092	;# 
  3450   000FFD                     TOS             equ	4093	;# 
  3451   000FFD                     TOSL            equ	4093	;# 
  3452   000FFE                     TOSH            equ	4094	;# 
  3453   000FFF                     TOSU            equ	4095	;# 
  3454   000F77                     SSPMSK          equ	3959	;# 
  3455   000F78                     SLRCON          equ	3960	;# 
  3456   000F79                     CM2CON1         equ	3961	;# 
  3457   000F7A                     CM2CON0         equ	3962	;# 
  3458   000F7B                     CM1CON0         equ	3963	;# 
  3459   000F7C                     WPUB            equ	3964	;# 
  3460   000F7D                     IOCB            equ	3965	;# 
  3461   000F7E                     ANSEL           equ	3966	;# 
  3462   000F7F                     ANSELH          equ	3967	;# 
  3463   000F80                     PORTA           equ	3968	;# 
  3464   000F81                     PORTB           equ	3969	;# 
  3465   000F82                     PORTC           equ	3970	;# 
  3466   000F83                     PORTD           equ	3971	;# 
  3467   000F84                     PORTE           equ	3972	;# 
  3468   000F89                     LATA            equ	3977	;# 
  3469   000F8A                     LATB            equ	3978	;# 
  3470   000F8B                     LATC            equ	3979	;# 
  3471   000F8C                     LATD            equ	3980	;# 
  3472   000F8D                     LATE            equ	3981	;# 
  3473   000F92                     TRISA           equ	3986	;# 
  3474   000F92                     DDRA            equ	3986	;# 
  3475   000F93                     TRISB           equ	3987	;# 
  3476   000F93                     DDRB            equ	3987	;# 
  3477   000F94                     TRISC           equ	3988	;# 
  3478   000F94                     DDRC            equ	3988	;# 
  3479   000F95                     TRISD           equ	3989	;# 
  3480   000F95                     DDRD            equ	3989	;# 
  3481   000F96                     TRISE           equ	3990	;# 
  3482   000F96                     DDRE            equ	3990	;# 
  3483   000F9B                     OSCTUNE         equ	3995	;# 
  3484   000F9D                     PIE1            equ	3997	;# 
  3485   000F9E                     PIR1            equ	3998	;# 
  3486   000F9F                     IPR1            equ	3999	;# 
  3487   000FA0                     PIE2            equ	4000	;# 
  3488   000FA1                     PIR2            equ	4001	;# 
  3489   000FA2                     IPR2            equ	4002	;# 
  3490   000FA6                     EECON1          equ	4006	;# 
  3491   000FA7                     EECON2          equ	4007	;# 
  3492   000FA8                     EEDATA          equ	4008	;# 
  3493   000FA9                     EEADR           equ	4009	;# 
  3494   000FAA                     EEADRH          equ	4010	;# 
  3495   000FAB                     RCSTA           equ	4011	;# 
  3496   000FAB                     RCSTA1          equ	4011	;# 
  3497   000FAC                     TXSTA           equ	4012	;# 
  3498   000FAC                     TXSTA1          equ	4012	;# 
  3499   000FAD                     TXREG           equ	4013	;# 
  3500   000FAD                     TXREG1          equ	4013	;# 
  3501   000FAE                     RCREG           equ	4014	;# 
  3502   000FAE                     RCREG1          equ	4014	;# 
  3503   000FAF                     SPBRG           equ	4015	;# 
  3504   000FAF                     SPBRG1          equ	4015	;# 
  3505   000FB0                     SPBRGH          equ	4016	;# 
  3506   000FB1                     T3CON           equ	4017	;# 
  3507   000FB2                     TMR3            equ	4018	;# 
  3508   000FB2                     TMR3L           equ	4018	;# 
  3509   000FB3                     TMR3H           equ	4019	;# 
  3510   000FB4                     CVRCON2         equ	4020	;# 
  3511   000FB5                     CVRCON          equ	4021	;# 
  3512   000FB6                     ECCP1AS         equ	4022	;# 
  3513   000FB7                     PWM1CON         equ	4023	;# 
  3514   000FB8                     BAUDCON         equ	4024	;# 
  3515   000FB8                     BAUDCTL         equ	4024	;# 
  3516   000FB9                     PSTRCON         equ	4025	;# 
  3517   000FBA                     CCP2CON         equ	4026	;# 
  3518   000FBB                     CCPR2           equ	4027	;# 
  3519   000FBB                     CCPR2L          equ	4027	;# 
  3520   000FBC                     CCPR2H          equ	4028	;# 
  3521   000FBD                     CCP1CON         equ	4029	;# 
  3522   000FBE                     CCPR1           equ	4030	;# 
  3523   000FBE                     CCPR1L          equ	4030	;# 
  3524   000FBF                     CCPR1H          equ	4031	;# 
  3525   000FC0                     ADCON2          equ	4032	;# 
  3526   000FC1                     ADCON1          equ	4033	;# 
  3527   000FC2                     ADCON0          equ	4034	;# 
  3528   000FC3                     ADRES           equ	4035	;# 
  3529   000FC3                     ADRESL          equ	4035	;# 
  3530   000FC4                     ADRESH          equ	4036	;# 
  3531   000FC5                     SSPCON2         equ	4037	;# 
  3532   000FC6                     SSPCON1         equ	4038	;# 
  3533   000FC7                     SSPSTAT         equ	4039	;# 
  3534   000FC8                     SSPADD          equ	4040	;# 
  3535   000FC9                     SSPBUF          equ	4041	;# 
  3536   000FCA                     T2CON           equ	4042	;# 
  3537   000FCB                     PR2             equ	4043	;# 
  3538   000FCB                     MEMCON          equ	4043	;# 
  3539   000FCC                     TMR2            equ	4044	;# 
  3540   000FCD                     T1CON           equ	4045	;# 
  3541   000FCE                     TMR1            equ	4046	;# 
  3542   000FCE                     TMR1L           equ	4046	;# 
  3543   000FCF                     TMR1H           equ	4047	;# 
  3544   000FD0                     RCON            equ	4048	;# 
  3545   000FD1                     WDTCON          equ	4049	;# 
  3546   000FD2                     HLVDCON         equ	4050	;# 
  3547   000FD2                     LVDCON          equ	4050	;# 
  3548   000FD3                     OSCCON          equ	4051	;# 
  3549   000FD5                     T0CON           equ	4053	;# 
  3550   000FD6                     TMR0            equ	4054	;# 
  3551   000FD6                     TMR0L           equ	4054	;# 
  3552   000FD7                     TMR0H           equ	4055	;# 
  3553   000FD8                     STATUS          equ	4056	;# 
  3554   000FD9                     FSR2            equ	4057	;# 
  3555   000FD9                     FSR2L           equ	4057	;# 
  3556   000FDA                     FSR2H           equ	4058	;# 
  3557   000FDB                     PLUSW2          equ	4059	;# 
  3558   000FDC                     PREINC2         equ	4060	;# 
  3559   000FDD                     POSTDEC2        equ	4061	;# 
  3560   000FDE                     POSTINC2        equ	4062	;# 
  3561   000FDF                     INDF2           equ	4063	;# 
  3562   000FE0                     BSR             equ	4064	;# 
  3563   000FE1                     FSR1            equ	4065	;# 
  3564   000FE1                     FSR1L           equ	4065	;# 
  3565   000FE2                     FSR1H           equ	4066	;# 
  3566   000FE3                     PLUSW1          equ	4067	;# 
  3567   000FE4                     PREINC1         equ	4068	;# 
  3568   000FE5                     POSTDEC1        equ	4069	;# 
  3569   000FE6                     POSTINC1        equ	4070	;# 
  3570   000FE7                     INDF1           equ	4071	;# 
  3571   000FE8                     WREG            equ	4072	;# 
  3572   000FE9                     FSR0            equ	4073	;# 
  3573   000FE9                     FSR0L           equ	4073	;# 
  3574   000FEA                     FSR0H           equ	4074	;# 
  3575   000FEB                     PLUSW0          equ	4075	;# 
  3576   000FEC                     PREINC0         equ	4076	;# 
  3577   000FED                     POSTDEC0        equ	4077	;# 
  3578   000FEE                     POSTINC0        equ	4078	;# 
  3579   000FEF                     INDF0           equ	4079	;# 
  3580   000FF0                     INTCON3         equ	4080	;# 
  3581   000FF1                     INTCON2         equ	4081	;# 
  3582   000FF2                     INTCON          equ	4082	;# 
  3583   000FF3                     PROD            equ	4083	;# 
  3584   000FF3                     PRODL           equ	4083	;# 
  3585   000FF4                     PRODH           equ	4084	;# 
  3586   000FF5                     TABLAT          equ	4085	;# 
  3587   000FF6                     TBLPTR          equ	4086	;# 
  3588   000FF6                     TBLPTRL         equ	4086	;# 
  3589   000FF7                     TBLPTRH         equ	4087	;# 
  3590   000FF8                     TBLPTRU         equ	4088	;# 
  3591   000FF9                     PCLAT           equ	4089	;# 
  3592   000FF9                     PC              equ	4089	;# 
  3593   000FF9                     PCL             equ	4089	;# 
  3594   000FFA                     PCLATH          equ	4090	;# 
  3595   000FFB                     PCLATU          equ	4091	;# 
  3596   000FFC                     STKPTR          equ	4092	;# 
  3597   000FFD                     TOS             equ	4093	;# 
  3598   000FFD                     TOSL            equ	4093	;# 
  3599   000FFE                     TOSH            equ	4094	;# 
  3600   000FFF                     TOSU            equ	4095	;# 
  3601   000F77                     SSPMSK          equ	3959	;# 
  3602   000F78                     SLRCON          equ	3960	;# 
  3603   000F79                     CM2CON1         equ	3961	;# 
  3604   000F7A                     CM2CON0         equ	3962	;# 
  3605   000F7B                     CM1CON0         equ	3963	;# 
  3606   000F7C                     WPUB            equ	3964	;# 
  3607   000F7D                     IOCB            equ	3965	;# 
  3608   000F7E                     ANSEL           equ	3966	;# 
  3609   000F7F                     ANSELH          equ	3967	;# 
  3610   000F80                     PORTA           equ	3968	;# 
  3611   000F81                     PORTB           equ	3969	;# 
  3612   000F82                     PORTC           equ	3970	;# 
  3613   000F83                     PORTD           equ	3971	;# 
  3614   000F84                     PORTE           equ	3972	;# 
  3615   000F89                     LATA            equ	3977	;# 
  3616   000F8A                     LATB            equ	3978	;# 
  3617   000F8B                     LATC            equ	3979	;# 
  3618   000F8C                     LATD            equ	3980	;# 
  3619   000F8D                     LATE            equ	3981	;# 
  3620   000F92                     TRISA           equ	3986	;# 
  3621   000F92                     DDRA            equ	3986	;# 
  3622   000F93                     TRISB           equ	3987	;# 
  3623   000F93                     DDRB            equ	3987	;# 
  3624   000F94                     TRISC           equ	3988	;# 
  3625   000F94                     DDRC            equ	3988	;# 
  3626   000F95                     TRISD           equ	3989	;# 
  3627   000F95                     DDRD            equ	3989	;# 
  3628   000F96                     TRISE           equ	3990	;# 
  3629   000F96                     DDRE            equ	3990	;# 
  3630   000F9B                     OSCTUNE         equ	3995	;# 
  3631   000F9D                     PIE1            equ	3997	;# 
  3632   000F9E                     PIR1            equ	3998	;# 
  3633   000F9F                     IPR1            equ	3999	;# 
  3634   000FA0                     PIE2            equ	4000	;# 
  3635   000FA1                     PIR2            equ	4001	;# 
  3636   000FA2                     IPR2            equ	4002	;# 
  3637   000FA6                     EECON1          equ	4006	;# 
  3638   000FA7                     EECON2          equ	4007	;# 
  3639   000FA8                     EEDATA          equ	4008	;# 
  3640   000FA9                     EEADR           equ	4009	;# 
  3641   000FAA                     EEADRH          equ	4010	;# 
  3642   000FAB                     RCSTA           equ	4011	;# 
  3643   000FAB                     RCSTA1          equ	4011	;# 
  3644   000FAC                     TXSTA           equ	4012	;# 
  3645   000FAC                     TXSTA1          equ	4012	;# 
  3646   000FAD                     TXREG           equ	4013	;# 
  3647   000FAD                     TXREG1          equ	4013	;# 
  3648   000FAE                     RCREG           equ	4014	;# 
  3649   000FAE                     RCREG1          equ	4014	;# 
  3650   000FAF                     SPBRG           equ	4015	;# 
  3651   000FAF                     SPBRG1          equ	4015	;# 
  3652   000FB0                     SPBRGH          equ	4016	;# 
  3653   000FB1                     T3CON           equ	4017	;# 
  3654   000FB2                     TMR3            equ	4018	;# 
  3655   000FB2                     TMR3L           equ	4018	;# 
  3656   000FB3                     TMR3H           equ	4019	;# 
  3657   000FB4                     CVRCON2         equ	4020	;# 
  3658   000FB5                     CVRCON          equ	4021	;# 
  3659   000FB6                     ECCP1AS         equ	4022	;# 
  3660   000FB7                     PWM1CON         equ	4023	;# 
  3661   000FB8                     BAUDCON         equ	4024	;# 
  3662   000FB8                     BAUDCTL         equ	4024	;# 
  3663   000FB9                     PSTRCON         equ	4025	;# 
  3664   000FBA                     CCP2CON         equ	4026	;# 
  3665   000FBB                     CCPR2           equ	4027	;# 
  3666   000FBB                     CCPR2L          equ	4027	;# 
  3667   000FBC                     CCPR2H          equ	4028	;# 
  3668   000FBD                     CCP1CON         equ	4029	;# 
  3669   000FBE                     CCPR1           equ	4030	;# 
  3670   000FBE                     CCPR1L          equ	4030	;# 
  3671   000FBF                     CCPR1H          equ	4031	;# 
  3672   000FC0                     ADCON2          equ	4032	;# 
  3673   000FC1                     ADCON1          equ	4033	;# 
  3674   000FC2                     ADCON0          equ	4034	;# 
  3675   000FC3                     ADRES           equ	4035	;# 
  3676   000FC3                     ADRESL          equ	4035	;# 
  3677   000FC4                     ADRESH          equ	4036	;# 
  3678   000FC5                     SSPCON2         equ	4037	;# 
  3679   000FC6                     SSPCON1         equ	4038	;# 
  3680   000FC7                     SSPSTAT         equ	4039	;# 
  3681   000FC8                     SSPADD          equ	4040	;# 
  3682   000FC9                     SSPBUF          equ	4041	;# 
  3683   000FCA                     T2CON           equ	4042	;# 
  3684   000FCB                     PR2             equ	4043	;# 
  3685   000FCB                     MEMCON          equ	4043	;# 
  3686   000FCC                     TMR2            equ	4044	;# 
  3687   000FCD                     T1CON           equ	4045	;# 
  3688   000FCE                     TMR1            equ	4046	;# 
  3689   000FCE                     TMR1L           equ	4046	;# 
  3690   000FCF                     TMR1H           equ	4047	;# 
  3691   000FD0                     RCON            equ	4048	;# 
  3692   000FD1                     WDTCON          equ	4049	;# 
  3693   000FD2                     HLVDCON         equ	4050	;# 
  3694   000FD2                     LVDCON          equ	4050	;# 
  3695   000FD3                     OSCCON          equ	4051	;# 
  3696   000FD5                     T0CON           equ	4053	;# 
  3697   000FD6                     TMR0            equ	4054	;# 
  3698   000FD6                     TMR0L           equ	4054	;# 
  3699   000FD7                     TMR0H           equ	4055	;# 
  3700   000FD8                     STATUS          equ	4056	;# 
  3701   000FD9                     FSR2            equ	4057	;# 
  3702   000FD9                     FSR2L           equ	4057	;# 
  3703   000FDA                     FSR2H           equ	4058	;# 
  3704   000FDB                     PLUSW2          equ	4059	;# 
  3705   000FDC                     PREINC2         equ	4060	;# 
  3706   000FDD                     POSTDEC2        equ	4061	;# 
  3707   000FDE                     POSTINC2        equ	4062	;# 
  3708   000FDF                     INDF2           equ	4063	;# 
  3709   000FE0                     BSR             equ	4064	;# 
  3710   000FE1                     FSR1            equ	4065	;# 
  3711   000FE1                     FSR1L           equ	4065	;# 
  3712   000FE2                     FSR1H           equ	4066	;# 
  3713   000FE3                     PLUSW1          equ	4067	;# 
  3714   000FE4                     PREINC1         equ	4068	;# 
  3715   000FE5                     POSTDEC1        equ	4069	;# 
  3716   000FE6                     POSTINC1        equ	4070	;# 
  3717   000FE7                     INDF1           equ	4071	;# 
  3718   000FE8                     WREG            equ	4072	;# 
  3719   000FE9                     FSR0            equ	4073	;# 
  3720   000FE9                     FSR0L           equ	4073	;# 
  3721   000FEA                     FSR0H           equ	4074	;# 
  3722   000FEB                     PLUSW0          equ	4075	;# 
  3723   000FEC                     PREINC0         equ	4076	;# 
  3724   000FED                     POSTDEC0        equ	4077	;# 
  3725   000FEE                     POSTINC0        equ	4078	;# 
  3726   000FEF                     INDF0           equ	4079	;# 
  3727   000FF0                     INTCON3         equ	4080	;# 
  3728   000FF1                     INTCON2         equ	4081	;# 
  3729   000FF2                     INTCON          equ	4082	;# 
  3730   000FF3                     PROD            equ	4083	;# 
  3731   000FF3                     PRODL           equ	4083	;# 
  3732   000FF4                     PRODH           equ	4084	;# 
  3733   000FF5                     TABLAT          equ	4085	;# 
  3734   000FF6                     TBLPTR          equ	4086	;# 
  3735   000FF6                     TBLPTRL         equ	4086	;# 
  3736   000FF7                     TBLPTRH         equ	4087	;# 
  3737   000FF8                     TBLPTRU         equ	4088	;# 
  3738   000FF9                     PCLAT           equ	4089	;# 
  3739   000FF9                     PC              equ	4089	;# 
  3740   000FF9                     PCL             equ	4089	;# 
  3741   000FFA                     PCLATH          equ	4090	;# 
  3742   000FFB                     PCLATU          equ	4091	;# 
  3743   000FFC                     STKPTR          equ	4092	;# 
  3744   000FFD                     TOS             equ	4093	;# 
  3745   000FFD                     TOSL            equ	4093	;# 
  3746   000FFE                     TOSH            equ	4094	;# 
  3747   000FFF                     TOSU            equ	4095	;# 
  3748   000F77                     SSPMSK          equ	3959	;# 
  3749   000F78                     SLRCON          equ	3960	;# 
  3750   000F79                     CM2CON1         equ	3961	;# 
  3751   000F7A                     CM2CON0         equ	3962	;# 
  3752   000F7B                     CM1CON0         equ	3963	;# 
  3753   000F7C                     WPUB            equ	3964	;# 
  3754   000F7D                     IOCB            equ	3965	;# 
  3755   000F7E                     ANSEL           equ	3966	;# 
  3756   000F7F                     ANSELH          equ	3967	;# 
  3757   000F80                     PORTA           equ	3968	;# 
  3758   000F81                     PORTB           equ	3969	;# 
  3759   000F82                     PORTC           equ	3970	;# 
  3760   000F83                     PORTD           equ	3971	;# 
  3761   000F84                     PORTE           equ	3972	;# 
  3762   000F89                     LATA            equ	3977	;# 
  3763   000F8A                     LATB            equ	3978	;# 
  3764   000F8B                     LATC            equ	3979	;# 
  3765   000F8C                     LATD            equ	3980	;# 
  3766   000F8D                     LATE            equ	3981	;# 
  3767   000F92                     TRISA           equ	3986	;# 
  3768   000F92                     DDRA            equ	3986	;# 
  3769   000F93                     TRISB           equ	3987	;# 
  3770   000F93                     DDRB            equ	3987	;# 
  3771   000F94                     TRISC           equ	3988	;# 
  3772   000F94                     DDRC            equ	3988	;# 
  3773   000F95                     TRISD           equ	3989	;# 
  3774   000F95                     DDRD            equ	3989	;# 
  3775   000F96                     TRISE           equ	3990	;# 
  3776   000F96                     DDRE            equ	3990	;# 
  3777   000F9B                     OSCTUNE         equ	3995	;# 
  3778   000F9D                     PIE1            equ	3997	;# 
  3779   000F9E                     PIR1            equ	3998	;# 
  3780   000F9F                     IPR1            equ	3999	;# 
  3781   000FA0                     PIE2            equ	4000	;# 
  3782   000FA1                     PIR2            equ	4001	;# 
  3783   000FA2                     IPR2            equ	4002	;# 
  3784   000FA6                     EECON1          equ	4006	;# 
  3785   000FA7                     EECON2          equ	4007	;# 
  3786   000FA8                     EEDATA          equ	4008	;# 
  3787   000FA9                     EEADR           equ	4009	;# 
  3788   000FAA                     EEADRH          equ	4010	;# 
  3789   000FAB                     RCSTA           equ	4011	;# 
  3790   000FAB                     RCSTA1          equ	4011	;# 
  3791   000FAC                     TXSTA           equ	4012	;# 
  3792   000FAC                     TXSTA1          equ	4012	;# 
  3793   000FAD                     TXREG           equ	4013	;# 
  3794   000FAD                     TXREG1          equ	4013	;# 
  3795   000FAE                     RCREG           equ	4014	;# 
  3796   000FAE                     RCREG1          equ	4014	;# 
  3797   000FAF                     SPBRG           equ	4015	;# 
  3798   000FAF                     SPBRG1          equ	4015	;# 
  3799   000FB0                     SPBRGH          equ	4016	;# 
  3800   000FB1                     T3CON           equ	4017	;# 
  3801   000FB2                     TMR3            equ	4018	;# 
  3802   000FB2                     TMR3L           equ	4018	;# 
  3803   000FB3                     TMR3H           equ	4019	;# 
  3804   000FB4                     CVRCON2         equ	4020	;# 
  3805   000FB5                     CVRCON          equ	4021	;# 
  3806   000FB6                     ECCP1AS         equ	4022	;# 
  3807   000FB7                     PWM1CON         equ	4023	;# 
  3808   000FB8                     BAUDCON         equ	4024	;# 
  3809   000FB8                     BAUDCTL         equ	4024	;# 
  3810   000FB9                     PSTRCON         equ	4025	;# 
  3811   000FBA                     CCP2CON         equ	4026	;# 
  3812   000FBB                     CCPR2           equ	4027	;# 
  3813   000FBB                     CCPR2L          equ	4027	;# 
  3814   000FBC                     CCPR2H          equ	4028	;# 
  3815   000FBD                     CCP1CON         equ	4029	;# 
  3816   000FBE                     CCPR1           equ	4030	;# 
  3817   000FBE                     CCPR1L          equ	4030	;# 
  3818   000FBF                     CCPR1H          equ	4031	;# 
  3819   000FC0                     ADCON2          equ	4032	;# 
  3820   000FC1                     ADCON1          equ	4033	;# 
  3821   000FC2                     ADCON0          equ	4034	;# 
  3822   000FC3                     ADRES           equ	4035	;# 
  3823   000FC3                     ADRESL          equ	4035	;# 
  3824   000FC4                     ADRESH          equ	4036	;# 
  3825   000FC5                     SSPCON2         equ	4037	;# 
  3826   000FC6                     SSPCON1         equ	4038	;# 
  3827   000FC7                     SSPSTAT         equ	4039	;# 
  3828   000FC8                     SSPADD          equ	4040	;# 
  3829   000FC9                     SSPBUF          equ	4041	;# 
  3830   000FCA                     T2CON           equ	4042	;# 
  3831   000FCB                     PR2             equ	4043	;# 
  3832   000FCB                     MEMCON          equ	4043	;# 
  3833   000FCC                     TMR2            equ	4044	;# 
  3834   000FCD                     T1CON           equ	4045	;# 
  3835   000FCE                     TMR1            equ	4046	;# 
  3836   000FCE                     TMR1L           equ	4046	;# 
  3837   000FCF                     TMR1H           equ	4047	;# 
  3838   000FD0                     RCON            equ	4048	;# 
  3839   000FD1                     WDTCON          equ	4049	;# 
  3840   000FD2                     HLVDCON         equ	4050	;# 
  3841   000FD2                     LVDCON          equ	4050	;# 
  3842   000FD3                     OSCCON          equ	4051	;# 
  3843   000FD5                     T0CON           equ	4053	;# 
  3844   000FD6                     TMR0            equ	4054	;# 
  3845   000FD6                     TMR0L           equ	4054	;# 
  3846   000FD7                     TMR0H           equ	4055	;# 
  3847   000FD8                     STATUS          equ	4056	;# 
  3848   000FD9                     FSR2            equ	4057	;# 
  3849   000FD9                     FSR2L           equ	4057	;# 
  3850   000FDA                     FSR2H           equ	4058	;# 
  3851   000FDB                     PLUSW2          equ	4059	;# 
  3852   000FDC                     PREINC2         equ	4060	;# 
  3853   000FDD                     POSTDEC2        equ	4061	;# 
  3854   000FDE                     POSTINC2        equ	4062	;# 
  3855   000FDF                     INDF2           equ	4063	;# 
  3856   000FE0                     BSR             equ	4064	;# 
  3857   000FE1                     FSR1            equ	4065	;# 
  3858   000FE1                     FSR1L           equ	4065	;# 
  3859   000FE2                     FSR1H           equ	4066	;# 
  3860   000FE3                     PLUSW1          equ	4067	;# 
  3861   000FE4                     PREINC1         equ	4068	;# 
  3862   000FE5                     POSTDEC1        equ	4069	;# 
  3863   000FE6                     POSTINC1        equ	4070	;# 
  3864   000FE7                     INDF1           equ	4071	;# 
  3865   000FE8                     WREG            equ	4072	;# 
  3866   000FE9                     FSR0            equ	4073	;# 
  3867   000FE9                     FSR0L           equ	4073	;# 
  3868   000FEA                     FSR0H           equ	4074	;# 
  3869   000FEB                     PLUSW0          equ	4075	;# 
  3870   000FEC                     PREINC0         equ	4076	;# 
  3871   000FED                     POSTDEC0        equ	4077	;# 
  3872   000FEE                     POSTINC0        equ	4078	;# 
  3873   000FEF                     INDF0           equ	4079	;# 
  3874   000FF0                     INTCON3         equ	4080	;# 
  3875   000FF1                     INTCON2         equ	4081	;# 
  3876   000FF2                     INTCON          equ	4082	;# 
  3877   000FF3                     PROD            equ	4083	;# 
  3878   000FF3                     PRODL           equ	4083	;# 
  3879   000FF4                     PRODH           equ	4084	;# 
  3880   000FF5                     TABLAT          equ	4085	;# 
  3881   000FF6                     TBLPTR          equ	4086	;# 
  3882   000FF6                     TBLPTRL         equ	4086	;# 
  3883   000FF7                     TBLPTRH         equ	4087	;# 
  3884   000FF8                     TBLPTRU         equ	4088	;# 
  3885   000FF9                     PCLAT           equ	4089	;# 
  3886   000FF9                     PC              equ	4089	;# 
  3887   000FF9                     PCL             equ	4089	;# 
  3888   000FFA                     PCLATH          equ	4090	;# 
  3889   000FFB                     PCLATU          equ	4091	;# 
  3890   000FFC                     STKPTR          equ	4092	;# 
  3891   000FFD                     TOS             equ	4093	;# 
  3892   000FFD                     TOSL            equ	4093	;# 
  3893   000FFE                     TOSH            equ	4094	;# 
  3894   000FFF                     TOSU            equ	4095	;# 
  3895   000F77                     SSPMSK          equ	3959	;# 
  3896   000F78                     SLRCON          equ	3960	;# 
  3897   000F79                     CM2CON1         equ	3961	;# 
  3898   000F7A                     CM2CON0         equ	3962	;# 
  3899   000F7B                     CM1CON0         equ	3963	;# 
  3900   000F7C                     WPUB            equ	3964	;# 
  3901   000F7D                     IOCB            equ	3965	;# 
  3902   000F7E                     ANSEL           equ	3966	;# 
  3903   000F7F                     ANSELH          equ	3967	;# 
  3904   000F80                     PORTA           equ	3968	;# 
  3905   000F81                     PORTB           equ	3969	;# 
  3906   000F82                     PORTC           equ	3970	;# 
  3907   000F83                     PORTD           equ	3971	;# 
  3908   000F84                     PORTE           equ	3972	;# 
  3909   000F89                     LATA            equ	3977	;# 
  3910   000F8A                     LATB            equ	3978	;# 
  3911   000F8B                     LATC            equ	3979	;# 
  3912   000F8C                     LATD            equ	3980	;# 
  3913   000F8D                     LATE            equ	3981	;# 
  3914   000F92                     TRISA           equ	3986	;# 
  3915   000F92                     DDRA            equ	3986	;# 
  3916   000F93                     TRISB           equ	3987	;# 
  3917   000F93                     DDRB            equ	3987	;# 
  3918   000F94                     TRISC           equ	3988	;# 
  3919   000F94                     DDRC            equ	3988	;# 
  3920   000F95                     TRISD           equ	3989	;# 
  3921   000F95                     DDRD            equ	3989	;# 
  3922   000F96                     TRISE           equ	3990	;# 
  3923   000F96                     DDRE            equ	3990	;# 
  3924   000F9B                     OSCTUNE         equ	3995	;# 
  3925   000F9D                     PIE1            equ	3997	;# 
  3926   000F9E                     PIR1            equ	3998	;# 
  3927   000F9F                     IPR1            equ	3999	;# 
  3928   000FA0                     PIE2            equ	4000	;# 
  3929   000FA1                     PIR2            equ	4001	;# 
  3930   000FA2                     IPR2            equ	4002	;# 
  3931   000FA6                     EECON1          equ	4006	;# 
  3932   000FA7                     EECON2          equ	4007	;# 
  3933   000FA8                     EEDATA          equ	4008	;# 
  3934   000FA9                     EEADR           equ	4009	;# 
  3935   000FAA                     EEADRH          equ	4010	;# 
  3936   000FAB                     RCSTA           equ	4011	;# 
  3937   000FAB                     RCSTA1          equ	4011	;# 
  3938   000FAC                     TXSTA           equ	4012	;# 
  3939   000FAC                     TXSTA1          equ	4012	;# 
  3940   000FAD                     TXREG           equ	4013	;# 
  3941   000FAD                     TXREG1          equ	4013	;# 
  3942   000FAE                     RCREG           equ	4014	;# 
  3943   000FAE                     RCREG1          equ	4014	;# 
  3944   000FAF                     SPBRG           equ	4015	;# 
  3945   000FAF                     SPBRG1          equ	4015	;# 
  3946   000FB0                     SPBRGH          equ	4016	;# 
  3947   000FB1                     T3CON           equ	4017	;# 
  3948   000FB2                     TMR3            equ	4018	;# 
  3949   000FB2                     TMR3L           equ	4018	;# 
  3950   000FB3                     TMR3H           equ	4019	;# 
  3951   000FB4                     CVRCON2         equ	4020	;# 
  3952   000FB5                     CVRCON          equ	4021	;# 
  3953   000FB6                     ECCP1AS         equ	4022	;# 
  3954   000FB7                     PWM1CON         equ	4023	;# 
  3955   000FB8                     BAUDCON         equ	4024	;# 
  3956   000FB8                     BAUDCTL         equ	4024	;# 
  3957   000FB9                     PSTRCON         equ	4025	;# 
  3958   000FBA                     CCP2CON         equ	4026	;# 
  3959   000FBB                     CCPR2           equ	4027	;# 
  3960   000FBB                     CCPR2L          equ	4027	;# 
  3961   000FBC                     CCPR2H          equ	4028	;# 
  3962   000FBD                     CCP1CON         equ	4029	;# 
  3963   000FBE                     CCPR1           equ	4030	;# 
  3964   000FBE                     CCPR1L          equ	4030	;# 
  3965   000FBF                     CCPR1H          equ	4031	;# 
  3966   000FC0                     ADCON2          equ	4032	;# 
  3967   000FC1                     ADCON1          equ	4033	;# 
  3968   000FC2                     ADCON0          equ	4034	;# 
  3969   000FC3                     ADRES           equ	4035	;# 
  3970   000FC3                     ADRESL          equ	4035	;# 
  3971   000FC4                     ADRESH          equ	4036	;# 
  3972   000FC5                     SSPCON2         equ	4037	;# 
  3973   000FC6                     SSPCON1         equ	4038	;# 
  3974   000FC7                     SSPSTAT         equ	4039	;# 
  3975   000FC8                     SSPADD          equ	4040	;# 
  3976   000FC9                     SSPBUF          equ	4041	;# 
  3977   000FCA                     T2CON           equ	4042	;# 
  3978   000FCB                     PR2             equ	4043	;# 
  3979   000FCB                     MEMCON          equ	4043	;# 
  3980   000FCC                     TMR2            equ	4044	;# 
  3981   000FCD                     T1CON           equ	4045	;# 
  3982   000FCE                     TMR1            equ	4046	;# 
  3983   000FCE                     TMR1L           equ	4046	;# 
  3984   000FCF                     TMR1H           equ	4047	;# 
  3985   000FD0                     RCON            equ	4048	;# 
  3986   000FD1                     WDTCON          equ	4049	;# 
  3987   000FD2                     HLVDCON         equ	4050	;# 
  3988   000FD2                     LVDCON          equ	4050	;# 
  3989   000FD3                     OSCCON          equ	4051	;# 
  3990   000FD5                     T0CON           equ	4053	;# 
  3991   000FD6                     TMR0            equ	4054	;# 
  3992   000FD6                     TMR0L           equ	4054	;# 
  3993   000FD7                     TMR0H           equ	4055	;# 
  3994   000FD8                     STATUS          equ	4056	;# 
  3995   000FD9                     FSR2            equ	4057	;# 
  3996   000FD9                     FSR2L           equ	4057	;# 
  3997   000FDA                     FSR2H           equ	4058	;# 
  3998   000FDB                     PLUSW2          equ	4059	;# 
  3999   000FDC                     PREINC2         equ	4060	;# 
  4000   000FDD                     POSTDEC2        equ	4061	;# 
  4001   000FDE                     POSTINC2        equ	4062	;# 
  4002   000FDF                     INDF2           equ	4063	;# 
  4003   000FE0                     BSR             equ	4064	;# 
  4004   000FE1                     FSR1            equ	4065	;# 
  4005   000FE1                     FSR1L           equ	4065	;# 
  4006   000FE2                     FSR1H           equ	4066	;# 
  4007   000FE3                     PLUSW1          equ	4067	;# 
  4008   000FE4                     PREINC1         equ	4068	;# 
  4009   000FE5                     POSTDEC1        equ	4069	;# 
  4010   000FE6                     POSTINC1        equ	4070	;# 
  4011   000FE7                     INDF1           equ	4071	;# 
  4012   000FE8                     WREG            equ	4072	;# 
  4013   000FE9                     FSR0            equ	4073	;# 
  4014   000FE9                     FSR0L           equ	4073	;# 
  4015   000FEA                     FSR0H           equ	4074	;# 
  4016   000FEB                     PLUSW0          equ	4075	;# 
  4017   000FEC                     PREINC0         equ	4076	;# 
  4018   000FED                     POSTDEC0        equ	4077	;# 
  4019   000FEE                     POSTINC0        equ	4078	;# 
  4020   000FEF                     INDF0           equ	4079	;# 
  4021   000FF0                     INTCON3         equ	4080	;# 
  4022   000FF1                     INTCON2         equ	4081	;# 
  4023   000FF2                     INTCON          equ	4082	;# 
  4024   000FF3                     PROD            equ	4083	;# 
  4025   000FF3                     PRODL           equ	4083	;# 
  4026   000FF4                     PRODH           equ	4084	;# 
  4027   000FF5                     TABLAT          equ	4085	;# 
  4028   000FF6                     TBLPTR          equ	4086	;# 
  4029   000FF6                     TBLPTRL         equ	4086	;# 
  4030   000FF7                     TBLPTRH         equ	4087	;# 
  4031   000FF8                     TBLPTRU         equ	4088	;# 
  4032   000FF9                     PCLAT           equ	4089	;# 
  4033   000FF9                     PC              equ	4089	;# 
  4034   000FF9                     PCL             equ	4089	;# 
  4035   000FFA                     PCLATH          equ	4090	;# 
  4036   000FFB                     PCLATU          equ	4091	;# 
  4037   000FFC                     STKPTR          equ	4092	;# 
  4038   000FFD                     TOS             equ	4093	;# 
  4039   000FFD                     TOSL            equ	4093	;# 
  4040   000FFE                     TOSH            equ	4094	;# 
  4041   000FFF                     TOSU            equ	4095	;# 
  4042   000F77                     SSPMSK          equ	3959	;# 
  4043   000F78                     SLRCON          equ	3960	;# 
  4044   000F79                     CM2CON1         equ	3961	;# 
  4045   000F7A                     CM2CON0         equ	3962	;# 
  4046   000F7B                     CM1CON0         equ	3963	;# 
  4047   000F7C                     WPUB            equ	3964	;# 
  4048   000F7D                     IOCB            equ	3965	;# 
  4049   000F7E                     ANSEL           equ	3966	;# 
  4050   000F7F                     ANSELH          equ	3967	;# 
  4051   000F80                     PORTA           equ	3968	;# 
  4052   000F81                     PORTB           equ	3969	;# 
  4053   000F82                     PORTC           equ	3970	;# 
  4054   000F83                     PORTD           equ	3971	;# 
  4055   000F84                     PORTE           equ	3972	;# 
  4056   000F89                     LATA            equ	3977	;# 
  4057   000F8A                     LATB            equ	3978	;# 
  4058   000F8B                     LATC            equ	3979	;# 
  4059   000F8C                     LATD            equ	3980	;# 
  4060   000F8D                     LATE            equ	3981	;# 
  4061   000F92                     TRISA           equ	3986	;# 
  4062   000F92                     DDRA            equ	3986	;# 
  4063   000F93                     TRISB           equ	3987	;# 
  4064   000F93                     DDRB            equ	3987	;# 
  4065   000F94                     TRISC           equ	3988	;# 
  4066   000F94                     DDRC            equ	3988	;# 
  4067   000F95                     TRISD           equ	3989	;# 
  4068   000F95                     DDRD            equ	3989	;# 
  4069   000F96                     TRISE           equ	3990	;# 
  4070   000F96                     DDRE            equ	3990	;# 
  4071   000F9B                     OSCTUNE         equ	3995	;# 
  4072   000F9D                     PIE1            equ	3997	;# 
  4073   000F9E                     PIR1            equ	3998	;# 
  4074   000F9F                     IPR1            equ	3999	;# 
  4075   000FA0                     PIE2            equ	4000	;# 
  4076   000FA1                     PIR2            equ	4001	;# 
  4077   000FA2                     IPR2            equ	4002	;# 
  4078   000FA6                     EECON1          equ	4006	;# 
  4079   000FA7                     EECON2          equ	4007	;# 
  4080   000FA8                     EEDATA          equ	4008	;# 
  4081   000FA9                     EEADR           equ	4009	;# 
  4082   000FAA                     EEADRH          equ	4010	;# 
  4083   000FAB                     RCSTA           equ	4011	;# 
  4084   000FAB                     RCSTA1          equ	4011	;# 
  4085   000FAC                     TXSTA           equ	4012	;# 
  4086   000FAC                     TXSTA1          equ	4012	;# 
  4087   000FAD                     TXREG           equ	4013	;# 
  4088   000FAD                     TXREG1          equ	4013	;# 
  4089   000FAE                     RCREG           equ	4014	;# 
  4090   000FAE                     RCREG1          equ	4014	;# 
  4091   000FAF                     SPBRG           equ	4015	;# 
  4092   000FAF                     SPBRG1          equ	4015	;# 
  4093   000FB0                     SPBRGH          equ	4016	;# 
  4094   000FB1                     T3CON           equ	4017	;# 
  4095   000FB2                     TMR3            equ	4018	;# 
  4096   000FB2                     TMR3L           equ	4018	;# 
  4097   000FB3                     TMR3H           equ	4019	;# 
  4098   000FB4                     CVRCON2         equ	4020	;# 
  4099   000FB5                     CVRCON          equ	4021	;# 
  4100   000FB6                     ECCP1AS         equ	4022	;# 
  4101   000FB7                     PWM1CON         equ	4023	;# 
  4102   000FB8                     BAUDCON         equ	4024	;# 
  4103   000FB8                     BAUDCTL         equ	4024	;# 
  4104   000FB9                     PSTRCON         equ	4025	;# 
  4105   000FBA                     CCP2CON         equ	4026	;# 
  4106   000FBB                     CCPR2           equ	4027	;# 
  4107   000FBB                     CCPR2L          equ	4027	;# 
  4108   000FBC                     CCPR2H          equ	4028	;# 
  4109   000FBD                     CCP1CON         equ	4029	;# 
  4110   000FBE                     CCPR1           equ	4030	;# 
  4111   000FBE                     CCPR1L          equ	4030	;# 
  4112   000FBF                     CCPR1H          equ	4031	;# 
  4113   000FC0                     ADCON2          equ	4032	;# 
  4114   000FC1                     ADCON1          equ	4033	;# 
  4115   000FC2                     ADCON0          equ	4034	;# 
  4116   000FC3                     ADRES           equ	4035	;# 
  4117   000FC3                     ADRESL          equ	4035	;# 
  4118   000FC4                     ADRESH          equ	4036	;# 
  4119   000FC5                     SSPCON2         equ	4037	;# 
  4120   000FC6                     SSPCON1         equ	4038	;# 
  4121   000FC7                     SSPSTAT         equ	4039	;# 
  4122   000FC8                     SSPADD          equ	4040	;# 
  4123   000FC9                     SSPBUF          equ	4041	;# 
  4124   000FCA                     T2CON           equ	4042	;# 
  4125   000FCB                     PR2             equ	4043	;# 
  4126   000FCB                     MEMCON          equ	4043	;# 
  4127   000FCC                     TMR2            equ	4044	;# 
  4128   000FCD                     T1CON           equ	4045	;# 
  4129   000FCE                     TMR1            equ	4046	;# 
  4130   000FCE                     TMR1L           equ	4046	;# 
  4131   000FCF                     TMR1H           equ	4047	;# 
  4132   000FD0                     RCON            equ	4048	;# 
  4133   000FD1                     WDTCON          equ	4049	;# 
  4134   000FD2                     HLVDCON         equ	4050	;# 
  4135   000FD2                     LVDCON          equ	4050	;# 
  4136   000FD3                     OSCCON          equ	4051	;# 
  4137   000FD5                     T0CON           equ	4053	;# 
  4138   000FD6                     TMR0            equ	4054	;# 
  4139   000FD6                     TMR0L           equ	4054	;# 
  4140   000FD7                     TMR0H           equ	4055	;# 
  4141   000FD8                     STATUS          equ	4056	;# 
  4142   000FD9                     FSR2            equ	4057	;# 
  4143   000FD9                     FSR2L           equ	4057	;# 
  4144   000FDA                     FSR2H           equ	4058	;# 
  4145   000FDB                     PLUSW2          equ	4059	;# 
  4146   000FDC                     PREINC2         equ	4060	;# 
  4147   000FDD                     POSTDEC2        equ	4061	;# 
  4148   000FDE                     POSTINC2        equ	4062	;# 
  4149   000FDF                     INDF2           equ	4063	;# 
  4150   000FE0                     BSR             equ	4064	;# 
  4151   000FE1                     FSR1            equ	4065	;# 
  4152   000FE1                     FSR1L           equ	4065	;# 
  4153   000FE2                     FSR1H           equ	4066	;# 
  4154   000FE3                     PLUSW1          equ	4067	;# 
  4155   000FE4                     PREINC1         equ	4068	;# 
  4156   000FE5                     POSTDEC1        equ	4069	;# 
  4157   000FE6                     POSTINC1        equ	4070	;# 
  4158   000FE7                     INDF1           equ	4071	;# 
  4159   000FE8                     WREG            equ	4072	;# 
  4160   000FE9                     FSR0            equ	4073	;# 
  4161   000FE9                     FSR0L           equ	4073	;# 
  4162   000FEA                     FSR0H           equ	4074	;# 
  4163   000FEB                     PLUSW0          equ	4075	;# 
  4164   000FEC                     PREINC0         equ	4076	;# 
  4165   000FED                     POSTDEC0        equ	4077	;# 
  4166   000FEE                     POSTINC0        equ	4078	;# 
  4167   000FEF                     INDF0           equ	4079	;# 
  4168   000FF0                     INTCON3         equ	4080	;# 
  4169   000FF1                     INTCON2         equ	4081	;# 
  4170   000FF2                     INTCON          equ	4082	;# 
  4171   000FF3                     PROD            equ	4083	;# 
  4172   000FF3                     PRODL           equ	4083	;# 
  4173   000FF4                     PRODH           equ	4084	;# 
  4174   000FF5                     TABLAT          equ	4085	;# 
  4175   000FF6                     TBLPTR          equ	4086	;# 
  4176   000FF6                     TBLPTRL         equ	4086	;# 
  4177   000FF7                     TBLPTRH         equ	4087	;# 
  4178   000FF8                     TBLPTRU         equ	4088	;# 
  4179   000FF9                     PCLAT           equ	4089	;# 
  4180   000FF9                     PC              equ	4089	;# 
  4181   000FF9                     PCL             equ	4089	;# 
  4182   000FFA                     PCLATH          equ	4090	;# 
  4183   000FFB                     PCLATU          equ	4091	;# 
  4184   000FFC                     STKPTR          equ	4092	;# 
  4185   000FFD                     TOS             equ	4093	;# 
  4186   000FFD                     TOSL            equ	4093	;# 
  4187   000FFE                     TOSH            equ	4094	;# 
  4188   000FFF                     TOSU            equ	4095	;# 
  4189   000F77                     SSPMSK          equ	3959	;# 
  4190   000F78                     SLRCON          equ	3960	;# 
  4191   000F79                     CM2CON1         equ	3961	;# 
  4192   000F7A                     CM2CON0         equ	3962	;# 
  4193   000F7B                     CM1CON0         equ	3963	;# 
  4194   000F7C                     WPUB            equ	3964	;# 
  4195   000F7D                     IOCB            equ	3965	;# 
  4196   000F7E                     ANSEL           equ	3966	;# 
  4197   000F7F                     ANSELH          equ	3967	;# 
  4198   000F80                     PORTA           equ	3968	;# 
  4199   000F81                     PORTB           equ	3969	;# 
  4200   000F82                     PORTC           equ	3970	;# 
  4201   000F83                     PORTD           equ	3971	;# 
  4202   000F84                     PORTE           equ	3972	;# 
  4203   000F89                     LATA            equ	3977	;# 
  4204   000F8A                     LATB            equ	3978	;# 
  4205   000F8B                     LATC            equ	3979	;# 
  4206   000F8C                     LATD            equ	3980	;# 
  4207   000F8D                     LATE            equ	3981	;# 
  4208   000F92                     TRISA           equ	3986	;# 
  4209   000F92                     DDRA            equ	3986	;# 
  4210   000F93                     TRISB           equ	3987	;# 
  4211   000F93                     DDRB            equ	3987	;# 
  4212   000F94                     TRISC           equ	3988	;# 
  4213   000F94                     DDRC            equ	3988	;# 
  4214   000F95                     TRISD           equ	3989	;# 
  4215   000F95                     DDRD            equ	3989	;# 
  4216   000F96                     TRISE           equ	3990	;# 
  4217   000F96                     DDRE            equ	3990	;# 
  4218   000F9B                     OSCTUNE         equ	3995	;# 
  4219   000F9D                     PIE1            equ	3997	;# 
  4220   000F9E                     PIR1            equ	3998	;# 
  4221   000F9F                     IPR1            equ	3999	;# 
  4222   000FA0                     PIE2            equ	4000	;# 
  4223   000FA1                     PIR2            equ	4001	;# 
  4224   000FA2                     IPR2            equ	4002	;# 
  4225   000FA6                     EECON1          equ	4006	;# 
  4226   000FA7                     EECON2          equ	4007	;# 
  4227   000FA8                     EEDATA          equ	4008	;# 
  4228   000FA9                     EEADR           equ	4009	;# 
  4229   000FAA                     EEADRH          equ	4010	;# 
  4230   000FAB                     RCSTA           equ	4011	;# 
  4231   000FAB                     RCSTA1          equ	4011	;# 
  4232   000FAC                     TXSTA           equ	4012	;# 
  4233   000FAC                     TXSTA1          equ	4012	;# 
  4234   000FAD                     TXREG           equ	4013	;# 
  4235   000FAD                     TXREG1          equ	4013	;# 
  4236   000FAE                     RCREG           equ	4014	;# 
  4237   000FAE                     RCREG1          equ	4014	;# 
  4238   000FAF                     SPBRG           equ	4015	;# 
  4239   000FAF                     SPBRG1          equ	4015	;# 
  4240   000FB0                     SPBRGH          equ	4016	;# 
  4241   000FB1                     T3CON           equ	4017	;# 
  4242   000FB2                     TMR3            equ	4018	;# 
  4243   000FB2                     TMR3L           equ	4018	;# 
  4244   000FB3                     TMR3H           equ	4019	;# 
  4245   000FB4                     CVRCON2         equ	4020	;# 
  4246   000FB5                     CVRCON          equ	4021	;# 
  4247   000FB6                     ECCP1AS         equ	4022	;# 
  4248   000FB7                     PWM1CON         equ	4023	;# 
  4249   000FB8                     BAUDCON         equ	4024	;# 
  4250   000FB8                     BAUDCTL         equ	4024	;# 
  4251   000FB9                     PSTRCON         equ	4025	;# 
  4252   000FBA                     CCP2CON         equ	4026	;# 
  4253   000FBB                     CCPR2           equ	4027	;# 
  4254   000FBB                     CCPR2L          equ	4027	;# 
  4255   000FBC                     CCPR2H          equ	4028	;# 
  4256   000FBD                     CCP1CON         equ	4029	;# 
  4257   000FBE                     CCPR1           equ	4030	;# 
  4258   000FBE                     CCPR1L          equ	4030	;# 
  4259   000FBF                     CCPR1H          equ	4031	;# 
  4260   000FC0                     ADCON2          equ	4032	;# 
  4261   000FC1                     ADCON1          equ	4033	;# 
  4262   000FC2                     ADCON0          equ	4034	;# 
  4263   000FC3                     ADRES           equ	4035	;# 
  4264   000FC3                     ADRESL          equ	4035	;# 
  4265   000FC4                     ADRESH          equ	4036	;# 
  4266   000FC5                     SSPCON2         equ	4037	;# 
  4267   000FC6                     SSPCON1         equ	4038	;# 
  4268   000FC7                     SSPSTAT         equ	4039	;# 
  4269   000FC8                     SSPADD          equ	4040	;# 
  4270   000FC9                     SSPBUF          equ	4041	;# 
  4271   000FCA                     T2CON           equ	4042	;# 
  4272   000FCB                     PR2             equ	4043	;# 
  4273   000FCB                     MEMCON          equ	4043	;# 
  4274   000FCC                     TMR2            equ	4044	;# 
  4275   000FCD                     T1CON           equ	4045	;# 
  4276   000FCE                     TMR1            equ	4046	;# 
  4277   000FCE                     TMR1L           equ	4046	;# 
  4278   000FCF                     TMR1H           equ	4047	;# 
  4279   000FD0                     RCON            equ	4048	;# 
  4280   000FD1                     WDTCON          equ	4049	;# 
  4281   000FD2                     HLVDCON         equ	4050	;# 
  4282   000FD2                     LVDCON          equ	4050	;# 
  4283   000FD3                     OSCCON          equ	4051	;# 
  4284   000FD5                     T0CON           equ	4053	;# 
  4285   000FD6                     TMR0            equ	4054	;# 
  4286   000FD6                     TMR0L           equ	4054	;# 
  4287   000FD7                     TMR0H           equ	4055	;# 
  4288   000FD8                     STATUS          equ	4056	;# 
  4289   000FD9                     FSR2            equ	4057	;# 
  4290   000FD9                     FSR2L           equ	4057	;# 
  4291   000FDA                     FSR2H           equ	4058	;# 
  4292   000FDB                     PLUSW2          equ	4059	;# 
  4293   000FDC                     PREINC2         equ	4060	;# 
  4294   000FDD                     POSTDEC2        equ	4061	;# 
  4295   000FDE                     POSTINC2        equ	4062	;# 
  4296   000FDF                     INDF2           equ	4063	;# 
  4297   000FE0                     BSR             equ	4064	;# 
  4298   000FE1                     FSR1            equ	4065	;# 
  4299   000FE1                     FSR1L           equ	4065	;# 
  4300   000FE2                     FSR1H           equ	4066	;# 
  4301   000FE3                     PLUSW1          equ	4067	;# 
  4302   000FE4                     PREINC1         equ	4068	;# 
  4303   000FE5                     POSTDEC1        equ	4069	;# 
  4304   000FE6                     POSTINC1        equ	4070	;# 
  4305   000FE7                     INDF1           equ	4071	;# 
  4306   000FE8                     WREG            equ	4072	;# 
  4307   000FE9                     FSR0            equ	4073	;# 
  4308   000FE9                     FSR0L           equ	4073	;# 
  4309   000FEA                     FSR0H           equ	4074	;# 
  4310   000FEB                     PLUSW0          equ	4075	;# 
  4311   000FEC                     PREINC0         equ	4076	;# 
  4312   000FED                     POSTDEC0        equ	4077	;# 
  4313   000FEE                     POSTINC0        equ	4078	;# 
  4314   000FEF                     INDF0           equ	4079	;# 
  4315   000FF0                     INTCON3         equ	4080	;# 
  4316   000FF1                     INTCON2         equ	4081	;# 
  4317   000FF2                     INTCON          equ	4082	;# 
  4318   000FF3                     PROD            equ	4083	;# 
  4319   000FF3                     PRODL           equ	4083	;# 
  4320   000FF4                     PRODH           equ	4084	;# 
  4321   000FF5                     TABLAT          equ	4085	;# 
  4322   000FF6                     TBLPTR          equ	4086	;# 
  4323   000FF6                     TBLPTRL         equ	4086	;# 
  4324   000FF7                     TBLPTRH         equ	4087	;# 
  4325   000FF8                     TBLPTRU         equ	4088	;# 
  4326   000FF9                     PCLAT           equ	4089	;# 
  4327   000FF9                     PC              equ	4089	;# 
  4328   000FF9                     PCL             equ	4089	;# 
  4329   000FFA                     PCLATH          equ	4090	;# 
  4330   000FFB                     PCLATU          equ	4091	;# 
  4331   000FFC                     STKPTR          equ	4092	;# 
  4332   000FFD                     TOS             equ	4093	;# 
  4333   000FFD                     TOSL            equ	4093	;# 
  4334   000FFE                     TOSH            equ	4094	;# 
  4335   000FFF                     TOSU            equ	4095	;# 
  4336   000F77                     SSPMSK          equ	3959	;# 
  4337   000F78                     SLRCON          equ	3960	;# 
  4338   000F79                     CM2CON1         equ	3961	;# 
  4339   000F7A                     CM2CON0         equ	3962	;# 
  4340   000F7B                     CM1CON0         equ	3963	;# 
  4341   000F7C                     WPUB            equ	3964	;# 
  4342   000F7D                     IOCB            equ	3965	;# 
  4343   000F7E                     ANSEL           equ	3966	;# 
  4344   000F7F                     ANSELH          equ	3967	;# 
  4345   000F80                     PORTA           equ	3968	;# 
  4346   000F81                     PORTB           equ	3969	;# 
  4347   000F82                     PORTC           equ	3970	;# 
  4348   000F83                     PORTD           equ	3971	;# 
  4349   000F84                     PORTE           equ	3972	;# 
  4350   000F89                     LATA            equ	3977	;# 
  4351   000F8A                     LATB            equ	3978	;# 
  4352   000F8B                     LATC            equ	3979	;# 
  4353   000F8C                     LATD            equ	3980	;# 
  4354   000F8D                     LATE            equ	3981	;# 
  4355   000F92                     TRISA           equ	3986	;# 
  4356   000F92                     DDRA            equ	3986	;# 
  4357   000F93                     TRISB           equ	3987	;# 
  4358   000F93                     DDRB            equ	3987	;# 
  4359   000F94                     TRISC           equ	3988	;# 
  4360   000F94                     DDRC            equ	3988	;# 
  4361   000F95                     TRISD           equ	3989	;# 
  4362   000F95                     DDRD            equ	3989	;# 
  4363   000F96                     TRISE           equ	3990	;# 
  4364   000F96                     DDRE            equ	3990	;# 
  4365   000F9B                     OSCTUNE         equ	3995	;# 
  4366   000F9D                     PIE1            equ	3997	;# 
  4367   000F9E                     PIR1            equ	3998	;# 
  4368   000F9F                     IPR1            equ	3999	;# 
  4369   000FA0                     PIE2            equ	4000	;# 
  4370   000FA1                     PIR2            equ	4001	;# 
  4371   000FA2                     IPR2            equ	4002	;# 
  4372   000FA6                     EECON1          equ	4006	;# 
  4373   000FA7                     EECON2          equ	4007	;# 
  4374   000FA8                     EEDATA          equ	4008	;# 
  4375   000FA9                     EEADR           equ	4009	;# 
  4376   000FAA                     EEADRH          equ	4010	;# 
  4377   000FAB                     RCSTA           equ	4011	;# 
  4378   000FAB                     RCSTA1          equ	4011	;# 
  4379   000FAC                     TXSTA           equ	4012	;# 
  4380   000FAC                     TXSTA1          equ	4012	;# 
  4381   000FAD                     TXREG           equ	4013	;# 
  4382   000FAD                     TXREG1          equ	4013	;# 
  4383   000FAE                     RCREG           equ	4014	;# 
  4384   000FAE                     RCREG1          equ	4014	;# 
  4385   000FAF                     SPBRG           equ	4015	;# 
  4386   000FAF                     SPBRG1          equ	4015	;# 
  4387   000FB0                     SPBRGH          equ	4016	;# 
  4388   000FB1                     T3CON           equ	4017	;# 
  4389   000FB2                     TMR3            equ	4018	;# 
  4390   000FB2                     TMR3L           equ	4018	;# 
  4391   000FB3                     TMR3H           equ	4019	;# 
  4392   000FB4                     CVRCON2         equ	4020	;# 
  4393   000FB5                     CVRCON          equ	4021	;# 
  4394   000FB6                     ECCP1AS         equ	4022	;# 
  4395   000FB7                     PWM1CON         equ	4023	;# 
  4396   000FB8                     BAUDCON         equ	4024	;# 
  4397   000FB8                     BAUDCTL         equ	4024	;# 
  4398   000FB9                     PSTRCON         equ	4025	;# 
  4399   000FBA                     CCP2CON         equ	4026	;# 
  4400   000FBB                     CCPR2           equ	4027	;# 
  4401   000FBB                     CCPR2L          equ	4027	;# 
  4402   000FBC                     CCPR2H          equ	4028	;# 
  4403   000FBD                     CCP1CON         equ	4029	;# 
  4404   000FBE                     CCPR1           equ	4030	;# 
  4405   000FBE                     CCPR1L          equ	4030	;# 
  4406   000FBF                     CCPR1H          equ	4031	;# 
  4407   000FC0                     ADCON2          equ	4032	;# 
  4408   000FC1                     ADCON1          equ	4033	;# 
  4409   000FC2                     ADCON0          equ	4034	;# 
  4410   000FC3                     ADRES           equ	4035	;# 
  4411   000FC3                     ADRESL          equ	4035	;# 
  4412   000FC4                     ADRESH          equ	4036	;# 
  4413   000FC5                     SSPCON2         equ	4037	;# 
  4414   000FC6                     SSPCON1         equ	4038	;# 
  4415   000FC7                     SSPSTAT         equ	4039	;# 
  4416   000FC8                     SSPADD          equ	4040	;# 
  4417   000FC9                     SSPBUF          equ	4041	;# 
  4418   000FCA                     T2CON           equ	4042	;# 
  4419   000FCB                     PR2             equ	4043	;# 
  4420   000FCB                     MEMCON          equ	4043	;# 
  4421   000FCC                     TMR2            equ	4044	;# 
  4422   000FCD                     T1CON           equ	4045	;# 
  4423   000FCE                     TMR1            equ	4046	;# 
  4424   000FCE                     TMR1L           equ	4046	;# 
  4425   000FCF                     TMR1H           equ	4047	;# 
  4426   000FD0                     RCON            equ	4048	;# 
  4427   000FD1                     WDTCON          equ	4049	;# 
  4428   000FD2                     HLVDCON         equ	4050	;# 
  4429   000FD2                     LVDCON          equ	4050	;# 
  4430   000FD3                     OSCCON          equ	4051	;# 
  4431   000FD5                     T0CON           equ	4053	;# 
  4432   000FD6                     TMR0            equ	4054	;# 
  4433   000FD6                     TMR0L           equ	4054	;# 
  4434   000FD7                     TMR0H           equ	4055	;# 
  4435   000FD8                     STATUS          equ	4056	;# 
  4436   000FD9                     FSR2            equ	4057	;# 
  4437   000FD9                     FSR2L           equ	4057	;# 
  4438   000FDA                     FSR2H           equ	4058	;# 
  4439   000FDB                     PLUSW2          equ	4059	;# 
  4440   000FDC                     PREINC2         equ	4060	;# 
  4441   000FDD                     POSTDEC2        equ	4061	;# 
  4442   000FDE                     POSTINC2        equ	4062	;# 
  4443   000FDF                     INDF2           equ	4063	;# 
  4444   000FE0                     BSR             equ	4064	;# 
  4445   000FE1                     FSR1            equ	4065	;# 
  4446   000FE1                     FSR1L           equ	4065	;# 
  4447   000FE2                     FSR1H           equ	4066	;# 
  4448   000FE3                     PLUSW1          equ	4067	;# 
  4449   000FE4                     PREINC1         equ	4068	;# 
  4450   000FE5                     POSTDEC1        equ	4069	;# 
  4451   000FE6                     POSTINC1        equ	4070	;# 
  4452   000FE7                     INDF1           equ	4071	;# 
  4453   000FE8                     WREG            equ	4072	;# 
  4454   000FE9                     FSR0            equ	4073	;# 
  4455   000FE9                     FSR0L           equ	4073	;# 
  4456   000FEA                     FSR0H           equ	4074	;# 
  4457   000FEB                     PLUSW0          equ	4075	;# 
  4458   000FEC                     PREINC0         equ	4076	;# 
  4459   000FED                     POSTDEC0        equ	4077	;# 
  4460   000FEE                     POSTINC0        equ	4078	;# 
  4461   000FEF                     INDF0           equ	4079	;# 
  4462   000FF0                     INTCON3         equ	4080	;# 
  4463   000FF1                     INTCON2         equ	4081	;# 
  4464   000FF2                     INTCON          equ	4082	;# 
  4465   000FF3                     PROD            equ	4083	;# 
  4466   000FF3                     PRODL           equ	4083	;# 
  4467   000FF4                     PRODH           equ	4084	;# 
  4468   000FF5                     TABLAT          equ	4085	;# 
  4469   000FF6                     TBLPTR          equ	4086	;# 
  4470   000FF6                     TBLPTRL         equ	4086	;# 
  4471   000FF7                     TBLPTRH         equ	4087	;# 
  4472   000FF8                     TBLPTRU         equ	4088	;# 
  4473   000FF9                     PCLAT           equ	4089	;# 
  4474   000FF9                     PC              equ	4089	;# 
  4475   000FF9                     PCL             equ	4089	;# 
  4476   000FFA                     PCLATH          equ	4090	;# 
  4477   000FFB                     PCLATU          equ	4091	;# 
  4478   000FFC                     STKPTR          equ	4092	;# 
  4479   000FFD                     TOS             equ	4093	;# 
  4480   000FFD                     TOSL            equ	4093	;# 
  4481   000FFE                     TOSH            equ	4094	;# 
  4482   000FFF                     TOSU            equ	4095	;# 
  4483                           
  4484                           	psect	idataCOMRAM
  4485   004AC4                     __pidataCOMRAM:
  4486                           	callstack 0
  4487                           
  4488                           ;initializer for _RB7_Flag
  4489   004AC4  01                 	db	1
  4490                           
  4491                           ;initializer for _RB6_Flag
  4492   004AC5  01                 	db	1
  4493                           
  4494                           ;initializer for _RB5_Flag
  4495   004AC6  01                 	db	1
  4496                           
  4497                           ;initializer for _RB4_Flag
  4498   004AC7  01                 	db	1
  4499                           
  4500                           ;initializer for _curserPos
  4501   004AC8  09                 	db	9
  4502                           
  4503                           ;initializer for _LCD_1
  4504   004AC9  1B                 	db	27
  4505   004ACA  04                 	db	4
  4506   004ACB  23                 	db	35
  4507   004ACC  2B                 	db	43
  4508   004ACD  33                 	db	51
  4509   004ACE  3B                 	db	59
  4510                           
  4511                           	psect	idataBANK1
  4512   0046F8                     __pidataBANK1:
  4513                           	callstack 0
  4514                           
  4515                           ;initializer for _btn_value
  4516   0046F8  37                 	db	55
  4517   0046F9  38                 	db	56
  4518   0046FA  39                 	db	57
  4519   0046FB  2F                 	db	47
  4520   0046FC  34                 	db	52
  4521   0046FD  35                 	db	53
  4522   0046FE  36                 	db	54
  4523   0046FF  2A                 	db	42
  4524   004700  31                 	db	49
  4525   004701  32                 	db	50
  4526   004702  33                 	db	51
  4527   004703  2D                 	db	45
  4528   004704  23                 	db	35
  4529   004705  30                 	db	48
  4530   004706  3D                 	db	61
  4531   004707  2B                 	db	43
  4532                           
  4533                           ;initializer for _port_registers
  4534   004708  80                 	db	128
  4535   004709  81                 	db	129
  4536   00470A  82                 	db	130
  4537   00470B  83                 	db	131
  4538   00470C  84                 	db	132
  4539                           
  4540                           ;initializer for _lat_registers
  4541   00470D  89                 	db	137
  4542   00470E  8A                 	db	138
  4543   00470F  8B                 	db	139
  4544   004710  8C                 	db	140
  4545   004711  8D                 	db	141
  4546                           
  4547                           ;initializer for _tris_registers
  4548   004712  92                 	db	146
  4549   004713  93                 	db	147
  4550   004714  94                 	db	148
  4551   004715  95                 	db	149
  4552   004716  96                 	db	150
  4553                           
  4554                           ;initializer for _UART_obj
  4555   004717  2580               	dw	9600
  4556   004719  0000               	dw	0
  4557   00471B  01                 	db	1
  4558   00471C  00                 	db	0
  4559   00471D  01                 	db	1
  4560   00471E  00                 	db	0
  4561   00471F  00                 	db	0
  4562   004720  00                 	db	0
  4563   004721  00                 	db	0
  4564   004722  00                 	db	0
  4565   004723  00                 	db	0
  4566   004724  00                 	db	0
  4567   004725  00                 	db	0
  4568   004726  00                 	db	0
  4569   004727  00                 	db	0
  4570                           
  4571                           ;initializer for _keypad_1
  4572   004728  02                 	db	2
  4573   004729  0A                 	db	10
  4574   00472A  12                 	db	18
  4575   00472B  2A                 	db	42
  4576   00472C  43                 	db	67
  4577   00472D  4B                 	db	75
  4578   00472E  53                 	db	83
  4579   00472F  00                 	db	0
  4580                           
  4581                           ;initializer for _timer0_1
  4582   004730  5E                 	db	low _Timer0_DefaultInterruptHandler
  4583   004731  34                 	db	high _Timer0_DefaultInterruptHandler
  4584   004732  01                 	db	1
  4585   004733  03                 	db	3
  4586   004734  0BDC               	dw	3036
  4587   004736  04                 	db	4
  4588                           
  4589                           	psect	smallconst
  4590   001000                     __psmallconst:
  4591                           	callstack 0
  4592   001000  00                 	db	0
  4593   001001                     _i2c_fsmStateTable:
  4594                           	callstack 0
  4595   001001  DA                 	db	low _I2C_DO_IDLE
  4596   001002  4A                 	db	high _I2C_DO_IDLE
  4597   001003  70                 	db	low _I2C_DO_SEND_ADR_READ
  4598   001004  4A                 	db	high _I2C_DO_SEND_ADR_READ
  4599   001005  8E                 	db	low _I2C_DO_SEND_ADR_WRITE
  4600   001006  4A                 	db	high _I2C_DO_SEND_ADR_WRITE
  4601   001007  22                 	db	low _I2C_DO_TX
  4602   001008  35                 	db	high _I2C_DO_TX
  4603   001009  0A                 	db	low _I2C_DO_RX
  4604   00100A  38                 	db	high _I2C_DO_RX
  4605   00100B  B8                 	db	low _I2C_DO_RCEN
  4606   00100C  4A                 	db	high _I2C_DO_RCEN
  4607   00100D  C2                 	db	low _I2C_DO_TX_EMPTY
  4608   00100E  3E                 	db	high _I2C_DO_TX_EMPTY
  4609   00100F  2E                 	db	low _I2C_DO_SEND_RESTART_READ
  4610   001010  4B                 	db	high _I2C_DO_SEND_RESTART_READ
  4611   001011  26                 	db	low _I2C_DO_SEND_RESTART_WRITE
  4612   001012  4B                 	db	high _I2C_DO_SEND_RESTART_WRITE
  4613   001013  1E                 	db	low _I2C_DO_SEND_RESTART
  4614   001014  4B                 	db	high _I2C_DO_SEND_RESTART
  4615   001015  16                 	db	low _I2C_DO_SEND_STOP
  4616   001016  4B                 	db	high _I2C_DO_SEND_STOP
  4617   001017  0E                 	db	low _I2C_DO_RX_ACK
  4618   001018  4B                 	db	high _I2C_DO_RX_ACK
  4619   001019  06                 	db	low _I2C_DO_RX_NACK_STOP
  4620   00101A  4B                 	db	high _I2C_DO_RX_NACK_STOP
  4621   00101B  FE                 	db	low _I2C_DO_RX_NACK_RESTART
  4622   00101C  4A                 	db	high _I2C_DO_RX_NACK_RESTART
  4623   00101D  D0                 	db	low _I2C_DO_RESET
  4624   00101E  4A                 	db	high _I2C_DO_RESET
  4625   00101F  A2                 	db	low _I2C_DO_ADDRESS_NACK
  4626   001020  42                 	db	high _I2C_DO_ADDRESS_NACK
  4627   001021                     __end_of_i2c_fsmStateTable:
  4628                           	callstack 0
  4629   001021                     STR_1:
  4630   001021  53                 	db	83	;'S'
  4631   001022  74                 	db	116	;'t'
  4632   001023  6F                 	db	111	;'o'
  4633   001024  70                 	db	112	;'p'
  4634   001025  20                 	db	32
  4635   001026  57                 	db	87	;'W'
  4636   001027  61                 	db	97	;'a'
  4637   001028  74                 	db	116	;'t'
  4638   001029  63                 	db	99	;'c'
  4639   00102A  68                 	db	104	;'h'
  4640   00102B  00                 	db	0
  4641   00102C                     STR_2:
  4642   00102C  31                 	db	49	;'1'
  4643   00102D  3A                 	db	58	;':'
  4644   00102E  20                 	db	32
  4645   00102F  43                 	db	67	;'C'
  4646   001030  6C                 	db	108	;'l'
  4647   001031  6F                 	db	111	;'o'
  4648   001032  63                 	db	99	;'c'
  4649   001033  6B                 	db	107	;'k'
  4650   001034  00                 	db	0
  4651   001035                     STR_3:
  4652   001035  32                 	db	50	;'2'
  4653   001036  3A                 	db	58	;':'
  4654   001037  20                 	db	32
  4655   001038  41                 	db	65	;'A'
  4656   001039  6C                 	db	108	;'l'
  4657   00103A  61                 	db	97	;'a'
  4658   00103B  72                 	db	114	;'r'
  4659   00103C  6D                 	db	109	;'m'
  4660   00103D  00                 	db	0
  4661   00103E                     STR_7:
  4662   00103E  44                 	db	68	;'D'
  4663   00103F  61                 	db	97	;'a'
  4664   001040  74                 	db	116	;'t'
  4665   001041  65                 	db	101	;'e'
  4666   001042  3A                 	db	58	;':'
  4667   001043  20                 	db	32
  4668   001044  00                 	db	0
  4669   001045                     STR_4:
  4670   001045  25                 	db	37
  4671   001046  69                 	db	105	;'i'
  4672   001047  00                 	db	0
  4673   001045                     STR_5           equ	STR_4
  4674   001045                     STR_6           equ	STR_4
  4675   001048  00                 	db	0	; dummy byte at the end
  4676   000003                     __activetblptr  equ	3
  4677                           
  4678                           	psect	nvBANK0
  4679   0000FE                     __pnvBANK0:
  4680                           	callstack 0
  4681   0000FE                     _ret:
  4682                           	callstack 0
  4683   0000FE                     	ds	1
  4684   0000FF                     _NumberPressed:
  4685                           	callstack 0
  4686   0000FF                     	ds	1
  4687   007CA3                     _TRISC3         set	31907
  4688   007C95                     _TRISA5         set	31893
  4689   007CA4                     _TRISC4         set	31908
  4690   007CA5                     _TRISC5         set	31909
  4691   000FAF                     _SPBRG          set	4015
  4692   000FB0                     _SPBRGH         set	4016
  4693   000FB8                     _BAUDCONbits    set	4024
  4694   000FAD                     _TXREG          set	4013
  4695   000FAC                     _TXSTAbits      set	4012
  4696   000FAE                     _RCREG          set	4014
  4697   000FAB                     _RCSTAbits      set	4011
  4698   000FB2                     _TMR3L          set	4018
  4699   000FB3                     _TMR3H          set	4019
  4700   000FCC                     _TMR2           set	4044
  4701   000FCA                     _T2CONbits      set	4042
  4702   000FCE                     _TMR1L          set	4046
  4703   000FCF                     _TMR1H          set	4047
  4704   000FCD                     _T1CONbits      set	4045
  4705   000FD7                     _TMR0H          set	4055
  4706   000FD6                     _TMR0L          set	4054
  4707   000FD5                     _T0CONbits      set	4053
  4708   000F81                     _PORTBbits      set	3969
  4709   000FF0                     _INTCON3bits    set	4080
  4710   000F94                     _TRISCbits      set	3988
  4711   000FA7                     _EECON2         set	4007
  4712   000FA6                     _EECON1bits     set	4006
  4713   000FA8                     _EEDATA         set	4008
  4714   000FA9                     _EEADR          set	4009
  4715   000FAA                     _EEADRH         set	4010
  4716   000FB1                     _T3CONbits      set	4017
  4717   000FBC                     _CCPR2H         set	4028
  4718   000FBB                     _CCPR2L         set	4027
  4719   000FBF                     _CCPR1H         set	4031
  4720   000FBE                     _CCPR1L         set	4030
  4721   000FA0                     _PIE2bits       set	4000
  4722   000FBA                     _CCP2CONbits    set	4026
  4723   000FBD                     _CCP1CONbits    set	4029
  4724   000FC1                     _ADCON1bits     set	4033
  4725   000FC3                     _ADRESL         set	4035
  4726   000FC4                     _ADRESH         set	4036
  4727   000FC0                     _ADCON2bits     set	4032
  4728   000FC2                     _ADCON0bits     set	4034
  4729   000FF2                     _INTCONbits     set	4082
  4730   000FF1                     _INTCON2bits    set	4081
  4731   000F7C                     _WPUB           set	3964
  4732   000F7F                     _ANSELH         set	3967
  4733   000F7E                     _ANSEL          set	3966
  4734   000F9E                     _PIR1bits       set	3998
  4735   000F9D                     _PIE1bits       set	3997
  4736   000FC7                     _SSPSTATbits    set	4039
  4737   000FA1                     _PIR2bits       set	4001
  4738   000FC5                     _SSPCON2bits    set	4037
  4739   000FC9                     _SSPBUF         set	4041
  4740   000FC6                     _SSPCON1bits    set	4038
  4741   000FC8                     _SSPADD         set	4040
  4742   000FC5                     _SSPCON2        set	4037
  4743   000FC6                     _SSPCON1        set	4038
  4744   000FC7                     _SSPSTAT        set	4039
  4745   000F9B                     _OSCTUNE        set	3995
  4746   000FD3                     _OSCCON         set	4051
  4747   000F84                     _PORTE          set	3972
  4748   000F83                     _PORTD          set	3971
  4749   000F82                     _PORTC          set	3970
  4750   000F81                     _PORTB          set	3969
  4751   000F80                     _PORTA          set	3968
  4752   000F95                     _TRISD          set	3989
  4753   000F94                     _TRISC          set	3988
  4754   000F93                     _TRISB          set	3987
  4755   000F92                     _TRISA          set	3986
  4756   000F96                     _TRISE          set	3990
  4757   000F8B                     _LATC           set	3979
  4758   000F8A                     _LATB           set	3978
  4759   000F89                     _LATA           set	3977
  4760   000F8C                     _LATD           set	3980
  4761   000F8D                     _LATE           set	3981
  4762                           
  4763                           ; #config settings
  4764                           
  4765                           	psect	cinit
  4766   004026                     __pcinit:
  4767                           	callstack 0
  4768   004026                     start_initialization:
  4769                           	callstack 0
  4770   004026                     __initialization:
  4771                           	callstack 0
  4772                           
  4773                           ; Initialize objects allocated to BANK1 (63 bytes)
  4774                           ; load TBLPTR registers with __pidataBANK1
  4775   004026  0EF8               	movlw	low __pidataBANK1
  4776   004028  6EF6               	movwf	tblptrl,c
  4777   00402A  0E46               	movlw	high __pidataBANK1
  4778   00402C  6EF7               	movwf	tblptrh,c
  4779   00402E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  4780   004030  6EF8               	movwf	tblptru,c
  4781   004032  EE01  F000         	lfsr	0,__pdataBANK1
  4782   004036  EE10 F03F          	lfsr	1,63
  4783   00403A                     copy_data0:
  4784   00403A  0009               	tblrd		*+
  4785   00403C  CFF5 FFEE          	movff	tablat,postinc0
  4786   004040  50E5               	movf	postdec1,w,c
  4787   004042  50E1               	movf	fsr1l,w,c
  4788   004044  E1FA               	bnz	copy_data0
  4789                           
  4790                           ; Initialize objects allocated to COMRAM (11 bytes)
  4791                           ; load TBLPTR registers with __pidataCOMRAM
  4792   004046  0EC4               	movlw	low __pidataCOMRAM
  4793   004048  6EF6               	movwf	tblptrl,c
  4794   00404A  0E4A               	movlw	high __pidataCOMRAM
  4795   00404C  6EF7               	movwf	tblptrh,c
  4796   00404E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  4797   004050  6EF8               	movwf	tblptru,c
  4798   004052  EE00  F034         	lfsr	0,__pdataCOMRAM
  4799   004056  EE10 F00B          	lfsr	1,11
  4800   00405A                     copy_data1:
  4801   00405A  0009               	tblrd		*+
  4802   00405C  CFF5 FFEE          	movff	tablat,postinc0
  4803   004060  50E5               	movf	postdec1,w,c
  4804   004062  50E1               	movf	fsr1l,w,c
  4805   004064  E1FA               	bnz	copy_data1
  4806                           
  4807                           ; Clear objects allocated to BANK1 (36 bytes)
  4808   004066  EE01  F065         	lfsr	0,__pbssBANK1
  4809   00406A  0E24               	movlw	36
  4810   00406C                     clear_0:
  4811   00406C  6AEE               	clrf	postinc0,c
  4812   00406E  06E8               	decf	wreg,f,c
  4813   004070  E1FD               	bnz	clear_0
  4814                           
  4815                           ; Clear objects allocated to BANK0 (117 bytes)
  4816   004072  EE00  F060         	lfsr	0,__pbssBANK0
  4817   004076  0E75               	movlw	117
  4818   004078                     clear_1:
  4819   004078  6AEE               	clrf	postinc0,c
  4820   00407A  06E8               	decf	wreg,f,c
  4821   00407C  E1FD               	bnz	clear_1
  4822                           
  4823                           ; Clear objects allocated to COMRAM (18 bytes)
  4824   00407E  EE00  F022         	lfsr	0,__pbssCOMRAM
  4825   004082  0E12               	movlw	18
  4826   004084                     clear_2:
  4827   004084  6AEE               	clrf	postinc0,c
  4828   004086  06E8               	decf	wreg,f,c
  4829   004088  E1FD               	bnz	clear_2
  4830   00408A                     end_of_initialization:
  4831                           	callstack 0
  4832   00408A                     __end_of__initialization:
  4833                           	callstack 0
  4834   00408A  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4835   00408C  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4836   00408E  0100               	movlb	0
  4837   004090  EF07  F00D         	goto	_main	;jump to C main() function
  4838                           
  4839                           	psect	bssCOMRAM
  4840   000022                     __pbssCOMRAM:
  4841                           	callstack 0
  4842   000022                     _PWM_Val:
  4843                           	callstack 0
  4844   000022                     	ds	2
  4845   000024                     _CCP1_flag:
  4846                           	callstack 0
  4847   000024                     	ds	1
  4848   000025                     ECU_Relay_turnON@F3467:
  4849                           	callstack 0
  4850   000025                     	ds	1
  4851   000026                     ECU_Relay_Initialize@F3462:
  4852                           	callstack 0
  4853   000026                     	ds	1
  4854   000027                     LED_toggle@F3476:
  4855                           	callstack 0
  4856   000027                     	ds	1
  4857   000028                     LED_turnOFF@F3471:
  4858                           	callstack 0
  4859   000028                     	ds	1
  4860   000029                     LED_turnON@F3466:
  4861                           	callstack 0
  4862   000029                     	ds	1
  4863   00002A                     LED_init@F3461:
  4864                           	callstack 0
  4865   00002A                     	ds	1
  4866   00002B                     _timer2_preload:
  4867                           	callstack 0
  4868   00002B                     	ds	1
  4869   00002C                     _exit_alarm:
  4870                           	callstack 0
  4871   00002C                     	ds	1
  4872   00002D                     _hours:
  4873                           	callstack 0
  4874   00002D                     	ds	1
  4875   00002E                     _minutes:
  4876                           	callstack 0
  4877   00002E                     	ds	1
  4878   00002F                     _seconds:
  4879                           	callstack 0
  4880   00002F                     	ds	1
  4881   000030                     _pinRC7:
  4882                           	callstack 0
  4883   000030                     	ds	1
  4884   000031                     _pinRC6:
  4885                           	callstack 0
  4886   000031                     	ds	1
  4887   000032                     _userInput:
  4888                           	callstack 0
  4889   000032                     	ds	1
  4890   000033                     _nextBack:
  4891                           	callstack 0
  4892   000033                     	ds	1
  4893                           
  4894                           	psect	dataCOMRAM
  4895   000034                     __pdataCOMRAM:
  4896                           	callstack 0
  4897   000034                     _RB7_Flag:
  4898                           	callstack 0
  4899   000034                     	ds	1
  4900   000035                     _RB6_Flag:
  4901                           	callstack 0
  4902   000035                     	ds	1
  4903   000036                     _RB5_Flag:
  4904                           	callstack 0
  4905   000036                     	ds	1
  4906   000037                     _RB4_Flag:
  4907                           	callstack 0
  4908   000037                     	ds	1
  4909   000038                     _curserPos:
  4910                           	callstack 0
  4911   000038                     	ds	1
  4912   000039                     _LCD_1:
  4913                           	callstack 0
  4914   000039                     	ds	6
  4915                           
  4916                           	psect	bssBANK0
  4917   000060                     __pbssBANK0:
  4918                           	callstack 0
  4919   000060                     _I2C_Status:
  4920                           	callstack 0
  4921   000060                     	ds	29
  4922   00007D                     _REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571:
  4923                           	callstack 0
  4924   00007D                     	ds	6
  4925   000083                     _time_array:
  4926                           	callstack 0
  4927   000083                     	ds	6
  4928   000089                     _USART_OVRR_InterruptHandler:
  4929                           	callstack 0
  4930   000089                     	ds	2
  4931   00008B                     _USART_FRE_InterruptHandler:
  4932                           	callstack 0
  4933   00008B                     	ds	2
  4934   00008D                     _USART_RX_InterruptHandler:
  4935                           	callstack 0
  4936   00008D                     	ds	2
  4937   00008F                     _USART_TX_InterruptHandler:
  4938                           	callstack 0
  4939   00008F                     	ds	2
  4940   000091                     _timer3_preload:
  4941                           	callstack 0
  4942   000091                     	ds	2
  4943   000093                     _Timer3_InterruptHandler:
  4944                           	callstack 0
  4945   000093                     	ds	2
  4946   000095                     _Timer2_InterruptHandler:
  4947                           	callstack 0
  4948   000095                     	ds	2
  4949   000097                     _timer1_preload:
  4950                           	callstack 0
  4951   000097                     	ds	2
  4952   000099                     _Timer1_InterruptHandler:
  4953                           	callstack 0
  4954   000099                     	ds	2
  4955   00009B                     _timer0_preload:
  4956                           	callstack 0
  4957   00009B                     	ds	2
  4958   00009D                     _Timer0_InterruptHandler:
  4959                           	callstack 0
  4960   00009D                     	ds	2
  4961   00009F                     _SPI_InterruptHandler:
  4962                           	callstack 0
  4963   00009F                     	ds	2
  4964   0000A1                     _Interrupt_RB7_Handler_LOW:
  4965                           	callstack 0
  4966   0000A1                     	ds	2
  4967   0000A3                     _Interrupt_RB7_Handler_HIGH:
  4968                           	callstack 0
  4969   0000A3                     	ds	2
  4970   0000A5                     _Interrupt_RB6_Handler_LOW:
  4971                           	callstack 0
  4972   0000A5                     	ds	2
  4973   0000A7                     _Interrupt_RB6_Handler_HIGH:
  4974                           	callstack 0
  4975   0000A7                     	ds	2
  4976   0000A9                     _Interrupt_RB5_Handler_LOW:
  4977                           	callstack 0
  4978   0000A9                     	ds	2
  4979   0000AB                     _Interrupt_RB5_Handler_HIGH:
  4980                           	callstack 0
  4981   0000AB                     	ds	2
  4982   0000AD                     _Interrupt_RB4_Handler_LOW:
  4983                           	callstack 0
  4984   0000AD                     	ds	2
  4985   0000AF                     _Interrupt_RB4_Handler_HIGH:
  4986                           	callstack 0
  4987   0000AF                     	ds	2
  4988   0000B1                     _Interrupt_INT2_Handler:
  4989                           	callstack 0
  4990   0000B1                     	ds	2
  4991   0000B3                     _Interrupt_INT1_Handler:
  4992                           	callstack 0
  4993   0000B3                     	ds	2
  4994   0000B5                     _Interrupt_INT0_Handler:
  4995                           	callstack 0
  4996   0000B5                     	ds	2
  4997   0000B7                     _I2C_Report_Write_Collision:
  4998                           	callstack 0
  4999   0000B7                     	ds	2
  5000   0000B9                     _I2C_Report_Receive_OverFlow:
  5001                           	callstack 0
  5002   0000B9                     	ds	2
  5003   0000BB                     _I2C_DefaultInterruptHandler:
  5004                           	callstack 0
  5005   0000BB                     	ds	2
  5006   0000BD                     _CCP2_InterrptHandle:
  5007                           	callstack 0
  5008   0000BD                     	ds	2
  5009   0000BF                     _CCP1_InterrptHandle:
  5010                           	callstack 0
  5011   0000BF                     	ds	2
  5012   0000C1                     _ADC_InterruptHandler:
  5013                           	callstack 0
  5014   0000C1                     	ds	2
  5015   0000C3                     _ret@ecu_servoMotor$F5789:
  5016                           	callstack 0
  5017   0000C3                     	ds	1
  5018   0000C4                     ECU_Relay_toggle@F3477:
  5019                           	callstack 0
  5020   0000C4                     	ds	1
  5021   0000C5                     ECU_Relay_turnOFF@F3472:
  5022                           	callstack 0
  5023   0000C5                     	ds	1
  5024   0000C6                     _SPI_SS:
  5025                           	callstack 0
  5026   0000C6                     	ds	1
  5027   0000C7                     _SPI_SCK:
  5028                           	callstack 0
  5029   0000C7                     	ds	1
  5030   0000C8                     _SPI_SDI:
  5031                           	callstack 0
  5032   0000C8                     	ds	1
  5033   0000C9                     _SPI_SDO:
  5034                           	callstack 0
  5035   0000C9                     	ds	1
  5036   0000CA                     _CCP1_obj:
  5037                           	callstack 0
  5038   0000CA                     	ds	11
  5039                           
  5040                           	psect	bssBANK1
  5041   000165                     __pbssBANK1:
  5042                           	callstack 0
  5043   000165                     	ds	6
  5044   00016B                     _REALTIMECLOCK_DS1307:
  5045                           	callstack 0
  5046   00016B                     	ds	6
  5047   000171                     _REALTIMECLOCK_DS1307_Data:
  5048                           	callstack 0
  5049   000171                     	ds	18
  5050   000183                     _timer1_obj:
  5051                           	callstack 0
  5052   000183                     	ds	6
  5053                           
  5054                           	psect	dataBANK1
  5055   000100                     __pdataBANK1:
  5056                           	callstack 0
  5057   000100                     _btn_value:
  5058                           	callstack 0
  5059   000100                     	ds	16
  5060   000110                     _port_registers:
  5061                           	callstack 0
  5062   000110                     	ds	5
  5063   000115                     _lat_registers:
  5064                           	callstack 0
  5065   000115                     	ds	5
  5066   00011A                     _tris_registers:
  5067                           	callstack 0
  5068   00011A                     	ds	5
  5069   00011F                     _UART_obj:
  5070                           	callstack 0
  5071   00011F                     	ds	17
  5072   000130                     _keypad_1:
  5073                           	callstack 0
  5074   000130                     	ds	8
  5075   000138                     _timer0_1:
  5076                           	callstack 0
  5077   000138                     	ds	7
  5078                           
  5079                           	psect	cstackBANK1
  5080   00013F                     __pcstackBANK1:
  5081                           	callstack 0
  5082   00013F                     ?___fladd:
  5083                           	callstack 0
  5084   00013F                     ___fladd@b:
  5085                           	callstack 0
  5086                           
  5087                           ; 4 bytes @ 0x0
  5088   00013F                     	ds	4
  5089   000143                     ___fladd@a:
  5090                           	callstack 0
  5091                           
  5092                           ; 4 bytes @ 0x4
  5093   000143                     	ds	4
  5094   000147                     ??___fladd:
  5095                           
  5096                           ; 1 bytes @ 0x8
  5097   000147                     	ds	4
  5098   00014B                     ___fladd@signs:
  5099                           	callstack 0
  5100                           
  5101                           ; 1 bytes @ 0xC
  5102   00014B                     	ds	1
  5103   00014C                     ___fladd@aexp:
  5104                           	callstack 0
  5105                           
  5106                           ; 1 bytes @ 0xD
  5107   00014C                     	ds	1
  5108   00014D                     ___fladd@bexp:
  5109                           	callstack 0
  5110                           
  5111                           ; 1 bytes @ 0xE
  5112   00014D                     	ds	1
  5113   00014E                     ___fladd@grs:
  5114                           	callstack 0
  5115                           
  5116                           ; 1 bytes @ 0xF
  5117   00014E                     	ds	1
  5118   00014F                     ??_EUSART_BaudRateCalculation:
  5119                           
  5120                           ; 1 bytes @ 0x10
  5121   00014F                     	ds	2
  5122   000151                     EUSART_BaudRateCalculation@baudrate_Val:
  5123                           	callstack 0
  5124                           
  5125                           ; 4 bytes @ 0x12
  5126   000151                     	ds	4
  5127   000155                     _EUSART_BaudRateCalculation$6910:
  5128                           	callstack 0
  5129                           
  5130                           ; 4 bytes @ 0x16
  5131   000155                     	ds	4
  5132   000159                     EUSART_ASYNC_Init@_EUSART:
  5133                           	callstack 0
  5134                           
  5135                           ; 2 bytes @ 0x1A
  5136   000159                     	ds	2
  5137   00015B                     ?_REALTIMECLOCK_DS1307_print_Data:
  5138                           	callstack 0
  5139                           
  5140                           ; 2 bytes @ 0x1C
  5141   00015B                     	ds	2
  5142   00015D                     ECU_LCD_4Bit_Send_String_Data_Postition@_LCD:
  5143                           	callstack 0
  5144                           
  5145                           ; 1 bytes @ 0x1E
  5146   00015D                     	ds	1
  5147   00015E                     ECU_LCD_4Bit_Send_String_Data_Postition@_Row:
  5148                           	callstack 0
  5149                           
  5150                           ; 1 bytes @ 0x1F
  5151   00015E                     	ds	1
  5152   00015F                     ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn:
  5153                           	callstack 0
  5154                           
  5155                           ; 1 bytes @ 0x20
  5156   00015F                     	ds	1
  5157   000160                     ECU_LCD_4Bit_Send_String_Data_Postition@_Str:
  5158                           	callstack 0
  5159                           
  5160                           ; 2 bytes @ 0x21
  5161   000160                     	ds	2
  5162   000162                     ECU_LCD_4Bit_Send_String_Data_Postition@rt:
  5163                           	callstack 0
  5164                           
  5165                           ; 1 bytes @ 0x23
  5166   000162                     	ds	1
  5167   000163                     ??_main:
  5168                           
  5169                           ; 1 bytes @ 0x24
  5170   000163                     	ds	2
  5171                           
  5172                           	psect	cstackBANK0
  5173   0000D5                     __pcstackBANK0:
  5174                           	callstack 0
  5175   0000D5                     ?___fltol:
  5176                           	callstack 0
  5177   0000D5                     ?___xxtofl:
  5178                           	callstack 0
  5179   0000D5                     I2C_Open@address:
  5180                           	callstack 0
  5181   0000D5                     I2C_Close@returnValue:
  5182                           	callstack 0
  5183   0000D5                     I2C_SetBuffer@buffer:
  5184                           	callstack 0
  5185   0000D5                     I2C_MasterSendTxData@data:
  5186                           	callstack 0
  5187   0000D5                     EUSART_ASYNC_WriteByteBlocking@_Byte:
  5188                           	callstack 0
  5189   0000D5                     I2C_SetCallback@cb:
  5190                           	callstack 0
  5191   0000D5                     gpio_pin_direction_initialize@pinConfig:
  5192                           	callstack 0
  5193   0000D5                     gpio_pin_write_logic@pinConfig:
  5194                           	callstack 0
  5195   0000D5                     gpio_pin_read_logic@pinConfig:
  5196                           	callstack 0
  5197   0000D5                     Timer0_Deinit@_timer0:
  5198                           	callstack 0
  5199   0000D5                     Timer0_Write_Value@_timer0:
  5200                           	callstack 0
  5201   0000D5                     Timer0_Set_Resolution@_timer0:
  5202                           	callstack 0
  5203   0000D5                     Timer0_Set_Mode@_timer0:
  5204                           	callstack 0
  5205   0000D5                     Timer0_Prescaler_Config@_timer0:
  5206                           	callstack 0
  5207   0000D5                     Timer0_Interrupt_Configuration@_timer0:
  5208                           	callstack 0
  5209   0000D5                     EUSART_TX_Init@_EUSART:
  5210                           	callstack 0
  5211   0000D5                     EUSART_RX_Init@_EUSART:
  5212                           	callstack 0
  5213   0000D5                     ___fltol@f1:
  5214                           	callstack 0
  5215   0000D5                     ___xxtofl@val:
  5216                           	callstack 0
  5217   0000D5                     
  5218                           ; 1 bytes @ 0x0
  5219   0000D5                     	ds	1
  5220   0000D6                     I2C_Open@returnValue:
  5221                           	callstack 0
  5222   0000D6                     I2C_SetBuffer@bufferSize:
  5223                           	callstack 0
  5224   0000D6                     EUSART_ASYNC_WriteStringBlocking@_Byte:
  5225                           	callstack 0
  5226   0000D6                     
  5227                           ; 1 bytes @ 0x1
  5228   0000D6                     	ds	1
  5229   0000D7                     I2C_SetCallback@ptr:
  5230                           	callstack 0
  5231   0000D7                     gpio_pin_write_logic@logic:
  5232                           	callstack 0
  5233   0000D7                     gpio_pin_read_logic@logic:
  5234                           	callstack 0
  5235   0000D7                     Timer0_Deinit@ret:
  5236                           	callstack 0
  5237   0000D7                     Timer0_Write_Value@_value:
  5238                           	callstack 0
  5239   0000D7                     ??_Timer0_Prescaler_Config:
  5240   0000D7                     ??_gpio_pin_direction_initialize:
  5241                           
  5242                           ; 1 bytes @ 0x2
  5243   0000D7                     	ds	1
  5244   0000D8                     I2C_SetCallback@idx:
  5245                           	callstack 0
  5246   0000D8                     EUSART_ASYNC_WriteStringBlocking@str_len:
  5247                           	callstack 0
  5248   0000D8                     ??_gpio_pin_write_logic:
  5249   0000D8                     ??_gpio_pin_read_logic:
  5250                           
  5251                           ; 1 bytes @ 0x3
  5252   0000D8                     	ds	1
  5253   0000D9                     gpio_pin_direction_initialize@rt:
  5254                           	callstack 0
  5255   0000D9                     I2C_SetDataCompleteCallback@cb:
  5256                           	callstack 0
  5257   0000D9                     I2C_SetAddressNackCallback@cb:
  5258                           	callstack 0
  5259   0000D9                     Timer0_Init@_timer0:
  5260                           	callstack 0
  5261   0000D9                     ??___fltol:
  5262   0000D9                     ??___xxtofl:
  5263                           
  5264                           ; 1 bytes @ 0x4
  5265   0000D9                     	ds	1
  5266   0000DA                     gpio_pin_write_logic@rt:
  5267                           	callstack 0
  5268   0000DA                     gpio_pin_read_logic@rt:
  5269                           	callstack 0
  5270   0000DA                     ??_EUSART_ASYNC_WriteStringBlocking:
  5271                           
  5272                           ; 1 bytes @ 0x5
  5273   0000DA                     	ds	1
  5274   0000DB                     I2C_SetDataCompleteCallback@ptr:
  5275                           	callstack 0
  5276   0000DB                     Timer0_Init@ret:
  5277                           	callstack 0
  5278   0000DB                     LCD_Send_4Bits@_LCD:
  5279                           	callstack 0
  5280   0000DB                     LCD_4Bits_Send_Enable_Signal@_LCD:
  5281                           	callstack 0
  5282   0000DB                     I2C_SetAddressNackCallback@ptr:
  5283                           	callstack 0
  5284   0000DB                     gpio_pin_initialize@pinConfig:
  5285                           	callstack 0
  5286   0000DB                     keyPad_Read@keypad:
  5287                           	callstack 0
  5288   0000DB                     
  5289                           ; 1 bytes @ 0x6
  5290   0000DB                     	ds	1
  5291   0000DC                     rd1RegCompleteHandler@ptr:
  5292                           	callstack 0
  5293   0000DC                     rd2RegCompleteHandler@ptr:
  5294                           	callstack 0
  5295   0000DC                     wr1RegCompleteHandler@ptr:
  5296                           	callstack 0
  5297   0000DC                     wr2RegCompleteHandler@ptr:
  5298                           	callstack 0
  5299   0000DC                     rdBlkRegCompleteHandler@ptr:
  5300                           	callstack 0
  5301   0000DC                     I2C_CallbackReturnReset@funPtr:
  5302                           	callstack 0
  5303   0000DC                     EUSART_ASYNC_WriteStringBlocking@ret:
  5304                           	callstack 0
  5305   0000DC                     LCD_Send_4Bits@_Data:
  5306                           	callstack 0
  5307   0000DC                     ??_LCD_4Bits_Send_Enable_Signal:
  5308                           
  5309                           ; 1 bytes @ 0x7
  5310   0000DC                     	ds	1
  5311   0000DD                     keyPad_Read@keypad_value:
  5312                           	callstack 0
  5313   0000DD                     LCD_4Bits_Send_Enable_Signal@rt:
  5314                           	callstack 0
  5315   0000DD                     ___fltol@sign1:
  5316                           	callstack 0
  5317   0000DD                     ___xxtofl@sign:
  5318                           	callstack 0
  5319   0000DD                     EUSART_ASYNC_WriteStringBlocking@char_counter:
  5320                           	callstack 0
  5321   0000DD                     ??_I2C_DO_TX:
  5322   0000DD                     ??_I2C_DO_RX:
  5323   0000DD                     ??_I2C_DO_TX_EMPTY:
  5324   0000DD                     ??_I2C_DO_ADDRESS_NACK:
  5325   0000DD                     ??_gpio_pin_initialize:
  5326   0000DD                     ??_LCD_Send_4Bits:
  5327                           
  5328                           ; 1 bytes @ 0x8
  5329   0000DD                     	ds	1
  5330   0000DE                     gpio_pin_initialize@rt:
  5331                           	callstack 0
  5332   0000DE                     LCD_Send_4Bits@rt:
  5333                           	callstack 0
  5334   0000DE                     ___fltol@exp1:
  5335                           	callstack 0
  5336   0000DE                     ___xxtofl@exp:
  5337                           	callstack 0
  5338   0000DE                     ??_keyPad_Read:
  5339                           
  5340                           ; 1 bytes @ 0x9
  5341   0000DE                     	ds	1
  5342   0000DF                     PinsConfig@hal_usart$F4705@ret:
  5343                           	callstack 0
  5344   0000DF                     ECU_LCD_4Bit_Send_Command@_LCD:
  5345                           	callstack 0
  5346   0000DF                     ECU_LCD_4Bit_Send_char_Data@_LCD:
  5347                           	callstack 0
  5348   0000DF                     keyPad_Initialize@keypad:
  5349                           	callstack 0
  5350   0000DF                     ___xxtofl@arg:
  5351                           	callstack 0
  5352   0000DF                     ??_I2C_MasterFsm:
  5353   0000DF                     
  5354                           ; 1 bytes @ 0xA
  5355   0000DF                     	ds	1
  5356   0000E0                     keyPad_Read@rt:
  5357                           	callstack 0
  5358   0000E0                     ECU_LCD_4Bit_Send_Command@_Command:
  5359                           	callstack 0
  5360   0000E0                     ECU_LCD_4Bit_Send_char_Data@_Data:
  5361                           	callstack 0
  5362                           
  5363                           ; 1 bytes @ 0xB
  5364   0000E0                     	ds	1
  5365   0000E1                     keyPad_Read@l_counter:
  5366                           	callstack 0
  5367   0000E1                     ECU_LCD_4Bit_Send_Command@rt:
  5368                           	callstack 0
  5369   0000E1                     ECU_LCD_4Bit_Send_char_Data@rt:
  5370                           	callstack 0
  5371   0000E1                     ??_keyPad_Initialize:
  5372                           
  5373                           ; 1 bytes @ 0xC
  5374   0000E1                     	ds	1
  5375   0000E2                     I2C_MasterOperation@read:
  5376                           	callstack 0
  5377   0000E2                     keyPad_Read@l_rows_counter:
  5378                           	callstack 0
  5379   0000E2                     ECU_LCD_4Bit_Initialize@_LCD:
  5380                           	callstack 0
  5381   0000E2                     LCD_4Bits_Set_Curser@_LCD:
  5382                           	callstack 0
  5383   0000E2                     
  5384                           ; 1 bytes @ 0xD
  5385   0000E2                     	ds	1
  5386   0000E3                     ?___fldiv:
  5387                           	callstack 0
  5388   0000E3                     I2C_MasterOperation@returnValue:
  5389                           	callstack 0
  5390   0000E3                     keyPad_Initialize@rt:
  5391                           	callstack 0
  5392   0000E3                     keyPad_Read@l_coloumns_counter:
  5393                           	callstack 0
  5394   0000E3                     LCD_4Bits_Set_Curser@row:
  5395                           	callstack 0
  5396   0000E3                     ___fldiv@b:
  5397                           	callstack 0
  5398   0000E3                     ??_ECU_LCD_4Bit_Initialize:
  5399                           
  5400                           ; 1 bytes @ 0xE
  5401   0000E3                     	ds	1
  5402   0000E4                     I2C_Read1ByteRegister@reg:
  5403                           	callstack 0
  5404   0000E4                     keyPad_Initialize@l_rows_counter:
  5405                           	callstack 0
  5406   0000E4                     keyPad_Read@coloumn_logic:
  5407                           	callstack 0
  5408   0000E4                     ECU_LCD_4Bit_Initialize@LCD_Counter:
  5409                           	callstack 0
  5410   0000E4                     LCD_4Bits_Set_Curser@coloumn:
  5411                           	callstack 0
  5412   0000E4                     
  5413                           ; 1 bytes @ 0xF
  5414   0000E4                     	ds	1
  5415   0000E5                     I2C_Read1ByteRegister@address:
  5416                           	callstack 0
  5417   0000E5                     keyPad_Initialize@l_coloums_counter:
  5418                           	callstack 0
  5419   0000E5                     ECU_LCD_4Bit_Initialize@rt:
  5420                           	callstack 0
  5421   0000E5                     LCD_4Bits_Set_Curser@rt:
  5422                           	callstack 0
  5423   0000E5                     
  5424                           ; 1 bytes @ 0x10
  5425   0000E5                     	ds	1
  5426   0000E6                     I2C_Read1ByteRegister@returnValue:
  5427                           	callstack 0
  5428                           
  5429                           ; 1 bytes @ 0x11
  5430   0000E6                     	ds	1
  5431   0000E7                     ?_REALTIMECLOCK_DS1307_Get_Data:
  5432                           	callstack 0
  5433   0000E7                     ___fldiv@a:
  5434                           	callstack 0
  5435                           
  5436                           ; 4 bytes @ 0x12
  5437   0000E7                     	ds	4
  5438   0000EB                     ??___fldiv:
  5439                           
  5440                           ; 1 bytes @ 0x16
  5441   0000EB                     	ds	2
  5442   0000ED                     
  5443                           ; 1 bytes @ 0x18
  5444   0000ED                     	ds	2
  5445   0000EF                     ___fldiv@rem:
  5446                           	callstack 0
  5447                           
  5448                           ; 4 bytes @ 0x1A
  5449   0000EF                     	ds	4
  5450   0000F3                     ___fldiv@sign:
  5451                           	callstack 0
  5452                           
  5453                           ; 1 bytes @ 0x1E
  5454   0000F3                     	ds	1
  5455   0000F4                     ___fldiv@new_exp:
  5456                           	callstack 0
  5457                           
  5458                           ; 2 bytes @ 0x1F
  5459   0000F4                     	ds	2
  5460   0000F6                     ___fldiv@grs:
  5461                           	callstack 0
  5462                           
  5463                           ; 4 bytes @ 0x21
  5464   0000F6                     	ds	4
  5465   0000FA                     ___fldiv@bexp:
  5466                           	callstack 0
  5467                           
  5468                           ; 1 bytes @ 0x25
  5469   0000FA                     	ds	1
  5470   0000FB                     ___fldiv@aexp:
  5471                           	callstack 0
  5472                           
  5473                           ; 1 bytes @ 0x26
  5474   0000FB                     	ds	1
  5475   0000FC                     EUSART_BaudRateCalculation@_EUSART:
  5476                           	callstack 0
  5477                           
  5478                           ; 2 bytes @ 0x27
  5479   0000FC                     	ds	2
  5480   0000FE                     
  5481                           ; 1 bytes @ 0x29
  5482                           
  5483                           	psect	cstackCOMRAM
  5484   000001                     __pcstackCOMRAM:
  5485                           	callstack 0
  5486   000001                     ?___awdiv:
  5487                           	callstack 0
  5488   000001                     ?___awmod:
  5489                           	callstack 0
  5490   000001                     CCPx_CompareMode_WriteData@_CCPx:
  5491                           	callstack 0
  5492   000001                     RB4_ISR@RB4_Source:
  5493                           	callstack 0
  5494   000001                     RB5_ISR@RB5_Source:
  5495                           	callstack 0
  5496   000001                     RB6_ISR@RB6_Source:
  5497                           	callstack 0
  5498   000001                     RB7_ISR@RB7_Source:
  5499                           	callstack 0
  5500   000001                     Timer1_Write_Value@_timer1:
  5501                           	callstack 0
  5502   000001                     ___awdiv@dividend:
  5503                           	callstack 0
  5504   000001                     ___awmod@dividend:
  5505                           	callstack 0
  5506   000001                     i2gpio_pin_write_logic@pinConfig:
  5507                           	callstack 0
  5508   000001                     
  5509                           ; 1 bytes @ 0x0
  5510   000001                     	ds	1
  5511   000002                     CCPx_CompareMode_WriteData@_Data:
  5512                           	callstack 0
  5513                           
  5514                           ; 2 bytes @ 0x1
  5515   000002                     	ds	1
  5516   000003                     i2gpio_pin_write_logic@logic:
  5517                           	callstack 0
  5518   000003                     Timer1_Write_Value@_value:
  5519                           	callstack 0
  5520   000003                     ___awdiv@divisor:
  5521                           	callstack 0
  5522   000003                     ___awmod@divisor:
  5523                           	callstack 0
  5524                           
  5525                           ; 2 bytes @ 0x2
  5526   000003                     	ds	1
  5527   000004                     ??i2_gpio_pin_write_logic:
  5528                           
  5529                           ; 1 bytes @ 0x3
  5530   000004                     	ds	1
  5531   000005                     CCPx_CompareMode_WriteData@ret:
  5532                           	callstack 0
  5533   000005                     Timer1_Write_Value@ret:
  5534                           	callstack 0
  5535   000005                     ___awdiv@counter:
  5536                           	callstack 0
  5537   000005                     ___awmod@counter:
  5538                           	callstack 0
  5539   000005                     
  5540                           ; 1 bytes @ 0x4
  5541   000005                     	ds	1
  5542   000006                     ___awdiv@sign:
  5543                           	callstack 0
  5544   000006                     ___awmod@sign:
  5545                           	callstack 0
  5546   000006                     i2gpio_pin_write_logic@rt:
  5547                           	callstack 0
  5548   000006                     CCPx_CompareMode_WriteData@CCPx_reg:
  5549                           	callstack 0
  5550                           
  5551                           ; 2 bytes @ 0x5
  5552   000006                     	ds	1
  5553   000007                     i2LCD_Send_4Bits@_LCD:
  5554                           	callstack 0
  5555   000007                     i2LCD_4Bits_Send_Enable_Signal@_LCD:
  5556                           	callstack 0
  5557   000007                     ___awdiv@quotient:
  5558                           	callstack 0
  5559                           
  5560                           ; 2 bytes @ 0x6
  5561   000007                     	ds	1
  5562   000008                     i2LCD_Send_4Bits@_Data:
  5563                           	callstack 0
  5564   000008                     ??i2_LCD_4Bits_Send_Enable_Signal:
  5565                           
  5566                           ; 1 bytes @ 0x7
  5567   000008                     	ds	1
  5568   000009                     i2LCD_4Bits_Send_Enable_Signal@rt:
  5569                           	callstack 0
  5570   000009                     ??i2_LCD_Send_4Bits:
  5571                           
  5572                           ; 1 bytes @ 0x8
  5573   000009                     	ds	1
  5574   00000A                     i2LCD_Send_4Bits@rt:
  5575                           	callstack 0
  5576                           
  5577                           ; 1 bytes @ 0x9
  5578   00000A                     	ds	1
  5579   00000B                     i2ECU_LCD_4Bit_Send_Command@_LCD:
  5580                           	callstack 0
  5581   00000B                     i2ECU_LCD_4Bit_Send_char_Data@_LCD:
  5582                           	callstack 0
  5583                           
  5584                           ; 1 bytes @ 0xA
  5585   00000B                     	ds	1
  5586   00000C                     i2ECU_LCD_4Bit_Send_Command@_Command:
  5587                           	callstack 0
  5588   00000C                     i2ECU_LCD_4Bit_Send_char_Data@_Data:
  5589                           	callstack 0
  5590                           
  5591                           ; 1 bytes @ 0xB
  5592   00000C                     	ds	1
  5593   00000D                     i2ECU_LCD_4Bit_Send_Command@rt:
  5594                           	callstack 0
  5595   00000D                     i2ECU_LCD_4Bit_Send_char_Data@rt:
  5596                           	callstack 0
  5597   00000D                     
  5598                           ; 1 bytes @ 0xC
  5599   00000D                     	ds	1
  5600   00000E                     i2LCD_4Bits_Set_Curser@_LCD:
  5601                           	callstack 0
  5602                           
  5603                           ; 1 bytes @ 0xD
  5604   00000E                     	ds	1
  5605   00000F                     i2LCD_4Bits_Set_Curser@row:
  5606                           	callstack 0
  5607                           
  5608                           ; 1 bytes @ 0xE
  5609   00000F                     	ds	1
  5610   000010                     i2LCD_4Bits_Set_Curser@coloumn:
  5611                           	callstack 0
  5612                           
  5613                           ; 1 bytes @ 0xF
  5614   000010                     	ds	1
  5615   000011                     i2LCD_4Bits_Set_Curser@rt:
  5616                           	callstack 0
  5617   000011                     
  5618                           ; 1 bytes @ 0x10
  5619   000011                     	ds	1
  5620   000012                     i2ECU_LCD_4Bit_Send_String_Data_Postition@_LCD:
  5621                           	callstack 0
  5622                           
  5623                           ; 1 bytes @ 0x11
  5624   000012                     	ds	1
  5625   000013                     i2ECU_LCD_4Bit_Send_String_Data_Postition@_Row:
  5626                           	callstack 0
  5627                           
  5628                           ; 1 bytes @ 0x12
  5629   000013                     	ds	1
  5630   000014                     i2ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn:
  5631                           	callstack 0
  5632                           
  5633                           ; 1 bytes @ 0x13
  5634   000014                     	ds	1
  5635   000015                     i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str:
  5636                           	callstack 0
  5637                           
  5638                           ; 2 bytes @ 0x14
  5639   000015                     	ds	2
  5640   000017                     i2ECU_LCD_4Bit_Send_String_Data_Postition@rt:
  5641                           	callstack 0
  5642   000017                     
  5643                           ; 1 bytes @ 0x16
  5644   000017                     	ds	1
  5645   000018                     ??_InterruptManager:
  5646   000018                     
  5647                           ; 1 bytes @ 0x17
  5648   000018                     	ds	10
  5649                           
  5650 ;;
  5651 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  5652 ;;
  5653 ;; *************** function _main *****************
  5654 ;; Defined at:
  5655 ;;		line 156 in file "main.c"
  5656 ;; Parameters:    Size  Location     Type
  5657 ;;		None
  5658 ;; Auto vars:     Size  Location     Type
  5659 ;;		None
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  1    wreg      void 
  5662 ;; Registers used:
  5663 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;Total ram usage:        2 bytes
  5674 ;; Hardware stack levels required when called: 19
  5675 ;; This function calls:
  5676 ;;		_ECU_LCD_4Bit_Initialize
  5677 ;;		_ECU_LCD_4Bit_Send_Command
  5678 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
  5679 ;;		_LCD_4Bits_Set_Curser
  5680 ;;		_REALTIMECLOCK_DS1307_Get_Data
  5681 ;;		_REALTIMECLOCK_DS1307_print_Data
  5682 ;;		_SYSTEM_Initialize
  5683 ;;		_Timer0_Deinit
  5684 ;;		_Timer0_Init
  5685 ;;		_keyPad_Initialize
  5686 ;;		_keyPad_Read
  5687 ;;		_update_display
  5688 ;; This function is called by:
  5689 ;;		Startup code after reset
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text0
  5694   001A0E                     __ptext0:
  5695                           	callstack 0
  5696   001A0E                     _main:
  5697                           	callstack 12
  5698   001A0E                     
  5699                           ;main.c: 159:     SYSTEM_Initialize();
  5700   001A0E  EC40  F025         	call	_SYSTEM_Initialize	;wreg free
  5701   001A12                     
  5702                           ;main.c: 176:     ret = ECU_LCD_4Bit_Initialize(&LCD_1);
  5703   001A12  0E39               	movlw	low _LCD_1
  5704   001A14  0100               	movlb	0	; () banked
  5705   001A16  6FE2               	movwf	ECU_LCD_4Bit_Initialize@_LCD& (0+255),b
  5706   001A18  ECD4  F016         	call	_ECU_LCD_4Bit_Initialize	;wreg free
  5707   001A1C  0100               	movlb	0	; () banked
  5708   001A1E  6FFE               	movwf	_ret& (0+255),b
  5709   001A20                     
  5710                           ; BSR set to: 0
  5711                           ;main.c: 177:     ret = keyPad_Initialize(&keypad_1);
  5712   001A20  0E30               	movlw	low _keypad_1
  5713   001A22  6FDF               	movwf	keyPad_Initialize@keypad& (0+255),b
  5714   001A24  0E01               	movlw	high _keypad_1
  5715   001A26  6FE0               	movwf	(keyPad_Initialize@keypad+1)& (0+255),b
  5716   001A28  ECE4  F01E         	call	_keyPad_Initialize	;wreg free
  5717   001A2C  0100               	movlb	0	; () banked
  5718   001A2E  6FFE               	movwf	_ret& (0+255),b
  5719   001A30                     
  5720                           ; BSR set to: 0
  5721                           ;main.c: 182:     ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1, 1, 1, "1: Clock"
      +                          );
  5722   001A30  0E39               	movlw	low _LCD_1
  5723   001A32  0101               	movlb	1	; () banked
  5724   001A34  6F5D               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD& (0+255),b
  5725   001A36  0E01               	movlw	1
  5726   001A38  6F5E               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Row& (0+255),b
  5727   001A3A  0E01               	movlw	1
  5728   001A3C  6F5F               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn& (0+255),b
  5729   001A3E  0E2C               	movlw	low STR_2
  5730   001A40  6F60               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),b
  5731   001A42  5160               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),w,b
  5732   001A44  A4D8               	btfss	status,2,c
  5733   001A46  0E10               	movlw	high __smallconst
  5734   001A48  6F61               	movwf	(ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)& (0+255),b
  5735   001A4A  ECA5  F01C         	call	_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
  5736   001A4E  0100               	movlb	0	; () banked
  5737   001A50  6FFE               	movwf	_ret& (0+255),b
  5738   001A52                     
  5739                           ; BSR set to: 0
  5740                           ;main.c: 183:     ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1, 2, 1,"2: Alarm")
      +                          ;
  5741   001A52  0E39               	movlw	low _LCD_1
  5742   001A54  0101               	movlb	1	; () banked
  5743   001A56  6F5D               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD& (0+255),b
  5744   001A58  0E02               	movlw	2
  5745   001A5A  6F5E               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Row& (0+255),b
  5746   001A5C  0E01               	movlw	1
  5747   001A5E  6F5F               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn& (0+255),b
  5748   001A60  0E35               	movlw	low STR_3
  5749   001A62  6F60               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),b
  5750   001A64  5160               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),w,b
  5751   001A66  A4D8               	btfss	status,2,c
  5752   001A68  0E10               	movlw	high __smallconst
  5753   001A6A  6F61               	movwf	(ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)& (0+255),b
  5754   001A6C  ECA5  F01C         	call	_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
  5755   001A70  0100               	movlb	0	; () banked
  5756   001A72  6FFE               	movwf	_ret& (0+255),b
  5757   001A74                     l13853:
  5758                           
  5759                           ;main.c: 186:     {;main.c: 189:         NumberPressed = '\0';
  5760   001A74  0100               	movlb	0	; () banked
  5761   001A76  6BFF               	clrf	_NumberPressed& (0+255),b
  5762                           
  5763                           ;main.c: 190:         while(NumberPressed == '\0'){
  5764   001A78  EF48  F00D         	goto	l13857
  5765   001A7C                     l13855:
  5766                           
  5767                           ; BSR set to: 0
  5768                           ;main.c: 191:             ret = keyPad_Read(&keypad_1, &NumberPressed);
  5769   001A7C  0E30               	movlw	low _keypad_1
  5770   001A7E  6FDB               	movwf	keyPad_Read@keypad& (0+255),b
  5771   001A80  0E01               	movlw	high _keypad_1
  5772   001A82  6FDC               	movwf	(keyPad_Read@keypad+1)& (0+255),b
  5773   001A84  0EFF               	movlw	low _NumberPressed
  5774   001A86  6FDD               	movwf	keyPad_Read@keypad_value& (0+255),b
  5775   001A88  ECE4  F017         	call	_keyPad_Read	;wreg free
  5776   001A8C  0100               	movlb	0	; () banked
  5777   001A8E  6FFE               	movwf	_ret& (0+255),b
  5778   001A90                     l13857:
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;main.c: 190:         while(NumberPressed == '\0'){
  5782   001A90  51FF               	movf	_NumberPressed& (0+255),w,b
  5783   001A92  B4D8               	btfsc	status,2,c
  5784   001A94  EF4E  F00D         	goto	u12941
  5785   001A98  EF50  F00D         	goto	u12940
  5786   001A9C                     u12941:
  5787   001A9C  EF3E  F00D         	goto	l13855
  5788   001AA0                     u12940:
  5789   001AA0                     
  5790                           ; BSR set to: 0
  5791                           ;main.c: 193:         if( NumberPressed != '\0'){
  5792   001AA0  51FF               	movf	_NumberPressed& (0+255),w,b
  5793   001AA2  B4D8               	btfsc	status,2,c
  5794   001AA4  EF56  F00D         	goto	u12951
  5795   001AA8  EF58  F00D         	goto	u12950
  5796   001AAC                     u12951:
  5797   001AAC  EF3A  F00D         	goto	l13853
  5798   001AB0                     u12950:
  5799   001AB0  EF29  F00F         	goto	l14039
  5800   001AB4                     l13863:
  5801                           
  5802                           ; BSR set to: 0
  5803                           ;main.c: 196:                 ECU_LCD_4Bit_Send_Command(&LCD_1, 0x01);
  5804   001AB4  0E39               	movlw	low _LCD_1
  5805   001AB6  6FDF               	movwf	ECU_LCD_4Bit_Send_Command@_LCD& (0+255),b
  5806   001AB8  0E01               	movlw	1
  5807   001ABA  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  5808   001ABC  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  5809   001AC0                     
  5810                           ;main.c: 197:                 _delay((unsigned long)((10)*(16000000/4000.0)));
  5811   001AC0  0E34               	movlw	52
  5812   001AC2  0101               	movlb	1	; () banked
  5813   001AC4  6F63               	movwf	??_main& (0+255),b
  5814   001AC6  0EF1               	movlw	241
  5815   001AC8                     u13897:
  5816   001AC8  2EE8               	decfsz	wreg,f,c
  5817   001ACA  D7FE               	bra	u13897
  5818   001ACC  2F63               	decfsz	??_main& (0+255),f,b
  5819   001ACE  D7FC               	bra	u13897
  5820   001AD0  F000 F000          	nop2	
  5821   001AD4                     
  5822                           ;main.c: 198:                 REALTIMECLOCK_DS1307 = REALTIMECLOCK_DS1307_Get_Data();
  5823   001AD4  EC81  F020         	call	_REALTIMECLOCK_DS1307_Get_Data	;wreg free
  5824   001AD8  EE21  F06B         	lfsr	2,_REALTIMECLOCK_DS1307
  5825   001ADC  0E05               	movlw	5
  5826   001ADE                     u12961:
  5827   001ADE  CFEB FFDB          	movff	plusw0,plusw2
  5828   001AE2  06E8               	decf	wreg,f,c
  5829   001AE4  E2FC               	bc	u12961
  5830   001AE6                     
  5831                           ;main.c: 199:                 ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1, 2, 1
      +                          ,REALTIMECLOCK_DS1307_print_Data());break;
  5832   001AE6  0E39               	movlw	low _LCD_1
  5833   001AE8  0101               	movlb	1	; () banked
  5834   001AEA  6F5D               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD& (0+255),b
  5835   001AEC  0E02               	movlw	2
  5836   001AEE  6F5E               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Row& (0+255),b
  5837   001AF0  0E01               	movlw	1
  5838   001AF2  6F5F               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn& (0+255),b
  5839   001AF4  EC60  F018         	call	_REALTIMECLOCK_DS1307_print_Data	;wreg free
  5840   001AF8  C15B  F160         	movff	?_REALTIMECLOCK_DS1307_print_Data,ECU_LCD_4Bit_Send_String_Data_Postition@_Str
  5841   001AFC  C15C  F161         	movff	?_REALTIMECLOCK_DS1307_print_Data+1,ECU_LCD_4Bit_Send_String_Data_Postition@_Str+
      +                          1
  5842   001B00  ECA5  F01C         	call	_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
  5843   001B04  0100               	movlb	0	; () banked
  5844   001B06  6FFE               	movwf	_ret& (0+255),b
  5845   001B08  EF3A  F00D         	goto	l13853
  5846   001B0C                     l13871:
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;main.c: 202:                 ECU_LCD_4Bit_Send_Command(&LCD_1, 0x01);
  5850   001B0C  0E39               	movlw	low _LCD_1
  5851   001B0E  6FDF               	movwf	ECU_LCD_4Bit_Send_Command@_LCD& (0+255),b
  5852   001B10  0E01               	movlw	1
  5853   001B12  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  5854   001B14  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  5855   001B18                     
  5856                           ;main.c: 203:                 _delay((unsigned long)((10)*(16000000/4000.0)));
  5857   001B18  0E34               	movlw	52
  5858   001B1A  0101               	movlb	1	; () banked
  5859   001B1C  6F63               	movwf	??_main& (0+255),b
  5860   001B1E  0EF1               	movlw	241
  5861   001B20                     u13907:
  5862   001B20  2EE8               	decfsz	wreg,f,c
  5863   001B22  D7FE               	bra	u13907
  5864   001B24  2F63               	decfsz	??_main& (0+255),f,b
  5865   001B26  D7FC               	bra	u13907
  5866   001B28  F000 F000          	nop2	
  5867   001B2C                     
  5868                           ;main.c: 204:                  exit_alarm = 1;
  5869   001B2C  0E01               	movlw	1
  5870   001B2E  6E2C               	movwf	_exit_alarm^0,c
  5871   001B30                     
  5872                           ;main.c: 205:                  update_display();
  5873   001B30  ECD8  F018         	call	_update_display	;wreg free
  5874                           
  5875                           ;main.c: 206:                 while(exit_alarm){
  5876   001B34  EF1F  F00F         	goto	l14037
  5877   001B38                     l13879:
  5878                           
  5879                           ;main.c: 208:                         ret = keyPad_Read(&keypad_1, &nextBack);
  5880   001B38  0E30               	movlw	low _keypad_1
  5881   001B3A  0100               	movlb	0	; () banked
  5882   001B3C  6FDB               	movwf	keyPad_Read@keypad& (0+255),b
  5883   001B3E  0E01               	movlw	high _keypad_1
  5884   001B40  6FDC               	movwf	(keyPad_Read@keypad+1)& (0+255),b
  5885   001B42  0E33               	movlw	low _nextBack
  5886   001B44  6FDD               	movwf	keyPad_Read@keypad_value& (0+255),b
  5887   001B46  ECE4  F017         	call	_keyPad_Read	;wreg free
  5888   001B4A  0100               	movlb	0	; () banked
  5889   001B4C  6FFE               	movwf	_ret& (0+255),b
  5890   001B4E                     
  5891                           ; BSR set to: 0
  5892                           ;main.c: 210:                         if(seconds == 0 && minutes == 0 && hours == 0){
  5893   001B4E  502F               	movf	_seconds^0,w,c
  5894   001B50  A4D8               	btfss	status,2,c
  5895   001B52  EFAD  F00D         	goto	u12971
  5896   001B56  EFAF  F00D         	goto	u12970
  5897   001B5A                     u12971:
  5898   001B5A  EFC7  F00D         	goto	l13889
  5899   001B5E                     u12970:
  5900   001B5E                     
  5901                           ; BSR set to: 0
  5902   001B5E  502E               	movf	_minutes^0,w,c
  5903   001B60  A4D8               	btfss	status,2,c
  5904   001B62  EFB5  F00D         	goto	u12981
  5905   001B66  EFB7  F00D         	goto	u12980
  5906   001B6A                     u12981:
  5907   001B6A  EFC7  F00D         	goto	l13889
  5908   001B6E                     u12980:
  5909   001B6E                     
  5910                           ; BSR set to: 0
  5911   001B6E  502D               	movf	_hours^0,w,c
  5912   001B70  A4D8               	btfss	status,2,c
  5913   001B72  EFBD  F00D         	goto	u12991
  5914   001B76  EFBF  F00D         	goto	u12990
  5915   001B7A                     u12991:
  5916   001B7A  EFC7  F00D         	goto	l13889
  5917   001B7E                     u12990:
  5918   001B7E                     
  5919                           ; BSR set to: 0
  5920                           ;main.c: 211:                             ret = Timer0_Deinit (&timer0_1);
  5921   001B7E  0E38               	movlw	low _timer0_1
  5922   001B80  6FD5               	movwf	Timer0_Deinit@_timer0& (0+255),b
  5923   001B82  0E01               	movlw	high _timer0_1
  5924   001B84  6FD6               	movwf	(Timer0_Deinit@_timer0+1)& (0+255),b
  5925   001B86  EC67  F024         	call	_Timer0_Deinit	;wreg free
  5926   001B8A  0100               	movlb	0	; () banked
  5927   001B8C  6FFE               	movwf	_ret& (0+255),b
  5928   001B8E                     l13889:
  5929                           
  5930                           ;main.c: 207:                     while(nextBack == '\0'){
  5931   001B8E  5033               	movf	_nextBack^0,w,c
  5932   001B90  B4D8               	btfsc	status,2,c
  5933   001B92  EFCD  F00D         	goto	u13001
  5934   001B96  EFCF  F00D         	goto	u13000
  5935   001B9A                     u13001:
  5936   001B9A  EF9C  F00D         	goto	l13879
  5937   001B9E                     u13000:
  5938   001B9E  EF17  F00F         	goto	l14035
  5939   001BA2                     l13891:
  5940                           
  5941                           ;main.c: 215:                         if (nextBack == '#'){
  5942   001BA2  0E23               	movlw	35
  5943   001BA4  1833               	xorwf	_nextBack^0,w,c
  5944   001BA6  A4D8               	btfss	status,2,c
  5945   001BA8  EFD8  F00D         	goto	u13011
  5946   001BAC  EFDA  F00D         	goto	u13010
  5947   001BB0                     u13011:
  5948   001BB0  EF11  F00E         	goto	l13911
  5949   001BB4                     u13010:
  5950   001BB4                     
  5951                           ;main.c: 216:                             if (curserPos > 0) {
  5952   001BB4  5038               	movf	_curserPos^0,w,c
  5953   001BB6  B4D8               	btfsc	status,2,c
  5954   001BB8  EFE0  F00D         	goto	u13021
  5955   001BBC  EFE2  F00D         	goto	u13020
  5956   001BC0                     u13021:
  5957   001BC0  EF0E  F00E         	goto	l13909
  5958   001BC4                     u13020:
  5959   001BC4                     
  5960                           ;main.c: 217:                                 curserPos--;
  5961   001BC4  0638               	decf	_curserPos^0,f,c
  5962   001BC6                     
  5963                           ;main.c: 218:                                 if(curserPos == 3 || curserPos == 6){
  5964   001BC6  0E03               	movlw	3
  5965   001BC8  1838               	xorwf	_curserPos^0,w,c
  5966   001BCA  B4D8               	btfsc	status,2,c
  5967   001BCC  EFEA  F00D         	goto	u13031
  5968   001BD0  EFEC  F00D         	goto	u13030
  5969   001BD4                     u13031:
  5970   001BD4  EFF5  F00D         	goto	l13901
  5971   001BD8                     u13030:
  5972   001BD8  0E06               	movlw	6
  5973   001BDA  1838               	xorwf	_curserPos^0,w,c
  5974   001BDC  A4D8               	btfss	status,2,c
  5975   001BDE  EFF3  F00D         	goto	u13041
  5976   001BE2  EFF5  F00D         	goto	u13040
  5977   001BE6                     u13041:
  5978   001BE6  EFF6  F00D         	goto	l13903
  5979   001BEA                     u13040:
  5980   001BEA                     l13901:
  5981                           
  5982                           ;main.c: 219:                                     curserPos--;
  5983   001BEA  0638               	decf	_curserPos^0,f,c
  5984   001BEC                     l13903:
  5985                           
  5986                           ;main.c: 221:                                 ret = LCD_4Bits_Set_Curser (&LCD_1, 1,curs
      +                          erPos);
  5987   001BEC  0E39               	movlw	low _LCD_1
  5988   001BEE  0100               	movlb	0	; () banked
  5989   001BF0  6FE2               	movwf	LCD_4Bits_Set_Curser@_LCD& (0+255),b
  5990   001BF2  0E01               	movlw	1
  5991   001BF4  6FE3               	movwf	LCD_4Bits_Set_Curser@row& (0+255),b
  5992   001BF6  C038  F0E4         	movff	_curserPos,LCD_4Bits_Set_Curser@coloumn
  5993   001BFA  EC56  F01C         	call	_LCD_4Bits_Set_Curser	;wreg free
  5994   001BFE  0100               	movlb	0	; () banked
  5995   001C00  6FFE               	movwf	_ret& (0+255),b
  5996   001C02                     
  5997                           ; BSR set to: 0
  5998                           ;main.c: 222:                                 _delay((unsigned long)((200)*(16000000/400
      +                          0.0)));
  5999   001C02  0E05               	movlw	5
  6000   001C04  0101               	movlb	1	; () banked
  6001   001C06  6F64               	movwf	(??_main+1)& (0+255),b
  6002   001C08  0E0F               	movlw	15
  6003   001C0A  6F63               	movwf	??_main& (0+255),b
  6004   001C0C  0EF1               	movlw	241
  6005   001C0E                     u13917:
  6006   001C0E  2EE8               	decfsz	wreg,f,c
  6007   001C10  D7FE               	bra	u13917
  6008   001C12  2F63               	decfsz	??_main& (0+255),f,b
  6009   001C14  D7FC               	bra	u13917
  6010   001C16  2F64               	decfsz	(??_main+1)& (0+255),f,b
  6011   001C18  D7FA               	bra	u13917
  6012   001C1A                     
  6013                           ;main.c: 223:                                 nextBack = '\0';
  6014   001C1A  6A33               	clrf	_nextBack^0,c
  6015   001C1C                     l13909:
  6016                           
  6017                           ;main.c: 225:                         nextBack = '\0';
  6018   001C1C  6A33               	clrf	_nextBack^0,c
  6019                           
  6020                           ;main.c: 226:                         }
  6021   001C1E  EF17  F00F         	goto	l14035
  6022   001C22                     l13911:
  6023   001C22  0E3D               	movlw	61
  6024   001C24  1833               	xorwf	_nextBack^0,w,c
  6025   001C26  A4D8               	btfss	status,2,c
  6026   001C28  EF18  F00E         	goto	u13051
  6027   001C2C  EF1A  F00E         	goto	u13050
  6028   001C30                     u13051:
  6029   001C30  EF38  F00E         	goto	l13931
  6030   001C34                     u13050:
  6031   001C34                     
  6032                           ;main.c: 228:                             if (curserPos < 8) {
  6033   001C34  0E08               	movlw	8
  6034   001C36  6038               	cpfslt	_curserPos^0,c
  6035   001C38  EF20  F00E         	goto	u13061
  6036   001C3C  EF22  F00E         	goto	u13060
  6037   001C40                     u13061:
  6038   001C40  EF0E  F00E         	goto	l13909
  6039   001C44                     u13060:
  6040   001C44                     
  6041                           ;main.c: 229:                                 curserPos++;
  6042   001C44  2A38               	incf	_curserPos^0,f,c
  6043   001C46                     
  6044                           ;main.c: 230:                                 if(curserPos == 3 || curserPos == 6){
  6045   001C46  0E03               	movlw	3
  6046   001C48  1838               	xorwf	_curserPos^0,w,c
  6047   001C4A  B4D8               	btfsc	status,2,c
  6048   001C4C  EF2A  F00E         	goto	u13071
  6049   001C50  EF2C  F00E         	goto	u13070
  6050   001C54                     u13071:
  6051   001C54  EF35  F00E         	goto	l13921
  6052   001C58                     u13070:
  6053   001C58  0E06               	movlw	6
  6054   001C5A  1838               	xorwf	_curserPos^0,w,c
  6055   001C5C  A4D8               	btfss	status,2,c
  6056   001C5E  EF33  F00E         	goto	u13081
  6057   001C62  EF35  F00E         	goto	u13080
  6058   001C66                     u13081:
  6059   001C66  EFF6  F00D         	goto	l13903
  6060   001C6A                     u13080:
  6061   001C6A                     l13921:
  6062                           
  6063                           ;main.c: 231:                                     curserPos++;
  6064   001C6A  2A38               	incf	_curserPos^0,f,c
  6065   001C6C  EFF6  F00D         	goto	l13903
  6066   001C70                     l13931:
  6067   001C70  0E2B               	movlw	43
  6068   001C72  1833               	xorwf	_nextBack^0,w,c
  6069   001C74  A4D8               	btfss	status,2,c
  6070   001C76  EF3F  F00E         	goto	u13091
  6071   001C7A  EF41  F00E         	goto	u13090
  6072   001C7E                     u13091:
  6073   001C7E  EF03  F00F         	goto	l14027
  6074   001C82                     u13090:
  6075   001C82  EF4E  F00E         	goto	l13937
  6076   001C86                     l13935:
  6077                           
  6078                           ;main.c: 242:                                 ret = keyPad_Read(&keypad_1, &userInput);
  6079   001C86  0E30               	movlw	low _keypad_1
  6080   001C88  0100               	movlb	0	; () banked
  6081   001C8A  6FDB               	movwf	keyPad_Read@keypad& (0+255),b
  6082   001C8C  0E01               	movlw	high _keypad_1
  6083   001C8E  6FDC               	movwf	(keyPad_Read@keypad+1)& (0+255),b
  6084   001C90  0E32               	movlw	low _userInput
  6085   001C92  6FDD               	movwf	keyPad_Read@keypad_value& (0+255),b
  6086   001C94  ECE4  F017         	call	_keyPad_Read	;wreg free
  6087   001C98  0100               	movlb	0	; () banked
  6088   001C9A  6FFE               	movwf	_ret& (0+255),b
  6089   001C9C                     l13937:
  6090                           
  6091                           ;main.c: 241:                             while(userInput == '\0'){
  6092   001C9C  5032               	movf	_userInput^0,w,c
  6093   001C9E  B4D8               	btfsc	status,2,c
  6094   001CA0  EF54  F00E         	goto	u13101
  6095   001CA4  EF56  F00E         	goto	u13100
  6096   001CA8                     u13101:
  6097   001CA8  EF43  F00E         	goto	l13935
  6098   001CAC                     u13100:
  6099   001CAC                     
  6100                           ;main.c: 244:                             if (userInput >= '0' && userInput <= '9') {
  6101   001CAC  0E2F               	movlw	47
  6102   001CAE  6432               	cpfsgt	_userInput^0,c
  6103   001CB0  EF5C  F00E         	goto	u13111
  6104   001CB4  EF5E  F00E         	goto	u13110
  6105   001CB8                     u13111:
  6106   001CB8  EFE3  F00E         	goto	l215
  6107   001CBC                     u13110:
  6108   001CBC  0E3A               	movlw	58
  6109   001CBE  6032               	cpfslt	_userInput^0,c
  6110   001CC0  EF64  F00E         	goto	u13121
  6111   001CC4  EF66  F00E         	goto	u13120
  6112   001CC8                     u13121:
  6113   001CC8  EFE3  F00E         	goto	l215
  6114   001CCC                     u13120:
  6115   001CCC                     
  6116                           ;main.c: 246:                                 if (curserPos == 1) {
  6117   001CCC  0438               	decf	_curserPos^0,w,c
  6118   001CCE  A4D8               	btfss	status,2,c
  6119   001CD0  EF6C  F00E         	goto	u13131
  6120   001CD4  EF6E  F00E         	goto	u13130
  6121   001CD8                     u13131:
  6122   001CD8  EF84  F00E         	goto	l13955
  6123   001CDC                     u13130:
  6124   001CDC                     
  6125                           ;main.c: 247:                                     time_array[0] = userInput - '0';
  6126   001CDC  5032               	movf	_userInput^0,w,c
  6127   001CDE  0FD0               	addlw	208
  6128   001CE0  0100               	movlb	0	; () banked
  6129   001CE2  6F83               	movwf	_time_array& (0+255),b
  6130   001CE4                     l13947:
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;main.c: 248:                                     nextBack = '\0';
  6134   001CE4  6A33               	clrf	_nextBack^0,c
  6135   001CE6                     
  6136                           ; BSR set to: 0
  6137                           ;main.c: 249:                                     userInput = '\0';
  6138   001CE6  6A32               	clrf	_userInput^0,c
  6139   001CE8                     
  6140                           ; BSR set to: 0
  6141                           ;main.c: 250:                                     update_display();
  6142   001CE8  ECD8  F018         	call	_update_display	;wreg free
  6143   001CEC                     
  6144                           ;main.c: 251:                                     _delay((unsigned long)((200)*(16000000
      +                          /4000.0)));
  6145   001CEC  0E05               	movlw	5
  6146   001CEE  0101               	movlb	1	; () banked
  6147   001CF0  6F64               	movwf	(??_main+1)& (0+255),b
  6148   001CF2  0E0F               	movlw	15
  6149   001CF4  6F63               	movwf	??_main& (0+255),b
  6150   001CF6  0EF1               	movlw	241
  6151   001CF8                     u13927:
  6152   001CF8  2EE8               	decfsz	wreg,f,c
  6153   001CFA  D7FE               	bra	u13927
  6154   001CFC  2F63               	decfsz	??_main& (0+255),f,b
  6155   001CFE  D7FC               	bra	u13927
  6156   001D00  2F64               	decfsz	(??_main+1)& (0+255),f,b
  6157   001D02  D7FA               	bra	u13927
  6158                           
  6159                           ;main.c: 252:                                 } else if (curserPos == 2) {
  6160   001D04  EFE3  F00E         	goto	l215
  6161   001D08                     l13955:
  6162   001D08  0E02               	movlw	2
  6163   001D0A  1838               	xorwf	_curserPos^0,w,c
  6164   001D0C  A4D8               	btfss	status,2,c
  6165   001D0E  EF8B  F00E         	goto	u13141
  6166   001D12  EF8D  F00E         	goto	u13140
  6167   001D16                     u13141:
  6168   001D16  EF93  F00E         	goto	l13967
  6169   001D1A                     u13140:
  6170   001D1A                     
  6171                           ;main.c: 253:                                     time_array[1] = userInput - '0';
  6172   001D1A  5032               	movf	_userInput^0,w,c
  6173   001D1C  0FD0               	addlw	208
  6174   001D1E  0100               	movlb	0	; () banked
  6175   001D20  6F84               	movwf	(_time_array+1)& (0+255),b
  6176   001D22  EF72  F00E         	goto	l13947
  6177   001D26                     l13967:
  6178   001D26  0E04               	movlw	4
  6179   001D28  1838               	xorwf	_curserPos^0,w,c
  6180   001D2A  A4D8               	btfss	status,2,c
  6181   001D2C  EF9A  F00E         	goto	u13151
  6182   001D30  EF9C  F00E         	goto	u13150
  6183   001D34                     u13151:
  6184   001D34  EFAC  F00E         	goto	l13983
  6185   001D38                     u13150:
  6186   001D38                     
  6187                           ;main.c: 259:                                     if(userInput > '5'){
  6188   001D38  0E35               	movlw	53
  6189   001D3A  6432               	cpfsgt	_userInput^0,c
  6190   001D3C  EFA2  F00E         	goto	u13161
  6191   001D40  EFA4  F00E         	goto	u13160
  6192   001D44                     u13161:
  6193   001D44  EFA6  F00E         	goto	l13973
  6194   001D48                     u13160:
  6195   001D48                     
  6196                           ;main.c: 260:                                         userInput = '5';
  6197   001D48  0E35               	movlw	53
  6198   001D4A  6E32               	movwf	_userInput^0,c
  6199   001D4C                     l13973:
  6200                           
  6201                           ;main.c: 262:                                     time_array[2] = userInput - '0';
  6202   001D4C  5032               	movf	_userInput^0,w,c
  6203   001D4E  0FD0               	addlw	208
  6204   001D50  0100               	movlb	0	; () banked
  6205   001D52  6F85               	movwf	(_time_array+2)& (0+255),b
  6206   001D54  EF72  F00E         	goto	l13947
  6207   001D58                     l13983:
  6208   001D58  0E05               	movlw	5
  6209   001D5A  1838               	xorwf	_curserPos^0,w,c
  6210   001D5C  A4D8               	btfss	status,2,c
  6211   001D5E  EFB3  F00E         	goto	u13171
  6212   001D62  EFB5  F00E         	goto	u13170
  6213   001D66                     u13171:
  6214   001D66  EFBB  F00E         	goto	l13995
  6215   001D6A                     u13170:
  6216   001D6A                     
  6217                           ;main.c: 268:                                     time_array[3] = userInput - '0';
  6218   001D6A  5032               	movf	_userInput^0,w,c
  6219   001D6C  0FD0               	addlw	208
  6220   001D6E  0100               	movlb	0	; () banked
  6221   001D70  6F86               	movwf	(_time_array+3)& (0+255),b
  6222   001D72  EF72  F00E         	goto	l13947
  6223   001D76                     l13995:
  6224   001D76  0E07               	movlw	7
  6225   001D78  1838               	xorwf	_curserPos^0,w,c
  6226   001D7A  A4D8               	btfss	status,2,c
  6227   001D7C  EFC2  F00E         	goto	u13181
  6228   001D80  EFC4  F00E         	goto	u13180
  6229   001D84                     u13181:
  6230   001D84  EFD4  F00E         	goto	l14011
  6231   001D88                     u13180:
  6232   001D88                     
  6233                           ;main.c: 274:                                     if(userInput > '5'){
  6234   001D88  0E35               	movlw	53
  6235   001D8A  6432               	cpfsgt	_userInput^0,c
  6236   001D8C  EFCA  F00E         	goto	u13191
  6237   001D90  EFCC  F00E         	goto	u13190
  6238   001D94                     u13191:
  6239   001D94  EFCE  F00E         	goto	l14001
  6240   001D98                     u13190:
  6241   001D98                     
  6242                           ;main.c: 275:                                         userInput = '5';
  6243   001D98  0E35               	movlw	53
  6244   001D9A  6E32               	movwf	_userInput^0,c
  6245   001D9C                     l14001:
  6246                           
  6247                           ;main.c: 277:                                     time_array[4] = userInput - '0';
  6248   001D9C  5032               	movf	_userInput^0,w,c
  6249   001D9E  0FD0               	addlw	208
  6250   001DA0  0100               	movlb	0	; () banked
  6251   001DA2  6F87               	movwf	(_time_array+4)& (0+255),b
  6252   001DA4  EF72  F00E         	goto	l13947
  6253   001DA8                     l14011:
  6254   001DA8  0E08               	movlw	8
  6255   001DAA  1838               	xorwf	_curserPos^0,w,c
  6256   001DAC  A4D8               	btfss	status,2,c
  6257   001DAE  EFDB  F00E         	goto	u13201
  6258   001DB2  EFDD  F00E         	goto	u13200
  6259   001DB6                     u13201:
  6260   001DB6  EFE3  F00E         	goto	l224
  6261   001DBA                     u13200:
  6262   001DBA                     
  6263                           ;main.c: 283:                                     time_array[5] = userInput - '0';
  6264   001DBA  5032               	movf	_userInput^0,w,c
  6265   001DBC  0FD0               	addlw	208
  6266   001DBE  0100               	movlb	0	; () banked
  6267   001DC0  6F88               	movwf	(_time_array+5)& (0+255),b
  6268   001DC2  EF72  F00E         	goto	l13947
  6269   001DC6                     l224:
  6270   001DC6                     l215:
  6271                           
  6272                           ;main.c: 293:                             nextBack = '\0';
  6273   001DC6  6A33               	clrf	_nextBack^0,c
  6274                           
  6275                           ;main.c: 294:                             userInput = '\0';
  6276   001DC8  6A32               	clrf	_userInput^0,c
  6277   001DCA                     
  6278                           ;main.c: 295:                             seconds = time_array[4]*10 + time_array[5];
  6279   001DCA  0100               	movlb	0	; () banked
  6280   001DCC  5187               	movf	(_time_array+4)& (0+255),w,b
  6281   001DCE  0D0A               	mullw	10
  6282   001DD0  50F3               	movf	243,w,c
  6283   001DD2  2588               	addwf	(_time_array+5)& (0+255),w,b
  6284   001DD4  6E2F               	movwf	_seconds^0,c
  6285                           
  6286                           ;main.c: 296:                             minutes = time_array[2]*10 + time_array[3];
  6287   001DD6  5185               	movf	(_time_array+2)& (0+255),w,b
  6288   001DD8  0D0A               	mullw	10
  6289   001DDA  50F3               	movf	243,w,c
  6290   001DDC  2586               	addwf	(_time_array+3)& (0+255),w,b
  6291   001DDE  6E2E               	movwf	_minutes^0,c
  6292                           
  6293                           ;main.c: 297:                             hours = time_array[0]*10 + time_array[1];
  6294   001DE0  5183               	movf	_time_array& (0+255),w,b
  6295   001DE2  0D0A               	mullw	10
  6296   001DE4  50F3               	movf	243,w,c
  6297   001DE6  2584               	addwf	(_time_array+1)& (0+255),w,b
  6298   001DE8  6E2D               	movwf	_hours^0,c
  6299   001DEA                     
  6300                           ; BSR set to: 0
  6301                           ;main.c: 298:                             _delay((unsigned long)((200)*(16000000/4000.0)
      +                          ));
  6302   001DEA  0E05               	movlw	5
  6303   001DEC  0101               	movlb	1	; () banked
  6304   001DEE  6F64               	movwf	(??_main+1)& (0+255),b
  6305   001DF0  0E0F               	movlw	15
  6306   001DF2  6F63               	movwf	??_main& (0+255),b
  6307   001DF4  0EF1               	movlw	241
  6308   001DF6                     u13937:
  6309   001DF6  2EE8               	decfsz	wreg,f,c
  6310   001DF8  D7FE               	bra	u13937
  6311   001DFA  2F63               	decfsz	??_main& (0+255),f,b
  6312   001DFC  D7FC               	bra	u13937
  6313   001DFE  2F64               	decfsz	(??_main+1)& (0+255),f,b
  6314   001E00  D7FA               	bra	u13937
  6315                           
  6316                           ;main.c: 300:                         }
  6317   001E02  EF17  F00F         	goto	l14035
  6318   001E06                     l14027:
  6319   001E06  0E2D               	movlw	45
  6320   001E08  1833               	xorwf	_nextBack^0,w,c
  6321   001E0A  A4D8               	btfss	status,2,c
  6322   001E0C  EF0A  F00F         	goto	u13211
  6323   001E10  EF0C  F00F         	goto	u13210
  6324   001E14                     u13211:
  6325   001E14  EF0E  F00E         	goto	l13909
  6326   001E18                     u13210:
  6327   001E18                     
  6328                           ;main.c: 305:                             ret = Timer0_Init (&timer0_1);
  6329   001E18  0E38               	movlw	low _timer0_1
  6330   001E1A  0100               	movlb	0	; () banked
  6331   001E1C  6FD9               	movwf	Timer0_Init@_timer0& (0+255),b
  6332   001E1E  0E01               	movlw	high _timer0_1
  6333   001E20  6FDA               	movwf	(Timer0_Init@_timer0+1)& (0+255),b
  6334   001E22  ECD2  F01D         	call	_Timer0_Init	;wreg free
  6335   001E26  0100               	movlb	0	; () banked
  6336   001E28  6FFE               	movwf	_ret& (0+255),b
  6337   001E2A                     
  6338                           ; BSR set to: 0
  6339                           ;main.c: 307:                             nextBack = '\0';
  6340   001E2A  6A33               	clrf	_nextBack^0,c
  6341   001E2C                     
  6342                           ; BSR set to: 0
  6343                           ;main.c: 308:                             exit_alarm = 0;
  6344   001E2C  6A2C               	clrf	_exit_alarm^0,c
  6345   001E2E                     l14035:
  6346                           
  6347                           ;main.c: 214:                     while(nextBack != '\0'){
  6348   001E2E  5033               	movf	_nextBack^0,w,c
  6349   001E30  A4D8               	btfss	status,2,c
  6350   001E32  EF1D  F00F         	goto	u13221
  6351   001E36  EF1F  F00F         	goto	u13220
  6352   001E3A                     u13221:
  6353   001E3A  EFD1  F00D         	goto	l13891
  6354   001E3E                     u13220:
  6355   001E3E                     l14037:
  6356                           
  6357                           ;main.c: 206:                 while(exit_alarm){
  6358   001E3E  502C               	movf	_exit_alarm^0,w,c
  6359   001E40  A4D8               	btfss	status,2,c
  6360   001E42  EF25  F00F         	goto	u13231
  6361   001E46  EF27  F00F         	goto	u13230
  6362   001E4A                     u13231:
  6363   001E4A  EFC7  F00D         	goto	l13889
  6364   001E4E                     u13230:
  6365   001E4E  EF3A  F00D         	goto	l13853
  6366   001E52                     l14039:
  6367                           
  6368                           ; BSR set to: 0
  6369   001E52  51FF               	movf	_NumberPressed& (0+255),w,b
  6370                           
  6371                           ; Switch size 1, requested type "simple"
  6372                           ; Number of cases is 2, Range of values is 49 to 50
  6373                           ; switch strategies available:
  6374                           ; Name         Instructions Cycles
  6375                           ; simple_byte            7     4 (average)
  6376                           ;	Chosen strategy is simple_byte
  6377   001E54  0A31               	xorlw	49	; case 49
  6378   001E56  B4D8               	btfsc	status,2,c
  6379   001E58  EF5A  F00D         	goto	l13863
  6380   001E5C  0A03               	xorlw	3	; case 50
  6381   001E5E  B4D8               	btfsc	status,2,c
  6382   001E60  EF86  F00D         	goto	l13871
  6383   001E64  EF34  F00F         	goto	l186
  6384   001E68                     l186:
  6385                           
  6386                           ; BSR set to: 0
  6387   001E68  EF3A  F00D         	goto	l13853
  6388   001E6C  EF2B  F002         	goto	start
  6389   001E70                     __end_of_main:
  6390                           	callstack 0
  6391                           
  6392 ;; *************** function _update_display *****************
  6393 ;; Defined at:
  6394 ;;		line 137 in file "main.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;		None
  6397 ;; Auto vars:     Size  Location     Type
  6398 ;;		None
  6399 ;; Return value:  Size  Location     Type
  6400 ;;                  1    wreg      void 
  6401 ;; Registers used:
  6402 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6403 ;; Tracked objects:
  6404 ;;		On entry : 0/0
  6405 ;;		On exit  : 0/0
  6406 ;;		Unchanged: 0/0
  6407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6408 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6410 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6411 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6412 ;;Total ram usage:        0 bytes
  6413 ;; Hardware stack levels used: 1
  6414 ;; Hardware stack levels required when called: 14
  6415 ;; This function calls:
  6416 ;;		_ECU_LCD_4Bit_Send_Command
  6417 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
  6418 ;;		_ECU_LCD_4Bit_Send_char_Data
  6419 ;;		_LCD_4Bits_Set_Curser
  6420 ;; This function is called by:
  6421 ;;		_main
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           	psect	text1
  6426   0031B0                     __ptext1:
  6427                           	callstack 0
  6428   0031B0                     _update_display:
  6429                           	callstack 16
  6430   0031B0                     
  6431                           ;main.c: 138:     ret = ECU_LCD_4Bit_Send_Command(&LCD_1, 0x0D);
  6432   0031B0  0E39               	movlw	low _LCD_1
  6433   0031B2  0100               	movlb	0	; () banked
  6434   0031B4  6FDF               	movwf	ECU_LCD_4Bit_Send_Command@_LCD& (0+255),b
  6435   0031B6  0E0D               	movlw	13
  6436   0031B8  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  6437   0031BA  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  6438   0031BE  0100               	movlb	0	; () banked
  6439   0031C0  6FFE               	movwf	_ret& (0+255),b
  6440                           
  6441                           ;main.c: 139:     ret = LCD_4Bits_Set_Curser(&LCD_1, 1,1);
  6442   0031C2  0E39               	movlw	low _LCD_1
  6443   0031C4  6FE2               	movwf	LCD_4Bits_Set_Curser@_LCD& (0+255),b
  6444   0031C6  0E01               	movlw	1
  6445   0031C8  6FE3               	movwf	LCD_4Bits_Set_Curser@row& (0+255),b
  6446   0031CA  0E01               	movlw	1
  6447   0031CC  6FE4               	movwf	LCD_4Bits_Set_Curser@coloumn& (0+255),b
  6448   0031CE  EC56  F01C         	call	_LCD_4Bits_Set_Curser	;wreg free
  6449   0031D2  0100               	movlb	0	; () banked
  6450   0031D4  6FFE               	movwf	_ret& (0+255),b
  6451                           
  6452                           ;main.c: 141:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[0] + '0');
  6453   0031D6  0E39               	movlw	low _LCD_1
  6454   0031D8  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  6455   0031DA  5183               	movf	_time_array& (0+255),w,b
  6456   0031DC  0F30               	addlw	48
  6457   0031DE  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  6458   0031E0  ECB6  F020         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  6459   0031E4  0100               	movlb	0	; () banked
  6460   0031E6  6FFE               	movwf	_ret& (0+255),b
  6461                           
  6462                           ;main.c: 142:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[1] + '0');
  6463   0031E8  0E39               	movlw	low _LCD_1
  6464   0031EA  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  6465   0031EC  5184               	movf	(_time_array+1)& (0+255),w,b
  6466   0031EE  0F30               	addlw	48
  6467   0031F0  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  6468   0031F2  ECB6  F020         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  6469   0031F6  0100               	movlb	0	; () banked
  6470   0031F8  6FFE               	movwf	_ret& (0+255),b
  6471                           
  6472                           ;main.c: 143:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, ':');
  6473   0031FA  0E39               	movlw	low _LCD_1
  6474   0031FC  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  6475   0031FE  0E3A               	movlw	58
  6476   003200  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  6477   003202  ECB6  F020         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  6478   003206  0100               	movlb	0	; () banked
  6479   003208  6FFE               	movwf	_ret& (0+255),b
  6480                           
  6481                           ;main.c: 144:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[2] + '0');
  6482   00320A  0E39               	movlw	low _LCD_1
  6483   00320C  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  6484   00320E  5185               	movf	(_time_array+2)& (0+255),w,b
  6485   003210  0F30               	addlw	48
  6486   003212  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  6487   003214  ECB6  F020         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  6488   003218  0100               	movlb	0	; () banked
  6489   00321A  6FFE               	movwf	_ret& (0+255),b
  6490                           
  6491                           ;main.c: 145:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[3] + '0');
  6492   00321C  0E39               	movlw	low _LCD_1
  6493   00321E  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  6494   003220  5186               	movf	(_time_array+3)& (0+255),w,b
  6495   003222  0F30               	addlw	48
  6496   003224  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  6497   003226  ECB6  F020         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  6498   00322A  0100               	movlb	0	; () banked
  6499   00322C  6FFE               	movwf	_ret& (0+255),b
  6500                           
  6501                           ;main.c: 146:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, ':');
  6502   00322E  0E39               	movlw	low _LCD_1
  6503   003230  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  6504   003232  0E3A               	movlw	58
  6505   003234  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  6506   003236  ECB6  F020         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  6507   00323A  0100               	movlb	0	; () banked
  6508   00323C  6FFE               	movwf	_ret& (0+255),b
  6509                           
  6510                           ;main.c: 147:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[4] + '0');
  6511   00323E  0E39               	movlw	low _LCD_1
  6512   003240  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  6513   003242  5187               	movf	(_time_array+4)& (0+255),w,b
  6514   003244  0F30               	addlw	48
  6515   003246  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  6516   003248  ECB6  F020         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  6517   00324C  0100               	movlb	0	; () banked
  6518   00324E  6FFE               	movwf	_ret& (0+255),b
  6519                           
  6520                           ;main.c: 148:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[5] + '0');
  6521   003250  0E39               	movlw	low _LCD_1
  6522   003252  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  6523   003254  5188               	movf	(_time_array+5)& (0+255),w,b
  6524   003256  0F30               	addlw	48
  6525   003258  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  6526   00325A  ECB6  F020         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  6527   00325E  0100               	movlb	0	; () banked
  6528   003260  6FFE               	movwf	_ret& (0+255),b
  6529   003262                     
  6530                           ; BSR set to: 0
  6531                           ;main.c: 150:     ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1,2,6, "Stop Watch"
      +                          );
  6532   003262  0E39               	movlw	low _LCD_1
  6533   003264  0101               	movlb	1	; () banked
  6534   003266  6F5D               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD& (0+255),b
  6535   003268  0E02               	movlw	2
  6536   00326A  6F5E               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Row& (0+255),b
  6537   00326C  0E06               	movlw	6
  6538   00326E  6F5F               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn& (0+255),b
  6539   003270  0E21               	movlw	low STR_1
  6540   003272  6F60               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),b
  6541   003274  5160               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),w,b
  6542   003276  A4D8               	btfss	status,2,c
  6543   003278  0E10               	movlw	high __smallconst
  6544   00327A  6F61               	movwf	(ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)& (0+255),b
  6545   00327C  ECA5  F01C         	call	_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
  6546   003280  0100               	movlb	0	; () banked
  6547   003282  6FFE               	movwf	_ret& (0+255),b
  6548   003284                     
  6549                           ; BSR set to: 0
  6550                           ;main.c: 151:     ret = LCD_4Bits_Set_Curser (&LCD_1, 1,9);
  6551   003284  0E39               	movlw	low _LCD_1
  6552   003286  6FE2               	movwf	LCD_4Bits_Set_Curser@_LCD& (0+255),b
  6553   003288  0E01               	movlw	1
  6554   00328A  6FE3               	movwf	LCD_4Bits_Set_Curser@row& (0+255),b
  6555   00328C  0E09               	movlw	9
  6556   00328E  6FE4               	movwf	LCD_4Bits_Set_Curser@coloumn& (0+255),b
  6557   003290  EC56  F01C         	call	_LCD_4Bits_Set_Curser	;wreg free
  6558   003294  0100               	movlb	0	; () banked
  6559   003296  6FFE               	movwf	_ret& (0+255),b
  6560   003298                     
  6561                           ; BSR set to: 0
  6562   003298  0012               	return		;funcret
  6563   00329A                     __end_of_update_display:
  6564                           	callstack 0
  6565                           
  6566 ;; *************** function _ECU_LCD_4Bit_Send_String_Data_Postition *****************
  6567 ;; Defined at:
  6568 ;;		line 123 in file "ECU_layer/LCD/LCD.c"
  6569 ;; Parameters:    Size  Location     Type
  6570 ;;  _LCD            1   30[BANK1 ] PTR const struct .
  6571 ;;		 -> LCD_1(6), 
  6572 ;;  _Row            1   31[BANK1 ] unsigned char 
  6573 ;;  _Coloumn        1   32[BANK1 ] unsigned char 
  6574 ;;  _Str            2   33[BANK1 ] PTR unsigned char 
  6575 ;;		 -> REALTIMECLOCK_DS1307_Data(18), STR_3(9), STR_2(9), STR_1(11), 
  6576 ;; Auto vars:     Size  Location     Type
  6577 ;;  rt              1   35[BANK1 ] unsigned char 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  1    wreg      unsigned char 
  6580 ;; Registers used:
  6581 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6587 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6588 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6590 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6591 ;;Total ram usage:        6 bytes
  6592 ;; Hardware stack levels used: 1
  6593 ;; Hardware stack levels required when called: 13
  6594 ;; This function calls:
  6595 ;;		_ECU_LCD_4Bit_Send_char_Data
  6596 ;;		_LCD_4Bits_Set_Curser
  6597 ;; This function is called by:
  6598 ;;		_update_display
  6599 ;;		_main
  6600 ;; This function uses a non-reentrant model
  6601 ;;
  6602                           
  6603                           	psect	text2
  6604   00394A                     __ptext2:
  6605                           	callstack 0
  6606   00394A                     _ECU_LCD_4Bit_Send_String_Data_Postition:
  6607                           	callstack 16
  6608   00394A                     
  6609                           ;ECU_layer/LCD/LCD.c: 124:     STD_ReturnType rt = (STD_ReturnType)0x00;
  6610   00394A  0101               	movlb	1	; () banked
  6611   00394C  6B62               	clrf	ECU_LCD_4Bit_Send_String_Data_Postition@rt& (0+255),b
  6612   00394E                     
  6613                           ; BSR set to: 1
  6614                           ;ECU_layer/LCD/LCD.c: 125:      if(((void*)0) == _LCD){
  6615   00394E  515D               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD& (0+255),w,b
  6616   003950  A4D8               	btfss	status,2,c
  6617   003952  EFAD  F01C         	goto	u12291
  6618   003956  EFAF  F01C         	goto	u12290
  6619   00395A                     u12291:
  6620   00395A  EFB2  F01C         	goto	l13309
  6621   00395E                     u12290:
  6622   00395E                     
  6623                           ; BSR set to: 1
  6624                           ;ECU_layer/LCD/LCD.c: 126:         rt = (STD_ReturnType)0x00;
  6625   00395E  6B62               	clrf	ECU_LCD_4Bit_Send_String_Data_Postition@rt& (0+255),b
  6626                           
  6627                           ;ECU_layer/LCD/LCD.c: 127:     }
  6628   003960  EFF0  F01C         	goto	l13317
  6629   003964                     l13309:
  6630                           
  6631                           ; BSR set to: 1
  6632                           ;ECU_layer/LCD/LCD.c: 129:         LCD_4Bits_Set_Curser(_LCD, _Row, _Coloumn);
  6633   003964  C15D  F0E2         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD,LCD_4Bits_Set_Curser@_LCD
  6634   003968  C15E  F0E3         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Row,LCD_4Bits_Set_Curser@row
  6635   00396C  C15F  F0E4         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn,LCD_4Bits_Set_Curser@coloumn
  6636   003970  EC56  F01C         	call	_LCD_4Bits_Set_Curser	;wreg free
  6637                           
  6638                           ;ECU_layer/LCD/LCD.c: 130:         while(*_Str){
  6639   003974  EFD7  F01C         	goto	l13315
  6640   003978                     l13311:
  6641                           
  6642                           ;ECU_layer/LCD/LCD.c: 131:              rt = ECU_LCD_4Bit_Send_char_Data (_LCD, *_Str++)
      +                          ;
  6643   003978  C15D  F0DF         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD,ECU_LCD_4Bit_Send_char_Data@_LCD
  6644   00397C  C160  FFF6         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Str,tblptrl
  6645   003980  C161  FFF7         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1,tblptrh
  6646   003984  0E00               	movlw	low (__smallconst shr (0+16))
  6647   003986  6EF8               	movwf	tblptru,c
  6648   003988  0E0F               	movlw	(high __ramtop+-1)
  6649   00398A  64F7               	cpfsgt	tblptrh,c
  6650   00398C  D003               	bra	u12307
  6651   00398E  0008               	tblrd		*
  6652   003990  50F5               	movf	tablat,w,c
  6653   003992  D005               	bra	u12300
  6654   003994                     u12307:
  6655   003994  CFF6 FFE9          	movff	tblptrl,fsr0l
  6656   003998  CFF7 FFEA          	movff	tblptrh,fsr0h
  6657   00399C  50EF               	movf	indf0,w,c
  6658   00399E                     u12300:
  6659   00399E  0100               	movlb	0	; () banked
  6660   0039A0  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  6661   0039A2  ECB6  F020         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  6662   0039A6  0101               	movlb	1	; () banked
  6663   0039A8  6F62               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@rt& (0+255),b
  6664   0039AA                     
  6665                           ; BSR set to: 1
  6666   0039AA  4B60               	infsnz	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),f,b
  6667   0039AC  2B61               	incf	(ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)& (0+255),f,b
  6668   0039AE                     l13315:
  6669                           
  6670                           ;ECU_layer/LCD/LCD.c: 130:         while(*_Str){
  6671   0039AE  C160  FFF6         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Str,tblptrl
  6672   0039B2  C161  FFF7         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1,tblptrh
  6673   0039B6  0E00               	movlw	low (__smallconst shr (0+16))
  6674   0039B8  6EF8               	movwf	tblptru,c
  6675   0039BA  0E0F               	movlw	(high __ramtop+-1)
  6676   0039BC  64F7               	cpfsgt	tblptrh,c
  6677   0039BE  D003               	bra	u12317
  6678   0039C0  0008               	tblrd		*
  6679   0039C2  50F5               	movf	tablat,w,c
  6680   0039C4  D005               	bra	u12310
  6681   0039C6                     u12317:
  6682   0039C6  CFF6 FFE9          	movff	tblptrl,fsr0l
  6683   0039CA  CFF7 FFEA          	movff	tblptrh,fsr0h
  6684   0039CE  50EF               	movf	indf0,w,c
  6685   0039D0                     u12310:
  6686   0039D0  0900               	iorlw	0
  6687   0039D2  A4D8               	btfss	status,2,c
  6688   0039D4  EFEE  F01C         	goto	u12321
  6689   0039D8  EFF0  F01C         	goto	u12320
  6690   0039DC                     u12321:
  6691   0039DC  EFBC  F01C         	goto	l13311
  6692   0039E0                     u12320:
  6693   0039E0                     l13317:
  6694                           
  6695                           ;ECU_layer/LCD/LCD.c: 136:     return rt;
  6696   0039E0  0101               	movlb	1	; () banked
  6697   0039E2  5162               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@rt& (0+255),w,b
  6698   0039E4                     
  6699                           ; BSR set to: 1
  6700   0039E4  0012               	return		;funcret
  6701   0039E6                     __end_of_ECU_LCD_4Bit_Send_String_Data_Postition:
  6702                           	callstack 0
  6703                           
  6704 ;; *************** function _LCD_4Bits_Set_Curser *****************
  6705 ;; Defined at:
  6706 ;;		line 383 in file "ECU_layer/LCD/LCD.c"
  6707 ;; Parameters:    Size  Location     Type
  6708 ;;  _LCD            1   13[BANK0 ] PTR const struct .
  6709 ;;		 -> LCD_1(6), 
  6710 ;;  row             1   14[BANK0 ] unsigned char 
  6711 ;;  coloumn         1   15[BANK0 ] unsigned char 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  rt              1   16[BANK0 ] unsigned char 
  6714 ;; Return value:  Size  Location     Type
  6715 ;;                  1    wreg      unsigned char 
  6716 ;; Registers used:
  6717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6718 ;; Tracked objects:
  6719 ;;		On entry : 0/0
  6720 ;;		On exit  : 0/0
  6721 ;;		Unchanged: 0/0
  6722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6723 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6724 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6725 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6726 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6727 ;;Total ram usage:        4 bytes
  6728 ;; Hardware stack levels used: 1
  6729 ;; Hardware stack levels required when called: 12
  6730 ;; This function calls:
  6731 ;;		_ECU_LCD_4Bit_Send_Command
  6732 ;; This function is called by:
  6733 ;;		_update_display
  6734 ;;		_main
  6735 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
  6736 ;;		_ECU_LCD_4Bit_Send_char_Data_Position
  6737 ;; This function uses a non-reentrant model
  6738 ;;
  6739                           
  6740                           	psect	text3
  6741   0038AC                     __ptext3:
  6742                           	callstack 0
  6743   0038AC                     _LCD_4Bits_Set_Curser:
  6744                           	callstack 17
  6745   0038AC                     
  6746                           ;ECU_layer/LCD/LCD.c: 384:      STD_ReturnType rt = (STD_ReturnType)0x00;
  6747   0038AC  0100               	movlb	0	; () banked
  6748   0038AE  6BE5               	clrf	LCD_4Bits_Set_Curser@rt& (0+255),b
  6749   0038B0                     
  6750                           ; BSR set to: 0
  6751                           ;ECU_layer/LCD/LCD.c: 385:      coloumn-- ;
  6752   0038B0  07E4               	decf	LCD_4Bits_Set_Curser@coloumn& (0+255),f,b
  6753   0038B2                     
  6754                           ; BSR set to: 0
  6755                           ;ECU_layer/LCD/LCD.c: 386:      if(((void*)0) == _LCD ){
  6756   0038B2  51E2               	movf	LCD_4Bits_Set_Curser@_LCD& (0+255),w,b
  6757   0038B4  A4D8               	btfss	status,2,c
  6758   0038B6  EF5F  F01C         	goto	u12141
  6759   0038BA  EF61  F01C         	goto	u12140
  6760   0038BE                     u12141:
  6761   0038BE  EF90  F01C         	goto	l13129
  6762   0038C2                     u12140:
  6763   0038C2                     
  6764                           ; BSR set to: 0
  6765                           ;ECU_layer/LCD/LCD.c: 387:         rt = (STD_ReturnType)0x00;
  6766   0038C2  6BE5               	clrf	LCD_4Bits_Set_Curser@rt& (0+255),b
  6767                           
  6768                           ;ECU_layer/LCD/LCD.c: 388:     }
  6769   0038C4  EFA3  F01C         	goto	l13131
  6770   0038C8                     l13119:
  6771                           
  6772                           ; BSR set to: 0
  6773                           ;ECU_layer/LCD/LCD.c: 392:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0x80 
      +                          + coloumn ));break;
  6774   0038C8  C0E2  F0DF         	movff	LCD_4Bits_Set_Curser@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  6775   0038CC  51E4               	movf	LCD_4Bits_Set_Curser@coloumn& (0+255),w,b
  6776   0038CE  0F80               	addlw	128
  6777   0038D0  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  6778   0038D2  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  6779   0038D6  0100               	movlb	0	; () banked
  6780   0038D8  6FE5               	movwf	LCD_4Bits_Set_Curser@rt& (0+255),b
  6781   0038DA  EFA3  F01C         	goto	l13131
  6782   0038DE                     l13121:
  6783                           
  6784                           ; BSR set to: 0
  6785                           ;ECU_layer/LCD/LCD.c: 394:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0xc0 
      +                          + coloumn ));break;
  6786   0038DE  C0E2  F0DF         	movff	LCD_4Bits_Set_Curser@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  6787   0038E2  51E4               	movf	LCD_4Bits_Set_Curser@coloumn& (0+255),w,b
  6788   0038E4  0FC0               	addlw	192
  6789   0038E6  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  6790   0038E8  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  6791   0038EC  0100               	movlb	0	; () banked
  6792   0038EE  6FE5               	movwf	LCD_4Bits_Set_Curser@rt& (0+255),b
  6793   0038F0  EFA3  F01C         	goto	l13131
  6794   0038F4                     l13123:
  6795                           
  6796                           ; BSR set to: 0
  6797                           ;ECU_layer/LCD/LCD.c: 396:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0x94 
      +                          + coloumn ));break;
  6798   0038F4  C0E2  F0DF         	movff	LCD_4Bits_Set_Curser@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  6799   0038F8  51E4               	movf	LCD_4Bits_Set_Curser@coloumn& (0+255),w,b
  6800   0038FA  0F94               	addlw	148
  6801   0038FC  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  6802   0038FE  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  6803   003902  0100               	movlb	0	; () banked
  6804   003904  6FE5               	movwf	LCD_4Bits_Set_Curser@rt& (0+255),b
  6805   003906  EFA3  F01C         	goto	l13131
  6806   00390A                     l13125:
  6807                           
  6808                           ; BSR set to: 0
  6809                           ;ECU_layer/LCD/LCD.c: 398:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0xd4 
      +                          + coloumn ));break;
  6810   00390A  C0E2  F0DF         	movff	LCD_4Bits_Set_Curser@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
  6811   00390E  51E4               	movf	LCD_4Bits_Set_Curser@coloumn& (0+255),w,b
  6812   003910  0FD4               	addlw	212
  6813   003912  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  6814   003914  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  6815   003918  0100               	movlb	0	; () banked
  6816   00391A  6FE5               	movwf	LCD_4Bits_Set_Curser@rt& (0+255),b
  6817   00391C  EFA3  F01C         	goto	l13131
  6818   003920                     l13129:
  6819                           
  6820                           ; BSR set to: 0
  6821   003920  51E3               	movf	LCD_4Bits_Set_Curser@row& (0+255),w,b
  6822                           
  6823                           ; Switch size 1, requested type "simple"
  6824                           ; Number of cases is 4, Range of values is 1 to 4
  6825                           ; switch strategies available:
  6826                           ; Name         Instructions Cycles
  6827                           ; simple_byte           13     7 (average)
  6828                           ;	Chosen strategy is simple_byte
  6829   003922  0A01               	xorlw	1	; case 1
  6830   003924  B4D8               	btfsc	status,2,c
  6831   003926  EF64  F01C         	goto	l13119
  6832   00392A  0A03               	xorlw	3	; case 2
  6833   00392C  B4D8               	btfsc	status,2,c
  6834   00392E  EF6F  F01C         	goto	l13121
  6835   003932  0A01               	xorlw	1	; case 3
  6836   003934  B4D8               	btfsc	status,2,c
  6837   003936  EF7A  F01C         	goto	l13123
  6838   00393A  0A07               	xorlw	7	; case 4
  6839   00393C  B4D8               	btfsc	status,2,c
  6840   00393E  EF85  F01C         	goto	l13125
  6841   003942  EFA3  F01C         	goto	l13131
  6842   003946                     l13131:
  6843                           
  6844                           ; BSR set to: 0
  6845                           ;ECU_layer/LCD/LCD.c: 401:      return rt;
  6846   003946  51E5               	movf	LCD_4Bits_Set_Curser@rt& (0+255),w,b
  6847   003948                     
  6848                           ; BSR set to: 0
  6849   003948  0012               	return		;funcret
  6850   00394A                     __end_of_LCD_4Bits_Set_Curser:
  6851                           	callstack 0
  6852                           
  6853 ;; *************** function _ECU_LCD_4Bit_Send_char_Data *****************
  6854 ;; Defined at:
  6855 ;;		line 72 in file "ECU_layer/LCD/LCD.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;  _LCD            1   10[BANK0 ] PTR const struct .
  6858 ;;		 -> LCD_1(6), 
  6859 ;;  _Data           1   11[BANK0 ] unsigned char 
  6860 ;; Auto vars:     Size  Location     Type
  6861 ;;  rt              1   12[BANK0 ] unsigned char 
  6862 ;; Return value:  Size  Location     Type
  6863 ;;                  1    wreg      unsigned char 
  6864 ;; Registers used:
  6865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6866 ;; Tracked objects:
  6867 ;;		On entry : 0/0
  6868 ;;		On exit  : 0/0
  6869 ;;		Unchanged: 0/0
  6870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6871 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6874 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6875 ;;Total ram usage:        3 bytes
  6876 ;; Hardware stack levels used: 1
  6877 ;; Hardware stack levels required when called: 11
  6878 ;; This function calls:
  6879 ;;		_LCD_4Bits_Send_Enable_Signal
  6880 ;;		_LCD_Send_4Bits
  6881 ;;		_gpio_pin_write_logic
  6882 ;; This function is called by:
  6883 ;;		_update_display
  6884 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
  6885 ;;		_ECU_LCD_4Bit_Send_char_Data_Position
  6886 ;;		_ECU_LCD_4Bit_Send_String_Data
  6887 ;;		_ECU_LCD_4Bit_Send_Custom_Char
  6888 ;; This function uses a non-reentrant model
  6889 ;;
  6890                           
  6891                           	psect	text4
  6892   00416C                     __ptext4:
  6893                           	callstack 0
  6894   00416C                     _ECU_LCD_4Bit_Send_char_Data:
  6895                           	callstack 18
  6896   00416C                     
  6897                           ;ECU_layer/LCD/LCD.c: 74:     if(((void*)0) == _LCD){
  6898   00416C  0100               	movlb	0	; () banked
  6899   00416E  51DF               	movf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),w,b
  6900   004170  A4D8               	btfss	status,2,c
  6901   004172  EFBD  F020         	goto	u12151
  6902   004176  EFBF  F020         	goto	u12150
  6903   00417A                     u12151:
  6904   00417A  EFC2  F020         	goto	l13141
  6905   00417E                     u12150:
  6906   00417E                     
  6907                           ; BSR set to: 0
  6908                           ;ECU_layer/LCD/LCD.c: 75:         rt = (STD_ReturnType)0x00;
  6909   00417E  6BE1               	clrf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),b
  6910                           
  6911                           ;ECU_layer/LCD/LCD.c: 76:     }
  6912   004180  EFE8  F020         	goto	l13143
  6913   004184                     l13141:
  6914                           
  6915                           ; BSR set to: 0
  6916                           ;ECU_layer/LCD/LCD.c: 78:         rt = gpio_pin_write_logic(&(_LCD->LCD_RS), GPIO_Pin_Lo
      +                          gic_HIGH);
  6917   004184  C0DF  F0D5         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,gpio_pin_write_logic@pinConfig
  6918   004188  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
  6919   00418A  0E01               	movlw	1
  6920   00418C  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
  6921   00418E  EC69  F012         	call	_gpio_pin_write_logic	;wreg free
  6922   004192  0100               	movlb	0	; () banked
  6923   004194  6FE1               	movwf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),b
  6924                           
  6925                           ;ECU_layer/LCD/LCD.c: 80:         rt = LCD_Send_4Bits(_LCD, _Data >> 4);
  6926   004196  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,LCD_Send_4Bits@_LCD
  6927   00419A  39E0               	swapf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),w,b
  6928   00419C  0B0F               	andlw	15
  6929   00419E  6FDC               	movwf	LCD_Send_4Bits@_Data& (0+255),b
  6930   0041A0  ECF3  F01C         	call	_LCD_Send_4Bits	;wreg free
  6931   0041A4  0100               	movlb	0	; () banked
  6932   0041A6  6FE1               	movwf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),b
  6933                           
  6934                           ;ECU_layer/LCD/LCD.c: 82:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
  6935   0041A8  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,LCD_4Bits_Send_Enable_Signal@_LCD
  6936   0041AC  EC9E  F022         	call	_LCD_4Bits_Send_Enable_Signal	;wreg free
  6937   0041B0  0100               	movlb	0	; () banked
  6938   0041B2  6FE1               	movwf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),b
  6939                           
  6940                           ;ECU_layer/LCD/LCD.c: 84:         rt = LCD_Send_4Bits(_LCD, _Data);
  6941   0041B4  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,LCD_Send_4Bits@_LCD
  6942   0041B8  C0E0  F0DC         	movff	ECU_LCD_4Bit_Send_char_Data@_Data,LCD_Send_4Bits@_Data
  6943   0041BC  ECF3  F01C         	call	_LCD_Send_4Bits	;wreg free
  6944   0041C0  0100               	movlb	0	; () banked
  6945   0041C2  6FE1               	movwf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),b
  6946                           
  6947                           ;ECU_layer/LCD/LCD.c: 86:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
  6948   0041C4  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,LCD_4Bits_Send_Enable_Signal@_LCD
  6949   0041C8  EC9E  F022         	call	_LCD_4Bits_Send_Enable_Signal	;wreg free
  6950   0041CC  0100               	movlb	0	; () banked
  6951   0041CE  6FE1               	movwf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),b
  6952   0041D0                     l13143:
  6953                           
  6954                           ; BSR set to: 0
  6955                           ;ECU_layer/LCD/LCD.c: 89:     return rt;
  6956   0041D0  51E1               	movf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),w,b
  6957   0041D2                     
  6958                           ; BSR set to: 0
  6959   0041D2  0012               	return		;funcret
  6960   0041D4                     __end_of_ECU_LCD_4Bit_Send_char_Data:
  6961                           	callstack 0
  6962                           
  6963 ;; *************** function _keyPad_Read *****************
  6964 ;; Defined at:
  6965 ;;		line 39 in file "ECU_layer/KeyPad/ecu_keyPad.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  keypad          2    6[BANK0 ] PTR const struct .
  6968 ;;		 -> keypad_1(8), 
  6969 ;;  keypad_value    1    8[BANK0 ] PTR unsigned char 
  6970 ;;		 -> userInput(1), nextBack(1), NumberPressed(1), 
  6971 ;; Auto vars:     Size  Location     Type
  6972 ;;  coloumn_logi    1   15[BANK0 ] enum E3381
  6973 ;;  l_coloumns_c    1   14[BANK0 ] unsigned char 
  6974 ;;  l_rows_count    1   13[BANK0 ] unsigned char 
  6975 ;;  l_counter       1   12[BANK0 ] unsigned char 
  6976 ;;  rt              1   11[BANK0 ] unsigned char 
  6977 ;; Return value:  Size  Location     Type
  6978 ;;                  1    wreg      unsigned char 
  6979 ;; Registers used:
  6980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6981 ;; Tracked objects:
  6982 ;;		On entry : 0/0
  6983 ;;		On exit  : 0/0
  6984 ;;		Unchanged: 0/0
  6985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6986 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6987 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6988 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6989 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6990 ;;Total ram usage:       10 bytes
  6991 ;; Hardware stack levels used: 1
  6992 ;; Hardware stack levels required when called: 10
  6993 ;; This function calls:
  6994 ;;		_gpio_pin_read_logic
  6995 ;;		_gpio_pin_write_logic
  6996 ;; This function is called by:
  6997 ;;		_main
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           	psect	text5
  7002   002FC8                     __ptext5:
  7003                           	callstack 0
  7004   002FC8                     _keyPad_Read:
  7005                           	callstack 20
  7006   002FC8                     
  7007                           ;ECU_layer/KeyPad/ecu_keyPad.c: 41:     uint8 l_rows_counter = 0;
  7008   002FC8  0100               	movlb	0	; () banked
  7009   002FCA  6BE2               	clrf	keyPad_Read@l_rows_counter& (0+255),b
  7010                           
  7011                           ;ECU_layer/KeyPad/ecu_keyPad.c: 42:     uint8 l_coloumns_counter = 0;
  7012   002FCC  6BE3               	clrf	keyPad_Read@l_coloumns_counter& (0+255),b
  7013                           
  7014                           ;ECU_layer/KeyPad/ecu_keyPad.c: 43:     uint8 l_counter = 0;
  7015   002FCE  6BE1               	clrf	keyPad_Read@l_counter& (0+255),b
  7016   002FD0                     
  7017                           ; BSR set to: 0
  7018                           ;ECU_layer/KeyPad/ecu_keyPad.c: 44:     logic_t coloumn_logic;;ECU_layer/KeyPad/ecu_keyP
      +                          ad.c: 45:      if(((void*)0) == keypad || ((void*)0) == keypad_value ){
  7019   002FD0  51DB               	movf	keyPad_Read@keypad& (0+255),w,b
  7020   002FD2  11DC               	iorwf	(keyPad_Read@keypad+1)& (0+255),w,b
  7021   002FD4  B4D8               	btfsc	status,2,c
  7022   002FD6  EFEF  F017         	goto	u12611
  7023   002FDA  EFF1  F017         	goto	u12610
  7024   002FDE                     u12611:
  7025   002FDE  EFF9  F017         	goto	l2307
  7026   002FE2                     u12610:
  7027   002FE2                     
  7028                           ; BSR set to: 0
  7029   002FE2  51DD               	movf	keyPad_Read@keypad_value& (0+255),w,b
  7030   002FE4  A4D8               	btfss	status,2,c
  7031   002FE6  EFF7  F017         	goto	u12621
  7032   002FEA  EFF9  F017         	goto	u12620
  7033   002FEE                     u12621:
  7034   002FEE  EFFC  F017         	goto	l2305
  7035   002FF2                     u12620:
  7036   002FF2                     l2307:
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;ECU_layer/KeyPad/ecu_keyPad.c: 46:         rt = (STD_ReturnType)0x00;
  7040   002FF2  6BE0               	clrf	keyPad_Read@rt& (0+255),b
  7041                           
  7042                           ;ECU_layer/KeyPad/ecu_keyPad.c: 47:     }
  7043   002FF4  EF5E  F018         	goto	l2308
  7044   002FF8                     l2305:
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;ECU_layer/KeyPad/ecu_keyPad.c: 49:         for(l_rows_counter = 0 ; l_rows_counter < 4 
      +                          ; l_rows_counter++){
  7048   002FF8  6BE2               	clrf	keyPad_Read@l_rows_counter& (0+255),b
  7049   002FFA                     l2309:
  7050                           
  7051                           ; BSR set to: 0
  7052                           ;ECU_layer/KeyPad/ecu_keyPad.c: 50:             for(l_counter = 0 ; l_counter < 4 ; l_co
      +                          unter++){
  7053   002FFA  6BE1               	clrf	keyPad_Read@l_counter& (0+255),b
  7054   002FFC                     l13561:
  7055                           
  7056                           ; BSR set to: 0
  7057   002FFC  51E1               	movf	keyPad_Read@l_counter& (0+255),w,b
  7058   002FFE  25DB               	addwf	keyPad_Read@keypad& (0+255),w,b
  7059   003000  6FD5               	movwf	gpio_pin_write_logic@pinConfig& (0+255),b
  7060   003002  0E00               	movlw	0
  7061   003004  21DC               	addwfc	(keyPad_Read@keypad+1)& (0+255),w,b
  7062   003006  6FD6               	movwf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
  7063   003008  0E00               	movlw	0
  7064   00300A  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
  7065   00300C  EC69  F012         	call	_gpio_pin_write_logic	;wreg free
  7066   003010                     
  7067                           ;ECU_layer/KeyPad/ecu_keyPad.c: 52:             }
  7068   003010  0100               	movlb	0	; () banked
  7069   003012  2BE1               	incf	keyPad_Read@l_counter& (0+255),f,b
  7070   003014                     
  7071                           ; BSR set to: 0
  7072   003014  0E03               	movlw	3
  7073   003016  65E1               	cpfsgt	keyPad_Read@l_counter& (0+255),b
  7074   003018  EF10  F018         	goto	u12631
  7075   00301C  EF12  F018         	goto	u12630
  7076   003020                     u12631:
  7077   003020  EFFE  F017         	goto	l13561
  7078   003024                     u12630:
  7079   003024                     
  7080                           ; BSR set to: 0
  7081                           ;ECU_layer/KeyPad/ecu_keyPad.c: 53:             gpio_pin_write_logic(&(keypad->KeypadRow
      +                          sConfig[l_rows_counter]), GPIO_Pin_Logic_HIGH );
  7082   003024  51E2               	movf	keyPad_Read@l_rows_counter& (0+255),w,b
  7083   003026  25DB               	addwf	keyPad_Read@keypad& (0+255),w,b
  7084   003028  6FD5               	movwf	gpio_pin_write_logic@pinConfig& (0+255),b
  7085   00302A  0E00               	movlw	0
  7086   00302C  21DC               	addwfc	(keyPad_Read@keypad+1)& (0+255),w,b
  7087   00302E  6FD6               	movwf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
  7088   003030  0E01               	movlw	1
  7089   003032  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
  7090   003034  EC69  F012         	call	_gpio_pin_write_logic	;wreg free
  7091   003038                     
  7092                           ;ECU_layer/KeyPad/ecu_keyPad.c: 54:             for(l_coloumns_counter = 0 ; l_coloumns_
      +                          counter < 4 ; l_coloumns_counter++){
  7093   003038  0100               	movlb	0	; () banked
  7094   00303A  6BE3               	clrf	keyPad_Read@l_coloumns_counter& (0+255),b
  7095   00303C                     l13575:
  7096                           
  7097                           ; BSR set to: 0
  7098   00303C  51E3               	movf	keyPad_Read@l_coloumns_counter& (0+255),w,b
  7099   00303E  25DB               	addwf	keyPad_Read@keypad& (0+255),w,b
  7100   003040  6FDE               	movwf	??_keyPad_Read& (0+255),b
  7101   003042  0E00               	movlw	0
  7102   003044  21DC               	addwfc	(keyPad_Read@keypad+1)& (0+255),w,b
  7103   003046  6FDF               	movwf	(??_keyPad_Read+1)& (0+255),b
  7104   003048  0E04               	movlw	4
  7105   00304A  25DE               	addwf	??_keyPad_Read& (0+255),w,b
  7106   00304C  6FD5               	movwf	gpio_pin_read_logic@pinConfig& (0+255),b
  7107   00304E  0E00               	movlw	0
  7108   003050  21DF               	addwfc	(??_keyPad_Read+1)& (0+255),w,b
  7109   003052  6FD6               	movwf	(gpio_pin_read_logic@pinConfig+1)& (0+255),b
  7110   003054  0EE4               	movlw	low keyPad_Read@coloumn_logic
  7111   003056  6FD7               	movwf	gpio_pin_read_logic@logic& (0+255),b
  7112   003058  EC02  F016         	call	_gpio_pin_read_logic	;wreg free
  7113   00305C                     
  7114                           ;ECU_layer/KeyPad/ecu_keyPad.c: 56:                if(coloumn_logic == GPIO_Pin_Logic_HI
      +                          GH ){
  7115   00305C  0100               	movlb	0	; () banked
  7116   00305E  05E4               	decf	keyPad_Read@coloumn_logic& (0+255),w,b
  7117   003060  A4D8               	btfss	status,2,c
  7118   003062  EF35  F018         	goto	u12641
  7119   003066  EF37  F018         	goto	u12640
  7120   00306A                     u12641:
  7121   00306A  EF4A  F018         	goto	l13581
  7122   00306E                     u12640:
  7123   00306E                     
  7124                           ; BSR set to: 0
  7125                           ;ECU_layer/KeyPad/ecu_keyPad.c: 57:                    *keypad_value = btn_value[l_rows_
      +                          counter][l_coloumns_counter];
  7126   00306E  51E2               	movf	keyPad_Read@l_rows_counter& (0+255),w,b
  7127   003070  0D04               	mullw	4
  7128   003072  0E00               	movlw	low _btn_value
  7129   003074  24F3               	addwf	243,w,c
  7130   003076  6FDE               	movwf	??_keyPad_Read& (0+255),b
  7131   003078  0E01               	movlw	high _btn_value
  7132   00307A  20F4               	addwfc	prodh,w,c
  7133   00307C  6FDF               	movwf	(??_keyPad_Read+1)& (0+255),b
  7134   00307E  51E3               	movf	keyPad_Read@l_coloumns_counter& (0+255),w,b
  7135   003080  25DE               	addwf	??_keyPad_Read& (0+255),w,b
  7136   003082  6ED9               	movwf	fsr2l,c
  7137   003084  0E00               	movlw	0
  7138   003086  21DF               	addwfc	(??_keyPad_Read+1)& (0+255),w,b
  7139   003088  6EDA               	movwf	fsr2h,c
  7140   00308A  51DD               	movf	keyPad_Read@keypad_value& (0+255),w,b
  7141   00308C  6EE1               	movwf	fsr1l,c
  7142   00308E  6AE2               	clrf	fsr1h,c
  7143   003090  CFDF FFE7          	movff	indf2,indf1
  7144   003094                     l13581:
  7145                           
  7146                           ; BSR set to: 0
  7147                           ;ECU_layer/KeyPad/ecu_keyPad.c: 60:             }
  7148   003094  2BE3               	incf	keyPad_Read@l_coloumns_counter& (0+255),f,b
  7149   003096                     
  7150                           ; BSR set to: 0
  7151   003096  0E03               	movlw	3
  7152   003098  65E3               	cpfsgt	keyPad_Read@l_coloumns_counter& (0+255),b
  7153   00309A  EF51  F018         	goto	u12651
  7154   00309E  EF53  F018         	goto	u12650
  7155   0030A2                     u12651:
  7156   0030A2  EF1E  F018         	goto	l13575
  7157   0030A6                     u12650:
  7158   0030A6                     
  7159                           ; BSR set to: 0
  7160                           ;ECU_layer/KeyPad/ecu_keyPad.c: 61:         }
  7161   0030A6  2BE2               	incf	keyPad_Read@l_rows_counter& (0+255),f,b
  7162   0030A8                     
  7163                           ; BSR set to: 0
  7164   0030A8  0E03               	movlw	3
  7165   0030AA  65E2               	cpfsgt	keyPad_Read@l_rows_counter& (0+255),b
  7166   0030AC  EF5A  F018         	goto	u12661
  7167   0030B0  EF5C  F018         	goto	u12660
  7168   0030B4                     u12661:
  7169   0030B4  EFFD  F017         	goto	l2309
  7170   0030B8                     u12660:
  7171   0030B8                     
  7172                           ; BSR set to: 0
  7173                           ;ECU_layer/KeyPad/ecu_keyPad.c: 62:         rt = (STD_ReturnType)0x01;
  7174   0030B8  0E01               	movlw	1
  7175   0030BA  6FE0               	movwf	keyPad_Read@rt& (0+255),b
  7176   0030BC                     l2308:
  7177                           
  7178                           ; BSR set to: 0
  7179                           ;ECU_layer/KeyPad/ecu_keyPad.c: 64:     return rt;
  7180   0030BC  51E0               	movf	keyPad_Read@rt& (0+255),w,b
  7181   0030BE                     
  7182                           ; BSR set to: 0
  7183   0030BE  0012               	return		;funcret
  7184   0030C0                     __end_of_keyPad_Read:
  7185                           	callstack 0
  7186                           
  7187 ;; *************** function _gpio_pin_read_logic *****************
  7188 ;; Defined at:
  7189 ;;		line 139 in file "MCAL_layer/GPIO/hal_gpio.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  pinConfig       2    0[BANK0 ] PTR const struct .
  7192 ;;		 -> keypad_1$KeypadColoumnsConfig(4), keypad_1(8), 
  7193 ;;  logic           1    2[BANK0 ] PTR enum E3381
  7194 ;;		 -> ECU_Button_Read@Get_buuton_logic(1), keyPad_Read@coloumn_logic(1), 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;  rt              1    5[BANK0 ] unsigned char 
  7197 ;; Return value:  Size  Location     Type
  7198 ;;                  1    wreg      unsigned char 
  7199 ;; Registers used:
  7200 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7201 ;; Tracked objects:
  7202 ;;		On entry : 0/0
  7203 ;;		On exit  : 0/0
  7204 ;;		Unchanged: 0/0
  7205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7206 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7207 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7208 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7209 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7210 ;;Total ram usage:        6 bytes
  7211 ;; Hardware stack levels used: 1
  7212 ;; Hardware stack levels required when called: 9
  7213 ;; This function calls:
  7214 ;;		Nothing
  7215 ;; This function is called by:
  7216 ;;		_keyPad_Read
  7217 ;;		_ECU_Button_Read
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text6
  7222   002C04                     __ptext6:
  7223                           	callstack 0
  7224   002C04                     _gpio_pin_read_logic:
  7225                           	callstack 20
  7226   002C04                     
  7227                           ;MCAL_layer/GPIO/hal_gpio.c: 140:     STD_ReturnType rt = (STD_ReturnType)0x01;
  7228   002C04  0E01               	movlw	1
  7229   002C06  0100               	movlb	0	; () banked
  7230   002C08  6FDA               	movwf	gpio_pin_read_logic@rt& (0+255),b
  7231   002C0A                     
  7232                           ; BSR set to: 0
  7233                           ;MCAL_layer/GPIO/hal_gpio.c: 141:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 
      +                          -1 || ((void*)0) == logic ){
  7234   002C0A  51D5               	movf	gpio_pin_read_logic@pinConfig& (0+255),w,b
  7235   002C0C  11D6               	iorwf	(gpio_pin_read_logic@pinConfig+1)& (0+255),w,b
  7236   002C0E  B4D8               	btfsc	status,2,c
  7237   002C10  EF0C  F016         	goto	u12331
  7238   002C14  EF0E  F016         	goto	u12330
  7239   002C18                     u12331:
  7240   002C18  EF27  F016         	goto	l1007
  7241   002C1C                     u12330:
  7242   002C1C                     
  7243                           ; BSR set to: 0
  7244   002C1C  C0D5  FFD9         	movff	gpio_pin_read_logic@pinConfig,fsr2l
  7245   002C20  C0D6  FFDA         	movff	gpio_pin_read_logic@pinConfig+1,fsr2h
  7246   002C24  30DF               	rrcf	223,w,c
  7247   002C26  32E8               	rrcf	wreg,f,c
  7248   002C28  32E8               	rrcf	wreg,f,c
  7249   002C2A  0B07               	andlw	7
  7250   002C2C  6FD8               	movwf	??_gpio_pin_read_logic& (0+255),b
  7251   002C2E  0E08               	movlw	8
  7252   002C30  61D8               	cpfslt	??_gpio_pin_read_logic& (0+255),b
  7253   002C32  EF1D  F016         	goto	u12341
  7254   002C36  EF1F  F016         	goto	u12340
  7255   002C3A                     u12341:
  7256   002C3A  EF27  F016         	goto	l1007
  7257   002C3E                     u12340:
  7258   002C3E                     
  7259                           ; BSR set to: 0
  7260   002C3E  51D7               	movf	gpio_pin_read_logic@logic& (0+255),w,b
  7261   002C40  A4D8               	btfss	status,2,c
  7262   002C42  EF25  F016         	goto	u12351
  7263   002C46  EF27  F016         	goto	u12350
  7264   002C4A                     u12351:
  7265   002C4A  EFB6  F016         	goto	l13339
  7266   002C4E                     u12350:
  7267   002C4E                     l1007:
  7268                           
  7269                           ; BSR set to: 0
  7270                           ;MCAL_layer/GPIO/hal_gpio.c: 142:         rt = (STD_ReturnType)0x00;
  7271   002C4E  6BDA               	clrf	gpio_pin_read_logic@rt& (0+255),b
  7272                           
  7273                           ;MCAL_layer/GPIO/hal_gpio.c: 143:     }
  7274   002C50  EFD2  F016         	goto	l13341
  7275   002C54                     l13329:
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;MCAL_layer/GPIO/hal_gpio.c: 147:                         *logic = ((PORTA >> pinConfig-
      +                          >pin)&1);break;
  7279   002C54  51D7               	movf	gpio_pin_read_logic@logic& (0+255),w,b
  7280   002C56  6ED9               	movwf	fsr2l,c
  7281   002C58  6ADA               	clrf	fsr2h,c
  7282   002C5A  C0D5  FFE1         	movff	gpio_pin_read_logic@pinConfig,fsr1l
  7283   002C5E  C0D6  FFE2         	movff	gpio_pin_read_logic@pinConfig+1,fsr1h
  7284   002C62  30E7               	rrcf	231,w,c
  7285   002C64  32E8               	rrcf	wreg,f,c
  7286   002C66  32E8               	rrcf	wreg,f,c
  7287   002C68  0B07               	andlw	7
  7288   002C6A  6FD8               	movwf	??_gpio_pin_read_logic& (0+255),b
  7289   002C6C  CF80 F0D9          	movff	3968,??_gpio_pin_read_logic+1	;volatile
  7290   002C70  2BD8               	incf	??_gpio_pin_read_logic& (0+255),f,b
  7291   002C72  EF3D  F016         	goto	u12364
  7292   002C76                     u12365:
  7293   002C76  90D8               	bcf	status,0,c
  7294   002C78  33D9               	rrcf	(??_gpio_pin_read_logic+1)& (0+255),f,b
  7295   002C7A                     u12364:
  7296   002C7A  2FD8               	decfsz	??_gpio_pin_read_logic& (0+255),f,b
  7297   002C7C  EF3B  F016         	goto	u12365
  7298   002C80  0100               	movlb	0	; () banked
  7299   002C82  51D9               	movf	(??_gpio_pin_read_logic+1)& (0+255),w,b
  7300   002C84  0B01               	andlw	1
  7301   002C86  6EDF               	movwf	indf2,c
  7302   002C88  EFD2  F016         	goto	l13341
  7303   002C8C                     l13331:
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;MCAL_layer/GPIO/hal_gpio.c: 149:                         *logic = ((PORTB >> pinConfig-
      +                          >pin)&1);break;
  7307   002C8C  51D7               	movf	gpio_pin_read_logic@logic& (0+255),w,b
  7308   002C8E  6ED9               	movwf	fsr2l,c
  7309   002C90  6ADA               	clrf	fsr2h,c
  7310   002C92  C0D5  FFE1         	movff	gpio_pin_read_logic@pinConfig,fsr1l
  7311   002C96  C0D6  FFE2         	movff	gpio_pin_read_logic@pinConfig+1,fsr1h
  7312   002C9A  30E7               	rrcf	231,w,c
  7313   002C9C  32E8               	rrcf	wreg,f,c
  7314   002C9E  32E8               	rrcf	wreg,f,c
  7315   002CA0  0B07               	andlw	7
  7316   002CA2  6FD8               	movwf	??_gpio_pin_read_logic& (0+255),b
  7317   002CA4  CF81 F0D9          	movff	3969,??_gpio_pin_read_logic+1	;volatile
  7318   002CA8  2BD8               	incf	??_gpio_pin_read_logic& (0+255),f,b
  7319   002CAA  EF59  F016         	goto	u12374
  7320   002CAE                     u12375:
  7321   002CAE  90D8               	bcf	status,0,c
  7322   002CB0  33D9               	rrcf	(??_gpio_pin_read_logic+1)& (0+255),f,b
  7323   002CB2                     u12374:
  7324   002CB2  2FD8               	decfsz	??_gpio_pin_read_logic& (0+255),f,b
  7325   002CB4  EF57  F016         	goto	u12375
  7326   002CB8  0100               	movlb	0	; () banked
  7327   002CBA  51D9               	movf	(??_gpio_pin_read_logic+1)& (0+255),w,b
  7328   002CBC  0B01               	andlw	1
  7329   002CBE  6EDF               	movwf	indf2,c
  7330   002CC0  EFD2  F016         	goto	l13341
  7331   002CC4                     l13333:
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;MCAL_layer/GPIO/hal_gpio.c: 151:                         *logic = ((PORTC >> pinConfig-
      +                          >pin)&1);break;
  7335   002CC4  51D7               	movf	gpio_pin_read_logic@logic& (0+255),w,b
  7336   002CC6  6ED9               	movwf	fsr2l,c
  7337   002CC8  6ADA               	clrf	fsr2h,c
  7338   002CCA  C0D5  FFE1         	movff	gpio_pin_read_logic@pinConfig,fsr1l
  7339   002CCE  C0D6  FFE2         	movff	gpio_pin_read_logic@pinConfig+1,fsr1h
  7340   002CD2  30E7               	rrcf	231,w,c
  7341   002CD4  32E8               	rrcf	wreg,f,c
  7342   002CD6  32E8               	rrcf	wreg,f,c
  7343   002CD8  0B07               	andlw	7
  7344   002CDA  6FD8               	movwf	??_gpio_pin_read_logic& (0+255),b
  7345   002CDC  CF82 F0D9          	movff	3970,??_gpio_pin_read_logic+1	;volatile
  7346   002CE0  2BD8               	incf	??_gpio_pin_read_logic& (0+255),f,b
  7347   002CE2  EF75  F016         	goto	u12384
  7348   002CE6                     u12385:
  7349   002CE6  90D8               	bcf	status,0,c
  7350   002CE8  33D9               	rrcf	(??_gpio_pin_read_logic+1)& (0+255),f,b
  7351   002CEA                     u12384:
  7352   002CEA  2FD8               	decfsz	??_gpio_pin_read_logic& (0+255),f,b
  7353   002CEC  EF73  F016         	goto	u12385
  7354   002CF0  0100               	movlb	0	; () banked
  7355   002CF2  51D9               	movf	(??_gpio_pin_read_logic+1)& (0+255),w,b
  7356   002CF4  0B01               	andlw	1
  7357   002CF6  6EDF               	movwf	indf2,c
  7358   002CF8  EFD2  F016         	goto	l13341
  7359   002CFC                     l13335:
  7360                           
  7361                           ; BSR set to: 0
  7362                           ;MCAL_layer/GPIO/hal_gpio.c: 153:                         *logic = ((PORTD >> pinConfig-
      +                          >pin)&1);break;
  7363   002CFC  51D7               	movf	gpio_pin_read_logic@logic& (0+255),w,b
  7364   002CFE  6ED9               	movwf	fsr2l,c
  7365   002D00  6ADA               	clrf	fsr2h,c
  7366   002D02  C0D5  FFE1         	movff	gpio_pin_read_logic@pinConfig,fsr1l
  7367   002D06  C0D6  FFE2         	movff	gpio_pin_read_logic@pinConfig+1,fsr1h
  7368   002D0A  30E7               	rrcf	231,w,c
  7369   002D0C  32E8               	rrcf	wreg,f,c
  7370   002D0E  32E8               	rrcf	wreg,f,c
  7371   002D10  0B07               	andlw	7
  7372   002D12  6FD8               	movwf	??_gpio_pin_read_logic& (0+255),b
  7373   002D14  CF83 F0D9          	movff	3971,??_gpio_pin_read_logic+1	;volatile
  7374   002D18  2BD8               	incf	??_gpio_pin_read_logic& (0+255),f,b
  7375   002D1A  EF91  F016         	goto	u12394
  7376   002D1E                     u12395:
  7377   002D1E  90D8               	bcf	status,0,c
  7378   002D20  33D9               	rrcf	(??_gpio_pin_read_logic+1)& (0+255),f,b
  7379   002D22                     u12394:
  7380   002D22  2FD8               	decfsz	??_gpio_pin_read_logic& (0+255),f,b
  7381   002D24  EF8F  F016         	goto	u12395
  7382   002D28  0100               	movlb	0	; () banked
  7383   002D2A  51D9               	movf	(??_gpio_pin_read_logic+1)& (0+255),w,b
  7384   002D2C  0B01               	andlw	1
  7385   002D2E  6EDF               	movwf	indf2,c
  7386   002D30  EFD2  F016         	goto	l13341
  7387   002D34                     l13337:
  7388                           
  7389                           ; BSR set to: 0
  7390                           ;MCAL_layer/GPIO/hal_gpio.c: 155:                         *logic = ((PORTE >> pinConfig-
      +                          >pin)&1);break;
  7391   002D34  51D7               	movf	gpio_pin_read_logic@logic& (0+255),w,b
  7392   002D36  6ED9               	movwf	fsr2l,c
  7393   002D38  6ADA               	clrf	fsr2h,c
  7394   002D3A  C0D5  FFE1         	movff	gpio_pin_read_logic@pinConfig,fsr1l
  7395   002D3E  C0D6  FFE2         	movff	gpio_pin_read_logic@pinConfig+1,fsr1h
  7396   002D42  30E7               	rrcf	231,w,c
  7397   002D44  32E8               	rrcf	wreg,f,c
  7398   002D46  32E8               	rrcf	wreg,f,c
  7399   002D48  0B07               	andlw	7
  7400   002D4A  6FD8               	movwf	??_gpio_pin_read_logic& (0+255),b
  7401   002D4C  CF84 F0D9          	movff	3972,??_gpio_pin_read_logic+1	;volatile
  7402   002D50  2BD8               	incf	??_gpio_pin_read_logic& (0+255),f,b
  7403   002D52  EFAD  F016         	goto	u12404
  7404   002D56                     u12405:
  7405   002D56  90D8               	bcf	status,0,c
  7406   002D58  33D9               	rrcf	(??_gpio_pin_read_logic+1)& (0+255),f,b
  7407   002D5A                     u12404:
  7408   002D5A  2FD8               	decfsz	??_gpio_pin_read_logic& (0+255),f,b
  7409   002D5C  EFAB  F016         	goto	u12405
  7410   002D60  0100               	movlb	0	; () banked
  7411   002D62  51D9               	movf	(??_gpio_pin_read_logic+1)& (0+255),w,b
  7412   002D64  0B01               	andlw	1
  7413   002D66  6EDF               	movwf	indf2,c
  7414   002D68  EFD2  F016         	goto	l13341
  7415   002D6C                     l13339:
  7416                           
  7417                           ; BSR set to: 0
  7418   002D6C  C0D5  FFD9         	movff	gpio_pin_read_logic@pinConfig,fsr2l
  7419   002D70  C0D6  FFDA         	movff	gpio_pin_read_logic@pinConfig+1,fsr2h
  7420   002D74  50DF               	movf	223,w,c
  7421   002D76  0B07               	andlw	7
  7422                           
  7423                           ; Switch size 1, requested type "simple"
  7424                           ; Number of cases is 5, Range of values is 0 to 4
  7425                           ; switch strategies available:
  7426                           ; Name         Instructions Cycles
  7427                           ; simple_byte           16     9 (average)
  7428                           ;	Chosen strategy is simple_byte
  7429   002D78  0A00               	xorlw	0	; case 0
  7430   002D7A  B4D8               	btfsc	status,2,c
  7431   002D7C  EF2A  F016         	goto	l13329
  7432   002D80  0A01               	xorlw	1	; case 1
  7433   002D82  B4D8               	btfsc	status,2,c
  7434   002D84  EF46  F016         	goto	l13331
  7435   002D88  0A03               	xorlw	3	; case 2
  7436   002D8A  B4D8               	btfsc	status,2,c
  7437   002D8C  EF62  F016         	goto	l13333
  7438   002D90  0A01               	xorlw	1	; case 3
  7439   002D92  B4D8               	btfsc	status,2,c
  7440   002D94  EF7E  F016         	goto	l13335
  7441   002D98  0A07               	xorlw	7	; case 4
  7442   002D9A  B4D8               	btfsc	status,2,c
  7443   002D9C  EF9A  F016         	goto	l13337
  7444   002DA0  EF27  F016         	goto	l1007
  7445   002DA4                     l13341:
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;MCAL_layer/GPIO/hal_gpio.c: 160:     return rt;
  7449   002DA4  51DA               	movf	gpio_pin_read_logic@rt& (0+255),w,b
  7450   002DA6                     
  7451                           ; BSR set to: 0
  7452   002DA6  0012               	return		;funcret
  7453   002DA8                     __end_of_gpio_pin_read_logic:
  7454                           	callstack 0
  7455                           
  7456 ;; *************** function _keyPad_Initialize *****************
  7457 ;; Defined at:
  7458 ;;		line 19 in file "ECU_layer/KeyPad/ecu_keyPad.c"
  7459 ;; Parameters:    Size  Location     Type
  7460 ;;  keypad          2   10[BANK0 ] PTR const struct .
  7461 ;;		 -> keypad_1(8), 
  7462 ;; Auto vars:     Size  Location     Type
  7463 ;;  l_coloums_co    1   16[BANK0 ] unsigned char 
  7464 ;;  l_rows_count    1   15[BANK0 ] unsigned char 
  7465 ;;  rt              1   14[BANK0 ] unsigned char 
  7466 ;; Return value:  Size  Location     Type
  7467 ;;                  1    wreg      unsigned char 
  7468 ;; Registers used:
  7469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7470 ;; Tracked objects:
  7471 ;;		On entry : 0/0
  7472 ;;		On exit  : 0/0
  7473 ;;		Unchanged: 0/0
  7474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7476 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7477 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7478 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7479 ;;Total ram usage:        7 bytes
  7480 ;; Hardware stack levels used: 1
  7481 ;; Hardware stack levels required when called: 11
  7482 ;; This function calls:
  7483 ;;		_gpio_pin_direction_initialize
  7484 ;;		_gpio_pin_initialize
  7485 ;; This function is called by:
  7486 ;;		_main
  7487 ;; This function uses a non-reentrant model
  7488 ;;
  7489                           
  7490                           	psect	text7
  7491   003DC8                     __ptext7:
  7492                           	callstack 0
  7493   003DC8                     _keyPad_Initialize:
  7494                           	callstack 19
  7495   003DC8                     
  7496                           ;ECU_layer/KeyPad/ecu_keyPad.c: 21:     uint8 l_rows_counter = 0;
  7497   003DC8  0100               	movlb	0	; () banked
  7498   003DCA  6BE4               	clrf	keyPad_Initialize@l_rows_counter& (0+255),b
  7499                           
  7500                           ;ECU_layer/KeyPad/ecu_keyPad.c: 22:     uint8 l_coloums_counter =0;
  7501   003DCC  6BE5               	clrf	keyPad_Initialize@l_coloums_counter& (0+255),b
  7502   003DCE                     
  7503                           ; BSR set to: 0
  7504                           ;ECU_layer/KeyPad/ecu_keyPad.c: 23:      if(((void*)0) == keypad ){
  7505   003DCE  51DF               	movf	keyPad_Initialize@keypad& (0+255),w,b
  7506   003DD0  11E0               	iorwf	(keyPad_Initialize@keypad+1)& (0+255),w,b
  7507   003DD2  A4D8               	btfss	status,2,c
  7508   003DD4  EFEE  F01E         	goto	u12581
  7509   003DD8  EFF0  F01E         	goto	u12580
  7510   003DDC                     u12581:
  7511   003DDC  EFF3  F01E         	goto	l2296
  7512   003DE0                     u12580:
  7513   003DE0                     
  7514                           ; BSR set to: 0
  7515                           ;ECU_layer/KeyPad/ecu_keyPad.c: 24:         rt = (STD_ReturnType)0x00;
  7516   003DE0  6BE3               	clrf	keyPad_Initialize@rt& (0+255),b
  7517                           
  7518                           ;ECU_layer/KeyPad/ecu_keyPad.c: 25:     }
  7519   003DE2  EF21  F01F         	goto	l2297
  7520   003DE6                     l2296:
  7521                           
  7522                           ; BSR set to: 0
  7523                           ;ECU_layer/KeyPad/ecu_keyPad.c: 27:          for(l_rows_counter =0 ; l_rows_counter<4 ; 
      +                          l_rows_counter++){
  7524   003DE6  6BE4               	clrf	keyPad_Initialize@l_rows_counter& (0+255),b
  7525   003DE8                     l13527:
  7526                           
  7527                           ; BSR set to: 0
  7528   003DE8  51E4               	movf	keyPad_Initialize@l_rows_counter& (0+255),w,b
  7529   003DEA  25DF               	addwf	keyPad_Initialize@keypad& (0+255),w,b
  7530   003DEC  6FDB               	movwf	gpio_pin_initialize@pinConfig& (0+255),b
  7531   003DEE  0E00               	movlw	0
  7532   003DF0  21E0               	addwfc	(keyPad_Initialize@keypad+1)& (0+255),w,b
  7533   003DF2  6FDC               	movwf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
  7534   003DF4  EC83  F021         	call	_gpio_pin_initialize	;wreg free
  7535   003DF8                     
  7536                           ;ECU_layer/KeyPad/ecu_keyPad.c: 29:          }
  7537   003DF8  0100               	movlb	0	; () banked
  7538   003DFA  2BE4               	incf	keyPad_Initialize@l_rows_counter& (0+255),f,b
  7539   003DFC                     
  7540                           ; BSR set to: 0
  7541   003DFC  0E03               	movlw	3
  7542   003DFE  65E4               	cpfsgt	keyPad_Initialize@l_rows_counter& (0+255),b
  7543   003E00  EF04  F01F         	goto	u12591
  7544   003E04  EF06  F01F         	goto	u12590
  7545   003E08                     u12591:
  7546   003E08  EFF4  F01E         	goto	l13527
  7547   003E0C                     u12590:
  7548   003E0C                     
  7549                           ; BSR set to: 0
  7550                           ;ECU_layer/KeyPad/ecu_keyPad.c: 30:          for(l_coloums_counter = 0 ; l_coloums_count
      +                          er<4 ; l_coloums_counter++){
  7551   003E0C  6BE5               	clrf	keyPad_Initialize@l_coloums_counter& (0+255),b
  7552   003E0E                     l13537:
  7553                           
  7554                           ; BSR set to: 0
  7555   003E0E  51E5               	movf	keyPad_Initialize@l_coloums_counter& (0+255),w,b
  7556   003E10  25DF               	addwf	keyPad_Initialize@keypad& (0+255),w,b
  7557   003E12  6FE1               	movwf	??_keyPad_Initialize& (0+255),b
  7558   003E14  0E00               	movlw	0
  7559   003E16  21E0               	addwfc	(keyPad_Initialize@keypad+1)& (0+255),w,b
  7560   003E18  6FE2               	movwf	(??_keyPad_Initialize+1)& (0+255),b
  7561   003E1A  0E04               	movlw	4
  7562   003E1C  25E1               	addwf	??_keyPad_Initialize& (0+255),w,b
  7563   003E1E  6FD5               	movwf	gpio_pin_direction_initialize@pinConfig& (0+255),b
  7564   003E20  0E00               	movlw	0
  7565   003E22  21E2               	addwfc	(??_keyPad_Initialize+1)& (0+255),w,b
  7566   003E24  6FD6               	movwf	(gpio_pin_direction_initialize@pinConfig+1)& (0+255),b
  7567   003E26  EC01  F011         	call	_gpio_pin_direction_initialize	;wreg free
  7568   003E2A                     
  7569                           ;ECU_layer/KeyPad/ecu_keyPad.c: 32:          }
  7570   003E2A  0100               	movlb	0	; () banked
  7571   003E2C  2BE5               	incf	keyPad_Initialize@l_coloums_counter& (0+255),f,b
  7572   003E2E                     
  7573                           ; BSR set to: 0
  7574   003E2E  0E03               	movlw	3
  7575   003E30  65E5               	cpfsgt	keyPad_Initialize@l_coloums_counter& (0+255),b
  7576   003E32  EF1D  F01F         	goto	u12601
  7577   003E36  EF1F  F01F         	goto	u12600
  7578   003E3A                     u12601:
  7579   003E3A  EF07  F01F         	goto	l13537
  7580   003E3E                     u12600:
  7581   003E3E                     
  7582                           ; BSR set to: 0
  7583                           ;ECU_layer/KeyPad/ecu_keyPad.c: 33:         rt = (STD_ReturnType)0x01;
  7584   003E3E  0E01               	movlw	1
  7585   003E40  6FE3               	movwf	keyPad_Initialize@rt& (0+255),b
  7586   003E42                     l2297:
  7587                           
  7588                           ; BSR set to: 0
  7589                           ;ECU_layer/KeyPad/ecu_keyPad.c: 35:     return rt;
  7590   003E42  51E3               	movf	keyPad_Initialize@rt& (0+255),w,b
  7591   003E44                     
  7592                           ; BSR set to: 0
  7593   003E44  0012               	return		;funcret
  7594   003E46                     __end_of_keyPad_Initialize:
  7595                           	callstack 0
  7596                           
  7597 ;; *************** function _Timer0_Init *****************
  7598 ;; Defined at:
  7599 ;;		line 23 in file "MCAL_layer/Timer0/hal_timer0.c"
  7600 ;; Parameters:    Size  Location     Type
  7601 ;;  _timer0         2    4[BANK0 ] PTR const struct .
  7602 ;;		 -> timer0_1(7), 
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;  ret             1    6[BANK0 ] unsigned char 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1    wreg      unsigned char 
  7607 ;; Registers used:
  7608 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7615 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7617 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7618 ;;Total ram usage:        3 bytes
  7619 ;; Hardware stack levels used: 1
  7620 ;; Hardware stack levels required when called: 10
  7621 ;; This function calls:
  7622 ;;		_Timer0_Interrupt_Configuration
  7623 ;;		_Timer0_Prescaler_Config
  7624 ;;		_Timer0_Set_Mode
  7625 ;;		_Timer0_Set_Resolution
  7626 ;;		_Timer0_Write_Value
  7627 ;; This function is called by:
  7628 ;;		_main
  7629 ;; This function uses a non-reentrant model
  7630 ;;
  7631                           
  7632                           	psect	text8
  7633   003BA4                     __ptext8:
  7634                           	callstack 0
  7635   003BA4                     _Timer0_Init:
  7636                           	callstack 20
  7637   003BA4                     
  7638                           ;MCAL_layer/Timer0/hal_timer0.c: 25:     if(((void*)0) == _timer0){
  7639   003BA4  0100               	movlb	0	; () banked
  7640   003BA6  51D9               	movf	Timer0_Init@_timer0& (0+255),w,b
  7641   003BA8  11DA               	iorwf	(Timer0_Init@_timer0+1)& (0+255),w,b
  7642   003BAA  A4D8               	btfss	status,2,c
  7643   003BAC  EFDA  F01D         	goto	u12691
  7644   003BB0  EFDC  F01D         	goto	u12690
  7645   003BB4                     u12691:
  7646   003BB4  EFDF  F01D         	goto	l1849
  7647   003BB8                     u12690:
  7648   003BB8                     
  7649                           ; BSR set to: 0
  7650                           ;MCAL_layer/Timer0/hal_timer0.c: 26:         ret = (STD_ReturnType)0x00;
  7651   003BB8  6BDB               	clrf	Timer0_Init@ret& (0+255),b
  7652                           
  7653                           ;MCAL_layer/Timer0/hal_timer0.c: 27:     }
  7654   003BBA  EF18  F01E         	goto	l13661
  7655   003BBE                     l1849:
  7656                           
  7657                           ; BSR set to: 0
  7658                           ;MCAL_layer/Timer0/hal_timer0.c: 30:         (T0CONbits.TMR0ON = 0);
  7659   003BBE  9ED5               	bcf	213,7,c	;volatile
  7660   003BC0                     
  7661                           ; BSR set to: 0
  7662                           ;MCAL_layer/Timer0/hal_timer0.c: 32:         Timer0_Set_Resolution(_timer0);
  7663   003BC0  C0D9  F0D5         	movff	Timer0_Init@_timer0,Timer0_Set_Resolution@_timer0
  7664   003BC4  C0DA  F0D6         	movff	Timer0_Init@_timer0+1,Timer0_Set_Resolution@_timer0+1
  7665   003BC8  ECF1  F022         	call	_Timer0_Set_Resolution	;wreg free
  7666                           
  7667                           ;MCAL_layer/Timer0/hal_timer0.c: 34:         Timer0_Set_Mode(_timer0);
  7668   003BCC  C0D9  F0D5         	movff	Timer0_Init@_timer0,Timer0_Set_Mode@_timer0
  7669   003BD0  C0DA  F0D6         	movff	Timer0_Init@_timer0+1,Timer0_Set_Mode@_timer0+1
  7670   003BD4  EC60  F01E         	call	_Timer0_Set_Mode	;wreg free
  7671                           
  7672                           ;MCAL_layer/Timer0/hal_timer0.c: 36:         Timer0_Prescaler_Config(_timer0);
  7673   003BD8  C0D9  F0D5         	movff	Timer0_Init@_timer0,Timer0_Prescaler_Config@_timer0
  7674   003BDC  C0DA  F0D6         	movff	Timer0_Init@_timer0+1,Timer0_Prescaler_Config@_timer0+1
  7675   003BE0  ECB5  F021         	call	_Timer0_Prescaler_Config	;wreg free
  7676                           
  7677                           ;MCAL_layer/Timer0/hal_timer0.c: 38:         Timer0_Write_Value (_timer0, _timer0->Timer
      +                          0_preloadValue);
  7678   003BE4  C0D9  F0D5         	movff	Timer0_Init@_timer0,Timer0_Write_Value@_timer0
  7679   003BE8  C0DA  F0D6         	movff	Timer0_Init@_timer0+1,Timer0_Write_Value@_timer0+1
  7680   003BEC  0100               	movlb	0	; () banked
  7681   003BEE  EE20 F004          	lfsr	2,4
  7682   003BF2  51D9               	movf	Timer0_Init@_timer0& (0+255),w,b
  7683   003BF4  26D9               	addwf	fsr2l,f,c
  7684   003BF6  51DA               	movf	(Timer0_Init@_timer0+1)& (0+255),w,b
  7685   003BF8  22DA               	addwfc	fsr2h,f,c
  7686   003BFA  CFDE F0D7          	movff	postinc2,Timer0_Write_Value@_value
  7687   003BFE  CFDD F0D8          	movff	postdec2,Timer0_Write_Value@_value+1
  7688   003C02  ECE5  F021         	call	_Timer0_Write_Value	;wreg free
  7689   003C06                     
  7690                           ;MCAL_layer/Timer0/hal_timer0.c: 40:         timer0_preload = _timer0->Timer0_preloadVal
      +                          ue;
  7691   003C06  0100               	movlb	0	; () banked
  7692   003C08  EE20 F004          	lfsr	2,4
  7693   003C0C  51D9               	movf	Timer0_Init@_timer0& (0+255),w,b
  7694   003C0E  26D9               	addwf	fsr2l,f,c
  7695   003C10  51DA               	movf	(Timer0_Init@_timer0+1)& (0+255),w,b
  7696   003C12  22DA               	addwfc	fsr2h,f,c
  7697   003C14  CFDE F09B          	movff	postinc2,_timer0_preload
  7698   003C18  CFDD F09C          	movff	postdec2,_timer0_preload+1
  7699   003C1C                     
  7700                           ; BSR set to: 0
  7701                           ;MCAL_layer/Timer0/hal_timer0.c: 43:         Timer0_Interrupt_Configuration(_timer0);
  7702   003C1C  C0D9  F0D5         	movff	Timer0_Init@_timer0,Timer0_Interrupt_Configuration@_timer0
  7703   003C20  C0DA  F0D6         	movff	Timer0_Init@_timer0+1,Timer0_Interrupt_Configuration@_timer0+1
  7704   003C24  ECBA  F024         	call	_Timer0_Interrupt_Configuration	;wreg free
  7705   003C28                     
  7706                           ;MCAL_layer/Timer0/hal_timer0.c: 46:         (T0CONbits.TMR0ON = 1);
  7707   003C28  8ED5               	bsf	213,7,c	;volatile
  7708   003C2A                     
  7709                           ;MCAL_layer/Timer0/hal_timer0.c: 48:         ret = (STD_ReturnType)0x01;
  7710   003C2A  0E01               	movlw	1
  7711   003C2C  0100               	movlb	0	; () banked
  7712   003C2E  6FDB               	movwf	Timer0_Init@ret& (0+255),b
  7713   003C30                     l13661:
  7714                           
  7715                           ; BSR set to: 0
  7716                           ;MCAL_layer/Timer0/hal_timer0.c: 50:     return ret;
  7717   003C30  51DB               	movf	Timer0_Init@ret& (0+255),w,b
  7718   003C32                     
  7719                           ; BSR set to: 0
  7720   003C32  0012               	return		;funcret
  7721   003C34                     __end_of_Timer0_Init:
  7722                           	callstack 0
  7723                           
  7724 ;; *************** function _Timer0_Write_Value *****************
  7725 ;; Defined at:
  7726 ;;		line 72 in file "MCAL_layer/Timer0/hal_timer0.c"
  7727 ;; Parameters:    Size  Location     Type
  7728 ;;  _timer0         2    0[BANK0 ] PTR const struct .
  7729 ;;		 -> timer0_1(7), 
  7730 ;;  _value          2    2[BANK0 ] unsigned short 
  7731 ;; Auto vars:     Size  Location     Type
  7732 ;;  ret             1    0        unsigned char 
  7733 ;; Return value:  Size  Location     Type
  7734 ;;                  1    wreg      unsigned char 
  7735 ;; Registers used:
  7736 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7737 ;; Tracked objects:
  7738 ;;		On entry : 0/0
  7739 ;;		On exit  : 0/0
  7740 ;;		Unchanged: 0/0
  7741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7742 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7745 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7746 ;;Total ram usage:        4 bytes
  7747 ;; Hardware stack levels used: 1
  7748 ;; Hardware stack levels required when called: 9
  7749 ;; This function calls:
  7750 ;;		Nothing
  7751 ;; This function is called by:
  7752 ;;		_Timer0_Init
  7753 ;; This function uses a non-reentrant model
  7754 ;;
  7755                           
  7756                           	psect	text9
  7757   0043CA                     __ptext9:
  7758                           	callstack 0
  7759   0043CA                     _Timer0_Write_Value:
  7760                           	callstack 20
  7761   0043CA                     
  7762                           ;MCAL_layer/Timer0/hal_timer0.c: 74:     if(((void*)0) == _timer0){
  7763   0043CA  0100               	movlb	0	; () banked
  7764   0043CC  51D5               	movf	Timer0_Write_Value@_timer0& (0+255),w,b
  7765   0043CE  11D6               	iorwf	(Timer0_Write_Value@_timer0+1)& (0+255),w,b
  7766   0043D0  A4D8               	btfss	status,2,c
  7767   0043D2  EFED  F021         	goto	u12451
  7768   0043D6  EFEF  F021         	goto	u12450
  7769   0043DA                     u12451:
  7770   0043DA  EFF1  F021         	goto	l13367
  7771   0043DE                     u12450:
  7772   0043DE                     
  7773                           ; BSR set to: 0
  7774                           ;MCAL_layer/Timer0/hal_timer0.c: 76:     }
  7775   0043DE  EF13  F022         	goto	l1865
  7776   0043E2                     l13367:
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;MCAL_layer/Timer0/hal_timer0.c: 78:         if(1 == _timer0->Timer0_registerSize){
  7780   0043E2  EE20 F006          	lfsr	2,6
  7781   0043E6  51D5               	movf	Timer0_Write_Value@_timer0& (0+255),w,b
  7782   0043E8  26D9               	addwf	fsr2l,f,c
  7783   0043EA  51D6               	movf	(Timer0_Write_Value@_timer0+1)& (0+255),w,b
  7784   0043EC  22DA               	addwfc	fsr2h,f,c
  7785   0043EE  A0DF               	btfss	indf2,0,c
  7786   0043F0  EFFC  F021         	goto	u12461
  7787   0043F4  EFFE  F021         	goto	u12460
  7788   0043F8                     u12461:
  7789   0043F8  EF02  F022         	goto	l13371
  7790   0043FC                     u12460:
  7791   0043FC                     l13369:
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;MCAL_layer/Timer0/hal_timer0.c: 79:             TMR0L = (uint8)(_value);
  7795   0043FC  C0D7  FFD6         	movff	Timer0_Write_Value@_value,4054	;volatile
  7796                           
  7797                           ;MCAL_layer/Timer0/hal_timer0.c: 80:         }
  7798   004400  EF13  F022         	goto	l13377
  7799   004404                     l13371:
  7800                           
  7801                           ; BSR set to: 0
  7802   004404  EE20 F006          	lfsr	2,6
  7803   004408  51D5               	movf	Timer0_Write_Value@_timer0& (0+255),w,b
  7804   00440A  26D9               	addwf	fsr2l,f,c
  7805   00440C  51D6               	movf	(Timer0_Write_Value@_timer0+1)& (0+255),w,b
  7806   00440E  22DA               	addwfc	fsr2h,f,c
  7807   004410  B0DF               	btfsc	indf2,0,c
  7808   004412  EF0D  F022         	goto	u12471
  7809   004416  EF0F  F022         	goto	u12470
  7810   00441A                     u12471:
  7811   00441A  EF13  F022         	goto	l13377
  7812   00441E                     u12470:
  7813   00441E                     
  7814                           ; BSR set to: 0
  7815                           ;MCAL_layer/Timer0/hal_timer0.c: 82:             TMR0H = (uint8)(_value >> 8);
  7816   00441E  51D8               	movf	(Timer0_Write_Value@_value+1)& (0+255),w,b
  7817   004420  6ED7               	movwf	215,c	;volatile
  7818   004422  EFFE  F021         	goto	l13369
  7819   004426                     l13377:
  7820   004426                     l1865:
  7821                           
  7822                           ; BSR set to: 0
  7823   004426  0012               	return		;funcret
  7824   004428                     __end_of_Timer0_Write_Value:
  7825                           	callstack 0
  7826                           
  7827 ;; *************** function _Timer0_Set_Resolution *****************
  7828 ;; Defined at:
  7829 ;;		line 122 in file "MCAL_layer/Timer0/hal_timer0.c"
  7830 ;; Parameters:    Size  Location     Type
  7831 ;;  _timer0         2    0[BANK0 ] PTR const struct .
  7832 ;;		 -> timer0_1(7), 
  7833 ;; Auto vars:     Size  Location     Type
  7834 ;;		None
  7835 ;; Return value:  Size  Location     Type
  7836 ;;                  1    wreg      void 
  7837 ;; Registers used:
  7838 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7839 ;; Tracked objects:
  7840 ;;		On entry : 0/0
  7841 ;;		On exit  : 0/0
  7842 ;;		Unchanged: 0/0
  7843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7844 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7847 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7848 ;;Total ram usage:        2 bytes
  7849 ;; Hardware stack levels used: 1
  7850 ;; Hardware stack levels required when called: 9
  7851 ;; This function calls:
  7852 ;;		Nothing
  7853 ;; This function is called by:
  7854 ;;		_Timer0_Init
  7855 ;; This function uses a non-reentrant model
  7856 ;;
  7857                           
  7858                           	psect	text10
  7859   0045E2                     __ptext10:
  7860                           	callstack 0
  7861   0045E2                     _Timer0_Set_Resolution:
  7862                           	callstack 20
  7863   0045E2                     
  7864                           ;MCAL_layer/Timer0/hal_timer0.c: 123:     switch(_timer0->Timer0_registerSize){
  7865   0045E2  EFF9  F022         	goto	l13347
  7866   0045E6                     l1880:
  7867                           
  7868                           ; BSR set to: 0
  7869   0045E6  8CD5               	bsf	213,6,c	;volatile
  7870   0045E8  EF13  F023         	goto	l1884
  7871   0045EC                     l1882:
  7872                           
  7873                           ; BSR set to: 0
  7874   0045EC  9CD5               	bcf	213,6,c	;volatile
  7875   0045EE  EF13  F023         	goto	l1884
  7876   0045F2                     l13347:
  7877   0045F2  0100               	movlb	0	; () banked
  7878   0045F4  EE20 F006          	lfsr	2,6
  7879   0045F8  51D5               	movf	Timer0_Set_Resolution@_timer0& (0+255),w,b
  7880   0045FA  26D9               	addwf	fsr2l,f,c
  7881   0045FC  51D6               	movf	(Timer0_Set_Resolution@_timer0+1)& (0+255),w,b
  7882   0045FE  22DA               	addwfc	fsr2h,f,c
  7883   004600  B0DF               	btfsc	indf2,0,c
  7884   004602  EF05  F023         	goto	u12411
  7885   004606  EF08  F023         	goto	u12410
  7886   00460A                     u12411:
  7887   00460A  0E01               	movlw	1
  7888   00460C  EF09  F023         	goto	u12416
  7889   004610                     u12410:
  7890   004610  0E00               	movlw	0
  7891   004612                     u12416:
  7892                           
  7893                           ; Switch size 1, requested type "simple"
  7894                           ; Number of cases is 2, Range of values is 0 to 1
  7895                           ; switch strategies available:
  7896                           ; Name         Instructions Cycles
  7897                           ; simple_byte            7     4 (average)
  7898                           ;	Chosen strategy is simple_byte
  7899   004612  0A00               	xorlw	0	; case 0
  7900   004614  B4D8               	btfsc	status,2,c
  7901   004616  EFF6  F022         	goto	l1882
  7902   00461A  0A01               	xorlw	1	; case 1
  7903   00461C  B4D8               	btfsc	status,2,c
  7904   00461E  EFF3  F022         	goto	l1880
  7905   004622  EF13  F023         	goto	l1884
  7906   004626                     l1884:
  7907                           
  7908                           ; BSR set to: 0
  7909   004626  0012               	return		;funcret
  7910   004628                     __end_of_Timer0_Set_Resolution:
  7911                           	callstack 0
  7912                           
  7913 ;; *************** function _Timer0_Set_Mode *****************
  7914 ;; Defined at:
  7915 ;;		line 131 in file "MCAL_layer/Timer0/hal_timer0.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  _timer0         2    0[BANK0 ] PTR const struct .
  7918 ;;		 -> timer0_1(7), 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;		None
  7921 ;; Return value:  Size  Location     Type
  7922 ;;                  1    wreg      void 
  7923 ;; Registers used:
  7924 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7930 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7933 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7934 ;;Total ram usage:        2 bytes
  7935 ;; Hardware stack levels used: 1
  7936 ;; Hardware stack levels required when called: 9
  7937 ;; This function calls:
  7938 ;;		Nothing
  7939 ;; This function is called by:
  7940 ;;		_Timer0_Init
  7941 ;; This function uses a non-reentrant model
  7942 ;;
  7943                           
  7944                           	psect	text11
  7945   003CC0                     __ptext11:
  7946                           	callstack 0
  7947   003CC0                     _Timer0_Set_Mode:
  7948                           	callstack 20
  7949   003CC0                     
  7950                           ;MCAL_layer/Timer0/hal_timer0.c: 132:     switch(_timer0->Timer0_mode){
  7951   003CC0  EF87  F01E         	goto	l13353
  7952   003CC4                     l1888:
  7953                           
  7954                           ; BSR set to: 0
  7955   003CC4  9AD5               	bcf	213,5,c	;volatile
  7956   003CC6  EFA1  F01E         	goto	l1897
  7957   003CCA                     l1890:
  7958                           
  7959                           ; BSR set to: 0
  7960                           ;MCAL_layer/Timer0/hal_timer0.c: 135:             (T0CONbits.T0CS = 1);
  7961   003CCA  8AD5               	bsf	213,5,c	;volatile
  7962                           
  7963                           ;MCAL_layer/Timer0/hal_timer0.c: 136:             switch(_timer0->Timer0_counterEdge){
  7964   003CCC  EF6E  F01E         	goto	l13351
  7965   003CD0                     l1892:
  7966                           
  7967                           ; BSR set to: 0
  7968                           ;MCAL_layer/Timer0/hal_timer0.c: 138:                     (T0CONbits.T0SE = 1);break;
  7969   003CD0  88D5               	bsf	213,4,c	;volatile
  7970   003CD2  EFA1  F01E         	goto	l1897
  7971   003CD6                     l1894:
  7972                           
  7973                           ; BSR set to: 0
  7974                           ;MCAL_layer/Timer0/hal_timer0.c: 140:                     (T0CONbits.T0SE = 0);break;
  7975   003CD6  98D5               	bcf	213,4,c	;volatile
  7976   003CD8  EFA1  F01E         	goto	l1897
  7977   003CDC                     l13351:
  7978                           
  7979                           ; BSR set to: 0
  7980   003CDC  EE20 F006          	lfsr	2,6
  7981   003CE0  51D5               	movf	Timer0_Set_Mode@_timer0& (0+255),w,b
  7982   003CE2  26D9               	addwf	fsr2l,f,c
  7983   003CE4  51D6               	movf	(Timer0_Set_Mode@_timer0+1)& (0+255),w,b
  7984   003CE6  22DA               	addwfc	fsr2h,f,c
  7985   003CE8  B4DF               	btfsc	indf2,2,c
  7986   003CEA  EF79  F01E         	goto	u12421
  7987   003CEE  EF7C  F01E         	goto	u12420
  7988   003CF2                     u12421:
  7989   003CF2  0E01               	movlw	1
  7990   003CF4  EF7D  F01E         	goto	u12426
  7991   003CF8                     u12420:
  7992   003CF8  0E00               	movlw	0
  7993   003CFA                     u12426:
  7994                           
  7995                           ; Switch size 1, requested type "simple"
  7996                           ; Number of cases is 2, Range of values is 0 to 1
  7997                           ; switch strategies available:
  7998                           ; Name         Instructions Cycles
  7999                           ; simple_byte            7     4 (average)
  8000                           ;	Chosen strategy is simple_byte
  8001   003CFA  0A00               	xorlw	0	; case 0
  8002   003CFC  B4D8               	btfsc	status,2,c
  8003   003CFE  EF6B  F01E         	goto	l1894
  8004   003D02  0A01               	xorlw	1	; case 1
  8005   003D04  B4D8               	btfsc	status,2,c
  8006   003D06  EF68  F01E         	goto	l1892
  8007   003D0A  EFA1  F01E         	goto	l1897
  8008   003D0E                     l13353:
  8009   003D0E  0100               	movlb	0	; () banked
  8010   003D10  EE20 F006          	lfsr	2,6
  8011   003D14  51D5               	movf	Timer0_Set_Mode@_timer0& (0+255),w,b
  8012   003D16  26D9               	addwf	fsr2l,f,c
  8013   003D18  51D6               	movf	(Timer0_Set_Mode@_timer0+1)& (0+255),w,b
  8014   003D1A  22DA               	addwfc	fsr2h,f,c
  8015   003D1C  B2DF               	btfsc	indf2,1,c
  8016   003D1E  EF93  F01E         	goto	u12431
  8017   003D22  EF96  F01E         	goto	u12430
  8018   003D26                     u12431:
  8019   003D26  0E01               	movlw	1
  8020   003D28  EF97  F01E         	goto	u12436
  8021   003D2C                     u12430:
  8022   003D2C  0E00               	movlw	0
  8023   003D2E                     u12436:
  8024                           
  8025                           ; Switch size 1, requested type "simple"
  8026                           ; Number of cases is 2, Range of values is 0 to 1
  8027                           ; switch strategies available:
  8028                           ; Name         Instructions Cycles
  8029                           ; simple_byte            7     4 (average)
  8030                           ;	Chosen strategy is simple_byte
  8031   003D2E  0A00               	xorlw	0	; case 0
  8032   003D30  B4D8               	btfsc	status,2,c
  8033   003D32  EF62  F01E         	goto	l1888
  8034   003D36  0A01               	xorlw	1	; case 1
  8035   003D38  B4D8               	btfsc	status,2,c
  8036   003D3A  EF65  F01E         	goto	l1890
  8037   003D3E  EFA1  F01E         	goto	l1897
  8038   003D42                     l1897:
  8039                           
  8040                           ; BSR set to: 0
  8041   003D42  0012               	return		;funcret
  8042   003D44                     __end_of_Timer0_Set_Mode:
  8043                           	callstack 0
  8044                           
  8045 ;; *************** function _Timer0_Prescaler_Config *****************
  8046 ;; Defined at:
  8047 ;;		line 147 in file "MCAL_layer/Timer0/hal_timer0.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;  _timer0         2    0[BANK0 ] PTR const struct .
  8050 ;;		 -> timer0_1(7), 
  8051 ;; Auto vars:     Size  Location     Type
  8052 ;;		None
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  1    wreg      void 
  8055 ;; Registers used:
  8056 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8062 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8064 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8065 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;Total ram usage:        3 bytes
  8067 ;; Hardware stack levels used: 1
  8068 ;; Hardware stack levels required when called: 9
  8069 ;; This function calls:
  8070 ;;		Nothing
  8071 ;; This function is called by:
  8072 ;;		_Timer0_Init
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           	psect	text12
  8077   00436A                     __ptext12:
  8078                           	callstack 0
  8079   00436A                     _Timer0_Prescaler_Config:
  8080                           	callstack 20
  8081   00436A                     
  8082                           ;MCAL_layer/Timer0/hal_timer0.c: 149:     switch(_timer0->Timer0_prescalerConfig){
  8083   00436A  EFCA  F021         	goto	l13359
  8084   00436E                     l1901:
  8085                           
  8086                           ; BSR set to: 0
  8087                           ;MCAL_layer/Timer0/hal_timer0.c: 151:             (T0CONbits.PSA = 0);
  8088   00436E  96D5               	bcf	213,3,c	;volatile
  8089   004370                     
  8090                           ; BSR set to: 0
  8091                           ;MCAL_layer/Timer0/hal_timer0.c: 152:             T0CONbits.T0PS = _timer0->Timer0_Presc
      +                          aler_Value;
  8092   004370  EE20 F003          	lfsr	2,3
  8093   004374  51D5               	movf	Timer0_Prescaler_Config@_timer0& (0+255),w,b
  8094   004376  26D9               	addwf	fsr2l,f,c
  8095   004378  51D6               	movf	(Timer0_Prescaler_Config@_timer0+1)& (0+255),w,b
  8096   00437A  22DA               	addwfc	fsr2h,f,c
  8097   00437C  50DF               	movf	indf2,w,c
  8098   00437E  6FD7               	movwf	??_Timer0_Prescaler_Config& (0+255),b
  8099   004380  50D5               	movf	213,w,c	;volatile
  8100   004382  19D7               	xorwf	??_Timer0_Prescaler_Config& (0+255),w,b
  8101   004384  0BF8               	andlw	-8
  8102   004386  19D7               	xorwf	??_Timer0_Prescaler_Config& (0+255),w,b
  8103   004388  6ED5               	movwf	213,c	;volatile
  8104                           
  8105                           ;MCAL_layer/Timer0/hal_timer0.c: 153:             break;
  8106   00438A  EFE4  F021         	goto	l1905
  8107   00438E                     l1903:
  8108                           
  8109                           ; BSR set to: 0
  8110   00438E  86D5               	bsf	213,3,c	;volatile
  8111   004390  EFE4  F021         	goto	l1905
  8112   004394                     l13359:
  8113   004394  0100               	movlb	0	; () banked
  8114   004396  EE20 F006          	lfsr	2,6
  8115   00439A  51D5               	movf	Timer0_Prescaler_Config@_timer0& (0+255),w,b
  8116   00439C  26D9               	addwf	fsr2l,f,c
  8117   00439E  51D6               	movf	(Timer0_Prescaler_Config@_timer0+1)& (0+255),w,b
  8118   0043A0  22DA               	addwfc	fsr2h,f,c
  8119   0043A2  B6DF               	btfsc	indf2,3,c
  8120   0043A4  EFD6  F021         	goto	u12441
  8121   0043A8  EFD9  F021         	goto	u12440
  8122   0043AC                     u12441:
  8123   0043AC  0E01               	movlw	1
  8124   0043AE  EFDA  F021         	goto	u12446
  8125   0043B2                     u12440:
  8126   0043B2  0E00               	movlw	0
  8127   0043B4                     u12446:
  8128                           
  8129                           ; Switch size 1, requested type "simple"
  8130                           ; Number of cases is 2, Range of values is 0 to 1
  8131                           ; switch strategies available:
  8132                           ; Name         Instructions Cycles
  8133                           ; simple_byte            7     4 (average)
  8134                           ;	Chosen strategy is simple_byte
  8135   0043B4  0A00               	xorlw	0	; case 0
  8136   0043B6  B4D8               	btfsc	status,2,c
  8137   0043B8  EFB7  F021         	goto	l1901
  8138   0043BC  0A01               	xorlw	1	; case 1
  8139   0043BE  B4D8               	btfsc	status,2,c
  8140   0043C0  EFC7  F021         	goto	l1903
  8141   0043C4  EFE4  F021         	goto	l1905
  8142   0043C8                     l1905:
  8143                           
  8144                           ; BSR set to: 0
  8145   0043C8  0012               	return		;funcret
  8146   0043CA                     __end_of_Timer0_Prescaler_Config:
  8147                           	callstack 0
  8148                           
  8149 ;; *************** function _Timer0_Interrupt_Configuration *****************
  8150 ;; Defined at:
  8151 ;;		line 162 in file "MCAL_layer/Timer0/hal_timer0.c"
  8152 ;; Parameters:    Size  Location     Type
  8153 ;;  _timer0         2    0[BANK0 ] PTR const struct .
  8154 ;;		 -> timer0_1(7), 
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;		None
  8157 ;; Return value:  Size  Location     Type
  8158 ;;                  1    wreg      void 
  8159 ;; Registers used:
  8160 ;;		fsr2l, fsr2h
  8161 ;; Tracked objects:
  8162 ;;		On entry : 0/0
  8163 ;;		On exit  : 0/0
  8164 ;;		Unchanged: 0/0
  8165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8166 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8169 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8170 ;;Total ram usage:        2 bytes
  8171 ;; Hardware stack levels used: 1
  8172 ;; Hardware stack levels required when called: 9
  8173 ;; This function calls:
  8174 ;;		Nothing
  8175 ;; This function is called by:
  8176 ;;		_Timer0_Init
  8177 ;; This function uses a non-reentrant model
  8178 ;;
  8179                           
  8180                           	psect	text13
  8181   004974                     __ptext13:
  8182                           	callstack 0
  8183   004974                     _Timer0_Interrupt_Configuration:
  8184                           	callstack 20
  8185   004974                     
  8186                           ;MCAL_layer/Timer0/hal_timer0.c: 164:         (INTCONbits.TMR0IE = 0);
  8187   004974  9AF2               	bcf	242,5,c	;volatile
  8188                           
  8189                           ;MCAL_layer/Timer0/hal_timer0.c: 166:         (INTCONbits.TMR0IF = 0);
  8190   004976  94F2               	bcf	242,2,c	;volatile
  8191                           
  8192                           ;MCAL_layer/Timer0/hal_timer0.c: 190:         (INTCONbits.GIE = 1);
  8193   004978  8EF2               	bsf	242,7,c	;volatile
  8194                           
  8195                           ;MCAL_layer/Timer0/hal_timer0.c: 192:         (INTCONbits.PEIE = 1);
  8196   00497A  8CF2               	bsf	242,6,c	;volatile
  8197   00497C                     
  8198                           ;MCAL_layer/Timer0/hal_timer0.c: 194:         Timer0_InterruptHandler = _timer0->TIMER0_
      +                          InterruptHandler;
  8199   00497C  C0D5  FFD9         	movff	Timer0_Interrupt_Configuration@_timer0,fsr2l
  8200   004980  C0D6  FFDA         	movff	Timer0_Interrupt_Configuration@_timer0+1,fsr2h
  8201   004984  CFDE F09D          	movff	postinc2,_Timer0_InterruptHandler
  8202   004988  CFDD F09E          	movff	postdec2,_Timer0_InterruptHandler+1
  8203   00498C                     
  8204                           ;MCAL_layer/Timer0/hal_timer0.c: 196:         (INTCONbits.TMR0IE = 1);
  8205   00498C  8AF2               	bsf	242,5,c	;volatile
  8206   00498E  0012               	return		;funcret
  8207   004990                     __end_of_Timer0_Interrupt_Configuration:
  8208                           	callstack 0
  8209                           
  8210 ;; *************** function _Timer0_Deinit *****************
  8211 ;; Defined at:
  8212 ;;		line 54 in file "MCAL_layer/Timer0/hal_timer0.c"
  8213 ;; Parameters:    Size  Location     Type
  8214 ;;  _timer0         2    0[BANK0 ] PTR const struct .
  8215 ;;		 -> timer0_1(7), 
  8216 ;; Auto vars:     Size  Location     Type
  8217 ;;  ret             1    2[BANK0 ] unsigned char 
  8218 ;; Return value:  Size  Location     Type
  8219 ;;                  1    wreg      unsigned char 
  8220 ;; Registers used:
  8221 ;;		wreg, status,2, status,0
  8222 ;; Tracked objects:
  8223 ;;		On entry : 0/0
  8224 ;;		On exit  : 0/0
  8225 ;;		Unchanged: 0/0
  8226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8227 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8230 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8231 ;;Total ram usage:        3 bytes
  8232 ;; Hardware stack levels used: 1
  8233 ;; Hardware stack levels required when called: 9
  8234 ;; This function calls:
  8235 ;;		Nothing
  8236 ;; This function is called by:
  8237 ;;		_main
  8238 ;; This function uses a non-reentrant model
  8239 ;;
  8240                           
  8241                           	psect	text14
  8242   0048CE                     __ptext14:
  8243                           	callstack 0
  8244   0048CE                     _Timer0_Deinit:
  8245                           	callstack 21
  8246   0048CE                     
  8247                           ;MCAL_layer/Timer0/hal_timer0.c: 56:     if(((void*)0) == _timer0){
  8248   0048CE  0100               	movlb	0	; () banked
  8249   0048D0  51D5               	movf	Timer0_Deinit@_timer0& (0+255),w,b
  8250   0048D2  11D6               	iorwf	(Timer0_Deinit@_timer0+1)& (0+255),w,b
  8251   0048D4  A4D8               	btfss	status,2,c
  8252   0048D6  EF6F  F024         	goto	u12681
  8253   0048DA  EF71  F024         	goto	u12680
  8254   0048DE                     u12681:
  8255   0048DE  EF74  F024         	goto	l1854
  8256   0048E2                     u12680:
  8257   0048E2                     
  8258                           ; BSR set to: 0
  8259                           ;MCAL_layer/Timer0/hal_timer0.c: 57:         ret = (STD_ReturnType)0x00;
  8260   0048E2  6BD7               	clrf	Timer0_Deinit@ret& (0+255),b
  8261                           
  8262                           ;MCAL_layer/Timer0/hal_timer0.c: 58:     }
  8263   0048E4  EF78  F024         	goto	l1855
  8264   0048E8                     l1854:
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;MCAL_layer/Timer0/hal_timer0.c: 61:         (T0CONbits.TMR0ON = 0);
  8268   0048E8  9ED5               	bcf	213,7,c	;volatile
  8269                           
  8270                           ;MCAL_layer/Timer0/hal_timer0.c: 63:        (INTCONbits.TMR0IE = 0);
  8271   0048EA  9AF2               	bcf	242,5,c	;volatile
  8272   0048EC                     
  8273                           ; BSR set to: 0
  8274                           ;MCAL_layer/Timer0/hal_timer0.c: 66:         ret = (STD_ReturnType)0x01;
  8275   0048EC  0E01               	movlw	1
  8276   0048EE  6FD7               	movwf	Timer0_Deinit@ret& (0+255),b
  8277   0048F0                     l1855:
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;MCAL_layer/Timer0/hal_timer0.c: 68:     return ret;
  8281   0048F0  51D7               	movf	Timer0_Deinit@ret& (0+255),w,b
  8282   0048F2                     
  8283                           ; BSR set to: 0
  8284   0048F2  0012               	return		;funcret
  8285   0048F4                     __end_of_Timer0_Deinit:
  8286                           	callstack 0
  8287                           
  8288 ;; *************** function _SYSTEM_Initialize *****************
  8289 ;; Defined at:
  8290 ;;		line 50 in file "mcc_generated_files/mcc.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;		None
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;		None
  8295 ;; Return value:  Size  Location     Type
  8296 ;;                  1    wreg      void 
  8297 ;; Registers used:
  8298 ;;		wreg, status,2, cstack
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8308 ;;Total ram usage:        0 bytes
  8309 ;; Hardware stack levels used: 1
  8310 ;; Hardware stack levels required when called: 10
  8311 ;; This function calls:
  8312 ;;		_I2C_Initialize
  8313 ;;		_OSCILLATOR_Initialize
  8314 ;;		_PIN_MANAGER_Initialize
  8315 ;; This function is called by:
  8316 ;;		_main
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           	psect	text15
  8321   004A80                     __ptext15:
  8322                           	callstack 0
  8323   004A80                     _SYSTEM_Initialize:
  8324                           	callstack 20
  8325   004A80                     
  8326                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  8327   004A80  EC27  F025         	call	_I2C_Initialize	;wreg free
  8328                           
  8329                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  8330   004A84  EC7A  F024         	call	_PIN_MANAGER_Initialize	;wreg free
  8331                           
  8332                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  8333   004A88  EC77  F025         	call	_OSCILLATOR_Initialize	;wreg free
  8334   004A8C  0012               	return		;funcret
  8335   004A8E                     __end_of_SYSTEM_Initialize:
  8336                           	callstack 0
  8337                           
  8338 ;; *************** function _PIN_MANAGER_Initialize *****************
  8339 ;; Defined at:
  8340 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8341 ;; Parameters:    Size  Location     Type
  8342 ;;		None
  8343 ;; Auto vars:     Size  Location     Type
  8344 ;;		None
  8345 ;; Return value:  Size  Location     Type
  8346 ;;                  1    wreg      void 
  8347 ;; Registers used:
  8348 ;;		wreg, status,2
  8349 ;; Tracked objects:
  8350 ;;		On entry : 0/0
  8351 ;;		On exit  : 0/0
  8352 ;;		Unchanged: 0/0
  8353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8358 ;;Total ram usage:        0 bytes
  8359 ;; Hardware stack levels used: 1
  8360 ;; Hardware stack levels required when called: 9
  8361 ;; This function calls:
  8362 ;;		Nothing
  8363 ;; This function is called by:
  8364 ;;		_SYSTEM_Initialize
  8365 ;; This function uses a non-reentrant model
  8366 ;;
  8367                           
  8368                           	psect	text16
  8369   0048F4                     __ptext16:
  8370                           	callstack 0
  8371   0048F4                     _PIN_MANAGER_Initialize:
  8372                           	callstack 20
  8373   0048F4                     
  8374                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  8375   0048F4  6A8D               	clrf	141,c	;volatile
  8376                           
  8377                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  8378   0048F6  6A8C               	clrf	140,c	;volatile
  8379                           
  8380                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8381   0048F8  6A89               	clrf	137,c	;volatile
  8382                           
  8383                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8384   0048FA  6A8A               	clrf	138,c	;volatile
  8385                           
  8386                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8387   0048FC  6A8B               	clrf	139,c	;volatile
  8388   0048FE                     
  8389                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  8390   0048FE  0E07               	movlw	7
  8391   004900  6E96               	movwf	150,c	;volatile
  8392   004902                     
  8393                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  8394   004902  6892               	setf	146,c	;volatile
  8395   004904                     
  8396                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  8397   004904  6893               	setf	147,c	;volatile
  8398   004906                     
  8399                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  8400   004906  6894               	setf	148,c	;volatile
  8401   004908                     
  8402                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  8403   004908  6895               	setf	149,c	;volatile
  8404   00490A                     
  8405                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  8406   00490A  687E               	setf	126,c	;volatile
  8407                           
  8408                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  8409   00490C  0E1F               	movlw	31
  8410   00490E  6E7F               	movwf	127,c	;volatile
  8411   004910                     
  8412                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  8413   004910  6A7C               	clrf	124,c	;volatile
  8414   004912                     
  8415                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  8416   004912  8EF1               	bsf	241,7,c	;volatile
  8417   004914  0012               	return		;funcret
  8418   004916                     __end_of_PIN_MANAGER_Initialize:
  8419                           	callstack 0
  8420                           
  8421 ;; *************** function _OSCILLATOR_Initialize *****************
  8422 ;; Defined at:
  8423 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;		None
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;		None
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  1    wreg      void 
  8430 ;; Registers used:
  8431 ;;		wreg, status,2
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8441 ;;Total ram usage:        0 bytes
  8442 ;; Hardware stack levels used: 1
  8443 ;; Hardware stack levels required when called: 9
  8444 ;; This function calls:
  8445 ;;		Nothing
  8446 ;; This function is called by:
  8447 ;;		_SYSTEM_Initialize
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           	psect	text17
  8452   004AEE                     __ptext17:
  8453                           	callstack 0
  8454   004AEE                     _OSCILLATOR_Initialize:
  8455                           	callstack 20
  8456   004AEE                     
  8457                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x30;
  8458   004AEE  0E30               	movlw	48
  8459   004AF0  6ED3               	movwf	211,c	;volatile
  8460   004AF2                     
  8461                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  8462   004AF2  6A9B               	clrf	155,c	;volatile
  8463   004AF4  0012               	return		;funcret
  8464   004AF6                     __end_of_OSCILLATOR_Initialize:
  8465                           	callstack 0
  8466                           
  8467 ;; *************** function _I2C_Initialize *****************
  8468 ;; Defined at:
  8469 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;		None
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;		None
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  1    wreg      void 
  8476 ;; Registers used:
  8477 ;;		wreg, status,2
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8487 ;;Total ram usage:        0 bytes
  8488 ;; Hardware stack levels used: 1
  8489 ;; Hardware stack levels required when called: 9
  8490 ;; This function calls:
  8491 ;;		Nothing
  8492 ;; This function is called by:
  8493 ;;		_SYSTEM_Initialize
  8494 ;; This function uses a non-reentrant model
  8495 ;;
  8496                           
  8497                           	psect	text18
  8498   004A4E                     __ptext18:
  8499                           	callstack 0
  8500   004A4E                     _I2C_Initialize:
  8501                           	callstack 20
  8502   004A4E                     
  8503                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x80;
  8504   004A4E  0E80               	movlw	128
  8505   004A50  6EC7               	movwf	199,c	;volatile
  8506                           
  8507                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  8508   004A52  0E08               	movlw	8
  8509   004A54  6EC6               	movwf	198,c	;volatile
  8510   004A56                     
  8511                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  8512   004A56  6AC5               	clrf	197,c	;volatile
  8513                           
  8514                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x27;
  8515   004A58  0E27               	movlw	39
  8516   004A5A  6EC8               	movwf	200,c	;volatile
  8517   004A5C                     
  8518                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  8519   004A5C  9AC6               	bcf	198,5,c	;volatile
  8520   004A5E  0012               	return		;funcret
  8521   004A60                     __end_of_I2C_Initialize:
  8522                           	callstack 0
  8523                           
  8524 ;; *************** function _REALTIMECLOCK_DS1307_print_Data *****************
  8525 ;; Defined at:
  8526 ;;		line 37 in file "ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c"
  8527 ;; Parameters:    Size  Location     Type
  8528 ;;		None
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  ret             1    0        unsigned char 
  8531 ;; Return value:  Size  Location     Type
  8532 ;;                  2   28[BANK1 ] PTR unsigned char 
  8533 ;; Registers used:
  8534 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8535 ;; Tracked objects:
  8536 ;;		On entry : 0/0
  8537 ;;		On exit  : 0/0
  8538 ;;		Unchanged: 0/0
  8539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8540 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8543 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8544 ;;Total ram usage:        2 bytes
  8545 ;; Hardware stack levels used: 1
  8546 ;; Hardware stack levels required when called: 13
  8547 ;; This function calls:
  8548 ;;		_EUSART_ASYNC_Init
  8549 ;;		_EUSART_ASYNC_WriteStringBlocking
  8550 ;; This function is called by:
  8551 ;;		_main
  8552 ;; This function uses a non-reentrant model
  8553 ;;
  8554                           
  8555                           	psect	text19
  8556   0030C0                     __ptext19:
  8557                           	callstack 0
  8558   0030C0                     _REALTIMECLOCK_DS1307_print_Data:
  8559                           	callstack 17
  8560   0030C0                     
  8561                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 38:     STD_ReturnType ret;;ECU_
      +                          layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 39:     REALTIMECLOCK_DS1307_Data[0] 
      +                          = ((REALTIMECLOCK_DS1307.days >> 4) + 0x30);
  8562   0030C0  0100               	movlb	0	; () banked
  8563   0030C2  3980               	swapf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+3)& (0+255),w,b
  8564   0030C4  0B0F               	andlw	15
  8565   0030C6  0F30               	addlw	48
  8566   0030C8  0101               	movlb	1	; () banked
  8567   0030CA  6F71               	movwf	_REALTIMECLOCK_DS1307_Data& (0+255),b
  8568                           
  8569                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 40:     REALTIMECLOCK_DS1307_Dat
      +                          a[1] = ((REALTIMECLOCK_DS1307.days & 0x0F) + 0x30);
  8570   0030CC  0100               	movlb	0	; () banked
  8571   0030CE  5180               	movf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+3)& (0+255),w,b
  8572   0030D0  0B0F               	andlw	15
  8573   0030D2  0F30               	addlw	48
  8574   0030D4  0101               	movlb	1	; () banked
  8575   0030D6  6F72               	movwf	(_REALTIMECLOCK_DS1307_Data+1)& (0+255),b
  8576   0030D8                     
  8577                           ; BSR set to: 1
  8578                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 41:     REALTIMECLOCK_DS1307_Dat
      +                          a[2] = '/';
  8579   0030D8  0E2F               	movlw	47
  8580   0030DA  6F73               	movwf	(_REALTIMECLOCK_DS1307_Data+2)& (0+255),b
  8581   0030DC                     
  8582                           ; BSR set to: 1
  8583                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 42:     REALTIMECLOCK_DS1307_Dat
      +                          a[3] = ((REALTIMECLOCK_DS1307.months >> 4) + 0x30);
  8584   0030DC  0100               	movlb	0	; () banked
  8585   0030DE  3981               	swapf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+4)& (0+255),w,b
  8586   0030E0  0B0F               	andlw	15
  8587   0030E2  0F30               	addlw	48
  8588   0030E4  0101               	movlb	1	; () banked
  8589   0030E6  6F74               	movwf	(_REALTIMECLOCK_DS1307_Data+3)& (0+255),b
  8590   0030E8                     
  8591                           ; BSR set to: 1
  8592                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 43:     REALTIMECLOCK_DS1307_Dat
      +                          a[4] = ((REALTIMECLOCK_DS1307.months & 0x0F) + 0x30);
  8593   0030E8  0100               	movlb	0	; () banked
  8594   0030EA  5181               	movf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+4)& (0+255),w,b
  8595   0030EC  0B0F               	andlw	15
  8596   0030EE  0F30               	addlw	48
  8597   0030F0  0101               	movlb	1	; () banked
  8598   0030F2  6F75               	movwf	(_REALTIMECLOCK_DS1307_Data+4)& (0+255),b
  8599   0030F4                     
  8600                           ; BSR set to: 1
  8601                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 44:     REALTIMECLOCK_DS1307_Dat
      +                          a[5] = '/';
  8602   0030F4  0E2F               	movlw	47
  8603   0030F6  6F76               	movwf	(_REALTIMECLOCK_DS1307_Data+5)& (0+255),b
  8604                           
  8605                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 45:     REALTIMECLOCK_DS1307_Dat
      +                          a[6] = ((REALTIMECLOCK_DS1307.years >> 4) + 0x30);
  8606   0030F8  0100               	movlb	0	; () banked
  8607   0030FA  3982               	swapf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+5)& (0+255),w,b
  8608   0030FC  0B0F               	andlw	15
  8609   0030FE  0F30               	addlw	48
  8610   003100  0101               	movlb	1	; () banked
  8611   003102  6F77               	movwf	(_REALTIMECLOCK_DS1307_Data+6)& (0+255),b
  8612                           
  8613                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 46:     REALTIMECLOCK_DS1307_Dat
      +                          a[7] = ((REALTIMECLOCK_DS1307.years & 0x0F) + 0x30);
  8614   003104  0100               	movlb	0	; () banked
  8615   003106  5182               	movf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+5)& (0+255),w,b
  8616   003108  0B0F               	andlw	15
  8617   00310A  0F30               	addlw	48
  8618   00310C  0101               	movlb	1	; () banked
  8619   00310E  6F78               	movwf	(_REALTIMECLOCK_DS1307_Data+7)& (0+255),b
  8620   003110                     
  8621                           ; BSR set to: 1
  8622                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 47:     REALTIMECLOCK_DS1307_Dat
      +                          a[8] = '-';
  8623   003110  0E2D               	movlw	45
  8624   003112  6F79               	movwf	(_REALTIMECLOCK_DS1307_Data+8)& (0+255),b
  8625   003114                     
  8626                           ; BSR set to: 1
  8627                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 48:     REALTIMECLOCK_DS1307_Dat
      +                          a[9] = ((REALTIMECLOCK_DS1307.hours >> 4) + 0x30);
  8628   003114  0100               	movlb	0	; () banked
  8629   003116  397F               	swapf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+2)& (0+255),w,b
  8630   003118  0B0F               	andlw	15
  8631   00311A  0F30               	addlw	48
  8632   00311C  0101               	movlb	1	; () banked
  8633   00311E  6F7A               	movwf	(_REALTIMECLOCK_DS1307_Data+9)& (0+255),b
  8634   003120                     
  8635                           ; BSR set to: 1
  8636                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 49:     REALTIMECLOCK_DS1307_Dat
      +                          a[10] = ((REALTIMECLOCK_DS1307.hours & 0x0F) + 0x30);
  8637   003120  0100               	movlb	0	; () banked
  8638   003122  517F               	movf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+2)& (0+255),w,b
  8639   003124  0B0F               	andlw	15
  8640   003126  0F30               	addlw	48
  8641   003128  0101               	movlb	1	; () banked
  8642   00312A  6F7B               	movwf	(_REALTIMECLOCK_DS1307_Data+10)& (0+255),b
  8643   00312C                     
  8644                           ; BSR set to: 1
  8645                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 50:     REALTIMECLOCK_DS1307_Dat
      +                          a[11] = ':';
  8646   00312C  0E3A               	movlw	58
  8647   00312E  6F7C               	movwf	(_REALTIMECLOCK_DS1307_Data+11)& (0+255),b
  8648                           
  8649                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 51:     REALTIMECLOCK_DS1307_Dat
      +                          a[12] = ((REALTIMECLOCK_DS1307.minutes >> 4) + 0x30);
  8650   003130  0100               	movlb	0	; () banked
  8651   003132  397E               	swapf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+1)& (0+255),w,b
  8652   003134  0B0F               	andlw	15
  8653   003136  0F30               	addlw	48
  8654   003138  0101               	movlb	1	; () banked
  8655   00313A  6F7D               	movwf	(_REALTIMECLOCK_DS1307_Data+12)& (0+255),b
  8656                           
  8657                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 52:     REALTIMECLOCK_DS1307_Dat
      +                          a[13] = ((REALTIMECLOCK_DS1307.minutes & 0x0F) + 0x30);
  8658   00313C  0100               	movlb	0	; () banked
  8659   00313E  517E               	movf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+1)& (0+255),w,b
  8660   003140  0B0F               	andlw	15
  8661   003142  0F30               	addlw	48
  8662   003144  0101               	movlb	1	; () banked
  8663   003146  6F7E               	movwf	(_REALTIMECLOCK_DS1307_Data+13)& (0+255),b
  8664   003148                     
  8665                           ; BSR set to: 1
  8666                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 53:     REALTIMECLOCK_DS1307_Dat
      +                          a[14] = ':';
  8667   003148  0E3A               	movlw	58
  8668   00314A  6F7F               	movwf	(_REALTIMECLOCK_DS1307_Data+14)& (0+255),b
  8669   00314C                     
  8670                           ; BSR set to: 1
  8671                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 54:     REALTIMECLOCK_DS1307_Dat
      +                          a[15] = ((REALTIMECLOCK_DS1307.seconds >> 4) + 0x30);
  8672   00314C  0100               	movlb	0	; () banked
  8673   00314E  397D               	swapf	_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571& (0+255),w,b
  8674   003150  0B0F               	andlw	15
  8675   003152  0F30               	addlw	48
  8676   003154  0101               	movlb	1	; () banked
  8677   003156  6F80               	movwf	(_REALTIMECLOCK_DS1307_Data+15)& (0+255),b
  8678   003158                     
  8679                           ; BSR set to: 1
  8680                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 55:     REALTIMECLOCK_DS1307_Dat
      +                          a[16] = ((REALTIMECLOCK_DS1307.seconds & 0x0F) + 0x30);
  8681   003158  0100               	movlb	0	; () banked
  8682   00315A  517D               	movf	_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571& (0+255),w,b
  8683   00315C  0B0F               	andlw	15
  8684   00315E  0F30               	addlw	48
  8685   003160  0101               	movlb	1	; () banked
  8686   003162  6F81               	movwf	(_REALTIMECLOCK_DS1307_Data+16)& (0+255),b
  8687   003164                     
  8688                           ; BSR set to: 1
  8689                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 56:     REALTIMECLOCK_DS1307_Dat
      +                          a[17] = '\r';
  8690   003164  0E0D               	movlw	13
  8691   003166  6F82               	movwf	(_REALTIMECLOCK_DS1307_Data+17)& (0+255),b
  8692   003168                     
  8693                           ; BSR set to: 1
  8694                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 58:     EUSART_ASYNC_Init(&UART_
      +                          obj);
  8695   003168  0E1F               	movlw	low _UART_obj
  8696   00316A  6F59               	movwf	EUSART_ASYNC_Init@_EUSART& (0+255),b
  8697   00316C  0E01               	movlw	high _UART_obj
  8698   00316E  6F5A               	movwf	(EUSART_ASYNC_Init@_EUSART+1)& (0+255),b
  8699   003170  EC14  F023         	call	_EUSART_ASYNC_Init	;wreg free
  8700   003174  0E3E               	movlw	low STR_7
  8701   003176  0100               	movlb	0	; () banked
  8702   003178  6FD6               	movwf	EUSART_ASYNC_WriteStringBlocking@_Byte& (0+255),b
  8703   00317A  51D6               	movf	EUSART_ASYNC_WriteStringBlocking@_Byte& (0+255),w,b
  8704   00317C  A4D8               	btfss	status,2,c
  8705   00317E  0E10               	movlw	high __smallconst
  8706   003180  6FD7               	movwf	(EUSART_ASYNC_WriteStringBlocking@_Byte+1)& (0+255),b
  8707   003182  0E00               	movlw	0
  8708   003184  6FD9               	movwf	(EUSART_ASYNC_WriteStringBlocking@str_len+1)& (0+255),b
  8709   003186  0E06               	movlw	6
  8710   003188  6FD8               	movwf	EUSART_ASYNC_WriteStringBlocking@str_len& (0+255),b
  8711   00318A  EC23  F01F         	call	_EUSART_ASYNC_WriteStringBlocking	;wreg free
  8712   00318E  0E71               	movlw	low _REALTIMECLOCK_DS1307_Data
  8713   003190  0100               	movlb	0	; () banked
  8714   003192  6FD6               	movwf	EUSART_ASYNC_WriteStringBlocking@_Byte& (0+255),b
  8715   003194  0E01               	movlw	high _REALTIMECLOCK_DS1307_Data
  8716   003196  6FD7               	movwf	(EUSART_ASYNC_WriteStringBlocking@_Byte+1)& (0+255),b
  8717   003198  0E00               	movlw	0
  8718   00319A  6FD9               	movwf	(EUSART_ASYNC_WriteStringBlocking@str_len+1)& (0+255),b
  8719   00319C  0E12               	movlw	18
  8720   00319E  6FD8               	movwf	EUSART_ASYNC_WriteStringBlocking@str_len& (0+255),b
  8721   0031A0  EC23  F01F         	call	_EUSART_ASYNC_WriteStringBlocking	;wreg free
  8722   0031A4                     
  8723                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 62:     return REALTIMECLOCK_DS1
      +                          307_Data;
  8724   0031A4  0E71               	movlw	low _REALTIMECLOCK_DS1307_Data
  8725   0031A6  0101               	movlb	1	; () banked
  8726   0031A8  6F5B               	movwf	?_REALTIMECLOCK_DS1307_print_Data& (0+255),b
  8727   0031AA  0E01               	movlw	high _REALTIMECLOCK_DS1307_Data
  8728   0031AC  6F5C               	movwf	(?_REALTIMECLOCK_DS1307_print_Data+1)& (0+255),b
  8729   0031AE                     
  8730                           ; BSR set to: 1
  8731   0031AE  0012               	return		;funcret
  8732   0031B0                     __end_of_REALTIMECLOCK_DS1307_print_Data:
  8733                           	callstack 0
  8734                           
  8735 ;; *************** function _EUSART_ASYNC_WriteStringBlocking *****************
  8736 ;; Defined at:
  8737 ;;		line 112 in file "MCAL_layer/USART/hal_usart.c"
  8738 ;; Parameters:    Size  Location     Type
  8739 ;;  _Byte           2    1[BANK0 ] PTR unsigned char 
  8740 ;;		 -> STR_7(7), REALTIMECLOCK_DS1307_Data(18), 
  8741 ;;  str_len         2    3[BANK0 ] unsigned short 
  8742 ;; Auto vars:     Size  Location     Type
  8743 ;;  char_counter    2    8[BANK0 ] unsigned short 
  8744 ;;  ret             1    7[BANK0 ] unsigned char 
  8745 ;; Return value:  Size  Location     Type
  8746 ;;                  1    wreg      unsigned char 
  8747 ;; Registers used:
  8748 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8749 ;; Tracked objects:
  8750 ;;		On entry : 0/0
  8751 ;;		On exit  : 0/0
  8752 ;;		Unchanged: 0/0
  8753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8754 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8755 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8756 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8757 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8758 ;;Total ram usage:        9 bytes
  8759 ;; Hardware stack levels used: 1
  8760 ;; Hardware stack levels required when called: 10
  8761 ;; This function calls:
  8762 ;;		_EUSART_ASYNC_WriteByteBlocking
  8763 ;; This function is called by:
  8764 ;;		_REALTIMECLOCK_DS1307_print_Data
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           	psect	text20
  8769   003E46                     __ptext20:
  8770                           	callstack 0
  8771   003E46                     _EUSART_ASYNC_WriteStringBlocking:
  8772                           	callstack 19
  8773   003E46                     
  8774                           ;MCAL_layer/USART/hal_usart.c: 115:     if(((void*)0) == _Byte){
  8775   003E46  0100               	movlb	0	; () banked
  8776   003E48  51D6               	movf	EUSART_ASYNC_WriteStringBlocking@_Byte& (0+255),w,b
  8777   003E4A  11D7               	iorwf	(EUSART_ASYNC_WriteStringBlocking@_Byte+1)& (0+255),w,b
  8778   003E4C  A4D8               	btfss	status,2,c
  8779   003E4E  EF2B  F01F         	goto	u12491
  8780   003E52  EF2D  F01F         	goto	u12490
  8781   003E56                     u12491:
  8782   003E56  EF30  F01F         	goto	l13409
  8783   003E5A                     u12490:
  8784   003E5A                     
  8785                           ; BSR set to: 0
  8786                           ;MCAL_layer/USART/hal_usart.c: 116:         ret = (STD_ReturnType)0x00;
  8787   003E5A  6BDC               	clrf	EUSART_ASYNC_WriteStringBlocking@ret& (0+255),b
  8788                           
  8789                           ;MCAL_layer/USART/hal_usart.c: 117:     }
  8790   003E5C  EF5F  F01F         	goto	l2191
  8791   003E60                     l13409:
  8792                           
  8793                           ; BSR set to: 0
  8794                           ;MCAL_layer/USART/hal_usart.c: 119:         for(char_counter = 0;char_counter<str_len;ch
      +                          ar_counter++){
  8795   003E60  0E00               	movlw	0
  8796   003E62  6FDE               	movwf	(EUSART_ASYNC_WriteStringBlocking@char_counter+1)& (0+255),b
  8797   003E64  0E00               	movlw	0
  8798   003E66  6FDD               	movwf	EUSART_ASYNC_WriteStringBlocking@char_counter& (0+255),b
  8799   003E68  EF52  F01F         	goto	l13415
  8800   003E6C                     l13411:
  8801                           
  8802                           ; BSR set to: 0
  8803   003E6C  51DD               	movf	EUSART_ASYNC_WriteStringBlocking@char_counter& (0+255),w,b
  8804   003E6E  25D6               	addwf	EUSART_ASYNC_WriteStringBlocking@_Byte& (0+255),w,b
  8805   003E70  6FDA               	movwf	??_EUSART_ASYNC_WriteStringBlocking& (0+255),b
  8806   003E72  51DE               	movf	(EUSART_ASYNC_WriteStringBlocking@char_counter+1)& (0+255),w,b
  8807   003E74  21D7               	addwfc	(EUSART_ASYNC_WriteStringBlocking@_Byte+1)& (0+255),w,b
  8808   003E76  6FDB               	movwf	(??_EUSART_ASYNC_WriteStringBlocking+1)& (0+255),b
  8809   003E78  C0DA  FFF6         	movff	??_EUSART_ASYNC_WriteStringBlocking,tblptrl
  8810   003E7C  C0DB  FFF7         	movff	??_EUSART_ASYNC_WriteStringBlocking+1,tblptrh
  8811   003E80  0E00               	movlw	low (__smallconst shr (0+16))
  8812   003E82  6EF8               	movwf	tblptru,c
  8813   003E84  0E0F               	movlw	(high __ramtop+-1)
  8814   003E86  64F7               	cpfsgt	tblptrh,c
  8815   003E88  D003               	bra	u12507
  8816   003E8A  0008               	tblrd		*
  8817   003E8C  50F5               	movf	tablat,w,c
  8818   003E8E  D005               	bra	u12500
  8819   003E90                     u12507:
  8820   003E90  CFF6 FFE9          	movff	tblptrl,fsr0l
  8821   003E94  CFF7 FFEA          	movff	tblptrh,fsr0h
  8822   003E98  50EF               	movf	indf0,w,c
  8823   003E9A                     u12500:
  8824   003E9A  ECC8  F024         	call	_EUSART_ASYNC_WriteByteBlocking
  8825   003E9E                     
  8826                           ;MCAL_layer/USART/hal_usart.c: 121:         }
  8827   003E9E  0100               	movlb	0	; () banked
  8828   003EA0  4BDD               	infsnz	EUSART_ASYNC_WriteStringBlocking@char_counter& (0+255),f,b
  8829   003EA2  2BDE               	incf	(EUSART_ASYNC_WriteStringBlocking@char_counter+1)& (0+255),f,b
  8830   003EA4                     l13415:
  8831                           
  8832                           ; BSR set to: 0
  8833   003EA4  51D8               	movf	EUSART_ASYNC_WriteStringBlocking@str_len& (0+255),w,b
  8834   003EA6  5DDD               	subwf	EUSART_ASYNC_WriteStringBlocking@char_counter& (0+255),w,b
  8835   003EA8  51D9               	movf	(EUSART_ASYNC_WriteStringBlocking@str_len+1)& (0+255),w,b
  8836   003EAA  59DE               	subwfb	(EUSART_ASYNC_WriteStringBlocking@char_counter+1)& (0+255),w,b
  8837   003EAC  A0D8               	btfss	status,0,c
  8838   003EAE  EF5B  F01F         	goto	u12511
  8839   003EB2  EF5D  F01F         	goto	u12510
  8840   003EB6                     u12511:
  8841   003EB6  EF36  F01F         	goto	l13411
  8842   003EBA                     u12510:
  8843   003EBA                     
  8844                           ; BSR set to: 0
  8845                           ;MCAL_layer/USART/hal_usart.c: 123:         ret = (STD_ReturnType)0x01;
  8846   003EBA  0E01               	movlw	1
  8847   003EBC  6FDC               	movwf	EUSART_ASYNC_WriteStringBlocking@ret& (0+255),b
  8848   003EBE                     l2191:
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;MCAL_layer/USART/hal_usart.c: 125:     return ret;
  8852   003EBE  51DC               	movf	EUSART_ASYNC_WriteStringBlocking@ret& (0+255),w,b
  8853   003EC0                     
  8854                           ; BSR set to: 0
  8855   003EC0  0012               	return		;funcret
  8856   003EC2                     __end_of_EUSART_ASYNC_WriteStringBlocking:
  8857                           	callstack 0
  8858                           
  8859 ;; *************** function _EUSART_ASYNC_WriteByteBlocking *****************
  8860 ;; Defined at:
  8861 ;;		line 101 in file "MCAL_layer/USART/hal_usart.c"
  8862 ;; Parameters:    Size  Location     Type
  8863 ;;  _Byte           1    wreg     unsigned char 
  8864 ;; Auto vars:     Size  Location     Type
  8865 ;;  _Byte           1    0[BANK0 ] unsigned char 
  8866 ;;  ret             1    0        unsigned char 
  8867 ;; Return value:  Size  Location     Type
  8868 ;;                  1    wreg      unsigned char 
  8869 ;; Registers used:
  8870 ;;		wreg, status,2
  8871 ;; Tracked objects:
  8872 ;;		On entry : 0/0
  8873 ;;		On exit  : 0/0
  8874 ;;		Unchanged: 0/0
  8875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8877 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8879 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8880 ;;Total ram usage:        1 bytes
  8881 ;; Hardware stack levels used: 1
  8882 ;; Hardware stack levels required when called: 9
  8883 ;; This function calls:
  8884 ;;		Nothing
  8885 ;; This function is called by:
  8886 ;;		_EUSART_ASYNC_WriteStringBlocking
  8887 ;; This function uses a non-reentrant model
  8888 ;;
  8889                           
  8890                           	psect	text21
  8891   004990                     __ptext21:
  8892                           	callstack 0
  8893   004990                     _EUSART_ASYNC_WriteByteBlocking:
  8894                           	callstack 19
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;incstack = 0
  8898                           ;EUSART_ASYNC_WriteByteBlocking@_Byte stored from wreg
  8899   004990  0100               	movlb	0	; () banked
  8900   004992  6FD5               	movwf	EUSART_ASYNC_WriteByteBlocking@_Byte& (0+255),b
  8901   004994                     l2184:
  8902   004994  A2AC               	btfss	172,1,c	;volatile
  8903   004996  EFCF  F024         	goto	u12261
  8904   00499A  EFD1  F024         	goto	u12260
  8905   00499E                     u12261:
  8906   00499E  EFCA  F024         	goto	l2184
  8907   0049A2                     u12260:
  8908   0049A2                     
  8909                           ;MCAL_layer/USART/hal_usart.c: 106:     (PIE1bits.TXIE = 1);
  8910   0049A2  889D               	bsf	157,4,c	;volatile
  8911   0049A4                     
  8912                           ;MCAL_layer/USART/hal_usart.c: 108:     TXREG = _Byte;
  8913   0049A4  C0D5  FFAD         	movff	EUSART_ASYNC_WriteByteBlocking@_Byte,4013	;volatile
  8914   0049A8  0012               	return		;funcret
  8915   0049AA                     __end_of_EUSART_ASYNC_WriteByteBlocking:
  8916                           	callstack 0
  8917                           
  8918 ;; *************** function _EUSART_ASYNC_Init *****************
  8919 ;; Defined at:
  8920 ;;		line 28 in file "MCAL_layer/USART/hal_usart.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;  _EUSART         2   26[BANK1 ] PTR const struct .
  8923 ;;		 -> UART_obj(17), 
  8924 ;; Auto vars:     Size  Location     Type
  8925 ;;  ret             1    0        unsigned char 
  8926 ;; Return value:  Size  Location     Type
  8927 ;;                  1    wreg      unsigned char 
  8928 ;; Registers used:
  8929 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8930 ;; Tracked objects:
  8931 ;;		On entry : 0/0
  8932 ;;		On exit  : 0/0
  8933 ;;		Unchanged: 0/0
  8934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8935 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8938 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8939 ;;Total ram usage:        2 bytes
  8940 ;; Hardware stack levels used: 1
  8941 ;; Hardware stack levels required when called: 12
  8942 ;; This function calls:
  8943 ;;		_EUSART_BaudRateCalculation
  8944 ;;		_EUSART_RX_Init
  8945 ;;		_EUSART_TX_Init
  8946 ;;		_PinsConfig@hal_usart$F4705
  8947 ;; This function is called by:
  8948 ;;		_REALTIMECLOCK_DS1307_print_Data
  8949 ;; This function uses a non-reentrant model
  8950 ;;
  8951                           
  8952                           	psect	text22
  8953   004628                     __ptext22:
  8954                           	callstack 0
  8955   004628                     _EUSART_ASYNC_Init:
  8956                           	callstack 17
  8957   004628                     
  8958                           ;MCAL_layer/USART/hal_usart.c: 30:     if(((void*)0) == _EUSART){
  8959   004628  0101               	movlb	1	; () banked
  8960   00462A  5159               	movf	EUSART_ASYNC_Init@_EUSART& (0+255),w,b
  8961   00462C  115A               	iorwf	(EUSART_ASYNC_Init@_EUSART+1)& (0+255),w,b
  8962   00462E  A4D8               	btfss	status,2,c
  8963   004630  EF1C  F023         	goto	u12481
  8964   004634  EF1E  F023         	goto	u12480
  8965   004638                     u12481:
  8966   004638  EF20  F023         	goto	l2157
  8967   00463C                     u12480:
  8968   00463C                     
  8969                           ; BSR set to: 1
  8970                           ;MCAL_layer/USART/hal_usart.c: 32:     }
  8971   00463C  EF36  F023         	goto	l2159
  8972   004640                     l2157:
  8973                           
  8974                           ; BSR set to: 1
  8975                           ;MCAL_layer/USART/hal_usart.c: 35:         (RCSTAbits.SPEN = 0);
  8976   004640  9EAB               	bcf	171,7,c	;volatile
  8977   004642                     
  8978                           ; BSR set to: 1
  8979                           ;MCAL_layer/USART/hal_usart.c: 37:         PinsConfig();
  8980   004642  EC5A  F023         	call	_PinsConfig@hal_usart$F4705	;wreg free
  8981                           
  8982                           ;MCAL_layer/USART/hal_usart.c: 39:         EUSART_BaudRateCalculation(_EUSART);
  8983   004646  C159  F0FC         	movff	EUSART_ASYNC_Init@_EUSART,EUSART_BaudRateCalculation@_EUSART
  8984   00464A  C15A  F0FD         	movff	EUSART_ASYNC_Init@_EUSART+1,EUSART_BaudRateCalculation@_EUSART+1
  8985   00464E  EC25  F008         	call	_EUSART_BaudRateCalculation	;wreg free
  8986                           
  8987                           ;MCAL_layer/USART/hal_usart.c: 41:         EUSART_TX_Init(_EUSART);
  8988   004652  C159  F0D5         	movff	EUSART_ASYNC_Init@_EUSART,EUSART_TX_Init@_EUSART
  8989   004656  C15A  F0D6         	movff	EUSART_ASYNC_Init@_EUSART+1,EUSART_TX_Init@_EUSART+1
  8990   00465A  EC53  F01B         	call	_EUSART_TX_Init	;wreg free
  8991                           
  8992                           ;MCAL_layer/USART/hal_usart.c: 43:         EUSART_RX_Init(_EUSART);
  8993   00465E  C159  F0D5         	movff	EUSART_ASYNC_Init@_EUSART,EUSART_RX_Init@_EUSART
  8994   004662  C15A  F0D6         	movff	EUSART_ASYNC_Init@_EUSART+1,EUSART_RX_Init@_EUSART+1
  8995   004666  ECC0  F019         	call	_EUSART_RX_Init	;wreg free
  8996   00466A                     
  8997                           ;MCAL_layer/USART/hal_usart.c: 45:         (RCSTAbits.SPEN = 1);
  8998   00466A  8EAB               	bsf	171,7,c	;volatile
  8999   00466C                     l2159:
  9000   00466C  0012               	return		;funcret
  9001   00466E                     __end_of_EUSART_ASYNC_Init:
  9002                           	callstack 0
  9003                           
  9004 ;; *************** function _PinsConfig@hal_usart$F4705 *****************
  9005 ;; Defined at:
  9006 ;;		line 159 in file "MCAL_layer/USART/hal_usart.c"
  9007 ;; Parameters:    Size  Location     Type
  9008 ;;		None
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  ret             1   10[BANK0 ] unsigned char 
  9011 ;; Return value:  Size  Location     Type
  9012 ;;                  1    wreg      void 
  9013 ;; Registers used:
  9014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9015 ;; Tracked objects:
  9016 ;;		On entry : 0/0
  9017 ;;		On exit  : 0/0
  9018 ;;		Unchanged: 0/0
  9019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9023 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9024 ;;Total ram usage:        1 bytes
  9025 ;; Hardware stack levels used: 1
  9026 ;; Hardware stack levels required when called: 11
  9027 ;; This function calls:
  9028 ;;		_gpio_pin_initialize
  9029 ;; This function is called by:
  9030 ;;		_EUSART_ASYNC_Init
  9031 ;; This function uses a non-reentrant model
  9032 ;;
  9033                           
  9034                           	psect	text23
  9035   0046B4                     __ptext23:
  9036                           	callstack 0
  9037   0046B4                     _PinsConfig@hal_usart$F4705:
  9038                           	callstack 17
  9039   0046B4                     
  9040                           ;MCAL_layer/USART/hal_usart.c: 162:     pinRC6.port = portC;
  9041   0046B4  5031               	movf	_pinRC6^0,w,c
  9042   0046B6  0BF8               	andlw	-8
  9043   0046B8  0902               	iorlw	2
  9044   0046BA  6E31               	movwf	_pinRC6^0,c
  9045                           
  9046                           ;MCAL_layer/USART/hal_usart.c: 163:     pinRC6.pin = pin6;
  9047   0046BC  5031               	movf	_pinRC6^0,w,c
  9048   0046BE  0BC7               	andlw	-57
  9049   0046C0  0930               	iorlw	48
  9050   0046C2  6E31               	movwf	_pinRC6^0,c
  9051   0046C4                     
  9052                           ;MCAL_layer/USART/hal_usart.c: 164:     pinRC6.direction = GPIO_Pin_Direction_INPUT;
  9053   0046C4  8C31               	bsf	_pinRC6^0,6,c
  9054   0046C6                     
  9055                           ;MCAL_layer/USART/hal_usart.c: 165:     pinRC6.logic = GPIO_Pin_Logic_LOW;
  9056   0046C6  9E31               	bcf	_pinRC6^0,7,c
  9057   0046C8                     
  9058                           ;MCAL_layer/USART/hal_usart.c: 166:     ret = gpio_pin_initialize(&pinRC6);
  9059   0046C8  0E31               	movlw	low _pinRC6
  9060   0046CA  0100               	movlb	0	; () banked
  9061   0046CC  6FDB               	movwf	gpio_pin_initialize@pinConfig& (0+255),b
  9062   0046CE  6BDC               	clrf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
  9063   0046D0  EC83  F021         	call	_gpio_pin_initialize	;wreg free
  9064   0046D4  0100               	movlb	0	; () banked
  9065   0046D6  6FDF               	movwf	PinsConfig@hal_usart$F4705@ret& (0+255),b
  9066   0046D8                     
  9067                           ; BSR set to: 0
  9068                           ;MCAL_layer/USART/hal_usart.c: 168:     pinRC7.port = portC;
  9069   0046D8  5030               	movf	_pinRC7^0,w,c
  9070   0046DA  0BF8               	andlw	-8
  9071   0046DC  0902               	iorlw	2
  9072   0046DE  6E30               	movwf	_pinRC7^0,c
  9073   0046E0                     
  9074                           ; BSR set to: 0
  9075                           ;MCAL_layer/USART/hal_usart.c: 169:     pinRC7.pin = pin7;
  9076   0046E0  0E38               	movlw	56
  9077   0046E2  1230               	iorwf	_pinRC7^0,f,c
  9078   0046E4                     
  9079                           ; BSR set to: 0
  9080                           ;MCAL_layer/USART/hal_usart.c: 170:     pinRC7.direction = GPIO_Pin_Direction_INPUT;
  9081   0046E4  8C30               	bsf	_pinRC7^0,6,c
  9082   0046E6                     
  9083                           ; BSR set to: 0
  9084                           ;MCAL_layer/USART/hal_usart.c: 171:     pinRC7.logic = GPIO_Pin_Logic_LOW;
  9085   0046E6  9E30               	bcf	_pinRC7^0,7,c
  9086   0046E8                     
  9087                           ; BSR set to: 0
  9088                           ;MCAL_layer/USART/hal_usart.c: 172:     ret |= gpio_pin_initialize(&pinRC7);
  9089   0046E8  0E30               	movlw	low _pinRC7
  9090   0046EA  6FDB               	movwf	gpio_pin_initialize@pinConfig& (0+255),b
  9091   0046EC  6BDC               	clrf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
  9092   0046EE  EC83  F021         	call	_gpio_pin_initialize	;wreg free
  9093   0046F2  0100               	movlb	0	; () banked
  9094   0046F4  13DF               	iorwf	PinsConfig@hal_usart$F4705@ret& (0+255),f,b
  9095   0046F6                     
  9096                           ; BSR set to: 0
  9097   0046F6  0012               	return		;funcret
  9098   0046F8                     __end_of_PinsConfig@hal_usart$F4705:
  9099                           	callstack 0
  9100                           
  9101 ;; *************** function _EUSART_TX_Init *****************
  9102 ;; Defined at:
  9103 ;;		line 220 in file "MCAL_layer/USART/hal_usart.c"
  9104 ;; Parameters:    Size  Location     Type
  9105 ;;  _EUSART         2    0[BANK0 ] PTR const struct .
  9106 ;;		 -> UART_obj(17), 
  9107 ;; Auto vars:     Size  Location     Type
  9108 ;;		None
  9109 ;; Return value:  Size  Location     Type
  9110 ;;                  1    wreg      void 
  9111 ;; Registers used:
  9112 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9113 ;; Tracked objects:
  9114 ;;		On entry : 0/0
  9115 ;;		On exit  : 0/0
  9116 ;;		Unchanged: 0/0
  9117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9118 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9122 ;;Total ram usage:        2 bytes
  9123 ;; Hardware stack levels used: 1
  9124 ;; Hardware stack levels required when called: 9
  9125 ;; This function calls:
  9126 ;;		Nothing
  9127 ;; This function is called by:
  9128 ;;		_EUSART_ASYNC_Init
  9129 ;; This function uses a non-reentrant model
  9130 ;;
  9131                           
  9132                           	psect	text24
  9133   0036A6                     __ptext24:
  9134                           	callstack 0
  9135   0036A6                     _EUSART_TX_Init:
  9136                           	callstack 19
  9137   0036A6                     
  9138                           ;MCAL_layer/USART/hal_usart.c: 221:     if(_EUSART->TX_Config.Transmit_Enable){
  9139   0036A6  0100               	movlb	0	; () banked
  9140   0036A8  EE20 F006          	lfsr	2,6
  9141   0036AC  51D5               	movf	EUSART_TX_Init@_EUSART& (0+255),w,b
  9142   0036AE  26D9               	addwf	fsr2l,f,c
  9143   0036B0  51D6               	movf	(EUSART_TX_Init@_EUSART+1)& (0+255),w,b
  9144   0036B2  22DA               	addwfc	fsr2h,f,c
  9145   0036B4  A0DF               	btfss	indf2,0,c
  9146   0036B6  EF5F  F01B         	goto	u12161
  9147   0036BA  EF61  F01B         	goto	u12160
  9148   0036BE                     u12161:
  9149   0036BE  EFAD  F01B         	goto	l2236
  9150   0036C2                     u12160:
  9151   0036C2                     
  9152                           ; BSR set to: 0
  9153                           ;MCAL_layer/USART/hal_usart.c: 223:         (TXSTAbits.TXEN = 1);
  9154   0036C2  8AAC               	bsf	172,5,c	;volatile
  9155   0036C4                     
  9156                           ; BSR set to: 0
  9157                           ;MCAL_layer/USART/hal_usart.c: 224:         if(_EUSART->TX_Config.Transmit_Interrupt_Ena
      +                          ble){
  9158   0036C4  EE20 F006          	lfsr	2,6
  9159   0036C8  51D5               	movf	EUSART_TX_Init@_EUSART& (0+255),w,b
  9160   0036CA  26D9               	addwf	fsr2l,f,c
  9161   0036CC  51D6               	movf	(EUSART_TX_Init@_EUSART+1)& (0+255),w,b
  9162   0036CE  22DA               	addwfc	fsr2h,f,c
  9163   0036D0  A2DF               	btfss	indf2,1,c
  9164   0036D2  EF6D  F01B         	goto	u12171
  9165   0036D6  EF6F  F01B         	goto	u12170
  9166   0036DA                     u12171:
  9167   0036DA  EF7F  F01B         	goto	l13215
  9168   0036DE                     u12170:
  9169   0036DE                     
  9170                           ; BSR set to: 0
  9171                           ;MCAL_layer/USART/hal_usart.c: 226:             (PIE1bits.TXIE = 0);
  9172   0036DE  989D               	bcf	157,4,c	;volatile
  9173                           
  9174                           ;MCAL_layer/USART/hal_usart.c: 250:             (INTCONbits.GIE = 1);
  9175   0036E0  8EF2               	bsf	242,7,c	;volatile
  9176                           
  9177                           ;MCAL_layer/USART/hal_usart.c: 252:             (INTCONbits.PEIE = 1);
  9178   0036E2  8CF2               	bsf	242,6,c	;volatile
  9179   0036E4                     
  9180                           ; BSR set to: 0
  9181                           ;MCAL_layer/USART/hal_usart.c: 254:             USART_TX_InterruptHandler = _EUSART->EUS
      +                          ART_TX_InterruptHandler;
  9182   0036E4  EE20 F009          	lfsr	2,9
  9183   0036E8  51D5               	movf	EUSART_TX_Init@_EUSART& (0+255),w,b
  9184   0036EA  26D9               	addwf	fsr2l,f,c
  9185   0036EC  51D6               	movf	(EUSART_TX_Init@_EUSART+1)& (0+255),w,b
  9186   0036EE  22DA               	addwfc	fsr2h,f,c
  9187   0036F0  CFDE F08F          	movff	postinc2,_USART_TX_InterruptHandler
  9188   0036F4  CFDD F090          	movff	postdec2,_USART_TX_InterruptHandler+1
  9189   0036F8                     
  9190                           ; BSR set to: 0
  9191                           ;MCAL_layer/USART/hal_usart.c: 256:             (PIE1bits.TXIE = 1);
  9192   0036F8  889D               	bsf	157,4,c	;volatile
  9193                           
  9194                           ;MCAL_layer/USART/hal_usart.c: 258:         }
  9195   0036FA  EF8D  F01B         	goto	l13219
  9196   0036FE                     l13215:
  9197                           
  9198                           ; BSR set to: 0
  9199   0036FE  EE20 F006          	lfsr	2,6
  9200   003702  51D5               	movf	EUSART_TX_Init@_EUSART& (0+255),w,b
  9201   003704  26D9               	addwf	fsr2l,f,c
  9202   003706  51D6               	movf	(EUSART_TX_Init@_EUSART+1)& (0+255),w,b
  9203   003708  22DA               	addwfc	fsr2h,f,c
  9204   00370A  B2DF               	btfsc	indf2,1,c
  9205   00370C  EF8A  F01B         	goto	u12181
  9206   003710  EF8C  F01B         	goto	u12180
  9207   003714                     u12181:
  9208   003714  EF8D  F01B         	goto	l13219
  9209   003718                     u12180:
  9210   003718                     
  9211                           ; BSR set to: 0
  9212                           ;MCAL_layer/USART/hal_usart.c: 261:             (PIE1bits.TXIE = 0);
  9213   003718  989D               	bcf	157,4,c	;volatile
  9214   00371A                     l13219:
  9215                           
  9216                           ; BSR set to: 0
  9217                           ;MCAL_layer/USART/hal_usart.c: 267:         if(_EUSART->TX_Config.Transmit_TX9_Enable){
  9218   00371A  EE20 F006          	lfsr	2,6
  9219   00371E  51D5               	movf	EUSART_TX_Init@_EUSART& (0+255),w,b
  9220   003720  26D9               	addwf	fsr2l,f,c
  9221   003722  51D6               	movf	(EUSART_TX_Init@_EUSART+1)& (0+255),w,b
  9222   003724  22DA               	addwfc	fsr2h,f,c
  9223   003726  A4DF               	btfss	indf2,2,c
  9224   003728  EF98  F01B         	goto	u12191
  9225   00372C  EF9A  F01B         	goto	u12190
  9226   003730                     u12191:
  9227   003730  EF9D  F01B         	goto	l13223
  9228   003734                     u12190:
  9229   003734                     
  9230                           ; BSR set to: 0
  9231                           ;MCAL_layer/USART/hal_usart.c: 268:             (TXSTAbits.TX9 = 1);
  9232   003734  8CAC               	bsf	172,6,c	;volatile
  9233                           
  9234                           ;MCAL_layer/USART/hal_usart.c: 269:         }
  9235   003736  EFAD  F01B         	goto	l2236
  9236   00373A                     l13223:
  9237                           
  9238                           ; BSR set to: 0
  9239   00373A  EE20 F006          	lfsr	2,6
  9240   00373E  51D5               	movf	EUSART_TX_Init@_EUSART& (0+255),w,b
  9241   003740  26D9               	addwf	fsr2l,f,c
  9242   003742  51D6               	movf	(EUSART_TX_Init@_EUSART+1)& (0+255),w,b
  9243   003744  22DA               	addwfc	fsr2h,f,c
  9244   003746  B4DF               	btfsc	indf2,2,c
  9245   003748  EFA8  F01B         	goto	u12201
  9246   00374C  EFAA  F01B         	goto	u12200
  9247   003750                     u12201:
  9248   003750  EFAD  F01B         	goto	l2232
  9249   003754                     u12200:
  9250   003754                     
  9251                           ; BSR set to: 0
  9252                           ;MCAL_layer/USART/hal_usart.c: 271:             (TXSTAbits.TX9 = 0);
  9253   003754  9CAC               	bcf	172,6,c	;volatile
  9254                           
  9255                           ;MCAL_layer/USART/hal_usart.c: 272:         }
  9256   003756  EFAD  F01B         	goto	l2236
  9257   00375A                     l2232:
  9258   00375A                     l2236:
  9259                           
  9260                           ; BSR set to: 0
  9261   00375A  0012               	return		;funcret
  9262   00375C                     __end_of_EUSART_TX_Init:
  9263                           	callstack 0
  9264                           
  9265 ;; *************** function _EUSART_RX_Init *****************
  9266 ;; Defined at:
  9267 ;;		line 281 in file "MCAL_layer/USART/hal_usart.c"
  9268 ;; Parameters:    Size  Location     Type
  9269 ;;  _EUSART         2    0[BANK0 ] PTR const struct .
  9270 ;;		 -> UART_obj(17), 
  9271 ;; Auto vars:     Size  Location     Type
  9272 ;;		None
  9273 ;; Return value:  Size  Location     Type
  9274 ;;                  1    wreg      void 
  9275 ;; Registers used:
  9276 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9277 ;; Tracked objects:
  9278 ;;		On entry : 0/0
  9279 ;;		On exit  : 0/0
  9280 ;;		Unchanged: 0/0
  9281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9282 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9285 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9286 ;;Total ram usage:        2 bytes
  9287 ;; Hardware stack levels used: 1
  9288 ;; Hardware stack levels required when called: 9
  9289 ;; This function calls:
  9290 ;;		Nothing
  9291 ;; This function is called by:
  9292 ;;		_EUSART_ASYNC_Init
  9293 ;; This function uses a non-reentrant model
  9294 ;;
  9295                           
  9296                           	psect	text25
  9297   003380                     __ptext25:
  9298                           	callstack 0
  9299   003380                     _EUSART_RX_Init:
  9300                           	callstack 19
  9301   003380                     
  9302                           ;MCAL_layer/USART/hal_usart.c: 282:     if(_EUSART->RX_Config.Receive_Enable){
  9303   003380  0100               	movlb	0	; () banked
  9304   003382  EE20 F008          	lfsr	2,8
  9305   003386  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
  9306   003388  26D9               	addwf	fsr2l,f,c
  9307   00338A  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
  9308   00338C  22DA               	addwfc	fsr2h,f,c
  9309   00338E  A0DF               	btfss	indf2,0,c
  9310   003390  EFCC  F019         	goto	u12211
  9311   003394  EFCE  F019         	goto	u12210
  9312   003398                     u12211:
  9313   003398  EF2E  F01A         	goto	l2249
  9314   00339C                     u12210:
  9315   00339C                     
  9316                           ; BSR set to: 0
  9317                           ;MCAL_layer/USART/hal_usart.c: 283:         (RCSTAbits.CREN = 1);
  9318   00339C  88AB               	bsf	171,4,c	;volatile
  9319   00339E                     
  9320                           ; BSR set to: 0
  9321                           ;MCAL_layer/USART/hal_usart.c: 284:         if(_EUSART->RX_Config.Receive_Interrupt_Enab
      +                          le){
  9322   00339E  EE20 F008          	lfsr	2,8
  9323   0033A2  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
  9324   0033A4  26D9               	addwf	fsr2l,f,c
  9325   0033A6  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
  9326   0033A8  22DA               	addwfc	fsr2h,f,c
  9327   0033AA  A2DF               	btfss	indf2,1,c
  9328   0033AC  EFDA  F019         	goto	u12221
  9329   0033B0  EFDC  F019         	goto	u12220
  9330   0033B4                     u12221:
  9331   0033B4  EF00  F01A         	goto	l13239
  9332   0033B8                     u12220:
  9333   0033B8                     
  9334                           ; BSR set to: 0
  9335                           ;MCAL_layer/USART/hal_usart.c: 286:             (PIE1bits.RCIE = 0);
  9336   0033B8  9A9D               	bcf	157,5,c	;volatile
  9337                           
  9338                           ;MCAL_layer/USART/hal_usart.c: 312:             (INTCONbits.GIE = 1);
  9339   0033BA  8EF2               	bsf	242,7,c	;volatile
  9340                           
  9341                           ;MCAL_layer/USART/hal_usart.c: 314:             (INTCONbits.PEIE = 1);
  9342   0033BC  8CF2               	bsf	242,6,c	;volatile
  9343   0033BE                     
  9344                           ; BSR set to: 0
  9345                           ;MCAL_layer/USART/hal_usart.c: 316:             USART_RX_InterruptHandler = _EUSART->EUS
      +                          ART_RX_InterruptHandler;
  9346   0033BE  EE20 F00B          	lfsr	2,11
  9347   0033C2  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
  9348   0033C4  26D9               	addwf	fsr2l,f,c
  9349   0033C6  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
  9350   0033C8  22DA               	addwfc	fsr2h,f,c
  9351   0033CA  CFDE F08D          	movff	postinc2,_USART_RX_InterruptHandler
  9352   0033CE  CFDD F08E          	movff	postdec2,_USART_RX_InterruptHandler+1
  9353                           
  9354                           ;MCAL_layer/USART/hal_usart.c: 317:             USART_FRE_InterruptHandler = _EUSART->EU
      +                          SART_FramingErrorInterruptHandler;
  9355   0033D2  EE20 F00D          	lfsr	2,13
  9356   0033D6  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
  9357   0033D8  26D9               	addwf	fsr2l,f,c
  9358   0033DA  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
  9359   0033DC  22DA               	addwfc	fsr2h,f,c
  9360   0033DE  CFDE F08B          	movff	postinc2,_USART_FRE_InterruptHandler
  9361   0033E2  CFDD F08C          	movff	postdec2,_USART_FRE_InterruptHandler+1
  9362                           
  9363                           ;MCAL_layer/USART/hal_usart.c: 318:             USART_OVRR_InterruptHandler = _EUSART->E
      +                          USART_OverrunErrorInterruptHandler;
  9364   0033E6  EE20 F00F          	lfsr	2,15
  9365   0033EA  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
  9366   0033EC  26D9               	addwf	fsr2l,f,c
  9367   0033EE  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
  9368   0033F0  22DA               	addwfc	fsr2h,f,c
  9369   0033F2  CFDE F089          	movff	postinc2,_USART_OVRR_InterruptHandler
  9370   0033F6  CFDD F08A          	movff	postdec2,_USART_OVRR_InterruptHandler+1
  9371   0033FA                     
  9372                           ; BSR set to: 0
  9373                           ;MCAL_layer/USART/hal_usart.c: 320:             (PIE1bits.RCIE = 1);
  9374   0033FA  8A9D               	bsf	157,5,c	;volatile
  9375                           
  9376                           ;MCAL_layer/USART/hal_usart.c: 322:         }
  9377   0033FC  EF0E  F01A         	goto	l13243
  9378   003400                     l13239:
  9379                           
  9380                           ; BSR set to: 0
  9381   003400  EE20 F008          	lfsr	2,8
  9382   003404  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
  9383   003406  26D9               	addwf	fsr2l,f,c
  9384   003408  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
  9385   00340A  22DA               	addwfc	fsr2h,f,c
  9386   00340C  B2DF               	btfsc	indf2,1,c
  9387   00340E  EF0B  F01A         	goto	u12231
  9388   003412  EF0D  F01A         	goto	u12230
  9389   003416                     u12231:
  9390   003416  EF0E  F01A         	goto	l13243
  9391   00341A                     u12230:
  9392   00341A                     
  9393                           ; BSR set to: 0
  9394                           ;MCAL_layer/USART/hal_usart.c: 325:             (PIE1bits.RCIE = 0);
  9395   00341A  9A9D               	bcf	157,5,c	;volatile
  9396   00341C                     l13243:
  9397                           
  9398                           ; BSR set to: 0
  9399                           ;MCAL_layer/USART/hal_usart.c: 331:         if(_EUSART->RX_Config.Receive_RX9_Enable){
  9400   00341C  EE20 F008          	lfsr	2,8
  9401   003420  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
  9402   003422  26D9               	addwf	fsr2l,f,c
  9403   003424  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
  9404   003426  22DA               	addwfc	fsr2h,f,c
  9405   003428  A4DF               	btfss	indf2,2,c
  9406   00342A  EF19  F01A         	goto	u12241
  9407   00342E  EF1B  F01A         	goto	u12240
  9408   003432                     u12241:
  9409   003432  EF1E  F01A         	goto	l13247
  9410   003436                     u12240:
  9411   003436                     
  9412                           ; BSR set to: 0
  9413                           ;MCAL_layer/USART/hal_usart.c: 332:             (RCSTAbits.RX9 = 1);
  9414   003436  8CAB               	bsf	171,6,c	;volatile
  9415                           
  9416                           ;MCAL_layer/USART/hal_usart.c: 333:         }
  9417   003438  EF2E  F01A         	goto	l2249
  9418   00343C                     l13247:
  9419                           
  9420                           ; BSR set to: 0
  9421   00343C  EE20 F008          	lfsr	2,8
  9422   003440  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
  9423   003442  26D9               	addwf	fsr2l,f,c
  9424   003444  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
  9425   003446  22DA               	addwfc	fsr2h,f,c
  9426   003448  B4DF               	btfsc	indf2,2,c
  9427   00344A  EF29  F01A         	goto	u12251
  9428   00344E  EF2B  F01A         	goto	u12250
  9429   003452                     u12251:
  9430   003452  EF2E  F01A         	goto	l2245
  9431   003456                     u12250:
  9432   003456                     
  9433                           ; BSR set to: 0
  9434                           ;MCAL_layer/USART/hal_usart.c: 335:             (RCSTAbits.RX9 = 0);
  9435   003456  9CAB               	bcf	171,6,c	;volatile
  9436                           
  9437                           ;MCAL_layer/USART/hal_usart.c: 336:         }
  9438   003458  EF2E  F01A         	goto	l2249
  9439   00345C                     l2245:
  9440   00345C                     l2249:
  9441                           
  9442                           ; BSR set to: 0
  9443   00345C  0012               	return		;funcret
  9444   00345E                     __end_of_EUSART_RX_Init:
  9445                           	callstack 0
  9446                           
  9447 ;; *************** function _EUSART_BaudRateCalculation *****************
  9448 ;; Defined at:
  9449 ;;		line 175 in file "MCAL_layer/USART/hal_usart.c"
  9450 ;; Parameters:    Size  Location     Type
  9451 ;;  _EUSART         2   39[BANK0 ] PTR const struct .
  9452 ;;		 -> UART_obj(17), 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  baudrate_Val    4   18[BANK1 ] float 
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      void 
  9457 ;; Registers used:
  9458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9464 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9465 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9466 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9467 ;;      Totals:         0       2      10       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9468 ;;Total ram usage:       12 bytes
  9469 ;; Hardware stack levels used: 1
  9470 ;; Hardware stack levels required when called: 10
  9471 ;; This function calls:
  9472 ;;		___fladd
  9473 ;;		___fldiv
  9474 ;;		___fltol
  9475 ;;		___xxtofl
  9476 ;; This function is called by:
  9477 ;;		_EUSART_ASYNC_Init
  9478 ;; This function uses a non-reentrant model
  9479 ;;
  9480                           
  9481                           	psect	text26
  9482   00104A                     __ptext26:
  9483                           	callstack 0
  9484   00104A                     _EUSART_BaudRateCalculation:
  9485                           	callstack 18
  9486   00104A                     
  9487                           ;MCAL_layer/USART/hal_usart.c: 176:     float baudrate_Val = 0;
  9488   00104A  0E00               	movlw	0
  9489   00104C  0101               	movlb	1	; () banked
  9490   00104E  6F51               	movwf	EUSART_BaudRateCalculation@baudrate_Val& (0+255),b
  9491   001050  0E00               	movlw	0
  9492   001052  6F52               	movwf	(EUSART_BaudRateCalculation@baudrate_Val+1)& (0+255),b
  9493   001054  0E00               	movlw	0
  9494   001056  6F53               	movwf	(EUSART_BaudRateCalculation@baudrate_Val+2)& (0+255),b
  9495   001058  0E00               	movlw	0
  9496   00105A  6F54               	movwf	(EUSART_BaudRateCalculation@baudrate_Val+3)& (0+255),b
  9497                           
  9498                           ;MCAL_layer/USART/hal_usart.c: 177:     switch(_EUSART->BAUDRAT_CONFIG){
  9499   00105C  EF5C  F00A         	goto	l13193
  9500   001060                     l2215:
  9501                           
  9502                           ; BSR set to: 1
  9503                           ;MCAL_layer/USART/hal_usart.c: 179:             (TXSTAbits.SYNC = 0);
  9504   001060  98AC               	bcf	172,4,c	;volatile
  9505                           
  9506                           ;MCAL_layer/USART/hal_usart.c: 180:             (BAUDCONbits.BRG16 = 0);
  9507   001062  96B8               	bcf	184,3,c	;volatile
  9508                           
  9509                           ;MCAL_layer/USART/hal_usart.c: 181:             (TXSTAbits.BRGH = 1);
  9510   001064  84AC               	bsf	172,2,c	;volatile
  9511   001066                     
  9512                           ; BSR set to: 1
  9513                           ;MCAL_layer/USART/hal_usart.c: 182:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 16) - 1;
  9514   001066  C0FC  FFD9         	movff	EUSART_BaudRateCalculation@_EUSART,fsr2l
  9515   00106A  C0FD  FFDA         	movff	EUSART_BaudRateCalculation@_EUSART+1,fsr2h
  9516   00106E  CFDE F0D5          	movff	postinc2,___xxtofl@val
  9517   001072  CFDE F0D6          	movff	postinc2,___xxtofl@val+1
  9518   001076  CFDE F0D7          	movff	postinc2,___xxtofl@val+2
  9519   00107A  CFDE F0D8          	movff	postinc2,___xxtofl@val+3
  9520   00107E  0E00               	movlw	0
  9521   001080  EC26  F015         	call	___xxtofl
  9522   001084  C0D5  F0E7         	movff	?___xxtofl,___fldiv@a
  9523   001088  C0D6  F0E8         	movff	?___xxtofl+1,___fldiv@a+1
  9524   00108C  C0D7  F0E9         	movff	?___xxtofl+2,___fldiv@a+2
  9525   001090  C0D8  F0EA         	movff	?___xxtofl+3,___fldiv@a+3
  9526   001094  0E00               	movlw	0
  9527   001096  0100               	movlb	0	; () banked
  9528   001098  6FE3               	movwf	___fldiv@b& (0+255),b
  9529   00109A  0E24               	movlw	36
  9530   00109C  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
  9531   00109E  0EF4               	movlw	244
  9532   0010A0  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
  9533   0010A2  0E4A               	movlw	74
  9534   0010A4  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
  9535   0010A6  EC38  F00F         	call	___fldiv	;wreg free
  9536   0010AA  C0E3  F155         	movff	?___fldiv,_EUSART_BaudRateCalculation$6910
  9537   0010AE  C0E4  F156         	movff	?___fldiv+1,_EUSART_BaudRateCalculation$6910+1
  9538   0010B2  C0E5  F157         	movff	?___fldiv+2,_EUSART_BaudRateCalculation$6910+2
  9539   0010B6  C0E6  F158         	movff	?___fldiv+3,_EUSART_BaudRateCalculation$6910+3
  9540   0010BA                     
  9541                           ;MCAL_layer/USART/hal_usart.c: 182:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 16) - 1;
  9542   0010BA  0E00               	movlw	0
  9543   0010BC  0100               	movlb	0	; () banked
  9544   0010BE  6FE7               	movwf	___fldiv@a& (0+255),b
  9545   0010C0  0E00               	movlw	0
  9546   0010C2  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
  9547   0010C4  0E80               	movlw	128
  9548   0010C6  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
  9549   0010C8  0E41               	movlw	65
  9550   0010CA  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
  9551   0010CC  C155  F0E3         	movff	_EUSART_BaudRateCalculation$6910,___fldiv@b
  9552   0010D0  C156  F0E4         	movff	_EUSART_BaudRateCalculation$6910+1,___fldiv@b+1
  9553   0010D4  C157  F0E5         	movff	_EUSART_BaudRateCalculation$6910+2,___fldiv@b+2
  9554   0010D8  C158  F0E6         	movff	_EUSART_BaudRateCalculation$6910+3,___fldiv@b+3
  9555   0010DC  EC38  F00F         	call	___fldiv	;wreg free
  9556   0010E0  C0E3  F13F         	movff	?___fldiv,___fladd@b
  9557   0010E4  C0E4  F140         	movff	?___fldiv+1,___fladd@b+1
  9558   0010E8  C0E5  F141         	movff	?___fldiv+2,___fladd@b+2
  9559   0010EC  C0E6  F142         	movff	?___fldiv+3,___fladd@b+3
  9560   0010F0  0E00               	movlw	0
  9561   0010F2  0101               	movlb	1	; () banked
  9562   0010F4  6F43               	movwf	___fladd@a& (0+255),b
  9563   0010F6  0E00               	movlw	0
  9564   0010F8  6F44               	movwf	(___fladd@a+1)& (0+255),b
  9565   0010FA  0E80               	movlw	128
  9566   0010FC  6F45               	movwf	(___fladd@a+2)& (0+255),b
  9567   0010FE  0EBF               	movlw	191
  9568   001100  6F46               	movwf	(___fladd@a+3)& (0+255),b
  9569   001102  ECAB  F00A         	call	___fladd	;wreg free
  9570   001106  C13F  F151         	movff	?___fladd,EUSART_BaudRateCalculation@baudrate_Val
  9571   00110A  C140  F152         	movff	?___fladd+1,EUSART_BaudRateCalculation@baudrate_Val+1
  9572   00110E  C141  F153         	movff	?___fladd+2,EUSART_BaudRateCalculation@baudrate_Val+2
  9573   001112  C142  F154         	movff	?___fladd+3,EUSART_BaudRateCalculation@baudrate_Val+3
  9574                           
  9575                           ;MCAL_layer/USART/hal_usart.c: 183:             break;
  9576   001116  EF89  F00A         	goto	l13195
  9577   00111A                     l2217:
  9578                           
  9579                           ; BSR set to: 1
  9580                           ;MCAL_layer/USART/hal_usart.c: 185:             (TXSTAbits.SYNC = 0);
  9581   00111A  98AC               	bcf	172,4,c	;volatile
  9582                           
  9583                           ;MCAL_layer/USART/hal_usart.c: 186:             (BAUDCONbits.BRG16 = 0);
  9584   00111C  96B8               	bcf	184,3,c	;volatile
  9585                           
  9586                           ;MCAL_layer/USART/hal_usart.c: 187:             (TXSTAbits.BRGH = 0);
  9587   00111E  94AC               	bcf	172,2,c	;volatile
  9588   001120                     
  9589                           ; BSR set to: 1
  9590                           ;MCAL_layer/USART/hal_usart.c: 188:             baudrate_Val = ((8000000UL/ (float)_EUSA
      +                          RT->Baud_rate) / 64) - 1;
  9591   001120  C0FC  FFD9         	movff	EUSART_BaudRateCalculation@_EUSART,fsr2l
  9592   001124  C0FD  FFDA         	movff	EUSART_BaudRateCalculation@_EUSART+1,fsr2h
  9593   001128  CFDE F0D5          	movff	postinc2,___xxtofl@val
  9594   00112C  CFDE F0D6          	movff	postinc2,___xxtofl@val+1
  9595   001130  CFDE F0D7          	movff	postinc2,___xxtofl@val+2
  9596   001134  CFDE F0D8          	movff	postinc2,___xxtofl@val+3
  9597   001138  0E00               	movlw	0
  9598   00113A  EC26  F015         	call	___xxtofl
  9599   00113E  C0D5  F0E7         	movff	?___xxtofl,___fldiv@a
  9600   001142  C0D6  F0E8         	movff	?___xxtofl+1,___fldiv@a+1
  9601   001146  C0D7  F0E9         	movff	?___xxtofl+2,___fldiv@a+2
  9602   00114A  C0D8  F0EA         	movff	?___xxtofl+3,___fldiv@a+3
  9603   00114E  0E00               	movlw	0
  9604   001150  0100               	movlb	0	; () banked
  9605   001152  6FE3               	movwf	___fldiv@b& (0+255),b
  9606   001154  0E24               	movlw	36
  9607   001156  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
  9608   001158  0EF4               	movlw	244
  9609   00115A  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
  9610   00115C  0E4A               	movlw	74
  9611   00115E  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
  9612   001160  EC38  F00F         	call	___fldiv	;wreg free
  9613   001164  C0E3  F155         	movff	?___fldiv,_EUSART_BaudRateCalculation$6910
  9614   001168  C0E4  F156         	movff	?___fldiv+1,_EUSART_BaudRateCalculation$6910+1
  9615   00116C  C0E5  F157         	movff	?___fldiv+2,_EUSART_BaudRateCalculation$6910+2
  9616   001170  C0E6  F158         	movff	?___fldiv+3,_EUSART_BaudRateCalculation$6910+3
  9617   001174                     
  9618                           ;MCAL_layer/USART/hal_usart.c: 188:             baudrate_Val = ((8000000UL/ (float)_EUSA
      +                          RT->Baud_rate) / 64) - 1;
  9619   001174  0E00               	movlw	0
  9620   001176  0100               	movlb	0	; () banked
  9621   001178  6FE7               	movwf	___fldiv@a& (0+255),b
  9622   00117A  0E00               	movlw	0
  9623   00117C  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
  9624   00117E  0E80               	movlw	128
  9625   001180  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
  9626   001182  0E42               	movlw	66
  9627   001184  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
  9628   001186  C155  F0E3         	movff	_EUSART_BaudRateCalculation$6910,___fldiv@b
  9629   00118A  C156  F0E4         	movff	_EUSART_BaudRateCalculation$6910+1,___fldiv@b+1
  9630   00118E  C157  F0E5         	movff	_EUSART_BaudRateCalculation$6910+2,___fldiv@b+2
  9631   001192  C158  F0E6         	movff	_EUSART_BaudRateCalculation$6910+3,___fldiv@b+3
  9632   001196  EC38  F00F         	call	___fldiv	;wreg free
  9633   00119A  C0E3  F13F         	movff	?___fldiv,___fladd@b
  9634   00119E  C0E4  F140         	movff	?___fldiv+1,___fladd@b+1
  9635   0011A2  C0E5  F141         	movff	?___fldiv+2,___fladd@b+2
  9636   0011A6  C0E6  F142         	movff	?___fldiv+3,___fladd@b+3
  9637   0011AA  0E00               	movlw	0
  9638   0011AC  0101               	movlb	1	; () banked
  9639   0011AE  6F43               	movwf	___fladd@a& (0+255),b
  9640   0011B0  0E00               	movlw	0
  9641   0011B2  6F44               	movwf	(___fladd@a+1)& (0+255),b
  9642   0011B4  0E80               	movlw	128
  9643   0011B6  6F45               	movwf	(___fladd@a+2)& (0+255),b
  9644   0011B8  0EBF               	movlw	191
  9645   0011BA  6F46               	movwf	(___fladd@a+3)& (0+255),b
  9646   0011BC  ECAB  F00A         	call	___fladd	;wreg free
  9647   0011C0  C13F  F151         	movff	?___fladd,EUSART_BaudRateCalculation@baudrate_Val
  9648   0011C4  C140  F152         	movff	?___fladd+1,EUSART_BaudRateCalculation@baudrate_Val+1
  9649   0011C8  C141  F153         	movff	?___fladd+2,EUSART_BaudRateCalculation@baudrate_Val+2
  9650   0011CC  C142  F154         	movff	?___fladd+3,EUSART_BaudRateCalculation@baudrate_Val+3
  9651                           
  9652                           ;MCAL_layer/USART/hal_usart.c: 189:             break;
  9653   0011D0  EF89  F00A         	goto	l13195
  9654   0011D4                     l2218:
  9655                           
  9656                           ; BSR set to: 1
  9657                           ;MCAL_layer/USART/hal_usart.c: 191:             (TXSTAbits.SYNC = 0);
  9658   0011D4  98AC               	bcf	172,4,c	;volatile
  9659                           
  9660                           ;MCAL_layer/USART/hal_usart.c: 192:             (BAUDCONbits.BRG16 = 1);
  9661   0011D6  86B8               	bsf	184,3,c	;volatile
  9662                           
  9663                           ;MCAL_layer/USART/hal_usart.c: 193:             (TXSTAbits.BRGH = 0);
  9664   0011D8  94AC               	bcf	172,2,c	;volatile
  9665   0011DA                     
  9666                           ; BSR set to: 1
  9667                           ;MCAL_layer/USART/hal_usart.c: 194:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 4) - 1;
  9668   0011DA  C0FC  FFD9         	movff	EUSART_BaudRateCalculation@_EUSART,fsr2l
  9669   0011DE  C0FD  FFDA         	movff	EUSART_BaudRateCalculation@_EUSART+1,fsr2h
  9670   0011E2  CFDE F0D5          	movff	postinc2,___xxtofl@val
  9671   0011E6  CFDE F0D6          	movff	postinc2,___xxtofl@val+1
  9672   0011EA  CFDE F0D7          	movff	postinc2,___xxtofl@val+2
  9673   0011EE  CFDE F0D8          	movff	postinc2,___xxtofl@val+3
  9674   0011F2  0E00               	movlw	0
  9675   0011F4  EC26  F015         	call	___xxtofl
  9676   0011F8  C0D5  F0E7         	movff	?___xxtofl,___fldiv@a
  9677   0011FC  C0D6  F0E8         	movff	?___xxtofl+1,___fldiv@a+1
  9678   001200  C0D7  F0E9         	movff	?___xxtofl+2,___fldiv@a+2
  9679   001204  C0D8  F0EA         	movff	?___xxtofl+3,___fldiv@a+3
  9680   001208  0E00               	movlw	0
  9681   00120A  0100               	movlb	0	; () banked
  9682   00120C  6FE3               	movwf	___fldiv@b& (0+255),b
  9683   00120E  0E24               	movlw	36
  9684   001210  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
  9685   001212  0EF4               	movlw	244
  9686   001214  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
  9687   001216  0E4A               	movlw	74
  9688   001218  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
  9689   00121A  EC38  F00F         	call	___fldiv	;wreg free
  9690   00121E  C0E3  F155         	movff	?___fldiv,_EUSART_BaudRateCalculation$6910
  9691   001222  C0E4  F156         	movff	?___fldiv+1,_EUSART_BaudRateCalculation$6910+1
  9692   001226  C0E5  F157         	movff	?___fldiv+2,_EUSART_BaudRateCalculation$6910+2
  9693   00122A  C0E6  F158         	movff	?___fldiv+3,_EUSART_BaudRateCalculation$6910+3
  9694   00122E                     
  9695                           ;MCAL_layer/USART/hal_usart.c: 194:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 4) - 1;
  9696   00122E  0E00               	movlw	0
  9697   001230  0100               	movlb	0	; () banked
  9698   001232  6FE7               	movwf	___fldiv@a& (0+255),b
  9699   001234  0E00               	movlw	0
  9700   001236  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
  9701   001238  0E80               	movlw	128
  9702   00123A  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
  9703   00123C  0E40               	movlw	64
  9704   00123E  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
  9705   001240  C155  F0E3         	movff	_EUSART_BaudRateCalculation$6910,___fldiv@b
  9706   001244  C156  F0E4         	movff	_EUSART_BaudRateCalculation$6910+1,___fldiv@b+1
  9707   001248  C157  F0E5         	movff	_EUSART_BaudRateCalculation$6910+2,___fldiv@b+2
  9708   00124C  C158  F0E6         	movff	_EUSART_BaudRateCalculation$6910+3,___fldiv@b+3
  9709   001250  EC38  F00F         	call	___fldiv	;wreg free
  9710   001254  C0E3  F13F         	movff	?___fldiv,___fladd@b
  9711   001258  C0E4  F140         	movff	?___fldiv+1,___fladd@b+1
  9712   00125C  C0E5  F141         	movff	?___fldiv+2,___fladd@b+2
  9713   001260  C0E6  F142         	movff	?___fldiv+3,___fladd@b+3
  9714   001264  0E00               	movlw	0
  9715   001266  0101               	movlb	1	; () banked
  9716   001268  6F43               	movwf	___fladd@a& (0+255),b
  9717   00126A  0E00               	movlw	0
  9718   00126C  6F44               	movwf	(___fladd@a+1)& (0+255),b
  9719   00126E  0E80               	movlw	128
  9720   001270  6F45               	movwf	(___fladd@a+2)& (0+255),b
  9721   001272  0EBF               	movlw	191
  9722   001274  6F46               	movwf	(___fladd@a+3)& (0+255),b
  9723   001276  ECAB  F00A         	call	___fladd	;wreg free
  9724   00127A  C13F  F151         	movff	?___fladd,EUSART_BaudRateCalculation@baudrate_Val
  9725   00127E  C140  F152         	movff	?___fladd+1,EUSART_BaudRateCalculation@baudrate_Val+1
  9726   001282  C141  F153         	movff	?___fladd+2,EUSART_BaudRateCalculation@baudrate_Val+2
  9727   001286  C142  F154         	movff	?___fladd+3,EUSART_BaudRateCalculation@baudrate_Val+3
  9728                           
  9729                           ;MCAL_layer/USART/hal_usart.c: 195:             break;
  9730   00128A  EF89  F00A         	goto	l13195
  9731   00128E                     l2219:
  9732                           
  9733                           ; BSR set to: 1
  9734                           ;MCAL_layer/USART/hal_usart.c: 197:             (TXSTAbits.SYNC = 0);
  9735   00128E  98AC               	bcf	172,4,c	;volatile
  9736                           
  9737                           ;MCAL_layer/USART/hal_usart.c: 198:             (BAUDCONbits.BRG16 = 1);
  9738   001290  86B8               	bsf	184,3,c	;volatile
  9739                           
  9740                           ;MCAL_layer/USART/hal_usart.c: 199:             (TXSTAbits.BRGH = 0);
  9741   001292  94AC               	bcf	172,2,c	;volatile
  9742   001294                     
  9743                           ; BSR set to: 1
  9744                           ;MCAL_layer/USART/hal_usart.c: 200:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 16) - 1;
  9745   001294  C0FC  FFD9         	movff	EUSART_BaudRateCalculation@_EUSART,fsr2l
  9746   001298  C0FD  FFDA         	movff	EUSART_BaudRateCalculation@_EUSART+1,fsr2h
  9747   00129C  CFDE F0D5          	movff	postinc2,___xxtofl@val
  9748   0012A0  CFDE F0D6          	movff	postinc2,___xxtofl@val+1
  9749   0012A4  CFDE F0D7          	movff	postinc2,___xxtofl@val+2
  9750   0012A8  CFDE F0D8          	movff	postinc2,___xxtofl@val+3
  9751   0012AC  0E00               	movlw	0
  9752   0012AE  EC26  F015         	call	___xxtofl
  9753   0012B2  C0D5  F0E7         	movff	?___xxtofl,___fldiv@a
  9754   0012B6  C0D6  F0E8         	movff	?___xxtofl+1,___fldiv@a+1
  9755   0012BA  C0D7  F0E9         	movff	?___xxtofl+2,___fldiv@a+2
  9756   0012BE  C0D8  F0EA         	movff	?___xxtofl+3,___fldiv@a+3
  9757   0012C2  0E00               	movlw	0
  9758   0012C4  0100               	movlb	0	; () banked
  9759   0012C6  6FE3               	movwf	___fldiv@b& (0+255),b
  9760   0012C8  0E24               	movlw	36
  9761   0012CA  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
  9762   0012CC  0EF4               	movlw	244
  9763   0012CE  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
  9764   0012D0  0E4A               	movlw	74
  9765   0012D2  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
  9766   0012D4  EC38  F00F         	call	___fldiv	;wreg free
  9767   0012D8  C0E3  F155         	movff	?___fldiv,_EUSART_BaudRateCalculation$6910
  9768   0012DC  C0E4  F156         	movff	?___fldiv+1,_EUSART_BaudRateCalculation$6910+1
  9769   0012E0  C0E5  F157         	movff	?___fldiv+2,_EUSART_BaudRateCalculation$6910+2
  9770   0012E4  C0E6  F158         	movff	?___fldiv+3,_EUSART_BaudRateCalculation$6910+3
  9771   0012E8                     
  9772                           ;MCAL_layer/USART/hal_usart.c: 200:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 16) - 1;
  9773   0012E8  0E00               	movlw	0
  9774   0012EA  0100               	movlb	0	; () banked
  9775   0012EC  6FE7               	movwf	___fldiv@a& (0+255),b
  9776   0012EE  0E00               	movlw	0
  9777   0012F0  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
  9778   0012F2  0E80               	movlw	128
  9779   0012F4  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
  9780   0012F6  0E41               	movlw	65
  9781   0012F8  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
  9782   0012FA  C155  F0E3         	movff	_EUSART_BaudRateCalculation$6910,___fldiv@b
  9783   0012FE  C156  F0E4         	movff	_EUSART_BaudRateCalculation$6910+1,___fldiv@b+1
  9784   001302  C157  F0E5         	movff	_EUSART_BaudRateCalculation$6910+2,___fldiv@b+2
  9785   001306  C158  F0E6         	movff	_EUSART_BaudRateCalculation$6910+3,___fldiv@b+3
  9786   00130A  EC38  F00F         	call	___fldiv	;wreg free
  9787   00130E  C0E3  F13F         	movff	?___fldiv,___fladd@b
  9788   001312  C0E4  F140         	movff	?___fldiv+1,___fladd@b+1
  9789   001316  C0E5  F141         	movff	?___fldiv+2,___fladd@b+2
  9790   00131A  C0E6  F142         	movff	?___fldiv+3,___fladd@b+3
  9791   00131E  0E00               	movlw	0
  9792   001320  0101               	movlb	1	; () banked
  9793   001322  6F43               	movwf	___fladd@a& (0+255),b
  9794   001324  0E00               	movlw	0
  9795   001326  6F44               	movwf	(___fladd@a+1)& (0+255),b
  9796   001328  0E80               	movlw	128
  9797   00132A  6F45               	movwf	(___fladd@a+2)& (0+255),b
  9798   00132C  0EBF               	movlw	191
  9799   00132E  6F46               	movwf	(___fladd@a+3)& (0+255),b
  9800   001330  ECAB  F00A         	call	___fladd	;wreg free
  9801   001334  C13F  F151         	movff	?___fladd,EUSART_BaudRateCalculation@baudrate_Val
  9802   001338  C140  F152         	movff	?___fladd+1,EUSART_BaudRateCalculation@baudrate_Val+1
  9803   00133C  C141  F153         	movff	?___fladd+2,EUSART_BaudRateCalculation@baudrate_Val+2
  9804   001340  C142  F154         	movff	?___fladd+3,EUSART_BaudRateCalculation@baudrate_Val+3
  9805                           
  9806                           ;MCAL_layer/USART/hal_usart.c: 201:             break;
  9807   001344  EF89  F00A         	goto	l13195
  9808   001348                     l2220:
  9809                           
  9810                           ; BSR set to: 1
  9811                           ;MCAL_layer/USART/hal_usart.c: 203:             (TXSTAbits.SYNC = 1);
  9812   001348  88AC               	bsf	172,4,c	;volatile
  9813                           
  9814                           ;MCAL_layer/USART/hal_usart.c: 204:             (BAUDCONbits.BRG16 = 0);
  9815   00134A  96B8               	bcf	184,3,c	;volatile
  9816   00134C                     
  9817                           ; BSR set to: 1
  9818                           ;MCAL_layer/USART/hal_usart.c: 205:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 4) - 1;
  9819   00134C  C0FC  FFD9         	movff	EUSART_BaudRateCalculation@_EUSART,fsr2l
  9820   001350  C0FD  FFDA         	movff	EUSART_BaudRateCalculation@_EUSART+1,fsr2h
  9821   001354  CFDE F0D5          	movff	postinc2,___xxtofl@val
  9822   001358  CFDE F0D6          	movff	postinc2,___xxtofl@val+1
  9823   00135C  CFDE F0D7          	movff	postinc2,___xxtofl@val+2
  9824   001360  CFDE F0D8          	movff	postinc2,___xxtofl@val+3
  9825   001364  0E00               	movlw	0
  9826   001366  EC26  F015         	call	___xxtofl
  9827   00136A  C0D5  F0E7         	movff	?___xxtofl,___fldiv@a
  9828   00136E  C0D6  F0E8         	movff	?___xxtofl+1,___fldiv@a+1
  9829   001372  C0D7  F0E9         	movff	?___xxtofl+2,___fldiv@a+2
  9830   001376  C0D8  F0EA         	movff	?___xxtofl+3,___fldiv@a+3
  9831   00137A  0E00               	movlw	0
  9832   00137C  0100               	movlb	0	; () banked
  9833   00137E  6FE3               	movwf	___fldiv@b& (0+255),b
  9834   001380  0E24               	movlw	36
  9835   001382  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
  9836   001384  0EF4               	movlw	244
  9837   001386  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
  9838   001388  0E4A               	movlw	74
  9839   00138A  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
  9840   00138C  EC38  F00F         	call	___fldiv	;wreg free
  9841   001390  C0E3  F155         	movff	?___fldiv,_EUSART_BaudRateCalculation$6910
  9842   001394  C0E4  F156         	movff	?___fldiv+1,_EUSART_BaudRateCalculation$6910+1
  9843   001398  C0E5  F157         	movff	?___fldiv+2,_EUSART_BaudRateCalculation$6910+2
  9844   00139C  C0E6  F158         	movff	?___fldiv+3,_EUSART_BaudRateCalculation$6910+3
  9845   0013A0                     
  9846                           ;MCAL_layer/USART/hal_usart.c: 205:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 4) - 1;
  9847   0013A0  0E00               	movlw	0
  9848   0013A2  0100               	movlb	0	; () banked
  9849   0013A4  6FE7               	movwf	___fldiv@a& (0+255),b
  9850   0013A6  0E00               	movlw	0
  9851   0013A8  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
  9852   0013AA  0E80               	movlw	128
  9853   0013AC  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
  9854   0013AE  0E40               	movlw	64
  9855   0013B0  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
  9856   0013B2  C155  F0E3         	movff	_EUSART_BaudRateCalculation$6910,___fldiv@b
  9857   0013B6  C156  F0E4         	movff	_EUSART_BaudRateCalculation$6910+1,___fldiv@b+1
  9858   0013BA  C157  F0E5         	movff	_EUSART_BaudRateCalculation$6910+2,___fldiv@b+2
  9859   0013BE  C158  F0E6         	movff	_EUSART_BaudRateCalculation$6910+3,___fldiv@b+3
  9860   0013C2  EC38  F00F         	call	___fldiv	;wreg free
  9861   0013C6  C0E3  F13F         	movff	?___fldiv,___fladd@b
  9862   0013CA  C0E4  F140         	movff	?___fldiv+1,___fladd@b+1
  9863   0013CE  C0E5  F141         	movff	?___fldiv+2,___fladd@b+2
  9864   0013D2  C0E6  F142         	movff	?___fldiv+3,___fladd@b+3
  9865   0013D6  0E00               	movlw	0
  9866   0013D8  0101               	movlb	1	; () banked
  9867   0013DA  6F43               	movwf	___fladd@a& (0+255),b
  9868   0013DC  0E00               	movlw	0
  9869   0013DE  6F44               	movwf	(___fladd@a+1)& (0+255),b
  9870   0013E0  0E80               	movlw	128
  9871   0013E2  6F45               	movwf	(___fladd@a+2)& (0+255),b
  9872   0013E4  0EBF               	movlw	191
  9873   0013E6  6F46               	movwf	(___fladd@a+3)& (0+255),b
  9874   0013E8  ECAB  F00A         	call	___fladd	;wreg free
  9875   0013EC  C13F  F151         	movff	?___fladd,EUSART_BaudRateCalculation@baudrate_Val
  9876   0013F0  C140  F152         	movff	?___fladd+1,EUSART_BaudRateCalculation@baudrate_Val+1
  9877   0013F4  C141  F153         	movff	?___fladd+2,EUSART_BaudRateCalculation@baudrate_Val+2
  9878   0013F8  C142  F154         	movff	?___fladd+3,EUSART_BaudRateCalculation@baudrate_Val+3
  9879                           
  9880                           ;MCAL_layer/USART/hal_usart.c: 206:             break;
  9881   0013FC  EF89  F00A         	goto	l13195
  9882   001400                     l2221:
  9883                           
  9884                           ; BSR set to: 1
  9885                           ;MCAL_layer/USART/hal_usart.c: 208:             (TXSTAbits.SYNC = 1);
  9886   001400  88AC               	bsf	172,4,c	;volatile
  9887                           
  9888                           ;MCAL_layer/USART/hal_usart.c: 209:             (BAUDCONbits.BRG16 = 1);
  9889   001402  86B8               	bsf	184,3,c	;volatile
  9890   001404                     
  9891                           ; BSR set to: 1
  9892                           ;MCAL_layer/USART/hal_usart.c: 210:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 4) - 1;
  9893   001404  C0FC  FFD9         	movff	EUSART_BaudRateCalculation@_EUSART,fsr2l
  9894   001408  C0FD  FFDA         	movff	EUSART_BaudRateCalculation@_EUSART+1,fsr2h
  9895   00140C  CFDE F0D5          	movff	postinc2,___xxtofl@val
  9896   001410  CFDE F0D6          	movff	postinc2,___xxtofl@val+1
  9897   001414  CFDE F0D7          	movff	postinc2,___xxtofl@val+2
  9898   001418  CFDE F0D8          	movff	postinc2,___xxtofl@val+3
  9899   00141C  0E00               	movlw	0
  9900   00141E  EC26  F015         	call	___xxtofl
  9901   001422  C0D5  F0E7         	movff	?___xxtofl,___fldiv@a
  9902   001426  C0D6  F0E8         	movff	?___xxtofl+1,___fldiv@a+1
  9903   00142A  C0D7  F0E9         	movff	?___xxtofl+2,___fldiv@a+2
  9904   00142E  C0D8  F0EA         	movff	?___xxtofl+3,___fldiv@a+3
  9905   001432  0E00               	movlw	0
  9906   001434  0100               	movlb	0	; () banked
  9907   001436  6FE3               	movwf	___fldiv@b& (0+255),b
  9908   001438  0E24               	movlw	36
  9909   00143A  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
  9910   00143C  0EF4               	movlw	244
  9911   00143E  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
  9912   001440  0E4A               	movlw	74
  9913   001442  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
  9914   001444  EC38  F00F         	call	___fldiv	;wreg free
  9915   001448  C0E3  F155         	movff	?___fldiv,_EUSART_BaudRateCalculation$6910
  9916   00144C  C0E4  F156         	movff	?___fldiv+1,_EUSART_BaudRateCalculation$6910+1
  9917   001450  C0E5  F157         	movff	?___fldiv+2,_EUSART_BaudRateCalculation$6910+2
  9918   001454  C0E6  F158         	movff	?___fldiv+3,_EUSART_BaudRateCalculation$6910+3
  9919   001458                     
  9920                           ;MCAL_layer/USART/hal_usart.c: 210:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 4) - 1;
  9921   001458  0E00               	movlw	0
  9922   00145A  0100               	movlb	0	; () banked
  9923   00145C  6FE7               	movwf	___fldiv@a& (0+255),b
  9924   00145E  0E00               	movlw	0
  9925   001460  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
  9926   001462  0E80               	movlw	128
  9927   001464  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
  9928   001466  0E40               	movlw	64
  9929   001468  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
  9930   00146A  C155  F0E3         	movff	_EUSART_BaudRateCalculation$6910,___fldiv@b
  9931   00146E  C156  F0E4         	movff	_EUSART_BaudRateCalculation$6910+1,___fldiv@b+1
  9932   001472  C157  F0E5         	movff	_EUSART_BaudRateCalculation$6910+2,___fldiv@b+2
  9933   001476  C158  F0E6         	movff	_EUSART_BaudRateCalculation$6910+3,___fldiv@b+3
  9934   00147A  EC38  F00F         	call	___fldiv	;wreg free
  9935   00147E  C0E3  F13F         	movff	?___fldiv,___fladd@b
  9936   001482  C0E4  F140         	movff	?___fldiv+1,___fladd@b+1
  9937   001486  C0E5  F141         	movff	?___fldiv+2,___fladd@b+2
  9938   00148A  C0E6  F142         	movff	?___fldiv+3,___fladd@b+3
  9939   00148E  0E00               	movlw	0
  9940   001490  0101               	movlb	1	; () banked
  9941   001492  6F43               	movwf	___fladd@a& (0+255),b
  9942   001494  0E00               	movlw	0
  9943   001496  6F44               	movwf	(___fladd@a+1)& (0+255),b
  9944   001498  0E80               	movlw	128
  9945   00149A  6F45               	movwf	(___fladd@a+2)& (0+255),b
  9946   00149C  0EBF               	movlw	191
  9947   00149E  6F46               	movwf	(___fladd@a+3)& (0+255),b
  9948   0014A0  ECAB  F00A         	call	___fladd	;wreg free
  9949   0014A4  C13F  F151         	movff	?___fladd,EUSART_BaudRateCalculation@baudrate_Val
  9950   0014A8  C140  F152         	movff	?___fladd+1,EUSART_BaudRateCalculation@baudrate_Val+1
  9951   0014AC  C141  F153         	movff	?___fladd+2,EUSART_BaudRateCalculation@baudrate_Val+2
  9952   0014B0  C142  F154         	movff	?___fladd+3,EUSART_BaudRateCalculation@baudrate_Val+3
  9953                           
  9954                           ;MCAL_layer/USART/hal_usart.c: 211:             break;
  9955   0014B4  EF89  F00A         	goto	l13195
  9956   0014B8                     l13193:
  9957                           
  9958                           ; BSR set to: 1
  9959   0014B8  0100               	movlb	0	; () banked
  9960   0014BA  EE20 F004          	lfsr	2,4
  9961   0014BE  51FC               	movf	EUSART_BaudRateCalculation@_EUSART& (0+255),w,b
  9962   0014C0  26D9               	addwf	fsr2l,f,c
  9963   0014C2  51FD               	movf	(EUSART_BaudRateCalculation@_EUSART+1)& (0+255),w,b
  9964   0014C4  22DA               	addwfc	fsr2h,f,c
  9965   0014C6  50DF               	movf	indf2,w,c
  9966   0014C8  0101               	movlb	1	; () banked
  9967   0014CA  6F4F               	movwf	??_EUSART_BaudRateCalculation& (0+255),b
  9968   0014CC  6B50               	clrf	(??_EUSART_BaudRateCalculation+1)& (0+255),b
  9969                           
  9970                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9971                           ; Switch size 1, requested type "simple"
  9972                           ; Number of cases is 1, Range of values is 0 to 0
  9973                           ; switch strategies available:
  9974                           ; Name         Instructions Cycles
  9975                           ; simple_byte            4     3 (average)
  9976                           ;	Chosen strategy is simple_byte
  9977   0014CE  5150               	movf	(??_EUSART_BaudRateCalculation+1)& (0+255),w,b
  9978   0014D0  0A00               	xorlw	0	; case 0
  9979   0014D2  B4D8               	btfsc	status,2,c
  9980   0014D4  EF6E  F00A         	goto	l14835
  9981   0014D8  EF89  F00A         	goto	l13195
  9982   0014DC                     l14835:
  9983                           
  9984                           ; BSR set to: 1
  9985                           ; Switch size 1, requested type "simple"
  9986                           ; Number of cases is 6, Range of values is 0 to 5
  9987                           ; switch strategies available:
  9988                           ; Name         Instructions Cycles
  9989                           ; simple_byte           19    10 (average)
  9990                           ;	Chosen strategy is simple_byte
  9991   0014DC  514F               	movf	??_EUSART_BaudRateCalculation& (0+255),w,b
  9992   0014DE  0A00               	xorlw	0	; case 0
  9993   0014E0  B4D8               	btfsc	status,2,c
  9994   0014E2  EF30  F008         	goto	l2215
  9995   0014E6  0A01               	xorlw	1	; case 1
  9996   0014E8  B4D8               	btfsc	status,2,c
  9997   0014EA  EF8D  F008         	goto	l2217
  9998   0014EE  0A03               	xorlw	3	; case 2
  9999   0014F0  B4D8               	btfsc	status,2,c
 10000   0014F2  EFEA  F008         	goto	l2218
 10001   0014F6  0A01               	xorlw	1	; case 3
 10002   0014F8  B4D8               	btfsc	status,2,c
 10003   0014FA  EF47  F009         	goto	l2219
 10004   0014FE  0A07               	xorlw	7	; case 4
 10005   001500  B4D8               	btfsc	status,2,c
 10006   001502  EFA4  F009         	goto	l2220
 10007   001506  0A01               	xorlw	1	; case 5
 10008   001508  B4D8               	btfsc	status,2,c
 10009   00150A  EF00  F00A         	goto	l2221
 10010   00150E  EF89  F00A         	goto	l13195
 10011   001512                     l13195:
 10012                           
 10013                           ;MCAL_layer/USART/hal_usart.c: 216:     SPBRGH = (uint8)(((uint32)(baudrate_Val)) >> 8);
 10014   001512  C151  F0D5         	movff	EUSART_BaudRateCalculation@baudrate_Val,___fltol@f1
 10015   001516  C152  F0D6         	movff	EUSART_BaudRateCalculation@baudrate_Val+1,___fltol@f1+1
 10016   00151A  C153  F0D7         	movff	EUSART_BaudRateCalculation@baudrate_Val+2,___fltol@f1+2
 10017   00151E  C154  F0D8         	movff	EUSART_BaudRateCalculation@baudrate_Val+3,___fltol@f1+3
 10018   001522  EC60  F017         	call	___fltol	;wreg free
 10019   001526  0100               	movlb	0	; () banked
 10020   001528  C0D6  F0D5         	movff	?___fltol+1,?___fltol
 10021   00152C  C0D7  F0D6         	movff	?___fltol+2,?___fltol+1
 10022   001530  C0D8  F0D7         	movff	?___fltol+3,?___fltol+2
 10023   001534  6BD8               	clrf	(?___fltol+3)& (0+255),b
 10024   001536  51D5               	movf	?___fltol& (0+255),w,b
 10025   001538  6EB0               	movwf	176,c	;volatile
 10026                           
 10027                           ;MCAL_layer/USART/hal_usart.c: 217:     SPBRG = (uint8)(((uint32)(baudrate_Val)));
 10028   00153A  C151  F0D5         	movff	EUSART_BaudRateCalculation@baudrate_Val,___fltol@f1
 10029   00153E  C152  F0D6         	movff	EUSART_BaudRateCalculation@baudrate_Val+1,___fltol@f1+1
 10030   001542  C153  F0D7         	movff	EUSART_BaudRateCalculation@baudrate_Val+2,___fltol@f1+2
 10031   001546  C154  F0D8         	movff	EUSART_BaudRateCalculation@baudrate_Val+3,___fltol@f1+3
 10032   00154A  EC60  F017         	call	___fltol	;wreg free
 10033   00154E  0100               	movlb	0	; () banked
 10034   001550  51D5               	movf	?___fltol& (0+255),w,b
 10035   001552  6EAF               	movwf	175,c	;volatile
 10036   001554                     
 10037                           ; BSR set to: 0
 10038   001554  0012               	return		;funcret
 10039   001556                     __end_of_EUSART_BaudRateCalculation:
 10040                           	callstack 0
 10041                           
 10042 ;; *************** function ___xxtofl *****************
 10043 ;; Defined at:
 10044 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
 10045 ;; Parameters:    Size  Location     Type
 10046 ;;  sign            1    wreg     unsigned char 
 10047 ;;  val             4    0[BANK0 ] long 
 10048 ;; Auto vars:     Size  Location     Type
 10049 ;;  sign            1    8[BANK0 ] unsigned char 
 10050 ;;  arg             4   10[BANK0 ] unsigned long 
 10051 ;;  exp             1    9[BANK0 ] unsigned char 
 10052 ;; Return value:  Size  Location     Type
 10053 ;;                  4    0[BANK0 ] unsigned char 
 10054 ;; Registers used:
 10055 ;;		wreg, status,2, status,0
 10056 ;; Tracked objects:
 10057 ;;		On entry : 0/0
 10058 ;;		On exit  : 0/0
 10059 ;;		Unchanged: 0/0
 10060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10061 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10062 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10063 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10064 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10065 ;;Total ram usage:       14 bytes
 10066 ;; Hardware stack levels used: 1
 10067 ;; Hardware stack levels required when called: 9
 10068 ;; This function calls:
 10069 ;;		Nothing
 10070 ;; This function is called by:
 10071 ;;		_EUSART_BaudRateCalculation
 10072 ;;		_I2C_Master_Mode_Configuration
 10073 ;;		_Servo_Set_Angle
 10074 ;; This function uses a non-reentrant model
 10075 ;;
 10076                           
 10077                           	psect	text27
 10078   002A4C                     __ptext27:
 10079                           	callstack 0
 10080   002A4C                     ___xxtofl:
 10081                           	callstack 18
 10082                           
 10083                           ; BSR set to: 0
 10084                           ;incstack = 0
 10085                           ;___xxtofl@sign stored from wreg
 10086   002A4C  0100               	movlb	0	; () banked
 10087   002A4E  6FDD               	movwf	___xxtofl@sign& (0+255),b
 10088   002A50  0100               	movlb	0	; () banked
 10089   002A52  51DD               	movf	___xxtofl@sign& (0+255),w,b
 10090   002A54  B4D8               	btfsc	status,2,c
 10091   002A56  EF2F  F015         	goto	u12021
 10092   002A5A  EF31  F015         	goto	u12020
 10093   002A5E                     u12021:
 10094   002A5E  EF53  F015         	goto	l3350
 10095   002A62                     u12020:
 10096   002A62                     
 10097                           ; BSR set to: 0
 10098   002A62  BFD8               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 10099   002A64  EF38  F015         	goto	u12030
 10100   002A68  EF36  F015         	goto	u12031
 10101   002A6C                     u12031:
 10102   002A6C  EF53  F015         	goto	l3350
 10103   002A70                     u12030:
 10104   002A70                     
 10105                           ; BSR set to: 0
 10106   002A70  C0D5  F0D9         	movff	___xxtofl@val,??___xxtofl
 10107   002A74  C0D6  F0DA         	movff	___xxtofl@val+1,??___xxtofl+1
 10108   002A78  C0D7  F0DB         	movff	___xxtofl@val+2,??___xxtofl+2
 10109   002A7C  C0D8  F0DC         	movff	___xxtofl@val+3,??___xxtofl+3
 10110   002A80  1FD9               	comf	??___xxtofl& (0+255),f,b
 10111   002A82  1FDA               	comf	(??___xxtofl+1)& (0+255),f,b
 10112   002A84  1FDB               	comf	(??___xxtofl+2)& (0+255),f,b
 10113   002A86  1FDC               	comf	(??___xxtofl+3)& (0+255),f,b
 10114   002A88  2BD9               	incf	??___xxtofl& (0+255),f,b
 10115   002A8A  0E00               	movlw	0
 10116   002A8C  23DA               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10117   002A8E  23DB               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10118   002A90  23DC               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10119   002A92  C0D9  F0DF         	movff	??___xxtofl,___xxtofl@arg
 10120   002A96  C0DA  F0E0         	movff	??___xxtofl+1,___xxtofl@arg+1
 10121   002A9A  C0DB  F0E1         	movff	??___xxtofl+2,___xxtofl@arg+2
 10122   002A9E  C0DC  F0E2         	movff	??___xxtofl+3,___xxtofl@arg+3
 10123   002AA2  EF5B  F015         	goto	l13005
 10124   002AA6                     l3350:
 10125                           
 10126                           ; BSR set to: 0
 10127   002AA6  C0D5  F0DF         	movff	___xxtofl@val,___xxtofl@arg
 10128   002AAA  C0D6  F0E0         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10129   002AAE  C0D7  F0E1         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10130   002AB2  C0D8  F0E2         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10131   002AB6                     l13005:
 10132                           
 10133                           ; BSR set to: 0
 10134   002AB6  51D5               	movf	___xxtofl@val& (0+255),w,b
 10135   002AB8  11D6               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10136   002ABA  11D7               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10137   002ABC  11D8               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10138   002ABE  A4D8               	btfss	status,2,c
 10139   002AC0  EF64  F015         	goto	u12041
 10140   002AC4  EF66  F015         	goto	u12040
 10141   002AC8                     u12041:
 10142   002AC8  EF70  F015         	goto	l13011
 10143   002ACC                     u12040:
 10144   002ACC                     
 10145                           ; BSR set to: 0
 10146   002ACC  0E00               	movlw	0
 10147   002ACE  6FD5               	movwf	?___xxtofl& (0+255),b
 10148   002AD0  0E00               	movlw	0
 10149   002AD2  6FD6               	movwf	(?___xxtofl+1)& (0+255),b
 10150   002AD4  0E00               	movlw	0
 10151   002AD6  6FD7               	movwf	(?___xxtofl+2)& (0+255),b
 10152   002AD8  0E00               	movlw	0
 10153   002ADA  6FD8               	movwf	(?___xxtofl+3)& (0+255),b
 10154   002ADC  EF01  F016         	goto	l3353
 10155   002AE0                     l13011:
 10156                           
 10157                           ; BSR set to: 0
 10158   002AE0  0E96               	movlw	150
 10159   002AE2  6FDE               	movwf	___xxtofl@exp& (0+255),b
 10160   002AE4  EF7A  F015         	goto	l13015
 10161   002AE8                     l13013:
 10162                           
 10163                           ; BSR set to: 0
 10164   002AE8  2BDE               	incf	___xxtofl@exp& (0+255),f,b
 10165   002AEA  90D8               	bcf	status,0,c
 10166   002AEC  33E2               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10167   002AEE  33E1               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10168   002AF0  33E0               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10169   002AF2  33DF               	rrcf	___xxtofl@arg& (0+255),f,b
 10170   002AF4                     l13015:
 10171                           
 10172                           ; BSR set to: 0
 10173   002AF4  0E00               	movlw	0
 10174   002AF6  15DF               	andwf	___xxtofl@arg& (0+255),w,b
 10175   002AF8  6FD9               	movwf	??___xxtofl& (0+255),b
 10176   002AFA  0E00               	movlw	0
 10177   002AFC  15E0               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10178   002AFE  6FDA               	movwf	(??___xxtofl+1)& (0+255),b
 10179   002B00  0E00               	movlw	0
 10180   002B02  15E1               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10181   002B04  6FDB               	movwf	(??___xxtofl+2)& (0+255),b
 10182   002B06  0EFE               	movlw	254
 10183   002B08  15E2               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10184   002B0A  6FDC               	movwf	(??___xxtofl+3)& (0+255),b
 10185   002B0C  51D9               	movf	??___xxtofl& (0+255),w,b
 10186   002B0E  11DA               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10187   002B10  11DB               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10188   002B12  11DC               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10189   002B14  A4D8               	btfss	status,2,c
 10190   002B16  EF8F  F015         	goto	u12051
 10191   002B1A  EF91  F015         	goto	u12050
 10192   002B1E                     u12051:
 10193   002B1E  EF74  F015         	goto	l13013
 10194   002B22                     u12050:
 10195   002B22  EF9F  F015         	goto	l3357
 10196   002B26                     l13017:
 10197                           
 10198                           ; BSR set to: 0
 10199   002B26  2BDE               	incf	___xxtofl@exp& (0+255),f,b
 10200   002B28                     
 10201                           ; BSR set to: 0
 10202   002B28  0E01               	movlw	1
 10203   002B2A  27DF               	addwf	___xxtofl@arg& (0+255),f,b
 10204   002B2C  0E00               	movlw	0
 10205   002B2E  23E0               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10206   002B30  23E1               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10207   002B32  23E2               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10208   002B34                     
 10209                           ; BSR set to: 0
 10210   002B34  90D8               	bcf	status,0,c
 10211   002B36  33E2               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10212   002B38  33E1               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10213   002B3A  33E0               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10214   002B3C  33DF               	rrcf	___xxtofl@arg& (0+255),f,b
 10215   002B3E                     l3357:
 10216                           
 10217                           ; BSR set to: 0
 10218   002B3E  0E00               	movlw	0
 10219   002B40  15DF               	andwf	___xxtofl@arg& (0+255),w,b
 10220   002B42  6FD9               	movwf	??___xxtofl& (0+255),b
 10221   002B44  0E00               	movlw	0
 10222   002B46  15E0               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10223   002B48  6FDA               	movwf	(??___xxtofl+1)& (0+255),b
 10224   002B4A  0E00               	movlw	0
 10225   002B4C  15E1               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10226   002B4E  6FDB               	movwf	(??___xxtofl+2)& (0+255),b
 10227   002B50  0EFF               	movlw	255
 10228   002B52  15E2               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10229   002B54  6FDC               	movwf	(??___xxtofl+3)& (0+255),b
 10230   002B56  51D9               	movf	??___xxtofl& (0+255),w,b
 10231   002B58  11DA               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10232   002B5A  11DB               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10233   002B5C  11DC               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10234   002B5E  A4D8               	btfss	status,2,c
 10235   002B60  EFB4  F015         	goto	u12061
 10236   002B64  EFB6  F015         	goto	u12060
 10237   002B68                     u12061:
 10238   002B68  EF93  F015         	goto	l13017
 10239   002B6C                     u12060:
 10240   002B6C  EFBE  F015         	goto	l13025
 10241   002B70                     l13023:
 10242                           
 10243                           ; BSR set to: 0
 10244   002B70  07DE               	decf	___xxtofl@exp& (0+255),f,b
 10245   002B72  90D8               	bcf	status,0,c
 10246   002B74  37DF               	rlcf	___xxtofl@arg& (0+255),f,b
 10247   002B76  37E0               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10248   002B78  37E1               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10249   002B7A  37E2               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10250   002B7C                     l13025:
 10251                           
 10252                           ; BSR set to: 0
 10253   002B7C  BFE1               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10254   002B7E  EFC3  F015         	goto	u12071
 10255   002B82  EFC5  F015         	goto	u12070
 10256   002B86                     u12071:
 10257   002B86  EFCD  F015         	goto	l3364
 10258   002B8A                     u12070:
 10259   002B8A                     
 10260                           ; BSR set to: 0
 10261   002B8A  0E02               	movlw	2
 10262   002B8C  61DE               	cpfslt	___xxtofl@exp& (0+255),b
 10263   002B8E  EFCB  F015         	goto	u12081
 10264   002B92  EFCD  F015         	goto	u12080
 10265   002B96                     u12081:
 10266   002B96  EFB8  F015         	goto	l13023
 10267   002B9A                     u12080:
 10268   002B9A                     l3364:
 10269                           
 10270                           ; BSR set to: 0
 10271   002B9A  B1DE               	btfsc	___xxtofl@exp& (0+255),0,b
 10272   002B9C  EFD2  F015         	goto	u12091
 10273   002BA0  EFD4  F015         	goto	u12090
 10274   002BA4                     u12091:
 10275   002BA4  EFD5  F015         	goto	l13031
 10276   002BA8                     u12090:
 10277   002BA8                     
 10278                           ; BSR set to: 0
 10279   002BA8  9FE1               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 10280   002BAA                     l13031:
 10281                           
 10282                           ; BSR set to: 0
 10283   002BAA  90D8               	bcf	status,0,c
 10284   002BAC  33DE               	rrcf	___xxtofl@exp& (0+255),f,b
 10285   002BAE                     
 10286                           ; BSR set to: 0
 10287   002BAE  C0DE  F0D9         	movff	___xxtofl@exp,??___xxtofl
 10288   002BB2  6BDA               	clrf	(??___xxtofl+1)& (0+255),b
 10289   002BB4  6BDB               	clrf	(??___xxtofl+2)& (0+255),b
 10290   002BB6  6BDC               	clrf	(??___xxtofl+3)& (0+255),b
 10291   002BB8  C0D9  F0DC         	movff	??___xxtofl,??___xxtofl+3
 10292   002BBC  6BDB               	clrf	(??___xxtofl+2)& (0+255),b
 10293   002BBE  6BDA               	clrf	(??___xxtofl+1)& (0+255),b
 10294   002BC0  6BD9               	clrf	??___xxtofl& (0+255),b
 10295   002BC2  51D9               	movf	??___xxtofl& (0+255),w,b
 10296   002BC4  13DF               	iorwf	___xxtofl@arg& (0+255),f,b
 10297   002BC6  51DA               	movf	(??___xxtofl+1)& (0+255),w,b
 10298   002BC8  13E0               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10299   002BCA  51DB               	movf	(??___xxtofl+2)& (0+255),w,b
 10300   002BCC  13E1               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10301   002BCE  51DC               	movf	(??___xxtofl+3)& (0+255),w,b
 10302   002BD0  13E2               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10303   002BD2                     
 10304                           ; BSR set to: 0
 10305   002BD2  51DD               	movf	___xxtofl@sign& (0+255),w,b
 10306   002BD4  B4D8               	btfsc	status,2,c
 10307   002BD6  EFEF  F015         	goto	u12101
 10308   002BDA  EFF1  F015         	goto	u12100
 10309   002BDE                     u12101:
 10310   002BDE  EFF9  F015         	goto	l13041
 10311   002BE2                     u12100:
 10312   002BE2                     
 10313                           ; BSR set to: 0
 10314   002BE2  BFD8               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 10315   002BE4  EFF8  F015         	goto	u12110
 10316   002BE8  EFF6  F015         	goto	u12111
 10317   002BEC                     u12111:
 10318   002BEC  EFF9  F015         	goto	l13041
 10319   002BF0                     u12110:
 10320   002BF0                     
 10321                           ; BSR set to: 0
 10322   002BF0  8FE2               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10323   002BF2                     l13041:
 10324                           
 10325                           ; BSR set to: 0
 10326   002BF2  C0DF  F0D5         	movff	___xxtofl@arg,?___xxtofl
 10327   002BF6  C0E0  F0D6         	movff	___xxtofl@arg+1,?___xxtofl+1
 10328   002BFA  C0E1  F0D7         	movff	___xxtofl@arg+2,?___xxtofl+2
 10329   002BFE  C0E2  F0D8         	movff	___xxtofl@arg+3,?___xxtofl+3
 10330   002C02                     l3353:
 10331                           
 10332                           ; BSR set to: 0
 10333   002C02  0012               	return		;funcret
 10334   002C04                     __end_of___xxtofl:
 10335                           	callstack 0
 10336                           
 10337 ;; *************** function ___fltol *****************
 10338 ;; Defined at:
 10339 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
 10340 ;; Parameters:    Size  Location     Type
 10341 ;;  f1              4    0[BANK0 ] unsigned char 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;  exp1            1    9[BANK0 ] unsigned char 
 10344 ;;  sign1           1    8[BANK0 ] unsigned char 
 10345 ;; Return value:  Size  Location     Type
 10346 ;;                  4    0[BANK0 ] long 
 10347 ;; Registers used:
 10348 ;;		wreg, status,2, status,0
 10349 ;; Tracked objects:
 10350 ;;		On entry : 0/0
 10351 ;;		On exit  : 0/0
 10352 ;;		Unchanged: 0/0
 10353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10354 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10355 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10356 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10357 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10358 ;;Total ram usage:       10 bytes
 10359 ;; Hardware stack levels used: 1
 10360 ;; Hardware stack levels required when called: 9
 10361 ;; This function calls:
 10362 ;;		Nothing
 10363 ;; This function is called by:
 10364 ;;		_EUSART_BaudRateCalculation
 10365 ;;		_I2C_Master_Mode_Configuration
 10366 ;;		_Servo_Set_Angle
 10367 ;; This function uses a non-reentrant model
 10368 ;;
 10369                           
 10370                           	psect	text28
 10371   002EC0                     __ptext28:
 10372                           	callstack 0
 10373   002EC0                     ___fltol:
 10374                           	callstack 18
 10375   002EC0  0100               	movlb	0	; () banked
 10376   002EC2  35D7               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10377   002EC4  35D8               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10378   002EC6  6FDE               	movwf	___fltol@exp1& (0+255),b
 10379   002EC8  51DE               	movf	___fltol@exp1& (0+255),w,b
 10380   002ECA  A4D8               	btfss	status,2,c
 10381   002ECC  EF6A  F017         	goto	u11951
 10382   002ED0  EF6C  F017         	goto	u11950
 10383   002ED4                     u11951:
 10384   002ED4  EF76  F017         	goto	l12961
 10385   002ED8                     u11950:
 10386   002ED8                     l12957:
 10387                           
 10388                           ; BSR set to: 0
 10389   002ED8  0E00               	movlw	0
 10390   002EDA  6FD5               	movwf	?___fltol& (0+255),b
 10391   002EDC  0E00               	movlw	0
 10392   002EDE  6FD6               	movwf	(?___fltol+1)& (0+255),b
 10393   002EE0  0E00               	movlw	0
 10394   002EE2  6FD7               	movwf	(?___fltol+2)& (0+255),b
 10395   002EE4  0E00               	movlw	0
 10396   002EE6  6FD8               	movwf	(?___fltol+3)& (0+255),b
 10397   002EE8  EFE3  F017         	goto	l2992
 10398   002EEC                     l12961:
 10399                           
 10400                           ; BSR set to: 0
 10401   002EEC  C0D5  F0D9         	movff	___fltol@f1,??___fltol
 10402   002EF0  C0D6  F0DA         	movff	___fltol@f1+1,??___fltol+1
 10403   002EF4  C0D7  F0DB         	movff	___fltol@f1+2,??___fltol+2
 10404   002EF8  C0D8  F0DC         	movff	___fltol@f1+3,??___fltol+3
 10405   002EFC  0E20               	movlw	32
 10406   002EFE  EF86  F017         	goto	u11960
 10407   002F02                     u11965:
 10408   002F02  90D8               	bcf	status,0,c
 10409   002F04  33DC               	rrcf	(??___fltol+3)& (0+255),f,b
 10410   002F06  33DB               	rrcf	(??___fltol+2)& (0+255),f,b
 10411   002F08  33DA               	rrcf	(??___fltol+1)& (0+255),f,b
 10412   002F0A  33D9               	rrcf	??___fltol& (0+255),f,b
 10413   002F0C                     u11960:
 10414   002F0C  2EE8               	decfsz	wreg,f,c
 10415   002F0E  EF81  F017         	goto	u11965
 10416   002F12  51D9               	movf	??___fltol& (0+255),w,b
 10417   002F14  6FDD               	movwf	___fltol@sign1& (0+255),b
 10418   002F16                     
 10419                           ; BSR set to: 0
 10420   002F16  8FD7               	bsf	(___fltol@f1+2)& (0+255),7,b
 10421   002F18                     
 10422                           ; BSR set to: 0
 10423   002F18  0EFF               	movlw	255
 10424   002F1A  17D5               	andwf	___fltol@f1& (0+255),f,b
 10425   002F1C  0EFF               	movlw	255
 10426   002F1E  17D6               	andwf	(___fltol@f1+1)& (0+255),f,b
 10427   002F20  0EFF               	movlw	255
 10428   002F22  17D7               	andwf	(___fltol@f1+2)& (0+255),f,b
 10429   002F24  0E00               	movlw	0
 10430   002F26  17D8               	andwf	(___fltol@f1+3)& (0+255),f,b
 10431   002F28                     
 10432                           ; BSR set to: 0
 10433   002F28  0E96               	movlw	150
 10434   002F2A  5FDE               	subwf	___fltol@exp1& (0+255),f,b
 10435   002F2C                     
 10436                           ; BSR set to: 0
 10437   002F2C  BFDE               	btfsc	___fltol@exp1& (0+255),7,b
 10438   002F2E  EF9D  F017         	goto	u11970
 10439   002F32  EF9B  F017         	goto	u11971
 10440   002F36                     u11971:
 10441   002F36  EFB3  F017         	goto	l12981
 10442   002F3A                     u11970:
 10443   002F3A                     
 10444                           ; BSR set to: 0
 10445   002F3A  51DE               	movf	___fltol@exp1& (0+255),w,b
 10446   002F3C  0A80               	xorlw	128
 10447   002F3E  0F97               	addlw	151
 10448   002F40  B0D8               	btfsc	status,0,c
 10449   002F42  EFA5  F017         	goto	u11981
 10450   002F46  EFA7  F017         	goto	u11980
 10451   002F4A                     u11981:
 10452   002F4A  EFA9  F017         	goto	l12977
 10453   002F4E                     u11980:
 10454   002F4E  EF6C  F017         	goto	l12957
 10455   002F52                     l12977:
 10456                           
 10457                           ; BSR set to: 0
 10458   002F52  90D8               	bcf	status,0,c
 10459   002F54  33D8               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10460   002F56  33D7               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10461   002F58  33D6               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10462   002F5A  33D5               	rrcf	___fltol@f1& (0+255),f,b
 10463   002F5C                     
 10464                           ; BSR set to: 0
 10465   002F5C  3FDE               	incfsz	___fltol@exp1& (0+255),f,b
 10466   002F5E  EFA9  F017         	goto	l12977
 10467   002F62  EFCB  F017         	goto	l12991
 10468   002F66                     l12981:
 10469                           
 10470                           ; BSR set to: 0
 10471   002F66  0E1F               	movlw	31
 10472   002F68  65DE               	cpfsgt	___fltol@exp1& (0+255),b
 10473   002F6A  EFB9  F017         	goto	u11991
 10474   002F6E  EFBB  F017         	goto	u11990
 10475   002F72                     u11991:
 10476   002F72  EFC3  F017         	goto	l12989
 10477   002F76                     u11990:
 10478   002F76  EF6C  F017         	goto	l12957
 10479   002F7A                     l12987:
 10480                           
 10481                           ; BSR set to: 0
 10482   002F7A  90D8               	bcf	status,0,c
 10483   002F7C  37D5               	rlcf	___fltol@f1& (0+255),f,b
 10484   002F7E  37D6               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10485   002F80  37D7               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10486   002F82  37D8               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10487   002F84  07DE               	decf	___fltol@exp1& (0+255),f,b
 10488   002F86                     l12989:
 10489                           
 10490                           ; BSR set to: 0
 10491   002F86  51DE               	movf	___fltol@exp1& (0+255),w,b
 10492   002F88  A4D8               	btfss	status,2,c
 10493   002F8A  EFC9  F017         	goto	u12001
 10494   002F8E  EFCB  F017         	goto	u12000
 10495   002F92                     u12001:
 10496   002F92  EFBD  F017         	goto	l12987
 10497   002F96                     u12000:
 10498   002F96                     l12991:
 10499                           
 10500                           ; BSR set to: 0
 10501   002F96  51DD               	movf	___fltol@sign1& (0+255),w,b
 10502   002F98  B4D8               	btfsc	status,2,c
 10503   002F9A  EFD1  F017         	goto	u12011
 10504   002F9E  EFD3  F017         	goto	u12010
 10505   002FA2                     u12011:
 10506   002FA2  EFDB  F017         	goto	l12995
 10507   002FA6                     u12010:
 10508   002FA6                     
 10509                           ; BSR set to: 0
 10510   002FA6  1FD8               	comf	(___fltol@f1+3)& (0+255),f,b
 10511   002FA8  1FD7               	comf	(___fltol@f1+2)& (0+255),f,b
 10512   002FAA  1FD6               	comf	(___fltol@f1+1)& (0+255),f,b
 10513   002FAC  6DD5               	negf	___fltol@f1& (0+255),b
 10514   002FAE  0E00               	movlw	0
 10515   002FB0  23D6               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10516   002FB2  23D7               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10517   002FB4  23D8               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10518   002FB6                     l12995:
 10519                           
 10520                           ; BSR set to: 0
 10521   002FB6  C0D5  F0D5         	movff	___fltol@f1,?___fltol
 10522   002FBA  C0D6  F0D6         	movff	___fltol@f1+1,?___fltol+1
 10523   002FBE  C0D7  F0D7         	movff	___fltol@f1+2,?___fltol+2
 10524   002FC2  C0D8  F0D8         	movff	___fltol@f1+3,?___fltol+3
 10525   002FC6                     l2992:
 10526                           
 10527                           ; BSR set to: 0
 10528   002FC6  0012               	return		;funcret
 10529   002FC8                     __end_of___fltol:
 10530                           	callstack 0
 10531                           
 10532 ;; *************** function ___fldiv *****************
 10533 ;; Defined at:
 10534 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;  b               4   14[BANK0 ] long 
 10537 ;;  a               4   18[BANK0 ] long 
 10538 ;; Auto vars:     Size  Location     Type
 10539 ;;  grs             4   33[BANK0 ] unsigned long 
 10540 ;;  rem             4   26[BANK0 ] unsigned long 
 10541 ;;  new_exp         2   31[BANK0 ] short 
 10542 ;;  aexp            1   38[BANK0 ] unsigned char 
 10543 ;;  bexp            1   37[BANK0 ] unsigned char 
 10544 ;;  sign            1   30[BANK0 ] unsigned char 
 10545 ;; Return value:  Size  Location     Type
 10546 ;;                  4   14[BANK0 ] unsigned char 
 10547 ;; Registers used:
 10548 ;;		wreg, status,2, status,0
 10549 ;; Tracked objects:
 10550 ;;		On entry : 0/0
 10551 ;;		On exit  : 0/0
 10552 ;;		Unchanged: 0/0
 10553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10554 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10555 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10556 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10557 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10558 ;;Total ram usage:       25 bytes
 10559 ;; Hardware stack levels used: 1
 10560 ;; Hardware stack levels required when called: 9
 10561 ;; This function calls:
 10562 ;;		Nothing
 10563 ;; This function is called by:
 10564 ;;		_EUSART_BaudRateCalculation
 10565 ;;		_I2C_Master_Mode_Configuration
 10566 ;;		_Servo_Set_Angle
 10567 ;; This function uses a non-reentrant model
 10568 ;;
 10569                           
 10570                           	psect	text29
 10571   001E70                     __ptext29:
 10572                           	callstack 0
 10573   001E70                     ___fldiv:
 10574                           	callstack 18
 10575   001E70  0100               	movlb	0	; () banked
 10576   001E72  51E6               	movf	(___fldiv@b+3)& (0+255),w,b
 10577   001E74  0B80               	andlw	128
 10578   001E76  6FF3               	movwf	___fldiv@sign& (0+255),b
 10579   001E78  51E6               	movf	(___fldiv@b+3)& (0+255),w,b
 10580   001E7A  25E6               	addwf	(___fldiv@b+3)& (0+255),w,b
 10581   001E7C  6FFA               	movwf	___fldiv@bexp& (0+255),b
 10582   001E7E                     
 10583                           ; BSR set to: 0
 10584   001E7E  AFE5               	btfss	(___fldiv@b+2)& (0+255),7,b
 10585   001E80  EF44  F00F         	goto	u11721
 10586   001E84  EF46  F00F         	goto	u11720
 10587   001E88                     u11721:
 10588   001E88  EF47  F00F         	goto	l12825
 10589   001E8C                     u11720:
 10590   001E8C                     
 10591                           ; BSR set to: 0
 10592   001E8C  81FA               	bsf	___fldiv@bexp& (0+255),0,b
 10593   001E8E                     l12825:
 10594                           
 10595                           ; BSR set to: 0
 10596   001E8E  51FA               	movf	___fldiv@bexp& (0+255),w,b
 10597   001E90  B4D8               	btfsc	status,2,c
 10598   001E92  EF4D  F00F         	goto	u11731
 10599   001E96  EF4F  F00F         	goto	u11730
 10600   001E9A                     u11731:
 10601   001E9A  EF63  F00F         	goto	l12835
 10602   001E9E                     u11730:
 10603   001E9E                     
 10604                           ; BSR set to: 0
 10605   001E9E  29FA               	incf	___fldiv@bexp& (0+255),w,b
 10606   001EA0  A4D8               	btfss	status,2,c
 10607   001EA2  EF55  F00F         	goto	u11741
 10608   001EA6  EF57  F00F         	goto	u11740
 10609   001EAA                     u11741:
 10610   001EAA  EF5F  F00F         	goto	l12831
 10611   001EAE                     u11740:
 10612   001EAE                     
 10613                           ; BSR set to: 0
 10614   001EAE  0E00               	movlw	0
 10615   001EB0  6FE3               	movwf	___fldiv@b& (0+255),b
 10616   001EB2  0E00               	movlw	0
 10617   001EB4  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 10618   001EB6  0E00               	movlw	0
 10619   001EB8  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 10620   001EBA  0E00               	movlw	0
 10621   001EBC  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 10622   001EBE                     l12831:
 10623                           
 10624                           ; BSR set to: 0
 10625   001EBE  8FE5               	bsf	(___fldiv@b+2)& (0+255),7,b
 10626   001EC0                     
 10627                           ; BSR set to: 0
 10628   001EC0  6BE6               	clrf	(___fldiv@b+3)& (0+255),b
 10629   001EC2  EF6B  F00F         	goto	l12837
 10630   001EC6                     l12835:
 10631                           
 10632                           ; BSR set to: 0
 10633   001EC6  0E00               	movlw	0
 10634   001EC8  6FE3               	movwf	___fldiv@b& (0+255),b
 10635   001ECA  0E00               	movlw	0
 10636   001ECC  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 10637   001ECE  0E00               	movlw	0
 10638   001ED0  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 10639   001ED2  0E00               	movlw	0
 10640   001ED4  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 10641   001ED6                     l12837:
 10642                           
 10643                           ; BSR set to: 0
 10644   001ED6  51EA               	movf	(___fldiv@a+3)& (0+255),w,b
 10645   001ED8  0B80               	andlw	128
 10646   001EDA  1BF3               	xorwf	___fldiv@sign& (0+255),f,b
 10647   001EDC                     
 10648                           ; BSR set to: 0
 10649   001EDC  51EA               	movf	(___fldiv@a+3)& (0+255),w,b
 10650   001EDE  25EA               	addwf	(___fldiv@a+3)& (0+255),w,b
 10651   001EE0  6FFB               	movwf	___fldiv@aexp& (0+255),b
 10652   001EE2                     
 10653                           ; BSR set to: 0
 10654   001EE2  AFE9               	btfss	(___fldiv@a+2)& (0+255),7,b
 10655   001EE4  EF76  F00F         	goto	u11751
 10656   001EE8  EF78  F00F         	goto	u11750
 10657   001EEC                     u11751:
 10658   001EEC  EF79  F00F         	goto	l12845
 10659   001EF0                     u11750:
 10660   001EF0                     
 10661                           ; BSR set to: 0
 10662   001EF0  81FB               	bsf	___fldiv@aexp& (0+255),0,b
 10663   001EF2                     l12845:
 10664                           
 10665                           ; BSR set to: 0
 10666   001EF2  51FB               	movf	___fldiv@aexp& (0+255),w,b
 10667   001EF4  B4D8               	btfsc	status,2,c
 10668   001EF6  EF7F  F00F         	goto	u11761
 10669   001EFA  EF81  F00F         	goto	u11760
 10670   001EFE                     u11761:
 10671   001EFE  EF95  F00F         	goto	l12855
 10672   001F02                     u11760:
 10673   001F02                     
 10674                           ; BSR set to: 0
 10675   001F02  29FB               	incf	___fldiv@aexp& (0+255),w,b
 10676   001F04  A4D8               	btfss	status,2,c
 10677   001F06  EF87  F00F         	goto	u11771
 10678   001F0A  EF89  F00F         	goto	u11770
 10679   001F0E                     u11771:
 10680   001F0E  EF91  F00F         	goto	l12851
 10681   001F12                     u11770:
 10682   001F12                     
 10683                           ; BSR set to: 0
 10684   001F12  0E00               	movlw	0
 10685   001F14  6FE7               	movwf	___fldiv@a& (0+255),b
 10686   001F16  0E00               	movlw	0
 10687   001F18  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
 10688   001F1A  0E00               	movlw	0
 10689   001F1C  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
 10690   001F1E  0E00               	movlw	0
 10691   001F20  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
 10692   001F22                     l12851:
 10693                           
 10694                           ; BSR set to: 0
 10695   001F22  8FE9               	bsf	(___fldiv@a+2)& (0+255),7,b
 10696   001F24                     
 10697                           ; BSR set to: 0
 10698   001F24  6BEA               	clrf	(___fldiv@a+3)& (0+255),b
 10699   001F26  EF9D  F00F         	goto	l12857
 10700   001F2A                     l12855:
 10701                           
 10702                           ; BSR set to: 0
 10703   001F2A  0E00               	movlw	0
 10704   001F2C  6FE7               	movwf	___fldiv@a& (0+255),b
 10705   001F2E  0E00               	movlw	0
 10706   001F30  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
 10707   001F32  0E00               	movlw	0
 10708   001F34  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
 10709   001F36  0E00               	movlw	0
 10710   001F38  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
 10711   001F3A                     l12857:
 10712                           
 10713                           ; BSR set to: 0
 10714   001F3A  51E7               	movf	___fldiv@a& (0+255),w,b
 10715   001F3C  11E8               	iorwf	(___fldiv@a+1)& (0+255),w,b
 10716   001F3E  11E9               	iorwf	(___fldiv@a+2)& (0+255),w,b
 10717   001F40  11EA               	iorwf	(___fldiv@a+3)& (0+255),w,b
 10718   001F42  A4D8               	btfss	status,2,c
 10719   001F44  EFA6  F00F         	goto	u11781
 10720   001F48  EFA8  F00F         	goto	u11780
 10721   001F4C                     u11781:
 10722   001F4C  EFC0  F00F         	goto	l12869
 10723   001F50                     u11780:
 10724   001F50                     
 10725                           ; BSR set to: 0
 10726   001F50  0E00               	movlw	0
 10727   001F52  6FE3               	movwf	___fldiv@b& (0+255),b
 10728   001F54  0E00               	movlw	0
 10729   001F56  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 10730   001F58  0E00               	movlw	0
 10731   001F5A  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 10732   001F5C  0E00               	movlw	0
 10733   001F5E  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 10734   001F60                     
 10735                           ; BSR set to: 0
 10736   001F60  0E80               	movlw	128
 10737   001F62  13E5               	iorwf	(___fldiv@b+2)& (0+255),f,b
 10738   001F64  0E7F               	movlw	127
 10739   001F66  13E6               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10740   001F68                     l12863:
 10741                           
 10742                           ; BSR set to: 0
 10743   001F68  51F3               	movf	___fldiv@sign& (0+255),w,b
 10744   001F6A  13E6               	iorwf	(___fldiv@b+3)& (0+255),f,b
 10745   001F6C                     
 10746                           ; BSR set to: 0
 10747   001F6C  C0E3  F0E3         	movff	___fldiv@b,?___fldiv
 10748   001F70  C0E4  F0E4         	movff	___fldiv@b+1,?___fldiv+1
 10749   001F74  C0E5  F0E5         	movff	___fldiv@b+2,?___fldiv+2
 10750   001F78  C0E6  F0E6         	movff	___fldiv@b+3,?___fldiv+3
 10751   001F7C  EF00  F011         	goto	l3277
 10752   001F80                     l12869:
 10753                           
 10754                           ; BSR set to: 0
 10755   001F80  51FA               	movf	___fldiv@bexp& (0+255),w,b
 10756   001F82  A4D8               	btfss	status,2,c
 10757   001F84  EFC6  F00F         	goto	u11791
 10758   001F88  EFC8  F00F         	goto	u11790
 10759   001F8C                     u11791:
 10760   001F8C  EFD2  F00F         	goto	l12877
 10761   001F90                     u11790:
 10762   001F90                     
 10763                           ; BSR set to: 0
 10764   001F90  0E00               	movlw	0
 10765   001F92  6FE3               	movwf	?___fldiv& (0+255),b
 10766   001F94  0E00               	movlw	0
 10767   001F96  6FE4               	movwf	(?___fldiv+1)& (0+255),b
 10768   001F98  0E00               	movlw	0
 10769   001F9A  6FE5               	movwf	(?___fldiv+2)& (0+255),b
 10770   001F9C  0E00               	movlw	0
 10771   001F9E  6FE6               	movwf	(?___fldiv+3)& (0+255),b
 10772   001FA0  EF00  F011         	goto	l3277
 10773   001FA4                     l12877:
 10774                           
 10775                           ; BSR set to: 0
 10776   001FA4  51FB               	movf	___fldiv@aexp& (0+255),w,b
 10777   001FA6  C0FA  F0EB         	movff	___fldiv@bexp,??___fldiv
 10778   001FAA  6BEC               	clrf	(??___fldiv+1)& (0+255),b
 10779   001FAC  5FEB               	subwf	??___fldiv& (0+255),f,b
 10780   001FAE  0E00               	movlw	0
 10781   001FB0  5BEC               	subwfb	(??___fldiv+1)& (0+255),f,b
 10782   001FB2  0E7F               	movlw	127
 10783   001FB4  25EB               	addwf	??___fldiv& (0+255),w,b
 10784   001FB6  6FF4               	movwf	___fldiv@new_exp& (0+255),b
 10785   001FB8  0E00               	movlw	0
 10786   001FBA  21EC               	addwfc	(??___fldiv+1)& (0+255),w,b
 10787   001FBC  6FF5               	movwf	(___fldiv@new_exp+1)& (0+255),b
 10788   001FBE                     
 10789                           ; BSR set to: 0
 10790   001FBE  C0E3  F0EF         	movff	___fldiv@b,___fldiv@rem
 10791   001FC2  C0E4  F0F0         	movff	___fldiv@b+1,___fldiv@rem+1
 10792   001FC6  C0E5  F0F1         	movff	___fldiv@b+2,___fldiv@rem+2
 10793   001FCA  C0E6  F0F2         	movff	___fldiv@b+3,___fldiv@rem+3
 10794   001FCE                     
 10795                           ; BSR set to: 0
 10796   001FCE  0E00               	movlw	0
 10797   001FD0  6FE3               	movwf	___fldiv@b& (0+255),b
 10798   001FD2  0E00               	movlw	0
 10799   001FD4  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 10800   001FD6  0E00               	movlw	0
 10801   001FD8  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 10802   001FDA  0E00               	movlw	0
 10803   001FDC  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 10804   001FDE                     
 10805                           ; BSR set to: 0
 10806   001FDE  0E00               	movlw	0
 10807   001FE0  6FF6               	movwf	___fldiv@grs& (0+255),b
 10808   001FE2  0E00               	movlw	0
 10809   001FE4  6FF7               	movwf	(___fldiv@grs+1)& (0+255),b
 10810   001FE6  0E00               	movlw	0
 10811   001FE8  6FF8               	movwf	(___fldiv@grs+2)& (0+255),b
 10812   001FEA  0E00               	movlw	0
 10813   001FEC  6FF9               	movwf	(___fldiv@grs+3)& (0+255),b
 10814   001FEE                     
 10815                           ; BSR set to: 0
 10816   001FEE  6BFB               	clrf	___fldiv@aexp& (0+255),b
 10817   001FF0  EF32  F010         	goto	l3279
 10818   001FF4                     l12887:
 10819                           
 10820                           ; BSR set to: 0
 10821   001FF4  51FB               	movf	___fldiv@aexp& (0+255),w,b
 10822   001FF6  B4D8               	btfsc	status,2,c
 10823   001FF8  EF00  F010         	goto	u11801
 10824   001FFC  EF02  F010         	goto	u11800
 10825   002000                     u11801:
 10826   002000  EF19  F010         	goto	l12895
 10827   002004                     u11800:
 10828   002004                     
 10829                           ; BSR set to: 0
 10830   002004  90D8               	bcf	status,0,c
 10831   002006  37EF               	rlcf	___fldiv@rem& (0+255),f,b
 10832   002008  37F0               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 10833   00200A  37F1               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 10834   00200C  37F2               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 10835   00200E  90D8               	bcf	status,0,c
 10836   002010  37E3               	rlcf	___fldiv@b& (0+255),f,b
 10837   002012  37E4               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10838   002014  37E5               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10839   002016  37E6               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10840   002018                     
 10841                           ; BSR set to: 0
 10842   002018  AFF9               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10843   00201A  EF11  F010         	goto	u11811
 10844   00201E  EF13  F010         	goto	u11810
 10845   002022                     u11811:
 10846   002022  EF14  F010         	goto	l3282
 10847   002026                     u11810:
 10848   002026                     
 10849                           ; BSR set to: 0
 10850   002026  81E3               	bsf	___fldiv@b& (0+255),0,b
 10851   002028                     l3282:
 10852                           
 10853                           ; BSR set to: 0
 10854   002028  90D8               	bcf	status,0,c
 10855   00202A  37F6               	rlcf	___fldiv@grs& (0+255),f,b
 10856   00202C  37F7               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10857   00202E  37F8               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10858   002030  37F9               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10859   002032                     l12895:
 10860                           
 10861                           ; BSR set to: 0
 10862   002032  51E7               	movf	___fldiv@a& (0+255),w,b
 10863   002034  5DEF               	subwf	___fldiv@rem& (0+255),w,b
 10864   002036  51E8               	movf	(___fldiv@a+1)& (0+255),w,b
 10865   002038  59F0               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 10866   00203A  51E9               	movf	(___fldiv@a+2)& (0+255),w,b
 10867   00203C  59F1               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 10868   00203E  51EA               	movf	(___fldiv@a+3)& (0+255),w,b
 10869   002040  59F2               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 10870   002042  A0D8               	btfss	status,0,c
 10871   002044  EF26  F010         	goto	u11821
 10872   002048  EF28  F010         	goto	u11820
 10873   00204C                     u11821:
 10874   00204C  EF31  F010         	goto	l12901
 10875   002050                     u11820:
 10876   002050                     
 10877                           ; BSR set to: 0
 10878   002050  8DF9               	bsf	(___fldiv@grs+3)& (0+255),6,b
 10879   002052                     
 10880                           ; BSR set to: 0
 10881   002052  51E7               	movf	___fldiv@a& (0+255),w,b
 10882   002054  5FEF               	subwf	___fldiv@rem& (0+255),f,b
 10883   002056  51E8               	movf	(___fldiv@a+1)& (0+255),w,b
 10884   002058  5BF0               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 10885   00205A  51E9               	movf	(___fldiv@a+2)& (0+255),w,b
 10886   00205C  5BF1               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 10887   00205E  51EA               	movf	(___fldiv@a+3)& (0+255),w,b
 10888   002060  5BF2               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 10889   002062                     l12901:
 10890                           
 10891                           ; BSR set to: 0
 10892   002062  2BFB               	incf	___fldiv@aexp& (0+255),f,b
 10893   002064                     l3279:
 10894                           
 10895                           ; BSR set to: 0
 10896   002064  0E19               	movlw	25
 10897   002066  65FB               	cpfsgt	___fldiv@aexp& (0+255),b
 10898   002068  EF38  F010         	goto	u11831
 10899   00206C  EF3A  F010         	goto	u11830
 10900   002070                     u11831:
 10901   002070  EFFA  F00F         	goto	l12887
 10902   002074                     u11830:
 10903   002074                     
 10904                           ; BSR set to: 0
 10905   002074  51EF               	movf	___fldiv@rem& (0+255),w,b
 10906   002076  11F0               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 10907   002078  11F1               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 10908   00207A  11F2               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 10909   00207C  B4D8               	btfsc	status,2,c
 10910   00207E  EF43  F010         	goto	u11841
 10911   002082  EF45  F010         	goto	u11840
 10912   002086                     u11841:
 10913   002086  EF5D  F010         	goto	l12913
 10914   00208A                     u11840:
 10915   00208A                     
 10916                           ; BSR set to: 0
 10917   00208A  81F6               	bsf	___fldiv@grs& (0+255),0,b
 10918   00208C  EF5D  F010         	goto	l12913
 10919   002090                     l12907:
 10920                           
 10921                           ; BSR set to: 0
 10922   002090  90D8               	bcf	status,0,c
 10923   002092  37E3               	rlcf	___fldiv@b& (0+255),f,b
 10924   002094  37E4               	rlcf	(___fldiv@b+1)& (0+255),f,b
 10925   002096  37E5               	rlcf	(___fldiv@b+2)& (0+255),f,b
 10926   002098  37E6               	rlcf	(___fldiv@b+3)& (0+255),f,b
 10927   00209A                     
 10928                           ; BSR set to: 0
 10929   00209A  AFF9               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10930   00209C  EF52  F010         	goto	u11851
 10931   0020A0  EF54  F010         	goto	u11850
 10932   0020A4                     u11851:
 10933   0020A4  EF55  F010         	goto	l3288
 10934   0020A8                     u11850:
 10935   0020A8                     
 10936                           ; BSR set to: 0
 10937   0020A8  81E3               	bsf	___fldiv@b& (0+255),0,b
 10938   0020AA                     l3288:
 10939                           
 10940                           ; BSR set to: 0
 10941   0020AA  90D8               	bcf	status,0,c
 10942   0020AC  37F6               	rlcf	___fldiv@grs& (0+255),f,b
 10943   0020AE  37F7               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 10944   0020B0  37F8               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 10945   0020B2  37F9               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 10946   0020B4  07F4               	decf	___fldiv@new_exp& (0+255),f,b
 10947   0020B6  A0D8               	btfss	status,0,c
 10948   0020B8  07F5               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 10949   0020BA                     l12913:
 10950                           
 10951                           ; BSR set to: 0
 10952   0020BA  AFE5               	btfss	(___fldiv@b+2)& (0+255),7,b
 10953   0020BC  EF62  F010         	goto	u11861
 10954   0020C0  EF64  F010         	goto	u11860
 10955   0020C4                     u11861:
 10956   0020C4  EF48  F010         	goto	l12907
 10957   0020C8                     u11860:
 10958   0020C8                     
 10959                           ; BSR set to: 0
 10960   0020C8  6BFB               	clrf	___fldiv@aexp& (0+255),b
 10961   0020CA  AFF9               	btfss	(___fldiv@grs+3)& (0+255),7,b
 10962   0020CC  EF6A  F010         	goto	u11871
 10963   0020D0  EF6C  F010         	goto	u11870
 10964   0020D4                     u11871:
 10965   0020D4  EF90  F010         	goto	l3290
 10966   0020D8                     u11870:
 10967   0020D8                     
 10968                           ; BSR set to: 0
 10969   0020D8  0EFF               	movlw	255
 10970   0020DA  15F6               	andwf	___fldiv@grs& (0+255),w,b
 10971   0020DC  6FEB               	movwf	??___fldiv& (0+255),b
 10972   0020DE  0EFF               	movlw	255
 10973   0020E0  15F7               	andwf	(___fldiv@grs+1)& (0+255),w,b
 10974   0020E2  6FEC               	movwf	(??___fldiv+1)& (0+255),b
 10975   0020E4  0EFF               	movlw	255
 10976   0020E6  15F8               	andwf	(___fldiv@grs+2)& (0+255),w,b
 10977   0020E8  6FED               	movwf	(??___fldiv+2)& (0+255),b
 10978   0020EA  0E7F               	movlw	127
 10979   0020EC  15F9               	andwf	(___fldiv@grs+3)& (0+255),w,b
 10980   0020EE  6FEE               	movwf	(??___fldiv+3)& (0+255),b
 10981   0020F0  51EB               	movf	??___fldiv& (0+255),w,b
 10982   0020F2  11EC               	iorwf	(??___fldiv+1)& (0+255),w,b
 10983   0020F4  11ED               	iorwf	(??___fldiv+2)& (0+255),w,b
 10984   0020F6  11EE               	iorwf	(??___fldiv+3)& (0+255),w,b
 10985   0020F8  B4D8               	btfsc	status,2,c
 10986   0020FA  EF81  F010         	goto	u11881
 10987   0020FE  EF83  F010         	goto	u11880
 10988   002102                     u11881:
 10989   002102  EF87  F010         	goto	l3291
 10990   002106                     u11880:
 10991   002106                     l12917:
 10992                           
 10993                           ; BSR set to: 0
 10994   002106  0E01               	movlw	1
 10995   002108  6FFB               	movwf	___fldiv@aexp& (0+255),b
 10996   00210A  EF90  F010         	goto	l3290
 10997   00210E                     l3291:
 10998                           
 10999                           ; BSR set to: 0
 11000   00210E  A1E3               	btfss	___fldiv@b& (0+255),0,b
 11001   002110  EF8C  F010         	goto	u11891
 11002   002114  EF8E  F010         	goto	u11890
 11003   002118                     u11891:
 11004   002118  EF90  F010         	goto	l3290
 11005   00211C                     u11890:
 11006   00211C  EF83  F010         	goto	l12917
 11007   002120                     l3290:
 11008                           
 11009                           ; BSR set to: 0
 11010   002120  51FB               	movf	___fldiv@aexp& (0+255),w,b
 11011   002122  B4D8               	btfsc	status,2,c
 11012   002124  EF96  F010         	goto	u11901
 11013   002128  EF98  F010         	goto	u11900
 11014   00212C                     u11901:
 11015   00212C  EFBC  F010         	goto	l12929
 11016   002130                     u11900:
 11017   002130                     
 11018                           ; BSR set to: 0
 11019   002130  0E01               	movlw	1
 11020   002132  27E3               	addwf	___fldiv@b& (0+255),f,b
 11021   002134  0E00               	movlw	0
 11022   002136  23E4               	addwfc	(___fldiv@b+1)& (0+255),f,b
 11023   002138  23E5               	addwfc	(___fldiv@b+2)& (0+255),f,b
 11024   00213A  23E6               	addwfc	(___fldiv@b+3)& (0+255),f,b
 11025   00213C                     
 11026                           ; BSR set to: 0
 11027   00213C  A1E6               	btfss	(___fldiv@b+3)& (0+255),0,b
 11028   00213E  EFA3  F010         	goto	u11911
 11029   002142  EFA5  F010         	goto	u11910
 11030   002146                     u11911:
 11031   002146  EFBC  F010         	goto	l12929
 11032   00214A                     u11910:
 11033   00214A                     
 11034                           ; BSR set to: 0
 11035   00214A  C0E3  F0EB         	movff	___fldiv@b,??___fldiv
 11036   00214E  C0E4  F0EC         	movff	___fldiv@b+1,??___fldiv+1
 11037   002152  C0E5  F0ED         	movff	___fldiv@b+2,??___fldiv+2
 11038   002156  C0E6  F0EE         	movff	___fldiv@b+3,??___fldiv+3
 11039   00215A  35EE               	rlcf	(??___fldiv+3)& (0+255),w,b
 11040   00215C  33EE               	rrcf	(??___fldiv+3)& (0+255),f,b
 11041   00215E  33ED               	rrcf	(??___fldiv+2)& (0+255),f,b
 11042   002160  33EC               	rrcf	(??___fldiv+1)& (0+255),f,b
 11043   002162  33EB               	rrcf	??___fldiv& (0+255),f,b
 11044   002164  C0EB  F0E3         	movff	??___fldiv,___fldiv@b
 11045   002168  C0EC  F0E4         	movff	??___fldiv+1,___fldiv@b+1
 11046   00216C  C0ED  F0E5         	movff	??___fldiv+2,___fldiv@b+2
 11047   002170  C0EE  F0E6         	movff	??___fldiv+3,___fldiv@b+3
 11048   002174                     
 11049                           ; BSR set to: 0
 11050   002174  4BF4               	infsnz	___fldiv@new_exp& (0+255),f,b
 11051   002176  2BF5               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11052   002178                     l12929:
 11053                           
 11054                           ; BSR set to: 0
 11055   002178  BFF5               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11056   00217A  EFC7  F010         	goto	u11921
 11057   00217E  51F5               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11058   002180  E108               	bnz	u11920
 11059   002182  29F4               	incf	___fldiv@new_exp& (0+255),w,b
 11060   002184  A0D8               	btfss	status,0,c
 11061   002186  EFC7  F010         	goto	u11921
 11062   00218A  EFC9  F010         	goto	u11920
 11063   00218E                     u11921:
 11064   00218E  EFD4  F010         	goto	l12933
 11065   002192                     u11920:
 11066   002192                     
 11067                           ; BSR set to: 0
 11068   002192  0E00               	movlw	0
 11069   002194  6FF5               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11070   002196  69F4               	setf	___fldiv@new_exp& (0+255),b
 11071   002198  0E00               	movlw	0
 11072   00219A  6FE3               	movwf	___fldiv@b& (0+255),b
 11073   00219C  0E00               	movlw	0
 11074   00219E  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 11075   0021A0  0E00               	movlw	0
 11076   0021A2  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 11077   0021A4  0E00               	movlw	0
 11078   0021A6  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 11079   0021A8                     l12933:
 11080                           
 11081                           ; BSR set to: 0
 11082   0021A8  BFF5               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11083   0021AA  EFE1  F010         	goto	u11930
 11084   0021AE  51F5               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11085   0021B0  E106               	bnz	u11931
 11086   0021B2  05F4               	decf	___fldiv@new_exp& (0+255),w,b
 11087   0021B4  B0D8               	btfsc	status,0,c
 11088   0021B6  EFDF  F010         	goto	u11931
 11089   0021BA  EFE1  F010         	goto	u11930
 11090   0021BE                     u11931:
 11091   0021BE  EFEE  F010         	goto	l12939
 11092   0021C2                     u11930:
 11093   0021C2                     
 11094                           ; BSR set to: 0
 11095   0021C2  0E00               	movlw	0
 11096   0021C4  6FF5               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11097   0021C6  0E00               	movlw	0
 11098   0021C8  6FF4               	movwf	___fldiv@new_exp& (0+255),b
 11099   0021CA  0E00               	movlw	0
 11100   0021CC  6FE3               	movwf	___fldiv@b& (0+255),b
 11101   0021CE  0E00               	movlw	0
 11102   0021D0  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 11103   0021D2  0E00               	movlw	0
 11104   0021D4  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 11105   0021D6  0E00               	movlw	0
 11106   0021D8  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 11107   0021DA                     
 11108                           ; BSR set to: 0
 11109   0021DA  6BF3               	clrf	___fldiv@sign& (0+255),b
 11110   0021DC                     l12939:
 11111                           
 11112                           ; BSR set to: 0
 11113   0021DC  C0F4  F0FA         	movff	___fldiv@new_exp,___fldiv@bexp
 11114   0021E0                     
 11115                           ; BSR set to: 0
 11116   0021E0  A1FA               	btfss	___fldiv@bexp& (0+255),0,b
 11117   0021E2  EFF5  F010         	goto	u11941
 11118   0021E6  EFF7  F010         	goto	u11940
 11119   0021EA                     u11941:
 11120   0021EA  EFFA  F010         	goto	l12945
 11121   0021EE                     u11940:
 11122   0021EE                     
 11123                           ; BSR set to: 0
 11124   0021EE  8FE5               	bsf	(___fldiv@b+2)& (0+255),7,b
 11125   0021F0  EFFB  F010         	goto	l12947
 11126   0021F4                     l12945:
 11127                           
 11128                           ; BSR set to: 0
 11129   0021F4  9FE5               	bcf	(___fldiv@b+2)& (0+255),7,b
 11130   0021F6                     l12947:
 11131                           
 11132                           ; BSR set to: 0
 11133   0021F6  90D8               	bcf	status,0,c
 11134   0021F8  31FA               	rrcf	___fldiv@bexp& (0+255),w,b
 11135   0021FA  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 11136   0021FC  EFB4  F00F         	goto	l12863
 11137   002200                     l3277:
 11138                           
 11139                           ; BSR set to: 0
 11140   002200  0012               	return		;funcret
 11141   002202                     __end_of___fldiv:
 11142                           	callstack 0
 11143                           
 11144 ;; *************** function ___fladd *****************
 11145 ;; Defined at:
 11146 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
 11147 ;; Parameters:    Size  Location     Type
 11148 ;;  b               4    0[BANK1 ] unsigned char 
 11149 ;;  a               4    4[BANK1 ] unsigned char 
 11150 ;; Auto vars:     Size  Location     Type
 11151 ;;  grs             1   15[BANK1 ] unsigned char 
 11152 ;;  bexp            1   14[BANK1 ] unsigned char 
 11153 ;;  aexp            1   13[BANK1 ] unsigned char 
 11154 ;;  signs           1   12[BANK1 ] unsigned char 
 11155 ;; Return value:  Size  Location     Type
 11156 ;;                  4    0[BANK1 ] unsigned char 
 11157 ;; Registers used:
 11158 ;;		wreg, status,2, status,0
 11159 ;; Tracked objects:
 11160 ;;		On entry : 0/0
 11161 ;;		On exit  : 0/0
 11162 ;;		Unchanged: 0/0
 11163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11164 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11165 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11166 ;;      Temps:          0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11167 ;;      Totals:         0       0      16       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11168 ;;Total ram usage:       16 bytes
 11169 ;; Hardware stack levels used: 1
 11170 ;; Hardware stack levels required when called: 9
 11171 ;; This function calls:
 11172 ;;		Nothing
 11173 ;; This function is called by:
 11174 ;;		_EUSART_BaudRateCalculation
 11175 ;;		_I2C_Master_Mode_Configuration
 11176 ;;		_Servo_Set_Angle
 11177 ;; This function uses a non-reentrant model
 11178 ;;
 11179                           
 11180                           	psect	text30
 11181   001556                     __ptext30:
 11182                           	callstack 0
 11183   001556                     ___fladd:
 11184                           	callstack 18
 11185   001556  0101               	movlb	1	; () banked
 11186   001558  5142               	movf	(___fladd@b+3)& (0+255),w,b
 11187   00155A  0B80               	andlw	128
 11188   00155C  6F4B               	movwf	___fladd@signs& (0+255),b
 11189   00155E  5142               	movf	(___fladd@b+3)& (0+255),w,b
 11190   001560  2542               	addwf	(___fladd@b+3)& (0+255),w,b
 11191   001562  6F4D               	movwf	___fladd@bexp& (0+255),b
 11192   001564                     
 11193                           ; BSR set to: 1
 11194   001564  AF41               	btfss	(___fladd@b+2)& (0+255),7,b
 11195   001566  EFB7  F00A         	goto	u11331
 11196   00156A  EFB9  F00A         	goto	u11330
 11197   00156E                     u11331:
 11198   00156E  EFBA  F00A         	goto	l12631
 11199   001572                     u11330:
 11200   001572                     
 11201                           ; BSR set to: 1
 11202   001572  814D               	bsf	___fladd@bexp& (0+255),0,b
 11203   001574                     l12631:
 11204                           
 11205                           ; BSR set to: 1
 11206   001574  514D               	movf	___fladd@bexp& (0+255),w,b
 11207   001576  B4D8               	btfsc	status,2,c
 11208   001578  EFC0  F00A         	goto	u11341
 11209   00157C  EFC2  F00A         	goto	u11340
 11210   001580                     u11341:
 11211   001580  EFD6  F00A         	goto	l12641
 11212   001584                     u11340:
 11213   001584                     
 11214                           ; BSR set to: 1
 11215   001584  294D               	incf	___fladd@bexp& (0+255),w,b
 11216   001586  A4D8               	btfss	status,2,c
 11217   001588  EFC8  F00A         	goto	u11351
 11218   00158C  EFCA  F00A         	goto	u11350
 11219   001590                     u11351:
 11220   001590  EFD2  F00A         	goto	l12637
 11221   001594                     u11350:
 11222   001594                     
 11223                           ; BSR set to: 1
 11224   001594  0E00               	movlw	0
 11225   001596  6F3F               	movwf	___fladd@b& (0+255),b
 11226   001598  0E00               	movlw	0
 11227   00159A  6F40               	movwf	(___fladd@b+1)& (0+255),b
 11228   00159C  0E00               	movlw	0
 11229   00159E  6F41               	movwf	(___fladd@b+2)& (0+255),b
 11230   0015A0  0E00               	movlw	0
 11231   0015A2  6F42               	movwf	(___fladd@b+3)& (0+255),b
 11232   0015A4                     l12637:
 11233                           
 11234                           ; BSR set to: 1
 11235   0015A4  8F41               	bsf	(___fladd@b+2)& (0+255),7,b
 11236   0015A6                     
 11237                           ; BSR set to: 1
 11238   0015A6  6B42               	clrf	(___fladd@b+3)& (0+255),b
 11239   0015A8  EFDE  F00A         	goto	l12643
 11240   0015AC                     l12641:
 11241                           
 11242                           ; BSR set to: 1
 11243   0015AC  0E00               	movlw	0
 11244   0015AE  6F3F               	movwf	___fladd@b& (0+255),b
 11245   0015B0  0E00               	movlw	0
 11246   0015B2  6F40               	movwf	(___fladd@b+1)& (0+255),b
 11247   0015B4  0E00               	movlw	0
 11248   0015B6  6F41               	movwf	(___fladd@b+2)& (0+255),b
 11249   0015B8  0E00               	movlw	0
 11250   0015BA  6F42               	movwf	(___fladd@b+3)& (0+255),b
 11251   0015BC                     l12643:
 11252                           
 11253                           ; BSR set to: 1
 11254   0015BC  5146               	movf	(___fladd@a+3)& (0+255),w,b
 11255   0015BE  0B80               	andlw	128
 11256   0015C0  6F4C               	movwf	___fladd@aexp& (0+255),b
 11257   0015C2                     
 11258                           ; BSR set to: 1
 11259   0015C2  514B               	movf	___fladd@signs& (0+255),w,b
 11260   0015C4  194C               	xorwf	___fladd@aexp& (0+255),w,b
 11261   0015C6  B4D8               	btfsc	status,2,c
 11262   0015C8  EFE8  F00A         	goto	u11361
 11263   0015CC  EFEA  F00A         	goto	u11360
 11264   0015D0                     u11361:
 11265   0015D0  EFEB  F00A         	goto	l12649
 11266   0015D4                     u11360:
 11267   0015D4                     
 11268                           ; BSR set to: 1
 11269   0015D4  8D4B               	bsf	___fladd@signs& (0+255),6,b
 11270   0015D6                     l12649:
 11271                           
 11272                           ; BSR set to: 1
 11273   0015D6  5146               	movf	(___fladd@a+3)& (0+255),w,b
 11274   0015D8  2546               	addwf	(___fladd@a+3)& (0+255),w,b
 11275   0015DA  6F4C               	movwf	___fladd@aexp& (0+255),b
 11276   0015DC                     
 11277                           ; BSR set to: 1
 11278   0015DC  AF45               	btfss	(___fladd@a+2)& (0+255),7,b
 11279   0015DE  EFF3  F00A         	goto	u11371
 11280   0015E2  EFF5  F00A         	goto	u11370
 11281   0015E6                     u11371:
 11282   0015E6  EFF6  F00A         	goto	l12655
 11283   0015EA                     u11370:
 11284   0015EA                     
 11285                           ; BSR set to: 1
 11286   0015EA  814C               	bsf	___fladd@aexp& (0+255),0,b
 11287   0015EC                     l12655:
 11288                           
 11289                           ; BSR set to: 1
 11290   0015EC  514C               	movf	___fladd@aexp& (0+255),w,b
 11291   0015EE  B4D8               	btfsc	status,2,c
 11292   0015F0  EFFC  F00A         	goto	u11381
 11293   0015F4  EFFE  F00A         	goto	u11380
 11294   0015F8                     u11381:
 11295   0015F8  EF12  F00B         	goto	l12665
 11296   0015FC                     u11380:
 11297   0015FC                     
 11298                           ; BSR set to: 1
 11299   0015FC  294C               	incf	___fladd@aexp& (0+255),w,b
 11300   0015FE  A4D8               	btfss	status,2,c
 11301   001600  EF04  F00B         	goto	u11391
 11302   001604  EF06  F00B         	goto	u11390
 11303   001608                     u11391:
 11304   001608  EF0E  F00B         	goto	l12661
 11305   00160C                     u11390:
 11306   00160C                     
 11307                           ; BSR set to: 1
 11308   00160C  0E00               	movlw	0
 11309   00160E  6F43               	movwf	___fladd@a& (0+255),b
 11310   001610  0E00               	movlw	0
 11311   001612  6F44               	movwf	(___fladd@a+1)& (0+255),b
 11312   001614  0E00               	movlw	0
 11313   001616  6F45               	movwf	(___fladd@a+2)& (0+255),b
 11314   001618  0E00               	movlw	0
 11315   00161A  6F46               	movwf	(___fladd@a+3)& (0+255),b
 11316   00161C                     l12661:
 11317                           
 11318                           ; BSR set to: 1
 11319   00161C  8F45               	bsf	(___fladd@a+2)& (0+255),7,b
 11320   00161E                     
 11321                           ; BSR set to: 1
 11322   00161E  6B46               	clrf	(___fladd@a+3)& (0+255),b
 11323   001620  EF1A  F00B         	goto	l12667
 11324   001624                     l12665:
 11325                           
 11326                           ; BSR set to: 1
 11327   001624  0E00               	movlw	0
 11328   001626  6F43               	movwf	___fladd@a& (0+255),b
 11329   001628  0E00               	movlw	0
 11330   00162A  6F44               	movwf	(___fladd@a+1)& (0+255),b
 11331   00162C  0E00               	movlw	0
 11332   00162E  6F45               	movwf	(___fladd@a+2)& (0+255),b
 11333   001630  0E00               	movlw	0
 11334   001632  6F46               	movwf	(___fladd@a+3)& (0+255),b
 11335   001634                     l12667:
 11336                           
 11337                           ; BSR set to: 1
 11338   001634  514D               	movf	___fladd@bexp& (0+255),w,b
 11339   001636  5D4C               	subwf	___fladd@aexp& (0+255),w,b
 11340   001638  B0D8               	btfsc	status,0,c
 11341   00163A  EF21  F00B         	goto	u11401
 11342   00163E  EF23  F00B         	goto	u11400
 11343   001642                     u11401:
 11344   001642  EF4A  F00B         	goto	l12703
 11345   001646                     u11400:
 11346   001646                     
 11347                           ; BSR set to: 1
 11348   001646  AD4B               	btfss	___fladd@signs& (0+255),6,b
 11349   001648  EF28  F00B         	goto	u11411
 11350   00164C  EF2A  F00B         	goto	u11410
 11351   001650                     u11411:
 11352   001650  EF2C  F00B         	goto	l12673
 11353   001654                     u11410:
 11354   001654                     
 11355                           ; BSR set to: 1
 11356   001654  0E80               	movlw	128
 11357   001656  1B4B               	xorwf	___fladd@signs& (0+255),f,b
 11358   001658                     l12673:
 11359                           
 11360                           ; BSR set to: 1
 11361   001658  C14D  F14E         	movff	___fladd@bexp,___fladd@grs
 11362   00165C                     
 11363                           ; BSR set to: 1
 11364   00165C  C14C  F14D         	movff	___fladd@aexp,___fladd@bexp
 11365   001660                     
 11366                           ; BSR set to: 1
 11367   001660  C14E  F14C         	movff	___fladd@grs,___fladd@aexp
 11368   001664                     
 11369                           ; BSR set to: 1
 11370   001664  C13F  F14E         	movff	___fladd@b,___fladd@grs
 11371   001668                     
 11372                           ; BSR set to: 1
 11373   001668  C143  F13F         	movff	___fladd@a,___fladd@b
 11374   00166C                     
 11375                           ; BSR set to: 1
 11376   00166C  C14E  F143         	movff	___fladd@grs,___fladd@a
 11377   001670                     
 11378                           ; BSR set to: 1
 11379   001670  C140  F14E         	movff	___fladd@b+1,___fladd@grs
 11380   001674                     
 11381                           ; BSR set to: 1
 11382   001674  C144  F140         	movff	___fladd@a+1,___fladd@b+1
 11383   001678                     
 11384                           ; BSR set to: 1
 11385   001678  C14E  F144         	movff	___fladd@grs,___fladd@a+1
 11386   00167C                     
 11387                           ; BSR set to: 1
 11388   00167C  C141  F14E         	movff	___fladd@b+2,___fladd@grs
 11389   001680                     
 11390                           ; BSR set to: 1
 11391   001680  C145  F141         	movff	___fladd@a+2,___fladd@b+2
 11392   001684                     
 11393                           ; BSR set to: 1
 11394   001684  C14E  F145         	movff	___fladd@grs,___fladd@a+2
 11395   001688                     
 11396                           ; BSR set to: 1
 11397   001688  C142  F14E         	movff	___fladd@b+3,___fladd@grs
 11398   00168C                     
 11399                           ; BSR set to: 1
 11400   00168C  C146  F142         	movff	___fladd@a+3,___fladd@b+3
 11401   001690                     
 11402                           ; BSR set to: 1
 11403   001690  C14E  F146         	movff	___fladd@grs,___fladd@a+3
 11404   001694                     l12703:
 11405                           
 11406                           ; BSR set to: 1
 11407   001694  6B4E               	clrf	___fladd@grs& (0+255),b
 11408   001696  514D               	movf	___fladd@bexp& (0+255),w,b
 11409   001698  C14C  F147         	movff	___fladd@aexp,??___fladd
 11410   00169C  6B48               	clrf	(??___fladd+1)& (0+255),b
 11411   00169E  5F47               	subwf	??___fladd& (0+255),f,b
 11412   0016A0  0E00               	movlw	0
 11413   0016A2  5B48               	subwfb	(??___fladd+1)& (0+255),f,b
 11414   0016A4  BF48               	btfsc	(??___fladd+1)& (0+255),7,b
 11415   0016A6  EF5E  F00B         	goto	u11421
 11416   0016AA  5148               	movf	(??___fladd+1)& (0+255),w,b
 11417   0016AC  E109               	bnz	u11420
 11418   0016AE  0E1A               	movlw	26
 11419   0016B0  5D47               	subwf	??___fladd& (0+255),w,b
 11420   0016B2  A0D8               	btfss	status,0,c
 11421   0016B4  EF5E  F00B         	goto	u11421
 11422   0016B8  EF60  F00B         	goto	u11420
 11423   0016BC                     u11421:
 11424   0016BC  EF97  F00B         	goto	l3224
 11425   0016C0                     u11420:
 11426   0016C0                     
 11427                           ; BSR set to: 1
 11428   0016C0  513F               	movf	___fladd@b& (0+255),w,b
 11429   0016C2  1140               	iorwf	(___fladd@b+1)& (0+255),w,b
 11430   0016C4  1141               	iorwf	(___fladd@b+2)& (0+255),w,b
 11431   0016C6  1142               	iorwf	(___fladd@b+3)& (0+255),w,b
 11432   0016C8  A4D8               	btfss	status,2,c
 11433   0016CA  EF69  F00B         	goto	u11431
 11434   0016CE  EF6C  F00B         	goto	u11430
 11435   0016D2                     u11431:
 11436   0016D2  0E01               	movlw	1
 11437   0016D4  EF6D  F00B         	goto	u11440
 11438   0016D8                     u11430:
 11439   0016D8  0E00               	movlw	0
 11440   0016DA                     u11440:
 11441   0016DA  6F4E               	movwf	___fladd@grs& (0+255),b
 11442   0016DC                     
 11443                           ; BSR set to: 1
 11444   0016DC  0E00               	movlw	0
 11445   0016DE  6F3F               	movwf	___fladd@b& (0+255),b
 11446   0016E0  0E00               	movlw	0
 11447   0016E2  6F40               	movwf	(___fladd@b+1)& (0+255),b
 11448   0016E4  0E00               	movlw	0
 11449   0016E6  6F41               	movwf	(___fladd@b+2)& (0+255),b
 11450   0016E8  0E00               	movlw	0
 11451   0016EA  6F42               	movwf	(___fladd@b+3)& (0+255),b
 11452   0016EC                     
 11453                           ; BSR set to: 1
 11454   0016EC  C14C  F14D         	movff	___fladd@aexp,___fladd@bexp
 11455   0016F0  EFA0  F00B         	goto	l3223
 11456   0016F4                     l3225:
 11457                           
 11458                           ; BSR set to: 1
 11459   0016F4  A14E               	btfss	___fladd@grs& (0+255),0,b
 11460   0016F6  EF7F  F00B         	goto	u11451
 11461   0016FA  EF81  F00B         	goto	u11450
 11462   0016FE                     u11451:
 11463   0016FE  EF87  F00B         	goto	l12713
 11464   001702                     u11450:
 11465   001702                     
 11466                           ; BSR set to: 1
 11467   001702  90D8               	bcf	status,0,c
 11468   001704  314E               	rrcf	___fladd@grs& (0+255),w,b
 11469   001706  0901               	iorlw	1
 11470   001708  6F4E               	movwf	___fladd@grs& (0+255),b
 11471   00170A  EF89  F00B         	goto	l12715
 11472   00170E                     l12713:
 11473                           
 11474                           ; BSR set to: 1
 11475   00170E  90D8               	bcf	status,0,c
 11476   001710  334E               	rrcf	___fladd@grs& (0+255),f,b
 11477   001712                     l12715:
 11478                           
 11479                           ; BSR set to: 1
 11480   001712  A13F               	btfss	___fladd@b& (0+255),0,b
 11481   001714  EF8E  F00B         	goto	u11461
 11482   001718  EF90  F00B         	goto	u11460
 11483   00171C                     u11461:
 11484   00171C  EF91  F00B         	goto	l12719
 11485   001720                     u11460:
 11486   001720                     
 11487                           ; BSR set to: 1
 11488   001720  8F4E               	bsf	___fladd@grs& (0+255),7,b
 11489   001722                     l12719:
 11490                           
 11491                           ; BSR set to: 1
 11492   001722  3542               	rlcf	(___fladd@b+3)& (0+255),w,b
 11493   001724  3342               	rrcf	(___fladd@b+3)& (0+255),f,b
 11494   001726  3341               	rrcf	(___fladd@b+2)& (0+255),f,b
 11495   001728  3340               	rrcf	(___fladd@b+1)& (0+255),f,b
 11496   00172A  333F               	rrcf	___fladd@b& (0+255),f,b
 11497   00172C                     
 11498                           ; BSR set to: 1
 11499   00172C  2B4D               	incf	___fladd@bexp& (0+255),f,b
 11500   00172E                     l3224:
 11501                           
 11502                           ; BSR set to: 1
 11503   00172E  514C               	movf	___fladd@aexp& (0+255),w,b
 11504   001730  5D4D               	subwf	___fladd@bexp& (0+255),w,b
 11505   001732  A0D8               	btfss	status,0,c
 11506   001734  EF9E  F00B         	goto	u11471
 11507   001738  EFA0  F00B         	goto	u11470
 11508   00173C                     u11471:
 11509   00173C  EF7A  F00B         	goto	l3225
 11510   001740                     u11470:
 11511   001740                     l3223:
 11512                           
 11513                           ; BSR set to: 1
 11514   001740  BD4B               	btfsc	___fladd@signs& (0+255),6,b
 11515   001742  EFA5  F00B         	goto	u11481
 11516   001746  EFA7  F00B         	goto	u11480
 11517   00174A                     u11481:
 11518   00174A  EFE7  F00B         	goto	l12747
 11519   00174E                     u11480:
 11520   00174E                     
 11521                           ; BSR set to: 1
 11522   00174E  514D               	movf	___fladd@bexp& (0+255),w,b
 11523   001750  A4D8               	btfss	status,2,c
 11524   001752  EFAD  F00B         	goto	u11491
 11525   001756  EFAF  F00B         	goto	u11490
 11526   00175A                     u11491:
 11527   00175A  EFB9  F00B         	goto	l12729
 11528   00175E                     u11490:
 11529   00175E                     
 11530                           ; BSR set to: 1
 11531   00175E  0E00               	movlw	0
 11532   001760  6F3F               	movwf	?___fladd& (0+255),b
 11533   001762  0E00               	movlw	0
 11534   001764  6F40               	movwf	(?___fladd+1)& (0+255),b
 11535   001766  0E00               	movlw	0
 11536   001768  6F41               	movwf	(?___fladd+2)& (0+255),b
 11537   00176A  0E00               	movlw	0
 11538   00176C  6F42               	movwf	(?___fladd+3)& (0+255),b
 11539   00176E  EF06  F00D         	goto	l3232
 11540   001772                     l12729:
 11541                           
 11542                           ; BSR set to: 1
 11543   001772  5143               	movf	___fladd@a& (0+255),w,b
 11544   001774  273F               	addwf	___fladd@b& (0+255),f,b
 11545   001776  5144               	movf	(___fladd@a+1)& (0+255),w,b
 11546   001778  2340               	addwfc	(___fladd@b+1)& (0+255),f,b
 11547   00177A  5145               	movf	(___fladd@a+2)& (0+255),w,b
 11548   00177C  2341               	addwfc	(___fladd@b+2)& (0+255),f,b
 11549   00177E  5146               	movf	(___fladd@a+3)& (0+255),w,b
 11550   001780  2342               	addwfc	(___fladd@b+3)& (0+255),f,b
 11551   001782                     
 11552                           ; BSR set to: 1
 11553   001782  A142               	btfss	(___fladd@b+3)& (0+255),0,b
 11554   001784  EFC6  F00B         	goto	u11501
 11555   001788  EFC8  F00B         	goto	u11500
 11556   00178C                     u11501:
 11557   00178C  EF74  F00C         	goto	l3237
 11558   001790                     u11500:
 11559   001790                     
 11560                           ; BSR set to: 1
 11561   001790  A14E               	btfss	___fladd@grs& (0+255),0,b
 11562   001792  EFCD  F00B         	goto	u11511
 11563   001796  EFCF  F00B         	goto	u11510
 11564   00179A                     u11511:
 11565   00179A  EFD5  F00B         	goto	l12737
 11566   00179E                     u11510:
 11567   00179E                     
 11568                           ; BSR set to: 1
 11569   00179E  90D8               	bcf	status,0,c
 11570   0017A0  314E               	rrcf	___fladd@grs& (0+255),w,b
 11571   0017A2  0901               	iorlw	1
 11572   0017A4  6F4E               	movwf	___fladd@grs& (0+255),b
 11573   0017A6  EFD7  F00B         	goto	l12739
 11574   0017AA                     l12737:
 11575                           
 11576                           ; BSR set to: 1
 11577   0017AA  90D8               	bcf	status,0,c
 11578   0017AC  334E               	rrcf	___fladd@grs& (0+255),f,b
 11579   0017AE                     l12739:
 11580                           
 11581                           ; BSR set to: 1
 11582   0017AE  A13F               	btfss	___fladd@b& (0+255),0,b
 11583   0017B0  EFDC  F00B         	goto	u11521
 11584   0017B4  EFDE  F00B         	goto	u11520
 11585   0017B8                     u11521:
 11586   0017B8  EFDF  F00B         	goto	l12743
 11587   0017BC                     u11520:
 11588   0017BC                     
 11589                           ; BSR set to: 1
 11590   0017BC  8F4E               	bsf	___fladd@grs& (0+255),7,b
 11591   0017BE                     l12743:
 11592                           
 11593                           ; BSR set to: 1
 11594   0017BE  3542               	rlcf	(___fladd@b+3)& (0+255),w,b
 11595   0017C0  3342               	rrcf	(___fladd@b+3)& (0+255),f,b
 11596   0017C2  3341               	rrcf	(___fladd@b+2)& (0+255),f,b
 11597   0017C4  3340               	rrcf	(___fladd@b+1)& (0+255),f,b
 11598   0017C6  333F               	rrcf	___fladd@b& (0+255),f,b
 11599   0017C8                     
 11600                           ; BSR set to: 1
 11601   0017C8  2B4D               	incf	___fladd@bexp& (0+255),f,b
 11602   0017CA  EF74  F00C         	goto	l3237
 11603   0017CE                     l12747:
 11604                           
 11605                           ; BSR set to: 1
 11606   0017CE  5143               	movf	___fladd@a& (0+255),w,b
 11607   0017D0  5D3F               	subwf	___fladd@b& (0+255),w,b
 11608   0017D2  5144               	movf	(___fladd@a+1)& (0+255),w,b
 11609   0017D4  5940               	subwfb	(___fladd@b+1)& (0+255),w,b
 11610   0017D6  5145               	movf	(___fladd@a+2)& (0+255),w,b
 11611   0017D8  5941               	subwfb	(___fladd@b+2)& (0+255),w,b
 11612   0017DA  5142               	movf	(___fladd@b+3)& (0+255),w,b
 11613   0017DC  0A80               	xorlw	128
 11614   0017DE  6F47               	movwf	??___fladd& (0+255),b
 11615   0017E0  5146               	movf	(___fladd@a+3)& (0+255),w,b
 11616   0017E2  0A80               	xorlw	128
 11617   0017E4  5947               	subwfb	??___fladd& (0+255),w,b
 11618   0017E6  B0D8               	btfsc	status,0,c
 11619   0017E8  EFF8  F00B         	goto	u11531
 11620   0017EC  EFFA  F00B         	goto	u11530
 11621   0017F0                     u11531:
 11622   0017F0  EF25  F00C         	goto	l12757
 11623   0017F4                     u11530:
 11624   0017F4                     
 11625                           ; BSR set to: 1
 11626   0017F4  513F               	movf	___fladd@b& (0+255),w,b
 11627   0017F6  5D43               	subwf	___fladd@a& (0+255),w,b
 11628   0017F8  6F47               	movwf	??___fladd& (0+255),b
 11629   0017FA  5140               	movf	(___fladd@b+1)& (0+255),w,b
 11630   0017FC  5944               	subwfb	(___fladd@a+1)& (0+255),w,b
 11631   0017FE  6F48               	movwf	(??___fladd+1)& (0+255),b
 11632   001800  5141               	movf	(___fladd@b+2)& (0+255),w,b
 11633   001802  5945               	subwfb	(___fladd@a+2)& (0+255),w,b
 11634   001804  6F49               	movwf	(??___fladd+2)& (0+255),b
 11635   001806  5142               	movf	(___fladd@b+3)& (0+255),w,b
 11636   001808  5946               	subwfb	(___fladd@a+3)& (0+255),w,b
 11637   00180A  6F4A               	movwf	(??___fladd+3)& (0+255),b
 11638   00180C  0EFF               	movlw	255
 11639   00180E  2547               	addwf	??___fladd& (0+255),w,b
 11640   001810  6F3F               	movwf	___fladd@b& (0+255),b
 11641   001812  0EFF               	movlw	255
 11642   001814  2148               	addwfc	(??___fladd+1)& (0+255),w,b
 11643   001816  6F40               	movwf	(___fladd@b+1)& (0+255),b
 11644   001818  0EFF               	movlw	255
 11645   00181A  2149               	addwfc	(??___fladd+2)& (0+255),w,b
 11646   00181C  6F41               	movwf	(___fladd@b+2)& (0+255),b
 11647   00181E  0EFF               	movlw	255
 11648   001820  214A               	addwfc	(??___fladd+3)& (0+255),w,b
 11649   001822  6F42               	movwf	(___fladd@b+3)& (0+255),b
 11650   001824  0E80               	movlw	128
 11651   001826  1B4B               	xorwf	___fladd@signs& (0+255),f,b
 11652   001828                     
 11653                           ; BSR set to: 1
 11654   001828  6D4E               	negf	___fladd@grs& (0+255),b
 11655   00182A                     
 11656                           ; BSR set to: 1
 11657   00182A  514E               	movf	___fladd@grs& (0+255),w,b
 11658   00182C  A4D8               	btfss	status,2,c
 11659   00182E  EF1B  F00C         	goto	u11541
 11660   001832  EF1D  F00C         	goto	u11540
 11661   001836                     u11541:
 11662   001836  EF2D  F00C         	goto	l3240
 11663   00183A                     u11540:
 11664   00183A                     
 11665                           ; BSR set to: 1
 11666   00183A  0E01               	movlw	1
 11667   00183C  273F               	addwf	___fladd@b& (0+255),f,b
 11668   00183E  0E00               	movlw	0
 11669   001840  2340               	addwfc	(___fladd@b+1)& (0+255),f,b
 11670   001842  2341               	addwfc	(___fladd@b+2)& (0+255),f,b
 11671   001844  2342               	addwfc	(___fladd@b+3)& (0+255),f,b
 11672   001846  EF2D  F00C         	goto	l3240
 11673   00184A                     l12757:
 11674                           
 11675                           ; BSR set to: 1
 11676   00184A  5143               	movf	___fladd@a& (0+255),w,b
 11677   00184C  5F3F               	subwf	___fladd@b& (0+255),f,b
 11678   00184E  5144               	movf	(___fladd@a+1)& (0+255),w,b
 11679   001850  5B40               	subwfb	(___fladd@b+1)& (0+255),f,b
 11680   001852  5145               	movf	(___fladd@a+2)& (0+255),w,b
 11681   001854  5B41               	subwfb	(___fladd@b+2)& (0+255),f,b
 11682   001856  5146               	movf	(___fladd@a+3)& (0+255),w,b
 11683   001858  5B42               	subwfb	(___fladd@b+3)& (0+255),f,b
 11684   00185A                     l3240:
 11685                           
 11686                           ; BSR set to: 1
 11687   00185A  513F               	movf	___fladd@b& (0+255),w,b
 11688   00185C  1140               	iorwf	(___fladd@b+1)& (0+255),w,b
 11689   00185E  1141               	iorwf	(___fladd@b+2)& (0+255),w,b
 11690   001860  1142               	iorwf	(___fladd@b+3)& (0+255),w,b
 11691   001862  A4D8               	btfss	status,2,c
 11692   001864  EF36  F00C         	goto	u11551
 11693   001868  EF38  F00C         	goto	u11550
 11694   00186C                     u11551:
 11695   00186C  EF6D  F00C         	goto	l12781
 11696   001870                     u11550:
 11697   001870                     
 11698                           ; BSR set to: 1
 11699   001870  514E               	movf	___fladd@grs& (0+255),w,b
 11700   001872  A4D8               	btfss	status,2,c
 11701   001874  EF3E  F00C         	goto	u11561
 11702   001878  EF40  F00C         	goto	u11560
 11703   00187C                     u11561:
 11704   00187C  EF6D  F00C         	goto	l12781
 11705   001880                     u11560:
 11706   001880                     
 11707                           ; BSR set to: 1
 11708   001880  0E00               	movlw	0
 11709   001882  6F3F               	movwf	?___fladd& (0+255),b
 11710   001884  0E00               	movlw	0
 11711   001886  6F40               	movwf	(?___fladd+1)& (0+255),b
 11712   001888  0E00               	movlw	0
 11713   00188A  6F41               	movwf	(?___fladd+2)& (0+255),b
 11714   00188C  0E00               	movlw	0
 11715   00188E  6F42               	movwf	(?___fladd+3)& (0+255),b
 11716   001890  EF06  F00D         	goto	l3232
 11717   001894                     l12765:
 11718                           
 11719                           ; BSR set to: 1
 11720   001894  90D8               	bcf	status,0,c
 11721   001896  373F               	rlcf	___fladd@b& (0+255),f,b
 11722   001898  3740               	rlcf	(___fladd@b+1)& (0+255),f,b
 11723   00189A  3741               	rlcf	(___fladd@b+2)& (0+255),f,b
 11724   00189C  3742               	rlcf	(___fladd@b+3)& (0+255),f,b
 11725   00189E                     
 11726                           ; BSR set to: 1
 11727   00189E  AF4E               	btfss	___fladd@grs& (0+255),7,b
 11728   0018A0  EF54  F00C         	goto	u11571
 11729   0018A4  EF56  F00C         	goto	u11570
 11730   0018A8                     u11571:
 11731   0018A8  EF57  F00C         	goto	l12771
 11732   0018AC                     u11570:
 11733   0018AC                     
 11734                           ; BSR set to: 1
 11735   0018AC  813F               	bsf	___fladd@b& (0+255),0,b
 11736   0018AE                     l12771:
 11737                           
 11738                           ; BSR set to: 1
 11739   0018AE  A14E               	btfss	___fladd@grs& (0+255),0,b
 11740   0018B0  EF5C  F00C         	goto	u11581
 11741   0018B4  EF5E  F00C         	goto	u11580
 11742   0018B8                     u11581:
 11743   0018B8  EF62  F00C         	goto	l12775
 11744   0018BC                     u11580:
 11745   0018BC                     
 11746                           ; BSR set to: 1
 11747   0018BC  80D8               	bsf	status,0,c
 11748   0018BE  374E               	rlcf	___fladd@grs& (0+255),f,b
 11749   0018C0  EF64  F00C         	goto	l12777
 11750   0018C4                     l12775:
 11751                           
 11752                           ; BSR set to: 1
 11753   0018C4  90D8               	bcf	status,0,c
 11754   0018C6  374E               	rlcf	___fladd@grs& (0+255),f,b
 11755   0018C8                     l12777:
 11756                           
 11757                           ; BSR set to: 1
 11758   0018C8  514D               	movf	___fladd@bexp& (0+255),w,b
 11759   0018CA  B4D8               	btfsc	status,2,c
 11760   0018CC  EF6A  F00C         	goto	u11591
 11761   0018D0  EF6C  F00C         	goto	u11590
 11762   0018D4                     u11591:
 11763   0018D4  EF6D  F00C         	goto	l12781
 11764   0018D8                     u11590:
 11765   0018D8                     
 11766                           ; BSR set to: 1
 11767   0018D8  074D               	decf	___fladd@bexp& (0+255),f,b
 11768   0018DA                     l12781:
 11769                           
 11770                           ; BSR set to: 1
 11771   0018DA  AF41               	btfss	(___fladd@b+2)& (0+255),7,b
 11772   0018DC  EF72  F00C         	goto	u11601
 11773   0018E0  EF74  F00C         	goto	u11600
 11774   0018E4                     u11601:
 11775   0018E4  EF4A  F00C         	goto	l12765
 11776   0018E8                     u11600:
 11777   0018E8                     l3237:
 11778                           
 11779                           ; BSR set to: 1
 11780   0018E8  6B4C               	clrf	___fladd@aexp& (0+255),b
 11781   0018EA  AF4E               	btfss	___fladd@grs& (0+255),7,b
 11782   0018EC  EF7A  F00C         	goto	u11611
 11783   0018F0  EF7C  F00C         	goto	u11610
 11784   0018F4                     u11611:
 11785   0018F4  EF94  F00C         	goto	l3249
 11786   0018F8                     u11610:
 11787   0018F8                     
 11788                           ; BSR set to: 1
 11789   0018F8  C14E  F147         	movff	___fladd@grs,??___fladd
 11790   0018FC  0E7F               	movlw	127
 11791   0018FE  1747               	andwf	??___fladd& (0+255),f,b
 11792   001900  B4D8               	btfsc	status,2,c
 11793   001902  EF85  F00C         	goto	u11621
 11794   001906  EF87  F00C         	goto	u11620
 11795   00190A                     u11621:
 11796   00190A  EF8B  F00C         	goto	l3250
 11797   00190E                     u11620:
 11798   00190E                     l12785:
 11799                           
 11800                           ; BSR set to: 1
 11801   00190E  0E01               	movlw	1
 11802   001910  6F4C               	movwf	___fladd@aexp& (0+255),b
 11803   001912  EF94  F00C         	goto	l3249
 11804   001916                     l3250:
 11805                           
 11806                           ; BSR set to: 1
 11807   001916  A13F               	btfss	___fladd@b& (0+255),0,b
 11808   001918  EF90  F00C         	goto	u11631
 11809   00191C  EF92  F00C         	goto	u11630
 11810   001920                     u11631:
 11811   001920  EF94  F00C         	goto	l3249
 11812   001924                     u11630:
 11813   001924  EF87  F00C         	goto	l12785
 11814   001928                     l3249:
 11815                           
 11816                           ; BSR set to: 1
 11817   001928  514C               	movf	___fladd@aexp& (0+255),w,b
 11818   00192A  B4D8               	btfsc	status,2,c
 11819   00192C  EF9A  F00C         	goto	u11641
 11820   001930  EF9C  F00C         	goto	u11640
 11821   001934                     u11641:
 11822   001934  EFC7  F00C         	goto	l12797
 11823   001938                     u11640:
 11824   001938                     
 11825                           ; BSR set to: 1
 11826   001938  0E01               	movlw	1
 11827   00193A  273F               	addwf	___fladd@b& (0+255),f,b
 11828   00193C  0E00               	movlw	0
 11829   00193E  2340               	addwfc	(___fladd@b+1)& (0+255),f,b
 11830   001940  2341               	addwfc	(___fladd@b+2)& (0+255),f,b
 11831   001942  2342               	addwfc	(___fladd@b+3)& (0+255),f,b
 11832   001944                     
 11833                           ; BSR set to: 1
 11834   001944  A142               	btfss	(___fladd@b+3)& (0+255),0,b
 11835   001946  EFA7  F00C         	goto	u11651
 11836   00194A  EFA9  F00C         	goto	u11650
 11837   00194E                     u11651:
 11838   00194E  EFC7  F00C         	goto	l12797
 11839   001952                     u11650:
 11840   001952                     
 11841                           ; BSR set to: 1
 11842   001952  C13F  F147         	movff	___fladd@b,??___fladd
 11843   001956  C140  F148         	movff	___fladd@b+1,??___fladd+1
 11844   00195A  C141  F149         	movff	___fladd@b+2,??___fladd+2
 11845   00195E  C142  F14A         	movff	___fladd@b+3,??___fladd+3
 11846   001962  354A               	rlcf	(??___fladd+3)& (0+255),w,b
 11847   001964  334A               	rrcf	(??___fladd+3)& (0+255),f,b
 11848   001966  3349               	rrcf	(??___fladd+2)& (0+255),f,b
 11849   001968  3348               	rrcf	(??___fladd+1)& (0+255),f,b
 11850   00196A  3347               	rrcf	??___fladd& (0+255),f,b
 11851   00196C  C147  F13F         	movff	??___fladd,___fladd@b
 11852   001970  C148  F140         	movff	??___fladd+1,___fladd@b+1
 11853   001974  C149  F141         	movff	??___fladd+2,___fladd@b+2
 11854   001978  C14A  F142         	movff	??___fladd+3,___fladd@b+3
 11855   00197C  294D               	incf	___fladd@bexp& (0+255),w,b
 11856   00197E  B4D8               	btfsc	status,2,c
 11857   001980  EFC4  F00C         	goto	u11661
 11858   001984  EFC6  F00C         	goto	u11660
 11859   001988                     u11661:
 11860   001988  EFC7  F00C         	goto	l12797
 11861   00198C                     u11660:
 11862   00198C                     
 11863                           ; BSR set to: 1
 11864   00198C  2B4D               	incf	___fladd@bexp& (0+255),f,b
 11865   00198E                     l12797:
 11866                           
 11867                           ; BSR set to: 1
 11868   00198E  294D               	incf	___fladd@bexp& (0+255),w,b
 11869   001990  B4D8               	btfsc	status,2,c
 11870   001992  EFCD  F00C         	goto	u11671
 11871   001996  EFCF  F00C         	goto	u11670
 11872   00199A                     u11671:
 11873   00199A  EFD7  F00C         	goto	l12801
 11874   00199E                     u11670:
 11875   00199E                     
 11876                           ; BSR set to: 1
 11877   00199E  514D               	movf	___fladd@bexp& (0+255),w,b
 11878   0019A0  A4D8               	btfss	status,2,c
 11879   0019A2  EFD5  F00C         	goto	u11681
 11880   0019A6  EFD7  F00C         	goto	u11680
 11881   0019AA                     u11681:
 11882   0019AA  EFE8  F00C         	goto	l3256
 11883   0019AE                     u11680:
 11884   0019AE                     l12801:
 11885                           
 11886                           ; BSR set to: 1
 11887   0019AE  0E00               	movlw	0
 11888   0019B0  6F3F               	movwf	___fladd@b& (0+255),b
 11889   0019B2  0E00               	movlw	0
 11890   0019B4  6F40               	movwf	(___fladd@b+1)& (0+255),b
 11891   0019B6  0E00               	movlw	0
 11892   0019B8  6F41               	movwf	(___fladd@b+2)& (0+255),b
 11893   0019BA  0E00               	movlw	0
 11894   0019BC  6F42               	movwf	(___fladd@b+3)& (0+255),b
 11895   0019BE  514D               	movf	___fladd@bexp& (0+255),w,b
 11896   0019C0  A4D8               	btfss	status,2,c
 11897   0019C2  EFE5  F00C         	goto	u11691
 11898   0019C6  EFE7  F00C         	goto	u11690
 11899   0019CA                     u11691:
 11900   0019CA  EFE8  F00C         	goto	l3256
 11901   0019CE                     u11690:
 11902   0019CE                     
 11903                           ; BSR set to: 1
 11904   0019CE  6B4B               	clrf	___fladd@signs& (0+255),b
 11905   0019D0                     l3256:
 11906                           
 11907                           ; BSR set to: 1
 11908   0019D0  A14D               	btfss	___fladd@bexp& (0+255),0,b
 11909   0019D2  EFED  F00C         	goto	u11701
 11910   0019D6  EFEF  F00C         	goto	u11700
 11911   0019DA                     u11701:
 11912   0019DA  EFF2  F00C         	goto	l12807
 11913   0019DE                     u11700:
 11914   0019DE                     
 11915                           ; BSR set to: 1
 11916   0019DE  8F41               	bsf	(___fladd@b+2)& (0+255),7,b
 11917   0019E0  EFF3  F00C         	goto	l12809
 11918   0019E4                     l12807:
 11919                           
 11920                           ; BSR set to: 1
 11921   0019E4  9F41               	bcf	(___fladd@b+2)& (0+255),7,b
 11922   0019E6                     l12809:
 11923                           
 11924                           ; BSR set to: 1
 11925   0019E6  90D8               	bcf	status,0,c
 11926   0019E8  314D               	rrcf	___fladd@bexp& (0+255),w,b
 11927   0019EA  6F42               	movwf	(___fladd@b+3)& (0+255),b
 11928   0019EC                     
 11929                           ; BSR set to: 1
 11930   0019EC  AF4B               	btfss	___fladd@signs& (0+255),7,b
 11931   0019EE  EFFB  F00C         	goto	u11711
 11932   0019F2  EFFD  F00C         	goto	u11710
 11933   0019F6                     u11711:
 11934   0019F6  EFFE  F00C         	goto	l12815
 11935   0019FA                     u11710:
 11936   0019FA                     
 11937                           ; BSR set to: 1
 11938   0019FA  8F42               	bsf	(___fladd@b+3)& (0+255),7,b
 11939   0019FC                     l12815:
 11940                           
 11941                           ; BSR set to: 1
 11942   0019FC  C13F  F13F         	movff	___fladd@b,?___fladd
 11943   001A00  C140  F140         	movff	___fladd@b+1,?___fladd+1
 11944   001A04  C141  F141         	movff	___fladd@b+2,?___fladd+2
 11945   001A08  C142  F142         	movff	___fladd@b+3,?___fladd+3
 11946   001A0C                     l3232:
 11947                           
 11948                           ; BSR set to: 1
 11949   001A0C  0012               	return		;funcret
 11950   001A0E                     __end_of___fladd:
 11951                           	callstack 0
 11952                           
 11953 ;; *************** function _REALTIMECLOCK_DS1307_Get_Data *****************
 11954 ;; Defined at:
 11955 ;;		line 25 in file "ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c"
 11956 ;; Parameters:    Size  Location     Type
 11957 ;;		None
 11958 ;; Auto vars:     Size  Location     Type
 11959 ;;		None
 11960 ;; Return value:  Size  Location     Type
 11961 ;;                  6   18[BANK0 ] struct .
 11962 ;; Registers used:
 11963 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 11964 ;; Tracked objects:
 11965 ;;		On entry : 0/0
 11966 ;;		On exit  : 0/0
 11967 ;;		Unchanged: 0/0
 11968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11969 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11972 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11973 ;;Total ram usage:        6 bytes
 11974 ;; Hardware stack levels used: 1
 11975 ;; Hardware stack levels required when called: 18
 11976 ;; This function calls:
 11977 ;;		_I2C_Read1ByteRegister
 11978 ;; This function is called by:
 11979 ;;		_main
 11980 ;; This function uses a non-reentrant model
 11981 ;;
 11982                           
 11983                           	psect	text31
 11984   004102                     __ptext31:
 11985                           	callstack 0
 11986   004102                     _REALTIMECLOCK_DS1307_Get_Data:
 11987                           	callstack 12
 11988   004102                     
 11989                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 26:     REALTIMECLOCK_DS1307.sec
      +                          onds = I2C_Read1ByteRegister(0xD0, 0x00);
 11990   004102  0E00               	movlw	0
 11991   004104  0100               	movlb	0	; () banked
 11992   004106  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 11993   004108  0ED0               	movlw	208
 11994   00410A  EC9E  F01F         	call	_I2C_Read1ByteRegister
 11995   00410E  0100               	movlb	0	; () banked
 11996   004110  6F7D               	movwf	_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571& (0+255),b
 11997                           
 11998                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 27:     REALTIMECLOCK_DS1307.min
      +                          utes = I2C_Read1ByteRegister(0xD0, 0x01);
 11999   004112  0E01               	movlw	1
 12000   004114  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 12001   004116  0ED0               	movlw	208
 12002   004118  EC9E  F01F         	call	_I2C_Read1ByteRegister
 12003   00411C  0100               	movlb	0	; () banked
 12004   00411E  6F7E               	movwf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+1)& (0+255),b
 12005                           
 12006                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 28:     REALTIMECLOCK_DS1307.hou
      +                          rs = I2C_Read1ByteRegister(0xD0, 0x02);
 12007   004120  0E02               	movlw	2
 12008   004122  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 12009   004124  0ED0               	movlw	208
 12010   004126  EC9E  F01F         	call	_I2C_Read1ByteRegister
 12011   00412A  0100               	movlb	0	; () banked
 12012   00412C  6F7F               	movwf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+2)& (0+255),b
 12013                           
 12014                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 29:     REALTIMECLOCK_DS1307.day
      +                          s = I2C_Read1ByteRegister(0xD0, 0x04);
 12015   00412E  0E04               	movlw	4
 12016   004130  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 12017   004132  0ED0               	movlw	208
 12018   004134  EC9E  F01F         	call	_I2C_Read1ByteRegister
 12019   004138  0100               	movlb	0	; () banked
 12020   00413A  6F80               	movwf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+3)& (0+255),b
 12021                           
 12022                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 30:     REALTIMECLOCK_DS1307.mon
      +                          ths = I2C_Read1ByteRegister(0xD0, 0x05);
 12023   00413C  0E05               	movlw	5
 12024   00413E  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 12025   004140  0ED0               	movlw	208
 12026   004142  EC9E  F01F         	call	_I2C_Read1ByteRegister
 12027   004146  0100               	movlb	0	; () banked
 12028   004148  6F81               	movwf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+4)& (0+255),b
 12029                           
 12030                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 31:     REALTIMECLOCK_DS1307.yea
      +                          rs = I2C_Read1ByteRegister(0xD0, 0x06);
 12031   00414A  0E06               	movlw	6
 12032   00414C  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 12033   00414E  0ED0               	movlw	208
 12034   004150  EC9E  F01F         	call	_I2C_Read1ByteRegister
 12035   004154  0100               	movlb	0	; () banked
 12036   004156  6F82               	movwf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571+5)& (0+255),b
 12037   004158                     
 12038                           ; BSR set to: 0
 12039                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 33:     return REALTIMECLOCK_DS1
      +                          307;
 12040   004158  EE20  F07D         	lfsr	2,_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571
 12041   00415C  EE00  F0E7         	lfsr	0,?_REALTIMECLOCK_DS1307_Get_Data
 12042   004160  0E05               	movlw	5
 12043   004162                     u12671:
 12044   004162  CFDB FFEB          	movff	plusw2,plusw0
 12045   004166  06E8               	decf	wreg,f,c
 12046   004168  E2FC               	bc	u12671
 12047   00416A                     
 12048                           ; BSR set to: 0
 12049   00416A  0012               	return		;funcret
 12050   00416C                     __end_of_REALTIMECLOCK_DS1307_Get_Data:
 12051                           	callstack 0
 12052                           
 12053 ;; *************** function _I2C_Read1ByteRegister *****************
 12054 ;; Defined at:
 12055 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
 12056 ;; Parameters:    Size  Location     Type
 12057 ;;  address         1    wreg     unsigned char 
 12058 ;;  reg             1   15[BANK0 ] unsigned char 
 12059 ;; Auto vars:     Size  Location     Type
 12060 ;;  address         1   16[BANK0 ] unsigned char 
 12061 ;;  returnValue     1   17[BANK0 ] unsigned char 
 12062 ;; Return value:  Size  Location     Type
 12063 ;;                  1    wreg      unsigned char 
 12064 ;; Registers used:
 12065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12066 ;; Tracked objects:
 12067 ;;		On entry : 0/0
 12068 ;;		On exit  : 0/0
 12069 ;;		Unchanged: 0/0
 12070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12071 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12072 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12074 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12075 ;;Total ram usage:        3 bytes
 12076 ;; Hardware stack levels used: 1
 12077 ;; Hardware stack levels required when called: 17
 12078 ;; This function calls:
 12079 ;;		_I2C_Close
 12080 ;;		_I2C_MasterWrite
 12081 ;;		_I2C_Open
 12082 ;;		_I2C_SetAddressNackCallback
 12083 ;;		_I2C_SetBuffer
 12084 ;;		_I2C_SetDataCompleteCallback
 12085 ;; This function is called by:
 12086 ;;		_REALTIMECLOCK_DS1307_Get_Data
 12087 ;; This function uses a non-reentrant model
 12088 ;;
 12089                           
 12090                           	psect	text32
 12091   003F3C                     __ptext32:
 12092                           	callstack 0
 12093   003F3C                     _I2C_Read1ByteRegister:
 12094                           	callstack 12
 12095                           
 12096                           ; BSR set to: 0
 12097                           ;incstack = 0
 12098                           ;I2C_Read1ByteRegister@address stored from wreg
 12099   003F3C  0100               	movlb	0	; () banked
 12100   003F3E  6FE5               	movwf	I2C_Read1ByteRegister@address& (0+255),b
 12101   003F40                     
 12102                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
 12103   003F40  0100               	movlb	0	; () banked
 12104   003F42  6BE6               	clrf	I2C_Read1ByteRegister@returnValue& (0+255),b
 12105   003F44                     l13259:
 12106   003F44  0100               	movlb	0	; () banked
 12107   003F46  51E5               	movf	I2C_Read1ByteRegister@address& (0+255),w,b
 12108   003F48  ECDA  F01F         	call	_I2C_Open
 12109   003F4C  0900               	iorlw	0
 12110   003F4E  B4D8               	btfsc	status,2,c
 12111   003F50  EFAC  F01F         	goto	u12271
 12112   003F54  EFAE  F01F         	goto	u12270
 12113   003F58                     u12271:
 12114   003F58  EFA2  F01F         	goto	l13259
 12115   003F5C                     u12270:
 12116   003F5C                     
 12117                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
 12118   003F5C  0E56               	movlw	low _rd1RegCompleteHandler
 12119   003F5E  0100               	movlb	0	; () banked
 12120   003F60  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 12121   003F62  0E48               	movlw	high _rd1RegCompleteHandler
 12122   003F64  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 12123   003F66  0EE6               	movlw	low I2C_Read1ByteRegister@returnValue
 12124   003F68  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 12125   003F6A  EC1D  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 12126   003F6E                     
 12127                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
 12128   003F6E  0EE4               	movlw	low I2C_Read1ByteRegister@reg
 12129   003F70  0100               	movlb	0	; () banked
 12130   003F72  6FD5               	movwf	I2C_SetBuffer@buffer& (0+255),b
 12131   003F74  0E00               	movlw	0
 12132   003F76  6FD7               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
 12133   003F78  0E01               	movlw	1
 12134   003F7A  6FD6               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
 12135   003F7C  EC9B  F024         	call	_I2C_SetBuffer	;wreg free
 12136   003F80                     
 12137                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 12138   003F80  0E00               	movlw	0
 12139   003F82  0100               	movlb	0	; () banked
 12140   003F84  6FD9               	movwf	I2C_SetAddressNackCallback@cb& (0+255),b
 12141   003F86  0E00               	movlw	0
 12142   003F88  6FDA               	movwf	(I2C_SetAddressNackCallback@cb+1)& (0+255),b
 12143   003F8A  0E00               	movlw	0
 12144   003F8C  6FDB               	movwf	I2C_SetAddressNackCallback@ptr& (0+255),b
 12145   003F8E  0E00               	movlw	0
 12146   003F90  6FDC               	movwf	(I2C_SetAddressNackCallback@ptr+1)& (0+255),b
 12147   003F92  EC09  F025         	call	_I2C_SetAddressNackCallback	;wreg free
 12148   003F96                     
 12149                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
 12150   003F96  EC7B  F025         	call	_I2C_MasterWrite	;wreg free
 12151   003F9A                     l13269:
 12152   003F9A  ECEC  F023         	call	_I2C_Close	;wreg free
 12153   003F9E  06E8               	decf	wreg,f,c
 12154   003FA0  B4D8               	btfsc	status,2,c
 12155   003FA2  EFD5  F01F         	goto	u12281
 12156   003FA6  EFD7  F01F         	goto	u12280
 12157   003FAA                     u12281:
 12158   003FAA  EFCD  F01F         	goto	l13269
 12159   003FAE                     u12280:
 12160   003FAE                     
 12161                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
 12162   003FAE  0100               	movlb	0	; () banked
 12163   003FB0  51E6               	movf	I2C_Read1ByteRegister@returnValue& (0+255),w,b
 12164   003FB2                     
 12165                           ; BSR set to: 0
 12166   003FB2  0012               	return		;funcret
 12167   003FB4                     __end_of_I2C_Read1ByteRegister:
 12168                           	callstack 0
 12169                           
 12170 ;; *************** function _I2C_SetAddressNackCallback *****************
 12171 ;; Defined at:
 12172 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
 12173 ;; Parameters:    Size  Location     Type
 12174 ;;  cb              2    4[BANK0 ] PTR FTN(PTR void ,)enum 
 12175 ;;		 -> NULL(1), 
 12176 ;;  ptr             2    6[BANK0 ] PTR void 
 12177 ;;		 -> NULL(0), 
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;		None
 12180 ;; Return value:  Size  Location     Type
 12181 ;;                  1    wreg      void 
 12182 ;; Registers used:
 12183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12184 ;; Tracked objects:
 12185 ;;		On entry : 0/0
 12186 ;;		On exit  : 0/0
 12187 ;;		Unchanged: 0/0
 12188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12189 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12192 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12193 ;;Total ram usage:        4 bytes
 12194 ;; Hardware stack levels used: 1
 12195 ;; Hardware stack levels required when called: 10
 12196 ;; This function calls:
 12197 ;;		_I2C_SetCallback
 12198 ;; This function is called by:
 12199 ;;		_I2C_Read1ByteRegister
 12200 ;;		_I2C_Read2ByteRegister
 12201 ;;		_I2C_Write1ByteRegister
 12202 ;;		_I2C_Write2ByteRegister
 12203 ;;		_I2C_WriteNBytes
 12204 ;;		_I2C_ReadDataBlock
 12205 ;; This function uses a non-reentrant model
 12206 ;;
 12207                           
 12208                           	psect	text33
 12209   004A12                     __ptext33:
 12210                           	callstack 0
 12211   004A12                     _I2C_SetAddressNackCallback:
 12212                           	callstack 18
 12213   004A12                     
 12214                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 12215   004A12  C0D9  F0D5         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
 12216   004A16  C0DA  F0D6         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
 12217   004A1A  C0DB  F0D7         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
 12218   004A1E  0E02               	movlw	2
 12219   004A20  EC14  F022         	call	_I2C_SetCallback
 12220   004A24  0012               	return		;funcret
 12221   004A26                     __end_of_I2C_SetAddressNackCallback:
 12222                           	callstack 0
 12223                           
 12224 ;; *************** function _I2C_Open *****************
 12225 ;; Defined at:
 12226 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
 12227 ;; Parameters:    Size  Location     Type
 12228 ;;  address         1    wreg     unsigned char 
 12229 ;; Auto vars:     Size  Location     Type
 12230 ;;  address         1    0[BANK0 ] unsigned char 
 12231 ;;  returnValue     1    1[BANK0 ] enum E358
 12232 ;; Return value:  Size  Location     Type
 12233 ;;                  1    wreg      enum E358
 12234 ;; Registers used:
 12235 ;;		wreg, status,2, status,0, cstack
 12236 ;; Tracked objects:
 12237 ;;		On entry : 0/0
 12238 ;;		On exit  : 0/0
 12239 ;;		Unchanged: 0/0
 12240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12241 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12242 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12244 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12245 ;;Total ram usage:        2 bytes
 12246 ;; Hardware stack levels used: 1
 12247 ;; Hardware stack levels required when called: 10
 12248 ;; This function calls:
 12249 ;;		_I2C_MasterClearIrq
 12250 ;;		_I2C_MasterOpen
 12251 ;; This function is called by:
 12252 ;;		_I2C_Read1ByteRegister
 12253 ;;		_I2C_Read2ByteRegister
 12254 ;;		_I2C_Write1ByteRegister
 12255 ;;		_I2C_Write2ByteRegister
 12256 ;;		_I2C_WriteNBytes
 12257 ;;		_I2C_ReadNBytes
 12258 ;;		_I2C_ReadDataBlock
 12259 ;; This function uses a non-reentrant model
 12260 ;;
 12261                           
 12262                           	psect	text34
 12263   003FB4                     __ptext34:
 12264                           	callstack 0
 12265   003FB4                     _I2C_Open:
 12266                           	callstack 18
 12267                           
 12268                           ;incstack = 0
 12269                           ;I2C_Open@address stored from wreg
 12270   003FB4  0100               	movlb	0	; () banked
 12271   003FB6  6FD5               	movwf	I2C_Open@address& (0+255),b
 12272   003FB8                     
 12273                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 12274   003FB8  0E01               	movlw	1
 12275   003FBA  0100               	movlb	0	; () banked
 12276   003FBC  6FD6               	movwf	I2C_Open@returnValue& (0+255),b
 12277   003FBE                     
 12278                           ; BSR set to: 0
 12279                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
 12280   003FBE  B57C               	btfsc	(_I2C_Status+28)& (0+255),2,b
 12281   003FC0  EFE4  F01F         	goto	u12121
 12282   003FC4  EFE6  F01F         	goto	u12120
 12283   003FC8                     u12121:
 12284   003FC8  EF11  F020         	goto	l13087
 12285   003FCC                     u12120:
 12286   003FCC                     
 12287                           ; BSR set to: 0
 12288                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
 12289   003FCC  C0D5  F076         	movff	I2C_Open@address,_I2C_Status+22
 12290   003FD0                     
 12291                           ; BSR set to: 0
 12292                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
 12293   003FD0  937C               	bcf	(_I2C_Status+28)& (0+255),1,b
 12294   003FD2                     
 12295                           ; BSR set to: 0
 12296                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
 12297   003FD2  857C               	bsf	(_I2C_Status+28)& (0+255),2,b
 12298   003FD4                     
 12299                           ; BSR set to: 0
 12300                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
 12301   003FD4  917C               	bcf	(_I2C_Status+28)& (0+255),0,b
 12302   003FD6                     
 12303                           ; BSR set to: 0
 12304                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
 12305   003FD6  0E0E               	movlw	14
 12306   003FD8  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
 12307   003FDA                     
 12308                           ; BSR set to: 0
 12309                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
 12310   003FDA  0E01               	movlw	1
 12311   003FDC  6F75               	movwf	(_I2C_Status+21)& (0+255),b
 12312   003FDE  0EF4               	movlw	244
 12313   003FE0  6F74               	movwf	(_I2C_Status+20)& (0+255),b
 12314   003FE2                     
 12315                           ; BSR set to: 0
 12316                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
 12317   003FE2  877C               	bsf	(_I2C_Status+28)& (0+255),3,b
 12318   003FE4                     
 12319                           ; BSR set to: 0
 12320                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 12321   003FE4  0E5A               	movlw	low _I2C_CallbackReturnStop
 12322   003FE6  6F60               	movwf	_I2C_Status& (0+255),b
 12323   003FE8  0E4B               	movlw	high _I2C_CallbackReturnStop
 12324   003FEA  6F61               	movwf	(_I2C_Status+1)& (0+255),b
 12325   003FEC                     
 12326                           ; BSR set to: 0
 12327                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 12328   003FEC  6B6C               	clrf	(_I2C_Status+12)& (0+255),b
 12329   003FEE                     
 12330                           ; BSR set to: 0
 12331                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 12332   003FEE  0E5A               	movlw	low _I2C_CallbackReturnStop
 12333   003FF0  6F62               	movwf	(_I2C_Status+2)& (0+255),b
 12334   003FF2  0E4B               	movlw	high _I2C_CallbackReturnStop
 12335   003FF4  6F63               	movwf	(_I2C_Status+3)& (0+255),b
 12336   003FF6                     
 12337                           ; BSR set to: 0
 12338                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 12339   003FF6  6B6D               	clrf	(_I2C_Status+13)& (0+255),b
 12340   003FF8                     
 12341                           ; BSR set to: 0
 12342                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 12343   003FF8  0E5A               	movlw	low _I2C_CallbackReturnStop
 12344   003FFA  6F64               	movwf	(_I2C_Status+4)& (0+255),b
 12345   003FFC  0E4B               	movlw	high _I2C_CallbackReturnStop
 12346   003FFE  6F65               	movwf	(_I2C_Status+5)& (0+255),b
 12347   004000                     
 12348                           ; BSR set to: 0
 12349                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 12350   004000  6B6E               	clrf	(_I2C_Status+14)& (0+255),b
 12351   004002                     
 12352                           ; BSR set to: 0
 12353                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 12354   004002  0E5A               	movlw	low _I2C_CallbackReturnStop
 12355   004004  6F66               	movwf	(_I2C_Status+6)& (0+255),b
 12356   004006  0E4B               	movlw	high _I2C_CallbackReturnStop
 12357   004008  6F67               	movwf	(_I2C_Status+7)& (0+255),b
 12358   00400A                     
 12359                           ; BSR set to: 0
 12360                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 12361   00400A  6B6F               	clrf	(_I2C_Status+15)& (0+255),b
 12362   00400C                     
 12363                           ; BSR set to: 0
 12364                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 12365   00400C  0E56               	movlw	low _I2C_CallbackReturnReset
 12366   00400E  6F68               	movwf	(_I2C_Status+8)& (0+255),b
 12367   004010  0E4B               	movlw	high _I2C_CallbackReturnReset
 12368   004012  6F69               	movwf	(_I2C_Status+9)& (0+255),b
 12369   004014                     
 12370                           ; BSR set to: 0
 12371                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 12372   004014  6B70               	clrf	(_I2C_Status+16)& (0+255),b
 12373   004016                     
 12374                           ; BSR set to: 0
 12375                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
 12376   004016  ECB9  F025         	call	_I2C_MasterClearIrq	;wreg free
 12377                           
 12378                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
 12379   00401A  EC8B  F024         	call	_I2C_MasterOpen	;wreg free
 12380   00401E                     
 12381                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
 12382   00401E  0100               	movlb	0	; () banked
 12383   004020  6BD6               	clrf	I2C_Open@returnValue& (0+255),b
 12384   004022                     l13087:
 12385                           
 12386                           ; BSR set to: 0
 12387                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
 12388   004022  51D6               	movf	I2C_Open@returnValue& (0+255),w,b
 12389   004024                     
 12390                           ; BSR set to: 0
 12391   004024  0012               	return		;funcret
 12392   004026                     __end_of_I2C_Open:
 12393                           	callstack 0
 12394                           
 12395 ;; *************** function _I2C_MasterOpen *****************
 12396 ;; Defined at:
 12397 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
 12398 ;; Parameters:    Size  Location     Type
 12399 ;;		None
 12400 ;; Auto vars:     Size  Location     Type
 12401 ;;		None
 12402 ;; Return value:  Size  Location     Type
 12403 ;;                  1    wreg      _Bool 
 12404 ;; Registers used:
 12405 ;;		wreg, status,2
 12406 ;; Tracked objects:
 12407 ;;		On entry : 0/0
 12408 ;;		On exit  : 0/0
 12409 ;;		Unchanged: 0/0
 12410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12415 ;;Total ram usage:        0 bytes
 12416 ;; Hardware stack levels used: 1
 12417 ;; Hardware stack levels required when called: 9
 12418 ;; This function calls:
 12419 ;;		Nothing
 12420 ;; This function is called by:
 12421 ;;		_I2C_Open
 12422 ;; This function uses a non-reentrant model
 12423 ;;
 12424                           
 12425                           	psect	text35
 12426   004916                     __ptext35:
 12427                           	callstack 0
 12428   004916                     _I2C_MasterOpen:
 12429                           	callstack 18
 12430   004916                     
 12431                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
 12432   004916  BAC6               	btfsc	198,5,c	;volatile
 12433   004918  EF90  F024         	goto	u11281
 12434   00491C  EF92  F024         	goto	u11280
 12435   004920                     u11281:
 12436   004920  EF9A  F024         	goto	l519
 12437   004924                     u11280:
 12438   004924                     
 12439                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x80;
 12440   004924  0E80               	movlw	128
 12441   004926  6EC7               	movwf	199,c	;volatile
 12442                           
 12443                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
 12444   004928  0E08               	movlw	8
 12445   00492A  6EC6               	movwf	198,c	;volatile
 12446   00492C                     
 12447                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
 12448   00492C  6AC5               	clrf	197,c	;volatile
 12449                           
 12450                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x27;
 12451   00492E  0E27               	movlw	39
 12452   004930  6EC8               	movwf	200,c	;volatile
 12453   004932                     
 12454                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
 12455   004932  8AC6               	bsf	198,5,c	;volatile
 12456   004934                     l519:
 12457   004934  0012               	return		;funcret
 12458   004936                     __end_of_I2C_MasterOpen:
 12459                           	callstack 0
 12460                           
 12461 ;; *************** function _I2C_MasterWrite *****************
 12462 ;; Defined at:
 12463 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
 12464 ;; Parameters:    Size  Location     Type
 12465 ;;		None
 12466 ;; Auto vars:     Size  Location     Type
 12467 ;;		None
 12468 ;; Return value:  Size  Location     Type
 12469 ;;                  1    wreg      enum E358
 12470 ;; Registers used:
 12471 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12472 ;; Tracked objects:
 12473 ;;		On entry : 0/0
 12474 ;;		On exit  : 0/0
 12475 ;;		Unchanged: 0/0
 12476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12481 ;;Total ram usage:        0 bytes
 12482 ;; Hardware stack levels used: 1
 12483 ;; Hardware stack levels required when called: 16
 12484 ;; This function calls:
 12485 ;;		_I2C_MasterOperation
 12486 ;; This function is called by:
 12487 ;;		_I2C_Read1ByteRegister
 12488 ;;		_I2C_Read2ByteRegister
 12489 ;;		_I2C_Write1ByteRegister
 12490 ;;		_I2C_Write2ByteRegister
 12491 ;;		_I2C_WriteNBytes
 12492 ;;		_I2C_ReadDataBlock
 12493 ;; This function uses a non-reentrant model
 12494 ;;
 12495                           
 12496                           	psect	text36
 12497   004AF6                     __ptext36:
 12498                           	callstack 0
 12499   004AF6                     _I2C_MasterWrite:
 12500                           	callstack 12
 12501   004AF6                     
 12502                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
 12503   004AF6  0E00               	movlw	0
 12504   004AF8  EC37  F023         	call	_I2C_MasterOperation
 12505   004AFC  0012               	return		;funcret
 12506   004AFE                     __end_of_I2C_MasterWrite:
 12507                           	callstack 0
 12508                           
 12509 ;; *************** function _I2C_MasterOperation *****************
 12510 ;; Defined at:
 12511 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
 12512 ;; Parameters:    Size  Location     Type
 12513 ;;  read            1    wreg     _Bool 
 12514 ;; Auto vars:     Size  Location     Type
 12515 ;;  read            1   13[BANK0 ] _Bool 
 12516 ;;  returnValue     1   14[BANK0 ] enum E358
 12517 ;; Return value:  Size  Location     Type
 12518 ;;                  1    wreg      enum E358
 12519 ;; Registers used:
 12520 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12521 ;; Tracked objects:
 12522 ;;		On entry : 0/0
 12523 ;;		On exit  : 0/0
 12524 ;;		Unchanged: 0/0
 12525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12527 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12529 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12530 ;;Total ram usage:        2 bytes
 12531 ;; Hardware stack levels used: 1
 12532 ;; Hardware stack levels required when called: 15
 12533 ;; This function calls:
 12534 ;;		_I2C_MasterStart
 12535 ;;		_I2C_Poller
 12536 ;; This function is called by:
 12537 ;;		_I2C_MasterWrite
 12538 ;;		_I2C_MasterRead
 12539 ;; This function uses a non-reentrant model
 12540 ;;
 12541                           
 12542                           	psect	text37
 12543   00466E                     __ptext37:
 12544                           	callstack 0
 12545   00466E                     _I2C_MasterOperation:
 12546                           	callstack 12
 12547                           
 12548                           ;incstack = 0
 12549                           ;I2C_MasterOperation@read stored from wreg
 12550   00466E  0100               	movlb	0	; () banked
 12551   004670  6FE2               	movwf	I2C_MasterOperation@read& (0+255),b
 12552   004672                     
 12553                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 12554   004672  0E01               	movlw	1
 12555   004674  0100               	movlb	0	; () banked
 12556   004676  6FE3               	movwf	I2C_MasterOperation@returnValue& (0+255),b
 12557   004678                     
 12558                           ; BSR set to: 0
 12559                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
 12560   004678  B37C               	btfsc	(_I2C_Status+28)& (0+255),1,b
 12561   00467A  EF41  F023         	goto	u11291
 12562   00467E  EF43  F023         	goto	u11290
 12563   004682                     u11291:
 12564   004682  EF57  F023         	goto	l12609
 12565   004686                     u11290:
 12566   004686                     
 12567                           ; BSR set to: 0
 12568                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 12569   004686  837C               	bsf	(_I2C_Status+28)& (0+255),1,b
 12570                           
 12571                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 12572   004688  6BE3               	clrf	I2C_MasterOperation@returnValue& (0+255),b
 12573   00468A                     
 12574                           ; BSR set to: 0
 12575                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 12576   00468A  51E2               	movf	I2C_MasterOperation@read& (0+255),w,b
 12577   00468C  B4D8               	btfsc	status,2,c
 12578   00468E  EF4B  F023         	goto	u11301
 12579   004692  EF4D  F023         	goto	u11300
 12580   004696                     u11301:
 12581   004696  EF51  F023         	goto	l12603
 12582   00469A                     u11300:
 12583   00469A                     
 12584                           ; BSR set to: 0
 12585                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 12586   00469A  0E01               	movlw	1
 12587   00469C  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
 12588                           
 12589                           ;mcc_generated_files/i2c_master.c: 235:         }
 12590   00469E  EF53  F023         	goto	l12605
 12591   0046A2                     l12603:
 12592                           
 12593                           ; BSR set to: 0
 12594                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 12595   0046A2  0E02               	movlw	2
 12596   0046A4  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
 12597   0046A6                     l12605:
 12598                           
 12599                           ; BSR set to: 0
 12600                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 12601   0046A6  ECB3  F025         	call	_I2C_MasterStart	;wreg free
 12602   0046AA                     
 12603                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 12604   0046AA  ECAB  F024         	call	_I2C_Poller	;wreg free
 12605   0046AE                     l12609:
 12606                           
 12607                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 12608   0046AE  0100               	movlb	0	; () banked
 12609   0046B0  51E3               	movf	I2C_MasterOperation@returnValue& (0+255),w,b
 12610   0046B2                     
 12611                           ; BSR set to: 0
 12612   0046B2  0012               	return		;funcret
 12613   0046B4                     __end_of_I2C_MasterOperation:
 12614                           	callstack 0
 12615                           
 12616 ;; *************** function _I2C_Poller *****************
 12617 ;; Defined at:
 12618 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 12619 ;; Parameters:    Size  Location     Type
 12620 ;;		None
 12621 ;; Auto vars:     Size  Location     Type
 12622 ;;		None
 12623 ;; Return value:  Size  Location     Type
 12624 ;;                  1    wreg      void 
 12625 ;; Registers used:
 12626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12627 ;; Tracked objects:
 12628 ;;		On entry : 0/0
 12629 ;;		On exit  : 0/0
 12630 ;;		Unchanged: 0/0
 12631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12636 ;;Total ram usage:        0 bytes
 12637 ;; Hardware stack levels used: 1
 12638 ;; Hardware stack levels required when called: 14
 12639 ;; This function calls:
 12640 ;;		_I2C_MasterFsm
 12641 ;;		_I2C_MasterWaitForEvent
 12642 ;; This function is called by:
 12643 ;;		_I2C_MasterOperation
 12644 ;; This function uses a non-reentrant model
 12645 ;;
 12646                           
 12647                           	psect	text38
 12648   004956                     __ptext38:
 12649                           	callstack 0
 12650   004956                     _I2C_Poller:
 12651                           	callstack 12
 12652   004956                     
 12653                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 12654   004956  EFB1  F024         	goto	l12501
 12655   00495A                     l12497:
 12656                           
 12657                           ; BSR set to: 0
 12658                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 12659   00495A  EC30  F025         	call	_I2C_MasterWaitForEvent	;wreg free
 12660   00495E                     
 12661                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 12662   00495E  EC4A  F020         	call	_I2C_MasterFsm	;wreg free
 12663   004962                     l12501:
 12664                           
 12665                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 12666   004962  0100               	movlb	0	; () banked
 12667   004964  B37C               	btfsc	(_I2C_Status+28)& (0+255),1,b
 12668   004966  EFB7  F024         	goto	u11111
 12669   00496A  EFB9  F024         	goto	u11110
 12670   00496E                     u11111:
 12671   00496E  EFAD  F024         	goto	l12497
 12672   004972                     u11110:
 12673   004972                     
 12674                           ; BSR set to: 0
 12675   004972  0012               	return		;funcret
 12676   004974                     __end_of_I2C_Poller:
 12677                           	callstack 0
 12678                           
 12679 ;; *************** function _I2C_MasterWaitForEvent *****************
 12680 ;; Defined at:
 12681 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 12682 ;; Parameters:    Size  Location     Type
 12683 ;;		None
 12684 ;; Auto vars:     Size  Location     Type
 12685 ;;		None
 12686 ;; Return value:  Size  Location     Type
 12687 ;;                  1    wreg      void 
 12688 ;; Registers used:
 12689 ;;		None
 12690 ;; Tracked objects:
 12691 ;;		On entry : 0/0
 12692 ;;		On exit  : 0/0
 12693 ;;		Unchanged: 0/0
 12694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12699 ;;Total ram usage:        0 bytes
 12700 ;; Hardware stack levels used: 1
 12701 ;; Hardware stack levels required when called: 9
 12702 ;; This function calls:
 12703 ;;		Nothing
 12704 ;; This function is called by:
 12705 ;;		_I2C_Poller
 12706 ;; This function uses a non-reentrant model
 12707 ;;
 12708                           
 12709                           	psect	text39
 12710   004A60                     __ptext39:
 12711                           	callstack 0
 12712   004A60                     _I2C_MasterWaitForEvent:
 12713                           	callstack 16
 12714   004A60                     l576:
 12715                           
 12716                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
 12717   004A60  A69E               	btfss	158,3,c	;volatile
 12718   004A62  EF35  F025         	goto	u10951
 12719   004A66  EF37  F025         	goto	u10950
 12720   004A6A                     u10951:
 12721   004A6A  EF30  F025         	goto	l576
 12722   004A6E                     u10950:
 12723   004A6E  0012               	return		;funcret
 12724   004A70                     __end_of_I2C_MasterWaitForEvent:
 12725                           	callstack 0
 12726                           
 12727 ;; *************** function _I2C_MasterFsm *****************
 12728 ;; Defined at:
 12729 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 12730 ;; Parameters:    Size  Location     Type
 12731 ;;		None
 12732 ;; Auto vars:     Size  Location     Type
 12733 ;;		None
 12734 ;; Return value:  Size  Location     Type
 12735 ;;                  1    wreg      void 
 12736 ;; Registers used:
 12737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12738 ;; Tracked objects:
 12739 ;;		On entry : 0/0
 12740 ;;		On exit  : 0/0
 12741 ;;		Unchanged: 0/0
 12742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12745 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12746 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12747 ;;Total ram usage:        3 bytes
 12748 ;; Hardware stack levels used: 1
 12749 ;; Hardware stack levels required when called: 13
 12750 ;; This function calls:
 12751 ;;		_I2C_DO_ADDRESS_NACK
 12752 ;;		_I2C_DO_IDLE
 12753 ;;		_I2C_DO_RCEN
 12754 ;;		_I2C_DO_RESET
 12755 ;;		_I2C_DO_RX
 12756 ;;		_I2C_DO_RX_ACK
 12757 ;;		_I2C_DO_RX_NACK_RESTART
 12758 ;;		_I2C_DO_RX_NACK_STOP
 12759 ;;		_I2C_DO_SEND_ADR_READ
 12760 ;;		_I2C_DO_SEND_ADR_WRITE
 12761 ;;		_I2C_DO_SEND_RESTART
 12762 ;;		_I2C_DO_SEND_RESTART_READ
 12763 ;;		_I2C_DO_SEND_RESTART_WRITE
 12764 ;;		_I2C_DO_SEND_STOP
 12765 ;;		_I2C_DO_TX
 12766 ;;		_I2C_DO_TX_EMPTY
 12767 ;;		_I2C_MasterClearIrq
 12768 ;;		_I2C_MasterIsNack
 12769 ;; This function is called by:
 12770 ;;		_I2C_Poller
 12771 ;; This function uses a non-reentrant model
 12772 ;;
 12773                           
 12774                           	psect	text40
 12775   004094                     __ptext40:
 12776                           	callstack 0
 12777   004094                     _I2C_MasterFsm:
 12778                           	callstack 12
 12779   004094                     
 12780                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 12781   004094  ECB9  F025         	call	_I2C_MasterClearIrq	;wreg free
 12782   004098                     
 12783                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 12784   004098  0100               	movlb	0	; () banked
 12785   00409A  A17C               	btfss	(_I2C_Status+28)& (0+255),0,b
 12786   00409C  EF52  F020         	goto	u10961
 12787   0040A0  EF54  F020         	goto	u10960
 12788   0040A4                     u10961:
 12789   0040A4  EF61  F020         	goto	l12449
 12790   0040A8                     u10960:
 12791   0040A8                     
 12792                           ; BSR set to: 0
 12793   0040A8  EC13  F025         	call	_I2C_MasterIsNack	;wreg free
 12794   0040AC  0900               	iorlw	0
 12795   0040AE  B4D8               	btfsc	status,2,c
 12796   0040B0  EF5C  F020         	goto	u10971
 12797   0040B4  EF5E  F020         	goto	u10970
 12798   0040B8                     u10971:
 12799   0040B8  EF61  F020         	goto	l12449
 12800   0040BC                     u10970:
 12801   0040BC                     
 12802                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 12803   0040BC  0E0F               	movlw	15
 12804   0040BE  0100               	movlb	0	; () banked
 12805   0040C0  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
 12806   0040C2                     l12449:
 12807                           
 12808                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 12809   0040C2  0100               	movlb	0	; () banked
 12810   0040C4  517A               	movf	(_I2C_Status+26)& (0+255),w,b
 12811   0040C6  0D02               	mullw	2
 12812   0040C8  50F3               	movf	243,w,c
 12813   0040CA  0F01               	addlw	low _i2c_fsmStateTable
 12814   0040CC  6FDF               	movwf	??_I2C_MasterFsm& (0+255),b
 12815   0040CE  C0DF  FFF6         	movff	??_I2C_MasterFsm,tblptrl
 12816   0040D2                     	if	1	;There is more than 1 active tblptr byte
 12817   0040D2  0E10               	movlw	high __smallconst
 12818   0040D4  6EF7               	movwf	tblptrh,c
 12819   0040D6                     	endif
 12820   0040D6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 12821   0040D6  6AF8               	clrf	tblptru,c
 12822   0040D8                     	endif
 12823   0040D8                     	if	0	;tblptru may be non-zero
 12824   0040D8                     	endif
 12825   0040D8  0009               	tblrd		*+
 12826   0040DA  CFF5 F0E0          	movff	tablat,??_I2C_MasterFsm+1
 12827   0040DE  0009               	tblrd		*+
 12828   0040E0  CFF5 F0E1          	movff	tablat,??_I2C_MasterFsm+2
 12829   0040E4  D802               	call	u10988
 12830   0040E6  EF7E  F020         	goto	u10989
 12831   0040EA                     u10988:
 12832   0040EA  0005               	push	
 12833   0040EC  6EFA               	movwf	pclath,c
 12834   0040EE  51E0               	movf	(??_I2C_MasterFsm+1)& (0+255),w,b
 12835   0040F0  6EFD               	movwf	tosl,c
 12836   0040F2  51E1               	movf	(??_I2C_MasterFsm+2)& (0+255),w,b
 12837   0040F4  6EFE               	movwf	tosh,c
 12838   0040F6  6AFF               	clrf	tosu,c
 12839   0040F8  50FA               	movf	pclath,w,c
 12840   0040FA  0012               	return		;indir
 12841   0040FC                     u10989:
 12842   0040FC  0100               	movlb	0	; () banked
 12843   0040FE  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
 12844   004100                     
 12845                           ; BSR set to: 0
 12846   004100  0012               	return		;funcret
 12847   004102                     __end_of_I2C_MasterFsm:
 12848                           	callstack 0
 12849                           
 12850 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 12851 ;; Defined at:
 12852 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 12853 ;; Parameters:    Size  Location     Type
 12854 ;;		None
 12855 ;; Auto vars:     Size  Location     Type
 12856 ;;		None
 12857 ;; Return value:  Size  Location     Type
 12858 ;;                  1    wreg      enum E3128
 12859 ;; Registers used:
 12860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 12861 ;; Tracked objects:
 12862 ;;		On entry : 0/0
 12863 ;;		On exit  : 0/0
 12864 ;;		Unchanged: 0/0
 12865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12868 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12869 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12870 ;;Total ram usage:        2 bytes
 12871 ;; Hardware stack levels used: 1
 12872 ;; Hardware stack levels required when called: 12
 12873 ;; This function calls:
 12874 ;;		NULL
 12875 ;;		_I2C_CallbackReturnReset
 12876 ;;		_I2C_CallbackReturnStop
 12877 ;;		_I2C_DO_SEND_RESTART
 12878 ;;		_I2C_DO_SEND_STOP
 12879 ;;		_rd1RegCompleteHandler
 12880 ;;		_rd2RegCompleteHandler
 12881 ;;		_rdBlkRegCompleteHandler
 12882 ;;		_wr1RegCompleteHandler
 12883 ;;		_wr2RegCompleteHandler
 12884 ;; This function is called by:
 12885 ;;		_I2C_MasterFsm
 12886 ;; This function uses a non-reentrant model
 12887 ;;
 12888                           
 12889                           	psect	text41
 12890   0042A2                     __ptext41:
 12891                           	callstack 0
 12892   0042A2                     _I2C_DO_ADDRESS_NACK:
 12893                           	callstack 12
 12894   0042A2                     
 12895                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 12896   0042A2  0100               	movlb	0	; () banked
 12897   0042A4  917C               	bcf	(_I2C_Status+28)& (0+255),0,b
 12898   0042A6                     
 12899                           ; BSR set to: 0
 12900                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 12901   0042A6  0E02               	movlw	2
 12902   0042A8  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
 12903                           
 12904                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 12905   0042AA  EF5F  F021         	goto	l12433
 12906   0042AE                     l12423:
 12907                           
 12908                           ; BSR set to: 0
 12909                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 12910   0042AE  EC8F  F025         	call	_I2C_DO_SEND_RESTART	;wreg free
 12911   0042B2  EF82  F021         	goto	l498
 12912   0042B6                     l12427:
 12913                           
 12914                           ; BSR set to: 0
 12915                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 12916   0042B6  EC8B  F025         	call	_I2C_DO_SEND_STOP	;wreg free
 12917   0042BA  EF82  F021         	goto	l498
 12918   0042BE                     l12433:
 12919                           
 12920                           ; BSR set to: 0
 12921   0042BE  C06E  F0DC         	movff	_I2C_Status+14,I2C_CallbackReturnReset@funPtr
 12922   0042C2  D802               	call	u10948
 12923   0042C4  EF6D  F021         	goto	u10949
 12924   0042C8                     u10948:
 12925   0042C8  0005               	push	
 12926   0042CA  6EFA               	movwf	pclath,c
 12927   0042CC  5164               	movf	(_I2C_Status+4)& (0+255),w,b
 12928   0042CE  6EFD               	movwf	tosl,c
 12929   0042D0  5165               	movf	(_I2C_Status+5)& (0+255),w,b
 12930   0042D2  6EFE               	movwf	tosh,c
 12931   0042D4  6AFF               	clrf	tosu,c
 12932   0042D6  50FA               	movf	pclath,w,c
 12933   0042D8  0012               	return		;indir
 12934   0042DA                     u10949:
 12935   0042DA  0100               	movlb	0	; () banked
 12936   0042DC  6FDD               	movwf	??_I2C_DO_ADDRESS_NACK& (0+255),b
 12937   0042DE  6BDE               	clrf	(??_I2C_DO_ADDRESS_NACK+1)& (0+255),b
 12938                           
 12939                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12940                           ; Switch size 1, requested type "simple"
 12941                           ; Number of cases is 1, Range of values is 0 to 0
 12942                           ; switch strategies available:
 12943                           ; Name         Instructions Cycles
 12944                           ; simple_byte            4     3 (average)
 12945                           ;	Chosen strategy is simple_byte
 12946   0042E0  51DE               	movf	(??_I2C_DO_ADDRESS_NACK+1)& (0+255),w,b
 12947   0042E2  0A00               	xorlw	0	; case 0
 12948   0042E4  B4D8               	btfsc	status,2,c
 12949   0042E6  EF77  F021         	goto	l14837
 12950   0042EA  EF5B  F021         	goto	l12427
 12951   0042EE                     l14837:
 12952                           
 12953                           ; BSR set to: 0
 12954                           ; Switch size 1, requested type "simple"
 12955                           ; Number of cases is 2, Range of values is 2 to 3
 12956                           ; switch strategies available:
 12957                           ; Name         Instructions Cycles
 12958                           ; simple_byte            7     4 (average)
 12959                           ;	Chosen strategy is simple_byte
 12960   0042EE  51DD               	movf	??_I2C_DO_ADDRESS_NACK& (0+255),w,b
 12961   0042F0  0A02               	xorlw	2	; case 2
 12962   0042F2  B4D8               	btfsc	status,2,c
 12963   0042F4  EF57  F021         	goto	l12423
 12964   0042F8  0A01               	xorlw	1	; case 3
 12965   0042FA  B4D8               	btfsc	status,2,c
 12966   0042FC  EF57  F021         	goto	l12423
 12967   004300  EF5B  F021         	goto	l12427
 12968   004304                     l498:
 12969   004304  0012               	return		;funcret
 12970   004306                     __end_of_I2C_DO_ADDRESS_NACK:
 12971                           	callstack 0
 12972                           
 12973 ;; *************** function _I2C_DO_RESET *****************
 12974 ;; Defined at:
 12975 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 12976 ;; Parameters:    Size  Location     Type
 12977 ;;		None
 12978 ;; Auto vars:     Size  Location     Type
 12979 ;;		None
 12980 ;; Return value:  Size  Location     Type
 12981 ;;                  1    wreg      enum E3128
 12982 ;; Registers used:
 12983 ;;		wreg
 12984 ;; Tracked objects:
 12985 ;;		On entry : 0/0
 12986 ;;		On exit  : 0/0
 12987 ;;		Unchanged: 0/0
 12988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12993 ;;Total ram usage:        0 bytes
 12994 ;; Hardware stack levels used: 1
 12995 ;; Hardware stack levels required when called: 9
 12996 ;; This function calls:
 12997 ;;		Nothing
 12998 ;; This function is called by:
 12999 ;;		_I2C_MasterFsm
 13000 ;; This function uses a non-reentrant model
 13001 ;;
 13002                           
 13003                           	psect	text42
 13004   004AD0                     __ptext42:
 13005                           	callstack 0
 13006   004AD0                     _I2C_DO_RESET:
 13007                           	callstack 15
 13008   004AD0                     
 13009                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 13010   004AD0  0100               	movlb	0	; () banked
 13011   004AD2  937C               	bcf	(_I2C_Status+28)& (0+255),1,b
 13012                           
 13013                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 13014   004AD4  6B7B               	clrf	(_I2C_Status+27)& (0+255),b
 13015   004AD6                     
 13016                           ; BSR set to: 0
 13017                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 13018   004AD6  0E0E               	movlw	14
 13019   004AD8                     
 13020                           ; BSR set to: 0
 13021   004AD8  0012               	return		;funcret
 13022   004ADA                     __end_of_I2C_DO_RESET:
 13023                           	callstack 0
 13024                           
 13025 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 13026 ;; Defined at:
 13027 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 13028 ;; Parameters:    Size  Location     Type
 13029 ;;		None
 13030 ;; Auto vars:     Size  Location     Type
 13031 ;;		None
 13032 ;; Return value:  Size  Location     Type
 13033 ;;                  1    wreg      enum E3128
 13034 ;; Registers used:
 13035 ;;		wreg, cstack
 13036 ;; Tracked objects:
 13037 ;;		On entry : 0/0
 13038 ;;		On exit  : 0/0
 13039 ;;		Unchanged: 0/0
 13040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13045 ;;Total ram usage:        0 bytes
 13046 ;; Hardware stack levels used: 1
 13047 ;; Hardware stack levels required when called: 10
 13048 ;; This function calls:
 13049 ;;		_I2C_MasterSendNack
 13050 ;; This function is called by:
 13051 ;;		_I2C_DO_RX
 13052 ;;		_I2C_MasterFsm
 13053 ;; This function uses a non-reentrant model
 13054 ;;
 13055                           
 13056                           	psect	text43
 13057   004AFE                     __ptext43:
 13058                           	callstack 0
 13059   004AFE                     _I2C_DO_RX_NACK_RESTART:
 13060                           	callstack 14
 13061   004AFE                     
 13062                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 13063   004AFE  ECA2  F025         	call	_I2C_MasterSendNack	;wreg free
 13064   004B02                     
 13065                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 13066   004B02  0E09               	movlw	9
 13067   004B04  0012               	return		;funcret
 13068   004B06                     __end_of_I2C_DO_RX_NACK_RESTART:
 13069                           	callstack 0
 13070                           
 13071 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 13072 ;; Defined at:
 13073 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 13074 ;; Parameters:    Size  Location     Type
 13075 ;;		None
 13076 ;; Auto vars:     Size  Location     Type
 13077 ;;		None
 13078 ;; Return value:  Size  Location     Type
 13079 ;;                  1    wreg      enum E3128
 13080 ;; Registers used:
 13081 ;;		wreg, cstack
 13082 ;; Tracked objects:
 13083 ;;		On entry : 0/0
 13084 ;;		On exit  : 0/0
 13085 ;;		Unchanged: 0/0
 13086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13091 ;;Total ram usage:        0 bytes
 13092 ;; Hardware stack levels used: 1
 13093 ;; Hardware stack levels required when called: 10
 13094 ;; This function calls:
 13095 ;;		_I2C_MasterSendNack
 13096 ;; This function is called by:
 13097 ;;		_I2C_DO_RX
 13098 ;;		_I2C_MasterFsm
 13099 ;; This function uses a non-reentrant model
 13100 ;;
 13101                           
 13102                           	psect	text44
 13103   004B06                     __ptext44:
 13104                           	callstack 0
 13105   004B06                     _I2C_DO_RX_NACK_STOP:
 13106                           	callstack 14
 13107   004B06                     
 13108                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 13109   004B06  ECA2  F025         	call	_I2C_MasterSendNack	;wreg free
 13110   004B0A                     
 13111                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 13112   004B0A  0E0A               	movlw	10
 13113   004B0C  0012               	return		;funcret
 13114   004B0E                     __end_of_I2C_DO_RX_NACK_STOP:
 13115                           	callstack 0
 13116                           
 13117 ;; *************** function _I2C_DO_RX_ACK *****************
 13118 ;; Defined at:
 13119 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 13120 ;; Parameters:    Size  Location     Type
 13121 ;;		None
 13122 ;; Auto vars:     Size  Location     Type
 13123 ;;		None
 13124 ;; Return value:  Size  Location     Type
 13125 ;;                  1    wreg      enum E3128
 13126 ;; Registers used:
 13127 ;;		wreg, cstack
 13128 ;; Tracked objects:
 13129 ;;		On entry : 0/0
 13130 ;;		On exit  : 0/0
 13131 ;;		Unchanged: 0/0
 13132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13137 ;;Total ram usage:        0 bytes
 13138 ;; Hardware stack levels used: 1
 13139 ;; Hardware stack levels required when called: 10
 13140 ;; This function calls:
 13141 ;;		_I2C_MasterSendAck
 13142 ;; This function is called by:
 13143 ;;		_I2C_MasterFsm
 13144 ;; This function uses a non-reentrant model
 13145 ;;
 13146                           
 13147                           	psect	text45
 13148   004B0E                     __ptext45:
 13149                           	callstack 0
 13150   004B0E                     _I2C_DO_RX_ACK:
 13151                           	callstack 14
 13152   004B0E                     
 13153                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 13154   004B0E  EC9F  F025         	call	_I2C_MasterSendAck	;wreg free
 13155   004B12                     
 13156                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 13157   004B12  0E05               	movlw	5
 13158   004B14  0012               	return		;funcret
 13159   004B16                     __end_of_I2C_DO_RX_ACK:
 13160                           	callstack 0
 13161                           
 13162 ;; *************** function _I2C_DO_SEND_STOP *****************
 13163 ;; Defined at:
 13164 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 13165 ;; Parameters:    Size  Location     Type
 13166 ;;		None
 13167 ;; Auto vars:     Size  Location     Type
 13168 ;;		None
 13169 ;; Return value:  Size  Location     Type
 13170 ;;                  1    wreg      enum E3128
 13171 ;; Registers used:
 13172 ;;		wreg, cstack
 13173 ;; Tracked objects:
 13174 ;;		On entry : 0/0
 13175 ;;		On exit  : 0/0
 13176 ;;		Unchanged: 0/0
 13177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13182 ;;Total ram usage:        0 bytes
 13183 ;; Hardware stack levels used: 1
 13184 ;; Hardware stack levels required when called: 10
 13185 ;; This function calls:
 13186 ;;		_I2C_MasterStop
 13187 ;; This function is called by:
 13188 ;;		_I2C_DO_TX
 13189 ;;		_I2C_DO_TX_EMPTY
 13190 ;;		_I2C_DO_ADDRESS_NACK
 13191 ;;		_I2C_MasterFsm
 13192 ;; This function uses a non-reentrant model
 13193 ;;
 13194                           
 13195                           	psect	text46
 13196   004B16                     __ptext46:
 13197                           	callstack 0
 13198   004B16                     _I2C_DO_SEND_STOP:
 13199                           	callstack 13
 13200   004B16                     
 13201                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 13202   004B16  ECAF  F025         	call	_I2C_MasterStop	;wreg free
 13203   004B1A                     
 13204                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 13205   004B1A  0E00               	movlw	0
 13206   004B1C  0012               	return		;funcret
 13207   004B1E                     __end_of_I2C_DO_SEND_STOP:
 13208                           	callstack 0
 13209                           
 13210 ;; *************** function _I2C_DO_SEND_RESTART *****************
 13211 ;; Defined at:
 13212 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 13213 ;; Parameters:    Size  Location     Type
 13214 ;;		None
 13215 ;; Auto vars:     Size  Location     Type
 13216 ;;		None
 13217 ;; Return value:  Size  Location     Type
 13218 ;;                  1    wreg      enum E3128
 13219 ;; Registers used:
 13220 ;;		wreg, cstack
 13221 ;; Tracked objects:
 13222 ;;		On entry : 0/0
 13223 ;;		On exit  : 0/0
 13224 ;;		Unchanged: 0/0
 13225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13230 ;;Total ram usage:        0 bytes
 13231 ;; Hardware stack levels used: 1
 13232 ;; Hardware stack levels required when called: 10
 13233 ;; This function calls:
 13234 ;;		_I2C_MasterEnableRestart
 13235 ;; This function is called by:
 13236 ;;		_I2C_DO_TX_EMPTY
 13237 ;;		_I2C_DO_ADDRESS_NACK
 13238 ;;		_I2C_MasterFsm
 13239 ;; This function uses a non-reentrant model
 13240 ;;
 13241                           
 13242                           	psect	text47
 13243   004B1E                     __ptext47:
 13244                           	callstack 0
 13245   004B1E                     _I2C_DO_SEND_RESTART:
 13246                           	callstack 13
 13247   004B1E                     
 13248                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 13249   004B1E  ECB1  F025         	call	_I2C_MasterEnableRestart	;wreg free
 13250   004B22                     
 13251                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 13252   004B22  0E01               	movlw	1
 13253   004B24  0012               	return		;funcret
 13254   004B26                     __end_of_I2C_DO_SEND_RESTART:
 13255                           	callstack 0
 13256                           
 13257 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 13258 ;; Defined at:
 13259 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 13260 ;; Parameters:    Size  Location     Type
 13261 ;;		None
 13262 ;; Auto vars:     Size  Location     Type
 13263 ;;		None
 13264 ;; Return value:  Size  Location     Type
 13265 ;;                  1    wreg      enum E3128
 13266 ;; Registers used:
 13267 ;;		wreg, cstack
 13268 ;; Tracked objects:
 13269 ;;		On entry : 0/0
 13270 ;;		On exit  : 0/0
 13271 ;;		Unchanged: 0/0
 13272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13277 ;;Total ram usage:        0 bytes
 13278 ;; Hardware stack levels used: 1
 13279 ;; Hardware stack levels required when called: 10
 13280 ;; This function calls:
 13281 ;;		_I2C_MasterEnableRestart
 13282 ;; This function is called by:
 13283 ;;		_I2C_DO_TX
 13284 ;;		_I2C_MasterFsm
 13285 ;; This function uses a non-reentrant model
 13286 ;;
 13287                           
 13288                           	psect	text48
 13289   004B26                     __ptext48:
 13290                           	callstack 0
 13291   004B26                     _I2C_DO_SEND_RESTART_WRITE:
 13292                           	callstack 13
 13293   004B26                     
 13294                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 13295   004B26  ECB1  F025         	call	_I2C_MasterEnableRestart	;wreg free
 13296   004B2A                     
 13297                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 13298   004B2A  0E02               	movlw	2
 13299   004B2C  0012               	return		;funcret
 13300   004B2E                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 13301                           	callstack 0
 13302                           
 13303 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 13304 ;; Defined at:
 13305 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 13306 ;; Parameters:    Size  Location     Type
 13307 ;;		None
 13308 ;; Auto vars:     Size  Location     Type
 13309 ;;		None
 13310 ;; Return value:  Size  Location     Type
 13311 ;;                  1    wreg      enum E3128
 13312 ;; Registers used:
 13313 ;;		wreg, cstack
 13314 ;; Tracked objects:
 13315 ;;		On entry : 0/0
 13316 ;;		On exit  : 0/0
 13317 ;;		Unchanged: 0/0
 13318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13323 ;;Total ram usage:        0 bytes
 13324 ;; Hardware stack levels used: 1
 13325 ;; Hardware stack levels required when called: 10
 13326 ;; This function calls:
 13327 ;;		_I2C_MasterEnableRestart
 13328 ;; This function is called by:
 13329 ;;		_I2C_DO_TX
 13330 ;;		_I2C_MasterFsm
 13331 ;; This function uses a non-reentrant model
 13332 ;;
 13333                           
 13334                           	psect	text49
 13335   004B2E                     __ptext49:
 13336                           	callstack 0
 13337   004B2E                     _I2C_DO_SEND_RESTART_READ:
 13338                           	callstack 13
 13339   004B2E                     
 13340                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 13341   004B2E  ECB1  F025         	call	_I2C_MasterEnableRestart	;wreg free
 13342   004B32                     
 13343                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 13344   004B32  0E01               	movlw	1
 13345   004B34  0012               	return		;funcret
 13346   004B36                     __end_of_I2C_DO_SEND_RESTART_READ:
 13347                           	callstack 0
 13348                           
 13349 ;; *************** function _I2C_DO_RCEN *****************
 13350 ;; Defined at:
 13351 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;		None
 13354 ;; Auto vars:     Size  Location     Type
 13355 ;;		None
 13356 ;; Return value:  Size  Location     Type
 13357 ;;                  1    wreg      enum E3128
 13358 ;; Registers used:
 13359 ;;		wreg, cstack
 13360 ;; Tracked objects:
 13361 ;;		On entry : 0/0
 13362 ;;		On exit  : 0/0
 13363 ;;		Unchanged: 0/0
 13364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13369 ;;Total ram usage:        0 bytes
 13370 ;; Hardware stack levels used: 1
 13371 ;; Hardware stack levels required when called: 10
 13372 ;; This function calls:
 13373 ;;		_I2C_MasterStartRx
 13374 ;; This function is called by:
 13375 ;;		_I2C_MasterFsm
 13376 ;; This function uses a non-reentrant model
 13377 ;;
 13378                           
 13379                           	psect	text50
 13380   004AB8                     __ptext50:
 13381                           	callstack 0
 13382   004AB8                     _I2C_DO_RCEN:
 13383                           	callstack 14
 13384   004AB8                     
 13385                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 13386   004AB8  0100               	movlb	0	; () banked
 13387   004ABA  917C               	bcf	(_I2C_Status+28)& (0+255),0,b
 13388   004ABC                     
 13389                           ; BSR set to: 0
 13390                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 13391   004ABC  ECA9  F025         	call	_I2C_MasterStartRx	;wreg free
 13392   004AC0                     
 13393                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 13394   004AC0  0E04               	movlw	4
 13395   004AC2  0012               	return		;funcret
 13396   004AC4                     __end_of_I2C_DO_RCEN:
 13397                           	callstack 0
 13398                           
 13399 ;; *************** function _I2C_DO_RX *****************
 13400 ;; Defined at:
 13401 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 13402 ;; Parameters:    Size  Location     Type
 13403 ;;		None
 13404 ;; Auto vars:     Size  Location     Type
 13405 ;;		None
 13406 ;; Return value:  Size  Location     Type
 13407 ;;                  1    wreg      enum E3128
 13408 ;; Registers used:
 13409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13410 ;; Tracked objects:
 13411 ;;		On entry : 0/0
 13412 ;;		On exit  : 0/0
 13413 ;;		Unchanged: 0/0
 13414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13417 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13418 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13419 ;;Total ram usage:        2 bytes
 13420 ;; Hardware stack levels used: 1
 13421 ;; Hardware stack levels required when called: 12
 13422 ;; This function calls:
 13423 ;;		NULL
 13424 ;;		_I2C_CallbackReturnReset
 13425 ;;		_I2C_CallbackReturnStop
 13426 ;;		_I2C_DO_RX_NACK_RESTART
 13427 ;;		_I2C_DO_RX_NACK_STOP
 13428 ;;		_I2C_MasterGetRxData
 13429 ;;		_I2C_MasterSendAck
 13430 ;;		_rd1RegCompleteHandler
 13431 ;;		_rd2RegCompleteHandler
 13432 ;;		_rdBlkRegCompleteHandler
 13433 ;;		_wr1RegCompleteHandler
 13434 ;;		_wr2RegCompleteHandler
 13435 ;; This function is called by:
 13436 ;;		_I2C_MasterFsm
 13437 ;; This function uses a non-reentrant model
 13438 ;;
 13439                           
 13440                           	psect	text51
 13441   00380A                     __ptext51:
 13442                           	callstack 0
 13443   00380A                     _I2C_DO_RX:
 13444                           	callstack 12
 13445   00380A                     
 13446                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 13447   00380A  0100               	movlb	0	; () banked
 13448   00380C  5177               	movf	(_I2C_Status+23)& (0+255),w,b
 13449   00380E  6ED9               	movwf	fsr2l,c
 13450   003810  6ADA               	clrf	fsr2h,c
 13451   003812  ECA7  F025         	call	_I2C_MasterGetRxData	;wreg free
 13452   003816  6EDF               	movwf	indf2,c
 13453   003818  0100               	movlb	0	; () banked
 13454   00381A  2B77               	incf	(_I2C_Status+23)& (0+255),f,b
 13455   00381C                     
 13456                           ; BSR set to: 0
 13457                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 13458   00381C  0778               	decf	(_I2C_Status+24)& (0+255),f,b
 13459   00381E  A0D8               	btfss	status,0,c
 13460   003820  0779               	decf	(_I2C_Status+25)& (0+255),f,b
 13461   003822  5178               	movf	(_I2C_Status+24)& (0+255),w,b
 13462   003824  1179               	iorwf	(_I2C_Status+25)& (0+255),w,b
 13463   003826  B4D8               	btfsc	status,2,c
 13464   003828  EF18  F01C         	goto	u10911
 13465   00382C  EF1A  F01C         	goto	u10910
 13466   003830                     u10911:
 13467   003830  EF1F  F01C         	goto	l435
 13468   003834                     u10910:
 13469   003834                     
 13470                           ; BSR set to: 0
 13471                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 13472   003834  EC9F  F025         	call	_I2C_MasterSendAck	;wreg free
 13473   003838                     
 13474                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 13475   003838  0E05               	movlw	5
 13476   00383A  EF55  F01C         	goto	l436
 13477   00383E                     l435:
 13478                           
 13479                           ; BSR set to: 0
 13480                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 13481   00383E  877C               	bsf	(_I2C_Status+28)& (0+255),3,b
 13482                           
 13483                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 13484   003840  EF2A  F01C         	goto	l12369
 13485   003844                     l12359:
 13486                           
 13487                           ; BSR set to: 0
 13488                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 13489   003844  EC7F  F025         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 13490   003848  EF55  F01C         	goto	l436
 13491   00384C                     l12363:
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 13495   00384C  EC83  F025         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 13496   003850  EF55  F01C         	goto	l436
 13497   003854                     l12369:
 13498                           
 13499                           ; BSR set to: 0
 13500   003854  C06C  F0DC         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 13501   003858  D802               	call	u10928
 13502   00385A  EF38  F01C         	goto	u10929
 13503   00385E                     u10928:
 13504   00385E  0005               	push	
 13505   003860  6EFA               	movwf	pclath,c
 13506   003862  5160               	movf	_I2C_Status& (0+255),w,b
 13507   003864  6EFD               	movwf	tosl,c
 13508   003866  5161               	movf	(_I2C_Status+1)& (0+255),w,b
 13509   003868  6EFE               	movwf	tosh,c
 13510   00386A  6AFF               	clrf	tosu,c
 13511   00386C  50FA               	movf	pclath,w,c
 13512   00386E  0012               	return		;indir
 13513   003870                     u10929:
 13514   003870  0100               	movlb	0	; () banked
 13515   003872  6FDD               	movwf	??_I2C_DO_RX& (0+255),b
 13516   003874  6BDE               	clrf	(??_I2C_DO_RX+1)& (0+255),b
 13517                           
 13518                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13519                           ; Switch size 1, requested type "simple"
 13520                           ; Number of cases is 1, Range of values is 0 to 0
 13521                           ; switch strategies available:
 13522                           ; Name         Instructions Cycles
 13523                           ; simple_byte            4     3 (average)
 13524                           ;	Chosen strategy is simple_byte
 13525   003876  51DE               	movf	(??_I2C_DO_RX+1)& (0+255),w,b
 13526   003878  0A00               	xorlw	0	; case 0
 13527   00387A  B4D8               	btfsc	status,2,c
 13528   00387C  EF42  F01C         	goto	l14839
 13529   003880  EF26  F01C         	goto	l12363
 13530   003884                     l14839:
 13531                           
 13532                           ; BSR set to: 0
 13533                           ; Switch size 1, requested type "simple"
 13534                           ; Number of cases is 4, Range of values is 1 to 4
 13535                           ; switch strategies available:
 13536                           ; Name         Instructions Cycles
 13537                           ; simple_byte           13     7 (average)
 13538                           ;	Chosen strategy is simple_byte
 13539   003884  51DD               	movf	??_I2C_DO_RX& (0+255),w,b
 13540   003886  0A01               	xorlw	1	; case 1
 13541   003888  B4D8               	btfsc	status,2,c
 13542   00388A  EF26  F01C         	goto	l12363
 13543   00388E  0A03               	xorlw	3	; case 2
 13544   003890  B4D8               	btfsc	status,2,c
 13545   003892  EF22  F01C         	goto	l12359
 13546   003896  0A01               	xorlw	1	; case 3
 13547   003898  B4D8               	btfsc	status,2,c
 13548   00389A  EF22  F01C         	goto	l12359
 13549   00389E  0A07               	xorlw	7	; case 4
 13550   0038A0  B4D8               	btfsc	status,2,c
 13551   0038A2  EF26  F01C         	goto	l12363
 13552   0038A6  EF26  F01C         	goto	l12363
 13553   0038AA                     l436:
 13554   0038AA  0012               	return		;funcret
 13555   0038AC                     __end_of_I2C_DO_RX:
 13556                           	callstack 0
 13557                           
 13558 ;; *************** function _I2C_DO_TX *****************
 13559 ;; Defined at:
 13560 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 13561 ;; Parameters:    Size  Location     Type
 13562 ;;		None
 13563 ;; Auto vars:     Size  Location     Type
 13564 ;;		None
 13565 ;; Return value:  Size  Location     Type
 13566 ;;                  1    wreg      enum E3128
 13567 ;; Registers used:
 13568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13569 ;; Tracked objects:
 13570 ;;		On entry : 0/0
 13571 ;;		On exit  : 0/0
 13572 ;;		Unchanged: 0/0
 13573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13576 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13577 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13578 ;;Total ram usage:        2 bytes
 13579 ;; Hardware stack levels used: 1
 13580 ;; Hardware stack levels required when called: 12
 13581 ;; This function calls:
 13582 ;;		NULL
 13583 ;;		_I2C_CallbackReturnReset
 13584 ;;		_I2C_CallbackReturnStop
 13585 ;;		_I2C_DO_SEND_RESTART_READ
 13586 ;;		_I2C_DO_SEND_RESTART_WRITE
 13587 ;;		_I2C_DO_SEND_STOP
 13588 ;;		_I2C_MasterIsNack
 13589 ;;		_I2C_MasterSendTxData
 13590 ;;		_rd1RegCompleteHandler
 13591 ;;		_rd2RegCompleteHandler
 13592 ;;		_rdBlkRegCompleteHandler
 13593 ;;		_wr1RegCompleteHandler
 13594 ;;		_wr2RegCompleteHandler
 13595 ;; This function is called by:
 13596 ;;		_I2C_MasterFsm
 13597 ;; This function uses a non-reentrant model
 13598 ;;
 13599                           
 13600                           	psect	text52
 13601   003522                     __ptext52:
 13602                           	callstack 0
 13603   003522                     _I2C_DO_TX:
 13604                           	callstack 12
 13605   003522                     
 13606                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 13607   003522  EC13  F025         	call	_I2C_MasterIsNack	;wreg free
 13608   003526  0900               	iorlw	0
 13609   003528  B4D8               	btfsc	status,2,c
 13610   00352A  EF99  F01A         	goto	u10881
 13611   00352E  EF9B  F01A         	goto	u10880
 13612   003532                     u10881:
 13613   003532  EFD5  F01A         	goto	l419
 13614   003536                     u10880:
 13615   003536  EFA9  F01A         	goto	l12329
 13616   00353A                     l12315:
 13617                           
 13618                           ; BSR set to: 0
 13619                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 13620   00353A  EC97  F025         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 13621   00353E  EFF1  F01A         	goto	l422
 13622   003542                     l12319:
 13623                           
 13624                           ; BSR set to: 0
 13625                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 13626   003542  EC93  F025         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 13627   003546  EFF1  F01A         	goto	l422
 13628   00354A                     l12323:
 13629                           
 13630                           ; BSR set to: 0
 13631                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 13632   00354A  EC8B  F025         	call	_I2C_DO_SEND_STOP	;wreg free
 13633   00354E  EFF1  F01A         	goto	l422
 13634   003552                     l12329:
 13635   003552  C06F  F0DC         	movff	_I2C_Status+15,I2C_CallbackReturnReset@funPtr
 13636   003556  D802               	call	u10898
 13637   003558  EFB8  F01A         	goto	u10899
 13638   00355C                     u10898:
 13639   00355C  0005               	push	
 13640   00355E  6EFA               	movwf	pclath,c
 13641   003560  0100               	movlb	0	; () banked
 13642   003562  5166               	movf	(_I2C_Status+6)& (0+255),w,b
 13643   003564  6EFD               	movwf	tosl,c
 13644   003566  5167               	movf	(_I2C_Status+7)& (0+255),w,b
 13645   003568  6EFE               	movwf	tosh,c
 13646   00356A  6AFF               	clrf	tosu,c
 13647   00356C  50FA               	movf	pclath,w,c
 13648   00356E  0012               	return		;indir
 13649   003570                     u10899:
 13650   003570  0100               	movlb	0	; () banked
 13651   003572  6FDD               	movwf	??_I2C_DO_TX& (0+255),b
 13652   003574  6BDE               	clrf	(??_I2C_DO_TX+1)& (0+255),b
 13653                           
 13654                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13655                           ; Switch size 1, requested type "simple"
 13656                           ; Number of cases is 1, Range of values is 0 to 0
 13657                           ; switch strategies available:
 13658                           ; Name         Instructions Cycles
 13659                           ; simple_byte            4     3 (average)
 13660                           ;	Chosen strategy is simple_byte
 13661   003576  51DE               	movf	(??_I2C_DO_TX+1)& (0+255),w,b
 13662   003578  0A00               	xorlw	0	; case 0
 13663   00357A  B4D8               	btfsc	status,2,c
 13664   00357C  EFC2  F01A         	goto	l14841
 13665   003580  EFA5  F01A         	goto	l12323
 13666   003584                     l14841:
 13667                           
 13668                           ; BSR set to: 0
 13669                           ; Switch size 1, requested type "simple"
 13670                           ; Number of cases is 4, Range of values is 1 to 4
 13671                           ; switch strategies available:
 13672                           ; Name         Instructions Cycles
 13673                           ; simple_byte           13     7 (average)
 13674                           ;	Chosen strategy is simple_byte
 13675   003584  51DD               	movf	??_I2C_DO_TX& (0+255),w,b
 13676   003586  0A01               	xorlw	1	; case 1
 13677   003588  B4D8               	btfsc	status,2,c
 13678   00358A  EFA5  F01A         	goto	l12323
 13679   00358E  0A03               	xorlw	3	; case 2
 13680   003590  B4D8               	btfsc	status,2,c
 13681   003592  EF9D  F01A         	goto	l12315
 13682   003596  0A01               	xorlw	1	; case 3
 13683   003598  B4D8               	btfsc	status,2,c
 13684   00359A  EFA1  F01A         	goto	l12319
 13685   00359E  0A07               	xorlw	7	; case 4
 13686   0035A0  B4D8               	btfsc	status,2,c
 13687   0035A2  EFA5  F01A         	goto	l12323
 13688   0035A6  EFA5  F01A         	goto	l12323
 13689   0035AA                     l419:
 13690                           
 13691                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 13692   0035AA  0100               	movlb	0	; () banked
 13693   0035AC  917C               	bcf	(_I2C_Status+28)& (0+255),0,b
 13694   0035AE                     
 13695                           ; BSR set to: 0
 13696                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 13697   0035AE  EE20  F077         	lfsr	2,_I2C_Status+23
 13698   0035B2  50DF               	movf	indf2,w,c
 13699   0035B4  2ADF               	incf	indf2,f,c
 13700   0035B6  6ED9               	movwf	fsr2l,c
 13701   0035B8  6ADA               	clrf	fsr2h,c
 13702   0035BA  50DF               	movf	indf2,w,c
 13703   0035BC  EC72  F025         	call	_I2C_MasterSendTxData
 13704   0035C0                     
 13705                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 13706   0035C0  0100               	movlb	0	; () banked
 13707   0035C2  0778               	decf	(_I2C_Status+24)& (0+255),f,b
 13708   0035C4  A0D8               	btfss	status,0,c
 13709   0035C6  0779               	decf	(_I2C_Status+25)& (0+255),f,b
 13710   0035C8  5178               	movf	(_I2C_Status+24)& (0+255),w,b
 13711   0035CA  1179               	iorwf	(_I2C_Status+25)& (0+255),w,b
 13712   0035CC  A4D8               	btfss	status,2,c
 13713   0035CE  EFEB  F01A         	goto	u10901
 13714   0035D2  EFED  F01A         	goto	u10900
 13715   0035D6                     u10901:
 13716   0035D6  EFF0  F01A         	goto	l12337
 13717   0035DA                     u10900:
 13718   0035DA                     
 13719                           ; BSR set to: 0
 13720   0035DA  0E06               	movlw	6
 13721   0035DC  EFF1  F01A         	goto	l422
 13722   0035E0                     l12337:
 13723                           
 13724                           ; BSR set to: 0
 13725   0035E0  0E03               	movlw	3
 13726   0035E2                     l422:
 13727   0035E2  0012               	return		;funcret
 13728   0035E4                     __end_of_I2C_DO_TX:
 13729                           	callstack 0
 13730                           
 13731 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 13732 ;; Defined at:
 13733 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;		None
 13736 ;; Auto vars:     Size  Location     Type
 13737 ;;		None
 13738 ;; Return value:  Size  Location     Type
 13739 ;;                  1    wreg      enum E3128
 13740 ;; Registers used:
 13741 ;;		wreg, status,2, cstack
 13742 ;; Tracked objects:
 13743 ;;		On entry : 0/0
 13744 ;;		On exit  : 0/0
 13745 ;;		Unchanged: 0/0
 13746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13751 ;;Total ram usage:        0 bytes
 13752 ;; Hardware stack levels used: 1
 13753 ;; Hardware stack levels required when called: 10
 13754 ;; This function calls:
 13755 ;;		_I2C_MasterSendTxData
 13756 ;; This function is called by:
 13757 ;;		_I2C_MasterFsm
 13758 ;; This function uses a non-reentrant model
 13759 ;;
 13760                           
 13761                           	psect	text53
 13762   004A8E                     __ptext53:
 13763                           	callstack 0
 13764   004A8E                     _I2C_DO_SEND_ADR_WRITE:
 13765                           	callstack 14
 13766   004A8E                     
 13767                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 13768   004A8E  0100               	movlb	0	; () banked
 13769   004A90  817C               	bsf	(_I2C_Status+28)& (0+255),0,b
 13770   004A92                     
 13771                           ; BSR set to: 0
 13772                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress));
 13773   004A92  5176               	movf	(_I2C_Status+22)& (0+255),w,b
 13774   004A94  EC72  F025         	call	_I2C_MasterSendTxData
 13775   004A98                     
 13776                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 13777   004A98  0E03               	movlw	3
 13778   004A9A  0012               	return		;funcret
 13779   004A9C                     __end_of_I2C_DO_SEND_ADR_WRITE:
 13780                           	callstack 0
 13781                           
 13782 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 13783 ;; Defined at:
 13784 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 13785 ;; Parameters:    Size  Location     Type
 13786 ;;		None
 13787 ;; Auto vars:     Size  Location     Type
 13788 ;;		None
 13789 ;; Return value:  Size  Location     Type
 13790 ;;                  1    wreg      enum E3128
 13791 ;; Registers used:
 13792 ;;		wreg, status,2, status,0, cstack
 13793 ;; Tracked objects:
 13794 ;;		On entry : 0/0
 13795 ;;		On exit  : 0/0
 13796 ;;		Unchanged: 0/0
 13797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13802 ;;Total ram usage:        0 bytes
 13803 ;; Hardware stack levels used: 1
 13804 ;; Hardware stack levels required when called: 10
 13805 ;; This function calls:
 13806 ;;		_I2C_MasterSendTxData
 13807 ;; This function is called by:
 13808 ;;		_I2C_MasterFsm
 13809 ;; This function uses a non-reentrant model
 13810 ;;
 13811                           
 13812                           	psect	text54
 13813   004A70                     __ptext54:
 13814                           	callstack 0
 13815   004A70                     _I2C_DO_SEND_ADR_READ:
 13816                           	callstack 14
 13817   004A70                     
 13818                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 13819   004A70  0100               	movlb	0	; () banked
 13820   004A72  817C               	bsf	(_I2C_Status+28)& (0+255),0,b
 13821   004A74                     
 13822                           ; BSR set to: 0
 13823                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress | 1));
 13824   004A74  5176               	movf	(_I2C_Status+22)& (0+255),w,b
 13825   004A76  0901               	iorlw	1
 13826   004A78  EC72  F025         	call	_I2C_MasterSendTxData
 13827   004A7C                     
 13828                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 13829   004A7C  0E05               	movlw	5
 13830   004A7E  0012               	return		;funcret
 13831   004A80                     __end_of_I2C_DO_SEND_ADR_READ:
 13832                           	callstack 0
 13833                           
 13834 ;; *************** function _I2C_DO_IDLE *****************
 13835 ;; Defined at:
 13836 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 13837 ;; Parameters:    Size  Location     Type
 13838 ;;		None
 13839 ;; Auto vars:     Size  Location     Type
 13840 ;;		None
 13841 ;; Return value:  Size  Location     Type
 13842 ;;                  1    wreg      enum E3128
 13843 ;; Registers used:
 13844 ;;		wreg
 13845 ;; Tracked objects:
 13846 ;;		On entry : 0/0
 13847 ;;		On exit  : 0/0
 13848 ;;		Unchanged: 0/0
 13849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13854 ;;Total ram usage:        0 bytes
 13855 ;; Hardware stack levels used: 1
 13856 ;; Hardware stack levels required when called: 9
 13857 ;; This function calls:
 13858 ;;		Nothing
 13859 ;; This function is called by:
 13860 ;;		_I2C_MasterFsm
 13861 ;; This function uses a non-reentrant model
 13862 ;;
 13863                           
 13864                           	psect	text55
 13865   004ADA                     __ptext55:
 13866                           	callstack 0
 13867   004ADA                     _I2C_DO_IDLE:
 13868                           	callstack 15
 13869   004ADA                     
 13870                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 13871   004ADA  0100               	movlb	0	; () banked
 13872   004ADC  937C               	bcf	(_I2C_Status+28)& (0+255),1,b
 13873                           
 13874                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 13875   004ADE  6B7B               	clrf	(_I2C_Status+27)& (0+255),b
 13876   004AE0                     
 13877                           ; BSR set to: 0
 13878                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 13879   004AE0  0E0E               	movlw	14
 13880   004AE2                     
 13881                           ; BSR set to: 0
 13882   004AE2  0012               	return		;funcret
 13883   004AE4                     __end_of_I2C_DO_IDLE:
 13884                           	callstack 0
 13885                           
 13886 ;; *************** function _I2C_DO_TX_EMPTY *****************
 13887 ;; Defined at:
 13888 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 13889 ;; Parameters:    Size  Location     Type
 13890 ;;		None
 13891 ;; Auto vars:     Size  Location     Type
 13892 ;;		None
 13893 ;; Return value:  Size  Location     Type
 13894 ;;                  1    wreg      enum E3128
 13895 ;; Registers used:
 13896 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 13897 ;; Tracked objects:
 13898 ;;		On entry : 0/0
 13899 ;;		On exit  : 0/0
 13900 ;;		Unchanged: 0/0
 13901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13904 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13905 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13906 ;;Total ram usage:        2 bytes
 13907 ;; Hardware stack levels used: 1
 13908 ;; Hardware stack levels required when called: 12
 13909 ;; This function calls:
 13910 ;;		NULL
 13911 ;;		_I2C_CallbackReturnReset
 13912 ;;		_I2C_CallbackReturnStop
 13913 ;;		_I2C_DO_SEND_RESTART
 13914 ;;		_I2C_DO_SEND_STOP
 13915 ;;		_I2C_MasterSetIrq
 13916 ;;		_rd1RegCompleteHandler
 13917 ;;		_rd2RegCompleteHandler
 13918 ;;		_rdBlkRegCompleteHandler
 13919 ;;		_wr1RegCompleteHandler
 13920 ;;		_wr2RegCompleteHandler
 13921 ;; This function is called by:
 13922 ;;		_I2C_MasterFsm
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926                           	psect	text56
 13927   003EC2                     __ptext56:
 13928                           	callstack 0
 13929   003EC2                     _I2C_DO_TX_EMPTY:
 13930                           	callstack 12
 13931   003EC2                     
 13932                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 13933   003EC2  0100               	movlb	0	; () banked
 13934   003EC4  877C               	bsf	(_I2C_Status+28)& (0+255),3,b
 13935                           
 13936                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 13937   003EC6  EF72  F01F         	goto	l12401
 13938   003ECA                     l12385:
 13939                           
 13940                           ; BSR set to: 0
 13941                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 13942   003ECA  EC8F  F025         	call	_I2C_DO_SEND_RESTART	;wreg free
 13943   003ECE  EF9D  F01F         	goto	l453
 13944   003ED2                     l12389:
 13945                           
 13946                           ; BSR set to: 0
 13947                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 13948   003ED2  ECA5  F025         	call	_I2C_MasterSetIrq	;wreg free
 13949   003ED6                     
 13950                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 13951   003ED6  0E03               	movlw	3
 13952   003ED8  EF9D  F01F         	goto	l453
 13953   003EDC                     l12395:
 13954                           
 13955                           ; BSR set to: 0
 13956                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 13957   003EDC  EC8B  F025         	call	_I2C_DO_SEND_STOP	;wreg free
 13958   003EE0  EF9D  F01F         	goto	l453
 13959   003EE4                     l12401:
 13960                           
 13961                           ; BSR set to: 0
 13962   003EE4  C06C  F0DC         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 13963   003EE8  D802               	call	u10938
 13964   003EEA  EF80  F01F         	goto	u10939
 13965   003EEE                     u10938:
 13966   003EEE  0005               	push	
 13967   003EF0  6EFA               	movwf	pclath,c
 13968   003EF2  5160               	movf	_I2C_Status& (0+255),w,b
 13969   003EF4  6EFD               	movwf	tosl,c
 13970   003EF6  5161               	movf	(_I2C_Status+1)& (0+255),w,b
 13971   003EF8  6EFE               	movwf	tosh,c
 13972   003EFA  6AFF               	clrf	tosu,c
 13973   003EFC  50FA               	movf	pclath,w,c
 13974   003EFE  0012               	return		;indir
 13975   003F00                     u10939:
 13976   003F00  0100               	movlb	0	; () banked
 13977   003F02  6FDD               	movwf	??_I2C_DO_TX_EMPTY& (0+255),b
 13978   003F04  6BDE               	clrf	(??_I2C_DO_TX_EMPTY+1)& (0+255),b
 13979                           
 13980                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13981                           ; Switch size 1, requested type "simple"
 13982                           ; Number of cases is 1, Range of values is 0 to 0
 13983                           ; switch strategies available:
 13984                           ; Name         Instructions Cycles
 13985                           ; simple_byte            4     3 (average)
 13986                           ;	Chosen strategy is simple_byte
 13987   003F06  51DE               	movf	(??_I2C_DO_TX_EMPTY+1)& (0+255),w,b
 13988   003F08  0A00               	xorlw	0	; case 0
 13989   003F0A  B4D8               	btfsc	status,2,c
 13990   003F0C  EF8A  F01F         	goto	l14843
 13991   003F10  EF6E  F01F         	goto	l12395
 13992   003F14                     l14843:
 13993                           
 13994                           ; BSR set to: 0
 13995                           ; Switch size 1, requested type "simple"
 13996                           ; Number of cases is 4, Range of values is 1 to 4
 13997                           ; switch strategies available:
 13998                           ; Name         Instructions Cycles
 13999                           ; simple_byte           13     7 (average)
 14000                           ;	Chosen strategy is simple_byte
 14001   003F14  51DD               	movf	??_I2C_DO_TX_EMPTY& (0+255),w,b
 14002   003F16  0A01               	xorlw	1	; case 1
 14003   003F18  B4D8               	btfsc	status,2,c
 14004   003F1A  EF6E  F01F         	goto	l12395
 14005   003F1E  0A03               	xorlw	3	; case 2
 14006   003F20  B4D8               	btfsc	status,2,c
 14007   003F22  EF65  F01F         	goto	l12385
 14008   003F26  0A01               	xorlw	1	; case 3
 14009   003F28  B4D8               	btfsc	status,2,c
 14010   003F2A  EF65  F01F         	goto	l12385
 14011   003F2E  0A07               	xorlw	7	; case 4
 14012   003F30  B4D8               	btfsc	status,2,c
 14013   003F32  EF69  F01F         	goto	l12389
 14014   003F36  EF6E  F01F         	goto	l12395
 14015   003F3A                     l453:
 14016   003F3A  0012               	return		;funcret
 14017   003F3C                     __end_of_I2C_DO_TX_EMPTY:
 14018                           	callstack 0
 14019                           
 14020 ;; *************** function _I2C_MasterSetIrq *****************
 14021 ;; Defined at:
 14022 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 14023 ;; Parameters:    Size  Location     Type
 14024 ;;		None
 14025 ;; Auto vars:     Size  Location     Type
 14026 ;;		None
 14027 ;; Return value:  Size  Location     Type
 14028 ;;                  1    wreg      void 
 14029 ;; Registers used:
 14030 ;;		None
 14031 ;; Tracked objects:
 14032 ;;		On entry : 0/0
 14033 ;;		On exit  : 0/0
 14034 ;;		Unchanged: 0/0
 14035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14040 ;;Total ram usage:        0 bytes
 14041 ;; Hardware stack levels used: 1
 14042 ;; Hardware stack levels required when called: 9
 14043 ;; This function calls:
 14044 ;;		Nothing
 14045 ;; This function is called by:
 14046 ;;		_I2C_DO_TX_EMPTY
 14047 ;; This function uses a non-reentrant model
 14048 ;;
 14049                           
 14050                           	psect	text57
 14051   004B4A                     __ptext57:
 14052                           	callstack 0
 14053   004B4A                     _I2C_MasterSetIrq:
 14054                           	callstack 14
 14055   004B4A                     
 14056                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 14057   004B4A  869E               	bsf	158,3,c	;volatile
 14058   004B4C  0012               	return		;funcret
 14059   004B4E                     __end_of_I2C_MasterSetIrq:
 14060                           	callstack 0
 14061                           
 14062 ;; *************** function _I2C_MasterIsNack *****************
 14063 ;; Defined at:
 14064 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 14065 ;; Parameters:    Size  Location     Type
 14066 ;;		None
 14067 ;; Auto vars:     Size  Location     Type
 14068 ;;		None
 14069 ;; Return value:  Size  Location     Type
 14070 ;;                  1    wreg      _Bool 
 14071 ;; Registers used:
 14072 ;;		wreg
 14073 ;; Tracked objects:
 14074 ;;		On entry : 0/0
 14075 ;;		On exit  : 0/0
 14076 ;;		Unchanged: 0/0
 14077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14082 ;;Total ram usage:        0 bytes
 14083 ;; Hardware stack levels used: 1
 14084 ;; Hardware stack levels required when called: 9
 14085 ;; This function calls:
 14086 ;;		Nothing
 14087 ;; This function is called by:
 14088 ;;		_I2C_MasterFsm
 14089 ;;		_I2C_DO_TX
 14090 ;; This function uses a non-reentrant model
 14091 ;;
 14092                           
 14093                           	psect	text58
 14094   004A26                     __ptext58:
 14095                           	callstack 0
 14096   004A26                     _I2C_MasterIsNack:
 14097                           	callstack 15
 14098   004A26                     
 14099                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 14100   004A26  BCC5               	btfsc	197,6,c	;volatile
 14101   004A28  EF18  F025         	goto	u10871
 14102   004A2C  EF1B  F025         	goto	u10870
 14103   004A30                     u10871:
 14104   004A30  0E01               	movlw	1
 14105   004A32  EF1C  F025         	goto	u10876
 14106   004A36                     u10870:
 14107   004A36  0E00               	movlw	0
 14108   004A38                     u10876:
 14109   004A38  0012               	return		;funcret
 14110   004A3A                     __end_of_I2C_MasterIsNack:
 14111                           	callstack 0
 14112                           
 14113 ;; *************** function _I2C_MasterSendTxData *****************
 14114 ;; Defined at:
 14115 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 14116 ;; Parameters:    Size  Location     Type
 14117 ;;  data            1    wreg     unsigned char 
 14118 ;; Auto vars:     Size  Location     Type
 14119 ;;  data            1    0[BANK0 ] unsigned char 
 14120 ;; Return value:  Size  Location     Type
 14121 ;;                  1    wreg      void 
 14122 ;; Registers used:
 14123 ;;		wreg
 14124 ;; Tracked objects:
 14125 ;;		On entry : 0/0
 14126 ;;		On exit  : 0/0
 14127 ;;		Unchanged: 0/0
 14128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14130 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14132 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14133 ;;Total ram usage:        1 bytes
 14134 ;; Hardware stack levels used: 1
 14135 ;; Hardware stack levels required when called: 9
 14136 ;; This function calls:
 14137 ;;		Nothing
 14138 ;; This function is called by:
 14139 ;;		_I2C_DO_SEND_ADR_READ
 14140 ;;		_I2C_DO_SEND_ADR_WRITE
 14141 ;;		_I2C_DO_TX
 14142 ;; This function uses a non-reentrant model
 14143 ;;
 14144                           
 14145                           	psect	text59
 14146   004AE4                     __ptext59:
 14147                           	callstack 0
 14148   004AE4                     _I2C_MasterSendTxData:
 14149                           	callstack 14
 14150                           
 14151                           ;incstack = 0
 14152                           ;I2C_MasterSendTxData@data stored from wreg
 14153   004AE4  0100               	movlb	0	; () banked
 14154   004AE6  6FD5               	movwf	I2C_MasterSendTxData@data& (0+255),b
 14155   004AE8                     
 14156                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 14157   004AE8  C0D5  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 14158   004AEC  0012               	return		;funcret
 14159   004AEE                     __end_of_I2C_MasterSendTxData:
 14160                           	callstack 0
 14161                           
 14162 ;; *************** function _I2C_MasterSendAck *****************
 14163 ;; Defined at:
 14164 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 14165 ;; Parameters:    Size  Location     Type
 14166 ;;		None
 14167 ;; Auto vars:     Size  Location     Type
 14168 ;;		None
 14169 ;; Return value:  Size  Location     Type
 14170 ;;                  1    wreg      void 
 14171 ;; Registers used:
 14172 ;;		None
 14173 ;; Tracked objects:
 14174 ;;		On entry : 0/0
 14175 ;;		On exit  : 0/0
 14176 ;;		Unchanged: 0/0
 14177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14182 ;;Total ram usage:        0 bytes
 14183 ;; Hardware stack levels used: 1
 14184 ;; Hardware stack levels required when called: 9
 14185 ;; This function calls:
 14186 ;;		Nothing
 14187 ;; This function is called by:
 14188 ;;		_I2C_DO_RX
 14189 ;;		_I2C_DO_RX_ACK
 14190 ;; This function uses a non-reentrant model
 14191 ;;
 14192                           
 14193                           	psect	text60
 14194   004B3E                     __ptext60:
 14195                           	callstack 0
 14196   004B3E                     _I2C_MasterSendAck:
 14197                           	callstack 14
 14198   004B3E                     
 14199                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 14200   004B3E  9AC5               	bcf	197,5,c	;volatile
 14201                           
 14202                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 14203   004B40  88C5               	bsf	197,4,c	;volatile
 14204   004B42  0012               	return		;funcret
 14205   004B44                     __end_of_I2C_MasterSendAck:
 14206                           	callstack 0
 14207                           
 14208 ;; *************** function _I2C_MasterGetRxData *****************
 14209 ;; Defined at:
 14210 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 14211 ;; Parameters:    Size  Location     Type
 14212 ;;		None
 14213 ;; Auto vars:     Size  Location     Type
 14214 ;;		None
 14215 ;; Return value:  Size  Location     Type
 14216 ;;                  1    wreg      unsigned char 
 14217 ;; Registers used:
 14218 ;;		wreg, status,2
 14219 ;; Tracked objects:
 14220 ;;		On entry : 0/0
 14221 ;;		On exit  : 0/0
 14222 ;;		Unchanged: 0/0
 14223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14227 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14228 ;;Total ram usage:        0 bytes
 14229 ;; Hardware stack levels used: 1
 14230 ;; Hardware stack levels required when called: 9
 14231 ;; This function calls:
 14232 ;;		Nothing
 14233 ;; This function is called by:
 14234 ;;		_I2C_DO_RX
 14235 ;; This function uses a non-reentrant model
 14236 ;;
 14237                           
 14238                           	psect	text61
 14239   004B4E                     __ptext61:
 14240                           	callstack 0
 14241   004B4E                     _I2C_MasterGetRxData:
 14242                           	callstack 14
 14243   004B4E                     
 14244                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 14245   004B4E  50C9               	movf	201,w,c	;volatile
 14246   004B50  0012               	return		;funcret
 14247   004B52                     __end_of_I2C_MasterGetRxData:
 14248                           	callstack 0
 14249                           
 14250 ;; *************** function _I2C_MasterSendNack *****************
 14251 ;; Defined at:
 14252 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 14253 ;; Parameters:    Size  Location     Type
 14254 ;;		None
 14255 ;; Auto vars:     Size  Location     Type
 14256 ;;		None
 14257 ;; Return value:  Size  Location     Type
 14258 ;;                  1    wreg      void 
 14259 ;; Registers used:
 14260 ;;		None
 14261 ;; Tracked objects:
 14262 ;;		On entry : 0/0
 14263 ;;		On exit  : 0/0
 14264 ;;		Unchanged: 0/0
 14265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14270 ;;Total ram usage:        0 bytes
 14271 ;; Hardware stack levels used: 1
 14272 ;; Hardware stack levels required when called: 9
 14273 ;; This function calls:
 14274 ;;		Nothing
 14275 ;; This function is called by:
 14276 ;;		_I2C_DO_RX_NACK_STOP
 14277 ;;		_I2C_DO_RX_NACK_RESTART
 14278 ;; This function uses a non-reentrant model
 14279 ;;
 14280                           
 14281                           	psect	text62
 14282   004B44                     __ptext62:
 14283                           	callstack 0
 14284   004B44                     _I2C_MasterSendNack:
 14285                           	callstack 14
 14286   004B44                     
 14287                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 14288   004B44  8AC5               	bsf	197,5,c	;volatile
 14289                           
 14290                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 14291   004B46  88C5               	bsf	197,4,c	;volatile
 14292   004B48  0012               	return		;funcret
 14293   004B4A                     __end_of_I2C_MasterSendNack:
 14294                           	callstack 0
 14295                           
 14296 ;; *************** function _I2C_MasterStartRx *****************
 14297 ;; Defined at:
 14298 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;		None
 14301 ;; Auto vars:     Size  Location     Type
 14302 ;;		None
 14303 ;; Return value:  Size  Location     Type
 14304 ;;                  1    wreg      void 
 14305 ;; Registers used:
 14306 ;;		None
 14307 ;; Tracked objects:
 14308 ;;		On entry : 0/0
 14309 ;;		On exit  : 0/0
 14310 ;;		Unchanged: 0/0
 14311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14316 ;;Total ram usage:        0 bytes
 14317 ;; Hardware stack levels used: 1
 14318 ;; Hardware stack levels required when called: 9
 14319 ;; This function calls:
 14320 ;;		Nothing
 14321 ;; This function is called by:
 14322 ;;		_I2C_DO_RCEN
 14323 ;; This function uses a non-reentrant model
 14324 ;;
 14325                           
 14326                           	psect	text63
 14327   004B52                     __ptext63:
 14328                           	callstack 0
 14329   004B52                     _I2C_MasterStartRx:
 14330                           	callstack 14
 14331   004B52                     
 14332                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 14333   004B52  86C5               	bsf	197,3,c	;volatile
 14334   004B54  0012               	return		;funcret
 14335   004B56                     __end_of_I2C_MasterStartRx:
 14336                           	callstack 0
 14337                           
 14338 ;; *************** function _I2C_CallbackReturnReset *****************
 14339 ;; Defined at:
 14340 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 14341 ;; Parameters:    Size  Location     Type
 14342 ;;  funPtr          1    7[BANK0 ] PTR void 
 14343 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14344 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14345 ;; Auto vars:     Size  Location     Type
 14346 ;;		None
 14347 ;; Return value:  Size  Location     Type
 14348 ;;                  1    wreg      enum E363
 14349 ;; Registers used:
 14350 ;;		wreg
 14351 ;; Tracked objects:
 14352 ;;		On entry : 0/0
 14353 ;;		On exit  : 0/0
 14354 ;;		Unchanged: 0/0
 14355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14356 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14359 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14360 ;;Total ram usage:        1 bytes
 14361 ;; Hardware stack levels used: 1
 14362 ;; Hardware stack levels required when called: 9
 14363 ;; This function calls:
 14364 ;;		Nothing
 14365 ;; This function is called by:
 14366 ;;		_I2C_Open
 14367 ;;		_I2C_DO_TX
 14368 ;;		_I2C_DO_RX
 14369 ;;		_I2C_DO_TX_EMPTY
 14370 ;;		_I2C_DO_ADDRESS_NACK
 14371 ;;		_I2C_DO_RX_EMPTY
 14372 ;; This function uses a non-reentrant model
 14373 ;;
 14374                           
 14375                           	psect	text64
 14376   004B56                     __ptext64:
 14377                           	callstack 0
 14378   004B56                     _I2C_CallbackReturnReset:
 14379                           	callstack 14
 14380   004B56                     
 14381                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 14382   004B56  0E05               	movlw	5
 14383   004B58  0012               	return		;funcret
 14384   004B5A                     __end_of_I2C_CallbackReturnReset:
 14385                           	callstack 0
 14386                           
 14387 ;; *************** function _I2C_CallbackReturnStop *****************
 14388 ;; Defined at:
 14389 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 14390 ;; Parameters:    Size  Location     Type
 14391 ;;  funPtr          1    7[BANK0 ] PTR void 
 14392 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14393 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14394 ;; Auto vars:     Size  Location     Type
 14395 ;;		None
 14396 ;; Return value:  Size  Location     Type
 14397 ;;                  1    wreg      enum E363
 14398 ;; Registers used:
 14399 ;;		wreg
 14400 ;; Tracked objects:
 14401 ;;		On entry : 0/0
 14402 ;;		On exit  : 0/0
 14403 ;;		Unchanged: 0/0
 14404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14405 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14408 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14409 ;;Total ram usage:        1 bytes
 14410 ;; Hardware stack levels used: 1
 14411 ;; Hardware stack levels required when called: 9
 14412 ;; This function calls:
 14413 ;;		Nothing
 14414 ;; This function is called by:
 14415 ;;		_I2C_Open
 14416 ;;		_I2C_SetCallback
 14417 ;;		_I2C_DO_TX
 14418 ;;		_I2C_DO_RX
 14419 ;;		_I2C_DO_TX_EMPTY
 14420 ;;		_I2C_DO_ADDRESS_NACK
 14421 ;;		_I2C_DO_RX_EMPTY
 14422 ;; This function uses a non-reentrant model
 14423 ;;
 14424                           
 14425                           	psect	text65
 14426   004B5A                     __ptext65:
 14427                           	callstack 0
 14428   004B5A                     _I2C_CallbackReturnStop:
 14429                           	callstack 14
 14430   004B5A                     
 14431                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 14432   004B5A  0E01               	movlw	1
 14433   004B5C  0012               	return		;funcret
 14434   004B5E                     __end_of_I2C_CallbackReturnStop:
 14435                           	callstack 0
 14436                           
 14437 ;; *************** function _rdBlkRegCompleteHandler *****************
 14438 ;; Defined at:
 14439 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 14440 ;; Parameters:    Size  Location     Type
 14441 ;;  ptr             1    7[BANK0 ] PTR void 
 14442 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14443 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14444 ;; Auto vars:     Size  Location     Type
 14445 ;;		None
 14446 ;; Return value:  Size  Location     Type
 14447 ;;                  1    wreg      enum E363
 14448 ;; Registers used:
 14449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14450 ;; Tracked objects:
 14451 ;;		On entry : 0/0
 14452 ;;		On exit  : 0/0
 14453 ;;		Unchanged: 0/0
 14454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14455 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14458 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14459 ;;Total ram usage:        1 bytes
 14460 ;; Hardware stack levels used: 1
 14461 ;; Hardware stack levels required when called: 11
 14462 ;; This function calls:
 14463 ;;		_I2C_SetBuffer
 14464 ;;		_I2C_SetDataCompleteCallback
 14465 ;; This function is called by:
 14466 ;;		_I2C_ReadDataBlock
 14467 ;;		_I2C_DO_TX
 14468 ;;		_I2C_DO_RX
 14469 ;;		_I2C_DO_TX_EMPTY
 14470 ;;		_I2C_DO_ADDRESS_NACK
 14471 ;;		_I2C_DO_RX_EMPTY
 14472 ;; This function uses a non-reentrant model
 14473 ;;
 14474                           
 14475                           	psect	text66
 14476   004738                     __ptext66:
 14477                           	callstack 0
 14478   004738                     _rdBlkRegCompleteHandler:
 14479                           	callstack 12
 14480   004738                     
 14481                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 14482   004738  0100               	movlb	0	; () banked
 14483   00473A  51DC               	movf	rdBlkRegCompleteHandler@ptr& (0+255),w,b
 14484   00473C  6ED9               	movwf	fsr2l,c
 14485   00473E  6ADA               	clrf	fsr2h,c
 14486   004740  0E02               	movlw	2
 14487   004742  26D9               	addwf	fsr2l,f,c
 14488   004744  50DF               	movf	indf2,w,c
 14489   004746  6FD5               	movwf	I2C_SetBuffer@buffer& (0+255),b
 14490   004748  51DC               	movf	rdBlkRegCompleteHandler@ptr& (0+255),w,b
 14491   00474A  6ED9               	movwf	fsr2l,c
 14492   00474C  6ADA               	clrf	fsr2h,c
 14493   00474E  CFDE F0D6          	movff	postinc2,I2C_SetBuffer@bufferSize
 14494   004752  CFDD F0D7          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 14495   004756  EC9B  F024         	call	_I2C_SetBuffer	;wreg free
 14496   00475A                     
 14497                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14498   00475A  0E00               	movlw	0
 14499   00475C  0100               	movlb	0	; () banked
 14500   00475E  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 14501   004760  0E00               	movlw	0
 14502   004762  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 14503   004764  0E00               	movlw	0
 14504   004766  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 14505   004768  EC1D  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 14506   00476C                     
 14507                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 14508   00476C  0E02               	movlw	2
 14509   00476E  0012               	return		;funcret
 14510   004770                     __end_of_rdBlkRegCompleteHandler:
 14511                           	callstack 0
 14512                           
 14513 ;; *************** function _wr1RegCompleteHandler *****************
 14514 ;; Defined at:
 14515 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 14516 ;; Parameters:    Size  Location     Type
 14517 ;;  ptr             1    7[BANK0 ] PTR void 
 14518 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14519 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14520 ;; Auto vars:     Size  Location     Type
 14521 ;;		None
 14522 ;; Return value:  Size  Location     Type
 14523 ;;                  1    wreg      enum E363
 14524 ;; Registers used:
 14525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14526 ;; Tracked objects:
 14527 ;;		On entry : 0/0
 14528 ;;		On exit  : 0/0
 14529 ;;		Unchanged: 0/0
 14530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14531 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14534 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14535 ;;Total ram usage:        1 bytes
 14536 ;; Hardware stack levels used: 1
 14537 ;; Hardware stack levels required when called: 11
 14538 ;; This function calls:
 14539 ;;		_I2C_SetBuffer
 14540 ;;		_I2C_SetDataCompleteCallback
 14541 ;; This function is called by:
 14542 ;;		_I2C_Write1ByteRegister
 14543 ;;		_I2C_DO_TX
 14544 ;;		_I2C_DO_RX
 14545 ;;		_I2C_DO_TX_EMPTY
 14546 ;;		_I2C_DO_ADDRESS_NACK
 14547 ;;		_I2C_DO_RX_EMPTY
 14548 ;; This function uses a non-reentrant model
 14549 ;;
 14550                           
 14551                           	psect	text67
 14552   004806                     __ptext67:
 14553                           	callstack 0
 14554   004806                     _wr1RegCompleteHandler:
 14555                           	callstack 12
 14556   004806                     
 14557                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 14558   004806  C0DC  F0D5         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 14559   00480A  0E00               	movlw	0
 14560   00480C  0100               	movlb	0	; () banked
 14561   00480E  6FD7               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
 14562   004810  0E01               	movlw	1
 14563   004812  6FD6               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
 14564   004814  EC9B  F024         	call	_I2C_SetBuffer	;wreg free
 14565   004818                     
 14566                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14567   004818  0E00               	movlw	0
 14568   00481A  0100               	movlb	0	; () banked
 14569   00481C  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 14570   00481E  0E00               	movlw	0
 14571   004820  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 14572   004822  0E00               	movlw	0
 14573   004824  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 14574   004826  EC1D  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 14575   00482A                     
 14576                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 14577   00482A  0E04               	movlw	4
 14578   00482C  0012               	return		;funcret
 14579   00482E                     __end_of_wr1RegCompleteHandler:
 14580                           	callstack 0
 14581                           
 14582 ;; *************** function _rd2RegCompleteHandler *****************
 14583 ;; Defined at:
 14584 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;  ptr             1    7[BANK0 ] PTR void 
 14587 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14588 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14589 ;; Auto vars:     Size  Location     Type
 14590 ;;		None
 14591 ;; Return value:  Size  Location     Type
 14592 ;;                  1    wreg      enum E363
 14593 ;; Registers used:
 14594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14595 ;; Tracked objects:
 14596 ;;		On entry : 0/0
 14597 ;;		On exit  : 0/0
 14598 ;;		Unchanged: 0/0
 14599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14600 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14603 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14604 ;;Total ram usage:        1 bytes
 14605 ;; Hardware stack levels used: 1
 14606 ;; Hardware stack levels required when called: 11
 14607 ;; This function calls:
 14608 ;;		_I2C_SetBuffer
 14609 ;;		_I2C_SetDataCompleteCallback
 14610 ;; This function is called by:
 14611 ;;		_I2C_Read2ByteRegister
 14612 ;;		_I2C_DO_TX
 14613 ;;		_I2C_DO_RX
 14614 ;;		_I2C_DO_TX_EMPTY
 14615 ;;		_I2C_DO_ADDRESS_NACK
 14616 ;;		_I2C_DO_RX_EMPTY
 14617 ;; This function uses a non-reentrant model
 14618 ;;
 14619                           
 14620                           	psect	text68
 14621   00482E                     __ptext68:
 14622                           	callstack 0
 14623   00482E                     _rd2RegCompleteHandler:
 14624                           	callstack 12
 14625   00482E                     
 14626                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 14627   00482E  C0DC  F0D5         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 14628   004832  0E00               	movlw	0
 14629   004834  0100               	movlb	0	; () banked
 14630   004836  6FD7               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
 14631   004838  0E02               	movlw	2
 14632   00483A  6FD6               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
 14633   00483C  EC9B  F024         	call	_I2C_SetBuffer	;wreg free
 14634   004840                     
 14635                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14636   004840  0E00               	movlw	0
 14637   004842  0100               	movlb	0	; () banked
 14638   004844  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 14639   004846  0E00               	movlw	0
 14640   004848  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 14641   00484A  0E00               	movlw	0
 14642   00484C  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 14643   00484E  EC1D  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 14644   004852                     
 14645                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 14646   004852  0E02               	movlw	2
 14647   004854  0012               	return		;funcret
 14648   004856                     __end_of_rd2RegCompleteHandler:
 14649                           	callstack 0
 14650                           
 14651 ;; *************** function _rd1RegCompleteHandler *****************
 14652 ;; Defined at:
 14653 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 14654 ;; Parameters:    Size  Location     Type
 14655 ;;  ptr             1    7[BANK0 ] PTR void 
 14656 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14657 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14658 ;; Auto vars:     Size  Location     Type
 14659 ;;		None
 14660 ;; Return value:  Size  Location     Type
 14661 ;;                  1    wreg      enum E363
 14662 ;; Registers used:
 14663 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14664 ;; Tracked objects:
 14665 ;;		On entry : 0/0
 14666 ;;		On exit  : 0/0
 14667 ;;		Unchanged: 0/0
 14668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14669 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14672 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14673 ;;Total ram usage:        1 bytes
 14674 ;; Hardware stack levels used: 1
 14675 ;; Hardware stack levels required when called: 11
 14676 ;; This function calls:
 14677 ;;		_I2C_SetBuffer
 14678 ;;		_I2C_SetDataCompleteCallback
 14679 ;; This function is called by:
 14680 ;;		_I2C_Read1ByteRegister
 14681 ;;		_I2C_DO_TX
 14682 ;;		_I2C_DO_RX
 14683 ;;		_I2C_DO_TX_EMPTY
 14684 ;;		_I2C_DO_ADDRESS_NACK
 14685 ;;		_I2C_DO_RX_EMPTY
 14686 ;; This function uses a non-reentrant model
 14687 ;;
 14688                           
 14689                           	psect	text69
 14690   004856                     __ptext69:
 14691                           	callstack 0
 14692   004856                     _rd1RegCompleteHandler:
 14693                           	callstack 12
 14694   004856                     
 14695                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 14696   004856  C0DC  F0D5         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 14697   00485A  0E00               	movlw	0
 14698   00485C  0100               	movlb	0	; () banked
 14699   00485E  6FD7               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
 14700   004860  0E01               	movlw	1
 14701   004862  6FD6               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
 14702   004864  EC9B  F024         	call	_I2C_SetBuffer	;wreg free
 14703   004868                     
 14704                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14705   004868  0E00               	movlw	0
 14706   00486A  0100               	movlb	0	; () banked
 14707   00486C  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 14708   00486E  0E00               	movlw	0
 14709   004870  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 14710   004872  0E00               	movlw	0
 14711   004874  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 14712   004876  EC1D  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 14713   00487A                     
 14714                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 14715   00487A  0E02               	movlw	2
 14716   00487C  0012               	return		;funcret
 14717   00487E                     __end_of_rd1RegCompleteHandler:
 14718                           	callstack 0
 14719                           
 14720 ;; *************** function _wr2RegCompleteHandler *****************
 14721 ;; Defined at:
 14722 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 14723 ;; Parameters:    Size  Location     Type
 14724 ;;  ptr             1    7[BANK0 ] PTR void 
 14725 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14726 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14727 ;; Auto vars:     Size  Location     Type
 14728 ;;		None
 14729 ;; Return value:  Size  Location     Type
 14730 ;;                  1    wreg      enum E363
 14731 ;; Registers used:
 14732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14733 ;; Tracked objects:
 14734 ;;		On entry : 0/0
 14735 ;;		On exit  : 0/0
 14736 ;;		Unchanged: 0/0
 14737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14738 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14741 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14742 ;;Total ram usage:        1 bytes
 14743 ;; Hardware stack levels used: 1
 14744 ;; Hardware stack levels required when called: 11
 14745 ;; This function calls:
 14746 ;;		_I2C_SetBuffer
 14747 ;;		_I2C_SetDataCompleteCallback
 14748 ;; This function is called by:
 14749 ;;		_I2C_Write2ByteRegister
 14750 ;;		_I2C_DO_TX
 14751 ;;		_I2C_DO_RX
 14752 ;;		_I2C_DO_TX_EMPTY
 14753 ;;		_I2C_DO_ADDRESS_NACK
 14754 ;;		_I2C_DO_RX_EMPTY
 14755 ;; This function uses a non-reentrant model
 14756 ;;
 14757                           
 14758                           	psect	text70
 14759   00487E                     __ptext70:
 14760                           	callstack 0
 14761   00487E                     _wr2RegCompleteHandler:
 14762                           	callstack 12
 14763   00487E                     
 14764                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 14765   00487E  C0DC  F0D5         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 14766   004882  0E00               	movlw	0
 14767   004884  0100               	movlb	0	; () banked
 14768   004886  6FD7               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
 14769   004888  0E02               	movlw	2
 14770   00488A  6FD6               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
 14771   00488C  EC9B  F024         	call	_I2C_SetBuffer	;wreg free
 14772   004890                     
 14773                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 14774   004890  0E00               	movlw	0
 14775   004892  0100               	movlb	0	; () banked
 14776   004894  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 14777   004896  0E00               	movlw	0
 14778   004898  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 14779   00489A  0E00               	movlw	0
 14780   00489C  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 14781   00489E  EC1D  F025         	call	_I2C_SetDataCompleteCallback	;wreg free
 14782   0048A2                     
 14783                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 14784   0048A2  0E04               	movlw	4
 14785   0048A4  0012               	return		;funcret
 14786   0048A6                     __end_of_wr2RegCompleteHandler:
 14787                           	callstack 0
 14788                           
 14789 ;; *************** function _I2C_SetDataCompleteCallback *****************
 14790 ;; Defined at:
 14791 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 14792 ;; Parameters:    Size  Location     Type
 14793 ;;  cb              2    4[BANK0 ] PTR FTN(PTR void ,)enum 
 14794 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 14795 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 14796 ;;  ptr             1    6[BANK0 ] PTR void 
 14797 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14798 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14799 ;; Auto vars:     Size  Location     Type
 14800 ;;		None
 14801 ;; Return value:  Size  Location     Type
 14802 ;;                  1    wreg      void 
 14803 ;; Registers used:
 14804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14805 ;; Tracked objects:
 14806 ;;		On entry : 0/0
 14807 ;;		On exit  : 0/0
 14808 ;;		Unchanged: 0/0
 14809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14810 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14811 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14813 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14814 ;;Total ram usage:        3 bytes
 14815 ;; Hardware stack levels used: 1
 14816 ;; Hardware stack levels required when called: 10
 14817 ;; This function calls:
 14818 ;;		_I2C_SetCallback
 14819 ;; This function is called by:
 14820 ;;		_I2C_Read1ByteRegister
 14821 ;;		_rd1RegCompleteHandler
 14822 ;;		_rd2RegCompleteHandler
 14823 ;;		_wr1RegCompleteHandler
 14824 ;;		_wr2RegCompleteHandler
 14825 ;;		_rdBlkRegCompleteHandler
 14826 ;;		_I2C_Read2ByteRegister
 14827 ;;		_I2C_Write1ByteRegister
 14828 ;;		_I2C_Write2ByteRegister
 14829 ;;		_I2C_ReadDataBlock
 14830 ;; This function uses a non-reentrant model
 14831 ;;
 14832                           
 14833                           	psect	text71
 14834   004A3A                     __ptext71:
 14835                           	callstack 0
 14836   004A3A                     _I2C_SetDataCompleteCallback:
 14837                           	callstack 18
 14838   004A3A                     
 14839                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 14840   004A3A  C0D9  F0D5         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 14841   004A3E  C0DA  F0D6         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 14842   004A42  C0DB  F0D7         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 14843   004A46  0E00               	movlw	0
 14844   004A48  EC14  F022         	call	_I2C_SetCallback
 14845   004A4C  0012               	return		;funcret
 14846   004A4E                     __end_of_I2C_SetDataCompleteCallback:
 14847                           	callstack 0
 14848                           
 14849 ;; *************** function _I2C_SetCallback *****************
 14850 ;; Defined at:
 14851 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 14852 ;; Parameters:    Size  Location     Type
 14853 ;;  idx             1    wreg     enum E3146
 14854 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 14855 ;;		 -> NULL(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 14856 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 14857 ;;  ptr             1    2[BANK0 ] PTR void 
 14858 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 14859 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 14860 ;; Auto vars:     Size  Location     Type
 14861 ;;  idx             1    3[BANK0 ] enum E3146
 14862 ;; Return value:  Size  Location     Type
 14863 ;;                  1    wreg      void 
 14864 ;; Registers used:
 14865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 14866 ;; Tracked objects:
 14867 ;;		On entry : 0/0
 14868 ;;		On exit  : 0/0
 14869 ;;		Unchanged: 0/0
 14870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14871 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14872 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14874 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14875 ;;Total ram usage:        4 bytes
 14876 ;; Hardware stack levels used: 1
 14877 ;; Hardware stack levels required when called: 9
 14878 ;; This function calls:
 14879 ;;		Nothing
 14880 ;; This function is called by:
 14881 ;;		_I2C_SetDataCompleteCallback
 14882 ;;		_I2C_SetAddressNackCallback
 14883 ;;		_I2C_SetWriteCollisionCallback
 14884 ;;		_I2C_SetDataNackCallback
 14885 ;;		_I2C_SetTimeoutCallback
 14886 ;; This function uses a non-reentrant model
 14887 ;;
 14888                           
 14889                           	psect	text72
 14890   004428                     __ptext72:
 14891                           	callstack 0
 14892   004428                     _I2C_SetCallback:
 14893                           	callstack 18
 14894                           
 14895                           ;incstack = 0
 14896                           ;I2C_SetCallback@idx stored from wreg
 14897   004428  0100               	movlb	0	; () banked
 14898   00442A  6FD8               	movwf	I2C_SetCallback@idx& (0+255),b
 14899   00442C                     
 14900                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 14901   00442C  0100               	movlb	0	; () banked
 14902   00442E  51D5               	movf	I2C_SetCallback@cb& (0+255),w,b
 14903   004430  11D6               	iorwf	(I2C_SetCallback@cb+1)& (0+255),w,b
 14904   004432  B4D8               	btfsc	status,2,c
 14905   004434  EF1E  F022         	goto	u10851
 14906   004438  EF20  F022         	goto	u10850
 14907   00443C                     u10851:
 14908   00443C  EF32  F022         	goto	l12167
 14909   004440                     u10850:
 14910   004440                     
 14911                           ; BSR set to: 0
 14912                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 14913   004440  51D8               	movf	I2C_SetCallback@idx& (0+255),w,b
 14914   004442  0D02               	mullw	2
 14915   004444  50F3               	movf	243,w,c
 14916   004446  0F60               	addlw	low _I2C_Status
 14917   004448  6ED9               	movwf	fsr2l,c
 14918   00444A  6ADA               	clrf	fsr2h,c
 14919   00444C  C0D5  FFDE         	movff	I2C_SetCallback@cb,postinc2
 14920   004450  C0D6  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 14921   004454                     
 14922                           ; BSR set to: 0
 14923                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 14924   004454  51D8               	movf	I2C_SetCallback@idx& (0+255),w,b
 14925   004456  0F6C               	addlw	low (_I2C_Status+12)
 14926   004458  6ED9               	movwf	fsr2l,c
 14927   00445A  6ADA               	clrf	fsr2h,c
 14928   00445C  C0D7  FFDF         	movff	I2C_SetCallback@ptr,indf2
 14929                           
 14930                           ;mcc_generated_files/i2c_master.c: 304:     }
 14931   004460  EF41  F022         	goto	l397
 14932   004464                     l12167:
 14933                           
 14934                           ; BSR set to: 0
 14935                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 14936   004464  51D8               	movf	I2C_SetCallback@idx& (0+255),w,b
 14937   004466  0D02               	mullw	2
 14938   004468  50F3               	movf	243,w,c
 14939   00446A  0F60               	addlw	low _I2C_Status
 14940   00446C  6ED9               	movwf	fsr2l,c
 14941   00446E  6ADA               	clrf	fsr2h,c
 14942   004470  0E5A               	movlw	low _I2C_CallbackReturnStop
 14943   004472  6EDE               	movwf	postinc2,c
 14944   004474  0E4B               	movlw	high _I2C_CallbackReturnStop
 14945   004476  6EDD               	movwf	postdec2,c
 14946   004478                     
 14947                           ; BSR set to: 0
 14948                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 14949   004478  51D8               	movf	I2C_SetCallback@idx& (0+255),w,b
 14950   00447A  0F6C               	addlw	low (_I2C_Status+12)
 14951   00447C  6ED9               	movwf	fsr2l,c
 14952   00447E  6ADA               	clrf	fsr2h,c
 14953   004480  6ADF               	clrf	indf2,c
 14954   004482                     l397:
 14955                           
 14956                           ; BSR set to: 0
 14957   004482  0012               	return		;funcret
 14958   004484                     __end_of_I2C_SetCallback:
 14959                           	callstack 0
 14960                           
 14961 ;; *************** function _I2C_SetBuffer *****************
 14962 ;; Defined at:
 14963 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 14964 ;; Parameters:    Size  Location     Type
 14965 ;;  buffer          1    0[BANK0 ] PTR void 
 14966 ;;		 -> I2C_Read1ByteRegister@returnValue$data(2), I2C_Read2ByteRegister@returnValue$data(2), I2C_Write1ByteRegister@dat
      +a$data(2), I2C_Write2ByteRegister@data$data(2), 
 14967 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), I2C_Write2ByteRegister@reg(1), 
 14968 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
 14969 ;;		 -> I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1
      +), 
 14970 ;;  bufferSize      2    1[BANK0 ] unsigned int 
 14971 ;; Auto vars:     Size  Location     Type
 14972 ;;		None
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  1    wreg      void 
 14975 ;; Registers used:
 14976 ;;		wreg, status,2, status,0
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 0/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14982 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14985 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14986 ;;Total ram usage:        3 bytes
 14987 ;; Hardware stack levels used: 1
 14988 ;; Hardware stack levels required when called: 9
 14989 ;; This function calls:
 14990 ;;		Nothing
 14991 ;; This function is called by:
 14992 ;;		_I2C_Read1ByteRegister
 14993 ;;		_rd1RegCompleteHandler
 14994 ;;		_rd2RegCompleteHandler
 14995 ;;		_wr1RegCompleteHandler
 14996 ;;		_wr2RegCompleteHandler
 14997 ;;		_rdBlkRegCompleteHandler
 14998 ;;		_I2C_Read2ByteRegister
 14999 ;;		_I2C_Write1ByteRegister
 15000 ;;		_I2C_Write2ByteRegister
 15001 ;;		_I2C_WriteNBytes
 15002 ;;		_I2C_ReadNBytes
 15003 ;;		_I2C_ReadDataBlock
 15004 ;; This function uses a non-reentrant model
 15005 ;;
 15006                           
 15007                           	psect	text73
 15008   004936                     __ptext73:
 15009                           	callstack 0
 15010   004936                     _I2C_SetBuffer:
 15011                           	callstack 19
 15012   004936                     
 15013                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 15014   004936  0100               	movlb	0	; () banked
 15015   004938  A77C               	btfss	(_I2C_Status+28)& (0+255),3,b
 15016   00493A  EFA1  F024         	goto	u10861
 15017   00493E  EFA3  F024         	goto	u10860
 15018   004942                     u10861:
 15019   004942  EFAA  F024         	goto	l377
 15020   004946                     u10860:
 15021   004946                     
 15022                           ; BSR set to: 0
 15023                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 15024   004946  C0D5  F077         	movff	I2C_SetBuffer@buffer,_I2C_Status+23
 15025   00494A                     
 15026                           ; BSR set to: 0
 15027                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 15028   00494A  C0D6  F078         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+24
 15029   00494E  C0D7  F079         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+25
 15030   004952                     
 15031                           ; BSR set to: 0
 15032                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 15033   004952  977C               	bcf	(_I2C_Status+28)& (0+255),3,b
 15034   004954                     l377:
 15035                           
 15036                           ; BSR set to: 0
 15037   004954  0012               	return		;funcret
 15038   004956                     __end_of_I2C_SetBuffer:
 15039                           	callstack 0
 15040                           
 15041 ;; *************** function _I2C_MasterStop *****************
 15042 ;; Defined at:
 15043 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 15044 ;; Parameters:    Size  Location     Type
 15045 ;;		None
 15046 ;; Auto vars:     Size  Location     Type
 15047 ;;		None
 15048 ;; Return value:  Size  Location     Type
 15049 ;;                  1    wreg      void 
 15050 ;; Registers used:
 15051 ;;		None
 15052 ;; Tracked objects:
 15053 ;;		On entry : 0/0
 15054 ;;		On exit  : 0/0
 15055 ;;		Unchanged: 0/0
 15056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15060 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15061 ;;Total ram usage:        0 bytes
 15062 ;; Hardware stack levels used: 1
 15063 ;; Hardware stack levels required when called: 9
 15064 ;; This function calls:
 15065 ;;		Nothing
 15066 ;; This function is called by:
 15067 ;;		_I2C_DO_SEND_STOP
 15068 ;; This function uses a non-reentrant model
 15069 ;;
 15070                           
 15071                           	psect	text74
 15072   004B5E                     __ptext74:
 15073                           	callstack 0
 15074   004B5E                     _I2C_MasterStop:
 15075                           	callstack 13
 15076   004B5E                     
 15077                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 15078   004B5E  84C5               	bsf	197,2,c	;volatile
 15079   004B60  0012               	return		;funcret
 15080   004B62                     __end_of_I2C_MasterStop:
 15081                           	callstack 0
 15082                           
 15083 ;; *************** function _I2C_MasterEnableRestart *****************
 15084 ;; Defined at:
 15085 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 15086 ;; Parameters:    Size  Location     Type
 15087 ;;		None
 15088 ;; Auto vars:     Size  Location     Type
 15089 ;;		None
 15090 ;; Return value:  Size  Location     Type
 15091 ;;                  1    wreg      void 
 15092 ;; Registers used:
 15093 ;;		None
 15094 ;; Tracked objects:
 15095 ;;		On entry : 0/0
 15096 ;;		On exit  : 0/0
 15097 ;;		Unchanged: 0/0
 15098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15102 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15103 ;;Total ram usage:        0 bytes
 15104 ;; Hardware stack levels used: 1
 15105 ;; Hardware stack levels required when called: 9
 15106 ;; This function calls:
 15107 ;;		Nothing
 15108 ;; This function is called by:
 15109 ;;		_I2C_DO_SEND_RESTART_READ
 15110 ;;		_I2C_DO_SEND_RESTART_WRITE
 15111 ;;		_I2C_DO_SEND_RESTART
 15112 ;;		_I2C_DO_RX_EMPTY
 15113 ;; This function uses a non-reentrant model
 15114 ;;
 15115                           
 15116                           	psect	text75
 15117   004B62                     __ptext75:
 15118                           	callstack 0
 15119   004B62                     _I2C_MasterEnableRestart:
 15120                           	callstack 13
 15121   004B62                     
 15122                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 15123   004B62  82C5               	bsf	197,1,c	;volatile
 15124   004B64  0012               	return		;funcret
 15125   004B66                     __end_of_I2C_MasterEnableRestart:
 15126                           	callstack 0
 15127                           
 15128 ;; *************** function _I2C_MasterStart *****************
 15129 ;; Defined at:
 15130 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 15131 ;; Parameters:    Size  Location     Type
 15132 ;;		None
 15133 ;; Auto vars:     Size  Location     Type
 15134 ;;		None
 15135 ;; Return value:  Size  Location     Type
 15136 ;;                  1    wreg      void 
 15137 ;; Registers used:
 15138 ;;		None
 15139 ;; Tracked objects:
 15140 ;;		On entry : 0/0
 15141 ;;		On exit  : 0/0
 15142 ;;		Unchanged: 0/0
 15143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15148 ;;Total ram usage:        0 bytes
 15149 ;; Hardware stack levels used: 1
 15150 ;; Hardware stack levels required when called: 9
 15151 ;; This function calls:
 15152 ;;		Nothing
 15153 ;; This function is called by:
 15154 ;;		_I2C_MasterOperation
 15155 ;; This function uses a non-reentrant model
 15156 ;;
 15157                           
 15158                           	psect	text76
 15159   004B66                     __ptext76:
 15160                           	callstack 0
 15161   004B66                     _I2C_MasterStart:
 15162                           	callstack 17
 15163   004B66                     
 15164                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 15165   004B66  80C5               	bsf	197,0,c	;volatile
 15166   004B68  0012               	return		;funcret
 15167   004B6A                     __end_of_I2C_MasterStart:
 15168                           	callstack 0
 15169                           
 15170 ;; *************** function _I2C_Close *****************
 15171 ;; Defined at:
 15172 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 15173 ;; Parameters:    Size  Location     Type
 15174 ;;		None
 15175 ;; Auto vars:     Size  Location     Type
 15176 ;;  returnValue     1    0[BANK0 ] enum E358
 15177 ;; Return value:  Size  Location     Type
 15178 ;;                  1    wreg      enum E358
 15179 ;; Registers used:
 15180 ;;		wreg, status,2, cstack
 15181 ;; Tracked objects:
 15182 ;;		On entry : 0/0
 15183 ;;		On exit  : 0/0
 15184 ;;		Unchanged: 0/0
 15185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15187 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15189 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15190 ;;Total ram usage:        1 bytes
 15191 ;; Hardware stack levels used: 1
 15192 ;; Hardware stack levels required when called: 10
 15193 ;; This function calls:
 15194 ;;		_I2C_MasterClearIrq
 15195 ;;		_I2C_MasterClose
 15196 ;;		_I2C_MasterDisableIrq
 15197 ;; This function is called by:
 15198 ;;		_I2C_Read1ByteRegister
 15199 ;;		_I2C_Read2ByteRegister
 15200 ;;		_I2C_Write1ByteRegister
 15201 ;;		_I2C_Write2ByteRegister
 15202 ;;		_I2C_WriteNBytes
 15203 ;;		_I2C_ReadNBytes
 15204 ;;		_I2C_ReadDataBlock
 15205 ;; This function uses a non-reentrant model
 15206 ;;
 15207                           
 15208                           	psect	text77
 15209   0047D8                     __ptext77:
 15210                           	callstack 0
 15211   0047D8                     _I2C_Close:
 15212                           	callstack 18
 15213   0047D8                     
 15214                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 15215   0047D8  0E01               	movlw	1
 15216   0047DA  0100               	movlb	0	; () banked
 15217   0047DC  6FD5               	movwf	I2C_Close@returnValue& (0+255),b
 15218   0047DE                     
 15219                           ; BSR set to: 0
 15220                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 15221   0047DE  B37C               	btfsc	(_I2C_Status+28)& (0+255),1,b
 15222   0047E0  EFF4  F023         	goto	u12131
 15223   0047E4  EFF6  F023         	goto	u12130
 15224   0047E8                     u12131:
 15225   0047E8  EF00  F024         	goto	l13107
 15226   0047EC                     u12130:
 15227   0047EC                     
 15228                           ; BSR set to: 0
 15229                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 15230   0047EC  957C               	bcf	(_I2C_Status+28)& (0+255),2,b
 15231                           
 15232                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 15233   0047EE  6976               	setf	(_I2C_Status+22)& (0+255),b
 15234   0047F0                     
 15235                           ; BSR set to: 0
 15236                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 15237   0047F0  ECB9  F025         	call	_I2C_MasterClearIrq	;wreg free
 15238                           
 15239                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 15240   0047F4  ECB5  F025         	call	_I2C_MasterDisableIrq	;wreg free
 15241                           
 15242                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 15243   0047F8  ECB7  F025         	call	_I2C_MasterClose	;wreg free
 15244   0047FC                     
 15245                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 15246   0047FC  C07B  F0D5         	movff	_I2C_Status+27,I2C_Close@returnValue
 15247   004800                     l13107:
 15248                           
 15249                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 15250   004800  0100               	movlb	0	; () banked
 15251   004802  51D5               	movf	I2C_Close@returnValue& (0+255),w,b
 15252   004804                     
 15253                           ; BSR set to: 0
 15254   004804  0012               	return		;funcret
 15255   004806                     __end_of_I2C_Close:
 15256                           	callstack 0
 15257                           
 15258 ;; *************** function _I2C_MasterDisableIrq *****************
 15259 ;; Defined at:
 15260 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 15261 ;; Parameters:    Size  Location     Type
 15262 ;;		None
 15263 ;; Auto vars:     Size  Location     Type
 15264 ;;		None
 15265 ;; Return value:  Size  Location     Type
 15266 ;;                  1    wreg      void 
 15267 ;; Registers used:
 15268 ;;		None
 15269 ;; Tracked objects:
 15270 ;;		On entry : 0/0
 15271 ;;		On exit  : 0/0
 15272 ;;		Unchanged: 0/0
 15273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15275 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15277 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15278 ;;Total ram usage:        0 bytes
 15279 ;; Hardware stack levels used: 1
 15280 ;; Hardware stack levels required when called: 9
 15281 ;; This function calls:
 15282 ;;		Nothing
 15283 ;; This function is called by:
 15284 ;;		_I2C_Close
 15285 ;;		_I2C_SetTimeOut
 15286 ;; This function uses a non-reentrant model
 15287 ;;
 15288                           
 15289                           	psect	text78
 15290   004B6A                     __ptext78:
 15291                           	callstack 0
 15292   004B6A                     _I2C_MasterDisableIrq:
 15293                           	callstack 18
 15294   004B6A                     
 15295                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 15296   004B6A  969D               	bcf	157,3,c	;volatile
 15297   004B6C  0012               	return		;funcret
 15298   004B6E                     __end_of_I2C_MasterDisableIrq:
 15299                           	callstack 0
 15300                           
 15301 ;; *************** function _I2C_MasterClose *****************
 15302 ;; Defined at:
 15303 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 15304 ;; Parameters:    Size  Location     Type
 15305 ;;		None
 15306 ;; Auto vars:     Size  Location     Type
 15307 ;;		None
 15308 ;; Return value:  Size  Location     Type
 15309 ;;                  1    wreg      void 
 15310 ;; Registers used:
 15311 ;;		None
 15312 ;; Tracked objects:
 15313 ;;		On entry : 0/0
 15314 ;;		On exit  : 0/0
 15315 ;;		Unchanged: 0/0
 15316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15321 ;;Total ram usage:        0 bytes
 15322 ;; Hardware stack levels used: 1
 15323 ;; Hardware stack levels required when called: 9
 15324 ;; This function calls:
 15325 ;;		Nothing
 15326 ;; This function is called by:
 15327 ;;		_I2C_Close
 15328 ;; This function uses a non-reentrant model
 15329 ;;
 15330                           
 15331                           	psect	text79
 15332   004B6E                     __ptext79:
 15333                           	callstack 0
 15334   004B6E                     _I2C_MasterClose:
 15335                           	callstack 18
 15336   004B6E                     
 15337                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 15338   004B6E  9AC6               	bcf	198,5,c	;volatile
 15339   004B70  0012               	return		;funcret
 15340   004B72                     __end_of_I2C_MasterClose:
 15341                           	callstack 0
 15342                           
 15343 ;; *************** function _I2C_MasterClearIrq *****************
 15344 ;; Defined at:
 15345 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 15346 ;; Parameters:    Size  Location     Type
 15347 ;;		None
 15348 ;; Auto vars:     Size  Location     Type
 15349 ;;		None
 15350 ;; Return value:  Size  Location     Type
 15351 ;;                  1    wreg      void 
 15352 ;; Registers used:
 15353 ;;		None
 15354 ;; Tracked objects:
 15355 ;;		On entry : 0/0
 15356 ;;		On exit  : 0/0
 15357 ;;		Unchanged: 0/0
 15358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15363 ;;Total ram usage:        0 bytes
 15364 ;; Hardware stack levels used: 1
 15365 ;; Hardware stack levels required when called: 9
 15366 ;; This function calls:
 15367 ;;		Nothing
 15368 ;; This function is called by:
 15369 ;;		_I2C_Open
 15370 ;;		_I2C_Close
 15371 ;;		_I2C_MasterFsm
 15372 ;; This function uses a non-reentrant model
 15373 ;;
 15374                           
 15375                           	psect	text80
 15376   004B72                     __ptext80:
 15377                           	callstack 0
 15378   004B72                     _I2C_MasterClearIrq:
 15379                           	callstack 18
 15380   004B72                     
 15381                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 15382   004B72  969E               	bcf	158,3,c	;volatile
 15383   004B74  0012               	return		;funcret
 15384   004B76                     __end_of_I2C_MasterClearIrq:
 15385                           	callstack 0
 15386                           
 15387 ;; *************** function _ECU_LCD_4Bit_Initialize *****************
 15388 ;; Defined at:
 15389 ;;		line 20 in file "ECU_layer/LCD/LCD.c"
 15390 ;; Parameters:    Size  Location     Type
 15391 ;;  _LCD            1   13[BANK0 ] PTR const struct .
 15392 ;;		 -> LCD_1(6), 
 15393 ;; Auto vars:     Size  Location     Type
 15394 ;;  rt              1   16[BANK0 ] unsigned char 
 15395 ;;  LCD_Counter     1   15[BANK0 ] unsigned char 
 15396 ;; Return value:  Size  Location     Type
 15397 ;;                  1    wreg      unsigned char 
 15398 ;; Registers used:
 15399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15400 ;; Tracked objects:
 15401 ;;		On entry : 0/0
 15402 ;;		On exit  : 0/0
 15403 ;;		Unchanged: 0/0
 15404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15405 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15406 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15407 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15408 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15409 ;;Total ram usage:        4 bytes
 15410 ;; Hardware stack levels used: 1
 15411 ;; Hardware stack levels required when called: 12
 15412 ;; This function calls:
 15413 ;;		_ECU_LCD_4Bit_Send_Command
 15414 ;;		_gpio_pin_initialize
 15415 ;; This function is called by:
 15416 ;;		_main
 15417 ;; This function uses a non-reentrant model
 15418 ;;
 15419                           
 15420                           	psect	text81
 15421   002DA8                     __ptext81:
 15422                           	callstack 0
 15423   002DA8                     _ECU_LCD_4Bit_Initialize:
 15424                           	callstack 18
 15425   002DA8                     
 15426                           ;ECU_layer/LCD/LCD.c: 22:     uint8 LCD_Counter = 0;
 15427   002DA8  0100               	movlb	0	; () banked
 15428   002DAA  6BE4               	clrf	ECU_LCD_4Bit_Initialize@LCD_Counter& (0+255),b
 15429   002DAC                     
 15430                           ; BSR set to: 0
 15431                           ;ECU_layer/LCD/LCD.c: 23:     if(((void*)0) == _LCD ){
 15432   002DAC  51E2               	movf	ECU_LCD_4Bit_Initialize@_LCD& (0+255),w,b
 15433   002DAE  A4D8               	btfss	status,2,c
 15434   002DB0  EFDC  F016         	goto	u12561
 15435   002DB4  EFDE  F016         	goto	u12560
 15436   002DB8                     u12561:
 15437   002DB8  EFE1  F016         	goto	l13477
 15438   002DBC                     u12560:
 15439   002DBC                     
 15440                           ; BSR set to: 0
 15441                           ;ECU_layer/LCD/LCD.c: 24:        rt = (STD_ReturnType)0x00;
 15442   002DBC  6BE5               	clrf	ECU_LCD_4Bit_Initialize@rt& (0+255),b
 15443                           
 15444                           ;ECU_layer/LCD/LCD.c: 25:     }
 15445   002DBE  EF5E  F017         	goto	l13513
 15446   002DC2                     l13477:
 15447                           
 15448                           ; BSR set to: 0
 15449                           ;ECU_layer/LCD/LCD.c: 27:         rt = gpio_pin_initialize(&(_LCD->LCD_E));
 15450   002DC2  C0E2  F0E3         	movff	ECU_LCD_4Bit_Initialize@_LCD,??_ECU_LCD_4Bit_Initialize
 15451   002DC6  0E01               	movlw	1
 15452   002DC8  27E3               	addwf	??_ECU_LCD_4Bit_Initialize& (0+255),f,b
 15453   002DCA  C0E3  F0DB         	movff	??_ECU_LCD_4Bit_Initialize,gpio_pin_initialize@pinConfig
 15454   002DCE  6BDC               	clrf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
 15455   002DD0  EC83  F021         	call	_gpio_pin_initialize	;wreg free
 15456   002DD4  0100               	movlb	0	; () banked
 15457   002DD6  6FE5               	movwf	ECU_LCD_4Bit_Initialize@rt& (0+255),b
 15458                           
 15459                           ;ECU_layer/LCD/LCD.c: 28:         rt = gpio_pin_initialize(&(_LCD->LCD_RS));
 15460   002DD8  C0E2  F0DB         	movff	ECU_LCD_4Bit_Initialize@_LCD,gpio_pin_initialize@pinConfig
 15461   002DDC  6BDC               	clrf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
 15462   002DDE  EC83  F021         	call	_gpio_pin_initialize	;wreg free
 15463   002DE2  0100               	movlb	0	; () banked
 15464   002DE4  6FE5               	movwf	ECU_LCD_4Bit_Initialize@rt& (0+255),b
 15465   002DE6                     
 15466                           ; BSR set to: 0
 15467                           ;ECU_layer/LCD/LCD.c: 29:         for(LCD_Counter = 0; LCD_Counter<4 ; LCD_Counter++){
 15468   002DE6  6BE4               	clrf	ECU_LCD_4Bit_Initialize@LCD_Counter& (0+255),b
 15469   002DE8                     l13485:
 15470                           
 15471                           ; BSR set to: 0
 15472   002DE8  51E2               	movf	ECU_LCD_4Bit_Initialize@_LCD& (0+255),w,b
 15473   002DEA  25E4               	addwf	ECU_LCD_4Bit_Initialize@LCD_Counter& (0+255),w,b
 15474   002DEC  6FE3               	movwf	??_ECU_LCD_4Bit_Initialize& (0+255),b
 15475   002DEE  0E02               	movlw	2
 15476   002DF0  27E3               	addwf	??_ECU_LCD_4Bit_Initialize& (0+255),f,b
 15477   002DF2  C0E3  F0DB         	movff	??_ECU_LCD_4Bit_Initialize,gpio_pin_initialize@pinConfig
 15478   002DF6  6BDC               	clrf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
 15479   002DF8  EC83  F021         	call	_gpio_pin_initialize	;wreg free
 15480   002DFC                     
 15481                           ;ECU_layer/LCD/LCD.c: 31:         }
 15482   002DFC  0100               	movlb	0	; () banked
 15483   002DFE  2BE4               	incf	ECU_LCD_4Bit_Initialize@LCD_Counter& (0+255),f,b
 15484   002E00                     
 15485                           ; BSR set to: 0
 15486   002E00  0E03               	movlw	3
 15487   002E02  65E4               	cpfsgt	ECU_LCD_4Bit_Initialize@LCD_Counter& (0+255),b
 15488   002E04  EF06  F017         	goto	u12571
 15489   002E08  EF08  F017         	goto	u12570
 15490   002E0C                     u12571:
 15491   002E0C  EFF4  F016         	goto	l13485
 15492   002E10                     u12570:
 15493   002E10                     
 15494                           ; BSR set to: 0
 15495                           ;ECU_layer/LCD/LCD.c: 32:         _delay((unsigned long)((15)*(8000000UL/4000.0)));
 15496   002E10  0E27               	movlw	39
 15497   002E12  0100               	movlb	0	; () banked
 15498   002E14  6FE3               	movwf	??_ECU_LCD_4Bit_Initialize& (0+255),b
 15499   002E16  0EF5               	movlw	245
 15500   002E18                     u13947:
 15501   002E18  2EE8               	decfsz	wreg,f,c
 15502   002E1A  D7FE               	bra	u13947
 15503   002E1C  2FE3               	decfsz	??_ECU_LCD_4Bit_Initialize& (0+255),f,b
 15504   002E1E  D7FC               	bra	u13947
 15505   002E20  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 15506   002E24  0E38               	movlw	56
 15507   002E26  0100               	movlb	0	; () banked
 15508   002E28  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 15509   002E2A  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 15510   002E2E                     
 15511                           ;ECU_layer/LCD/LCD.c: 34:         _delay((unsigned long)((4.1)*(8000000UL/4000.0)));
 15512   002E2E  0E0B               	movlw	11
 15513   002E30  0100               	movlb	0	; () banked
 15514   002E32  6FE3               	movwf	??_ECU_LCD_4Bit_Initialize& (0+255),b
 15515   002E34  0EA5               	movlw	165
 15516   002E36                     u13957:
 15517   002E36  2EE8               	decfsz	wreg,f,c
 15518   002E38  D7FE               	bra	u13957
 15519   002E3A  2FE3               	decfsz	??_ECU_LCD_4Bit_Initialize& (0+255),f,b
 15520   002E3C  D7FC               	bra	u13957
 15521   002E3E  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 15522   002E42  0E38               	movlw	56
 15523   002E44  0100               	movlb	0	; () banked
 15524   002E46  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 15525   002E48  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 15526   002E4C                     
 15527                           ;ECU_layer/LCD/LCD.c: 36:         _delay((unsigned long)((100)*(8000000UL/4000000.0)));
 15528   002E4C  0E42               	movlw	66
 15529   002E4E                     u13967:
 15530   002E4E  2EE8               	decfsz	wreg,f,c
 15531   002E50  D7FE               	bra	u13967
 15532   002E52  F000 F000          	nop2	
 15533   002E56  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 15534   002E5A  0E38               	movlw	56
 15535   002E5C  0100               	movlb	0	; () banked
 15536   002E5E  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 15537   002E60  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 15538   002E64  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 15539   002E68  0E01               	movlw	1
 15540   002E6A  0100               	movlb	0	; () banked
 15541   002E6C  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 15542   002E6E  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 15543   002E72  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 15544   002E76  0E02               	movlw	2
 15545   002E78  0100               	movlb	0	; () banked
 15546   002E7A  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 15547   002E7C  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 15548   002E80  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 15549   002E84  0E06               	movlw	6
 15550   002E86  0100               	movlb	0	; () banked
 15551   002E88  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 15552   002E8A  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 15553   002E8E  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 15554   002E92  0E0C               	movlw	12
 15555   002E94  0100               	movlb	0	; () banked
 15556   002E96  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 15557   002E98  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 15558   002E9C  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 15559   002EA0  0E28               	movlw	40
 15560   002EA2  0100               	movlb	0	; () banked
 15561   002EA4  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 15562   002EA6  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 15563   002EAA                     
 15564                           ;ECU_layer/LCD/LCD.c: 44:         rt = ECU_LCD_4Bit_Send_Command(_LCD,0x80);
 15565   002EAA  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 15566   002EAE  0E80               	movlw	128
 15567   002EB0  0100               	movlb	0	; () banked
 15568   002EB2  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 15569   002EB4  ECEA  F020         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 15570   002EB8  0100               	movlb	0	; () banked
 15571   002EBA  6FE5               	movwf	ECU_LCD_4Bit_Initialize@rt& (0+255),b
 15572   002EBC                     l13513:
 15573                           
 15574                           ; BSR set to: 0
 15575                           ;ECU_layer/LCD/LCD.c: 47:     return rt;
 15576   002EBC  51E5               	movf	ECU_LCD_4Bit_Initialize@rt& (0+255),w,b
 15577   002EBE                     
 15578                           ; BSR set to: 0
 15579   002EBE  0012               	return		;funcret
 15580   002EC0                     __end_of_ECU_LCD_4Bit_Initialize:
 15581                           	callstack 0
 15582                           
 15583 ;; *************** function _gpio_pin_initialize *****************
 15584 ;; Defined at:
 15585 ;;		line 197 in file "MCAL_layer/GPIO/hal_gpio.c"
 15586 ;; Parameters:    Size  Location     Type
 15587 ;;  pinConfig       2    6[BANK0 ] PTR const struct .
 15588 ;;		 -> CCP1_obj$CCPx_PIN$port(1), ECU_Relay_Initialize@relay_t(1), pinRC7(1), pinRC6(1), 
 15589 ;;		 -> keypad_1$KeypadRowsConfig(4), keypad_1(8), LCD_1$DataPins(4), LCD_1(6), 
 15590 ;; Auto vars:     Size  Location     Type
 15591 ;;  rt              1    9[BANK0 ] unsigned char 
 15592 ;; Return value:  Size  Location     Type
 15593 ;;                  1    wreg      unsigned char 
 15594 ;; Registers used:
 15595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15596 ;; Tracked objects:
 15597 ;;		On entry : 0/0
 15598 ;;		On exit  : 0/0
 15599 ;;		Unchanged: 0/0
 15600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15602 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15603 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15604 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15605 ;;Total ram usage:        4 bytes
 15606 ;; Hardware stack levels used: 1
 15607 ;; Hardware stack levels required when called: 10
 15608 ;; This function calls:
 15609 ;;		_gpio_pin_direction_initialize
 15610 ;;		_gpio_pin_write_logic
 15611 ;; This function is called by:
 15612 ;;		_PinsConfig@hal_usart$F4705
 15613 ;;		_keyPad_Initialize
 15614 ;;		_ECU_LCD_4Bit_Initialize
 15615 ;;		_CCPx_Init
 15616 ;;		_ECU_DC_Motor_initialize
 15617 ;;		_ECU_LCD_8Bit_Initialize
 15618 ;;		_ECU_Relay_Initialize
 15619 ;;		_ECU_Segment_initialize
 15620 ;; This function uses a non-reentrant model
 15621 ;;
 15622                           
 15623                           	psect	text82
 15624   004306                     __ptext82:
 15625                           	callstack 0
 15626   004306                     _gpio_pin_initialize:
 15627                           	callstack 19
 15628   004306                     
 15629                           ;MCAL_layer/GPIO/hal_gpio.c: 198:     STD_ReturnType rt = (STD_ReturnType)0x01;
 15630   004306  0E01               	movlw	1
 15631   004308  0100               	movlb	0	; () banked
 15632   00430A  6FDE               	movwf	gpio_pin_initialize@rt& (0+255),b
 15633   00430C                     
 15634                           ; BSR set to: 0
 15635                           ;MCAL_layer/GPIO/hal_gpio.c: 199:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 
      +                          -1 ){
 15636   00430C  51DB               	movf	gpio_pin_initialize@pinConfig& (0+255),w,b
 15637   00430E  11DC               	iorwf	(gpio_pin_initialize@pinConfig+1)& (0+255),w,b
 15638   004310  B4D8               	btfsc	status,2,c
 15639   004312  EF8D  F021         	goto	u11311
 15640   004316  EF8F  F021         	goto	u11310
 15641   00431A                     u11311:
 15642   00431A  EFA0  F021         	goto	l1037
 15643   00431E                     u11310:
 15644   00431E                     
 15645                           ; BSR set to: 0
 15646   00431E  C0DB  FFD9         	movff	gpio_pin_initialize@pinConfig,fsr2l
 15647   004322  C0DC  FFDA         	movff	gpio_pin_initialize@pinConfig+1,fsr2h
 15648   004326  30DF               	rrcf	223,w,c
 15649   004328  32E8               	rrcf	wreg,f,c
 15650   00432A  32E8               	rrcf	wreg,f,c
 15651   00432C  0B07               	andlw	7
 15652   00432E  6FDD               	movwf	??_gpio_pin_initialize& (0+255),b
 15653   004330  0E07               	movlw	7
 15654   004332  65DD               	cpfsgt	??_gpio_pin_initialize& (0+255),b
 15655   004334  EF9E  F021         	goto	u11321
 15656   004338  EFA0  F021         	goto	u11320
 15657   00433C                     u11321:
 15658   00433C  EFA3  F021         	goto	l12619
 15659   004340                     u11320:
 15660   004340                     l1037:
 15661                           
 15662                           ; BSR set to: 0
 15663                           ;MCAL_layer/GPIO/hal_gpio.c: 200:         rt = (STD_ReturnType)0x00;
 15664   004340  6BDE               	clrf	gpio_pin_initialize@rt& (0+255),b
 15665                           
 15666                           ;MCAL_layer/GPIO/hal_gpio.c: 201:     }
 15667   004342  EFB2  F021         	goto	l12621
 15668   004346                     l12619:
 15669                           
 15670                           ; BSR set to: 0
 15671                           ;MCAL_layer/GPIO/hal_gpio.c: 203:         gpio_pin_direction_initialize (pinConfig);
 15672   004346  C0DB  F0D5         	movff	gpio_pin_initialize@pinConfig,gpio_pin_direction_initialize@pinConfig
 15673   00434A  C0DC  F0D6         	movff	gpio_pin_initialize@pinConfig+1,gpio_pin_direction_initialize@pinConfig+1
 15674   00434E  EC01  F011         	call	_gpio_pin_direction_initialize	;wreg free
 15675                           
 15676                           ;MCAL_layer/GPIO/hal_gpio.c: 204:         gpio_pin_write_logic(pinConfig,GPIO_Pin_Logic_
      +                          LOW);
 15677   004352  C0DB  F0D5         	movff	gpio_pin_initialize@pinConfig,gpio_pin_write_logic@pinConfig
 15678   004356  C0DC  F0D6         	movff	gpio_pin_initialize@pinConfig+1,gpio_pin_write_logic@pinConfig+1
 15679   00435A  0E00               	movlw	0
 15680   00435C  0100               	movlb	0	; () banked
 15681   00435E  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 15682   004360  EC69  F012         	call	_gpio_pin_write_logic	;wreg free
 15683   004364                     l12621:
 15684                           
 15685                           ;MCAL_layer/GPIO/hal_gpio.c: 207:     return rt;
 15686   004364  0100               	movlb	0	; () banked
 15687   004366  51DE               	movf	gpio_pin_initialize@rt& (0+255),w,b
 15688   004368                     
 15689                           ; BSR set to: 0
 15690   004368  0012               	return		;funcret
 15691   00436A                     __end_of_gpio_pin_initialize:
 15692                           	callstack 0
 15693                           
 15694 ;; *************** function _gpio_pin_direction_initialize *****************
 15695 ;; Defined at:
 15696 ;;		line 20 in file "MCAL_layer/GPIO/hal_gpio.c"
 15697 ;; Parameters:    Size  Location     Type
 15698 ;;  pinConfig       2    0[BANK0 ] PTR const struct .
 15699 ;;		 -> CCP1_obj$CCPx_PIN$port(1), ECU_Relay_Initialize@relay_t(1), LED_init@LED(1), pinRC7(1), 
 15700 ;;		 -> pinRC6(1), keypad_1$KeypadColoumnsConfig(4), keypad_1$KeypadRowsConfig(4), keypad_1(8), 
 15701 ;;		 -> LCD_1$DataPins(4), LCD_1(6), 
 15702 ;; Auto vars:     Size  Location     Type
 15703 ;;  rt              1    4[BANK0 ] unsigned char 
 15704 ;; Return value:  Size  Location     Type
 15705 ;;                  1    wreg      unsigned char 
 15706 ;; Registers used:
 15707 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15708 ;; Tracked objects:
 15709 ;;		On entry : 0/0
 15710 ;;		On exit  : 0/0
 15711 ;;		Unchanged: 0/0
 15712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15713 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15714 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15715 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15716 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15717 ;;Total ram usage:        5 bytes
 15718 ;; Hardware stack levels used: 1
 15719 ;; Hardware stack levels required when called: 9
 15720 ;; This function calls:
 15721 ;;		Nothing
 15722 ;; This function is called by:
 15723 ;;		_gpio_pin_initialize
 15724 ;;		_keyPad_Initialize
 15725 ;;		_Interrupt_INTx_Pin_Init
 15726 ;;		_Interrupt_RBx_Pin_Init
 15727 ;;		_LED_init
 15728 ;;		_ECU_Button_Intalize
 15729 ;;		_ECU_STEPPER_Motor_initialize
 15730 ;; This function uses a non-reentrant model
 15731 ;;
 15732                           
 15733                           	psect	text83
 15734   002202                     __ptext83:
 15735                           	callstack 0
 15736   002202                     _gpio_pin_direction_initialize:
 15737                           	callstack 19
 15738   002202                     
 15739                           ;MCAL_layer/GPIO/hal_gpio.c: 21:     STD_ReturnType rt = (STD_ReturnType)0x01;
 15740   002202  0E01               	movlw	1
 15741   002204  0100               	movlb	0	; () banked
 15742   002206  6FD9               	movwf	gpio_pin_direction_initialize@rt& (0+255),b
 15743   002208                     
 15744                           ; BSR set to: 0
 15745                           ;MCAL_layer/GPIO/hal_gpio.c: 22:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 -
      +                          1 ){
 15746   002208  51D5               	movf	gpio_pin_direction_initialize@pinConfig& (0+255),w,b
 15747   00220A  11D6               	iorwf	(gpio_pin_direction_initialize@pinConfig+1)& (0+255),w,b
 15748   00220C  B4D8               	btfsc	status,2,c
 15749   00220E  EF0B  F011         	goto	u11121
 15750   002212  EF0D  F011         	goto	u11120
 15751   002216                     u11121:
 15752   002216  EF1E  F011         	goto	l936
 15753   00221A                     u11120:
 15754   00221A                     
 15755                           ; BSR set to: 0
 15756   00221A  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 15757   00221E  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 15758   002222  30DF               	rrcf	223,w,c
 15759   002224  32E8               	rrcf	wreg,f,c
 15760   002226  32E8               	rrcf	wreg,f,c
 15761   002228  0B07               	andlw	7
 15762   00222A  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 15763   00222C  0E07               	movlw	7
 15764   00222E  65D7               	cpfsgt	??_gpio_pin_direction_initialize& (0+255),b
 15765   002230  EF1C  F011         	goto	u11131
 15766   002234  EF1E  F011         	goto	u11130
 15767   002238                     u11131:
 15768   002238  EF50  F012         	goto	l12533
 15769   00223C                     u11130:
 15770   00223C                     l936:
 15771                           
 15772                           ; BSR set to: 0
 15773                           ;MCAL_layer/GPIO/hal_gpio.c: 23:         rt = (STD_ReturnType)0x00;
 15774   00223C  6BD9               	clrf	gpio_pin_direction_initialize@rt& (0+255),b
 15775                           
 15776                           ;MCAL_layer/GPIO/hal_gpio.c: 24:     }
 15777   00223E  EF67  F012         	goto	l12535
 15778   002242                     l12509:
 15779                           
 15780                           ; BSR set to: 0
 15781                           ;MCAL_layer/GPIO/hal_gpio.c: 30:                         TRISA &= ~(1 << pinConfig ->pin
      +                          );break;
 15782   002242  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 15783   002246  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 15784   00224A  30DF               	rrcf	223,w,c
 15785   00224C  32E8               	rrcf	wreg,f,c
 15786   00224E  32E8               	rrcf	wreg,f,c
 15787   002250  0B07               	andlw	7
 15788   002252  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 15789   002254  0E01               	movlw	1
 15790   002256  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 15791   002258  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 15792   00225A  EF31  F011         	goto	u11144
 15793   00225E                     u11145:
 15794   00225E  90D8               	bcf	status,0,c
 15795   002260  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 15796   002262                     u11144:
 15797   002262  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 15798   002264  EF2F  F011         	goto	u11145
 15799   002268  0100               	movlb	0	; () banked
 15800   00226A  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 15801   00226C  0AFF               	xorlw	255
 15802   00226E  1692               	andwf	146,f,c	;volatile
 15803   002270  EF67  F012         	goto	l12535
 15804   002274                     l12511:
 15805                           
 15806                           ; BSR set to: 0
 15807                           ;MCAL_layer/GPIO/hal_gpio.c: 32:                         TRISB &= ~(1 << pinConfig ->pin
      +                          );break;
 15808   002274  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 15809   002278  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 15810   00227C  30DF               	rrcf	223,w,c
 15811   00227E  32E8               	rrcf	wreg,f,c
 15812   002280  32E8               	rrcf	wreg,f,c
 15813   002282  0B07               	andlw	7
 15814   002284  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 15815   002286  0E01               	movlw	1
 15816   002288  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 15817   00228A  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 15818   00228C  EF4A  F011         	goto	u11154
 15819   002290                     u11155:
 15820   002290  90D8               	bcf	status,0,c
 15821   002292  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 15822   002294                     u11154:
 15823   002294  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 15824   002296  EF48  F011         	goto	u11155
 15825   00229A  0100               	movlb	0	; () banked
 15826   00229C  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 15827   00229E  0AFF               	xorlw	255
 15828   0022A0  1693               	andwf	147,f,c	;volatile
 15829   0022A2  EF67  F012         	goto	l12535
 15830   0022A6                     l12513:
 15831                           
 15832                           ; BSR set to: 0
 15833                           ;MCAL_layer/GPIO/hal_gpio.c: 34:                         TRISC &= ~(1 << pinConfig ->pin
      +                          );break;
 15834   0022A6  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 15835   0022AA  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 15836   0022AE  30DF               	rrcf	223,w,c
 15837   0022B0  32E8               	rrcf	wreg,f,c
 15838   0022B2  32E8               	rrcf	wreg,f,c
 15839   0022B4  0B07               	andlw	7
 15840   0022B6  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 15841   0022B8  0E01               	movlw	1
 15842   0022BA  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 15843   0022BC  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 15844   0022BE  EF63  F011         	goto	u11164
 15845   0022C2                     u11165:
 15846   0022C2  90D8               	bcf	status,0,c
 15847   0022C4  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 15848   0022C6                     u11164:
 15849   0022C6  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 15850   0022C8  EF61  F011         	goto	u11165
 15851   0022CC  0100               	movlb	0	; () banked
 15852   0022CE  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 15853   0022D0  0AFF               	xorlw	255
 15854   0022D2  1694               	andwf	148,f,c	;volatile
 15855   0022D4  EF67  F012         	goto	l12535
 15856   0022D8                     l12515:
 15857                           
 15858                           ; BSR set to: 0
 15859                           ;MCAL_layer/GPIO/hal_gpio.c: 36:                         TRISD &= ~(1 << pinConfig ->pin
      +                          );break;
 15860   0022D8  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 15861   0022DC  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 15862   0022E0  30DF               	rrcf	223,w,c
 15863   0022E2  32E8               	rrcf	wreg,f,c
 15864   0022E4  32E8               	rrcf	wreg,f,c
 15865   0022E6  0B07               	andlw	7
 15866   0022E8  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 15867   0022EA  0E01               	movlw	1
 15868   0022EC  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 15869   0022EE  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 15870   0022F0  EF7C  F011         	goto	u11174
 15871   0022F4                     u11175:
 15872   0022F4  90D8               	bcf	status,0,c
 15873   0022F6  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 15874   0022F8                     u11174:
 15875   0022F8  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 15876   0022FA  EF7A  F011         	goto	u11175
 15877   0022FE  0100               	movlb	0	; () banked
 15878   002300  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 15879   002302  0AFF               	xorlw	255
 15880   002304  1695               	andwf	149,f,c	;volatile
 15881   002306  EF67  F012         	goto	l12535
 15882   00230A                     l12517:
 15883                           
 15884                           ; BSR set to: 0
 15885                           ;MCAL_layer/GPIO/hal_gpio.c: 38:                         TRISE &= ~(1 << pinConfig ->pin
      +                          );break;
 15886   00230A  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 15887   00230E  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 15888   002312  30DF               	rrcf	223,w,c
 15889   002314  32E8               	rrcf	wreg,f,c
 15890   002316  32E8               	rrcf	wreg,f,c
 15891   002318  0B07               	andlw	7
 15892   00231A  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 15893   00231C  0E01               	movlw	1
 15894   00231E  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 15895   002320  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 15896   002322  EF95  F011         	goto	u11184
 15897   002326                     u11185:
 15898   002326  90D8               	bcf	status,0,c
 15899   002328  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 15900   00232A                     u11184:
 15901   00232A  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 15902   00232C  EF93  F011         	goto	u11185
 15903   002330  0100               	movlb	0	; () banked
 15904   002332  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 15905   002334  0AFF               	xorlw	255
 15906   002336  1696               	andwf	150,f,c	;volatile
 15907   002338  EF67  F012         	goto	l12535
 15908   00233C                     l12519:
 15909                           
 15910                           ; BSR set to: 0
 15911   00233C  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 15912   002340  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 15913   002344  50DF               	movf	223,w,c
 15914   002346  0B07               	andlw	7
 15915                           
 15916                           ; Switch size 1, requested type "simple"
 15917                           ; Number of cases is 5, Range of values is 0 to 4
 15918                           ; switch strategies available:
 15919                           ; Name         Instructions Cycles
 15920                           ; simple_byte           16     9 (average)
 15921                           ;	Chosen strategy is simple_byte
 15922   002348  0A00               	xorlw	0	; case 0
 15923   00234A  B4D8               	btfsc	status,2,c
 15924   00234C  EF21  F011         	goto	l12509
 15925   002350  0A01               	xorlw	1	; case 1
 15926   002352  B4D8               	btfsc	status,2,c
 15927   002354  EF3A  F011         	goto	l12511
 15928   002358  0A03               	xorlw	3	; case 2
 15929   00235A  B4D8               	btfsc	status,2,c
 15930   00235C  EF53  F011         	goto	l12513
 15931   002360  0A01               	xorlw	1	; case 3
 15932   002362  B4D8               	btfsc	status,2,c
 15933   002364  EF6C  F011         	goto	l12515
 15934   002368  0A07               	xorlw	7	; case 4
 15935   00236A  B4D8               	btfsc	status,2,c
 15936   00236C  EF85  F011         	goto	l12517
 15937   002370  EF1E  F011         	goto	l936
 15938   002374                     l12521:
 15939                           
 15940                           ; BSR set to: 0
 15941                           ;MCAL_layer/GPIO/hal_gpio.c: 47:                         TRISA |= (1 << pinConfig ->pin)
      +                          ;break;
 15942   002374  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 15943   002378  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 15944   00237C  30DF               	rrcf	223,w,c
 15945   00237E  32E8               	rrcf	wreg,f,c
 15946   002380  32E8               	rrcf	wreg,f,c
 15947   002382  0B07               	andlw	7
 15948   002384  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 15949   002386  0E01               	movlw	1
 15950   002388  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 15951   00238A  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 15952   00238C  EFCA  F011         	goto	u11194
 15953   002390                     u11195:
 15954   002390  90D8               	bcf	status,0,c
 15955   002392  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 15956   002394                     u11194:
 15957   002394  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 15958   002396  EFC8  F011         	goto	u11195
 15959   00239A  0100               	movlb	0	; () banked
 15960   00239C  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 15961   00239E  1292               	iorwf	146,f,c	;volatile
 15962   0023A0  EF1E  F011         	goto	l936
 15963   0023A4                     l12523:
 15964                           
 15965                           ; BSR set to: 0
 15966                           ;MCAL_layer/GPIO/hal_gpio.c: 49:                         TRISB |= (1 << pinConfig ->pin)
      +                          ;break;
 15967   0023A4  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 15968   0023A8  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 15969   0023AC  30DF               	rrcf	223,w,c
 15970   0023AE  32E8               	rrcf	wreg,f,c
 15971   0023B0  32E8               	rrcf	wreg,f,c
 15972   0023B2  0B07               	andlw	7
 15973   0023B4  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 15974   0023B6  0E01               	movlw	1
 15975   0023B8  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 15976   0023BA  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 15977   0023BC  EFE2  F011         	goto	u11204
 15978   0023C0                     u11205:
 15979   0023C0  90D8               	bcf	status,0,c
 15980   0023C2  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 15981   0023C4                     u11204:
 15982   0023C4  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 15983   0023C6  EFE0  F011         	goto	u11205
 15984   0023CA  0100               	movlb	0	; () banked
 15985   0023CC  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 15986   0023CE  1293               	iorwf	147,f,c	;volatile
 15987   0023D0  EF1E  F011         	goto	l936
 15988   0023D4                     l12525:
 15989                           
 15990                           ; BSR set to: 0
 15991                           ;MCAL_layer/GPIO/hal_gpio.c: 51:                         TRISC |= (1 << pinConfig ->pin)
      +                          ;break;
 15992   0023D4  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 15993   0023D8  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 15994   0023DC  30DF               	rrcf	223,w,c
 15995   0023DE  32E8               	rrcf	wreg,f,c
 15996   0023E0  32E8               	rrcf	wreg,f,c
 15997   0023E2  0B07               	andlw	7
 15998   0023E4  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 15999   0023E6  0E01               	movlw	1
 16000   0023E8  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 16001   0023EA  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 16002   0023EC  EFFA  F011         	goto	u11214
 16003   0023F0                     u11215:
 16004   0023F0  90D8               	bcf	status,0,c
 16005   0023F2  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 16006   0023F4                     u11214:
 16007   0023F4  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 16008   0023F6  EFF8  F011         	goto	u11215
 16009   0023FA  0100               	movlb	0	; () banked
 16010   0023FC  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 16011   0023FE  1294               	iorwf	148,f,c	;volatile
 16012   002400  EF1E  F011         	goto	l936
 16013   002404                     l12527:
 16014                           
 16015                           ; BSR set to: 0
 16016                           ;MCAL_layer/GPIO/hal_gpio.c: 53:                         TRISD |= (1 << pinConfig ->pin)
      +                          ;break;
 16017   002404  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 16018   002408  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 16019   00240C  30DF               	rrcf	223,w,c
 16020   00240E  32E8               	rrcf	wreg,f,c
 16021   002410  32E8               	rrcf	wreg,f,c
 16022   002412  0B07               	andlw	7
 16023   002414  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 16024   002416  0E01               	movlw	1
 16025   002418  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 16026   00241A  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 16027   00241C  EF12  F012         	goto	u11224
 16028   002420                     u11225:
 16029   002420  90D8               	bcf	status,0,c
 16030   002422  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 16031   002424                     u11224:
 16032   002424  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 16033   002426  EF10  F012         	goto	u11225
 16034   00242A  0100               	movlb	0	; () banked
 16035   00242C  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 16036   00242E  1295               	iorwf	149,f,c	;volatile
 16037   002430  EF1E  F011         	goto	l936
 16038   002434                     l12529:
 16039                           
 16040                           ; BSR set to: 0
 16041                           ;MCAL_layer/GPIO/hal_gpio.c: 55:                         TRISE |= (1 << pinConfig ->pin)
      +                          ;break;
 16042   002434  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 16043   002438  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 16044   00243C  30DF               	rrcf	223,w,c
 16045   00243E  32E8               	rrcf	wreg,f,c
 16046   002440  32E8               	rrcf	wreg,f,c
 16047   002442  0B07               	andlw	7
 16048   002444  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 16049   002446  0E01               	movlw	1
 16050   002448  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 16051   00244A  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 16052   00244C  EF2A  F012         	goto	u11234
 16053   002450                     u11235:
 16054   002450  90D8               	bcf	status,0,c
 16055   002452  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 16056   002454                     u11234:
 16057   002454  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 16058   002456  EF28  F012         	goto	u11235
 16059   00245A  0100               	movlb	0	; () banked
 16060   00245C  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 16061   00245E  1296               	iorwf	150,f,c	;volatile
 16062   002460  EF1E  F011         	goto	l936
 16063   002464                     l957:
 16064                           
 16065                           ; BSR set to: 0
 16066                           ;MCAL_layer/GPIO/hal_gpio.c: 57:                 }
 16067   002464  EF1E  F011         	goto	l936
 16068   002468                     l12531:
 16069                           
 16070                           ; BSR set to: 0
 16071   002468  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 16072   00246C  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 16073   002470  50DF               	movf	223,w,c
 16074   002472  0B07               	andlw	7
 16075                           
 16076                           ; Switch size 1, requested type "simple"
 16077                           ; Number of cases is 5, Range of values is 0 to 4
 16078                           ; switch strategies available:
 16079                           ; Name         Instructions Cycles
 16080                           ; simple_byte           16     9 (average)
 16081                           ;	Chosen strategy is simple_byte
 16082   002474  0A00               	xorlw	0	; case 0
 16083   002476  B4D8               	btfsc	status,2,c
 16084   002478  EFBA  F011         	goto	l12521
 16085   00247C  0A01               	xorlw	1	; case 1
 16086   00247E  B4D8               	btfsc	status,2,c
 16087   002480  EFD2  F011         	goto	l12523
 16088   002484  0A03               	xorlw	3	; case 2
 16089   002486  B4D8               	btfsc	status,2,c
 16090   002488  EFEA  F011         	goto	l12525
 16091   00248C  0A01               	xorlw	1	; case 3
 16092   00248E  B4D8               	btfsc	status,2,c
 16093   002490  EF02  F012         	goto	l12527
 16094   002494  0A07               	xorlw	7	; case 4
 16095   002496  B4D8               	btfsc	status,2,c
 16096   002498  EF1A  F012         	goto	l12529
 16097   00249C  EF32  F012         	goto	l957
 16098   0024A0                     l12533:
 16099                           
 16100                           ; BSR set to: 0
 16101   0024A0  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 16102   0024A4  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 16103   0024A8  BCDF               	btfsc	indf2,6,c
 16104   0024AA  EF59  F012         	goto	u11241
 16105   0024AE  EF5C  F012         	goto	u11240
 16106   0024B2                     u11241:
 16107   0024B2  0E01               	movlw	1
 16108   0024B4  EF5D  F012         	goto	u11246
 16109   0024B8                     u11240:
 16110   0024B8  0E00               	movlw	0
 16111   0024BA                     u11246:
 16112                           
 16113                           ; Switch size 1, requested type "simple"
 16114                           ; Number of cases is 2, Range of values is 0 to 1
 16115                           ; switch strategies available:
 16116                           ; Name         Instructions Cycles
 16117                           ; simple_byte            7     4 (average)
 16118                           ;	Chosen strategy is simple_byte
 16119   0024BA  0A00               	xorlw	0	; case 0
 16120   0024BC  B4D8               	btfsc	status,2,c
 16121   0024BE  EF9E  F011         	goto	l12519
 16122   0024C2  0A01               	xorlw	1	; case 1
 16123   0024C4  B4D8               	btfsc	status,2,c
 16124   0024C6  EF34  F012         	goto	l12531
 16125   0024CA  EF1E  F011         	goto	l936
 16126   0024CE                     l12535:
 16127                           
 16128                           ; BSR set to: 0
 16129                           ;MCAL_layer/GPIO/hal_gpio.c: 61:     return rt;
 16130   0024CE  51D9               	movf	gpio_pin_direction_initialize@rt& (0+255),w,b
 16131   0024D0                     
 16132                           ; BSR set to: 0
 16133   0024D0  0012               	return		;funcret
 16134   0024D2                     __end_of_gpio_pin_direction_initialize:
 16135                           	callstack 0
 16136                           
 16137 ;; *************** function _ECU_LCD_4Bit_Send_Command *****************
 16138 ;; Defined at:
 16139 ;;		line 50 in file "ECU_layer/LCD/LCD.c"
 16140 ;; Parameters:    Size  Location     Type
 16141 ;;  _LCD            1   10[BANK0 ] PTR const struct .
 16142 ;;		 -> LCD_1(6), 
 16143 ;;  _Command        1   11[BANK0 ] unsigned char 
 16144 ;; Auto vars:     Size  Location     Type
 16145 ;;  rt              1   12[BANK0 ] unsigned char 
 16146 ;; Return value:  Size  Location     Type
 16147 ;;                  1    wreg      unsigned char 
 16148 ;; Registers used:
 16149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16150 ;; Tracked objects:
 16151 ;;		On entry : 0/0
 16152 ;;		On exit  : 0/0
 16153 ;;		Unchanged: 0/0
 16154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16155 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16158 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16159 ;;Total ram usage:        3 bytes
 16160 ;; Hardware stack levels used: 1
 16161 ;; Hardware stack levels required when called: 11
 16162 ;; This function calls:
 16163 ;;		_LCD_4Bits_Send_Enable_Signal
 16164 ;;		_LCD_Send_4Bits
 16165 ;;		_gpio_pin_write_logic
 16166 ;; This function is called by:
 16167 ;;		_update_display
 16168 ;;		_main
 16169 ;;		_ECU_LCD_4Bit_Initialize
 16170 ;;		_LCD_4Bits_Set_Curser
 16171 ;;		_ECU_LCD_4Bit_Send_Custom_Char
 16172 ;; This function uses a non-reentrant model
 16173 ;;
 16174                           
 16175                           	psect	text84
 16176   0041D4                     __ptext84:
 16177                           	callstack 0
 16178   0041D4                     _ECU_LCD_4Bit_Send_Command:
 16179                           	callstack 17
 16180   0041D4                     
 16181                           ;ECU_layer/LCD/LCD.c: 52:     if(((void*)0) == _LCD){
 16182   0041D4  0100               	movlb	0	; () banked
 16183   0041D6  51DF               	movf	ECU_LCD_4Bit_Send_Command@_LCD& (0+255),w,b
 16184   0041D8  A4D8               	btfss	status,2,c
 16185   0041DA  EFF1  F020         	goto	u11271
 16186   0041DE  EFF3  F020         	goto	u11270
 16187   0041E2                     u11271:
 16188   0041E2  EFF6  F020         	goto	l12573
 16189   0041E6                     u11270:
 16190   0041E6                     
 16191                           ; BSR set to: 0
 16192                           ;ECU_layer/LCD/LCD.c: 53:        rt = (STD_ReturnType)0x00;
 16193   0041E6  6BE1               	clrf	ECU_LCD_4Bit_Send_Command@rt& (0+255),b
 16194                           
 16195                           ;ECU_layer/LCD/LCD.c: 54:     }
 16196   0041E8  EF1C  F021         	goto	l12575
 16197   0041EC                     l12573:
 16198                           
 16199                           ; BSR set to: 0
 16200                           ;ECU_layer/LCD/LCD.c: 57:         rt = gpio_pin_write_logic(&(_LCD->LCD_RS), GPIO_Pin_Lo
      +                          gic_LOW);
 16201   0041EC  C0DF  F0D5         	movff	ECU_LCD_4Bit_Send_Command@_LCD,gpio_pin_write_logic@pinConfig
 16202   0041F0  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 16203   0041F2  0E00               	movlw	0
 16204   0041F4  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 16205   0041F6  EC69  F012         	call	_gpio_pin_write_logic	;wreg free
 16206   0041FA  0100               	movlb	0	; () banked
 16207   0041FC  6FE1               	movwf	ECU_LCD_4Bit_Send_Command@rt& (0+255),b
 16208                           
 16209                           ;ECU_layer/LCD/LCD.c: 59:         rt = LCD_Send_4Bits(_LCD, _Command >> 4);
 16210   0041FE  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_Command@_LCD,LCD_Send_4Bits@_LCD
 16211   004202  39E0               	swapf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),w,b
 16212   004204  0B0F               	andlw	15
 16213   004206  6FDC               	movwf	LCD_Send_4Bits@_Data& (0+255),b
 16214   004208  ECF3  F01C         	call	_LCD_Send_4Bits	;wreg free
 16215   00420C  0100               	movlb	0	; () banked
 16216   00420E  6FE1               	movwf	ECU_LCD_4Bit_Send_Command@rt& (0+255),b
 16217                           
 16218                           ;ECU_layer/LCD/LCD.c: 61:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 16219   004210  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_Command@_LCD,LCD_4Bits_Send_Enable_Signal@_LCD
 16220   004214  EC9E  F022         	call	_LCD_4Bits_Send_Enable_Signal	;wreg free
 16221   004218  0100               	movlb	0	; () banked
 16222   00421A  6FE1               	movwf	ECU_LCD_4Bit_Send_Command@rt& (0+255),b
 16223                           
 16224                           ;ECU_layer/LCD/LCD.c: 63:         rt = LCD_Send_4Bits(_LCD, _Command);
 16225   00421C  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_Command@_LCD,LCD_Send_4Bits@_LCD
 16226   004220  C0E0  F0DC         	movff	ECU_LCD_4Bit_Send_Command@_Command,LCD_Send_4Bits@_Data
 16227   004224  ECF3  F01C         	call	_LCD_Send_4Bits	;wreg free
 16228   004228  0100               	movlb	0	; () banked
 16229   00422A  6FE1               	movwf	ECU_LCD_4Bit_Send_Command@rt& (0+255),b
 16230                           
 16231                           ;ECU_layer/LCD/LCD.c: 65:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 16232   00422C  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_Command@_LCD,LCD_4Bits_Send_Enable_Signal@_LCD
 16233   004230  EC9E  F022         	call	_LCD_4Bits_Send_Enable_Signal	;wreg free
 16234   004234  0100               	movlb	0	; () banked
 16235   004236  6FE1               	movwf	ECU_LCD_4Bit_Send_Command@rt& (0+255),b
 16236   004238                     l12575:
 16237                           
 16238                           ; BSR set to: 0
 16239                           ;ECU_layer/LCD/LCD.c: 68:     return rt;
 16240   004238  51E1               	movf	ECU_LCD_4Bit_Send_Command@rt& (0+255),w,b
 16241   00423A                     
 16242                           ; BSR set to: 0
 16243   00423A  0012               	return		;funcret
 16244   00423C                     __end_of_ECU_LCD_4Bit_Send_Command:
 16245                           	callstack 0
 16246                           
 16247 ;; *************** function _LCD_Send_4Bits *****************
 16248 ;; Defined at:
 16249 ;;		line 341 in file "ECU_layer/LCD/LCD.c"
 16250 ;; Parameters:    Size  Location     Type
 16251 ;;  _LCD            1    6[BANK0 ] PTR const struct .
 16252 ;;		 -> LCD_1(6), 
 16253 ;;  _Data           1    7[BANK0 ] unsigned char 
 16254 ;; Auto vars:     Size  Location     Type
 16255 ;;  rt              1    9[BANK0 ] unsigned char 
 16256 ;; Return value:  Size  Location     Type
 16257 ;;                  1    wreg      unsigned char 
 16258 ;; Registers used:
 16259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16260 ;; Tracked objects:
 16261 ;;		On entry : 0/0
 16262 ;;		On exit  : 0/0
 16263 ;;		Unchanged: 0/0
 16264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16265 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16266 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16267 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16268 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16269 ;;Total ram usage:        4 bytes
 16270 ;; Hardware stack levels used: 1
 16271 ;; Hardware stack levels required when called: 10
 16272 ;; This function calls:
 16273 ;;		_gpio_pin_write_logic
 16274 ;; This function is called by:
 16275 ;;		_ECU_LCD_4Bit_Send_Command
 16276 ;;		_ECU_LCD_4Bit_Send_char_Data
 16277 ;; This function uses a non-reentrant model
 16278 ;;
 16279                           
 16280                           	psect	text85
 16281   0039E6                     __ptext85:
 16282                           	callstack 0
 16283   0039E6                     _LCD_Send_4Bits:
 16284                           	callstack 17
 16285   0039E6                     
 16286                           ;ECU_layer/LCD/LCD.c: 343:      if(((void*)0) == _LCD ){
 16287   0039E6  0100               	movlb	0	; () banked
 16288   0039E8  51DB               	movf	LCD_Send_4Bits@_LCD& (0+255),w,b
 16289   0039EA  A4D8               	btfss	status,2,c
 16290   0039EC  EFFA  F01C         	goto	u11251
 16291   0039F0  EFFC  F01C         	goto	u11250
 16292   0039F4                     u11251:
 16293   0039F4  EFFF  F01C         	goto	l12545
 16294   0039F8                     u11250:
 16295   0039F8                     
 16296                           ; BSR set to: 0
 16297                           ;ECU_layer/LCD/LCD.c: 344:         rt = (STD_ReturnType)0x00;
 16298   0039F8  6BDE               	clrf	LCD_Send_4Bits@rt& (0+255),b
 16299                           
 16300                           ;ECU_layer/LCD/LCD.c: 345:     }
 16301   0039FA  EF3C  F01D         	goto	l12547
 16302   0039FE                     l12545:
 16303                           
 16304                           ; BSR set to: 0
 16305                           ;ECU_layer/LCD/LCD.c: 347:         rt = gpio_pin_write_logic(&(_LCD->DataPins[0]), (_Dat
      +                          a >> 0) & (uint8)0x01);
 16306   0039FE  C0DB  F0DD         	movff	LCD_Send_4Bits@_LCD,??_LCD_Send_4Bits
 16307   003A02  0E02               	movlw	2
 16308   003A04  27DD               	addwf	??_LCD_Send_4Bits& (0+255),f,b
 16309   003A06  C0DD  F0D5         	movff	??_LCD_Send_4Bits,gpio_pin_write_logic@pinConfig
 16310   003A0A  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 16311   003A0C  51DC               	movf	LCD_Send_4Bits@_Data& (0+255),w,b
 16312   003A0E  0B01               	andlw	1
 16313   003A10  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 16314   003A12  EC69  F012         	call	_gpio_pin_write_logic	;wreg free
 16315   003A16  0100               	movlb	0	; () banked
 16316   003A18  6FDE               	movwf	LCD_Send_4Bits@rt& (0+255),b
 16317                           
 16318                           ;ECU_layer/LCD/LCD.c: 348:         rt = gpio_pin_write_logic(&(_LCD->DataPins[1]), (_Dat
      +                          a >> 1) & (uint8)0x01);
 16319   003A1A  C0DB  F0DD         	movff	LCD_Send_4Bits@_LCD,??_LCD_Send_4Bits
 16320   003A1E  0E03               	movlw	3
 16321   003A20  27DD               	addwf	??_LCD_Send_4Bits& (0+255),f,b
 16322   003A22  C0DD  F0D5         	movff	??_LCD_Send_4Bits,gpio_pin_write_logic@pinConfig
 16323   003A26  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 16324   003A28  90D8               	bcf	status,0,c
 16325   003A2A  31DC               	rrcf	LCD_Send_4Bits@_Data& (0+255),w,b
 16326   003A2C  0B01               	andlw	1
 16327   003A2E  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 16328   003A30  EC69  F012         	call	_gpio_pin_write_logic	;wreg free
 16329   003A34  0100               	movlb	0	; () banked
 16330   003A36  6FDE               	movwf	LCD_Send_4Bits@rt& (0+255),b
 16331                           
 16332                           ;ECU_layer/LCD/LCD.c: 349:         rt = gpio_pin_write_logic(&(_LCD->DataPins[2]), (_Dat
      +                          a >> 2) & (uint8)0x01);
 16333   003A38  C0DB  F0DD         	movff	LCD_Send_4Bits@_LCD,??_LCD_Send_4Bits
 16334   003A3C  0E04               	movlw	4
 16335   003A3E  27DD               	addwf	??_LCD_Send_4Bits& (0+255),f,b
 16336   003A40  C0DD  F0D5         	movff	??_LCD_Send_4Bits,gpio_pin_write_logic@pinConfig
 16337   003A44  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 16338   003A46  41DC               	rrncf	LCD_Send_4Bits@_Data& (0+255),w,b
 16339   003A48  42E8               	rrncf	wreg,f,c
 16340   003A4A  0B3F               	andlw	63
 16341   003A4C  0B01               	andlw	1
 16342   003A4E  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 16343   003A50  EC69  F012         	call	_gpio_pin_write_logic	;wreg free
 16344   003A54  0100               	movlb	0	; () banked
 16345   003A56  6FDE               	movwf	LCD_Send_4Bits@rt& (0+255),b
 16346                           
 16347                           ;ECU_layer/LCD/LCD.c: 350:         rt = gpio_pin_write_logic(&(_LCD->DataPins[3]), (_Dat
      +                          a >> 3) & (uint8)0x01);
 16348   003A58  C0DB  F0DD         	movff	LCD_Send_4Bits@_LCD,??_LCD_Send_4Bits
 16349   003A5C  0E05               	movlw	5
 16350   003A5E  27DD               	addwf	??_LCD_Send_4Bits& (0+255),f,b
 16351   003A60  C0DD  F0D5         	movff	??_LCD_Send_4Bits,gpio_pin_write_logic@pinConfig
 16352   003A64  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 16353   003A66  39DC               	swapf	LCD_Send_4Bits@_Data& (0+255),w,b
 16354   003A68  46E8               	rlncf	wreg,f,c
 16355   003A6A  0B1F               	andlw	31
 16356   003A6C  0B01               	andlw	1
 16357   003A6E  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 16358   003A70  EC69  F012         	call	_gpio_pin_write_logic	;wreg free
 16359   003A74  0100               	movlb	0	; () banked
 16360   003A76  6FDE               	movwf	LCD_Send_4Bits@rt& (0+255),b
 16361   003A78                     l12547:
 16362                           
 16363                           ; BSR set to: 0
 16364                           ;ECU_layer/LCD/LCD.c: 352:      return rt;
 16365   003A78  51DE               	movf	LCD_Send_4Bits@rt& (0+255),w,b
 16366   003A7A                     
 16367                           ; BSR set to: 0
 16368   003A7A  0012               	return		;funcret
 16369   003A7C                     __end_of_LCD_Send_4Bits:
 16370                           	callstack 0
 16371                           
 16372 ;; *************** function _LCD_4Bits_Send_Enable_Signal *****************
 16373 ;; Defined at:
 16374 ;;		line 356 in file "ECU_layer/LCD/LCD.c"
 16375 ;; Parameters:    Size  Location     Type
 16376 ;;  _LCD            1    6[BANK0 ] PTR const struct .
 16377 ;;		 -> LCD_1(6), 
 16378 ;; Auto vars:     Size  Location     Type
 16379 ;;  rt              1    8[BANK0 ] unsigned char 
 16380 ;; Return value:  Size  Location     Type
 16381 ;;                  1    wreg      unsigned char 
 16382 ;; Registers used:
 16383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16384 ;; Tracked objects:
 16385 ;;		On entry : 0/0
 16386 ;;		On exit  : 0/0
 16387 ;;		Unchanged: 0/0
 16388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16389 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16390 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16391 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16392 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16393 ;;Total ram usage:        3 bytes
 16394 ;; Hardware stack levels used: 1
 16395 ;; Hardware stack levels required when called: 10
 16396 ;; This function calls:
 16397 ;;		_gpio_pin_write_logic
 16398 ;; This function is called by:
 16399 ;;		_ECU_LCD_4Bit_Send_Command
 16400 ;;		_ECU_LCD_4Bit_Send_char_Data
 16401 ;; This function uses a non-reentrant model
 16402 ;;
 16403                           
 16404                           	psect	text86
 16405   00453C                     __ptext86:
 16406                           	callstack 0
 16407   00453C                     _LCD_4Bits_Send_Enable_Signal:
 16408                           	callstack 17
 16409   00453C                     
 16410                           ;ECU_layer/LCD/LCD.c: 358:      if(((void*)0) == _LCD ){
 16411   00453C  0100               	movlb	0	; () banked
 16412   00453E  51DB               	movf	LCD_4Bits_Send_Enable_Signal@_LCD& (0+255),w,b
 16413   004540  A4D8               	btfss	status,2,c
 16414   004542  EFA5  F022         	goto	u11261
 16415   004546  EFA7  F022         	goto	u11260
 16416   00454A                     u11261:
 16417   00454A  EFAA  F022         	goto	l12557
 16418   00454E                     u11260:
 16419   00454E                     
 16420                           ; BSR set to: 0
 16421                           ;ECU_layer/LCD/LCD.c: 359:         rt = (STD_ReturnType)0x00;
 16422   00454E  6BDD               	clrf	LCD_4Bits_Send_Enable_Signal@rt& (0+255),b
 16423                           
 16424                           ;ECU_layer/LCD/LCD.c: 360:     }
 16425   004550  EFC7  F022         	goto	l12563
 16426   004554                     l12557:
 16427                           
 16428                           ; BSR set to: 0
 16429   004554  C0DB  F0DC         	movff	LCD_4Bits_Send_Enable_Signal@_LCD,??_LCD_4Bits_Send_Enable_Signal
 16430   004558  0E01               	movlw	1
 16431   00455A  27DC               	addwf	??_LCD_4Bits_Send_Enable_Signal& (0+255),f,b
 16432   00455C  C0DC  F0D5         	movff	??_LCD_4Bits_Send_Enable_Signal,gpio_pin_write_logic@pinConfig
 16433   004560  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 16434   004562  0E01               	movlw	1
 16435   004564  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 16436   004566  EC69  F012         	call	_gpio_pin_write_logic	;wreg free
 16437   00456A                     
 16438                           ;ECU_layer/LCD/LCD.c: 363:         _delay((unsigned long)((5)*(8000000UL/4000000.0)));
 16439   00456A  0E03               	movlw	3
 16440   00456C                     u13977:
 16441   00456C  2EE8               	decfsz	wreg,f,c
 16442   00456E  D7FE               	bra	u13977
 16443   004570  0000               	nop	
 16444   004572                     
 16445                           ;ECU_layer/LCD/LCD.c: 364:         rt = gpio_pin_write_logic(&(_LCD->LCD_E), GPIO_Pin_Lo
      +                          gic_LOW);;
 16446   004572  C0DB  F0DC         	movff	LCD_4Bits_Send_Enable_Signal@_LCD,??_LCD_4Bits_Send_Enable_Signal
 16447   004576  0E01               	movlw	1
 16448   004578  0100               	movlb	0	; () banked
 16449   00457A  27DC               	addwf	??_LCD_4Bits_Send_Enable_Signal& (0+255),f,b
 16450   00457C  C0DC  F0D5         	movff	??_LCD_4Bits_Send_Enable_Signal,gpio_pin_write_logic@pinConfig
 16451   004580  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 16452   004582  0E00               	movlw	0
 16453   004584  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 16454   004586  EC69  F012         	call	_gpio_pin_write_logic	;wreg free
 16455   00458A  0100               	movlb	0	; () banked
 16456   00458C  6FDD               	movwf	LCD_4Bits_Send_Enable_Signal@rt& (0+255),b
 16457   00458E                     l12563:
 16458                           
 16459                           ; BSR set to: 0
 16460                           ;ECU_layer/LCD/LCD.c: 366:      return rt;
 16461   00458E  51DD               	movf	LCD_4Bits_Send_Enable_Signal@rt& (0+255),w,b
 16462   004590                     
 16463                           ; BSR set to: 0
 16464   004590  0012               	return		;funcret
 16465   004592                     __end_of_LCD_4Bits_Send_Enable_Signal:
 16466                           	callstack 0
 16467                           
 16468 ;; *************** function _gpio_pin_write_logic *****************
 16469 ;; Defined at:
 16470 ;;		line 93 in file "MCAL_layer/GPIO/hal_gpio.c"
 16471 ;; Parameters:    Size  Location     Type
 16472 ;;  pinConfig       2    0[BANK0 ] PTR const struct .
 16473 ;;		 -> CCP1_obj$CCPx_PIN$port(1), ECU_Relay_turnOFF@relay_t(1), ECU_Relay_turnON@relay_t(1), ECU_Relay_Initialize@relay
      +_t(1), 
 16474 ;;		 -> LED_turnOFF@LED(1), LED_turnON@LED(1), pinRC7(1), pinRC6(1), 
 16475 ;;		 -> keypad_1$KeypadRowsConfig(4), keypad_1(8), LCD_1$DataPins(4), LCD_1(6), 
 16476 ;;  logic           1    2[BANK0 ] enum E3381
 16477 ;; Auto vars:     Size  Location     Type
 16478 ;;  rt              1    5[BANK0 ] unsigned char 
 16479 ;; Return value:  Size  Location     Type
 16480 ;;                  1    wreg      unsigned char 
 16481 ;; Registers used:
 16482 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16483 ;; Tracked objects:
 16484 ;;		On entry : 0/0
 16485 ;;		On exit  : 0/0
 16486 ;;		Unchanged: 0/0
 16487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16488 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16489 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16490 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16491 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16492 ;;Total ram usage:        6 bytes
 16493 ;; Hardware stack levels used: 1
 16494 ;; Hardware stack levels required when called: 9
 16495 ;; This function calls:
 16496 ;;		Nothing
 16497 ;; This function is called by:
 16498 ;;		_gpio_pin_initialize
 16499 ;;		_keyPad_Read
 16500 ;;		_ECU_LCD_4Bit_Send_Command
 16501 ;;		_ECU_LCD_4Bit_Send_char_Data
 16502 ;;		_LCD_Send_4Bits
 16503 ;;		_LCD_4Bits_Send_Enable_Signal
 16504 ;;		_ECU_DC_Motor_move_right
 16505 ;;		_ECU_DC_Motor_move_left
 16506 ;;		_ECU_DC_Motor_stop
 16507 ;;		_ECU_LCD_8Bit_Send_Command
 16508 ;;		_ECU_LCD_8Bit_Send_char_Data
 16509 ;;		_LCD_8Bits_Send_Enable_Signal
 16510 ;;		_LED_turnON
 16511 ;;		_LED_turnOFF
 16512 ;;		_ECU_Relay_turnON
 16513 ;;		_ECU_Relay_turnOFF
 16514 ;;		_ECU_Segment_write
 16515 ;;		_ECU_STEPPER_Motor_move_left
 16516 ;;		_ECU_STEPPER_Motor_move_right
 16517 ;;		_ECU_STEPPER_Motor_stop
 16518 ;; This function uses a non-reentrant model
 16519 ;;
 16520                           
 16521                           	psect	text87
 16522   0024D2                     __ptext87:
 16523                           	callstack 0
 16524   0024D2                     _gpio_pin_write_logic:
 16525                           	callstack 18
 16526   0024D2                     
 16527                           ;MCAL_layer/GPIO/hal_gpio.c: 94:     STD_ReturnType rt = (STD_ReturnType)0x01;
 16528   0024D2  0E01               	movlw	1
 16529   0024D4  0100               	movlb	0	; () banked
 16530   0024D6  6FDA               	movwf	gpio_pin_write_logic@rt& (0+255),b
 16531   0024D8                     
 16532                           ; BSR set to: 0
 16533                           ;MCAL_layer/GPIO/hal_gpio.c: 95:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 -
      +                          1 ){
 16534   0024D8  51D5               	movf	gpio_pin_write_logic@pinConfig& (0+255),w,b
 16535   0024DA  11D6               	iorwf	(gpio_pin_write_logic@pinConfig+1)& (0+255),w,b
 16536   0024DC  B4D8               	btfsc	status,2,c
 16537   0024DE  EF73  F012         	goto	u10991
 16538   0024E2  EF75  F012         	goto	u10990
 16539   0024E6                     u10991:
 16540   0024E6  EF86  F012         	goto	l979
 16541   0024EA                     u10990:
 16542   0024EA                     
 16543                           ; BSR set to: 0
 16544   0024EA  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16545   0024EE  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16546   0024F2  30DF               	rrcf	223,w,c
 16547   0024F4  32E8               	rrcf	wreg,f,c
 16548   0024F6  32E8               	rrcf	wreg,f,c
 16549   0024F8  0B07               	andlw	7
 16550   0024FA  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 16551   0024FC  0E07               	movlw	7
 16552   0024FE  65D8               	cpfsgt	??_gpio_pin_write_logic& (0+255),b
 16553   002500  EF84  F012         	goto	u11001
 16554   002504  EF86  F012         	goto	u11000
 16555   002508                     u11001:
 16556   002508  EFB6  F013         	goto	l12481
 16557   00250C                     u11000:
 16558   00250C                     l979:
 16559                           
 16560                           ; BSR set to: 0
 16561                           ;MCAL_layer/GPIO/hal_gpio.c: 96:         rt = (STD_ReturnType)0x00;
 16562   00250C  6BDA               	clrf	gpio_pin_write_logic@rt& (0+255),b
 16563                           
 16564                           ;MCAL_layer/GPIO/hal_gpio.c: 97:     }
 16565   00250E  EFCB  F013         	goto	l12483
 16566   002512                     l12457:
 16567                           
 16568                           ; BSR set to: 0
 16569                           ;MCAL_layer/GPIO/hal_gpio.c: 103:                         LATA &= ~(1 << pinConfig ->pin
      +                          );break;
 16570   002512  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16571   002516  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16572   00251A  30DF               	rrcf	223,w,c
 16573   00251C  32E8               	rrcf	wreg,f,c
 16574   00251E  32E8               	rrcf	wreg,f,c
 16575   002520  0B07               	andlw	7
 16576   002522  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 16577   002524  0E01               	movlw	1
 16578   002526  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 16579   002528  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 16580   00252A  EF99  F012         	goto	u11014
 16581   00252E                     u11015:
 16582   00252E  90D8               	bcf	status,0,c
 16583   002530  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 16584   002532                     u11014:
 16585   002532  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 16586   002534  EF97  F012         	goto	u11015
 16587   002538  0100               	movlb	0	; () banked
 16588   00253A  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 16589   00253C  0AFF               	xorlw	255
 16590   00253E  1689               	andwf	137,f,c	;volatile
 16591   002540  EFCB  F013         	goto	l12483
 16592   002544                     l12459:
 16593                           
 16594                           ; BSR set to: 0
 16595                           ;MCAL_layer/GPIO/hal_gpio.c: 105:                         LATB &= ~(1 << pinConfig ->pin
      +                          );break;
 16596   002544  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16597   002548  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16598   00254C  30DF               	rrcf	223,w,c
 16599   00254E  32E8               	rrcf	wreg,f,c
 16600   002550  32E8               	rrcf	wreg,f,c
 16601   002552  0B07               	andlw	7
 16602   002554  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 16603   002556  0E01               	movlw	1
 16604   002558  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 16605   00255A  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 16606   00255C  EFB2  F012         	goto	u11024
 16607   002560                     u11025:
 16608   002560  90D8               	bcf	status,0,c
 16609   002562  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 16610   002564                     u11024:
 16611   002564  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 16612   002566  EFB0  F012         	goto	u11025
 16613   00256A  0100               	movlb	0	; () banked
 16614   00256C  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 16615   00256E  0AFF               	xorlw	255
 16616   002570  168A               	andwf	138,f,c	;volatile
 16617   002572  EFCB  F013         	goto	l12483
 16618   002576                     l12461:
 16619                           
 16620                           ; BSR set to: 0
 16621                           ;MCAL_layer/GPIO/hal_gpio.c: 107:                         LATC &= ~(1 << pinConfig ->pin
      +                          );break;
 16622   002576  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16623   00257A  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16624   00257E  30DF               	rrcf	223,w,c
 16625   002580  32E8               	rrcf	wreg,f,c
 16626   002582  32E8               	rrcf	wreg,f,c
 16627   002584  0B07               	andlw	7
 16628   002586  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 16629   002588  0E01               	movlw	1
 16630   00258A  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 16631   00258C  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 16632   00258E  EFCB  F012         	goto	u11034
 16633   002592                     u11035:
 16634   002592  90D8               	bcf	status,0,c
 16635   002594  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 16636   002596                     u11034:
 16637   002596  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 16638   002598  EFC9  F012         	goto	u11035
 16639   00259C  0100               	movlb	0	; () banked
 16640   00259E  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 16641   0025A0  0AFF               	xorlw	255
 16642   0025A2  168B               	andwf	139,f,c	;volatile
 16643   0025A4  EFCB  F013         	goto	l12483
 16644   0025A8                     l12463:
 16645                           
 16646                           ; BSR set to: 0
 16647                           ;MCAL_layer/GPIO/hal_gpio.c: 109:                         LATD &= ~(1 << pinConfig ->pin
      +                          );break;
 16648   0025A8  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16649   0025AC  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16650   0025B0  30DF               	rrcf	223,w,c
 16651   0025B2  32E8               	rrcf	wreg,f,c
 16652   0025B4  32E8               	rrcf	wreg,f,c
 16653   0025B6  0B07               	andlw	7
 16654   0025B8  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 16655   0025BA  0E01               	movlw	1
 16656   0025BC  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 16657   0025BE  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 16658   0025C0  EFE4  F012         	goto	u11044
 16659   0025C4                     u11045:
 16660   0025C4  90D8               	bcf	status,0,c
 16661   0025C6  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 16662   0025C8                     u11044:
 16663   0025C8  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 16664   0025CA  EFE2  F012         	goto	u11045
 16665   0025CE  0100               	movlb	0	; () banked
 16666   0025D0  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 16667   0025D2  0AFF               	xorlw	255
 16668   0025D4  168C               	andwf	140,f,c	;volatile
 16669   0025D6  EFCB  F013         	goto	l12483
 16670   0025DA                     l12465:
 16671                           
 16672                           ; BSR set to: 0
 16673                           ;MCAL_layer/GPIO/hal_gpio.c: 111:                         LATE &= ~(1 << pinConfig ->pin
      +                          );break;
 16674   0025DA  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16675   0025DE  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16676   0025E2  30DF               	rrcf	223,w,c
 16677   0025E4  32E8               	rrcf	wreg,f,c
 16678   0025E6  32E8               	rrcf	wreg,f,c
 16679   0025E8  0B07               	andlw	7
 16680   0025EA  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 16681   0025EC  0E01               	movlw	1
 16682   0025EE  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 16683   0025F0  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 16684   0025F2  EFFD  F012         	goto	u11054
 16685   0025F6                     u11055:
 16686   0025F6  90D8               	bcf	status,0,c
 16687   0025F8  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 16688   0025FA                     u11054:
 16689   0025FA  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 16690   0025FC  EFFB  F012         	goto	u11055
 16691   002600  0100               	movlb	0	; () banked
 16692   002602  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 16693   002604  0AFF               	xorlw	255
 16694   002606  168D               	andwf	141,f,c	;volatile
 16695   002608  EFCB  F013         	goto	l12483
 16696   00260C                     l12467:
 16697                           
 16698                           ; BSR set to: 0
 16699   00260C  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16700   002610  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16701   002614  50DF               	movf	223,w,c
 16702   002616  0B07               	andlw	7
 16703                           
 16704                           ; Switch size 1, requested type "simple"
 16705                           ; Number of cases is 5, Range of values is 0 to 4
 16706                           ; switch strategies available:
 16707                           ; Name         Instructions Cycles
 16708                           ; simple_byte           16     9 (average)
 16709                           ;	Chosen strategy is simple_byte
 16710   002618  0A00               	xorlw	0	; case 0
 16711   00261A  B4D8               	btfsc	status,2,c
 16712   00261C  EF89  F012         	goto	l12457
 16713   002620  0A01               	xorlw	1	; case 1
 16714   002622  B4D8               	btfsc	status,2,c
 16715   002624  EFA2  F012         	goto	l12459
 16716   002628  0A03               	xorlw	3	; case 2
 16717   00262A  B4D8               	btfsc	status,2,c
 16718   00262C  EFBB  F012         	goto	l12461
 16719   002630  0A01               	xorlw	1	; case 3
 16720   002632  B4D8               	btfsc	status,2,c
 16721   002634  EFD4  F012         	goto	l12463
 16722   002638  0A07               	xorlw	7	; case 4
 16723   00263A  B4D8               	btfsc	status,2,c
 16724   00263C  EFED  F012         	goto	l12465
 16725   002640  EF86  F012         	goto	l979
 16726   002644                     l12469:
 16727                           
 16728                           ; BSR set to: 0
 16729                           ;MCAL_layer/GPIO/hal_gpio.c: 118:                         LATA |= (1 << pinConfig ->pin)
      +                          ;break;
 16730   002644  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16731   002648  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16732   00264C  30DF               	rrcf	223,w,c
 16733   00264E  32E8               	rrcf	wreg,f,c
 16734   002650  32E8               	rrcf	wreg,f,c
 16735   002652  0B07               	andlw	7
 16736   002654  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 16737   002656  0E01               	movlw	1
 16738   002658  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 16739   00265A  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 16740   00265C  EF32  F013         	goto	u11064
 16741   002660                     u11065:
 16742   002660  90D8               	bcf	status,0,c
 16743   002662  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 16744   002664                     u11064:
 16745   002664  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 16746   002666  EF30  F013         	goto	u11065
 16747   00266A  0100               	movlb	0	; () banked
 16748   00266C  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 16749   00266E  1289               	iorwf	137,f,c	;volatile
 16750   002670  EFCB  F013         	goto	l12483
 16751   002674                     l12471:
 16752                           
 16753                           ; BSR set to: 0
 16754                           ;MCAL_layer/GPIO/hal_gpio.c: 120:                         LATB |= (1 << pinConfig ->pin)
      +                          ;break;
 16755   002674  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16756   002678  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16757   00267C  30DF               	rrcf	223,w,c
 16758   00267E  32E8               	rrcf	wreg,f,c
 16759   002680  32E8               	rrcf	wreg,f,c
 16760   002682  0B07               	andlw	7
 16761   002684  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 16762   002686  0E01               	movlw	1
 16763   002688  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 16764   00268A  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 16765   00268C  EF4A  F013         	goto	u11074
 16766   002690                     u11075:
 16767   002690  90D8               	bcf	status,0,c
 16768   002692  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 16769   002694                     u11074:
 16770   002694  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 16771   002696  EF48  F013         	goto	u11075
 16772   00269A  0100               	movlb	0	; () banked
 16773   00269C  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 16774   00269E  128A               	iorwf	138,f,c	;volatile
 16775   0026A0  EFCB  F013         	goto	l12483
 16776   0026A4                     l12473:
 16777                           
 16778                           ; BSR set to: 0
 16779                           ;MCAL_layer/GPIO/hal_gpio.c: 122:                         LATC |= (1 << pinConfig ->pin)
      +                          ;break;
 16780   0026A4  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16781   0026A8  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16782   0026AC  30DF               	rrcf	223,w,c
 16783   0026AE  32E8               	rrcf	wreg,f,c
 16784   0026B0  32E8               	rrcf	wreg,f,c
 16785   0026B2  0B07               	andlw	7
 16786   0026B4  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 16787   0026B6  0E01               	movlw	1
 16788   0026B8  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 16789   0026BA  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 16790   0026BC  EF62  F013         	goto	u11084
 16791   0026C0                     u11085:
 16792   0026C0  90D8               	bcf	status,0,c
 16793   0026C2  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 16794   0026C4                     u11084:
 16795   0026C4  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 16796   0026C6  EF60  F013         	goto	u11085
 16797   0026CA  0100               	movlb	0	; () banked
 16798   0026CC  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 16799   0026CE  128B               	iorwf	139,f,c	;volatile
 16800   0026D0  EFCB  F013         	goto	l12483
 16801   0026D4                     l12475:
 16802                           
 16803                           ; BSR set to: 0
 16804                           ;MCAL_layer/GPIO/hal_gpio.c: 124:                         LATD |= (1 << pinConfig ->pin)
      +                          ;break;
 16805   0026D4  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16806   0026D8  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16807   0026DC  30DF               	rrcf	223,w,c
 16808   0026DE  32E8               	rrcf	wreg,f,c
 16809   0026E0  32E8               	rrcf	wreg,f,c
 16810   0026E2  0B07               	andlw	7
 16811   0026E4  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 16812   0026E6  0E01               	movlw	1
 16813   0026E8  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 16814   0026EA  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 16815   0026EC  EF7A  F013         	goto	u11094
 16816   0026F0                     u11095:
 16817   0026F0  90D8               	bcf	status,0,c
 16818   0026F2  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 16819   0026F4                     u11094:
 16820   0026F4  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 16821   0026F6  EF78  F013         	goto	u11095
 16822   0026FA  0100               	movlb	0	; () banked
 16823   0026FC  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 16824   0026FE  128C               	iorwf	140,f,c	;volatile
 16825   002700  EFCB  F013         	goto	l12483
 16826   002704                     l12477:
 16827                           
 16828                           ; BSR set to: 0
 16829                           ;MCAL_layer/GPIO/hal_gpio.c: 126:                         LATE |= (1 << pinConfig ->pin)
      +                          ;break;
 16830   002704  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16831   002708  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16832   00270C  30DF               	rrcf	223,w,c
 16833   00270E  32E8               	rrcf	wreg,f,c
 16834   002710  32E8               	rrcf	wreg,f,c
 16835   002712  0B07               	andlw	7
 16836   002714  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 16837   002716  0E01               	movlw	1
 16838   002718  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 16839   00271A  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 16840   00271C  EF92  F013         	goto	u11104
 16841   002720                     u11105:
 16842   002720  90D8               	bcf	status,0,c
 16843   002722  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 16844   002724                     u11104:
 16845   002724  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 16846   002726  EF90  F013         	goto	u11105
 16847   00272A  0100               	movlb	0	; () banked
 16848   00272C  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 16849   00272E  128D               	iorwf	141,f,c	;volatile
 16850   002730  EFCB  F013         	goto	l12483
 16851   002734                     l12479:
 16852                           
 16853                           ; BSR set to: 0
 16854   002734  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 16855   002738  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 16856   00273C  50DF               	movf	223,w,c
 16857   00273E  0B07               	andlw	7
 16858                           
 16859                           ; Switch size 1, requested type "simple"
 16860                           ; Number of cases is 5, Range of values is 0 to 4
 16861                           ; switch strategies available:
 16862                           ; Name         Instructions Cycles
 16863                           ; simple_byte           16     9 (average)
 16864                           ;	Chosen strategy is simple_byte
 16865   002740  0A00               	xorlw	0	; case 0
 16866   002742  B4D8               	btfsc	status,2,c
 16867   002744  EF22  F013         	goto	l12469
 16868   002748  0A01               	xorlw	1	; case 1
 16869   00274A  B4D8               	btfsc	status,2,c
 16870   00274C  EF3A  F013         	goto	l12471
 16871   002750  0A03               	xorlw	3	; case 2
 16872   002752  B4D8               	btfsc	status,2,c
 16873   002754  EF52  F013         	goto	l12473
 16874   002758  0A01               	xorlw	1	; case 3
 16875   00275A  B4D8               	btfsc	status,2,c
 16876   00275C  EF6A  F013         	goto	l12475
 16877   002760  0A07               	xorlw	7	; case 4
 16878   002762  B4D8               	btfsc	status,2,c
 16879   002764  EF82  F013         	goto	l12477
 16880   002768  EF86  F012         	goto	l979
 16881   00276C                     l12481:
 16882                           
 16883                           ; BSR set to: 0
 16884   00276C  51D7               	movf	gpio_pin_write_logic@logic& (0+255),w,b
 16885   00276E  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 16886   002770  6BD9               	clrf	(??_gpio_pin_write_logic+1)& (0+255),b
 16887                           
 16888                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16889                           ; Switch size 1, requested type "simple"
 16890                           ; Number of cases is 1, Range of values is 0 to 0
 16891                           ; switch strategies available:
 16892                           ; Name         Instructions Cycles
 16893                           ; simple_byte            4     3 (average)
 16894                           ;	Chosen strategy is simple_byte
 16895   002772  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 16896   002774  0A00               	xorlw	0	; case 0
 16897   002776  B4D8               	btfsc	status,2,c
 16898   002778  EFC0  F013         	goto	l14845
 16899   00277C  EF86  F012         	goto	l979
 16900   002780                     l14845:
 16901                           
 16902                           ; BSR set to: 0
 16903                           ; Switch size 1, requested type "simple"
 16904                           ; Number of cases is 2, Range of values is 0 to 1
 16905                           ; switch strategies available:
 16906                           ; Name         Instructions Cycles
 16907                           ; simple_byte            7     4 (average)
 16908                           ;	Chosen strategy is simple_byte
 16909   002780  51D8               	movf	??_gpio_pin_write_logic& (0+255),w,b
 16910   002782  0A00               	xorlw	0	; case 0
 16911   002784  B4D8               	btfsc	status,2,c
 16912   002786  EF06  F013         	goto	l12467
 16913   00278A  0A01               	xorlw	1	; case 1
 16914   00278C  B4D8               	btfsc	status,2,c
 16915   00278E  EF9A  F013         	goto	l12479
 16916   002792  EF86  F012         	goto	l979
 16917   002796                     l12483:
 16918                           
 16919                           ; BSR set to: 0
 16920                           ;MCAL_layer/GPIO/hal_gpio.c: 133:     return rt;
 16921   002796  51DA               	movf	gpio_pin_write_logic@rt& (0+255),w,b
 16922   002798                     
 16923                           ; BSR set to: 0
 16924   002798  0012               	return		;funcret
 16925   00279A                     __end_of_gpio_pin_write_logic:
 16926                           	callstack 0
 16927                           
 16928 ;; *************** function _InterruptManager *****************
 16929 ;; Defined at:
 16930 ;;		line 116 in file "MCAL_layer/Interrupts/mcal_interrupts_manager.c"
 16931 ;; Parameters:    Size  Location     Type
 16932 ;;		None
 16933 ;; Auto vars:     Size  Location     Type
 16934 ;;		None
 16935 ;; Return value:  Size  Location     Type
 16936 ;;                  1    wreg      void 
 16937 ;; Registers used:
 16938 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
 16939 ;; Tracked objects:
 16940 ;;		On entry : 0/0
 16941 ;;		On exit  : 0/0
 16942 ;;		Unchanged: 0/0
 16943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16946 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16947 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16948 ;;Total ram usage:       10 bytes
 16949 ;; Hardware stack levels used: 1
 16950 ;; Hardware stack levels required when called: 8
 16951 ;; This function calls:
 16952 ;;		_ADC_ISR
 16953 ;;		_CCP1_ISR
 16954 ;;		_CCP2_ISR
 16955 ;;		_EUSART_RX_ISR
 16956 ;;		_EUSART_TX_ISR
 16957 ;;		_INT0_ISR
 16958 ;;		_INT1_ISR
 16959 ;;		_INT2_ISR
 16960 ;;		_MSSP_I2C_BC_ISR
 16961 ;;		_MSSP_I2C_ISR
 16962 ;;		_MSSP_SPI_ISR
 16963 ;;		_RB4_ISR
 16964 ;;		_RB5_ISR
 16965 ;;		_RB6_ISR
 16966 ;;		_RB7_ISR
 16967 ;;		_TMR0_ISR
 16968 ;;		_TMR1_ISR
 16969 ;;		_TMR2_ISR
 16970 ;;		_TMR3_ISR
 16971 ;; This function is called by:
 16972 ;;		Interrupt level 2
 16973 ;; This function uses a non-reentrant model
 16974 ;;
 16975                           
 16976                           	psect	intcode
 16977   000008                     __pintcode:
 16978                           	callstack 0
 16979   000008                     _InterruptManager:
 16980                           	callstack 12
 16981                           
 16982                           ; BSR set to: 0
 16983                           ;incstack = 0
 16984   000008  823F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16985   00000A  CFFA F018          	movff	pclath,??_InterruptManager
 16986   00000E  CFFB F019          	movff	pclatu,??_InterruptManager+1
 16987   000012  CFE9 F01A          	movff	fsr0l,??_InterruptManager+2
 16988   000016  CFEA F01B          	movff	fsr0h,??_InterruptManager+3
 16989   00001A  CFD9 F01C          	movff	fsr2l,??_InterruptManager+4
 16990   00001E  CFDA F01D          	movff	fsr2h,??_InterruptManager+5
 16991   000022  CFF6 F01E          	movff	tblptrl,??_InterruptManager+6
 16992   000026  CFF7 F01F          	movff	tblptrh,??_InterruptManager+7
 16993   00002A  CFF8 F020          	movff	tblptru,??_InterruptManager+8
 16994   00002E  CFF5 F021          	movff	tablat,??_InterruptManager+9
 16995   000032                     
 16996                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 118:     if((1 == INTCONbits.INT0IE) &
      +                          & (1 == INTCONbits.INT0IF)){
 16997   000032  A8F2               	btfss	242,4,c	;volatile
 16998   000034  EF1E  F000         	goto	i2u929_41
 16999   000038  EF20  F000         	goto	i2u929_40
 17000   00003C                     i2u929_41:
 17001   00003C  EF29  F000         	goto	i2l1614
 17002   000040                     i2u929_40:
 17003   000040  A2F2               	btfss	242,1,c	;volatile
 17004   000042  EF25  F000         	goto	i2u930_41
 17005   000046  EF27  F000         	goto	i2u930_40
 17006   00004A                     i2u930_41:
 17007   00004A  EF29  F000         	goto	i2l1614
 17008   00004E                     i2u930_40:
 17009   00004E                     
 17010                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 119:         INT0_ISR();
 17011   00004E  ECC5  F025         	call	_INT0_ISR	;wreg free
 17012   000052                     i2l1614:
 17013                           
 17014                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 122:     if((1 == INTCON3bits.INT1E) &
      +                          & (1 == INTCON3bits.INT1F)){
 17015   000052  A6F0               	btfss	240,3,c	;volatile
 17016   000054  EF2E  F000         	goto	i2u931_41
 17017   000058  EF30  F000         	goto	i2u931_40
 17018   00005C                     i2u931_41:
 17019   00005C  EF39  F000         	goto	i2l1616
 17020   000060                     i2u931_40:
 17021   000060  A0F0               	btfss	240,0,c	;volatile
 17022   000062  EF35  F000         	goto	i2u932_41
 17023   000066  EF37  F000         	goto	i2u932_40
 17024   00006A                     i2u932_41:
 17025   00006A  EF39  F000         	goto	i2l1616
 17026   00006E                     i2u932_40:
 17027   00006E                     
 17028                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 123:         INT1_ISR();
 17029   00006E  ECC3  F025         	call	_INT1_ISR	;wreg free
 17030   000072                     i2l1616:
 17031                           
 17032                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 126:     if((1 == INTCON3bits.INT2IE) 
      +                          && (1 == INTCON3bits.INT2IF)){
 17033   000072  A8F0               	btfss	240,4,c	;volatile
 17034   000074  EF3E  F000         	goto	i2u933_41
 17035   000078  EF40  F000         	goto	i2u933_40
 17036   00007C                     i2u933_41:
 17037   00007C  EF49  F000         	goto	i2l1618
 17038   000080                     i2u933_40:
 17039   000080  A2F0               	btfss	240,1,c	;volatile
 17040   000082  EF45  F000         	goto	i2u934_41
 17041   000086  EF47  F000         	goto	i2u934_40
 17042   00008A                     i2u934_41:
 17043   00008A  EF49  F000         	goto	i2l1618
 17044   00008E                     i2u934_40:
 17045   00008E                     
 17046                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 127:         INT2_ISR();
 17047   00008E  ECC1  F025         	call	_INT2_ISR	;wreg free
 17048   000092                     i2l1618:
 17049                           
 17050                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 133:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 17051   000092  A6F2               	btfss	242,3,c	;volatile
 17052   000094  EF4E  F000         	goto	i2u935_41
 17053   000098  EF50  F000         	goto	i2u935_40
 17054   00009C                     i2u935_41:
 17055   00009C  EF6A  F000         	goto	i2l1620
 17056   0000A0                     i2u935_40:
 17057   0000A0  A0F2               	btfss	242,0,c	;volatile
 17058   0000A2  EF55  F000         	goto	i2u936_41
 17059   0000A6  EF57  F000         	goto	i2u936_40
 17060   0000AA                     i2u936_41:
 17061   0000AA  EF6A  F000         	goto	i2l1620
 17062   0000AE                     i2u936_40:
 17063   0000AE  A881               	btfss	129,4,c	;volatile
 17064   0000B0  EF5C  F000         	goto	i2u937_41
 17065   0000B4  EF5E  F000         	goto	i2u937_40
 17066   0000B8                     i2u937_41:
 17067   0000B8  EF6A  F000         	goto	i2l1620
 17068   0000BC                     i2u937_40:
 17069   0000BC  0437               	decf	_RB4_Flag^0,w,c	;volatile
 17070   0000BE  A4D8               	btfss	status,2,c
 17071   0000C0  EF64  F000         	goto	i2u938_41
 17072   0000C4  EF66  F000         	goto	i2u938_40
 17073   0000C8                     i2u938_41:
 17074   0000C8  EF6A  F000         	goto	i2l1620
 17075   0000CC                     i2u938_40:
 17076   0000CC                     
 17077                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 134:        (PORTBbits.RB4 == GPIO_Pin
      +                          _Logic_HIGH) && (RB4_Flag == 1)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 135: 
      +                                  RB4_Flag = 0;
 17078   0000CC  6A37               	clrf	_RB4_Flag^0,c	;volatile
 17079   0000CE                     
 17080                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 136:         RB4_ISR(0);
 17081   0000CE  0E00               	movlw	0
 17082   0000D0  ECFC  F024         	call	_RB4_ISR
 17083   0000D4                     i2l1620:
 17084                           
 17085                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 139:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 17086   0000D4  A6F2               	btfss	242,3,c	;volatile
 17087   0000D6  EF6F  F000         	goto	i2u939_41
 17088   0000DA  EF71  F000         	goto	i2u939_40
 17089   0000DE                     i2u939_41:
 17090   0000DE  EF8C  F000         	goto	i2l1622
 17091   0000E2                     i2u939_40:
 17092   0000E2  A0F2               	btfss	242,0,c	;volatile
 17093   0000E4  EF76  F000         	goto	i2u940_41
 17094   0000E8  EF78  F000         	goto	i2u940_40
 17095   0000EC                     i2u940_41:
 17096   0000EC  EF8C  F000         	goto	i2l1622
 17097   0000F0                     i2u940_40:
 17098   0000F0  B881               	btfsc	129,4,c	;volatile
 17099   0000F2  EF7D  F000         	goto	i2u941_41
 17100   0000F6  EF7F  F000         	goto	i2u941_40
 17101   0000FA                     i2u941_41:
 17102   0000FA  EF8C  F000         	goto	i2l1622
 17103   0000FE                     i2u941_40:
 17104   0000FE  5037               	movf	_RB4_Flag^0,w,c	;volatile
 17105   000100  A4D8               	btfss	status,2,c
 17106   000102  EF85  F000         	goto	i2u942_41
 17107   000106  EF87  F000         	goto	i2u942_40
 17108   00010A                     i2u942_41:
 17109   00010A  EF8C  F000         	goto	i2l1622
 17110   00010E                     i2u942_40:
 17111   00010E                     
 17112                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 140:        (PORTBbits.RB4 == GPIO_Pin
      +                          _Logic_LOW) && (RB4_Flag == 0)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 141:  
      +                                 RB4_Flag = 1;
 17113   00010E  0E01               	movlw	1
 17114   000110  6E37               	movwf	_RB4_Flag^0,c	;volatile
 17115   000112                     
 17116                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 142:         RB4_ISR(1);
 17117   000112  0E01               	movlw	1
 17118   000114  ECFC  F024         	call	_RB4_ISR
 17119   000118                     i2l1622:
 17120                           
 17121                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 145:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 17122   000118  A6F2               	btfss	242,3,c	;volatile
 17123   00011A  EF91  F000         	goto	i2u943_41
 17124   00011E  EF93  F000         	goto	i2u943_40
 17125   000122                     i2u943_41:
 17126   000122  EFAD  F000         	goto	i2l1624
 17127   000126                     i2u943_40:
 17128   000126  A0F2               	btfss	242,0,c	;volatile
 17129   000128  EF98  F000         	goto	i2u944_41
 17130   00012C  EF9A  F000         	goto	i2u944_40
 17131   000130                     i2u944_41:
 17132   000130  EFAD  F000         	goto	i2l1624
 17133   000134                     i2u944_40:
 17134   000134  AA81               	btfss	129,5,c	;volatile
 17135   000136  EF9F  F000         	goto	i2u945_41
 17136   00013A  EFA1  F000         	goto	i2u945_40
 17137   00013E                     i2u945_41:
 17138   00013E  EFAD  F000         	goto	i2l1624
 17139   000142                     i2u945_40:
 17140   000142  0436               	decf	_RB5_Flag^0,w,c	;volatile
 17141   000144  A4D8               	btfss	status,2,c
 17142   000146  EFA7  F000         	goto	i2u946_41
 17143   00014A  EFA9  F000         	goto	i2u946_40
 17144   00014E                     i2u946_41:
 17145   00014E  EFAD  F000         	goto	i2l1624
 17146   000152                     i2u946_40:
 17147   000152                     
 17148                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 146:        (PORTBbits.RB5 == GPIO_Pin
      +                          _Logic_HIGH) && (RB5_Flag == 1)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 147: 
      +                                  RB5_Flag = 0;
 17149   000152  6A36               	clrf	_RB5_Flag^0,c	;volatile
 17150   000154                     
 17151                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 148:         RB5_ISR(0);
 17152   000154  0E00               	movlw	0
 17153   000156  ECEF  F024         	call	_RB5_ISR
 17154   00015A                     i2l1624:
 17155                           
 17156                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 151:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 17157   00015A  A6F2               	btfss	242,3,c	;volatile
 17158   00015C  EFB2  F000         	goto	i2u947_41
 17159   000160  EFB4  F000         	goto	i2u947_40
 17160   000164                     i2u947_41:
 17161   000164  EFCF  F000         	goto	i2l1626
 17162   000168                     i2u947_40:
 17163   000168  A0F2               	btfss	242,0,c	;volatile
 17164   00016A  EFB9  F000         	goto	i2u948_41
 17165   00016E  EFBB  F000         	goto	i2u948_40
 17166   000172                     i2u948_41:
 17167   000172  EFCF  F000         	goto	i2l1626
 17168   000176                     i2u948_40:
 17169   000176  BA81               	btfsc	129,5,c	;volatile
 17170   000178  EFC0  F000         	goto	i2u949_41
 17171   00017C  EFC2  F000         	goto	i2u949_40
 17172   000180                     i2u949_41:
 17173   000180  EFCF  F000         	goto	i2l1626
 17174   000184                     i2u949_40:
 17175   000184  5036               	movf	_RB5_Flag^0,w,c	;volatile
 17176   000186  A4D8               	btfss	status,2,c
 17177   000188  EFC8  F000         	goto	i2u950_41
 17178   00018C  EFCA  F000         	goto	i2u950_40
 17179   000190                     i2u950_41:
 17180   000190  EFCF  F000         	goto	i2l1626
 17181   000194                     i2u950_40:
 17182   000194                     
 17183                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 152:        (PORTBbits.RB5 == GPIO_Pin
      +                          _Logic_LOW) && (RB5_Flag == 0)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 153:  
      +                                 RB5_Flag = 1;
 17184   000194  0E01               	movlw	1
 17185   000196  6E36               	movwf	_RB5_Flag^0,c	;volatile
 17186   000198                     
 17187                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 154:         RB5_ISR(1);
 17188   000198  0E01               	movlw	1
 17189   00019A  ECEF  F024         	call	_RB5_ISR
 17190   00019E                     i2l1626:
 17191                           
 17192                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 157:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 17193   00019E  A6F2               	btfss	242,3,c	;volatile
 17194   0001A0  EFD4  F000         	goto	i2u951_41
 17195   0001A4  EFD6  F000         	goto	i2u951_40
 17196   0001A8                     i2u951_41:
 17197   0001A8  EFF0  F000         	goto	i2l1628
 17198   0001AC                     i2u951_40:
 17199   0001AC  A0F2               	btfss	242,0,c	;volatile
 17200   0001AE  EFDB  F000         	goto	i2u952_41
 17201   0001B2  EFDD  F000         	goto	i2u952_40
 17202   0001B6                     i2u952_41:
 17203   0001B6  EFF0  F000         	goto	i2l1628
 17204   0001BA                     i2u952_40:
 17205   0001BA  AC81               	btfss	129,6,c	;volatile
 17206   0001BC  EFE2  F000         	goto	i2u953_41
 17207   0001C0  EFE4  F000         	goto	i2u953_40
 17208   0001C4                     i2u953_41:
 17209   0001C4  EFF0  F000         	goto	i2l1628
 17210   0001C8                     i2u953_40:
 17211   0001C8  0435               	decf	_RB6_Flag^0,w,c	;volatile
 17212   0001CA  A4D8               	btfss	status,2,c
 17213   0001CC  EFEA  F000         	goto	i2u954_41
 17214   0001D0  EFEC  F000         	goto	i2u954_40
 17215   0001D4                     i2u954_41:
 17216   0001D4  EFF0  F000         	goto	i2l1628
 17217   0001D8                     i2u954_40:
 17218   0001D8                     
 17219                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 158:        (PORTBbits.RB6 == GPIO_Pin
      +                          _Logic_HIGH) && (RB6_Flag == 1)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 159: 
      +                                  RB6_Flag = 0;
 17220   0001D8  6A35               	clrf	_RB6_Flag^0,c	;volatile
 17221   0001DA                     
 17222                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 160:         RB6_ISR(0);
 17223   0001DA  0E00               	movlw	0
 17224   0001DC  ECE2  F024         	call	_RB6_ISR
 17225   0001E0                     i2l1628:
 17226                           
 17227                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 163:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 17228   0001E0  A6F2               	btfss	242,3,c	;volatile
 17229   0001E2  EFF5  F000         	goto	i2u955_41
 17230   0001E6  EFF7  F000         	goto	i2u955_40
 17231   0001EA                     i2u955_41:
 17232   0001EA  EF12  F001         	goto	i2l1630
 17233   0001EE                     i2u955_40:
 17234   0001EE  A0F2               	btfss	242,0,c	;volatile
 17235   0001F0  EFFC  F000         	goto	i2u956_41
 17236   0001F4  EFFE  F000         	goto	i2u956_40
 17237   0001F8                     i2u956_41:
 17238   0001F8  EF12  F001         	goto	i2l1630
 17239   0001FC                     i2u956_40:
 17240   0001FC  BC81               	btfsc	129,6,c	;volatile
 17241   0001FE  EF03  F001         	goto	i2u957_41
 17242   000202  EF05  F001         	goto	i2u957_40
 17243   000206                     i2u957_41:
 17244   000206  EF12  F001         	goto	i2l1630
 17245   00020A                     i2u957_40:
 17246   00020A  5035               	movf	_RB6_Flag^0,w,c	;volatile
 17247   00020C  A4D8               	btfss	status,2,c
 17248   00020E  EF0B  F001         	goto	i2u958_41
 17249   000212  EF0D  F001         	goto	i2u958_40
 17250   000216                     i2u958_41:
 17251   000216  EF12  F001         	goto	i2l1630
 17252   00021A                     i2u958_40:
 17253   00021A                     
 17254                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 164:        (PORTBbits.RB6 == GPIO_Pin
      +                          _Logic_LOW) && (RB6_Flag == 0)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 165:  
      +                                 RB6_Flag = 1;
 17255   00021A  0E01               	movlw	1
 17256   00021C  6E35               	movwf	_RB6_Flag^0,c	;volatile
 17257   00021E                     
 17258                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 166:         RB6_ISR(1);
 17259   00021E  0E01               	movlw	1
 17260   000220  ECE2  F024         	call	_RB6_ISR
 17261   000224                     i2l1630:
 17262                           
 17263                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 169:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 17264   000224  A6F2               	btfss	242,3,c	;volatile
 17265   000226  EF17  F001         	goto	i2u959_41
 17266   00022A  EF19  F001         	goto	i2u959_40
 17267   00022E                     i2u959_41:
 17268   00022E  EF33  F001         	goto	i2l1632
 17269   000232                     i2u959_40:
 17270   000232  A0F2               	btfss	242,0,c	;volatile
 17271   000234  EF1E  F001         	goto	i2u960_41
 17272   000238  EF20  F001         	goto	i2u960_40
 17273   00023C                     i2u960_41:
 17274   00023C  EF33  F001         	goto	i2l1632
 17275   000240                     i2u960_40:
 17276   000240  AE81               	btfss	129,7,c	;volatile
 17277   000242  EF25  F001         	goto	i2u961_41
 17278   000246  EF27  F001         	goto	i2u961_40
 17279   00024A                     i2u961_41:
 17280   00024A  EF33  F001         	goto	i2l1632
 17281   00024E                     i2u961_40:
 17282   00024E  0434               	decf	_RB7_Flag^0,w,c	;volatile
 17283   000250  A4D8               	btfss	status,2,c
 17284   000252  EF2D  F001         	goto	i2u962_41
 17285   000256  EF2F  F001         	goto	i2u962_40
 17286   00025A                     i2u962_41:
 17287   00025A  EF33  F001         	goto	i2l1632
 17288   00025E                     i2u962_40:
 17289   00025E                     
 17290                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 170:        (PORTBbits.RB7 == GPIO_Pin
      +                          _Logic_HIGH) && (RB7_Flag == 1)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 171: 
      +                                  RB7_Flag = 0;
 17291   00025E  6A34               	clrf	_RB7_Flag^0,c	;volatile
 17292   000260                     
 17293                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 172:         RB7_ISR(0);
 17294   000260  0E00               	movlw	0
 17295   000262  ECD5  F024         	call	_RB7_ISR
 17296   000266                     i2l1632:
 17297                           
 17298                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 175:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 17299   000266  A6F2               	btfss	242,3,c	;volatile
 17300   000268  EF38  F001         	goto	i2u963_41
 17301   00026C  EF3A  F001         	goto	i2u963_40
 17302   000270                     i2u963_41:
 17303   000270  EF55  F001         	goto	i2l1634
 17304   000274                     i2u963_40:
 17305   000274  A0F2               	btfss	242,0,c	;volatile
 17306   000276  EF3F  F001         	goto	i2u964_41
 17307   00027A  EF41  F001         	goto	i2u964_40
 17308   00027E                     i2u964_41:
 17309   00027E  EF55  F001         	goto	i2l1634
 17310   000282                     i2u964_40:
 17311   000282  BE81               	btfsc	129,7,c	;volatile
 17312   000284  EF46  F001         	goto	i2u965_41
 17313   000288  EF48  F001         	goto	i2u965_40
 17314   00028C                     i2u965_41:
 17315   00028C  EF55  F001         	goto	i2l1634
 17316   000290                     i2u965_40:
 17317   000290  5034               	movf	_RB7_Flag^0,w,c	;volatile
 17318   000292  A4D8               	btfss	status,2,c
 17319   000294  EF4E  F001         	goto	i2u966_41
 17320   000298  EF50  F001         	goto	i2u966_40
 17321   00029C                     i2u966_41:
 17322   00029C  EF55  F001         	goto	i2l1634
 17323   0002A0                     i2u966_40:
 17324   0002A0                     
 17325                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 176:        (PORTBbits.RB7 == GPIO_Pin
      +                          _Logic_LOW) && (RB7_Flag == 0)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 177:  
      +                                 RB7_Flag = 1;
 17326   0002A0  0E01               	movlw	1
 17327   0002A2  6E34               	movwf	_RB7_Flag^0,c	;volatile
 17328   0002A4                     
 17329                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 178:         RB7_ISR(1);
 17330   0002A4  0E01               	movlw	1
 17331   0002A6  ECD5  F024         	call	_RB7_ISR
 17332   0002AA                     i2l1634:
 17333                           
 17334                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 183:     if((1 == PIE1bits.ADIE) && (1
      +                           == PIR1bits.ADIF)){
 17335   0002AA  AC9D               	btfss	157,6,c	;volatile
 17336   0002AC  EF5A  F001         	goto	i2u967_41
 17337   0002B0  EF5C  F001         	goto	i2u967_40
 17338   0002B4                     i2u967_41:
 17339   0002B4  EF65  F001         	goto	i2l1636
 17340   0002B8                     i2u967_40:
 17341   0002B8  AC9E               	btfss	158,6,c	;volatile
 17342   0002BA  EF61  F001         	goto	i2u968_41
 17343   0002BE  EF63  F001         	goto	i2u968_40
 17344   0002C2                     i2u968_41:
 17345   0002C2  EF65  F001         	goto	i2l1636
 17346   0002C6                     i2u968_40:
 17347   0002C6                     
 17348                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 184:         ADC_ISR();
 17349   0002C6  ECCB  F025         	call	_ADC_ISR	;wreg free
 17350   0002CA                     i2l1636:
 17351                           
 17352                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 188:     if((1 == INTCONbits.TMR0IE) &
      +                          & (1 == INTCONbits.TMR0IF)){
 17353   0002CA  AAF2               	btfss	242,5,c	;volatile
 17354   0002CC  EF6A  F001         	goto	i2u969_41
 17355   0002D0  EF6C  F001         	goto	i2u969_40
 17356   0002D4                     i2u969_41:
 17357   0002D4  EF75  F001         	goto	i2l1638
 17358   0002D8                     i2u969_40:
 17359   0002D8  A4F2               	btfss	242,2,c	;volatile
 17360   0002DA  EF71  F001         	goto	i2u970_41
 17361   0002DE  EF73  F001         	goto	i2u970_40
 17362   0002E2                     i2u970_41:
 17363   0002E2  EF75  F001         	goto	i2l1638
 17364   0002E6                     i2u970_40:
 17365   0002E6                     
 17366                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 189:         TMR0_ISR();
 17367   0002E6  ECB8  F023         	call	_TMR0_ISR	;wreg free
 17368   0002EA                     i2l1638:
 17369                           
 17370                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 192:     if((1 == PIE1bits.TMR1IE) && 
      +                          (1 == PIR1bits.TMR1IF)){
 17371   0002EA  A09D               	btfss	157,0,c	;volatile
 17372   0002EC  EF7A  F001         	goto	i2u971_41
 17373   0002F0  EF7C  F001         	goto	i2u971_40
 17374   0002F4                     i2u971_41:
 17375   0002F4  EF85  F001         	goto	i2l1640
 17376   0002F8                     i2u971_40:
 17377   0002F8  A09E               	btfss	158,0,c	;volatile
 17378   0002FA  EF81  F001         	goto	i2u972_41
 17379   0002FE  EF83  F001         	goto	i2u972_40
 17380   000302                     i2u972_41:
 17381   000302  EF85  F001         	goto	i2l1640
 17382   000306                     i2u972_40:
 17383   000306                     
 17384                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 193:         TMR1_ISR();
 17385   000306  EC55  F025         	call	_TMR1_ISR	;wreg free
 17386   00030A                     i2l1640:
 17387                           
 17388                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 196:     if((1 == PIE1bits.TMR2IE) && 
      +                          (1 == PIR1bits.TMR2IF)){
 17389   00030A  A29D               	btfss	157,1,c	;volatile
 17390   00030C  EF8A  F001         	goto	i2u973_41
 17391   000310  EF8C  F001         	goto	i2u973_40
 17392   000314                     i2u973_41:
 17393   000314  EF95  F001         	goto	i2l1642
 17394   000318                     i2u973_40:
 17395   000318  A29E               	btfss	158,1,c	;volatile
 17396   00031A  EF91  F001         	goto	i2u974_41
 17397   00031E  EF93  F001         	goto	i2u974_40
 17398   000322                     i2u974_41:
 17399   000322  EF95  F001         	goto	i2l1642
 17400   000326                     i2u974_40:
 17401   000326                     
 17402                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 197:         TMR2_ISR();
 17403   000326  EC9B  F025         	call	_TMR2_ISR	;wreg free
 17404   00032A                     i2l1642:
 17405                           
 17406                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 200:     if((1 == PIE2bits.TMR3IE) && 
      +                          (1 == PIR2bits.TMR3IF)){
 17407   00032A  A2A0               	btfss	160,1,c	;volatile
 17408   00032C  EF9A  F001         	goto	i2u975_41
 17409   000330  EF9C  F001         	goto	i2u975_40
 17410   000334                     i2u975_41:
 17411   000334  EFA5  F001         	goto	i2l1644
 17412   000338                     i2u975_40:
 17413   000338  A2A1               	btfss	161,1,c	;volatile
 17414   00033A  EFA1  F001         	goto	i2u976_41
 17415   00033E  EFA3  F001         	goto	i2u976_40
 17416   000342                     i2u976_41:
 17417   000342  EFA5  F001         	goto	i2l1644
 17418   000346                     i2u976_40:
 17419   000346                     
 17420                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 201:         TMR3_ISR();
 17421   000346  EC4E  F025         	call	_TMR3_ISR	;wreg free
 17422   00034A                     i2l1644:
 17423                           
 17424                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 205:     if((1 == PIE1bits.TXIE) && (1
      +                           == PIR1bits.TXIF)){
 17425   00034A  A89D               	btfss	157,4,c	;volatile
 17426   00034C  EFAA  F001         	goto	i2u977_41
 17427   000350  EFAC  F001         	goto	i2u977_40
 17428   000354                     i2u977_41:
 17429   000354  EFB5  F001         	goto	i2l1646
 17430   000358                     i2u977_40:
 17431   000358  A89E               	btfss	158,4,c	;volatile
 17432   00035A  EFB1  F001         	goto	i2u978_41
 17433   00035E  EFB3  F001         	goto	i2u978_40
 17434   000362                     i2u978_41:
 17435   000362  EFB5  F001         	goto	i2l1646
 17436   000366                     i2u978_40:
 17437   000366                     
 17438                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 206:         EUSART_TX_ISR();
 17439   000366  ECC7  F025         	call	_EUSART_TX_ISR	;wreg free
 17440   00036A                     i2l1646:
 17441                           
 17442                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 209:     if((1 == PIE1bits.RCIE) && (1
      +                           == PIR1bits.RCIF)){
 17443   00036A  AA9D               	btfss	157,5,c	;volatile
 17444   00036C  EFBA  F001         	goto	i2u979_41
 17445   000370  EFBC  F001         	goto	i2u979_40
 17446   000374                     i2u979_41:
 17447   000374  EFC5  F001         	goto	i2l1648
 17448   000378                     i2u979_40:
 17449   000378  AA9E               	btfss	158,5,c	;volatile
 17450   00037A  EFC1  F001         	goto	i2u980_41
 17451   00037E  EFC3  F001         	goto	i2u980_40
 17452   000382                     i2u980_41:
 17453   000382  EFC5  F001         	goto	i2l1648
 17454   000386                     i2u980_40:
 17455   000386                     
 17456                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 210:         EUSART_RX_ISR();
 17457   000386  ECCD  F025         	call	_EUSART_RX_ISR	;wreg free
 17458   00038A                     i2l1648:
 17459                           
 17460                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 215:     if((1 == PIE1bits.SSPIE) && (
      +                          1 == PIR1bits.SSPIF)){
 17461   00038A  A69D               	btfss	157,3,c	;volatile
 17462   00038C  EFCA  F001         	goto	i2u981_41
 17463   000390  EFCC  F001         	goto	i2u981_40
 17464   000394                     i2u981_41:
 17465   000394  EFD5  F001         	goto	i2l1650
 17466   000398                     i2u981_40:
 17467   000398  A69E               	btfss	158,3,c	;volatile
 17468   00039A  EFD1  F001         	goto	i2u982_41
 17469   00039E  EFD3  F001         	goto	i2u982_40
 17470   0003A2                     i2u982_41:
 17471   0003A2  EFD5  F001         	goto	i2l1650
 17472   0003A6                     i2u982_40:
 17473   0003A6                     
 17474                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 216:         MSSP_I2C_ISR();
 17475   0003A6  ECBD  F025         	call	_MSSP_I2C_ISR	;wreg free
 17476   0003AA                     i2l1650:
 17477                           
 17478                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 219:     if((1 == PIE2bits.BCLIE) && (
      +                          1 == PIR2bits.BCLIF)){
 17479   0003AA  A6A0               	btfss	160,3,c	;volatile
 17480   0003AC  EFDA  F001         	goto	i2u983_41
 17481   0003B0  EFDC  F001         	goto	i2u983_40
 17482   0003B4                     i2u983_41:
 17483   0003B4  EFE5  F001         	goto	i2l1652
 17484   0003B8                     i2u983_40:
 17485   0003B8  A6A1               	btfss	161,3,c	;volatile
 17486   0003BA  EFE1  F001         	goto	i2u984_41
 17487   0003BE  EFE3  F001         	goto	i2u984_40
 17488   0003C2                     i2u984_41:
 17489   0003C2  EFE5  F001         	goto	i2l1652
 17490   0003C6                     i2u984_40:
 17491   0003C6                     
 17492                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 220:         MSSP_I2C_BC_ISR();
 17493   0003C6  ECBF  F025         	call	_MSSP_I2C_BC_ISR	;wreg free
 17494   0003CA                     i2l1652:
 17495                           
 17496                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 223:     if((1 == PIE1bits.SSPIE) && (
      +                          1 == PIR1bits.SSPIF)){
 17497   0003CA  A69D               	btfss	157,3,c	;volatile
 17498   0003CC  EFEA  F001         	goto	i2u985_41
 17499   0003D0  EFEC  F001         	goto	i2u985_40
 17500   0003D4                     i2u985_41:
 17501   0003D4  EFF5  F001         	goto	i2l1654
 17502   0003D8                     i2u985_40:
 17503   0003D8  A69E               	btfss	158,3,c	;volatile
 17504   0003DA  EFF1  F001         	goto	i2u986_41
 17505   0003DE  EFF3  F001         	goto	i2u986_40
 17506   0003E2                     i2u986_41:
 17507   0003E2  EFF5  F001         	goto	i2l1654
 17508   0003E6                     i2u986_40:
 17509   0003E6                     
 17510                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 224:         MSSP_SPI_ISR();
 17511   0003E6  ECBB  F025         	call	_MSSP_SPI_ISR	;wreg free
 17512   0003EA                     i2l1654:
 17513                           
 17514                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 229:     if((1 == PIE1bits.CCP1IE) && 
      +                          (1 == PIR1bits.CCP1IF)){
 17515   0003EA  A49D               	btfss	157,2,c	;volatile
 17516   0003EC  EFFA  F001         	goto	i2u987_41
 17517   0003F0  EFFC  F001         	goto	i2u987_40
 17518   0003F4                     i2u987_41:
 17519   0003F4  EF05  F002         	goto	i2l1656
 17520   0003F8                     i2u987_40:
 17521   0003F8  A49E               	btfss	158,2,c	;volatile
 17522   0003FA  EF01  F002         	goto	i2u988_41
 17523   0003FE  EF03  F002         	goto	i2u988_40
 17524   000402                     i2u988_41:
 17525   000402  EF05  F002         	goto	i2l1656
 17526   000406                     i2u988_40:
 17527   000406                     
 17528                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 230:         CCP1_ISR();
 17529   000406  ECD4  F023         	call	_CCP1_ISR	;wreg free
 17530   00040A                     i2l1656:
 17531                           
 17532                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 233:     if((1 == PIE2bits.CCP2IE) && 
      +                          (1 == PIR2bits.CCP2IF)){
 17533   00040A  A0A0               	btfss	160,0,c	;volatile
 17534   00040C  EF0A  F002         	goto	i2u989_41
 17535   000410  EF0C  F002         	goto	i2u989_40
 17536   000414                     i2u989_41:
 17537   000414  EF15  F002         	goto	i2l1659
 17538   000418                     i2u989_40:
 17539   000418  A0A1               	btfss	161,0,c	;volatile
 17540   00041A  EF11  F002         	goto	i2u990_41
 17541   00041E  EF13  F002         	goto	i2u990_40
 17542   000422                     i2u990_41:
 17543   000422  EF15  F002         	goto	i2l1659
 17544   000426                     i2u990_40:
 17545   000426                     
 17546                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 234:         CCP2_ISR();
 17547   000426  ECC9  F025         	call	_CCP2_ISR	;wreg free
 17548   00042A                     i2l1659:
 17549   00042A  C021  FFF5         	movff	??_InterruptManager+9,tablat
 17550   00042E  C020  FFF8         	movff	??_InterruptManager+8,tblptru
 17551   000432  C01F  FFF7         	movff	??_InterruptManager+7,tblptrh
 17552   000436  C01E  FFF6         	movff	??_InterruptManager+6,tblptrl
 17553   00043A  C01D  FFDA         	movff	??_InterruptManager+5,fsr2h
 17554   00043E  C01C  FFD9         	movff	??_InterruptManager+4,fsr2l
 17555   000442  C01B  FFEA         	movff	??_InterruptManager+3,fsr0h
 17556   000446  C01A  FFE9         	movff	??_InterruptManager+2,fsr0l
 17557   00044A  C019  FFFB         	movff	??_InterruptManager+1,pclatu
 17558   00044E  C018  FFFA         	movff	??_InterruptManager,pclath
 17559   000452  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 17560   000454  0011               	retfie		f
 17561   000456                     __end_of_InterruptManager:
 17562                           	callstack 0
 17563                           
 17564 ;; *************** function _TMR3_ISR *****************
 17565 ;; Defined at:
 17566 ;;		line 170 in file "MCAL_layer/Timer3/hal_timer3.c"
 17567 ;; Parameters:    Size  Location     Type
 17568 ;;		None
 17569 ;; Auto vars:     Size  Location     Type
 17570 ;;		None
 17571 ;; Return value:  Size  Location     Type
 17572 ;;                  1    wreg      void 
 17573 ;; Registers used:
 17574 ;;		wreg, status,2
 17575 ;; Tracked objects:
 17576 ;;		On entry : 0/0
 17577 ;;		On exit  : 0/0
 17578 ;;		Unchanged: 0/0
 17579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17582 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17583 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17584 ;;Total ram usage:        0 bytes
 17585 ;; Hardware stack levels used: 1
 17586 ;; This function calls:
 17587 ;;		Nothing
 17588 ;; This function is called by:
 17589 ;;		_InterruptManager
 17590 ;; This function uses a non-reentrant model
 17591 ;;
 17592                           
 17593                           	psect	text89
 17594   004A9C                     __ptext89:
 17595                           	callstack 0
 17596   004A9C                     _TMR3_ISR:
 17597                           	callstack 19
 17598   004A9C                     
 17599                           ;MCAL_layer/Timer3/hal_timer3.c: 172:         (PIR2bits.TMR3IF = 0);
 17600   004A9C  92A1               	bcf	161,1,c	;volatile
 17601   004A9E                     
 17602                           ;MCAL_layer/Timer3/hal_timer3.c: 174:         TMR3H = (uint8)(timer3_preload >> 8);
 17603   004A9E  0100               	movlb	0	; () banked
 17604   004AA0  5192               	movf	(_timer3_preload+1)& (0+255),w,b
 17605   004AA2  6EB3               	movwf	179,c	;volatile
 17606   004AA4                     
 17607                           ; BSR set to: 0
 17608                           ;MCAL_layer/Timer3/hal_timer3.c: 175:         TMR3L = (uint8)(timer3_preload);
 17609   004AA4  C091  FFB2         	movff	_timer3_preload,4018	;volatile
 17610   004AA8                     
 17611                           ; BSR set to: 0
 17612   004AA8  0012               	return		;funcret
 17613   004AAA                     __end_of_TMR3_ISR:
 17614                           	callstack 0
 17615                           
 17616 ;; *************** function _TMR2_ISR *****************
 17617 ;; Defined at:
 17618 ;;		line 134 in file "MCAL_layer/Timer2/hal_timer2.c"
 17619 ;; Parameters:    Size  Location     Type
 17620 ;;		None
 17621 ;; Auto vars:     Size  Location     Type
 17622 ;;		None
 17623 ;; Return value:  Size  Location     Type
 17624 ;;                  1    wreg      void 
 17625 ;; Registers used:
 17626 ;;		None
 17627 ;; Tracked objects:
 17628 ;;		On entry : 0/0
 17629 ;;		On exit  : 0/0
 17630 ;;		Unchanged: 0/0
 17631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17636 ;;Total ram usage:        0 bytes
 17637 ;; Hardware stack levels used: 1
 17638 ;; This function calls:
 17639 ;;		Nothing
 17640 ;; This function is called by:
 17641 ;;		_InterruptManager
 17642 ;; This function uses a non-reentrant model
 17643 ;;
 17644                           
 17645                           	psect	text90
 17646   004B36                     __ptext90:
 17647                           	callstack 0
 17648   004B36                     _TMR2_ISR:
 17649                           	callstack 19
 17650   004B36                     
 17651                           ;MCAL_layer/Timer2/hal_timer2.c: 136:         (PIR1bits.TMR2IF = 0);
 17652   004B36  929E               	bcf	158,1,c	;volatile
 17653                           
 17654                           ;MCAL_layer/Timer2/hal_timer2.c: 138:         TMR2 = (uint8)(timer2_preload);
 17655   004B38  C02B  FFCC         	movff	_timer2_preload,4044	;volatile
 17656   004B3C  0012               	return		;funcret
 17657   004B3E                     __end_of_TMR2_ISR:
 17658                           	callstack 0
 17659                           
 17660 ;; *************** function _TMR1_ISR *****************
 17661 ;; Defined at:
 17662 ;;		line 180 in file "MCAL_layer/Timer1/hal_timer1.c"
 17663 ;; Parameters:    Size  Location     Type
 17664 ;;		None
 17665 ;; Auto vars:     Size  Location     Type
 17666 ;;		None
 17667 ;; Return value:  Size  Location     Type
 17668 ;;                  1    wreg      void 
 17669 ;; Registers used:
 17670 ;;		wreg, status,2
 17671 ;; Tracked objects:
 17672 ;;		On entry : 0/0
 17673 ;;		On exit  : 0/0
 17674 ;;		Unchanged: 0/0
 17675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17680 ;;Total ram usage:        0 bytes
 17681 ;; Hardware stack levels used: 1
 17682 ;; This function calls:
 17683 ;;		Nothing
 17684 ;; This function is called by:
 17685 ;;		_InterruptManager
 17686 ;; This function uses a non-reentrant model
 17687 ;;
 17688                           
 17689                           	psect	text91
 17690   004AAA                     __ptext91:
 17691                           	callstack 0
 17692   004AAA                     _TMR1_ISR:
 17693                           	callstack 19
 17694   004AAA                     
 17695                           ;MCAL_layer/Timer1/hal_timer1.c: 182:         (PIR1bits.TMR1IF = 0);
 17696   004AAA  909E               	bcf	158,0,c	;volatile
 17697   004AAC                     
 17698                           ;MCAL_layer/Timer1/hal_timer1.c: 184:         TMR1H = (uint8)(timer1_preload >> 8);
 17699   004AAC  0100               	movlb	0	; () banked
 17700   004AAE  5198               	movf	(_timer1_preload+1)& (0+255),w,b
 17701   004AB0  6ECF               	movwf	207,c	;volatile
 17702   004AB2                     
 17703                           ; BSR set to: 0
 17704                           ;MCAL_layer/Timer1/hal_timer1.c: 185:         TMR1L = (uint8)(timer1_preload);
 17705   004AB2  C097  FFCE         	movff	_timer1_preload,4046	;volatile
 17706   004AB6                     
 17707                           ; BSR set to: 0
 17708   004AB6  0012               	return		;funcret
 17709   004AB8                     __end_of_TMR1_ISR:
 17710                           	callstack 0
 17711                           
 17712 ;; *************** function _TMR0_ISR *****************
 17713 ;; Defined at:
 17714 ;;		line 202 in file "MCAL_layer/Timer0/hal_timer0.c"
 17715 ;; Parameters:    Size  Location     Type
 17716 ;;		None
 17717 ;; Auto vars:     Size  Location     Type
 17718 ;;		None
 17719 ;; Return value:  Size  Location     Type
 17720 ;;                  1    wreg      void 
 17721 ;; Registers used:
 17722 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
 17723 ;; Tracked objects:
 17724 ;;		On entry : 0/0
 17725 ;;		On exit  : 0/0
 17726 ;;		Unchanged: 0/0
 17727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17732 ;;Total ram usage:        0 bytes
 17733 ;; Hardware stack levels used: 1
 17734 ;; Hardware stack levels required when called: 7
 17735 ;; This function calls:
 17736 ;;		NULL
 17737 ;;		_Timer0_DefaultInterruptHandler
 17738 ;; This function is called by:
 17739 ;;		_InterruptManager
 17740 ;; This function uses a non-reentrant model
 17741 ;;
 17742                           
 17743                           	psect	text92
 17744   004770                     __ptext92:
 17745                           	callstack 0
 17746   004770                     _TMR0_ISR:
 17747                           	callstack 12
 17748   004770                     
 17749                           ;MCAL_layer/Timer0/hal_timer0.c: 204:         (INTCONbits.TMR0IF = 0);
 17750   004770  94F2               	bcf	242,2,c	;volatile
 17751   004772                     
 17752                           ;MCAL_layer/Timer0/hal_timer0.c: 206:         TMR0H = (timer0_preload) >> 8;
 17753   004772  0100               	movlb	0	; () banked
 17754   004774  519C               	movf	(_timer0_preload+1)& (0+255),w,b
 17755   004776  6ED7               	movwf	215,c	;volatile
 17756   004778                     
 17757                           ; BSR set to: 0
 17758                           ;MCAL_layer/Timer0/hal_timer0.c: 207:         TMR0L = (uint8)(timer0_preload);
 17759   004778  C09B  FFD6         	movff	_timer0_preload,4054	;volatile
 17760   00477C                     
 17761                           ; BSR set to: 0
 17762                           ;MCAL_layer/Timer0/hal_timer0.c: 209:         if(Timer0_InterruptHandler) Timer0_Interru
      +                          ptHandler();
 17763   00477C  519D               	movf	_Timer0_InterruptHandler& (0+255),w,b
 17764   00477E  119E               	iorwf	(_Timer0_InterruptHandler+1)& (0+255),w,b
 17765   004780  B4D8               	btfsc	status,2,c
 17766   004782  EFC5  F023         	goto	i2u842_41
 17767   004786  EFC7  F023         	goto	i2u842_40
 17768   00478A                     i2u842_41:
 17769   00478A  EFD3  F023         	goto	i2l1912
 17770   00478E                     i2u842_40:
 17771   00478E                     
 17772                           ; BSR set to: 0
 17773   00478E  D802               	call	i2u843_48
 17774   004790  EFD3  F023         	goto	i2u843_49
 17775   004794                     i2u843_48:
 17776   004794  0005               	push	
 17777   004796  6EFA               	movwf	pclath,c
 17778   004798  519D               	movf	_Timer0_InterruptHandler& (0+255),w,b
 17779   00479A  6EFD               	movwf	tosl,c
 17780   00479C  519E               	movf	(_Timer0_InterruptHandler+1)& (0+255),w,b
 17781   00479E  6EFE               	movwf	tosh,c
 17782   0047A0  6AFF               	clrf	tosu,c
 17783   0047A2  50FA               	movf	pclath,w,c
 17784   0047A4  0012               	return		;indir
 17785   0047A6                     i2u843_49:
 17786   0047A6                     i2l1912:
 17787   0047A6  0012               	return		;funcret
 17788   0047A8                     __end_of_TMR0_ISR:
 17789                           	callstack 0
 17790                           
 17791 ;; *************** function _Timer0_DefaultInterruptHandler *****************
 17792 ;; Defined at:
 17793 ;;		line 328 in file "main.c"
 17794 ;; Parameters:    Size  Location     Type
 17795 ;;		None
 17796 ;; Auto vars:     Size  Location     Type
 17797 ;;		None
 17798 ;; Return value:  Size  Location     Type
 17799 ;;                  1    wreg      void 
 17800 ;; Registers used:
 17801 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17802 ;; Tracked objects:
 17803 ;;		On entry : 0/0
 17804 ;;		On exit  : 0/0
 17805 ;;		Unchanged: 0/0
 17806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17811 ;;Total ram usage:        0 bytes
 17812 ;; Hardware stack levels used: 1
 17813 ;; Hardware stack levels required when called: 6
 17814 ;; This function calls:
 17815 ;;		___awdiv
 17816 ;;		___awmod
 17817 ;;		i2_update_display
 17818 ;; This function is called by:
 17819 ;;		_TMR0_ISR
 17820 ;; This function uses a non-reentrant model
 17821 ;;
 17822                           
 17823                           	psect	text93
 17824   00345E                     __ptext93:
 17825                           	callstack 0
 17826   00345E                     _Timer0_DefaultInterruptHandler:
 17827                           	callstack 12
 17828   00345E                     
 17829                           ;main.c: 329:     if(seconds ==0){
 17830   00345E  502F               	movf	_seconds^0,w,c
 17831   003460  A4D8               	btfss	status,2,c
 17832   003462  EF35  F01A         	goto	i2u775_41
 17833   003466  EF37  F01A         	goto	i2u775_40
 17834   00346A                     i2u775_41:
 17835   00346A  EF45  F01A         	goto	i2l9571
 17836   00346E                     i2u775_40:
 17837   00346E                     
 17838                           ;main.c: 330:         seconds = 60 ;
 17839   00346E  0E3C               	movlw	60
 17840   003470  6E2F               	movwf	_seconds^0,c
 17841                           
 17842                           ;main.c: 331:         if(minutes ==0){
 17843   003472  502E               	movf	_minutes^0,w,c
 17844   003474  A4D8               	btfss	status,2,c
 17845   003476  EF3F  F01A         	goto	i2u776_41
 17846   00347A  EF41  F01A         	goto	i2u776_40
 17847   00347E                     i2u776_41:
 17848   00347E  EF44  F01A         	goto	i2l9569
 17849   003482                     i2u776_40:
 17850   003482                     
 17851                           ;main.c: 332:             minutes = 60 ;
 17852   003482  0E3C               	movlw	60
 17853   003484  6E2E               	movwf	_minutes^0,c
 17854   003486                     
 17855                           ;main.c: 333:             hours--;
 17856   003486  062D               	decf	_hours^0,f,c
 17857   003488                     i2l9569:
 17858                           
 17859                           ;main.c: 335:         minutes--;
 17860   003488  062E               	decf	_minutes^0,f,c
 17861   00348A                     i2l9571:
 17862                           
 17863                           ;main.c: 337:     seconds--;
 17864   00348A  062F               	decf	_seconds^0,f,c
 17865   00348C                     
 17866                           ;main.c: 338:     time_array[4] = seconds /10;
 17867   00348C  C02F  F001         	movff	_seconds,___awdiv@dividend
 17868   003490  6A02               	clrf	(___awdiv@dividend+1)^0,c
 17869   003492  0E00               	movlw	0
 17870   003494  6E04               	movwf	(___awdiv@divisor+1)^0,c
 17871   003496  0E0A               	movlw	10
 17872   003498  6E03               	movwf	___awdiv@divisor^0,c
 17873   00349A  ECF2  F01A         	call	___awdiv	;wreg free
 17874   00349E  5001               	movf	?___awdiv^0,w,c
 17875   0034A0  0100               	movlb	0	; () banked
 17876   0034A2  6F87               	movwf	(_time_array+4)& (0+255),b
 17877   0034A4                     
 17878                           ; BSR set to: 0
 17879                           ;main.c: 339:     time_array[5] = seconds % 10;
 17880   0034A4  C02F  F001         	movff	_seconds,___awmod@dividend
 17881   0034A8  6A02               	clrf	(___awmod@dividend+1)^0,c
 17882   0034AA  0E00               	movlw	0
 17883   0034AC  6E04               	movwf	(___awmod@divisor+1)^0,c
 17884   0034AE  0E0A               	movlw	10
 17885   0034B0  6E03               	movwf	___awmod@divisor^0,c
 17886   0034B2  ECAE  F01B         	call	___awmod	;wreg free
 17887   0034B6  5001               	movf	?___awmod^0,w,c
 17888   0034B8  0100               	movlb	0	; () banked
 17889   0034BA  6F88               	movwf	(_time_array+5)& (0+255),b
 17890   0034BC                     
 17891                           ; BSR set to: 0
 17892                           ;main.c: 340:     time_array[2] = minutes /10;
 17893   0034BC  C02E  F001         	movff	_minutes,___awdiv@dividend
 17894   0034C0  6A02               	clrf	(___awdiv@dividend+1)^0,c
 17895   0034C2  0E00               	movlw	0
 17896   0034C4  6E04               	movwf	(___awdiv@divisor+1)^0,c
 17897   0034C6  0E0A               	movlw	10
 17898   0034C8  6E03               	movwf	___awdiv@divisor^0,c
 17899   0034CA  ECF2  F01A         	call	___awdiv	;wreg free
 17900   0034CE  5001               	movf	?___awdiv^0,w,c
 17901   0034D0  0100               	movlb	0	; () banked
 17902   0034D2  6F85               	movwf	(_time_array+2)& (0+255),b
 17903   0034D4                     
 17904                           ; BSR set to: 0
 17905                           ;main.c: 341:     time_array[3] = minutes % 10;
 17906   0034D4  C02E  F001         	movff	_minutes,___awmod@dividend
 17907   0034D8  6A02               	clrf	(___awmod@dividend+1)^0,c
 17908   0034DA  0E00               	movlw	0
 17909   0034DC  6E04               	movwf	(___awmod@divisor+1)^0,c
 17910   0034DE  0E0A               	movlw	10
 17911   0034E0  6E03               	movwf	___awmod@divisor^0,c
 17912   0034E2  ECAE  F01B         	call	___awmod	;wreg free
 17913   0034E6  5001               	movf	?___awmod^0,w,c
 17914   0034E8  0100               	movlb	0	; () banked
 17915   0034EA  6F86               	movwf	(_time_array+3)& (0+255),b
 17916   0034EC                     
 17917                           ; BSR set to: 0
 17918                           ;main.c: 342:     time_array[0] = hours /10;
 17919   0034EC  C02D  F001         	movff	_hours,___awdiv@dividend
 17920   0034F0  6A02               	clrf	(___awdiv@dividend+1)^0,c
 17921   0034F2  0E00               	movlw	0
 17922   0034F4  6E04               	movwf	(___awdiv@divisor+1)^0,c
 17923   0034F6  0E0A               	movlw	10
 17924   0034F8  6E03               	movwf	___awdiv@divisor^0,c
 17925   0034FA  ECF2  F01A         	call	___awdiv	;wreg free
 17926   0034FE  5001               	movf	?___awdiv^0,w,c
 17927   003500  0100               	movlb	0	; () banked
 17928   003502  6F83               	movwf	_time_array& (0+255),b
 17929   003504                     
 17930                           ; BSR set to: 0
 17931                           ;main.c: 343:     time_array[1] = hours %10;
 17932   003504  C02D  F001         	movff	_hours,___awmod@dividend
 17933   003508  6A02               	clrf	(___awmod@dividend+1)^0,c
 17934   00350A  0E00               	movlw	0
 17935   00350C  6E04               	movwf	(___awmod@divisor+1)^0,c
 17936   00350E  0E0A               	movlw	10
 17937   003510  6E03               	movwf	___awmod@divisor^0,c
 17938   003512  ECAE  F01B         	call	___awmod	;wreg free
 17939   003516  5001               	movf	?___awmod^0,w,c
 17940   003518  0100               	movlb	0	; () banked
 17941   00351A  6F84               	movwf	(_time_array+1)& (0+255),b
 17942   00351C                     
 17943                           ; BSR set to: 0
 17944                           ;main.c: 345:     update_display();
 17945   00351C  EC4D  F019         	call	i2_update_display	;wreg free
 17946   003520  0012               	return		;funcret
 17947   003522                     __end_of_Timer0_DefaultInterruptHandler:
 17948                           	callstack 0
 17949                           
 17950 ;; *************** function i2_update_display *****************
 17951 ;; Defined at:
 17952 ;;		line 137 in file "main.c"
 17953 ;; Parameters:    Size  Location     Type
 17954 ;;		None
 17955 ;; Auto vars:     Size  Location     Type
 17956 ;;		None
 17957 ;; Return value:  Size  Location     Type
 17958 ;;                  1    wreg      void 
 17959 ;; Registers used:
 17960 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17961 ;; Tracked objects:
 17962 ;;		On entry : 0/0
 17963 ;;		On exit  : 0/0
 17964 ;;		Unchanged: 0/0
 17965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17970 ;;Total ram usage:        0 bytes
 17971 ;; Hardware stack levels used: 1
 17972 ;; Hardware stack levels required when called: 5
 17973 ;; This function calls:
 17974 ;;		i2_ECU_LCD_4Bit_Send_Command
 17975 ;;		i2_ECU_LCD_4Bit_Send_String_Data_Postition
 17976 ;;		i2_ECU_LCD_4Bit_Send_char_Data
 17977 ;;		i2_LCD_4Bits_Set_Curser
 17978 ;; This function is called by:
 17979 ;;		_Timer0_DefaultInterruptHandler
 17980 ;; This function uses a non-reentrant model
 17981 ;;
 17982                           
 17983                           	psect	text94
 17984   00329A                     __ptext94:
 17985                           	callstack 0
 17986   00329A                     i2_update_display:
 17987                           	callstack 12
 17988   00329A                     
 17989                           ;main.c: 138:     ret = ECU_LCD_4Bit_Send_Command(&LCD_1, 0x0D);
 17990   00329A  0E39               	movlw	low _LCD_1
 17991   00329C  6E0B               	movwf	i2ECU_LCD_4Bit_Send_Command@_LCD^0,c
 17992   00329E  0E0D               	movlw	13
 17993   0032A0  6E0C               	movwf	i2ECU_LCD_4Bit_Send_Command@_Command^0,c
 17994   0032A2  EC42  F022         	call	i2_ECU_LCD_4Bit_Send_Command	;wreg free
 17995   0032A6  0100               	movlb	0	; () banked
 17996   0032A8  6FFE               	movwf	_ret& (0+255),b
 17997                           
 17998                           ;main.c: 139:     ret = LCD_4Bits_Set_Curser(&LCD_1, 1,1);
 17999   0032AA  0E39               	movlw	low _LCD_1
 18000   0032AC  6E0E               	movwf	i2LCD_4Bits_Set_Curser@_LCD^0,c
 18001   0032AE  0E01               	movlw	1
 18002   0032B0  6E0F               	movwf	i2LCD_4Bits_Set_Curser@row^0,c
 18003   0032B2  0E01               	movlw	1
 18004   0032B4  6E10               	movwf	i2LCD_4Bits_Set_Curser@coloumn^0,c
 18005   0032B6  EC88  F01D         	call	i2_LCD_4Bits_Set_Curser	;wreg free
 18006   0032BA  0100               	movlb	0	; () banked
 18007   0032BC  6FFE               	movwf	_ret& (0+255),b
 18008                           
 18009                           ;main.c: 141:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[0] + '0');
 18010   0032BE  0E39               	movlw	low _LCD_1
 18011   0032C0  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 18012   0032C2  5183               	movf	_time_array& (0+255),w,b
 18013   0032C4  0F30               	addlw	48
 18014   0032C6  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 18015   0032C8  EC70  F022         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 18016   0032CC  0100               	movlb	0	; () banked
 18017   0032CE  6FFE               	movwf	_ret& (0+255),b
 18018                           
 18019                           ;main.c: 142:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[1] + '0');
 18020   0032D0  0E39               	movlw	low _LCD_1
 18021   0032D2  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 18022   0032D4  5184               	movf	(_time_array+1)& (0+255),w,b
 18023   0032D6  0F30               	addlw	48
 18024   0032D8  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 18025   0032DA  EC70  F022         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 18026   0032DE  0100               	movlb	0	; () banked
 18027   0032E0  6FFE               	movwf	_ret& (0+255),b
 18028                           
 18029                           ;main.c: 143:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, ':');
 18030   0032E2  0E39               	movlw	low _LCD_1
 18031   0032E4  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 18032   0032E6  0E3A               	movlw	58
 18033   0032E8  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 18034   0032EA  EC70  F022         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 18035   0032EE  0100               	movlb	0	; () banked
 18036   0032F0  6FFE               	movwf	_ret& (0+255),b
 18037                           
 18038                           ;main.c: 144:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[2] + '0');
 18039   0032F2  0E39               	movlw	low _LCD_1
 18040   0032F4  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 18041   0032F6  5185               	movf	(_time_array+2)& (0+255),w,b
 18042   0032F8  0F30               	addlw	48
 18043   0032FA  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 18044   0032FC  EC70  F022         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 18045   003300  0100               	movlb	0	; () banked
 18046   003302  6FFE               	movwf	_ret& (0+255),b
 18047                           
 18048                           ;main.c: 145:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[3] + '0');
 18049   003304  0E39               	movlw	low _LCD_1
 18050   003306  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 18051   003308  5186               	movf	(_time_array+3)& (0+255),w,b
 18052   00330A  0F30               	addlw	48
 18053   00330C  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 18054   00330E  EC70  F022         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 18055   003312  0100               	movlb	0	; () banked
 18056   003314  6FFE               	movwf	_ret& (0+255),b
 18057                           
 18058                           ;main.c: 146:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, ':');
 18059   003316  0E39               	movlw	low _LCD_1
 18060   003318  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 18061   00331A  0E3A               	movlw	58
 18062   00331C  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 18063   00331E  EC70  F022         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 18064   003322  0100               	movlb	0	; () banked
 18065   003324  6FFE               	movwf	_ret& (0+255),b
 18066                           
 18067                           ;main.c: 147:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[4] + '0');
 18068   003326  0E39               	movlw	low _LCD_1
 18069   003328  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 18070   00332A  5187               	movf	(_time_array+4)& (0+255),w,b
 18071   00332C  0F30               	addlw	48
 18072   00332E  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 18073   003330  EC70  F022         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 18074   003334  0100               	movlb	0	; () banked
 18075   003336  6FFE               	movwf	_ret& (0+255),b
 18076                           
 18077                           ;main.c: 148:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[5] + '0');
 18078   003338  0E39               	movlw	low _LCD_1
 18079   00333A  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 18080   00333C  5188               	movf	(_time_array+5)& (0+255),w,b
 18081   00333E  0F30               	addlw	48
 18082   003340  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 18083   003342  EC70  F022         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 18084   003346  0100               	movlb	0	; () banked
 18085   003348  6FFE               	movwf	_ret& (0+255),b
 18086   00334A                     
 18087                           ; BSR set to: 0
 18088                           ;main.c: 150:     ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1,2,6, "Stop Watch"
      +                          );
 18089   00334A  0E39               	movlw	low _LCD_1
 18090   00334C  6E12               	movwf	i2ECU_LCD_4Bit_Send_String_Data_Postition@_LCD^0,c
 18091   00334E  0E02               	movlw	2
 18092   003350  6E13               	movwf	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Row^0,c
 18093   003352  0E06               	movlw	6
 18094   003354  6E14               	movwf	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn^0,c
 18095   003356  0E21               	movlw	low STR_1
 18096   003358  6E15               	movwf	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str^0,c
 18097   00335A  5015               	movf	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str^0,w,c
 18098   00335C  A4D8               	btfss	status,2,c
 18099   00335E  0E10               	movlw	high __smallconst
 18100   003360  6E16               	movwf	(i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)^0,c
 18101   003362  EC3E  F01D         	call	i2_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
 18102   003366  0100               	movlb	0	; () banked
 18103   003368  6FFE               	movwf	_ret& (0+255),b
 18104   00336A                     
 18105                           ; BSR set to: 0
 18106                           ;main.c: 151:     ret = LCD_4Bits_Set_Curser (&LCD_1, 1,9);
 18107   00336A  0E39               	movlw	low _LCD_1
 18108   00336C  6E0E               	movwf	i2LCD_4Bits_Set_Curser@_LCD^0,c
 18109   00336E  0E01               	movlw	1
 18110   003370  6E0F               	movwf	i2LCD_4Bits_Set_Curser@row^0,c
 18111   003372  0E09               	movlw	9
 18112   003374  6E10               	movwf	i2LCD_4Bits_Set_Curser@coloumn^0,c
 18113   003376  EC88  F01D         	call	i2_LCD_4Bits_Set_Curser	;wreg free
 18114   00337A  0100               	movlb	0	; () banked
 18115   00337C  6FFE               	movwf	_ret& (0+255),b
 18116   00337E                     
 18117                           ; BSR set to: 0
 18118   00337E  0012               	return		;funcret
 18119   003380                     __end_ofi2_update_display:
 18120                           	callstack 0
 18121                           
 18122 ;; *************** function i2_ECU_LCD_4Bit_Send_String_Data_Postition *****************
 18123 ;; Defined at:
 18124 ;;		line 123 in file "ECU_layer/LCD/LCD.c"
 18125 ;; Parameters:    Size  Location     Type
 18126 ;;  _LCD            1   17[COMRAM] PTR const struct .
 18127 ;;		 -> LCD_1(6), 
 18128 ;;  _Row            1   18[COMRAM] unsigned char 
 18129 ;;  _Coloumn        1   19[COMRAM] unsigned char 
 18130 ;;  _Str            2   20[COMRAM] PTR unsigned char 
 18131 ;;		 -> REALTIMECLOCK_DS1307_Data(18), STR_3(9), STR_2(9), STR_1(11), 
 18132 ;; Auto vars:     Size  Location     Type
 18133 ;;  rt              1   22[COMRAM] unsigned char 
 18134 ;; Return value:  Size  Location     Type
 18135 ;;                  1    wreg      unsigned char 
 18136 ;; Registers used:
 18137 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18138 ;; Tracked objects:
 18139 ;;		On entry : 0/0
 18140 ;;		On exit  : 0/0
 18141 ;;		Unchanged: 0/0
 18142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18143 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18144 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18146 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18147 ;;Total ram usage:        6 bytes
 18148 ;; Hardware stack levels used: 1
 18149 ;; Hardware stack levels required when called: 4
 18150 ;; This function calls:
 18151 ;;		i2_ECU_LCD_4Bit_Send_char_Data
 18152 ;;		i2_LCD_4Bits_Set_Curser
 18153 ;; This function is called by:
 18154 ;;		i2_update_display
 18155 ;; This function uses a non-reentrant model
 18156 ;;
 18157                           
 18158                           	psect	text95
 18159   003A7C                     __ptext95:
 18160                           	callstack 0
 18161   003A7C                     i2_ECU_LCD_4Bit_Send_String_Data_Postition:
 18162                           	callstack 12
 18163   003A7C                     
 18164                           ;ECU_layer/LCD/LCD.c: 124:     STD_ReturnType rt = (STD_ReturnType)0x00;
 18165   003A7C  6A17               	clrf	i2ECU_LCD_4Bit_Send_String_Data_Postition@rt^0,c
 18166   003A7E                     
 18167                           ;ECU_layer/LCD/LCD.c: 125:      if(((void*)0) == _LCD){
 18168   003A7E  5012               	movf	i2ECU_LCD_4Bit_Send_String_Data_Postition@_LCD^0,w,c
 18169   003A80  A4D8               	btfss	status,2,c
 18170   003A82  EF45  F01D         	goto	i2u734_41
 18171   003A86  EF47  F01D         	goto	i2u734_40
 18172   003A8A                     i2u734_41:
 18173   003A8A  EF4A  F01D         	goto	i2l9149
 18174   003A8E                     i2u734_40:
 18175   003A8E                     
 18176                           ;ECU_layer/LCD/LCD.c: 126:         rt = (STD_ReturnType)0x00;
 18177   003A8E  6A17               	clrf	i2ECU_LCD_4Bit_Send_String_Data_Postition@rt^0,c
 18178                           
 18179                           ;ECU_layer/LCD/LCD.c: 127:     }
 18180   003A90  EF86  F01D         	goto	i2l9157
 18181   003A94                     i2l9149:
 18182                           
 18183                           ;ECU_layer/LCD/LCD.c: 129:         LCD_4Bits_Set_Curser(_LCD, _Row, _Coloumn);
 18184   003A94  C012  F00E         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_LCD,i2LCD_4Bits_Set_Curser@_LCD
 18185   003A98  C013  F00F         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Row,i2LCD_4Bits_Set_Curser@row
 18186   003A9C  C014  F010         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn,i2LCD_4Bits_Set_Curser@coloumn
 18187   003AA0  EC88  F01D         	call	i2_LCD_4Bits_Set_Curser	;wreg free
 18188                           
 18189                           ;ECU_layer/LCD/LCD.c: 130:         while(*_Str){
 18190   003AA4  EF6D  F01D         	goto	i2l9155
 18191   003AA8                     i2l9151:
 18192                           
 18193                           ;ECU_layer/LCD/LCD.c: 131:              rt = ECU_LCD_4Bit_Send_char_Data (_LCD, *_Str++)
      +                          ;
 18194   003AA8  C012  F00B         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_LCD,i2ECU_LCD_4Bit_Send_char_Data@_LCD
 18195   003AAC  C015  FFF6         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str,tblptrl
 18196   003AB0  C016  FFF7         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1,tblptrh
 18197   003AB4  0E00               	movlw	low (__smallconst shr (0+16))
 18198   003AB6  6EF8               	movwf	tblptru,c
 18199   003AB8  0E0F               	movlw	(high __ramtop+-1)
 18200   003ABA  64F7               	cpfsgt	tblptrh,c
 18201   003ABC  D003               	bra	i2u735_47
 18202   003ABE  0008               	tblrd		*
 18203   003AC0  50F5               	movf	tablat,w,c
 18204   003AC2  D005               	bra	i2u735_40
 18205   003AC4                     i2u735_47:
 18206   003AC4  CFF6 FFE9          	movff	tblptrl,fsr0l
 18207   003AC8  CFF7 FFEA          	movff	tblptrh,fsr0h
 18208   003ACC  50EF               	movf	indf0,w,c
 18209   003ACE                     i2u735_40:
 18210   003ACE  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 18211   003AD0  EC70  F022         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 18212   003AD4  6E17               	movwf	i2ECU_LCD_4Bit_Send_String_Data_Postition@rt^0,c
 18213   003AD6  4A15               	infsnz	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str^0,f,c
 18214   003AD8  2A16               	incf	(i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)^0,f,c
 18215   003ADA                     i2l9155:
 18216                           
 18217                           ;ECU_layer/LCD/LCD.c: 130:         while(*_Str){
 18218   003ADA  C015  FFF6         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str,tblptrl
 18219   003ADE  C016  FFF7         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1,tblptrh
 18220   003AE2  0E00               	movlw	low (__smallconst shr (0+16))
 18221   003AE4  6EF8               	movwf	tblptru,c
 18222   003AE6  0E0F               	movlw	(high __ramtop+-1)
 18223   003AE8  64F7               	cpfsgt	tblptrh,c
 18224   003AEA  D003               	bra	i2u736_47
 18225   003AEC  0008               	tblrd		*
 18226   003AEE  50F5               	movf	tablat,w,c
 18227   003AF0  D005               	bra	i2u736_40
 18228   003AF2                     i2u736_47:
 18229   003AF2  CFF6 FFE9          	movff	tblptrl,fsr0l
 18230   003AF6  CFF7 FFEA          	movff	tblptrh,fsr0h
 18231   003AFA  50EF               	movf	indf0,w,c
 18232   003AFC                     i2u736_40:
 18233   003AFC  0900               	iorlw	0
 18234   003AFE  A4D8               	btfss	status,2,c
 18235   003B00  EF84  F01D         	goto	i2u737_41
 18236   003B04  EF86  F01D         	goto	i2u737_40
 18237   003B08                     i2u737_41:
 18238   003B08  EF54  F01D         	goto	i2l9151
 18239   003B0C                     i2u737_40:
 18240   003B0C                     i2l9157:
 18241                           
 18242                           ;ECU_layer/LCD/LCD.c: 136:     return rt;
 18243   003B0C  5017               	movf	i2ECU_LCD_4Bit_Send_String_Data_Postition@rt^0,w,c
 18244   003B0E  0012               	return		;funcret
 18245   003B10                     __end_ofi2_ECU_LCD_4Bit_Send_String_Data_Postition:
 18246                           	callstack 0
 18247                           
 18248 ;; *************** function i2_LCD_4Bits_Set_Curser *****************
 18249 ;; Defined at:
 18250 ;;		line 383 in file "ECU_layer/LCD/LCD.c"
 18251 ;; Parameters:    Size  Location     Type
 18252 ;;  _LCD            1   13[COMRAM] PTR const struct .
 18253 ;;		 -> LCD_1(6), 
 18254 ;;  row             1   14[COMRAM] unsigned char 
 18255 ;;  coloumn         1   15[COMRAM] unsigned char 
 18256 ;; Auto vars:     Size  Location     Type
 18257 ;;  rt              1   16[COMRAM] unsigned char 
 18258 ;; Return value:  Size  Location     Type
 18259 ;;                  1    wreg      unsigned char 
 18260 ;; Registers used:
 18261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18262 ;; Tracked objects:
 18263 ;;		On entry : 0/0
 18264 ;;		On exit  : 0/0
 18265 ;;		Unchanged: 0/0
 18266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18267 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18268 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18270 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18271 ;;Total ram usage:        4 bytes
 18272 ;; Hardware stack levels used: 1
 18273 ;; Hardware stack levels required when called: 3
 18274 ;; This function calls:
 18275 ;;		i2_ECU_LCD_4Bit_Send_Command
 18276 ;; This function is called by:
 18277 ;;		i2_update_display
 18278 ;;		i2_ECU_LCD_4Bit_Send_String_Data_Postition
 18279 ;; This function uses a non-reentrant model
 18280 ;;
 18281                           
 18282                           	psect	text96
 18283   003B10                     __ptext96:
 18284                           	callstack 0
 18285   003B10                     i2_LCD_4Bits_Set_Curser:
 18286                           	callstack 13
 18287   003B10                     
 18288                           ;ECU_layer/LCD/LCD.c: 384:      STD_ReturnType rt = (STD_ReturnType)0x00;
 18289   003B10  6A11               	clrf	i2LCD_4Bits_Set_Curser@rt^0,c
 18290   003B12                     
 18291                           ;ECU_layer/LCD/LCD.c: 385:      coloumn-- ;
 18292   003B12  0610               	decf	i2LCD_4Bits_Set_Curser@coloumn^0,f,c
 18293   003B14                     
 18294                           ;ECU_layer/LCD/LCD.c: 386:      if(((void*)0) == _LCD ){
 18295   003B14  500E               	movf	i2LCD_4Bits_Set_Curser@_LCD^0,w,c
 18296   003B16  A4D8               	btfss	status,2,c
 18297   003B18  EF90  F01D         	goto	i2u648_41
 18298   003B1C  EF92  F01D         	goto	i2u648_40
 18299   003B20                     i2u648_41:
 18300   003B20  EFBD  F01D         	goto	i2l8659
 18301   003B24                     i2u648_40:
 18302   003B24                     
 18303                           ;ECU_layer/LCD/LCD.c: 387:         rt = (STD_ReturnType)0x00;
 18304   003B24  6A11               	clrf	i2LCD_4Bits_Set_Curser@rt^0,c
 18305                           
 18306                           ;ECU_layer/LCD/LCD.c: 388:     }
 18307   003B26  EFD0  F01D         	goto	i2l8661
 18308   003B2A                     i2l8649:
 18309                           
 18310                           ;ECU_layer/LCD/LCD.c: 392:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0x80 
      +                          + coloumn ));break;
 18311   003B2A  C00E  F00B         	movff	i2LCD_4Bits_Set_Curser@_LCD,i2ECU_LCD_4Bit_Send_Command@_LCD
 18312   003B2E  5010               	movf	i2LCD_4Bits_Set_Curser@coloumn^0,w,c
 18313   003B30  0F80               	addlw	128
 18314   003B32  6E0C               	movwf	i2ECU_LCD_4Bit_Send_Command@_Command^0,c
 18315   003B34  EC42  F022         	call	i2_ECU_LCD_4Bit_Send_Command	;wreg free
 18316   003B38  6E11               	movwf	i2LCD_4Bits_Set_Curser@rt^0,c
 18317   003B3A  EFD0  F01D         	goto	i2l8661
 18318   003B3E                     i2l8651:
 18319                           
 18320                           ;ECU_layer/LCD/LCD.c: 394:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0xc0 
      +                          + coloumn ));break;
 18321   003B3E  C00E  F00B         	movff	i2LCD_4Bits_Set_Curser@_LCD,i2ECU_LCD_4Bit_Send_Command@_LCD
 18322   003B42  5010               	movf	i2LCD_4Bits_Set_Curser@coloumn^0,w,c
 18323   003B44  0FC0               	addlw	192
 18324   003B46  6E0C               	movwf	i2ECU_LCD_4Bit_Send_Command@_Command^0,c
 18325   003B48  EC42  F022         	call	i2_ECU_LCD_4Bit_Send_Command	;wreg free
 18326   003B4C  6E11               	movwf	i2LCD_4Bits_Set_Curser@rt^0,c
 18327   003B4E  EFD0  F01D         	goto	i2l8661
 18328   003B52                     i2l8653:
 18329                           
 18330                           ;ECU_layer/LCD/LCD.c: 396:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0x94 
      +                          + coloumn ));break;
 18331   003B52  C00E  F00B         	movff	i2LCD_4Bits_Set_Curser@_LCD,i2ECU_LCD_4Bit_Send_Command@_LCD
 18332   003B56  5010               	movf	i2LCD_4Bits_Set_Curser@coloumn^0,w,c
 18333   003B58  0F94               	addlw	148
 18334   003B5A  6E0C               	movwf	i2ECU_LCD_4Bit_Send_Command@_Command^0,c
 18335   003B5C  EC42  F022         	call	i2_ECU_LCD_4Bit_Send_Command	;wreg free
 18336   003B60  6E11               	movwf	i2LCD_4Bits_Set_Curser@rt^0,c
 18337   003B62  EFD0  F01D         	goto	i2l8661
 18338   003B66                     i2l8655:
 18339                           
 18340                           ;ECU_layer/LCD/LCD.c: 398:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0xd4 
      +                          + coloumn ));break;
 18341   003B66  C00E  F00B         	movff	i2LCD_4Bits_Set_Curser@_LCD,i2ECU_LCD_4Bit_Send_Command@_LCD
 18342   003B6A  5010               	movf	i2LCD_4Bits_Set_Curser@coloumn^0,w,c
 18343   003B6C  0FD4               	addlw	212
 18344   003B6E  6E0C               	movwf	i2ECU_LCD_4Bit_Send_Command@_Command^0,c
 18345   003B70  EC42  F022         	call	i2_ECU_LCD_4Bit_Send_Command	;wreg free
 18346   003B74  6E11               	movwf	i2LCD_4Bits_Set_Curser@rt^0,c
 18347   003B76  EFD0  F01D         	goto	i2l8661
 18348   003B7A                     i2l8659:
 18349   003B7A  500F               	movf	i2LCD_4Bits_Set_Curser@row^0,w,c
 18350                           
 18351                           ; Switch size 1, requested type "simple"
 18352                           ; Number of cases is 4, Range of values is 1 to 4
 18353                           ; switch strategies available:
 18354                           ; Name         Instructions Cycles
 18355                           ; simple_byte           13     7 (average)
 18356                           ;	Chosen strategy is simple_byte
 18357   003B7C  0A01               	xorlw	1	; case 1
 18358   003B7E  B4D8               	btfsc	status,2,c
 18359   003B80  EF95  F01D         	goto	i2l8649
 18360   003B84  0A03               	xorlw	3	; case 2
 18361   003B86  B4D8               	btfsc	status,2,c
 18362   003B88  EF9F  F01D         	goto	i2l8651
 18363   003B8C  0A01               	xorlw	1	; case 3
 18364   003B8E  B4D8               	btfsc	status,2,c
 18365   003B90  EFA9  F01D         	goto	i2l8653
 18366   003B94  0A07               	xorlw	7	; case 4
 18367   003B96  B4D8               	btfsc	status,2,c
 18368   003B98  EFB3  F01D         	goto	i2l8655
 18369   003B9C  EFD0  F01D         	goto	i2l8661
 18370   003BA0                     i2l8661:
 18371                           
 18372                           ;ECU_layer/LCD/LCD.c: 401:      return rt;
 18373   003BA0  5011               	movf	i2LCD_4Bits_Set_Curser@rt^0,w,c
 18374   003BA2  0012               	return		;funcret
 18375   003BA4                     __end_ofi2_LCD_4Bits_Set_Curser:
 18376                           	callstack 0
 18377                           
 18378 ;; *************** function i2_ECU_LCD_4Bit_Send_Command *****************
 18379 ;; Defined at:
 18380 ;;		line 50 in file "ECU_layer/LCD/LCD.c"
 18381 ;; Parameters:    Size  Location     Type
 18382 ;;  _LCD            1   10[COMRAM] PTR const struct .
 18383 ;;		 -> LCD_1(6), 
 18384 ;;  _Command        1   11[COMRAM] unsigned char 
 18385 ;; Auto vars:     Size  Location     Type
 18386 ;;  rt              1   12[COMRAM] unsigned char 
 18387 ;; Return value:  Size  Location     Type
 18388 ;;                  1    wreg      unsigned char 
 18389 ;; Registers used:
 18390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18391 ;; Tracked objects:
 18392 ;;		On entry : 0/0
 18393 ;;		On exit  : 0/0
 18394 ;;		Unchanged: 0/0
 18395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18396 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18397 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18399 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18400 ;;Total ram usage:        3 bytes
 18401 ;; Hardware stack levels used: 1
 18402 ;; Hardware stack levels required when called: 2
 18403 ;; This function calls:
 18404 ;;		i2_LCD_4Bits_Send_Enable_Signal
 18405 ;;		i2_LCD_Send_4Bits
 18406 ;;		i2_gpio_pin_write_logic
 18407 ;; This function is called by:
 18408 ;;		i2_update_display
 18409 ;;		i2_LCD_4Bits_Set_Curser
 18410 ;; This function uses a non-reentrant model
 18411 ;;
 18412                           
 18413                           	psect	text97
 18414   004484                     __ptext97:
 18415                           	callstack 0
 18416   004484                     i2_ECU_LCD_4Bit_Send_Command:
 18417                           	callstack 13
 18418   004484                     
 18419                           ;ECU_layer/LCD/LCD.c: 52:     if(((void*)0) == _LCD){
 18420   004484  500B               	movf	i2ECU_LCD_4Bit_Send_Command@_LCD^0,w,c
 18421   004486  A4D8               	btfss	status,2,c
 18422   004488  EF48  F022         	goto	i2u630_41
 18423   00448C  EF4A  F022         	goto	i2u630_40
 18424   004490                     i2u630_41:
 18425   004490  EF4D  F022         	goto	i2l8549
 18426   004494                     i2u630_40:
 18427   004494                     
 18428                           ;ECU_layer/LCD/LCD.c: 53:        rt = (STD_ReturnType)0x00;
 18429   004494  6A0D               	clrf	i2ECU_LCD_4Bit_Send_Command@rt^0,c
 18430                           
 18431                           ;ECU_layer/LCD/LCD.c: 54:     }
 18432   004496  EF6E  F022         	goto	i2l8551
 18433   00449A                     i2l8549:
 18434                           
 18435                           ;ECU_layer/LCD/LCD.c: 57:         rt = gpio_pin_write_logic(&(_LCD->LCD_RS), GPIO_Pin_Lo
      +                          gic_LOW);
 18436   00449A  C00B  F001         	movff	i2ECU_LCD_4Bit_Send_Command@_LCD,i2gpio_pin_write_logic@pinConfig
 18437   00449E  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 18438   0044A0  0E00               	movlw	0
 18439   0044A2  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 18440   0044A4  ECCD  F013         	call	i2_gpio_pin_write_logic	;wreg free
 18441   0044A8  6E0D               	movwf	i2ECU_LCD_4Bit_Send_Command@rt^0,c
 18442                           
 18443                           ;ECU_layer/LCD/LCD.c: 59:         rt = LCD_Send_4Bits(_LCD, _Command >> 4);
 18444   0044AA  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_Command@_LCD,i2LCD_Send_4Bits@_LCD
 18445   0044AE  380C               	swapf	i2ECU_LCD_4Bit_Send_Command@_Command^0,w,c
 18446   0044B0  0B0F               	andlw	15
 18447   0044B2  6E08               	movwf	i2LCD_Send_4Bits@_Data^0,c
 18448   0044B4  EC1A  F01E         	call	i2_LCD_Send_4Bits	;wreg free
 18449   0044B8  6E0D               	movwf	i2ECU_LCD_4Bit_Send_Command@rt^0,c
 18450                           
 18451                           ;ECU_layer/LCD/LCD.c: 61:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 18452   0044BA  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_Command@_LCD,i2LCD_4Bits_Send_Enable_Signal@_LCD
 18453   0044BE  ECC9  F022         	call	i2_LCD_4Bits_Send_Enable_Signal	;wreg free
 18454   0044C2  6E0D               	movwf	i2ECU_LCD_4Bit_Send_Command@rt^0,c
 18455                           
 18456                           ;ECU_layer/LCD/LCD.c: 63:         rt = LCD_Send_4Bits(_LCD, _Command);
 18457   0044C4  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_Command@_LCD,i2LCD_Send_4Bits@_LCD
 18458   0044C8  C00C  F008         	movff	i2ECU_LCD_4Bit_Send_Command@_Command,i2LCD_Send_4Bits@_Data
 18459   0044CC  EC1A  F01E         	call	i2_LCD_Send_4Bits	;wreg free
 18460   0044D0  6E0D               	movwf	i2ECU_LCD_4Bit_Send_Command@rt^0,c
 18461                           
 18462                           ;ECU_layer/LCD/LCD.c: 65:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 18463   0044D2  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_Command@_LCD,i2LCD_4Bits_Send_Enable_Signal@_LCD
 18464   0044D6  ECC9  F022         	call	i2_LCD_4Bits_Send_Enable_Signal	;wreg free
 18465   0044DA  6E0D               	movwf	i2ECU_LCD_4Bit_Send_Command@rt^0,c
 18466   0044DC                     i2l8551:
 18467                           
 18468                           ;ECU_layer/LCD/LCD.c: 68:     return rt;
 18469   0044DC  500D               	movf	i2ECU_LCD_4Bit_Send_Command@rt^0,w,c
 18470   0044DE  0012               	return		;funcret
 18471   0044E0                     __end_ofi2_ECU_LCD_4Bit_Send_Command:
 18472                           	callstack 0
 18473                           
 18474 ;; *************** function i2_ECU_LCD_4Bit_Send_char_Data *****************
 18475 ;; Defined at:
 18476 ;;		line 72 in file "ECU_layer/LCD/LCD.c"
 18477 ;; Parameters:    Size  Location     Type
 18478 ;;  _LCD            1   10[COMRAM] PTR const struct .
 18479 ;;		 -> LCD_1(6), 
 18480 ;;  _Data           1   11[COMRAM] unsigned char 
 18481 ;; Auto vars:     Size  Location     Type
 18482 ;;  rt              1   12[COMRAM] unsigned char 
 18483 ;; Return value:  Size  Location     Type
 18484 ;;                  1    wreg      unsigned char 
 18485 ;; Registers used:
 18486 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18487 ;; Tracked objects:
 18488 ;;		On entry : 0/0
 18489 ;;		On exit  : 0/0
 18490 ;;		Unchanged: 0/0
 18491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18492 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18493 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18494 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18495 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18496 ;;Total ram usage:        3 bytes
 18497 ;; Hardware stack levels used: 1
 18498 ;; Hardware stack levels required when called: 2
 18499 ;; This function calls:
 18500 ;;		i2_LCD_4Bits_Send_Enable_Signal
 18501 ;;		i2_LCD_Send_4Bits
 18502 ;;		i2_gpio_pin_write_logic
 18503 ;; This function is called by:
 18504 ;;		i2_update_display
 18505 ;;		i2_ECU_LCD_4Bit_Send_String_Data_Postition
 18506 ;; This function uses a non-reentrant model
 18507 ;;
 18508                           
 18509                           	psect	text98
 18510   0044E0                     __ptext98:
 18511                           	callstack 0
 18512   0044E0                     i2_ECU_LCD_4Bit_Send_char_Data:
 18513                           	callstack 14
 18514   0044E0                     
 18515                           ;ECU_layer/LCD/LCD.c: 74:     if(((void*)0) == _LCD){
 18516   0044E0  500B               	movf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,w,c
 18517   0044E2  A4D8               	btfss	status,2,c
 18518   0044E4  EF76  F022         	goto	i2u647_41
 18519   0044E8  EF78  F022         	goto	i2u647_40
 18520   0044EC                     i2u647_41:
 18521   0044EC  EF7B  F022         	goto	i2l8635
 18522   0044F0                     i2u647_40:
 18523   0044F0                     
 18524                           ;ECU_layer/LCD/LCD.c: 75:         rt = (STD_ReturnType)0x00;
 18525   0044F0  6A0D               	clrf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,c
 18526                           
 18527                           ;ECU_layer/LCD/LCD.c: 76:     }
 18528   0044F2  EF9C  F022         	goto	i2l8637
 18529   0044F6                     i2l8635:
 18530                           
 18531                           ;ECU_layer/LCD/LCD.c: 78:         rt = gpio_pin_write_logic(&(_LCD->LCD_RS), GPIO_Pin_Lo
      +                          gic_HIGH);
 18532   0044F6  C00B  F001         	movff	i2ECU_LCD_4Bit_Send_char_Data@_LCD,i2gpio_pin_write_logic@pinConfig
 18533   0044FA  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 18534   0044FC  0E01               	movlw	1
 18535   0044FE  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 18536   004500  ECCD  F013         	call	i2_gpio_pin_write_logic	;wreg free
 18537   004504  6E0D               	movwf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,c
 18538                           
 18539                           ;ECU_layer/LCD/LCD.c: 80:         rt = LCD_Send_4Bits(_LCD, _Data >> 4);
 18540   004506  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_char_Data@_LCD,i2LCD_Send_4Bits@_LCD
 18541   00450A  380C               	swapf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,w,c
 18542   00450C  0B0F               	andlw	15
 18543   00450E  6E08               	movwf	i2LCD_Send_4Bits@_Data^0,c
 18544   004510  EC1A  F01E         	call	i2_LCD_Send_4Bits	;wreg free
 18545   004514  6E0D               	movwf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,c
 18546                           
 18547                           ;ECU_layer/LCD/LCD.c: 82:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 18548   004516  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_char_Data@_LCD,i2LCD_4Bits_Send_Enable_Signal@_LCD
 18549   00451A  ECC9  F022         	call	i2_LCD_4Bits_Send_Enable_Signal	;wreg free
 18550   00451E  6E0D               	movwf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,c
 18551                           
 18552                           ;ECU_layer/LCD/LCD.c: 84:         rt = LCD_Send_4Bits(_LCD, _Data);
 18553   004520  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_char_Data@_LCD,i2LCD_Send_4Bits@_LCD
 18554   004524  C00C  F008         	movff	i2ECU_LCD_4Bit_Send_char_Data@_Data,i2LCD_Send_4Bits@_Data
 18555   004528  EC1A  F01E         	call	i2_LCD_Send_4Bits	;wreg free
 18556   00452C  6E0D               	movwf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,c
 18557                           
 18558                           ;ECU_layer/LCD/LCD.c: 86:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 18559   00452E  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_char_Data@_LCD,i2LCD_4Bits_Send_Enable_Signal@_LCD
 18560   004532  ECC9  F022         	call	i2_LCD_4Bits_Send_Enable_Signal	;wreg free
 18561   004536  6E0D               	movwf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,c
 18562   004538                     i2l8637:
 18563                           
 18564                           ;ECU_layer/LCD/LCD.c: 89:     return rt;
 18565   004538  500D               	movf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,w,c
 18566   00453A  0012               	return		;funcret
 18567   00453C                     __end_ofi2_ECU_LCD_4Bit_Send_char_Data:
 18568                           	callstack 0
 18569                           
 18570 ;; *************** function i2_LCD_Send_4Bits *****************
 18571 ;; Defined at:
 18572 ;;		line 341 in file "ECU_layer/LCD/LCD.c"
 18573 ;; Parameters:    Size  Location     Type
 18574 ;;  _LCD            1    6[COMRAM] PTR const struct .
 18575 ;;		 -> LCD_1(6), 
 18576 ;;  _Data           1    7[COMRAM] unsigned char 
 18577 ;; Auto vars:     Size  Location     Type
 18578 ;;  rt              1    9[COMRAM] unsigned char 
 18579 ;; Return value:  Size  Location     Type
 18580 ;;                  1    wreg      unsigned char 
 18581 ;; Registers used:
 18582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18583 ;; Tracked objects:
 18584 ;;		On entry : 0/0
 18585 ;;		On exit  : 0/0
 18586 ;;		Unchanged: 0/0
 18587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18589 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18590 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18591 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18592 ;;Total ram usage:        4 bytes
 18593 ;; Hardware stack levels used: 1
 18594 ;; Hardware stack levels required when called: 1
 18595 ;; This function calls:
 18596 ;;		i2_gpio_pin_write_logic
 18597 ;; This function is called by:
 18598 ;;		i2_ECU_LCD_4Bit_Send_Command
 18599 ;;		i2_ECU_LCD_4Bit_Send_char_Data
 18600 ;; This function uses a non-reentrant model
 18601 ;;
 18602                           
 18603                           	psect	text99
 18604   003C34                     __ptext99:
 18605                           	callstack 0
 18606   003C34                     i2_LCD_Send_4Bits:
 18607                           	callstack 13
 18608   003C34                     
 18609                           ;ECU_layer/LCD/LCD.c: 343:      if(((void*)0) == _LCD ){
 18610   003C34  5007               	movf	i2LCD_Send_4Bits@_LCD^0,w,c
 18611   003C36  A4D8               	btfss	status,2,c
 18612   003C38  EF20  F01E         	goto	i2u612_41
 18613   003C3C  EF22  F01E         	goto	i2u612_40
 18614   003C40                     i2u612_41:
 18615   003C40  EF25  F01E         	goto	i2l8469
 18616   003C44                     i2u612_40:
 18617   003C44                     
 18618                           ;ECU_layer/LCD/LCD.c: 344:         rt = (STD_ReturnType)0x00;
 18619   003C44  6A0A               	clrf	i2LCD_Send_4Bits@rt^0,c
 18620                           
 18621                           ;ECU_layer/LCD/LCD.c: 345:     }
 18622   003C46  EF5E  F01E         	goto	i2l8471
 18623   003C4A                     i2l8469:
 18624                           
 18625                           ;ECU_layer/LCD/LCD.c: 347:         rt = gpio_pin_write_logic(&(_LCD->DataPins[0]), (_Dat
      +                          a >> 0) & (uint8)0x01);
 18626   003C4A  C007  F009         	movff	i2LCD_Send_4Bits@_LCD,??i2_LCD_Send_4Bits
 18627   003C4E  0E02               	movlw	2
 18628   003C50  2609               	addwf	??i2_LCD_Send_4Bits^0,f,c
 18629   003C52  C009  F001         	movff	??i2_LCD_Send_4Bits,i2gpio_pin_write_logic@pinConfig
 18630   003C56  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 18631   003C58  5008               	movf	i2LCD_Send_4Bits@_Data^0,w,c
 18632   003C5A  0B01               	andlw	1
 18633   003C5C  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 18634   003C5E  ECCD  F013         	call	i2_gpio_pin_write_logic	;wreg free
 18635   003C62  6E0A               	movwf	i2LCD_Send_4Bits@rt^0,c
 18636                           
 18637                           ;ECU_layer/LCD/LCD.c: 348:         rt = gpio_pin_write_logic(&(_LCD->DataPins[1]), (_Dat
      +                          a >> 1) & (uint8)0x01);
 18638   003C64  C007  F009         	movff	i2LCD_Send_4Bits@_LCD,??i2_LCD_Send_4Bits
 18639   003C68  0E03               	movlw	3
 18640   003C6A  2609               	addwf	??i2_LCD_Send_4Bits^0,f,c
 18641   003C6C  C009  F001         	movff	??i2_LCD_Send_4Bits,i2gpio_pin_write_logic@pinConfig
 18642   003C70  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 18643   003C72  90D8               	bcf	status,0,c
 18644   003C74  3008               	rrcf	i2LCD_Send_4Bits@_Data^0,w,c
 18645   003C76  0B01               	andlw	1
 18646   003C78  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 18647   003C7A  ECCD  F013         	call	i2_gpio_pin_write_logic	;wreg free
 18648   003C7E  6E0A               	movwf	i2LCD_Send_4Bits@rt^0,c
 18649                           
 18650                           ;ECU_layer/LCD/LCD.c: 349:         rt = gpio_pin_write_logic(&(_LCD->DataPins[2]), (_Dat
      +                          a >> 2) & (uint8)0x01);
 18651   003C80  C007  F009         	movff	i2LCD_Send_4Bits@_LCD,??i2_LCD_Send_4Bits
 18652   003C84  0E04               	movlw	4
 18653   003C86  2609               	addwf	??i2_LCD_Send_4Bits^0,f,c
 18654   003C88  C009  F001         	movff	??i2_LCD_Send_4Bits,i2gpio_pin_write_logic@pinConfig
 18655   003C8C  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 18656   003C8E  4008               	rrncf	i2LCD_Send_4Bits@_Data^0,w,c
 18657   003C90  42E8               	rrncf	wreg,f,c
 18658   003C92  0B3F               	andlw	63
 18659   003C94  0B01               	andlw	1
 18660   003C96  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 18661   003C98  ECCD  F013         	call	i2_gpio_pin_write_logic	;wreg free
 18662   003C9C  6E0A               	movwf	i2LCD_Send_4Bits@rt^0,c
 18663                           
 18664                           ;ECU_layer/LCD/LCD.c: 350:         rt = gpio_pin_write_logic(&(_LCD->DataPins[3]), (_Dat
      +                          a >> 3) & (uint8)0x01);
 18665   003C9E  C007  F009         	movff	i2LCD_Send_4Bits@_LCD,??i2_LCD_Send_4Bits
 18666   003CA2  0E05               	movlw	5
 18667   003CA4  2609               	addwf	??i2_LCD_Send_4Bits^0,f,c
 18668   003CA6  C009  F001         	movff	??i2_LCD_Send_4Bits,i2gpio_pin_write_logic@pinConfig
 18669   003CAA  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 18670   003CAC  3808               	swapf	i2LCD_Send_4Bits@_Data^0,w,c
 18671   003CAE  46E8               	rlncf	wreg,f,c
 18672   003CB0  0B1F               	andlw	31
 18673   003CB2  0B01               	andlw	1
 18674   003CB4  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 18675   003CB6  ECCD  F013         	call	i2_gpio_pin_write_logic	;wreg free
 18676   003CBA  6E0A               	movwf	i2LCD_Send_4Bits@rt^0,c
 18677   003CBC                     i2l8471:
 18678                           
 18679                           ;ECU_layer/LCD/LCD.c: 352:      return rt;
 18680   003CBC  500A               	movf	i2LCD_Send_4Bits@rt^0,w,c
 18681   003CBE  0012               	return		;funcret
 18682   003CC0                     __end_ofi2_LCD_Send_4Bits:
 18683                           	callstack 0
 18684                           
 18685 ;; *************** function i2_LCD_4Bits_Send_Enable_Signal *****************
 18686 ;; Defined at:
 18687 ;;		line 356 in file "ECU_layer/LCD/LCD.c"
 18688 ;; Parameters:    Size  Location     Type
 18689 ;;  _LCD            1    6[COMRAM] PTR const struct .
 18690 ;;		 -> LCD_1(6), 
 18691 ;; Auto vars:     Size  Location     Type
 18692 ;;  rt              1    8[COMRAM] unsigned char 
 18693 ;; Return value:  Size  Location     Type
 18694 ;;                  1    wreg      unsigned char 
 18695 ;; Registers used:
 18696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18697 ;; Tracked objects:
 18698 ;;		On entry : 0/0
 18699 ;;		On exit  : 0/0
 18700 ;;		Unchanged: 0/0
 18701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18702 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18704 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18705 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18706 ;;Total ram usage:        3 bytes
 18707 ;; Hardware stack levels used: 1
 18708 ;; Hardware stack levels required when called: 1
 18709 ;; This function calls:
 18710 ;;		i2_gpio_pin_write_logic
 18711 ;; This function is called by:
 18712 ;;		i2_ECU_LCD_4Bit_Send_Command
 18713 ;;		i2_ECU_LCD_4Bit_Send_char_Data
 18714 ;; This function uses a non-reentrant model
 18715 ;;
 18716                           
 18717                           	psect	text100
 18718   004592                     __ptext100:
 18719                           	callstack 0
 18720   004592                     i2_LCD_4Bits_Send_Enable_Signal:
 18721                           	callstack 13
 18722   004592                     
 18723                           ;ECU_layer/LCD/LCD.c: 358:      if(((void*)0) == _LCD ){
 18724   004592  5007               	movf	i2LCD_4Bits_Send_Enable_Signal@_LCD^0,w,c
 18725   004594  A4D8               	btfss	status,2,c
 18726   004596  EFCF  F022         	goto	i2u613_41
 18727   00459A  EFD1  F022         	goto	i2u613_40
 18728   00459E                     i2u613_41:
 18729   00459E  EFD4  F022         	goto	i2l8481
 18730   0045A2                     i2u613_40:
 18731   0045A2                     
 18732                           ;ECU_layer/LCD/LCD.c: 359:         rt = (STD_ReturnType)0x00;
 18733   0045A2  6A09               	clrf	i2LCD_4Bits_Send_Enable_Signal@rt^0,c
 18734                           
 18735                           ;ECU_layer/LCD/LCD.c: 360:     }
 18736   0045A4  EFEF  F022         	goto	i2l8487
 18737   0045A8                     i2l8481:
 18738   0045A8  C007  F008         	movff	i2LCD_4Bits_Send_Enable_Signal@_LCD,??i2_LCD_4Bits_Send_Enable_Signal
 18739   0045AC  0E01               	movlw	1
 18740   0045AE  2608               	addwf	??i2_LCD_4Bits_Send_Enable_Signal^0,f,c
 18741   0045B0  C008  F001         	movff	??i2_LCD_4Bits_Send_Enable_Signal,i2gpio_pin_write_logic@pinConfig
 18742   0045B4  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 18743   0045B6  0E01               	movlw	1
 18744   0045B8  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 18745   0045BA  ECCD  F013         	call	i2_gpio_pin_write_logic	;wreg free
 18746   0045BE                     
 18747                           ;ECU_layer/LCD/LCD.c: 363:         _delay((unsigned long)((5)*(8000000UL/4000000.0)));
 18748   0045BE  0E03               	movlw	3
 18749   0045C0                     i2u1398_47:
 18750   0045C0  2EE8               	decfsz	wreg,f,c
 18751   0045C2  D7FE               	bra	i2u1398_47
 18752   0045C4  0000               	nop	
 18753   0045C6                     
 18754                           ;ECU_layer/LCD/LCD.c: 364:         rt = gpio_pin_write_logic(&(_LCD->LCD_E), GPIO_Pin_Lo
      +                          gic_LOW);;
 18755   0045C6  C007  F008         	movff	i2LCD_4Bits_Send_Enable_Signal@_LCD,??i2_LCD_4Bits_Send_Enable_Signal
 18756   0045CA  0E01               	movlw	1
 18757   0045CC  2608               	addwf	??i2_LCD_4Bits_Send_Enable_Signal^0,f,c
 18758   0045CE  C008  F001         	movff	??i2_LCD_4Bits_Send_Enable_Signal,i2gpio_pin_write_logic@pinConfig
 18759   0045D2  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 18760   0045D4  0E00               	movlw	0
 18761   0045D6  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 18762   0045D8  ECCD  F013         	call	i2_gpio_pin_write_logic	;wreg free
 18763   0045DC  6E09               	movwf	i2LCD_4Bits_Send_Enable_Signal@rt^0,c
 18764   0045DE                     i2l8487:
 18765                           
 18766                           ;ECU_layer/LCD/LCD.c: 366:      return rt;
 18767   0045DE  5009               	movf	i2LCD_4Bits_Send_Enable_Signal@rt^0,w,c
 18768   0045E0  0012               	return		;funcret
 18769   0045E2                     __end_ofi2_LCD_4Bits_Send_Enable_Signal:
 18770                           	callstack 0
 18771                           
 18772 ;; *************** function i2_gpio_pin_write_logic *****************
 18773 ;; Defined at:
 18774 ;;		line 93 in file "MCAL_layer/GPIO/hal_gpio.c"
 18775 ;; Parameters:    Size  Location     Type
 18776 ;;  pinConfig       2    0[COMRAM] PTR const struct .
 18777 ;;		 -> ECU_Relay_turnOFF@relay_t(1), ECU_Relay_turnON@relay_t(1), ECU_Relay_Initialize@relay_t(1), LED_turnOFF@LED(1), 
 18778 ;;		 -> LED_turnON@LED(1), pinRC7(1), pinRC6(1), keypad_1(8), 
 18779 ;;		 -> LCD_1$DataPins(4), LCD_1(6), 
 18780 ;;  logic           1    2[COMRAM] enum E3381
 18781 ;; Auto vars:     Size  Location     Type
 18782 ;;  rt              1    5[COMRAM] unsigned char 
 18783 ;; Return value:  Size  Location     Type
 18784 ;;                  1    wreg      unsigned char 
 18785 ;; Registers used:
 18786 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18787 ;; Tracked objects:
 18788 ;;		On entry : 0/0
 18789 ;;		On exit  : 0/0
 18790 ;;		Unchanged: 0/0
 18791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18792 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18794 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18795 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18796 ;;Total ram usage:        6 bytes
 18797 ;; Hardware stack levels used: 1
 18798 ;; This function calls:
 18799 ;;		Nothing
 18800 ;; This function is called by:
 18801 ;;		i2_ECU_LCD_4Bit_Send_Command
 18802 ;;		i2_ECU_LCD_4Bit_Send_char_Data
 18803 ;;		i2_LCD_Send_4Bits
 18804 ;;		i2_LCD_4Bits_Send_Enable_Signal
 18805 ;; This function uses a non-reentrant model
 18806 ;;
 18807                           
 18808                           	psect	text101
 18809   00279A                     __ptext101:
 18810                           	callstack 0
 18811   00279A                     i2_gpio_pin_write_logic:
 18812                           	callstack 14
 18813   00279A                     
 18814                           ;MCAL_layer/GPIO/hal_gpio.c: 94:     STD_ReturnType rt = (STD_ReturnType)0x01;
 18815   00279A  0E01               	movlw	1
 18816   00279C  6E06               	movwf	i2gpio_pin_write_logic@rt^0,c
 18817   00279E                     
 18818                           ;MCAL_layer/GPIO/hal_gpio.c: 95:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 -
      +                          1 ){
 18819   00279E  5001               	movf	i2gpio_pin_write_logic@pinConfig^0,w,c
 18820   0027A0  1002               	iorwf	(i2gpio_pin_write_logic@pinConfig+1)^0,w,c
 18821   0027A2  B4D8               	btfsc	status,2,c
 18822   0027A4  EFD6  F013         	goto	i2u593_41
 18823   0027A8  EFD8  F013         	goto	i2u593_40
 18824   0027AC                     i2u593_41:
 18825   0027AC  EFE9  F013         	goto	i2l979
 18826   0027B0                     i2u593_40:
 18827   0027B0  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 18828   0027B4  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 18829   0027B8  30DF               	rrcf	223,w,c
 18830   0027BA  32E8               	rrcf	wreg,f,c
 18831   0027BC  32E8               	rrcf	wreg,f,c
 18832   0027BE  0B07               	andlw	7
 18833   0027C0  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 18834   0027C2  0E07               	movlw	7
 18835   0027C4  6404               	cpfsgt	??i2_gpio_pin_write_logic^0,c
 18836   0027C6  EFE7  F013         	goto	i2u594_41
 18837   0027CA  EFE9  F013         	goto	i2u594_40
 18838   0027CE                     i2u594_41:
 18839   0027CE  EF0F  F015         	goto	i2l8301
 18840   0027D2                     i2u594_40:
 18841   0027D2                     i2l979:
 18842                           
 18843                           ;MCAL_layer/GPIO/hal_gpio.c: 96:         rt = (STD_ReturnType)0x00;
 18844   0027D2  6A06               	clrf	i2gpio_pin_write_logic@rt^0,c
 18845                           
 18846                           ;MCAL_layer/GPIO/hal_gpio.c: 97:     }
 18847   0027D4  EF24  F015         	goto	i2l8303
 18848   0027D8                     i2l8277:
 18849                           
 18850                           ;MCAL_layer/GPIO/hal_gpio.c: 103:                         LATA &= ~(1 << pinConfig ->pin
      +                          );break;
 18851   0027D8  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 18852   0027DC  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 18853   0027E0  30DF               	rrcf	223,w,c
 18854   0027E2  32E8               	rrcf	wreg,f,c
 18855   0027E4  32E8               	rrcf	wreg,f,c
 18856   0027E6  0B07               	andlw	7
 18857   0027E8  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 18858   0027EA  0E01               	movlw	1
 18859   0027EC  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 18860   0027EE  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 18861   0027F0  EFFC  F013         	goto	i2u595_44
 18862   0027F4                     i2u595_45:
 18863   0027F4  90D8               	bcf	status,0,c
 18864   0027F6  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 18865   0027F8                     i2u595_44:
 18866   0027F8  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 18867   0027FA  EFFA  F013         	goto	i2u595_45
 18868   0027FE  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 18869   002800  0AFF               	xorlw	255
 18870   002802  1689               	andwf	137,f,c	;volatile
 18871   002804  EF24  F015         	goto	i2l8303
 18872   002808                     i2l8279:
 18873                           
 18874                           ;MCAL_layer/GPIO/hal_gpio.c: 105:                         LATB &= ~(1 << pinConfig ->pin
      +                          );break;
 18875   002808  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 18876   00280C  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 18877   002810  30DF               	rrcf	223,w,c
 18878   002812  32E8               	rrcf	wreg,f,c
 18879   002814  32E8               	rrcf	wreg,f,c
 18880   002816  0B07               	andlw	7
 18881   002818  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 18882   00281A  0E01               	movlw	1
 18883   00281C  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 18884   00281E  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 18885   002820  EF14  F014         	goto	i2u596_44
 18886   002824                     i2u596_45:
 18887   002824  90D8               	bcf	status,0,c
 18888   002826  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 18889   002828                     i2u596_44:
 18890   002828  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 18891   00282A  EF12  F014         	goto	i2u596_45
 18892   00282E  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 18893   002830  0AFF               	xorlw	255
 18894   002832  168A               	andwf	138,f,c	;volatile
 18895   002834  EF24  F015         	goto	i2l8303
 18896   002838                     i2l8281:
 18897                           
 18898                           ;MCAL_layer/GPIO/hal_gpio.c: 107:                         LATC &= ~(1 << pinConfig ->pin
      +                          );break;
 18899   002838  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 18900   00283C  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 18901   002840  30DF               	rrcf	223,w,c
 18902   002842  32E8               	rrcf	wreg,f,c
 18903   002844  32E8               	rrcf	wreg,f,c
 18904   002846  0B07               	andlw	7
 18905   002848  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 18906   00284A  0E01               	movlw	1
 18907   00284C  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 18908   00284E  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 18909   002850  EF2C  F014         	goto	i2u597_44
 18910   002854                     i2u597_45:
 18911   002854  90D8               	bcf	status,0,c
 18912   002856  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 18913   002858                     i2u597_44:
 18914   002858  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 18915   00285A  EF2A  F014         	goto	i2u597_45
 18916   00285E  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 18917   002860  0AFF               	xorlw	255
 18918   002862  168B               	andwf	139,f,c	;volatile
 18919   002864  EF24  F015         	goto	i2l8303
 18920   002868                     i2l8283:
 18921                           
 18922                           ;MCAL_layer/GPIO/hal_gpio.c: 109:                         LATD &= ~(1 << pinConfig ->pin
      +                          );break;
 18923   002868  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 18924   00286C  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 18925   002870  30DF               	rrcf	223,w,c
 18926   002872  32E8               	rrcf	wreg,f,c
 18927   002874  32E8               	rrcf	wreg,f,c
 18928   002876  0B07               	andlw	7
 18929   002878  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 18930   00287A  0E01               	movlw	1
 18931   00287C  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 18932   00287E  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 18933   002880  EF44  F014         	goto	i2u598_44
 18934   002884                     i2u598_45:
 18935   002884  90D8               	bcf	status,0,c
 18936   002886  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 18937   002888                     i2u598_44:
 18938   002888  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 18939   00288A  EF42  F014         	goto	i2u598_45
 18940   00288E  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 18941   002890  0AFF               	xorlw	255
 18942   002892  168C               	andwf	140,f,c	;volatile
 18943   002894  EF24  F015         	goto	i2l8303
 18944   002898                     i2l8285:
 18945                           
 18946                           ;MCAL_layer/GPIO/hal_gpio.c: 111:                         LATE &= ~(1 << pinConfig ->pin
      +                          );break;
 18947   002898  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 18948   00289C  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 18949   0028A0  30DF               	rrcf	223,w,c
 18950   0028A2  32E8               	rrcf	wreg,f,c
 18951   0028A4  32E8               	rrcf	wreg,f,c
 18952   0028A6  0B07               	andlw	7
 18953   0028A8  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 18954   0028AA  0E01               	movlw	1
 18955   0028AC  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 18956   0028AE  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 18957   0028B0  EF5C  F014         	goto	i2u599_44
 18958   0028B4                     i2u599_45:
 18959   0028B4  90D8               	bcf	status,0,c
 18960   0028B6  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 18961   0028B8                     i2u599_44:
 18962   0028B8  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 18963   0028BA  EF5A  F014         	goto	i2u599_45
 18964   0028BE  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 18965   0028C0  0AFF               	xorlw	255
 18966   0028C2  168D               	andwf	141,f,c	;volatile
 18967   0028C4  EF24  F015         	goto	i2l8303
 18968   0028C8                     i2l8287:
 18969   0028C8  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 18970   0028CC  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 18971   0028D0  50DF               	movf	223,w,c
 18972   0028D2  0B07               	andlw	7
 18973                           
 18974                           ; Switch size 1, requested type "simple"
 18975                           ; Number of cases is 5, Range of values is 0 to 4
 18976                           ; switch strategies available:
 18977                           ; Name         Instructions Cycles
 18978                           ; simple_byte           16     9 (average)
 18979                           ;	Chosen strategy is simple_byte
 18980   0028D4  0A00               	xorlw	0	; case 0
 18981   0028D6  B4D8               	btfsc	status,2,c
 18982   0028D8  EFEC  F013         	goto	i2l8277
 18983   0028DC  0A01               	xorlw	1	; case 1
 18984   0028DE  B4D8               	btfsc	status,2,c
 18985   0028E0  EF04  F014         	goto	i2l8279
 18986   0028E4  0A03               	xorlw	3	; case 2
 18987   0028E6  B4D8               	btfsc	status,2,c
 18988   0028E8  EF1C  F014         	goto	i2l8281
 18989   0028EC  0A01               	xorlw	1	; case 3
 18990   0028EE  B4D8               	btfsc	status,2,c
 18991   0028F0  EF34  F014         	goto	i2l8283
 18992   0028F4  0A07               	xorlw	7	; case 4
 18993   0028F6  B4D8               	btfsc	status,2,c
 18994   0028F8  EF4C  F014         	goto	i2l8285
 18995   0028FC  EFE9  F013         	goto	i2l979
 18996   002900                     i2l8289:
 18997                           
 18998                           ;MCAL_layer/GPIO/hal_gpio.c: 118:                         LATA |= (1 << pinConfig ->pin)
      +                          ;break;
 18999   002900  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 19000   002904  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 19001   002908  30DF               	rrcf	223,w,c
 19002   00290A  32E8               	rrcf	wreg,f,c
 19003   00290C  32E8               	rrcf	wreg,f,c
 19004   00290E  0B07               	andlw	7
 19005   002910  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 19006   002912  0E01               	movlw	1
 19007   002914  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 19008   002916  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 19009   002918  EF90  F014         	goto	i2u600_44
 19010   00291C                     i2u600_45:
 19011   00291C  90D8               	bcf	status,0,c
 19012   00291E  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 19013   002920                     i2u600_44:
 19014   002920  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 19015   002922  EF8E  F014         	goto	i2u600_45
 19016   002926  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 19017   002928  1289               	iorwf	137,f,c	;volatile
 19018   00292A  EF24  F015         	goto	i2l8303
 19019   00292E                     i2l8291:
 19020                           
 19021                           ;MCAL_layer/GPIO/hal_gpio.c: 120:                         LATB |= (1 << pinConfig ->pin)
      +                          ;break;
 19022   00292E  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 19023   002932  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 19024   002936  30DF               	rrcf	223,w,c
 19025   002938  32E8               	rrcf	wreg,f,c
 19026   00293A  32E8               	rrcf	wreg,f,c
 19027   00293C  0B07               	andlw	7
 19028   00293E  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 19029   002940  0E01               	movlw	1
 19030   002942  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 19031   002944  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 19032   002946  EFA7  F014         	goto	i2u601_44
 19033   00294A                     i2u601_45:
 19034   00294A  90D8               	bcf	status,0,c
 19035   00294C  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 19036   00294E                     i2u601_44:
 19037   00294E  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 19038   002950  EFA5  F014         	goto	i2u601_45
 19039   002954  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 19040   002956  128A               	iorwf	138,f,c	;volatile
 19041   002958  EF24  F015         	goto	i2l8303
 19042   00295C                     i2l8293:
 19043                           
 19044                           ;MCAL_layer/GPIO/hal_gpio.c: 122:                         LATC |= (1 << pinConfig ->pin)
      +                          ;break;
 19045   00295C  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 19046   002960  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 19047   002964  30DF               	rrcf	223,w,c
 19048   002966  32E8               	rrcf	wreg,f,c
 19049   002968  32E8               	rrcf	wreg,f,c
 19050   00296A  0B07               	andlw	7
 19051   00296C  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 19052   00296E  0E01               	movlw	1
 19053   002970  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 19054   002972  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 19055   002974  EFBE  F014         	goto	i2u602_44
 19056   002978                     i2u602_45:
 19057   002978  90D8               	bcf	status,0,c
 19058   00297A  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 19059   00297C                     i2u602_44:
 19060   00297C  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 19061   00297E  EFBC  F014         	goto	i2u602_45
 19062   002982  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 19063   002984  128B               	iorwf	139,f,c	;volatile
 19064   002986  EF24  F015         	goto	i2l8303
 19065   00298A                     i2l8295:
 19066                           
 19067                           ;MCAL_layer/GPIO/hal_gpio.c: 124:                         LATD |= (1 << pinConfig ->pin)
      +                          ;break;
 19068   00298A  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 19069   00298E  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 19070   002992  30DF               	rrcf	223,w,c
 19071   002994  32E8               	rrcf	wreg,f,c
 19072   002996  32E8               	rrcf	wreg,f,c
 19073   002998  0B07               	andlw	7
 19074   00299A  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 19075   00299C  0E01               	movlw	1
 19076   00299E  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 19077   0029A0  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 19078   0029A2  EFD5  F014         	goto	i2u603_44
 19079   0029A6                     i2u603_45:
 19080   0029A6  90D8               	bcf	status,0,c
 19081   0029A8  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 19082   0029AA                     i2u603_44:
 19083   0029AA  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 19084   0029AC  EFD3  F014         	goto	i2u603_45
 19085   0029B0  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 19086   0029B2  128C               	iorwf	140,f,c	;volatile
 19087   0029B4  EF24  F015         	goto	i2l8303
 19088   0029B8                     i2l8297:
 19089                           
 19090                           ;MCAL_layer/GPIO/hal_gpio.c: 126:                         LATE |= (1 << pinConfig ->pin)
      +                          ;break;
 19091   0029B8  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 19092   0029BC  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 19093   0029C0  30DF               	rrcf	223,w,c
 19094   0029C2  32E8               	rrcf	wreg,f,c
 19095   0029C4  32E8               	rrcf	wreg,f,c
 19096   0029C6  0B07               	andlw	7
 19097   0029C8  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 19098   0029CA  0E01               	movlw	1
 19099   0029CC  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 19100   0029CE  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 19101   0029D0  EFEC  F014         	goto	i2u604_44
 19102   0029D4                     i2u604_45:
 19103   0029D4  90D8               	bcf	status,0,c
 19104   0029D6  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 19105   0029D8                     i2u604_44:
 19106   0029D8  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 19107   0029DA  EFEA  F014         	goto	i2u604_45
 19108   0029DE  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 19109   0029E0  128D               	iorwf	141,f,c	;volatile
 19110   0029E2  EF24  F015         	goto	i2l8303
 19111   0029E6                     i2l8299:
 19112   0029E6  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 19113   0029EA  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 19114   0029EE  50DF               	movf	223,w,c
 19115   0029F0  0B07               	andlw	7
 19116                           
 19117                           ; Switch size 1, requested type "simple"
 19118                           ; Number of cases is 5, Range of values is 0 to 4
 19119                           ; switch strategies available:
 19120                           ; Name         Instructions Cycles
 19121                           ; simple_byte           16     9 (average)
 19122                           ;	Chosen strategy is simple_byte
 19123   0029F2  0A00               	xorlw	0	; case 0
 19124   0029F4  B4D8               	btfsc	status,2,c
 19125   0029F6  EF80  F014         	goto	i2l8289
 19126   0029FA  0A01               	xorlw	1	; case 1
 19127   0029FC  B4D8               	btfsc	status,2,c
 19128   0029FE  EF97  F014         	goto	i2l8291
 19129   002A02  0A03               	xorlw	3	; case 2
 19130   002A04  B4D8               	btfsc	status,2,c
 19131   002A06  EFAE  F014         	goto	i2l8293
 19132   002A0A  0A01               	xorlw	1	; case 3
 19133   002A0C  B4D8               	btfsc	status,2,c
 19134   002A0E  EFC5  F014         	goto	i2l8295
 19135   002A12  0A07               	xorlw	7	; case 4
 19136   002A14  B4D8               	btfsc	status,2,c
 19137   002A16  EFDC  F014         	goto	i2l8297
 19138   002A1A  EFE9  F013         	goto	i2l979
 19139   002A1E                     i2l8301:
 19140   002A1E  5003               	movf	i2gpio_pin_write_logic@logic^0,w,c
 19141   002A20  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 19142   002A22  6A05               	clrf	(??i2_gpio_pin_write_logic+1)^0,c
 19143                           
 19144                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19145                           ; Switch size 1, requested type "simple"
 19146                           ; Number of cases is 1, Range of values is 0 to 0
 19147                           ; switch strategies available:
 19148                           ; Name         Instructions Cycles
 19149                           ; simple_byte            4     3 (average)
 19150                           ;	Chosen strategy is simple_byte
 19151   002A24  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 19152   002A26  0A00               	xorlw	0	; case 0
 19153   002A28  B4D8               	btfsc	status,2,c
 19154   002A2A  EF19  F015         	goto	i2l14847
 19155   002A2E  EFE9  F013         	goto	i2l979
 19156   002A32                     i2l14847:
 19157                           
 19158                           ; Switch size 1, requested type "simple"
 19159                           ; Number of cases is 2, Range of values is 0 to 1
 19160                           ; switch strategies available:
 19161                           ; Name         Instructions Cycles
 19162                           ; simple_byte            7     4 (average)
 19163                           ;	Chosen strategy is simple_byte
 19164   002A32  5004               	movf	??i2_gpio_pin_write_logic^0,w,c
 19165   002A34  0A00               	xorlw	0	; case 0
 19166   002A36  B4D8               	btfsc	status,2,c
 19167   002A38  EF64  F014         	goto	i2l8287
 19168   002A3C  0A01               	xorlw	1	; case 1
 19169   002A3E  B4D8               	btfsc	status,2,c
 19170   002A40  EFF3  F014         	goto	i2l8299
 19171   002A44  EFE9  F013         	goto	i2l979
 19172   002A48                     i2l8303:
 19173                           
 19174                           ;MCAL_layer/GPIO/hal_gpio.c: 133:     return rt;
 19175   002A48  5006               	movf	i2gpio_pin_write_logic@rt^0,w,c
 19176   002A4A  0012               	return		;funcret
 19177   002A4C                     __end_ofi2_gpio_pin_write_logic:
 19178                           	callstack 0
 19179                           
 19180 ;; *************** function ___awmod *****************
 19181 ;; Defined at:
 19182 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
 19183 ;; Parameters:    Size  Location     Type
 19184 ;;  dividend        2    0[COMRAM] int 
 19185 ;;  divisor         2    2[COMRAM] int 
 19186 ;; Auto vars:     Size  Location     Type
 19187 ;;  sign            1    5[COMRAM] unsigned char 
 19188 ;;  counter         1    4[COMRAM] unsigned char 
 19189 ;; Return value:  Size  Location     Type
 19190 ;;                  2    0[COMRAM] int 
 19191 ;; Registers used:
 19192 ;;		wreg, status,2, status,0
 19193 ;; Tracked objects:
 19194 ;;		On entry : 0/0
 19195 ;;		On exit  : 0/0
 19196 ;;		Unchanged: 0/0
 19197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19198 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19199 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19200 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19201 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19202 ;;Total ram usage:        6 bytes
 19203 ;; Hardware stack levels used: 1
 19204 ;; This function calls:
 19205 ;;		Nothing
 19206 ;; This function is called by:
 19207 ;;		_Timer0_DefaultInterruptHandler
 19208 ;; This function uses a non-reentrant model
 19209 ;;
 19210                           
 19211                           	psect	text102
 19212   00375C                     __ptext102:
 19213                           	callstack 0
 19214   00375C                     ___awmod:
 19215                           	callstack 17
 19216   00375C  6A06               	clrf	___awmod@sign^0,c
 19217   00375E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 19218   003760  EFB6  F01B         	goto	i2u763_40
 19219   003764  EFB4  F01B         	goto	i2u763_41
 19220   003768                     i2u763_41:
 19221   003768  EFBC  F01B         	goto	i2l9463
 19222   00376C                     i2u763_40:
 19223   00376C  6C01               	negf	___awmod@dividend^0,c
 19224   00376E  1E02               	comf	(___awmod@dividend+1)^0,f,c
 19225   003770  B0D8               	btfsc	status,0,c
 19226   003772  2A02               	incf	(___awmod@dividend+1)^0,f,c
 19227   003774  0E01               	movlw	1
 19228   003776  6E06               	movwf	___awmod@sign^0,c
 19229   003778                     i2l9463:
 19230   003778  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 19231   00377A  EFC3  F01B         	goto	i2u764_40
 19232   00377E  EFC1  F01B         	goto	i2u764_41
 19233   003782                     i2u764_41:
 19234   003782  EFC7  F01B         	goto	i2l9467
 19235   003786                     i2u764_40:
 19236   003786  6C03               	negf	___awmod@divisor^0,c
 19237   003788  1E04               	comf	(___awmod@divisor+1)^0,f,c
 19238   00378A  B0D8               	btfsc	status,0,c
 19239   00378C  2A04               	incf	(___awmod@divisor+1)^0,f,c
 19240   00378E                     i2l9467:
 19241   00378E  5003               	movf	___awmod@divisor^0,w,c
 19242   003790  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 19243   003792  B4D8               	btfsc	status,2,c
 19244   003794  EFCE  F01B         	goto	i2u765_41
 19245   003798  EFD0  F01B         	goto	i2u765_40
 19246   00379C                     i2u765_41:
 19247   00379C  EFF4  F01B         	goto	i2l9483
 19248   0037A0                     i2u765_40:
 19249   0037A0  0E01               	movlw	1
 19250   0037A2  6E05               	movwf	___awmod@counter^0,c
 19251   0037A4  EFD8  F01B         	goto	i2l9473
 19252   0037A8                     i2l9471:
 19253   0037A8  90D8               	bcf	status,0,c
 19254   0037AA  3603               	rlcf	___awmod@divisor^0,f,c
 19255   0037AC  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 19256   0037AE  2A05               	incf	___awmod@counter^0,f,c
 19257   0037B0                     i2l9473:
 19258   0037B0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 19259   0037B2  EFDD  F01B         	goto	i2u766_41
 19260   0037B6  EFDF  F01B         	goto	i2u766_40
 19261   0037BA                     i2u766_41:
 19262   0037BA  EFD4  F01B         	goto	i2l9471
 19263   0037BE                     i2u766_40:
 19264   0037BE                     i2l9475:
 19265   0037BE  5003               	movf	___awmod@divisor^0,w,c
 19266   0037C0  5C01               	subwf	___awmod@dividend^0,w,c
 19267   0037C2  5004               	movf	(___awmod@divisor+1)^0,w,c
 19268   0037C4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 19269   0037C6  A0D8               	btfss	status,0,c
 19270   0037C8  EFE8  F01B         	goto	i2u767_41
 19271   0037CC  EFEA  F01B         	goto	i2u767_40
 19272   0037D0                     i2u767_41:
 19273   0037D0  EFEE  F01B         	goto	i2l9479
 19274   0037D4                     i2u767_40:
 19275   0037D4  5003               	movf	___awmod@divisor^0,w,c
 19276   0037D6  5E01               	subwf	___awmod@dividend^0,f,c
 19277   0037D8  5004               	movf	(___awmod@divisor+1)^0,w,c
 19278   0037DA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 19279   0037DC                     i2l9479:
 19280   0037DC  90D8               	bcf	status,0,c
 19281   0037DE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 19282   0037E0  3203               	rrcf	___awmod@divisor^0,f,c
 19283   0037E2  2E05               	decfsz	___awmod@counter^0,f,c
 19284   0037E4  EFDF  F01B         	goto	i2l9475
 19285   0037E8                     i2l9483:
 19286   0037E8  5006               	movf	___awmod@sign^0,w,c
 19287   0037EA  B4D8               	btfsc	status,2,c
 19288   0037EC  EFFA  F01B         	goto	i2u768_41
 19289   0037F0  EFFC  F01B         	goto	i2u768_40
 19290   0037F4                     i2u768_41:
 19291   0037F4  EF00  F01C         	goto	i2l9487
 19292   0037F8                     i2u768_40:
 19293   0037F8  6C01               	negf	___awmod@dividend^0,c
 19294   0037FA  1E02               	comf	(___awmod@dividend+1)^0,f,c
 19295   0037FC  B0D8               	btfsc	status,0,c
 19296   0037FE  2A02               	incf	(___awmod@dividend+1)^0,f,c
 19297   003800                     i2l9487:
 19298   003800  C001  F001         	movff	___awmod@dividend,?___awmod
 19299   003804  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 19300   003808  0012               	return		;funcret
 19301   00380A                     __end_of___awmod:
 19302                           	callstack 0
 19303                           
 19304 ;; *************** function ___awdiv *****************
 19305 ;; Defined at:
 19306 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
 19307 ;; Parameters:    Size  Location     Type
 19308 ;;  dividend        2    0[COMRAM] int 
 19309 ;;  divisor         2    2[COMRAM] int 
 19310 ;; Auto vars:     Size  Location     Type
 19311 ;;  quotient        2    6[COMRAM] int 
 19312 ;;  sign            1    5[COMRAM] unsigned char 
 19313 ;;  counter         1    4[COMRAM] unsigned char 
 19314 ;; Return value:  Size  Location     Type
 19315 ;;                  2    0[COMRAM] int 
 19316 ;; Registers used:
 19317 ;;		wreg, status,2, status,0
 19318 ;; Tracked objects:
 19319 ;;		On entry : 0/0
 19320 ;;		On exit  : 0/0
 19321 ;;		Unchanged: 0/0
 19322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19323 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19324 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19326 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19327 ;;Total ram usage:        8 bytes
 19328 ;; Hardware stack levels used: 1
 19329 ;; This function calls:
 19330 ;;		Nothing
 19331 ;; This function is called by:
 19332 ;;		_Timer0_DefaultInterruptHandler
 19333 ;; This function uses a non-reentrant model
 19334 ;;
 19335                           
 19336                           	psect	text103
 19337   0035E4                     __ptext103:
 19338                           	callstack 0
 19339   0035E4                     ___awdiv:
 19340                           	callstack 17
 19341   0035E4  6A06               	clrf	___awdiv@sign^0,c
 19342   0035E6  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 19343   0035E8  EFFA  F01A         	goto	i2u757_40
 19344   0035EC  EFF8  F01A         	goto	i2u757_41
 19345   0035F0                     i2u757_41:
 19346   0035F0  EF00  F01B         	goto	i2l9419
 19347   0035F4                     i2u757_40:
 19348   0035F4  6C03               	negf	___awdiv@divisor^0,c
 19349   0035F6  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 19350   0035F8  B0D8               	btfsc	status,0,c
 19351   0035FA  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 19352   0035FC  0E01               	movlw	1
 19353   0035FE  6E06               	movwf	___awdiv@sign^0,c
 19354   003600                     i2l9419:
 19355   003600  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 19356   003602  EF07  F01B         	goto	i2u758_40
 19357   003606  EF05  F01B         	goto	i2u758_41
 19358   00360A                     i2u758_41:
 19359   00360A  EF0D  F01B         	goto	i2l9425
 19360   00360E                     i2u758_40:
 19361   00360E  6C01               	negf	___awdiv@dividend^0,c
 19362   003610  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 19363   003612  B0D8               	btfsc	status,0,c
 19364   003614  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 19365   003616  0E01               	movlw	1
 19366   003618  1A06               	xorwf	___awdiv@sign^0,f,c
 19367   00361A                     i2l9425:
 19368   00361A  0E00               	movlw	0
 19369   00361C  6E08               	movwf	(___awdiv@quotient+1)^0,c
 19370   00361E  0E00               	movlw	0
 19371   003620  6E07               	movwf	___awdiv@quotient^0,c
 19372   003622  5003               	movf	___awdiv@divisor^0,w,c
 19373   003624  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 19374   003626  B4D8               	btfsc	status,2,c
 19375   003628  EF18  F01B         	goto	i2u759_41
 19376   00362C  EF1A  F01B         	goto	i2u759_40
 19377   003630                     i2u759_41:
 19378   003630  EF42  F01B         	goto	i2l9447
 19379   003634                     i2u759_40:
 19380   003634  0E01               	movlw	1
 19381   003636  6E05               	movwf	___awdiv@counter^0,c
 19382   003638  EF22  F01B         	goto	i2l9433
 19383   00363C                     i2l9431:
 19384   00363C  90D8               	bcf	status,0,c
 19385   00363E  3603               	rlcf	___awdiv@divisor^0,f,c
 19386   003640  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 19387   003642  2A05               	incf	___awdiv@counter^0,f,c
 19388   003644                     i2l9433:
 19389   003644  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 19390   003646  EF27  F01B         	goto	i2u760_41
 19391   00364A  EF29  F01B         	goto	i2u760_40
 19392   00364E                     i2u760_41:
 19393   00364E  EF1E  F01B         	goto	i2l9431
 19394   003652                     i2u760_40:
 19395   003652                     i2l9435:
 19396   003652  90D8               	bcf	status,0,c
 19397   003654  3607               	rlcf	___awdiv@quotient^0,f,c
 19398   003656  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 19399   003658  5003               	movf	___awdiv@divisor^0,w,c
 19400   00365A  5C01               	subwf	___awdiv@dividend^0,w,c
 19401   00365C  5004               	movf	(___awdiv@divisor+1)^0,w,c
 19402   00365E  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 19403   003660  A0D8               	btfss	status,0,c
 19404   003662  EF35  F01B         	goto	i2u761_41
 19405   003666  EF37  F01B         	goto	i2u761_40
 19406   00366A                     i2u761_41:
 19407   00366A  EF3C  F01B         	goto	i2l9443
 19408   00366E                     i2u761_40:
 19409   00366E  5003               	movf	___awdiv@divisor^0,w,c
 19410   003670  5E01               	subwf	___awdiv@dividend^0,f,c
 19411   003672  5004               	movf	(___awdiv@divisor+1)^0,w,c
 19412   003674  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 19413   003676  8007               	bsf	___awdiv@quotient^0,0,c
 19414   003678                     i2l9443:
 19415   003678  90D8               	bcf	status,0,c
 19416   00367A  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 19417   00367C  3203               	rrcf	___awdiv@divisor^0,f,c
 19418   00367E  2E05               	decfsz	___awdiv@counter^0,f,c
 19419   003680  EF29  F01B         	goto	i2l9435
 19420   003684                     i2l9447:
 19421   003684  5006               	movf	___awdiv@sign^0,w,c
 19422   003686  B4D8               	btfsc	status,2,c
 19423   003688  EF48  F01B         	goto	i2u762_41
 19424   00368C  EF4A  F01B         	goto	i2u762_40
 19425   003690                     i2u762_41:
 19426   003690  EF4E  F01B         	goto	i2l9451
 19427   003694                     i2u762_40:
 19428   003694  6C07               	negf	___awdiv@quotient^0,c
 19429   003696  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 19430   003698  B0D8               	btfsc	status,0,c
 19431   00369A  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 19432   00369C                     i2l9451:
 19433   00369C  C007  F001         	movff	___awdiv@quotient,?___awdiv
 19434   0036A0  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 19435   0036A4  0012               	return		;funcret
 19436   0036A6                     __end_of___awdiv:
 19437                           	callstack 0
 19438                           
 19439 ;; *************** function _RB7_ISR *****************
 19440 ;; Defined at:
 19441 ;;		line 709 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 19442 ;; Parameters:    Size  Location     Type
 19443 ;;  RB7_Source      1    wreg     unsigned char 
 19444 ;; Auto vars:     Size  Location     Type
 19445 ;;  RB7_Source      1    0[COMRAM] unsigned char 
 19446 ;; Return value:  Size  Location     Type
 19447 ;;                  1    wreg      void 
 19448 ;; Registers used:
 19449 ;;		wreg, status,2, status,0
 19450 ;; Tracked objects:
 19451 ;;		On entry : 0/0
 19452 ;;		On exit  : 0/0
 19453 ;;		Unchanged: 0/0
 19454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19458 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19459 ;;Total ram usage:        1 bytes
 19460 ;; Hardware stack levels used: 1
 19461 ;; This function calls:
 19462 ;;		Nothing
 19463 ;; This function is called by:
 19464 ;;		_InterruptManager
 19465 ;; This function uses a non-reentrant model
 19466 ;;
 19467                           
 19468                           	psect	text104
 19469   0049AA                     __ptext104:
 19470                           	callstack 0
 19471   0049AA                     _RB7_ISR:
 19472                           	callstack 19
 19473                           
 19474                           ;incstack = 0
 19475                           ;RB7_ISR@RB7_Source stored from wreg
 19476   0049AA  6E01               	movwf	RB7_ISR@RB7_Source^0,c
 19477   0049AC                     
 19478                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 711:     (INTCONbits.RBIF = 0);
 19479   0049AC  90F2               	bcf	242,0,c	;volatile
 19480   0049AE                     
 19481                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 713:     if(0 == RB7_Source){
 19482   0049AE  5001               	movf	RB7_ISR@RB7_Source^0,w,c
 19483   0049B0  A4D8               	btfss	status,2,c
 19484   0049B2  EFDD  F024         	goto	i2u841_41
 19485   0049B6  EFDF  F024         	goto	i2u841_40
 19486   0049BA                     i2u841_41:
 19487   0049BA  EFE1  F024         	goto	i2l10157
 19488   0049BE                     i2u841_40:
 19489   0049BE  EFE1  F024         	goto	i2l1548
 19490   0049C2                     i2l10157:
 19491   0049C2                     i2l1548:
 19492   0049C2  0012               	return		;funcret
 19493   0049C4                     __end_of_RB7_ISR:
 19494                           	callstack 0
 19495                           
 19496 ;; *************** function _RB6_ISR *****************
 19497 ;; Defined at:
 19498 ;;		line 693 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 19499 ;; Parameters:    Size  Location     Type
 19500 ;;  RB6_Source      1    wreg     unsigned char 
 19501 ;; Auto vars:     Size  Location     Type
 19502 ;;  RB6_Source      1    0[COMRAM] unsigned char 
 19503 ;; Return value:  Size  Location     Type
 19504 ;;                  1    wreg      void 
 19505 ;; Registers used:
 19506 ;;		wreg, status,2, status,0
 19507 ;; Tracked objects:
 19508 ;;		On entry : 0/0
 19509 ;;		On exit  : 0/0
 19510 ;;		Unchanged: 0/0
 19511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19513 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19515 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19516 ;;Total ram usage:        1 bytes
 19517 ;; Hardware stack levels used: 1
 19518 ;; This function calls:
 19519 ;;		Nothing
 19520 ;; This function is called by:
 19521 ;;		_InterruptManager
 19522 ;; This function uses a non-reentrant model
 19523 ;;
 19524                           
 19525                           	psect	text105
 19526   0049C4                     __ptext105:
 19527                           	callstack 0
 19528   0049C4                     _RB6_ISR:
 19529                           	callstack 19
 19530                           
 19531                           ;incstack = 0
 19532                           ;RB6_ISR@RB6_Source stored from wreg
 19533   0049C4  6E01               	movwf	RB6_ISR@RB6_Source^0,c
 19534   0049C6                     
 19535                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 695:     (INTCONbits.RBIF = 0);
 19536   0049C6  90F2               	bcf	242,0,c	;volatile
 19537   0049C8                     
 19538                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 697:     if(0 == RB6_Source){
 19539   0049C8  5001               	movf	RB6_ISR@RB6_Source^0,w,c
 19540   0049CA  A4D8               	btfss	status,2,c
 19541   0049CC  EFEA  F024         	goto	i2u840_41
 19542   0049D0  EFEC  F024         	goto	i2u840_40
 19543   0049D4                     i2u840_41:
 19544   0049D4  EFEE  F024         	goto	i2l10143
 19545   0049D8                     i2u840_40:
 19546   0049D8  EFEE  F024         	goto	i2l1537
 19547   0049DC                     i2l10143:
 19548   0049DC                     i2l1537:
 19549   0049DC  0012               	return		;funcret
 19550   0049DE                     __end_of_RB6_ISR:
 19551                           	callstack 0
 19552                           
 19553 ;; *************** function _RB5_ISR *****************
 19554 ;; Defined at:
 19555 ;;		line 677 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 19556 ;; Parameters:    Size  Location     Type
 19557 ;;  RB5_Source      1    wreg     unsigned char 
 19558 ;; Auto vars:     Size  Location     Type
 19559 ;;  RB5_Source      1    0[COMRAM] unsigned char 
 19560 ;; Return value:  Size  Location     Type
 19561 ;;                  1    wreg      void 
 19562 ;; Registers used:
 19563 ;;		wreg, status,2, status,0
 19564 ;; Tracked objects:
 19565 ;;		On entry : 0/0
 19566 ;;		On exit  : 0/0
 19567 ;;		Unchanged: 0/0
 19568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19572 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19573 ;;Total ram usage:        1 bytes
 19574 ;; Hardware stack levels used: 1
 19575 ;; This function calls:
 19576 ;;		Nothing
 19577 ;; This function is called by:
 19578 ;;		_InterruptManager
 19579 ;; This function uses a non-reentrant model
 19580 ;;
 19581                           
 19582                           	psect	text106
 19583   0049DE                     __ptext106:
 19584                           	callstack 0
 19585   0049DE                     _RB5_ISR:
 19586                           	callstack 19
 19587                           
 19588                           ;incstack = 0
 19589                           ;RB5_ISR@RB5_Source stored from wreg
 19590   0049DE  6E01               	movwf	RB5_ISR@RB5_Source^0,c
 19591   0049E0                     
 19592                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 679:     (INTCONbits.RBIF = 0);
 19593   0049E0  90F2               	bcf	242,0,c	;volatile
 19594   0049E2                     
 19595                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 681:     if(0 == RB5_Source){
 19596   0049E2  5001               	movf	RB5_ISR@RB5_Source^0,w,c
 19597   0049E4  A4D8               	btfss	status,2,c
 19598   0049E6  EFF7  F024         	goto	i2u839_41
 19599   0049EA  EFF9  F024         	goto	i2u839_40
 19600   0049EE                     i2u839_41:
 19601   0049EE  EFFB  F024         	goto	i2l10129
 19602   0049F2                     i2u839_40:
 19603   0049F2  EFFB  F024         	goto	i2l1526
 19604   0049F6                     i2l10129:
 19605   0049F6                     i2l1526:
 19606   0049F6  0012               	return		;funcret
 19607   0049F8                     __end_of_RB5_ISR:
 19608                           	callstack 0
 19609                           
 19610 ;; *************** function _RB4_ISR *****************
 19611 ;; Defined at:
 19612 ;;		line 661 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 19613 ;; Parameters:    Size  Location     Type
 19614 ;;  RB4_Source      1    wreg     unsigned char 
 19615 ;; Auto vars:     Size  Location     Type
 19616 ;;  RB4_Source      1    0[COMRAM] unsigned char 
 19617 ;; Return value:  Size  Location     Type
 19618 ;;                  1    wreg      void 
 19619 ;; Registers used:
 19620 ;;		wreg, status,2, status,0
 19621 ;; Tracked objects:
 19622 ;;		On entry : 0/0
 19623 ;;		On exit  : 0/0
 19624 ;;		Unchanged: 0/0
 19625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19627 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19629 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19630 ;;Total ram usage:        1 bytes
 19631 ;; Hardware stack levels used: 1
 19632 ;; This function calls:
 19633 ;;		Nothing
 19634 ;; This function is called by:
 19635 ;;		_InterruptManager
 19636 ;; This function uses a non-reentrant model
 19637 ;;
 19638                           
 19639                           	psect	text107
 19640   0049F8                     __ptext107:
 19641                           	callstack 0
 19642   0049F8                     _RB4_ISR:
 19643                           	callstack 19
 19644                           
 19645                           ;incstack = 0
 19646                           ;RB4_ISR@RB4_Source stored from wreg
 19647   0049F8  6E01               	movwf	RB4_ISR@RB4_Source^0,c
 19648   0049FA                     
 19649                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 663:     (INTCONbits.RBIF = 0);
 19650   0049FA  90F2               	bcf	242,0,c	;volatile
 19651   0049FC                     
 19652                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 665:     if(0 == RB4_Source){
 19653   0049FC  5001               	movf	RB4_ISR@RB4_Source^0,w,c
 19654   0049FE  A4D8               	btfss	status,2,c
 19655   004A00  EF04  F025         	goto	i2u838_41
 19656   004A04  EF06  F025         	goto	i2u838_40
 19657   004A08                     i2u838_41:
 19658   004A08  EF08  F025         	goto	i2l10115
 19659   004A0C                     i2u838_40:
 19660   004A0C  EF08  F025         	goto	i2l1515
 19661   004A10                     i2l10115:
 19662   004A10                     i2l1515:
 19663   004A10  0012               	return		;funcret
 19664   004A12                     __end_of_RB4_ISR:
 19665                           	callstack 0
 19666                           
 19667 ;; *************** function _MSSP_SPI_ISR *****************
 19668 ;; Defined at:
 19669 ;;		line 326 in file "MCAL_layer/SPI/hal_spi.c"
 19670 ;; Parameters:    Size  Location     Type
 19671 ;;		None
 19672 ;; Auto vars:     Size  Location     Type
 19673 ;;		None
 19674 ;; Return value:  Size  Location     Type
 19675 ;;                  1    wreg      void 
 19676 ;; Registers used:
 19677 ;;		None
 19678 ;; Tracked objects:
 19679 ;;		On entry : 0/0
 19680 ;;		On exit  : 0/0
 19681 ;;		Unchanged: 0/0
 19682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19687 ;;Total ram usage:        0 bytes
 19688 ;; Hardware stack levels used: 1
 19689 ;; This function calls:
 19690 ;;		Nothing
 19691 ;; This function is called by:
 19692 ;;		_InterruptManager
 19693 ;; This function uses a non-reentrant model
 19694 ;;
 19695                           
 19696                           	psect	text108
 19697   004B76                     __ptext108:
 19698                           	callstack 0
 19699   004B76                     _MSSP_SPI_ISR:
 19700                           	callstack 19
 19701   004B76                     
 19702                           ;MCAL_layer/SPI/hal_spi.c: 328:     (PIR1bits.SSPIF = 0);
 19703   004B76  969E               	bcf	158,3,c	;volatile
 19704   004B78  0012               	return		;funcret
 19705   004B7A                     __end_of_MSSP_SPI_ISR:
 19706                           	callstack 0
 19707                           
 19708 ;; *************** function _MSSP_I2C_ISR *****************
 19709 ;; Defined at:
 19710 ;;		line 332 in file "MCAL_layer/I2C/hal_i2c.c"
 19711 ;; Parameters:    Size  Location     Type
 19712 ;;		None
 19713 ;; Auto vars:     Size  Location     Type
 19714 ;;		None
 19715 ;; Return value:  Size  Location     Type
 19716 ;;                  1    wreg      void 
 19717 ;; Registers used:
 19718 ;;		None
 19719 ;; Tracked objects:
 19720 ;;		On entry : 0/0
 19721 ;;		On exit  : 0/0
 19722 ;;		Unchanged: 0/0
 19723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19728 ;;Total ram usage:        0 bytes
 19729 ;; Hardware stack levels used: 1
 19730 ;; This function calls:
 19731 ;;		Nothing
 19732 ;; This function is called by:
 19733 ;;		_InterruptManager
 19734 ;; This function uses a non-reentrant model
 19735 ;;
 19736                           
 19737                           	psect	text109
 19738   004B7A                     __ptext109:
 19739                           	callstack 0
 19740   004B7A                     _MSSP_I2C_ISR:
 19741                           	callstack 19
 19742   004B7A                     
 19743                           ;MCAL_layer/I2C/hal_i2c.c: 333:     (PIR1bits.SSPIF = 0);
 19744   004B7A  969E               	bcf	158,3,c	;volatile
 19745   004B7C  0012               	return		;funcret
 19746   004B7E                     __end_of_MSSP_I2C_ISR:
 19747                           	callstack 0
 19748                           
 19749 ;; *************** function _MSSP_I2C_BC_ISR *****************
 19750 ;; Defined at:
 19751 ;;		line 339 in file "MCAL_layer/I2C/hal_i2c.c"
 19752 ;; Parameters:    Size  Location     Type
 19753 ;;		None
 19754 ;; Auto vars:     Size  Location     Type
 19755 ;;		None
 19756 ;; Return value:  Size  Location     Type
 19757 ;;                  1    wreg      void 
 19758 ;; Registers used:
 19759 ;;		None
 19760 ;; Tracked objects:
 19761 ;;		On entry : 0/0
 19762 ;;		On exit  : 0/0
 19763 ;;		Unchanged: 0/0
 19764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19769 ;;Total ram usage:        0 bytes
 19770 ;; Hardware stack levels used: 1
 19771 ;; This function calls:
 19772 ;;		Nothing
 19773 ;; This function is called by:
 19774 ;;		_InterruptManager
 19775 ;; This function uses a non-reentrant model
 19776 ;;
 19777                           
 19778                           	psect	text110
 19779   004B7E                     __ptext110:
 19780                           	callstack 0
 19781   004B7E                     _MSSP_I2C_BC_ISR:
 19782                           	callstack 19
 19783   004B7E                     
 19784                           ;MCAL_layer/I2C/hal_i2c.c: 340:     (PIR2bits.BCLIF = 0);
 19785   004B7E  96A1               	bcf	161,3,c	;volatile
 19786   004B80  0012               	return		;funcret
 19787   004B82                     __end_of_MSSP_I2C_BC_ISR:
 19788                           	callstack 0
 19789                           
 19790 ;; *************** function _INT2_ISR *****************
 19791 ;; Defined at:
 19792 ;;		line 436 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 19793 ;; Parameters:    Size  Location     Type
 19794 ;;		None
 19795 ;; Auto vars:     Size  Location     Type
 19796 ;;		None
 19797 ;; Return value:  Size  Location     Type
 19798 ;;                  1    wreg      void 
 19799 ;; Registers used:
 19800 ;;		None
 19801 ;; Tracked objects:
 19802 ;;		On entry : 0/0
 19803 ;;		On exit  : 0/0
 19804 ;;		Unchanged: 0/0
 19805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19810 ;;Total ram usage:        0 bytes
 19811 ;; Hardware stack levels used: 1
 19812 ;; This function calls:
 19813 ;;		Nothing
 19814 ;; This function is called by:
 19815 ;;		_InterruptManager
 19816 ;; This function uses a non-reentrant model
 19817 ;;
 19818                           
 19819                           	psect	text111
 19820   004B82                     __ptext111:
 19821                           	callstack 0
 19822   004B82                     _INT2_ISR:
 19823                           	callstack 19
 19824   004B82                     
 19825                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 438:     (INTCON3bits.INT2IF = 0);
 19826   004B82  92F0               	bcf	240,1,c	;volatile
 19827   004B84  0012               	return		;funcret
 19828   004B86                     __end_of_INT2_ISR:
 19829                           	callstack 0
 19830                           
 19831 ;; *************** function _INT1_ISR *****************
 19832 ;; Defined at:
 19833 ;;		line 427 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 19834 ;; Parameters:    Size  Location     Type
 19835 ;;		None
 19836 ;; Auto vars:     Size  Location     Type
 19837 ;;		None
 19838 ;; Return value:  Size  Location     Type
 19839 ;;                  1    wreg      void 
 19840 ;; Registers used:
 19841 ;;		None
 19842 ;; Tracked objects:
 19843 ;;		On entry : 0/0
 19844 ;;		On exit  : 0/0
 19845 ;;		Unchanged: 0/0
 19846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19851 ;;Total ram usage:        0 bytes
 19852 ;; Hardware stack levels used: 1
 19853 ;; This function calls:
 19854 ;;		Nothing
 19855 ;; This function is called by:
 19856 ;;		_InterruptManager
 19857 ;; This function uses a non-reentrant model
 19858 ;;
 19859                           
 19860                           	psect	text112
 19861   004B86                     __ptext112:
 19862                           	callstack 0
 19863   004B86                     _INT1_ISR:
 19864                           	callstack 19
 19865   004B86                     
 19866                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 429:     (INTCON3bits.INT1IF = 0);
 19867   004B86  90F0               	bcf	240,0,c	;volatile
 19868   004B88  0012               	return		;funcret
 19869   004B8A                     __end_of_INT1_ISR:
 19870                           	callstack 0
 19871                           
 19872 ;; *************** function _INT0_ISR *****************
 19873 ;; Defined at:
 19874 ;;		line 418 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 19875 ;; Parameters:    Size  Location     Type
 19876 ;;		None
 19877 ;; Auto vars:     Size  Location     Type
 19878 ;;		None
 19879 ;; Return value:  Size  Location     Type
 19880 ;;                  1    wreg      void 
 19881 ;; Registers used:
 19882 ;;		None
 19883 ;; Tracked objects:
 19884 ;;		On entry : 0/0
 19885 ;;		On exit  : 0/0
 19886 ;;		Unchanged: 0/0
 19887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19892 ;;Total ram usage:        0 bytes
 19893 ;; Hardware stack levels used: 1
 19894 ;; This function calls:
 19895 ;;		Nothing
 19896 ;; This function is called by:
 19897 ;;		_InterruptManager
 19898 ;; This function uses a non-reentrant model
 19899 ;;
 19900                           
 19901                           	psect	text113
 19902   004B8A                     __ptext113:
 19903                           	callstack 0
 19904   004B8A                     _INT0_ISR:
 19905                           	callstack 19
 19906   004B8A                     
 19907                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 420:     (INTCONbits.INT0IF = 0);
 19908   004B8A  92F2               	bcf	242,1,c	;volatile
 19909   004B8C  0012               	return		;funcret
 19910   004B8E                     __end_of_INT0_ISR:
 19911                           	callstack 0
 19912                           
 19913 ;; *************** function _EUSART_TX_ISR *****************
 19914 ;; Defined at:
 19915 ;;		line 348 in file "MCAL_layer/USART/hal_usart.c"
 19916 ;; Parameters:    Size  Location     Type
 19917 ;;		None
 19918 ;; Auto vars:     Size  Location     Type
 19919 ;;		None
 19920 ;; Return value:  Size  Location     Type
 19921 ;;                  1    wreg      void 
 19922 ;; Registers used:
 19923 ;;		None
 19924 ;; Tracked objects:
 19925 ;;		On entry : 0/0
 19926 ;;		On exit  : 0/0
 19927 ;;		Unchanged: 0/0
 19928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19929 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19931 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19932 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19933 ;;Total ram usage:        0 bytes
 19934 ;; Hardware stack levels used: 1
 19935 ;; This function calls:
 19936 ;;		Nothing
 19937 ;; This function is called by:
 19938 ;;		_InterruptManager
 19939 ;; This function uses a non-reentrant model
 19940 ;;
 19941                           
 19942                           	psect	text114
 19943   004B8E                     __ptext114:
 19944                           	callstack 0
 19945   004B8E                     _EUSART_TX_ISR:
 19946                           	callstack 19
 19947   004B8E                     
 19948                           ;MCAL_layer/USART/hal_usart.c: 349:     (PIE1bits.TXIE = 0);
 19949   004B8E  989D               	bcf	157,4,c	;volatile
 19950   004B90  0012               	return		;funcret
 19951   004B92                     __end_of_EUSART_TX_ISR:
 19952                           	callstack 0
 19953                           
 19954 ;; *************** function _EUSART_RX_ISR *****************
 19955 ;; Defined at:
 19956 ;;		line 353 in file "MCAL_layer/USART/hal_usart.c"
 19957 ;; Parameters:    Size  Location     Type
 19958 ;;		None
 19959 ;; Auto vars:     Size  Location     Type
 19960 ;;		None
 19961 ;; Return value:  Size  Location     Type
 19962 ;;                  1    wreg      void 
 19963 ;; Registers used:
 19964 ;;		wreg, status,2, status,0
 19965 ;; Tracked objects:
 19966 ;;		On entry : 0/0
 19967 ;;		On exit  : 0/0
 19968 ;;		Unchanged: 0/0
 19969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19970 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19973 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19974 ;;Total ram usage:        0 bytes
 19975 ;; Hardware stack levels used: 1
 19976 ;; This function calls:
 19977 ;;		Nothing
 19978 ;; This function is called by:
 19979 ;;		_InterruptManager
 19980 ;; This function uses a non-reentrant model
 19981 ;;
 19982                           
 19983                           	psect	text115
 19984   004B9A                     __ptext115:
 19985                           	callstack 0
 19986   004B9A                     _EUSART_RX_ISR:
 19987                           	callstack 19
 19988   004B9A  0012               	return		;funcret
 19989   004B9C                     __end_of_EUSART_RX_ISR:
 19990                           	callstack 0
 19991                           
 19992 ;; *************** function _CCP2_ISR *****************
 19993 ;; Defined at:
 19994 ;;		line 518 in file "MCAL_layer/CCP/hal_ccp.c"
 19995 ;; Parameters:    Size  Location     Type
 19996 ;;		None
 19997 ;; Auto vars:     Size  Location     Type
 19998 ;;		None
 19999 ;; Return value:  Size  Location     Type
 20000 ;;                  1    wreg      void 
 20001 ;; Registers used:
 20002 ;;		None
 20003 ;; Tracked objects:
 20004 ;;		On entry : 0/0
 20005 ;;		On exit  : 0/0
 20006 ;;		Unchanged: 0/0
 20007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20012 ;;Total ram usage:        0 bytes
 20013 ;; Hardware stack levels used: 1
 20014 ;; This function calls:
 20015 ;;		Nothing
 20016 ;; This function is called by:
 20017 ;;		_InterruptManager
 20018 ;; This function uses a non-reentrant model
 20019 ;;
 20020                           
 20021                           	psect	text116
 20022   004B92                     __ptext116:
 20023                           	callstack 0
 20024   004B92                     _CCP2_ISR:
 20025                           	callstack 19
 20026   004B92                     
 20027                           ;MCAL_layer/CCP/hal_ccp.c: 520:     (PIR2bits.CCP2IF = 0);
 20028   004B92  90A1               	bcf	161,0,c	;volatile
 20029   004B94  0012               	return		;funcret
 20030   004B96                     __end_of_CCP2_ISR:
 20031                           	callstack 0
 20032                           
 20033 ;; *************** function _CCP1_ISR *****************
 20034 ;; Defined at:
 20035 ;;		line 511 in file "MCAL_layer/CCP/hal_ccp.c"
 20036 ;; Parameters:    Size  Location     Type
 20037 ;;		None
 20038 ;; Auto vars:     Size  Location     Type
 20039 ;;		None
 20040 ;; Return value:  Size  Location     Type
 20041 ;;                  1    wreg      void 
 20042 ;; Registers used:
 20043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 20044 ;; Tracked objects:
 20045 ;;		On entry : 0/0
 20046 ;;		On exit  : 0/0
 20047 ;;		Unchanged: 0/0
 20048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20053 ;;Total ram usage:        0 bytes
 20054 ;; Hardware stack levels used: 1
 20055 ;; Hardware stack levels required when called: 2
 20056 ;; This function calls:
 20057 ;;		NULL
 20058 ;;		_CCP1_DefaultISR
 20059 ;; This function is called by:
 20060 ;;		_InterruptManager
 20061 ;; This function uses a non-reentrant model
 20062 ;;
 20063                           
 20064                           	psect	text117
 20065   0047A8                     __ptext117:
 20066                           	callstack 0
 20067   0047A8                     _CCP1_ISR:
 20068                           	callstack 17
 20069   0047A8                     
 20070                           ;MCAL_layer/CCP/hal_ccp.c: 513:     (PIR1bits.CCP1IF = 0);
 20071   0047A8  949E               	bcf	158,2,c	;volatile
 20072   0047AA                     
 20073                           ;MCAL_layer/CCP/hal_ccp.c: 515:     if(CCP1_InterrptHandle) CCP1_InterrptHandle();
 20074   0047AA  0100               	movlb	0	; () banked
 20075   0047AC  51BF               	movf	_CCP1_InterrptHandle& (0+255),w,b
 20076   0047AE  11C0               	iorwf	(_CCP1_InterrptHandle+1)& (0+255),w,b
 20077   0047B0  B4D8               	btfsc	status,2,c
 20078   0047B2  EFDD  F023         	goto	i2u829_41
 20079   0047B6  EFDF  F023         	goto	i2u829_40
 20080   0047BA                     i2u829_41:
 20081   0047BA  EFEB  F023         	goto	i2l866
 20082   0047BE                     i2u829_40:
 20083   0047BE                     
 20084                           ; BSR set to: 0
 20085   0047BE  D802               	call	i2u830_48
 20086   0047C0  EFEB  F023         	goto	i2u830_49
 20087   0047C4                     i2u830_48:
 20088   0047C4  0005               	push	
 20089   0047C6  6EFA               	movwf	pclath,c
 20090   0047C8  51BF               	movf	_CCP1_InterrptHandle& (0+255),w,b
 20091   0047CA  6EFD               	movwf	tosl,c
 20092   0047CC  51C0               	movf	(_CCP1_InterrptHandle+1)& (0+255),w,b
 20093   0047CE  6EFE               	movwf	tosh,c
 20094   0047D0  6AFF               	clrf	tosu,c
 20095   0047D2  50FA               	movf	pclath,w,c
 20096   0047D4  0012               	return		;indir
 20097   0047D6                     i2u830_49:
 20098   0047D6                     i2l866:
 20099   0047D6  0012               	return		;funcret
 20100   0047D8                     __end_of_CCP1_ISR:
 20101                           	callstack 0
 20102                           
 20103 ;; *************** function _CCP1_DefaultISR *****************
 20104 ;; Defined at:
 20105 ;;		line 17 in file "ECU_layer/Servo_Motor/ecu_servoMotor.c"
 20106 ;; Parameters:    Size  Location     Type
 20107 ;;		None
 20108 ;; Auto vars:     Size  Location     Type
 20109 ;;		None
 20110 ;; Return value:  Size  Location     Type
 20111 ;;                  1    wreg      void 
 20112 ;; Registers used:
 20113 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20114 ;; Tracked objects:
 20115 ;;		On entry : 0/0
 20116 ;;		On exit  : 0/0
 20117 ;;		Unchanged: 0/0
 20118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20123 ;;Total ram usage:        0 bytes
 20124 ;; Hardware stack levels used: 1
 20125 ;; Hardware stack levels required when called: 1
 20126 ;; This function calls:
 20127 ;;		_CCPx_CompareMode_WriteData
 20128 ;;		_Timer1_Write_Value
 20129 ;; This function is called by:
 20130 ;;		_Servo_Init
 20131 ;;		_CCP1_ISR
 20132 ;; This function uses a non-reentrant model
 20133 ;;
 20134                           
 20135                           	psect	text118
 20136   003D44                     __ptext118:
 20137                           	callstack 0
 20138   003D44                     _CCP1_DefaultISR:
 20139                           	callstack 17
 20140   003D44                     
 20141                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 18:     CCP1_flag++;
 20142   003D44  2A24               	incf	_CCP1_flag^0,f,c	;volatile
 20143   003D46                     
 20144                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 19:     ret = Timer1_Write_Value(&timer1_obj, 0
      +                          );
 20145   003D46  0E83               	movlw	low _timer1_obj
 20146   003D48  6E01               	movwf	Timer1_Write_Value@_timer1^0,c
 20147   003D4A  0E01               	movlw	high _timer1_obj
 20148   003D4C  6E02               	movwf	(Timer1_Write_Value@_timer1+1)^0,c
 20149   003D4E  0E00               	movlw	0
 20150   003D50  6E04               	movwf	(Timer1_Write_Value@_value+1)^0,c
 20151   003D52  0E00               	movlw	0
 20152   003D54  6E03               	movwf	Timer1_Write_Value@_value^0,c
 20153   003D56  EC53  F024         	call	_Timer1_Write_Value	;wreg free
 20154   003D5A  0100               	movlb	0	; () banked
 20155   003D5C  6FC3               	movwf	_ret@ecu_servoMotor$F5789& (0+255),b
 20156   003D5E                     
 20157                           ; BSR set to: 0
 20158                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 20:     if(1 == CCP1_flag){
 20159   003D5E  0424               	decf	_CCP1_flag^0,w,c	;volatile
 20160   003D60  A4D8               	btfss	status,2,c
 20161   003D62  EFB5  F01E         	goto	i2u808_41
 20162   003D66  EFB7  F01E         	goto	i2u808_40
 20163   003D6A                     i2u808_41:
 20164   003D6A  EFC7  F01E         	goto	i2l9807
 20165   003D6E                     i2u808_40:
 20166   003D6E                     
 20167                           ; BSR set to: 0
 20168                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 21:         ret = CCPx_CompareMode_WriteData(&C
      +                          CP1_obj, PWM_Val);
 20169   003D6E  0ECA               	movlw	low _CCP1_obj
 20170   003D70  6E01               	movwf	CCPx_CompareMode_WriteData@_CCPx^0,c
 20171   003D72  C022  F002         	movff	_PWM_Val,CCPx_CompareMode_WriteData@_Data	;volatile
 20172   003D76  C023  F003         	movff	_PWM_Val+1,CCPx_CompareMode_WriteData@_Data+1	;volatile
 20173   003D7A  EC1E  F021         	call	_CCPx_CompareMode_WriteData	;wreg free
 20174   003D7E  0100               	movlb	0	; () banked
 20175   003D80  6FC3               	movwf	_ret@ecu_servoMotor$F5789& (0+255),b
 20176   003D82                     
 20177                           ; BSR set to: 0
 20178                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 22:         (CCP1CONbits.CCP1M = (uint8)0x09);
 20179   003D82  50BD               	movf	189,w,c	;volatile
 20180   003D84  0BF0               	andlw	-16
 20181   003D86  0909               	iorlw	9
 20182   003D88  6EBD               	movwf	189,c	;volatile
 20183                           
 20184                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 23:     }
 20185   003D8A  EFE3  F01E         	goto	i2l2633
 20186   003D8E                     i2l9807:
 20187                           
 20188                           ; BSR set to: 0
 20189   003D8E  0E02               	movlw	2
 20190   003D90  1824               	xorwf	_CCP1_flag^0,w,c	;volatile
 20191   003D92  A4D8               	btfss	status,2,c
 20192   003D94  EFCE  F01E         	goto	i2u809_41
 20193   003D98  EFD0  F01E         	goto	i2u809_40
 20194   003D9C                     i2u809_41:
 20195   003D9C  EFE3  F01E         	goto	i2l2633
 20196   003DA0                     i2u809_40:
 20197   003DA0                     
 20198                           ; BSR set to: 0
 20199                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 25:         ret = CCPx_CompareMode_WriteData(&C
      +                          CP1_obj, 20000 - PWM_Val);
 20200   003DA0  0ECA               	movlw	low _CCP1_obj
 20201   003DA2  6E01               	movwf	CCPx_CompareMode_WriteData@_CCPx^0,c
 20202   003DA4  5022               	movf	_PWM_Val^0,w,c	;volatile
 20203   003DA6  0820               	sublw	32
 20204   003DA8  6E02               	movwf	CCPx_CompareMode_WriteData@_Data^0,c
 20205   003DAA  5023               	movf	(_PWM_Val+1)^0,w,c	;volatile
 20206   003DAC  A0D8               	btfss	status,0,c
 20207   003DAE  2AE8               	incf	wreg,f,c
 20208   003DB0  084E               	sublw	78
 20209   003DB2  6E03               	movwf	(CCPx_CompareMode_WriteData@_Data+1)^0,c
 20210   003DB4  EC1E  F021         	call	_CCPx_CompareMode_WriteData	;wreg free
 20211   003DB8  0100               	movlb	0	; () banked
 20212   003DBA  6FC3               	movwf	_ret@ecu_servoMotor$F5789& (0+255),b
 20213   003DBC                     
 20214                           ; BSR set to: 0
 20215                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 26:         (CCP1CONbits.CCP1M = (uint8)0x08);
 20216   003DBC  50BD               	movf	189,w,c	;volatile
 20217   003DBE  0BF0               	andlw	-16
 20218   003DC0  0908               	iorlw	8
 20219   003DC2  6EBD               	movwf	189,c	;volatile
 20220   003DC4                     
 20221                           ; BSR set to: 0
 20222                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 27:         CCP1_flag = 0;
 20223   003DC4  6A24               	clrf	_CCP1_flag^0,c	;volatile
 20224   003DC6                     i2l2633:
 20225                           
 20226                           ; BSR set to: 0
 20227   003DC6  0012               	return		;funcret
 20228   003DC8                     __end_of_CCP1_DefaultISR:
 20229                           	callstack 0
 20230                           
 20231 ;; *************** function _Timer1_Write_Value *****************
 20232 ;; Defined at:
 20233 ;;		line 72 in file "MCAL_layer/Timer1/hal_timer1.c"
 20234 ;; Parameters:    Size  Location     Type
 20235 ;;  _timer1         2    0[COMRAM] PTR const struct .
 20236 ;;		 -> timer1_obj(6), 
 20237 ;;  _value          2    2[COMRAM] unsigned short 
 20238 ;; Auto vars:     Size  Location     Type
 20239 ;;  ret             1    4[COMRAM] unsigned char 
 20240 ;; Return value:  Size  Location     Type
 20241 ;;                  1    wreg      unsigned char 
 20242 ;; Registers used:
 20243 ;;		wreg, status,2, status,0
 20244 ;; Tracked objects:
 20245 ;;		On entry : 0/0
 20246 ;;		On exit  : 0/0
 20247 ;;		Unchanged: 0/0
 20248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20249 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20250 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20252 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20253 ;;Total ram usage:        5 bytes
 20254 ;; Hardware stack levels used: 1
 20255 ;; This function calls:
 20256 ;;		Nothing
 20257 ;; This function is called by:
 20258 ;;		_CCP1_DefaultISR
 20259 ;;		_Timer1_Init
 20260 ;; This function uses a non-reentrant model
 20261 ;;
 20262                           
 20263                           	psect	text119
 20264   0048A6                     __ptext119:
 20265                           	callstack 0
 20266   0048A6                     _Timer1_Write_Value:
 20267                           	callstack 17
 20268   0048A6                     
 20269                           ;MCAL_layer/Timer1/hal_timer1.c: 74:     if(((void*)0) == _timer1){
 20270   0048A6  5001               	movf	Timer1_Write_Value@_timer1^0,w,c
 20271   0048A8  1002               	iorwf	(Timer1_Write_Value@_timer1+1)^0,w,c
 20272   0048AA  A4D8               	btfss	status,2,c
 20273   0048AC  EF5A  F024         	goto	i2u745_41
 20274   0048B0  EF5C  F024         	goto	i2u745_40
 20275   0048B4                     i2u745_41:
 20276   0048B4  EF5F  F024         	goto	i2l9295
 20277   0048B8                     i2u745_40:
 20278   0048B8                     
 20279                           ;MCAL_layer/Timer1/hal_timer1.c: 75:         ret = (STD_ReturnType)0x00;
 20280   0048B8  6A05               	clrf	Timer1_Write_Value@ret^0,c
 20281                           
 20282                           ;MCAL_layer/Timer1/hal_timer1.c: 76:     }
 20283   0048BA  EF65  F024         	goto	i2l1950
 20284   0048BE                     i2l9295:
 20285                           
 20286                           ;MCAL_layer/Timer1/hal_timer1.c: 79:         TMR1H = (uint8)(_value >> 8);
 20287   0048BE  5004               	movf	(Timer1_Write_Value@_value+1)^0,w,c
 20288   0048C0  6ECF               	movwf	207,c	;volatile
 20289   0048C2                     
 20290                           ;MCAL_layer/Timer1/hal_timer1.c: 80:         TMR1L = (uint8)(_value);
 20291   0048C2  C003  FFCE         	movff	Timer1_Write_Value@_value,4046	;volatile
 20292                           
 20293                           ;MCAL_layer/Timer1/hal_timer1.c: 82:         ret = (STD_ReturnType)0x01;
 20294   0048C6  0E01               	movlw	1
 20295   0048C8  6E05               	movwf	Timer1_Write_Value@ret^0,c
 20296   0048CA                     i2l1950:
 20297                           
 20298                           ;MCAL_layer/Timer1/hal_timer1.c: 84:     return ret;
 20299   0048CA  5005               	movf	Timer1_Write_Value@ret^0,w,c
 20300   0048CC  0012               	return		;funcret
 20301   0048CE                     __end_of_Timer1_Write_Value:
 20302                           	callstack 0
 20303                           
 20304 ;; *************** function _CCPx_CompareMode_WriteData *****************
 20305 ;; Defined at:
 20306 ;;		line 212 in file "MCAL_layer/CCP/hal_ccp.c"
 20307 ;; Parameters:    Size  Location     Type
 20308 ;;  _CCPx           1    0[COMRAM] PTR const struct .
 20309 ;;		 -> CCP1_obj(11), 
 20310 ;;  _Data           2    1[COMRAM] unsigned short 
 20311 ;; Auto vars:     Size  Location     Type
 20312 ;;  CCPx_reg        2    5[COMRAM] struct .
 20313 ;;  ret             1    4[COMRAM] unsigned char 
 20314 ;; Return value:  Size  Location     Type
 20315 ;;                  1    wreg      unsigned char 
 20316 ;; Registers used:
 20317 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 20318 ;; Tracked objects:
 20319 ;;		On entry : 0/0
 20320 ;;		On exit  : 0/0
 20321 ;;		Unchanged: 0/0
 20322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20323 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20324 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20325 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20326 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20327 ;;Total ram usage:        7 bytes
 20328 ;; Hardware stack levels used: 1
 20329 ;; This function calls:
 20330 ;;		Nothing
 20331 ;; This function is called by:
 20332 ;;		_CCP1_DefaultISR
 20333 ;;		_Servo_Set_Angle
 20334 ;; This function uses a non-reentrant model
 20335 ;;
 20336                           
 20337                           	psect	text120
 20338   00423C                     __ptext120:
 20339                           	callstack 0
 20340   00423C                     _CCPx_CompareMode_WriteData:
 20341                           	callstack 17
 20342   00423C                     
 20343                           ;MCAL_layer/CCP/hal_ccp.c: 215:     if(((void*)0) == _CCPx){
 20344   00423C  5001               	movf	CCPx_CompareMode_WriteData@_CCPx^0,w,c
 20345   00423E  A4D8               	btfss	status,2,c
 20346   004240  EF24  F021         	goto	i2u742_41
 20347   004244  EF26  F021         	goto	i2u742_40
 20348   004248                     i2u742_41:
 20349   004248  EF29  F021         	goto	i2l817
 20350   00424C                     i2u742_40:
 20351   00424C                     
 20352                           ;MCAL_layer/CCP/hal_ccp.c: 216:         ret = (STD_ReturnType)0x00;
 20353   00424C  6A05               	clrf	CCPx_CompareMode_WriteData@ret^0,c
 20354                           
 20355                           ;MCAL_layer/CCP/hal_ccp.c: 217:     }
 20356   00424E  EF4F  F021         	goto	i2l818
 20357   004252                     i2l817:
 20358                           
 20359                           ;MCAL_layer/CCP/hal_ccp.c: 219:         CCPx_reg.CCPR_16BIT = _Data;
 20360   004252  C002  F006         	movff	CCPx_CompareMode_WriteData@_Data,CCPx_CompareMode_WriteData@CCPx_reg
 20361   004256  C003  F007         	movff	CCPx_CompareMode_WriteData@_Data+1,CCPx_CompareMode_WriteData@CCPx_reg+1
 20362   00425A                     
 20363                           ;MCAL_layer/CCP/hal_ccp.c: 220:         if(CCP1_SELECTED == _CCPx->CCPx_Instance){
 20364   00425A  5001               	movf	CCPx_CompareMode_WriteData@_CCPx^0,w,c
 20365   00425C  6ED9               	movwf	fsr2l,c
 20366   00425E  6ADA               	clrf	fsr2h,c
 20367   004260  50DF               	movf	indf2,w,c
 20368   004262  A4D8               	btfss	status,2,c
 20369   004264  EF36  F021         	goto	i2u743_41
 20370   004268  EF38  F021         	goto	i2u743_40
 20371   00426C                     i2u743_41:
 20372   00426C  EF3E  F021         	goto	i2l9273
 20373   004270                     i2u743_40:
 20374   004270                     
 20375                           ;MCAL_layer/CCP/hal_ccp.c: 221:             CCPR1L = CCPx_reg.CCPR_LOW;
 20376   004270  C006  FFBE         	movff	CCPx_CompareMode_WriteData@CCPx_reg,4030	;volatile
 20377                           
 20378                           ;MCAL_layer/CCP/hal_ccp.c: 222:             CCPR1H = CCPx_reg.CCPR_HIGH;
 20379   004274  C007  FFBF         	movff	CCPx_CompareMode_WriteData@CCPx_reg+1,4031	;volatile
 20380                           
 20381                           ;MCAL_layer/CCP/hal_ccp.c: 223:         }
 20382   004278  EF4D  F021         	goto	i2l9277
 20383   00427C                     i2l9273:
 20384   00427C  5001               	movf	CCPx_CompareMode_WriteData@_CCPx^0,w,c
 20385   00427E  6ED9               	movwf	fsr2l,c
 20386   004280  6ADA               	clrf	fsr2h,c
 20387   004282  04DE               	decf	postinc2,w,c
 20388   004284  A4D8               	btfss	status,2,c
 20389   004286  EF47  F021         	goto	i2u744_41
 20390   00428A  EF49  F021         	goto	i2u744_40
 20391   00428E                     i2u744_41:
 20392   00428E  EF4D  F021         	goto	i2l9277
 20393   004292                     i2u744_40:
 20394   004292                     
 20395                           ;MCAL_layer/CCP/hal_ccp.c: 225:             CCPR2L = CCPx_reg.CCPR_LOW;
 20396   004292  C006  FFBB         	movff	CCPx_CompareMode_WriteData@CCPx_reg,4027	;volatile
 20397                           
 20398                           ;MCAL_layer/CCP/hal_ccp.c: 226:             CCPR2H = CCPx_reg.CCPR_HIGH;
 20399   004296  C007  FFBC         	movff	CCPx_CompareMode_WriteData@CCPx_reg+1,4028	;volatile
 20400   00429A                     i2l9277:
 20401                           
 20402                           ;MCAL_layer/CCP/hal_ccp.c: 231:         ret = (STD_ReturnType)0x01;
 20403   00429A  0E01               	movlw	1
 20404   00429C  6E05               	movwf	CCPx_CompareMode_WriteData@ret^0,c
 20405   00429E                     i2l818:
 20406                           
 20407                           ;MCAL_layer/CCP/hal_ccp.c: 233:     return ret;
 20408   00429E  5005               	movf	CCPx_CompareMode_WriteData@ret^0,w,c
 20409   0042A0  0012               	return		;funcret
 20410   0042A2                     __end_of_CCPx_CompareMode_WriteData:
 20411                           	callstack 0
 20412                           
 20413 ;; *************** function _ADC_ISR *****************
 20414 ;; Defined at:
 20415 ;;		line 253 in file "MCAL_layer/ADC/hal_adc.c"
 20416 ;; Parameters:    Size  Location     Type
 20417 ;;		None
 20418 ;; Auto vars:     Size  Location     Type
 20419 ;;		None
 20420 ;; Return value:  Size  Location     Type
 20421 ;;                  1    wreg      void 
 20422 ;; Registers used:
 20423 ;;		None
 20424 ;; Tracked objects:
 20425 ;;		On entry : 0/0
 20426 ;;		On exit  : 0/0
 20427 ;;		Unchanged: 0/0
 20428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20433 ;;Total ram usage:        0 bytes
 20434 ;; Hardware stack levels used: 1
 20435 ;; This function calls:
 20436 ;;		Nothing
 20437 ;; This function is called by:
 20438 ;;		_InterruptManager
 20439 ;; This function uses a non-reentrant model
 20440 ;;
 20441                           
 20442                           	psect	text121
 20443   004B96                     __ptext121:
 20444                           	callstack 0
 20445   004B96                     _ADC_ISR:
 20446                           	callstack 19
 20447   004B96                     
 20448                           ;MCAL_layer/ADC/hal_adc.c: 255:         (PIR1bits.ADIF = 0);
 20449   004B96  9C9E               	bcf	158,6,c	;volatile
 20450   004B98  0012               	return		;funcret
 20451   004B9A                     __end_of_ADC_ISR:
 20452                           	callstack 0
 20453                           
 20454                           	psect	rparam
 20455   000001                     ___rparam_used  equ	1
 20456   000000                     ___param_bank   equ	0
 20457   000000                     __Lparam        equ	__Lrparam
 20458   000000                     __Hparam        equ	__Hrparam
 20459                           
 20460                           	psect	temp
 20461   00003F                     btemp:
 20462                           	callstack 0
 20463   00003F                     	ds	1
 20464   00003F                     int$flags       set	btemp
 20465   000040                     wtemp8          set	btemp+1
 20466   000040                     ttemp5          set	btemp+1
 20467   000043                     ttemp6          set	btemp+4
 20468   000047                     ttemp7          set	btemp+8
 20469                           
 20470                           	psect	config
 20471                           
 20472                           ; Padding undefined space
 20473   300000                     	org	3145728
 20474   300000  FF                 	db	255
 20475                           
 20476                           ;Config register CONFIG1H @ 0x300001
 20477                           ;	Oscillator Selection bits
 20478                           ;	FOSC = HS, HS oscillator
 20479                           ;	Fail-Safe Clock Monitor Enable bit
 20480                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 20481                           ;	Internal/External Oscillator Switchover bit
 20482                           ;	IESO = OFF, Oscillator Switchover mode disabled
 20483   300001                     	org	3145729
 20484   300001  02                 	db	2
 20485                           
 20486                           ;Config register CONFIG2L @ 0x300002
 20487                           ;	Power-up Timer Enable bit
 20488                           ;	PWRTEN = OFF, PWRT disabled
 20489                           ;	Brown-out Reset Enable bits
 20490                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 20491                           ;	Brown Out Reset Voltage bits
 20492                           ;	BORV = 18, VBOR set to 1.8 V nominal
 20493   300002                     	org	3145730
 20494   300002  1F                 	db	31
 20495                           
 20496                           ;Config register CONFIG2H @ 0x300003
 20497                           ;	Watchdog Timer Enable bit
 20498                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 20499                           ;	Watchdog Timer Postscale Select bits
 20500                           ;	WDTPS = 32768, 1:32768
 20501   300003                     	org	3145731
 20502   300003  1E                 	db	30
 20503                           
 20504                           ; Padding undefined space
 20505   300004                     	org	3145732
 20506   300004  FF                 	db	255
 20507                           
 20508                           ;Config register CONFIG3H @ 0x300005
 20509                           ;	CCP2 MUX bit
 20510                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 20511                           ;	PORTB A/D Enable bit
 20512                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 20513                           ;	Low-Power Timer1 Oscillator Enable bit
 20514                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 20515                           ;	HFINTOSC Fast Start-up
 20516                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 20517                           ;	MCLR Pin Enable bit
 20518                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 20519   300005                     	org	3145733
 20520   300005  8B                 	db	139
 20521                           
 20522                           ;Config register CONFIG4L @ 0x300006
 20523                           ;	Stack Full/Underflow Reset Enable bit
 20524                           ;	STVREN = ON, Stack full/underflow will cause Reset
 20525                           ;	Single-Supply ICSP Enable bit
 20526                           ;	LVP = ON, Single-Supply ICSP enabled
 20527                           ;	Extended Instruction Set Enable bit
 20528                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 20529                           ;	Background Debugger Enable bit
 20530                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 20531   300006                     	org	3145734
 20532   300006  85                 	db	133
 20533                           
 20534                           ; Padding undefined space
 20535   300007                     	org	3145735
 20536   300007  FF                 	db	255
 20537                           
 20538                           ;Config register CONFIG5L @ 0x300008
 20539                           ;	Code Protection Block 0
 20540                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 20541                           ;	Code Protection Block 1
 20542                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 20543                           ;	Code Protection Block 2
 20544                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 20545                           ;	Code Protection Block 3
 20546                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 20547   300008                     	org	3145736
 20548   300008  0F                 	db	15
 20549                           
 20550                           ;Config register CONFIG5H @ 0x300009
 20551                           ;	Boot Block Code Protection bit
 20552                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 20553                           ;	Data EEPROM Code Protection bit
 20554                           ;	CPD = OFF, Data EEPROM not code-protected
 20555   300009                     	org	3145737
 20556   300009  C0                 	db	192
 20557                           
 20558                           ;Config register CONFIG6L @ 0x30000A
 20559                           ;	Write Protection Block 0
 20560                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 20561                           ;	Write Protection Block 1
 20562                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 20563                           ;	Write Protection Block 2
 20564                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 20565                           ;	Write Protection Block 3
 20566                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 20567   30000A                     	org	3145738
 20568   30000A  0F                 	db	15
 20569                           
 20570                           ;Config register CONFIG6H @ 0x30000B
 20571                           ;	Configuration Register Write Protection bit
 20572                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 20573                           ;	Boot Block Write Protection bit
 20574                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 20575                           ;	Data EEPROM Write Protection bit
 20576                           ;	WRTD = OFF, Data EEPROM not write-protected
 20577   30000B                     	org	3145739
 20578   30000B  E0                 	db	224
 20579                           
 20580                           ;Config register CONFIG7L @ 0x30000C
 20581                           ;	Table Read Protection Block 0
 20582                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 20583                           ;	Table Read Protection Block 1
 20584                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 20585                           ;	Table Read Protection Block 2
 20586                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 20587                           ;	Table Read Protection Block 3
 20588                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 20589   30000C                     	org	3145740
 20590   30000C  0F                 	db	15
 20591                           
 20592                           ;Config register CONFIG7H @ 0x30000D
 20593                           ;	Boot Block Table Read Protection bit
 20594                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 20595   30000D                     	org	3145741
 20596   30000D  40                 	db	64
 20597                           tosu	equ	0xFFF
 20598                           tosh	equ	0xFFE
 20599                           tosl	equ	0xFFD
 20600                           stkptr	equ	0xFFC
 20601                           pclatu	equ	0xFFB
 20602                           pclath	equ	0xFFA
 20603                           pcl	equ	0xFF9
 20604                           tblptru	equ	0xFF8
 20605                           tblptrh	equ	0xFF7
 20606                           tblptrl	equ	0xFF6
 20607                           tablat	equ	0xFF5
 20608                           prodh	equ	0xFF4
 20609                           prodl	equ	0xFF3
 20610                           indf0	equ	0xFEF
 20611                           postinc0	equ	0xFEE
 20612                           postdec0	equ	0xFED
 20613                           preinc0	equ	0xFEC
 20614                           plusw0	equ	0xFEB
 20615                           fsr0h	equ	0xFEA
 20616                           fsr0l	equ	0xFE9
 20617                           wreg	equ	0xFE8
 20618                           indf1	equ	0xFE7
 20619                           postinc1	equ	0xFE6
 20620                           postdec1	equ	0xFE5
 20621                           preinc1	equ	0xFE4
 20622                           plusw1	equ	0xFE3
 20623                           fsr1h	equ	0xFE2
 20624                           fsr1l	equ	0xFE1
 20625                           bsr	equ	0xFE0
 20626                           indf2	equ	0xFDF
 20627                           postinc2	equ	0xFDE
 20628                           postdec2	equ	0xFDD
 20629                           preinc2	equ	0xFDC
 20630                           plusw2	equ	0xFDB
 20631                           fsr2h	equ	0xFDA
 20632                           fsr2l	equ	0xFD9
 20633                           status	equ	0xFD8

Data Sizes:
    Strings     39
    Constant    32
    Data        74
    BSS         171
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      62
    BANK0           160     41     160
    BANK1           256     38     137
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_Conversion_Result@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Init@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Interrupt_Configuration@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Result_Format_Control@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ADC_Voltage_Reference_Control@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    CCP1_InterrptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), NULL(), 

    CCP1_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCP1_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP2_InterrptHandle	PTR FTN()void  size(2) Largest target is 2
		 -> CCP1_obj$CCP2_InterruptHandler(BANK0[2]), NULL(), 

    CCPx_Compare_mode_config@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Compare_mode_config@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_CompareMode_IsComplete@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_CompareMode_IsComplete@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_CompareMode_WriteData@_CCPx	PTR const struct . size(1) Largest target is 11
		 -> CCP1_obj(BANK0[11]), 

    CCPx_CompareMode_WriteData@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_CompareMode_WriteData@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_Deinit@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Deinit@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_Init@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Init@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_Interrupt_Configuration@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Interrupt_Configuration@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_Timer_Config@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Timer_Config@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ECU_LCD_4Bit_Initialize@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    ECU_LCD_4Bit_Send_char_Data@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    ECU_LCD_4Bit_Send_Command@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    ECU_LCD_4Bit_Send_String_Data_Postition@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    ECU_LCD_4Bit_Send_String_Data_Postition@_Str	PTR unsigned char  size(2) Largest target is 18
		 -> REALTIMECLOCK_DS1307_Data(BANK1[18]), STR_1(CODE[11]), STR_2(CODE[9]), STR_3(CODE[9]), 

    EUSART_ASYNC_Init@_EUSART	PTR const struct . size(2) Largest target is 17
		 -> UART_obj(BANK1[17]), 

    EUSART_ASYNC_WriteStringBlocking@_Byte	PTR unsigned char  size(2) Largest target is 18
		 -> REALTIMECLOCK_DS1307_Data(BANK1[18]), STR_7(CODE[7]), 

    EUSART_BaudRateCalculation@_EUSART	PTR const struct . size(2) Largest target is 17
		 -> UART_obj(BANK1[17]), 

    EUSART_BaudRateCalculation@_EUSART$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_BaudRateCalculation@_EUSART$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_BaudRateCalculation@_EUSART$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_BaudRateCalculation@_EUSART$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RX_Init@_EUSART	PTR const struct . size(2) Largest target is 17
		 -> UART_obj(BANK1[17]), 

    EUSART_RX_Init@_EUSART$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_RX_Init@_EUSART$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_RX_Init@_EUSART$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_RX_Init@_EUSART$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TX_Init@_EUSART	PTR const struct . size(2) Largest target is 17
		 -> UART_obj(BANK1[17]), 

    EUSART_TX_Init@_EUSART$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TX_Init@_EUSART$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TX_Init@_EUSART$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TX_Init@_EUSART$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> Convert_uint16_to_string@Temp_String(COMRAM[6]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@pinConfig	PTR const struct . size(2) Largest target is 8
		 -> CCP1_obj$CCPx_PIN$port(BANK0[1]), ECU_Relay_Initialize@relay_t(COMRAM[1]), keypad_1(BANK1[8]), keypad_1$KeypadColoumnsConfig(BANK1[4]), 
		 -> keypad_1$KeypadRowsConfig(BANK1[4]), LCD_1(COMRAM[6]), LCD_1$DataPins(COMRAM[4]), LED_init@LED(COMRAM[1]), 
		 -> pinRC6(COMRAM[1]), pinRC7(COMRAM[1]), 

    gpio_pin_initialize@pinConfig	PTR const struct . size(2) Largest target is 8
		 -> CCP1_obj$CCPx_PIN$port(BANK0[1]), ECU_Relay_Initialize@relay_t(COMRAM[1]), keypad_1(BANK1[8]), keypad_1$KeypadRowsConfig(BANK1[4]), 
		 -> LCD_1(COMRAM[6]), LCD_1$DataPins(COMRAM[4]), pinRC6(COMRAM[1]), pinRC7(COMRAM[1]), 

    gpio_pin_read_logic@logic	PTR enum E3381 size(1) Largest target is 1
		 -> ECU_Button_Read@Get_buuton_logic(COMRAM[1]), keyPad_Read@coloumn_logic(BANK0[1]), 

    gpio_pin_read_logic@pinConfig	PTR const struct . size(2) Largest target is 8
		 -> keypad_1(BANK1[8]), keypad_1$KeypadColoumnsConfig(BANK1[4]), 

    gpio_pin_write_logic@pinConfig	PTR const struct . size(2) Largest target is 8
		 -> CCP1_obj$CCPx_PIN$port(BANK0[1]), ECU_Relay_Initialize@relay_t(COMRAM[1]), ECU_Relay_turnOFF@relay_t(COMRAM[1]), ECU_Relay_turnON@relay_t(COMRAM[1]), 
		 -> keypad_1(BANK1[8]), keypad_1$KeypadRowsConfig(BANK1[4]), LCD_1(COMRAM[6]), LCD_1$DataPins(COMRAM[4]), 
		 -> LED_turnOFF@LED(COMRAM[1]), LED_turnON@LED(COMRAM[1]), pinRC6(COMRAM[1]), pinRC7(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    i2c_fsmStateTable	const PTR FTN()enum E3128[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_Init@_I2C$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Init@_I2C$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    I2C_Init@_I2C$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_Config@_I2C$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_Config@_I2C$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_Config@_I2C$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Configuration@_I2C$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Configuration@_I2C$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Configuration@_I2C$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> bufferBlock$data(COMRAM[2]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read1ByteRegister@returnValue$data(COMRAM[2]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read2ByteRegister@returnValue$data(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@data$data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@data$data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_Slave_Mode_Configuration@_I2C$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configuration@_I2C$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configuration@_I2C$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMRAM[2]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read1ByteRegister@returnValue$data(COMRAM[2]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read2ByteRegister@returnValue$data(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@data$data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@data$data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    Interrupt_INT0_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INT1_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INT2_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_Init@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Set_Handler@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RB4_Handler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB4_Handler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB5_Handler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB5_Handler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB6_Handler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB6_Handler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB7_Handler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB7_Handler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RBx_Pin_Init@RBx$Interrupt_Handle_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@RBx$Interrupt_Handle_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Set_Handler@RBx$Interrupt_Handle_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Set_Handler@RBx$Interrupt_Handle_LOW	PTR FTN()void  size(2) Largest target is 0

    keyPad_Initialize@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad_1(BANK1[8]), 

    keyPad_Read@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad_1(BANK1[8]), 

    keyPad_Read@keypad_value	PTR unsigned char  size(1) Largest target is 1
		 -> nextBack(COMRAM[1]), NumberPressed(BANK0[1]), userInput(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(1) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    LCD_4Bits_Send_Enable_Signal@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    LCD_4Bits_Set_Curser@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    LCD_Send_4Bits@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    NULL$0	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    PinsConfig@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    port_registers	PTR volatile unsigned char [5] size(1) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    S1249$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S1606$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    S1606$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2220$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2220$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    S2220$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    S224$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    S2656$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2699$Interrupt_Handle_HIGH	PTR FTN()void  size(2) Largest target is 0

    S2699$Interrupt_Handle_LOW	PTR FTN()void  size(2) Largest target is 0

    S3458$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4001$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S4253$TIMER2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4402$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S453$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S453$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S453$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S453$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Write1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    S4642$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4642$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4642$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4642$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S6339$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> Convert_uint16_to_string@Temp_String(COMRAM[6]), 

    S6339$source	PTR const unsigned char  size(2) Largest target is 0

    S96$data	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    sp__REALTIMECLOCK_DS1307_print_Data	PTR unsigned char  size(2) Largest target is 18
		 -> REALTIMECLOCK_DS1307_Data(BANK1[18]), 

    SPI_Clock_Phase_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_Clock_polarity_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_Interrupt_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    SPI_Mode_Variant_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_Sample_Mode_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    timer0_1$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_Deinit@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Init@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Init@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_Interrupt_Configuration@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Interrupt_Configuration@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), NULL(), 

    Timer0_Prescaler_Config@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Prescaler_Config@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_Read_Value@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_Set_Mode@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Set_Mode@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_Set_Resolution@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Set_Resolution@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_Write_Value@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Write_Value@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer1_Init@_timer1$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_Interrupt_Configuration@_timer1$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    timer1_obj$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_Set_Mode@_timer1$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_Set_Resolution@_timer1$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_Write_Value@_timer1	PTR const struct . size(2) Largest target is 6
		 -> timer1_obj(BANK1[6]), 

    Timer2_Init@_timer2$TIMER2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Interrupt_Configuration@_timer2$TIMER2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_Init@_timer3$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Interrupt_Configuration@_timer3$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_Set_Mode@_timer3$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Set_Resolution@_timer3$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(1) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 

    UART_obj$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    UART_obj$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    UART_obj$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    UART_obj$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_FRE_InterruptHandler	PTR FTN()void  size(2) Largest target is 2
		 -> UART_obj$EUSART_FramingErrorInterruptHandler(BANK1[2]), NULL(), 

    USART_OVRR_InterruptHandler	PTR FTN()void  size(2) Largest target is 2
		 -> UART_obj$EUSART_OverrunErrorInterruptHandler(BANK1[2]), NULL(), 

    USART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 2
		 -> UART_obj$EUSART_RX_InterruptHandler(BANK1[2]), NULL(), 

    USART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_4(CODE[3]), STR_5(CODE[3]), STR_6(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    i2_update_display->i2_ECU_LCD_4Bit_Send_String_Data_Postition
    i2_ECU_LCD_4Bit_Send_String_Data_Postition->i2_LCD_4Bits_Set_Curser
    i2_LCD_4Bits_Set_Curser->i2_ECU_LCD_4Bit_Send_Command
    i2_ECU_LCD_4Bit_Send_Command->i2_LCD_Send_4Bits
    i2_ECU_LCD_4Bit_Send_char_Data->i2_LCD_Send_4Bits
    i2_LCD_Send_4Bits->i2_gpio_pin_write_logic
    i2_LCD_4Bits_Send_Enable_Signal->i2_gpio_pin_write_logic
    _CCP1_DefaultISR->_CCPx_CompareMode_WriteData

Critical Paths under _main in BANK0

    _LCD_4Bits_Set_Curser->_ECU_LCD_4Bit_Send_Command
    _ECU_LCD_4Bit_Send_char_Data->_LCD_Send_4Bits
    _keyPad_Read->_gpio_pin_read_logic
    _keyPad_Read->_gpio_pin_write_logic
    _keyPad_Initialize->_gpio_pin_initialize
    _Timer0_Init->_Timer0_Write_Value
    _EUSART_ASYNC_WriteStringBlocking->_EUSART_ASYNC_WriteByteBlocking
    _EUSART_ASYNC_Init->_EUSART_BaudRateCalculation
    _PinsConfig@hal_usart$F4705->_gpio_pin_initialize
    _EUSART_BaudRateCalculation->___fldiv
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _REALTIMECLOCK_DS1307_Get_Data->_I2C_Read1ByteRegister
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _ECU_LCD_4Bit_Initialize->_ECU_LCD_4Bit_Send_Command
    _gpio_pin_initialize->_gpio_pin_write_logic
    _ECU_LCD_4Bit_Send_Command->_LCD_Send_4Bits
    _LCD_Send_4Bits->_gpio_pin_write_logic
    _LCD_4Bits_Send_Enable_Signal->_gpio_pin_write_logic

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_ECU_LCD_4Bit_Send_String_Data_Postition
    _update_display->_ECU_LCD_4Bit_Send_String_Data_Postition
    _ECU_LCD_4Bit_Send_String_Data_Postition->_REALTIMECLOCK_DS1307_print_Data
    _REALTIMECLOCK_DS1307_print_Data->_EUSART_ASYNC_Init
    _EUSART_ASYNC_Init->_EUSART_BaudRateCalculation
    _EUSART_BaudRateCalculation->___fladd

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   68612
                                             36 BANK1      2     2      0
            _ECU_LCD_4Bit_Initialize
          _ECU_LCD_4Bit_Send_Command
_ECU_LCD_4Bit_Send_String_Data_Posti
               _LCD_4Bits_Set_Curser
      _REALTIMECLOCK_DS1307_Get_Data
    _REALTIMECLOCK_DS1307_print_Data
                  _SYSTEM_Initialize
                      _Timer0_Deinit
                        _Timer0_Init
                  _keyPad_Initialize
                        _keyPad_Read
                     _update_display
 ---------------------------------------------------------------------------------
 (1) _update_display                                       0     0      0   19285
          _ECU_LCD_4Bit_Send_Command
_ECU_LCD_4Bit_Send_String_Data_Posti
        _ECU_LCD_4Bit_Send_char_Data
               _LCD_4Bits_Set_Curser
 ---------------------------------------------------------------------------------
 (2) _ECU_LCD_4Bit_Send_String_Data_Postition              6     1      5    7976
                                             30 BANK1      6     1      5
        _ECU_LCD_4Bit_Send_char_Data
               _LCD_4Bits_Set_Curser
    _REALTIMECLOCK_DS1307_print_Data (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_4Bits_Set_Curser                                 4     1      3    4057
                                             13 BANK0      4     1      3
          _ECU_LCD_4Bit_Send_Command
 ---------------------------------------------------------------------------------
 (2) _ECU_LCD_4Bit_Send_char_Data                          3     1      2    3611
                                             10 BANK0      3     1      2
       _LCD_4Bits_Send_Enable_Signal
                     _LCD_Send_4Bits
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (1) _keyPad_Read                                         10     7      3    2109
                                              6 BANK0     10     7      3
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  6     3      3     486
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _keyPad_Initialize                                    7     5      2    2553
                                             10 BANK0      7     5      2
      _gpio_pin_direction_initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          3     1      2     697
                                              4 BANK0      3     1      2
     _Timer0_Interrupt_Configuration
            _Timer0_Prescaler_Config
                    _Timer0_Set_Mode
              _Timer0_Set_Resolution
                 _Timer0_Write_Value
 ---------------------------------------------------------------------------------
 (2) _Timer0_Write_Value                                   5     1      4     208
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _Timer0_Set_Resolution                                2     0      2      34
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Timer0_Set_Mode                                      2     0      2      65
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Timer0_Prescaler_Config                              3     1      2      65
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Timer0_Interrupt_Configuration                       2     0      2      34
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer0_Deinit                                        3     1      2      74
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _REALTIMECLOCK_DS1307_print_Data                      3     1      2    8681
                                             28 BANK1      2     0      2
                  _EUSART_ASYNC_Init
   _EUSART_ASYNC_WriteStringBlocking
 ---------------------------------------------------------------------------------
 (2) _EUSART_ASYNC_WriteStringBlocking                     9     5      4     272
                                              1 BANK0      9     5      4
     _EUSART_ASYNC_WriteByteBlocking
 ---------------------------------------------------------------------------------
 (3) _EUSART_ASYNC_WriteByteBlocking                       2     2      0      53
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_ASYNC_Init                                    3     1      2    8403
                                             26 BANK1      2     0      2
         _EUSART_BaudRateCalculation
                     _EUSART_RX_Init
                     _EUSART_TX_Init
         _PinsConfig@hal_usart$F4705
 ---------------------------------------------------------------------------------
 (3) _PinsConfig@hal_usart$F4705                           1     1      0    1675
                                             10 BANK0      1     1      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _EUSART_TX_Init                                       2     0      2     189
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_RX_Init                                       2     0      2     251
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_BaudRateCalculation                          12    10      2    6145
                                             39 BANK0      2     0      2
                                             16 BANK1     10    10      0
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     532
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     349
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1767
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2990
                                              0 BANK1     16     8      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _REALTIMECLOCK_DS1307_Get_Data                        6     0      6   13651
                                             18 BANK0      6     0      6
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1   13651
                                             15 BANK0      3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4     409
                                              4 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0      84
                                              0 BANK0      2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0   12369
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0   12369
                                             13 BANK0      2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0   12285
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        3     3      0   12285
                                             10 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0    3036
                                              8 BANK0      2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0    3083
                                              8 BANK0      2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      47
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      47
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      47
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0    3036
                                              8 BANK0      2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0    3036
                                              8 BANK0      2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1     598
                                              7 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1     598
                                              7 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1     629
                                              7 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1     598
                                              7 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1     598
                                              7 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          3     0      3     433
                                              4 BANK0      3     0      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      4     1      3     311
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        3     0      3     134
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               1     0      1       0
                                              7 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              1     0      1      15
                                              7 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      37
                                              0 BANK0      1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ECU_LCD_4Bit_Initialize                              4     3      1    5888
                                             13 BANK0      4     3      1
          _ECU_LCD_4Bit_Send_Command
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  4     2      2    1666
                                              6 BANK0      4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        5     3      2     541
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _ECU_LCD_4Bit_Send_Command                            3     1      2    3641
                                             10 BANK0      3     1      2
       _LCD_4Bits_Send_Enable_Signal
                     _LCD_Send_4Bits
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _LCD_Send_4Bits                                       4     2      2    1265
                                              6 BANK0      4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _LCD_4Bits_Send_Enable_Signal                         3     2      1    1061
                                              6 BANK0      3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                 6     3      3     913
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _InterruptManager                                   10    10      0   10181
                                             23 COMRAM    10    10      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                       _MSSP_SPI_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0    9644
                                NULL *
     _Timer0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _Timer0_DefaultInterruptHandler                      0     0      0    9644
                            ___awdiv
                            ___awmod
                   i2_update_display
 ---------------------------------------------------------------------------------
 (14) i2_update_display                                    0     0      0    9036
        i2_ECU_LCD_4Bit_Send_Command
i2_ECU_LCD_4Bit_Send_String_Data_Pos
      i2_ECU_LCD_4Bit_Send_char_Data
             i2_LCD_4Bits_Set_Curser
 ---------------------------------------------------------------------------------
 (15) i2_ECU_LCD_4Bit_Send_String_Data_Postition           6     1      5    3778
                                             17 COMRAM     6     1      5
      i2_ECU_LCD_4Bit_Send_char_Data
             i2_LCD_4Bits_Set_Curser
 ---------------------------------------------------------------------------------
 (15) i2_LCD_4Bits_Set_Curser                              4     1      3    1922
                                             13 COMRAM     4     1      3
        i2_ECU_LCD_4Bit_Send_Command
 ---------------------------------------------------------------------------------
 (16) i2_ECU_LCD_4Bit_Send_Command                         3     1      2    1664
                                             10 COMRAM     3     1      2
     i2_LCD_4Bits_Send_Enable_Signal
                   i2_LCD_Send_4Bits
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (15) i2_ECU_LCD_4Bit_Send_char_Data                       3     1      2    1672
                                             10 COMRAM     3     1      2
     i2_LCD_4Bits_Send_Enable_Signal
                   i2_LCD_Send_4Bits
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (17) i2_LCD_Send_4Bits                                    4     2      2     607
                                              6 COMRAM     4     2      2
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (17) i2_LCD_4Bits_Send_Enable_Signal                      3     2      1     469
                                              6 COMRAM     3     2      1
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (17) i2_gpio_pin_write_logic                              6     3      3     373
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (14) ___awmod                                             6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (14) ___awdiv                                             8     4      4     306
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (12) _RB7_ISR                                             1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _RB6_ISR                                             1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _RB5_ISR                                             1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _RB4_ISR                                             1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _MSSP_SPI_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _MSSP_I2C_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _MSSP_I2C_BC_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_TX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _EUSART_RX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CCP2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _CCP1_ISR                                            0     0      0     305
                                NULL *
                    _CCP1_DefaultISR *
 ---------------------------------------------------------------------------------
 (13) _CCP1_DefaultISR                                     0     0      0     305
         _CCPx_CompareMode_WriteData
                 _Timer1_Write_Value
 ---------------------------------------------------------------------------------
 (14) _Timer1_Write_Value                                  5     1      4      95
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (14) _CCPx_CompareMode_WriteData                          7     4      3     210
                                              0 COMRAM     7     4      3
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           1     0      1       0
 ---------------------------------------------------------------------------------
 (12) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ECU_LCD_4Bit_Initialize
     _ECU_LCD_4Bit_Send_Command
       _LCD_4Bits_Send_Enable_Signal
         _gpio_pin_write_logic
       _LCD_Send_4Bits
         _gpio_pin_write_logic
       _gpio_pin_write_logic
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_write_logic
   _ECU_LCD_4Bit_Send_Command
   _ECU_LCD_4Bit_Send_String_Data_Postition
     _ECU_LCD_4Bit_Send_char_Data
       _LCD_4Bits_Send_Enable_Signal
       _LCD_Send_4Bits
       _gpio_pin_write_logic
     _LCD_4Bits_Set_Curser
       _ECU_LCD_4Bit_Send_Command
     _REALTIMECLOCK_DS1307_print_Data (ARG)
       _EUSART_ASYNC_Init
         _EUSART_BaudRateCalculation
           ___fladd
             ___fldiv (ARG)
               ___xxtofl (ARG)
             ___xxtofl (ARG)
           ___fldiv
           ___fltol
           ___xxtofl
         _EUSART_RX_Init
         _EUSART_TX_Init
         _PinsConfig@hal_usart$F4705
           _gpio_pin_initialize
       _EUSART_ASYNC_WriteStringBlocking
         _EUSART_ASYNC_WriteByteBlocking
   _LCD_4Bits_Set_Curser
   _REALTIMECLOCK_DS1307_Get_Data
     _I2C_Read1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 NULL(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 NULL(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
               _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
               _I2C_DO_TX *
                 NULL(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                 _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_TX_EMPTY *
                 NULL(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
   _REALTIMECLOCK_DS1307_print_Data
   _SYSTEM_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _Timer0_Deinit
   _Timer0_Init
     _Timer0_Interrupt_Configuration
     _Timer0_Prescaler_Config
     _Timer0_Set_Mode
     _Timer0_Set_Resolution
     _Timer0_Write_Value
   _keyPad_Initialize
     _gpio_pin_direction_initialize
     _gpio_pin_initialize
   _keyPad_Read
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _update_display
     _ECU_LCD_4Bit_Send_Command
     _ECU_LCD_4Bit_Send_String_Data_Postition
     _ECU_LCD_4Bit_Send_char_Data
     _LCD_4Bits_Set_Curser

 _InterruptManager (ROOT)
   _ADC_ISR
   _CCP1_ISR
     NULL(Fake) *
     _CCP1_DefaultISR *
       _CCPx_CompareMode_WriteData
       _Timer1_Write_Value
   _CCP2_ISR
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _MSSP_SPI_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
     NULL(Fake) *
     _Timer0_DefaultInterruptHandler *
       ___awdiv
       ___awmod
       i2_update_display
         i2_ECU_LCD_4Bit_Send_Command
           i2_LCD_4Bits_Send_Enable_Signal
             i2_gpio_pin_write_logic
           i2_LCD_Send_4Bits
             i2_gpio_pin_write_logic
           i2_gpio_pin_write_logic
         i2_ECU_LCD_4Bit_Send_String_Data_Postition
           i2_ECU_LCD_4Bit_Send_char_Data
             i2_LCD_4Bits_Send_Enable_Signal
             i2_LCD_Send_4Bits
             i2_gpio_pin_write_logic
           i2_LCD_4Bits_Set_Curser
             i2_ECU_LCD_4Bit_Send_Command
         i2_ECU_LCD_4Bit_Send_char_Data
         i2_LCD_4Bits_Set_Curser
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256     38     137     53.5%
BITBANK0           160      0       0      0.0%
BANK0              160     41     160    100.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     33      62     66.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRlll        28      0       0      0.0%
BITBIGSFRllh         1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     353      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Oct 24 01:40:17 2024

                   Timer0_Prescaler_Config@_timer0 00D5                                 ??_InterruptManager 0018  
                           ??_I2C_DO_SEND_ADR_READ 00D5                              ECU_Relay_toggle@F3477 00C4  
                                     ___fldiv@aexp 00FB                                       ___fldiv@bexp 00FA  
                        _REALTIMECLOCK_DS1307_Data 0171                                       ___fldiv@sign 00F3  
                          ??_I2C_DO_SEND_ADR_WRITE 00D6                                        _SSPSTATbits 0FC7  
                                               l33 3FB2                                                 l90 487C  
                                               l93 4854                                                 l96 482C  
                                               l99 48A4                                       ___awdiv@sign 0006  
                                  LED_toggle@F3476 0027                                     _update_display 31B0  
                     __end_of_LCD_4Bits_Set_Curser 394A                              ??_I2C_DO_SEND_RESTART 00D5  
                                              l102 476E                                                l115 4A8C  
                                              l118 4AF4                                                l215 1DC6  
                                              l224 1DC6                                                l161 3298  
                                              l410 4AE2                                                l403 4972  
                                              l413 4A7E                                                l422 35E2  
                                              l350 4A5E                                                l407 4100  
                                              l416 4A9A                                                l522 4B70  
                                              l506 4B5C                                                l370 4AFC  
                                              l354 4024                                                l186 1E68  
                                              l531 4B64                                                l419 35AA  
                                              l435 383E                                                l540 4B68  
                                              l380 4A4C                                                l436 38AA  
                                              l364 46B2                                                l509 4B58  
                                              l525 4B50                                                l453 3F3A  
                                              l613 4914                                                l358 4804  
                                              l543 4B60                                                l447 4AC2  
                                              l471 4B34                                                l519 4934  
                                              l552 4B48                                                l528 4AEC  
                                              l480 4B1C                                                l377 4954  
                                              l537 4B54                                                l570 4B74  
                                              l546 4A38                                                l474 4B2C  
                                              l386 4A24                                                l483 4B14  
                                              l492 4AD8                                                l580 4A6E  
                                              l397 4482                                                l549 4B42  
                                              l573 4B4C                                                l477 4B24  
                                              l486 4B0C                                                l567 4B6C  
                                              l576 4A60                                                l489 4B04  
                                              l498 4304                                                l936 223C  
                                              l957 2464                                                l959 24D0  
                                              l979 250C                                     _LCD_Send_4Bits 39E6  
                                  __end_of_ADC_ISR 4B9A                                                _ret 00FE  
                           _I2C_MasterWaitForEvent 4A60                 i2LCD_4Bits_Send_Enable_Signal@_LCD 0007  
                 LCD_4Bits_Send_Enable_Signal@_LCD 00DB                                       ___awmod@sign 0006  
                       ?_ECU_LCD_4Bit_Send_Command 00DF                                                prod 0FF3  
                                              tosl 0FFD                                                wreg 0FE8  
           __end_of_Timer0_DefaultInterruptHandler 3522                     _Timer0_DefaultInterruptHandler 345E  
                                     ?_keyPad_Read 00DB                       ??_I2C_SetAddressNackCallback 00DD  
                         ??_I2C_CallbackReturnStop 00DD                                       _I2C_DO_RESET 4AD0  
                                  __end_of_RB4_ISR 4A12                                    __end_of_RB5_ISR 49F8  
                                  __end_of_RB6_ISR 49DE                                    __end_of_RB7_ISR 49C4  
                                     ___fltol@exp1 00DE                            ?i2_LCD_4Bits_Set_Curser 000E  
                                             l1002 2798                                               l1007 2C4E  
                                             l1017 2DA6                            ??_rd2RegCompleteHandler 00DD  
                                             l1037 4340                                               l1039 4368  
                                             l2211 46F6                                               l2220 1348  
                                             l2221 1400                                               l2302 3E44  
                                             l2223 1554                                               l2215 1060  
                                             l2232 375A                                               l2217 111A  
                                             l2305 2FF8                                               l2218 11D4  
                                             l2219 128E                                               l2307 2FF2  
                                             l2236 375A                                               l2316 30BE  
                                             l2308 30BC                                               l2245 345C  
                                             l2157 4640                                               l2309 2FFA  
                                             l3223 1740                                               l2159 466C  
                                             l2191 3EBE                                               l2352 423A  
                                             l3240 185A                                               l3232 1A0C  
                                             l3224 172E                                               l2184 4994  
                                             l3225 16F4                                               l2249 345C  
                                             l3250 1916                                               l2186 49A2  
                                             l2347 2EBE                                               l2187 49A8  
                                             l2195 3EC0                                               l2461 4590  
                                             l3237 18E8                                               l1901 436E  
                                             l2357 41D2                                               l3350 2AA6  
                                             l1903 438E                                               l2456 3A7A  
                                             l3256 19D0                                               l2296 3DE6  
                                             l3249 1928                                               l3353 2C02  
                                             l1905 43C8                                               l2297 3E42  
                                             l3290 2120                                               l3282 2028  
                                             l2378 39E4                                               l3291 210E  
                                             l1851 3C32                                               l2299 3E0C  
                                             l3364 2B9A                                               l2572 31AE  
                                             l1908 498E                                               l3277 2200  
                                             l3357 2B3E                                               l2477 3948  
                                             l1854 48E8                                               l3279 2064  
                                             l1855 48F0                                               l3288 20AA  
                                             l1856 48F2                                               l1880 45E6  
                                             l2569 416A                                               l3289 20C8  
                                             l1865 4426                                               l1849 3BBE  
                                             l1890 3CCA                                               l1882 45EC  
                                             l1892 3CD0                                               l1884 4626  
                                             l1894 3CD6                                               l1888 3CC4  
                                             l1897 3D42                                               l2992 2FC6  
                                             STR_1 1021                                               STR_2 102C  
                                             STR_3 1035                                               STR_4 1045  
                                             STR_7 103E                                               _LATA 0F89  
                                             _LATB 0F8A                                               _LATC 0F8B  
                                             _LATD 0F8C                                               _LATE 0F8D  
                                             _TMR2 0FCC                                               _WPUB 0F7C  
                          ??_wr2RegCompleteHandler 00DD                                               _main 1A0E  
                                 ?_CCP1_DefaultISR 0001                           ?_I2C_CallbackReturnReset 00DC  
                                 __end_of_CCP1_ISR 47D8                                   __end_of_CCP2_ISR 4B96  
                                             fsr0h 0FEA                                               fsr1h 0FE2  
                                             indf0 0FEF                                               fsr2h 0FDA  
                                             fsr0l 0FE9                                               indf1 0FE7  
                                             indf2 0FDF                                               fsr1l 0FE1  
                                             fsr2l 0FD9                                   __end_of_I2C_Open 4026  
                                             btemp 003F                       gpio_pin_read_logic@pinConfig 00D5  
                                             prodl 0FF3                                               start 0456  
                                  ___fldiv@new_exp 00F4                   i2LCD_4Bits_Send_Enable_Signal@rt 0009  
                   LCD_4Bits_Send_Enable_Signal@rt 00DD                                       ___param_bank 0000  
                     ??_EUSART_BaudRateCalculation 014F                                 _Timer0_Write_Value 43CA  
                           __end_of_update_display 329A                               _gpio_pin_write_logic 24D2  
                                 ?_I2C_MasterClose 0001              __end_of_REALTIMECLOCK_DS1307_Get_Data 416C  
                    _REALTIMECLOCK_DS1307_Get_Data 4102                                   __end_of_INT0_ISR 4B8E  
                                 __end_of_INT1_ISR 4B8A                                   __end_of_INT2_ISR 4B86  
                                 ?_I2C_MasterStart 0001                             __end_of_LCD_Send_4Bits 3A7C  
                                    _I2C_DO_RX_ACK 4B0E                                   ?_I2C_MasterWrite 0001  
                    __end_of_OSCILLATOR_Initialize 4AF6                                              l13001 2A62  
                                            l12211 487E                                              l12203 4806  
                                            l13011 2AE0                                              l13003 2A70  
                                            l13101 47EC                                              l12213 4890  
                                            l12205 4818                                              l12221 475A  
                                            l13021 2B34                                              l13013 2AE8  
                                            l13005 2AB6                                              l13103 47F0  
                                            l12215 48A2                                              l12207 482A  
                                            l12223 476C                                              l12231 4AE8  
                                            l12303 4A8E                                              l12311 3522  
                                            l13031 2BAA                                              l13023 2B70  
                                            l13015 2AF4                                              l13007 2ACC  
                                            l13111 38AC                                              l13105 47FC  
                                            l12161 442C                                              l12401 3EE4  
                                            l12305 4A92                                              l12233 4B2E  
                                            l12241 4B2A                                              l13041 2BF2  
                                            l13033 2BAE                                              l13025 2B7C  
                                            l13017 2B26                                              l13121 38DE  
                                            l13113 38B0                                              l14001 1D9C  
                                            l13107 4800                                              l12163 4440  
                                            l12171 4A3A                                              l12219 4738  
                                            l12251 4B4E                                              l12227 4A26  
                                            l12307 4A98                                              l12331 35AE  
                                            l12323 354A                                              l12315 353A  
                                            l12235 4B32                                              l13051 3FD0  
                                            l13035 2BD2                                              l13027 2B8A  
                                            l13019 2B28                                              l13211 36E4  
                                            l13203 36A6                                              l13123 38F4  
                                            l13131 3946                                              l13115 38B2  
                                            l14011 1DA8                                              l12181 4B62  
                                            l12173 4936                                              l12165 4454  
                                            l12333 35C0                                              l12245 4B16  
                                            l12413 4AD0                                              l12421 42A6  
                                            l12501 4962                                              l13061 3FE2  
                                            l13053 3FD2                                              l13045 3FB8  
                                            l13037 2BE2                                              l13029 2BA8  
                                            l13221 3734                                              l13213 36F8  
                                            l13205 36C2                                              l13301 4AF2  
                                            l13141 4184                                              l13125 390A  
                                            l13117 38C2                                              l14013 1DBA  
                                            l12511 2274                                              l12503 2202  
                                            l12183 4B5E                                              l12175 4946  
                                            l12167 4464                                              l12191 487A  
                                            l12255 4B3E                                              l12335 35DA  
                                            l12319 3542                                              l12351 3834  
                                            l12239 4B26                                              l12271 4B1E  
                                            l12247 4B1A                                              l12407 4B0E  
                                            l12263 4B06                                              l12415 4AD6  
                                            l12423 42AE                                              l13071 3FF8  
                                            l13063 3FE4                                              l13055 3FD4  
                                            l13047 3FBE                                              l13039 2BF0  
                                            l13231 339E                                              l13223 373A  
                                            l13215 36FE                                              l13207 36C4  
                                            l13151 46C4                                              l13143 41D0  
                                            l13135 416C                                              l13119 38C8  
                                            l13311 3978                                              l13303 394A  
                                            l14031 1E2A                                              l14023 1DCA  
                                            l12521 2374                                              l12513 22A6  
                                            l12505 2208                                              l12177 494A  
                                            l12169 4478                                              l12185 4B44  
                                            l12337 35E0                                              l12329 3552  
                                            l12353 3838                                              l12345 380A  
                                            l12273 4B22                                              l12409 4B12  
                                            l12265 4B0A                                              l12257 4AFE  
                                            l12433 42BE                                              l12441 4094  
                                            l12601 469A                                              l13081 4014  
                                            l13073 4000                                              l13065 3FEC  
                                            l13057 3FD6                                              l13049 3FCC  
                                            l13241 341A                                              l13233 33B8  
                                            l13225 3754                                              l13217 3718  
                                            l13209 36DE                                              l13161 46E4  
                                            l13153 46C6                                              l13401 3E46  
                                            l13321 2C04                                              l13137 416C  
                                            l13129 3920                                              l13313 39AA  
                                            l13305 394E                                              l14033 1E2C  
                                            l14025 1DEA                                              l12451 24D2  
                                            l12531 2468                                              l12523 23A4  
                                            l12515 22D8                                              l12507 221A  
                                            l12179 4952                                              l12187 4856  
                                            l12195 482E                                              l12283 4B56  
                                            l12291 4AE0                                              l12363 384C  
                                            l12347 3818                                              l12259 4B02  
                                            l12427 42B6                                              l12419 42A2  
                                            l12443 4098                                              l12603 46A2  
                                            l13083 4016                                              l13075 4002  
                                            l13067 3FEE                                              l13059 3FDA  
                                            l13091 4A12                                              l13171 10BA  
                                            l13243 341C                                              l13235 33BE  
                                            l13227 3380                                              l13219 371A  
                                            l13163 46E6                                              l13155 46C8  
                                            l13147 46B4                                              l13251 4994  
                                            l13411 3E6C                                              l13403 3E46  
                                            l13331 2C8C                                              l13323 2C0A  
                                            l13139 417E                                              l13315 39AE  
                                            l13307 395E                                              l14027 1E06  
                                            l14035 1E2E                                              l12461 2576  
                                            l12453 24D8                                              l12541 39E6  
                                            l12525 23D4                                              l12517 230A  
                                            l12509 2242                                              l12533 24A0  
                                            l12621 4364                                              l12613 4306  
                                            l13501 2E64                                              l12189 4868  
                                            l12197 4840                                              l12269 4B52  
                                            l12277 4B4A                                              l12349 381C  
                                            l12445 40A8                                              l12605 46A6  
                                            l13093 4AF6                                              l13085 401E  
                                            l13077 400A                                              l13069 3FF6  
                                            l13261 3F5C                                              l12701 1690  
                                            l13181 1294                                              l13173 1120  
                                            l13245 3436                                              l13237 33FA  
                                            l13229 339C                                              l13165 46E8  
                                            l13157 46D8                                              l13149 46B4  
                                            l13253 49A4                                              l13413 3E9E  
                                            l13405 3E46                                              l13333 2CC4  
                                            l13341 2DA4                                              l13325 2C1C  
                                            l13317 39E0                                              l13309 3964  
                                            l14029 1E18                                              l14037 1E3E  
                                            l12471 2674                                              l12463 25A8  
                                            l12455 24EA                                              l12551 453C  
                                            l12543 39F8                                              l12527 2404  
                                            l12519 233C                                              l12535 24CE  
                                            l12615 430C                                              l13511 2EAA  
                                            l13503 2E72                                              l12287 4B72  
                                            l12199 4852                                              l12279 4B5A  
                                            l12391 3ED6                                              l12383 3EC2  
                                            l12295 4A70                                              l12359 3844  
                                            l12375 4AB8                                              l12447 40BC  
                                            l12607 46AA                                              l13079 400C  
                                            l13087 4022                                              l13271 3FAE  
                                            l13263 3F6E                                              l12711 1702  
                                            l12703 1694                                              l12631 1574  
                                            l13191 1458                                              l13183 12E8  
                                            l13175 1174                                              l13167 104A  
                                            l13247 343C                                              l13239 3400  
                                            l13159 46E0                                              l13255 49A8  
                                            l13415 3EA4                                              l13407 3E5A  
                                            l13351 3CDC                                              l13335 2CFC  
                                            l13327 2C3E                                              l14039 1E52  
                                            l12473 26A4                                              l12465 25DA  
                                            l12457 2512                                              l12481 276C  
                                            l12561 4572                                              l12553 453C  
                                            l12545 39FE                                              l12529 2434  
                                            l12617 431E                                              l13505 2E80  
                                            l13513 2EBC                                              l13097 47D8  
                                            l12385 3ECA                                              l12289 4ADA  
                                            l12297 4A74                                              l12369 3854  
                                            l12377 4ABC                                              l12449 40C2  
                                            l12609 46AE                                              l13265 3F80  
                                            l13257 3F40                                              l12801 19AE  
                                            l12721 172C                                              l12713 170E  
                                            l12705 16C0                                              l12633 1584  
                                            l12641 15AC                                              l12625 1556  
                                            l13185 134C                                              l13177 11DA  
                                            l13169 1066                                              l13193 14B8  
                                            l13249 3456                                              l13417 3EBA  
                                            l13409 3E60                                              l13601 30D8  
                                            l13281 48F4                                              l13353 3D0E  
                                            l13345 45E2                                              l13361 43CA  
                                            l13521 3DE0                                              l13337 2D34  
                                            l13329 2C54                                              l12475 26D4  
                                            l12467 260C                                              l12459 2544  
                                            l12483 2796                                              l12563 458E  
                                            l12555 454E                                              l12547 3A78  
                                            l12539 39E6                                              l12571 41E6  
                                            l12619 4346                                              l13507 2E8E  
                                            l13099 47DE                                              l12395 3EDC  
                                            l12299 4A7C                                              l12379 4AC0  
                                            l13267 3F96                                              l13259 3F44  
                                            l12811 19EC                                              l12803 19CE  
                                            l12731 1782                                              l12723 174E  
                                            l12715 1712                                              l12707 16DC  
                                            l12651 15DC                                              l12643 15BC  
                                            l12635 1594                                              l12627 1564  
                                            l13187 13A0                                              l13179 122E  
                                            l13195 1512                                              l13611 3114  
                                            l13603 30DC                                              l13275 4A4E  
                                            l13291 4908                                              l13283 48FE  
                                            l13355 436A                                              l13347 45F2  
                                            l13371 4404                                              l13363 43CA  
                                            l13531 3DFC                                              l13339 2D6C  
                                            l12477 2704                                              l12469 2644  
                                            l12557 4554                                              l12573 41EC  
                                            l13509 2E9C                                              l12493 4B66  
                                            l12389 3ED2                                              l12581 4924  
                                            l13269 3F9A                                              l12813 19FA  
                                            l12805 19DE                                              l12741 17BC  
                                            l12733 1790                                              l12725 175E  
                                            l12717 1720                                              l12709 16EC  
                                            l12661 161C                                              l12653 15EA  
                                            l12645 15C2                                              l12637 15A4  
                                            l12629 1572                                              l12901 2062  
                                            l12821 1E7E                                              l13189 1404  
                                            l13621 3158                                              l13613 3120  
                                            l13605 30E8                                              l13277 4A56  
                                            l13293 490A                                              l13285 4902  
                                            l13381 4974                                              l13357 4370  
                                            l13349 3CC0                                              l13373 441E  
                                            l13365 43DE                                              l13541 3E2E  
                                            l13517 3DC8                                              l12479 2734  
                                            l12559 456A                                              l12575 4238  
                                            l12567 41D4                                              l13471 2DA8  
                                            l12591 4B6E                                              l12495 4956  
                                            l12583 492C                                              l12815 19FC  
                                            l12807 19E4                                              l12751 1828  
                                            l12743 17BE                                              l12735 179E  
                                            l12719 1722                                              l12671 1654  
                                            l12663 161E                                              l12655 15EC  
                                            l12647 15D4                                              l12639 15A6  
                                            l12911 20A8                                              l12903 2074  
                                            l12831 1EBE                                              l12823 1E8C  
                                            l13391 463C                                              l13631 31A4  
                                            l13623 3164                                              l13615 312C  
                                            l13607 30F4                                              l13279 4A5C  
                                            l13295 4910                                              l13287 4904  
                                            l13463 4A80                                              l13383 497C  
                                            l13359 4394                                              l13367 43E2  
                                            l13543 3E3E                                              l13527 3DE8  
                                            l13519 3DCE                                              l13551 2FE2  
                                            l12569 41D4                                              l13473 2DAC  
                                            l12497 495A                                              l12593 4672  
                                            l12585 4932                                              l12809 19E6  
                                            l12761 1880                                              l12753 182A  
                                            l12745 17C8                                              l12737 17AA  
                                            l12729 1772                                              l12681 1668  
                                            l12673 1658                                              l12657 15FC  
                                            l12665 1624                                              l12649 15D6  
                                            l12921 2130                                              l12905 208A  
                                            l12913 20BA                                              l12841 1EE2  
                                            l12833 1EC0                                              l12825 1E8E  
                                            l13393 4642                                              l13625 3168  
                                            l13617 3148                                              l13609 3110  
                                            l13297 4912                                              l13289 4906  
                                            l13641 48EC                                              l13385 498C  
                                            l13377 4426                                              l13369 43FC  
                                            l13537 3E0E                                              l13529 3DF8  
                                            l13561 2FFC                                              l13465 31B0  
                                            l13491 2E10                                              l13475 2DBC  
                                            l12499 495E                                              l12595 4678  
                                            l12579 4916                                              l12771 18AE  
                                            l12755 183A                                              l12739 17AE  
                                            l12747 17CE                                              l12691 167C  
                                            l12683 166C                                              l12675 165C  
                                            l12667 1634                                              l12659 160C  
                                            l12931 2192                                              l12923 213C  
                                            l12915 20D8                                              l12907 2090  
                                            l12851 1F22                                              l12843 1EF0  
                                            l12827 1E9E                                              l12835 1EC6  
                                            l12819 1E70                                              l13395 466A  
                                            l13387 4628                                              l13627 3174  
                                            l13619 314C                                              l13299 4AEE  
                                            l13635 48CE                                              l13651 3BC0  
                                            l13539 3E2A                                              l13563 3010  
                                            l13547 2FC8                                              l13467 3262  
                                            l13493 2E20                                              l13485 2DE8  
                                            l13477 2DC2                                              l12589 4B6A  
                                            l12597 4686                                              l12773 18BC  
                                            l12765 1894                                              l12781 18DA  
                                            l12749 17F4                                              l12757 184A  
                                            l12693 1680                                              l12685 1670  
                                            l12677 1660                                              l12669 1646  
                                            l12941 21E0                                              l12933 21A8  
                                            l12925 214A                                              l12917 2106  
                                            l12909 209A                                              l12861 1F60  
                                            l12853 1F24                                              l12845 1EF2  
                                            l12837 1ED6                                              l12829 1EAE  
                                            l13397 466C                                              l13389 4628  
                                            l13629 318E                                              l13637 48CE  
                                            l13653 3C06                                              l13661 3C30  
                                            l13645 3BA4                                              l13581 3094  
                                            l13565 3014                                              l13549 2FD0  
                                            l13469 3284                                              l13901 1BEA  
                                            l13495 2E2E                                              l13487 2DFC  
                                            l13479 2DE6                                              l12599 468A  
                                            l12791 1944                                              l12783 18F8  
                                            l12775 18C4                                              l12767 189E  
                                            l12759 1870                                              l12695 1684  
                                            l12687 1674                                              l12679 1664  
                                            l12943 21EE                                              l12935 21C2  
                                            l12927 2174                                              l12871 1F90  
                                            l12863 1F68                                              l12847 1F02  
                                            l12855 1F2A                                              l12839 1EDC  
                                            l13639 48E2                                              l13655 3C1C  
                                            l13647 3BA4                                              l13583 3096  
                                            l13575 303C                                              l13567 3024  
                                            l13903 1BEC                                              l13911 1C22  
                                            l13497 2E4C                                              l13489 2E00  
                                            l13593 4102                                              l12793 1952  
                                            l12785 190E                                              l12777 18C8  
                                            l12769 18AC                                              l12697 1688  
                                            l12689 1678                                              l12945 21F4  
                                            l12937 21DA                                              l12929 2178  
                                            l12881 1FCE                                              l12873 1F90  
                                            l12865 1F6C                                              l12857 1F3A  
                                            l12849 1F12                                              l12961 2EEC  
                                            l13657 3C28                                              l13649 3BB8  
                                            l13585 30A6                                              l13577 305C  
                                            l13569 3038                                              l13921 1C6A  
                                            l13913 1C34                                              l13905 1C02  
                                            l13499 2E56                                              l13595 4158  
                                            l12795 198C                                              l12779 18D8  
                                            l12699 168C                                              l12947 21F6  
                                            l12939 21DC                                              l12891 2018  
                                            l12883 1FDE                                              l12859 1F50  
                                            l12971 2F3A                                              l12963 2F16  
                                            l12955 2EC0                                              l13659 3C2A  
                                            l13587 30A8                                              l13579 306E  
                                            l13915 1C44                                              l13931 1C70  
                                            l13907 1C1A                                              l13851 1A52  
                                            l13843 1A0E                                              l12789 1938  
                                            l12797 198E                                              l12893 2026  
                                            l12885 1FEE                                              l12877 1FA4  
                                            l12869 1F80                                              l12981 2F66  
                                            l12965 2F18                                              l12957 2ED8  
                                            l13589 30B8                                              l13941 1CBC  
                                            l13917 1C46                                              l13909 1C1C  
                                            l13853 1A74                                              l13845 1A12  
                                            l12799 199E                                              l12895 2032  
                                            l12887 1FF4                                              l12879 1FBE  
                                            l12991 2F96                                              l12967 2F28  
                                            l13599 30C0                                              l13951 1CE8  
                                            l13943 1CCC                                              l13935 1C86  
                                            l13919 1C58                                              l13871 1B0C  
                                            l13863 1AB4                                              l13855 1A7C  
                                            l13847 1A20                                              l14841 3584  
                                            l12897 2050                                              l12889 2004  
                                            l12993 2FA6                                              l12977 2F52  
                                            l12969 2F2C                                              l13953 1CEC  
                                            l13945 1CDC                                              l13937 1C9C  
                                            l13881 1B4E                                              l13873 1B18  
                                            l13865 1AC0                                              l13857 1A90  
                                            l13849 1A30                                      _EUSART_RX_ISR 4B9A  
                                            l14843 3F14                                              l12899 2052  
                                            l12995 2FB6                                              l12987 2F7A  
                                            l12979 2F5C                                              l14835 14DC  
                                            l13971 1D48                                              l13947 1CE4  
                                            l13955 1D08                                              l13939 1CAC  
                                            l13891 1BA2                                              l13883 1B5E  
                                            l13875 1B2C                                              l13867 1AD4  
                                            l13859 1AA0                                              l14845 2780  
                                            l14837 42EE                                              l12989 2F86  
                                            l13973 1D4C                                              l13957 1D1A  
                                            l13949 1CE6                                              l13893 1BB4  
                                            l13885 1B6E                                              l13877 1B30  
                                            l13869 1AE6                                              l14839 3884  
                                            l12999 2A50                                              l13983 1D58  
                                            l13967 1D26                                              l13895 1BC4  
                                            l13887 1B7E                                              l13879 1B38  
                                            l13985 1D6A                                              l13969 1D38  
                                            l13897 1BC6                                              l13889 1B8E  
                                            l13995 1D76                                              l13899 1BD8  
                                            l13997 1D88                                              l13999 1D98  
     EUSART_ASYNC_WriteStringBlocking@char_counter 00DD                                      ___fltol@sign1 00DD  
                                    _EUSART_TX_ISR 4B8E                                    __end_of___fladd 1A0E  
                                            ?_main 0001                                    __end_of___fldiv 2202  
                                  __end_of___awdiv 36A6                                              _EEADR 0FA9  
                                  __end_of___awmod 380A                           __end_ofi2_update_display 3380  
                                  __end_of___fltol 2FC8                                              _ANSEL 0F7E  
                                            u11000 250C                                              u11001 2508  
                                            u11014 2532                                              u11110 4972  
                                            u11015 252E                                              u11111 496E  
                                            u11104 2724                                              u11024 2564  
                                            u11120 221A                                              u12000 2F96  
                                            u11105 2720                                              u11025 2560  
                                            u11121 2216                                              u12001 2F92  
                                            u11034 2596                                              u11130 223C  
                                            u12010 2FA6                                              u11035 2592  
                                            u11131 2238                                              u12011 2FA2  
                                            u11044 25C8                                              u11204 23C4  
                                            u11300 469A                                              u12100 2BE2  
                                            u12020 2A62                                              u11045 25C4  
                                            u11205 23C0                                              u11301 4696  
                                            u12101 2BDE                                              u12021 2A5E  
                                            u11054 25FA                                              u11214 23F4  
                                            u11310 431E                                              u12110 2BF0  
                                            u12030 2A70                                              u11055 25F6  
                                            u11215 23F0                                              u11311 431A  
                                            u12111 2BEC                                              u12031 2A6C  
                            _I2C_Read1ByteRegister 3F3C                                              u11064 2664  
                                            u11240 24B8                                              u11224 2424  
                                            u11144 2262                                              u11320 4340  
                                            u12120 3FCC                                              u11400 1646  
                                            u12040 2ACC                                              u12200 3754  
                                            u13000 1B9E                                              u11065 2660  
                                            u11241 24B2                                              u11225 2420  
                                            u11145 225E                                              u11321 433C  
                                            u12121 3FC8                                              u11401 1642  
                                            u12041 2AC8                                              u12201 3750  
                                            u13001 1B9A                                              u11074 2694  
                                            u11250 39F8                                              u11234 2454  
                                            u11154 2294                                              u12130 47EC  
                                            u11410 1654                                              u11330 1572  
                                            u12050 2B22                                              u12210 339C  
                                            u13010 1BB4                                              u11075 2690  
                                            u11251 39F4                                              u11235 2450  
                                            u11155 2290                                              u12131 47E8  
                                            u11411 1650                                              u11331 156E  
                                            u12051 2B1E                                              u12211 3398  
                                            u13011 1BB0                                              u11084 26C4  
                                            u11260 454E                                              u11164 22C6  
                                            u11500 1790                                              u11420 16C0  
                                            u11340 1584                                              u12060 2B6C  
                                            u12220 33B8                                              u12140 38C2  
                                            u12300 399E                                              u13100 1CAC  
                                            u13020 1BC4                                    ___awdiv@divisor 0003  
                                            u11085 26C0                                              u11261 454A  
                                            u11165 22C2                                              u11501 178C  
                                            u11421 16BC                                              u11341 1580  
                                            u12061 2B68                                              u12221 33B4  
                                            u12141 38BE                                              u13101 1CA8  
                                            u13021 1BC0                                              u11094 26F4  
                                            u11270 41E6                                              u11246 24BA  
                                            u11174 22F8                                              u11510 179E  
                                            u11430 16D8                                              u11350 1594  
                                            u12070 2B8A                                              u12230 341A  
                                            u12150 417E                                              u12310 39D0  
                                            u13110 1CBC                                              u13030 1BD8  
                                            u11095 26F0                                              u11271 41E2  
                                            u11175 22F4                                              u11511 179A  
                                            u11431 16D2                                              u11351 1590  
                                            u12071 2B86                                              u12231 3416  
                                            u12151 417A                                              u13111 1CB8  
                                            u13031 1BD4                                              u11184 232A  
                                            u11280 4924                                              u11600 18E8  
                                            u11520 17BC                                              u11440 16DA  
                                            u11360 15D4                                              u12080 2B9A  
                                            u12240 3436                                              u12160 36C2  
                                            u12320 39E0                                              u13200 1DBA  
                                            u13120 1CCC                                              u13040 1BEA  
                                            u11185 2326                                              u11281 4920  
                                            u11601 18E4                                              u11521 17B8  
                                            u11361 15D0                                              u12081 2B96  
                                            u12241 3432                                              u12161 36BE  
                                            u12321 39DC                                              u13201 1DB6  
                                            u13121 1CC8                                              u13041 1BE6  
                                            u11194 2394                                              u11290 4686  
                                            u11610 18F8                                              u11530 17F4  
                                            u11450 1702                                              u11370 15EA  
                                            u12090 2BA8                                              u12250 3456  
                                            u12170 36DE                                              u12410 4610  
                                            u12330 2C1C                                              u13210 1E18  
                                            u13130 1CDC                                              u13050 1C34  
                                            u11195 2390                                              u11291 4682  
                                            u11611 18F4                                              u11531 17F0  
                                            u11451 16FE                                              u11371 15E6  
                                            u12091 2BA4                                              u12251 3452  
                                            u12171 36DA                                              u12411 460A  
                                            u12331 2C18                                              u12307 3994  
                                            u13211 1E14                                              u13131 1CD8  
                                            u13051 1C30                                              u10900 35DA  
                                            u11700 19DE                                              u11620 190E  
                                            u11540 183A                                              u11460 1720  
                                            u11380 15FC                                              u12180 3718  
                                            u12260 49A2                                              u12500 3E9A  
                                            u12420 3CF8                                              u12404 2D5A  
                                            u12340 2C3E                                              u13220 1E3E  
                                            u13140 1D1A                                              u13060 1C44  
                                            u10901 35D6                                              u11701 19DA  
                                            u11621 190A                                              u11541 1836  
                                            u11461 171C                                              u11381 15F8  
                                            u12181 3714                                              u12261 499E  
                                            u12421 3CF2                                              u12405 2D56  
                                            u12341 2C3A                                              u12317 39C6  
                                            u13221 1E3A                                              u13141 1D16  
                                            u13061 1C40                                              u10910 3834  
                                            u12270 3F5C                                              u11710 19FA  
                                            u11630 1924                                              u11550 1870  
                                            u11470 1740                                              u11390 160C  
                                            u12190 3734                                              u12510 3EBA  
                                            u12430 3D2C                                              u12350 2C4E  
                                            u13230 1E4E                                              u13150 1D38  
                                            u13070 1C58                                              u10911 3830  
                                            u12271 3F58                                              u11711 19F6  
                                            u11631 1920                                              u11551 186C  
                                            u11471 173C                                              u11391 1608  
                                            u12191 3730                                              u12511 3EB6  
                                            u12431 3D26                                              u12351 2C4A  
                                            u13231 1E4A                                              u13151 1D34  
                                            u13071 1C54                                              u12280 3FAE  
                                            u11640 1938                                              u11560 1880  
                                            u11480 174E                                              u11800 2004  
                                            u11720 1E8C                                              u12440 43B2  
                                            u12416 4612                                              u12600 3E3E  
                                            u13160 1D48                                              u13080 1C6A  
                                            u12281 3FAA                                              u11641 1934  
                                            u11561 187C                                              u11481 174A  
                                            u11801 2000                                              u11721 1E88  
                                            u12441 43AC                                              u12601 3E3A  
                                            u13161 1D44                                              u13081 1C66  
                                            u10850 4440                                              u11650 1952  
                                            u11570 18AC                                              u11490 175E  
                                            u11810 2026                                              u11730 1E9E  
                                            u12426 3CFA                                              u12450 43DE  
                                            u12610 2FE2                                              u12290 395E  
                                            u13170 1D6A                                              u13090 1C82  
                                            u10851 443C                                              u11651 194E  
                                            u11571 18A8                                              u11491 175A  
                                            u11811 2022                                              u11731 1E9A  
                                            u12507 3E90                                              u12451 43DA  
                                            u12611 2FDE                                              u12291 395A  
                                            u13171 1D66                                              u13091 1C7E  
                                            u10860 4946                                              u11660 198C  
                                            u11580 18BC                                              u11900 2130  
                                            u11820 2050                                              u11740 1EAE  
                                            u12436 3D2E                                              u12460 43FC  
                                            u12364 2C7A                                              u12620 2FF2  
                                            u13180 1D88                                              u10861 4942  
                                            u11661 1988                                              u11581 18B8  
                                            u11901 212C                                              u11821 204C  
                                            u11741 1EAA                                              u12461 43F8  
                                            u12365 2C76                                              u12621 2FEE  
                                            u13181 1D84                                              u10870 4A36  
                                            u10950 4A6E                                              u11670 199E  
                                            u11590 18D8                                              u11910 214A  
                                            u11830 2074                                              u11750 1EF0  
                                            u12446 43B4                                              u12470 441E  
                                            u12374 2CB2                                              u12630 3024  
                                            u13190 1D98                                              u10871 4A30  
                                            u10951 4A6A                                              u11671 199A  
                                            u11591 18D4                                              u11911 2146  
                                            u11831 2070                                              u11751 1EEC  
                                            u12471 441A                                              u12375 2CAE  
                                            u12631 3020                                              u13191 1D94  
                                            u12560 2DBC                                              u10880 3536  
                                            u10928 385E                                              u10960 40A8  
                                            u11680 19AE                                              u11920 2192  
                                            u11840 208A                                              u11760 1F02  
                                            u12480 463C                                              u12384 2CEA  
                                            u12640 306E                                              u12561 2DB8  
                                            u10881 3532                                              u10929 3870  
                                            u10961 40A4                                              u11681 19AA  
                                            u11921 218E                                              u11841 2086  
                                            u11761 1EFE                                              u12481 4638  
                                            u12385 2CE6                                              u12641 306A  
                                            u12570 2E10                                              u10938 3EEE  
                                            u10970 40BC                                              u11690 19CE  
                                            u11930 21C2                                              u11850 20A8  
                                            u11770 1F12                                              u12490 3E5A  
                                            u12394 2D22                                              u12650 30A6  
                                            u12571 2E0C                                              u10939 3F00  
                                            u10971 40B8                                              u11691 19CA  
                                            u11931 21BE                                              u11851 20A4  
                                            u11771 1F0E                                              u12491 3E56  
                                            u12395 2D1E                                              u12651 30A2  
                                            u10876 4A38                                              u10948 42C8  
                                            u11940 21EE                                              u11860 20C8  
                                            u11780 1F50                                              u12580 3DE0  
                                            u12660 30B8                                              u10949 42DA  
                                            u11941 21EA                                              u11861 20C4  
                                            u11781 1F4C                                              u12581 3DDC  
                                            u12661 30B4                                              u10990 24EA  
                                            u11870 20D8                                              u11790 1F90  
                                            u11950 2ED8                                              u12590 3E0C  
                                            u10991 24E6                                              u12671 4162  
                                            u11871 20D4                                              u11791 1F8C  
                                            u11951 2ED4                                              u12591 3E08  
                                            _LCD_1 0039                                              u11880 2106  
                                            u11960 2F0C                                              u12680 48E2  
                                            u11881 2102                                              u12681 48DE  
                                            u10898 355C                                              u11890 211C  
                                            u11970 2F3A                                              u12690 3BB8  
                                            u10899 3570                                              u11891 2118  
                                            u11971 2F36                                              u12691 3BB4  
                                            u10988 40EA                                              u11980 2F4E  
                                            u12940 1AA0                                              u10989 40FC  
                                            u11981 2F4A                                              u11965 2F02  
                                            u12941 1A9C                                              u11990 2F76  
                                            u12950 1AB0                                              u11991 2F72  
                                            u12951 1AAC                                              u12961 1ADE  
                                            u12970 1B5E                                              u12971 1B5A  
                                            u13907 1B20                                              u12980 1B6E  
                                            u13917 1C0E                                              u12981 1B6A  
                                            u12990 1B7E                                              u13927 1CF8  
                                            u12991 1B7A                                              u13937 1DF6  
                                            u13947 2E18                                              u13957 2E36  
                                            u13967 2E4E                                              u13977 456C  
                                            u13897 1AC8                                ?_Timer0_Write_Value 00D5  
                                            i2l161 337E                                              i2l243 3520  
                                            i2l741 4B98                                              i2l823 42A0  
                                            i2l817 4252                                              i2l818 429E  
                                            i2l870 4B94                                              i2l866 47D6  
                                  ___awdiv@counter 0005                                              i2l979 27D2  
                                            _RCREG 0FAE                                              _TMR0H 0FD7  
                                            _TMR1H 0FCF                                              _TMR0L 0FD6  
                                            _TMR1L 0FCE                                              _TMR3H 0FB3  
                                            _TMR3L 0FB2                                              _SPBRG 0FAF  
                                            _PORTA 0F80                                              _PORTB 0F81  
                                            _PORTC 0F82                                              _PORTD 0F83  
                                            _PORTE 0F84                                  ??_I2C_DO_TX_EMPTY 00DD  
                                            _TRISA 0F92                                              _TRISB 0F93  
                                            _TRISC 0F94                                              _TRISD 0F95  
                                            _TRISE 0F96                                              _TXREG 0FAD  
                             keyPad_Read@l_counter 00E1                           __end_ofi2_LCD_Send_4Bits 3CC0  
                __end_of_ECU_LCD_4Bit_Send_Command 423C                                   __end_of_TMR0_ISR 47A8  
                                 __end_of_TMR1_ISR 4AB8                                  __end_of_I2C_DO_RX 38AC  
                                __end_of_I2C_DO_TX 35E4                                   __end_of_TMR2_ISR 4B3E  
                                 __end_of_TMR3_ISR 4AAA                       ??_PinsConfig@hal_usart$F4708 00DF  
                   __end_ofi2_LCD_4Bits_Set_Curser 3BA4                                  __end_of_I2C_Close 4806  
                                            _hours 002D                     I2C_MasterOperation@returnValue 00E3  
                          _I2C_MasterEnableRestart 4B62                              __end_of_Timer0_Deinit 48F4  
                                            pclath 0FFA                                              pclatu 0FFB  
                                            tablat 0FF5                                   ?_I2C_SetCallback 00D5  
           __end_of_EUSART_ASYNC_WriteByteBlocking 49AA                     _EUSART_ASYNC_WriteByteBlocking 4990  
                                ??_Timer0_Set_Mode 00D7                       I2C_SetAddressNackCallback@cb 00D9  
                                            plusw0 0FEB                                              plusw2 0FDB  
                                            ttemp5 0040                                              ttemp6 0043  
                                            ttemp7 0047                                              status 0FD8  
                                            wtemp8 0040                                  ?_I2C_DO_SEND_STOP 0001  
                             ??_Timer0_Write_Value 00D9                            _Timer0_Prescaler_Config 436A  
                        keyPad_Read@l_rows_counter 00E2              __end_ofi2_ECU_LCD_4Bit_Send_char_Data 453C  
                    i2_ECU_LCD_4Bit_Send_char_Data 44E0                                 ??_I2C_DO_SEND_STOP 00D5  
                   ?_gpio_pin_direction_initialize 00D5                        _I2C_DefaultInterruptHandler 00BB  
                            _Timer0_Set_Resolution 45E2                                    __initialization 4026  
                                     __end_of_main 1E70                              ?_gpio_pin_write_logic 00D5  
                        ?_I2C_DO_SEND_RESTART_READ 0001                                    ?_update_display 0001  
                               _Timer1_Write_Value 48A6                              ECU_Relay_turnON@F3467 0025  
                      i2gpio_pin_write_logic@logic 0003                                     ?_I2C_DO_RX_ACK 0001  
                                        ??_ADC_ISR 0001                                     ?_EUSART_RX_ISR 0001  
                        Timer1_Write_Value@_timer1 0001                                     ?_EUSART_TX_ISR 0001  
                         gpio_pin_read_logic@logic 00D7                                      _lat_registers 0115  
                                  ?_LCD_Send_4Bits 00DB                                    LED_turnON@F3466 0029  
                                           ??_main 0163                                  ?_I2C_MasterIsNack 0001  
                 ??_Timer0_Interrupt_Configuration 00D7                    ?_Timer0_Interrupt_Configuration 00D5  
                                    __activetblptr 0003                                ?_Timer1_Write_Value 0001  
                                        ??_RB4_ISR 0001                                          ??_RB5_ISR 0001  
                                ?_I2C_MasterSetIrq 0001                                          ??_RB6_ISR 0001  
                                        ??_RB7_ISR 0001                                 ??_I2C_MasterIsNack 00D5  
                               ??_I2C_MasterSetIrq 00D5                                     _EUSART_RX_Init 3380  
                  __end_of_I2C_CallbackReturnReset 4B5A                 __end_of_CCPx_CompareMode_WriteData 42A2  
                       _CCPx_CompareMode_WriteData 423C                                             _ADRESH 0FC4  
                                           _EEADRH 0FAA                                             _ADRESL 0FC3  
                          _ECU_LCD_4Bit_Initialize 2DA8                                             _EEDATA 0FA8  
                                           _CCPR1H 0FBF                                             _CCPR2H 0FBC  
                                           _CCPR1L 0FBE                                             _CCPR2L 0FBB  
                                _keyPad_Initialize 3DC8                                             _EECON2 0FA7  
                                   _EUSART_TX_Init 36A6                                   ___awdiv@dividend 0001  
                    I2C_SetDataCompleteCallback@cb 00D9                                             _ANSELH 0F7F  
                                _EUSART_ASYNC_Init 4628                                       ??_I2C_Poller 00E2  
                                           i2l1002 2A4A                                             i2l1212 4B7C  
                                           i2l1216 4B80                                             i2l2112 4AA8  
                                           i2l1422 4B88                                             i2l2038 4B3C  
                                           i2l1417 4B8C                                             i2l1427 4B84  
                                           i2l1515 4A10                                             i2l1620 00D4  
                                           i2l2253 4B90                                             i2l1526 49F6  
                                           i2l1630 0224                                             i2l1622 0118  
                                           i2l1614 0052                                             i2l2352 44DE  
                                           i2l1640 030A                                             i2l1632 0266  
                                           i2l1624 015A                                             i2l1616 0072  
                                           i2l1537 49DC                                             i2l1650 03AA  
                                           i2l1642 032A                                             i2l1634 02AA  
                                           i2l1626 019E                                             i2l1618 0092  
                                           i2l2259 4B9A                                             i2l1548 49C2  
                                           i2l1652 03CA                                             i2l1644 034A  
                                           i2l1636 02CA                                             i2l1628 01E0  
                                           i2l2461 45E0                                             i2l2357 453A  
                                           i2l1654 03EA                                             i2l1646 036A  
                                           i2l1638 02EA                                             i2l1824 4B78  
                                           i2l2456 3CBE                                             i2l1912 47A6  
                                           i2l1656 040A                                             i2l1648 038A  
                                           i2l2633 3DC6                                             i2l2378 3B0E  
                                           i2l1659 042A                                             i2l2477 3BA2  
                                           i2l1950 48CA                                             i2l1951 48CC  
                                           i2l2926 36A4                                             i2l1991 4AB6  
                                           i2l2939 3808                                             i2l8301 2A1E  
                                           i2l8303 2A48                                             i2l8271 279A  
                                           i2l9151 3AA8                                             i2l9143 3A7C  
                                           i2l8281 2838                                             i2l8273 279E  
                                           i2l9153 3AD6                                             i2l9145 3A7E  
                                           i2l9411 35E4                                             i2l8291 292E  
                                           i2l8283 2868                                             i2l8275 27B0  
                                           i2l9155 3ADA                                             i2l9147 3A8E  
                                           i2l9421 360E                                             i2l9413 35E6  
                                           i2l8293 295C                                             i2l8285 2898  
                                           i2l8277 27D8                                             i2l9157 3B0C  
                                           i2l9149 3A94                                             i2l9271 4270  
                                           i2l9263 423C                                             i2l9431 363C  
                                           i2l9423 3616                                             i2l9415 35F4  
                                           i2l8295 298A                                             i2l8287 28C8  
                                           i2l8279 2808                                             i2l8471 3CBC  
                                           i2l8463 3C34                                             i2l8631 44E0  
                                           i2l8551 44DC                                             i2l8543 4484  
                                           i2l9273 427C                                             i2l9265 423C  
                                           i2l9441 3676                                             i2l9433 3644  
                                           i2l9425 361A                                             i2l9417 35FC  
                                           i2l8297 29B8                                             i2l8289 2900  
                                           i2l8481 45A8                                             i2l8465 3C34  
                                           i2l8633 44F0                                             i2l8545 4484  
                                           i2l8641 3B10                                             i2l9275 4292  
                                           i2l9267 424C                                             i2l9291 48A6  
                                           i2l9451 369C                                             i2l9443 3678  
                                           i2l9435 3652                                             i2l9427 3622  
                                           i2l9419 3600                                             i2l8299 29E6  
                                           i2l8483 45BE                                             i2l8475 4592  
                                           i2l8467 3C44                                             i2l8635 44F6  
                                           i2l8547 4494                                             i2l8651 3B3E  
                                           i2l8643 3B12                                             i2l9277 429A  
                                           i2l9269 425A                                             i2l9293 48B8  
                                           i2l9445 367E                                             i2l9437 3658  
                                           i2l9429 3634                                             i2l9461 3774  
                                           i2l8485 45C6                                             i2l8477 4592  
                                           i2l8469 3C4A                                             i2l8637 4538  
                                           i2l8629 44E0                                             i2l8549 449A  
                                           i2l8653 3B52                                             i2l8661 3BA0  
                                           i2l8645 3B14                                             i2l9295 48BE  
                                           i2l9439 366E                                             i2l9447 3684  
                                           i2l9471 37A8                                             i2l9463 3778  
                                           i2l9455 375C                                             i2l8487 45DE  
                                           i2l8479 45A2                                             i2l8655 3B66  
                                           i2l8647 3B24                                             i2l9297 48C2  
                                           i2l9289 48A6                                             i2l9801 3D5E  
                                           i2l9449 3694                                             i2l9481 37E2  
                                           i2l9473 37B0                                             i2l9465 3786  
                                           i2l9457 375E                                             i2l8649 3B2A  
                                           i2l9561 345E                                             i2l9811 3DBC  
                                           i2l9803 3D6E                                             i2l9475 37BE  
                                           i2l9483 37E8                                             i2l9467 378E  
                                           i2l9459 376C                                             i2l8659 3B7A  
                                           i2l9491 329A                                             i2l9563 346E  
                                           i2l9571 348A                                             i2l9813 3DC4  
                                           i2l9805 3D82                                             i2l9485 37F8  
                                           i2l9477 37D4                                             i2l9469 37A0  
                                           i2l9493 334A                                             i2l9581 34EC  
                                           i2l9573 348C                                             i2l9565 3482  
                                           i2l9807 3D8E                                             i2l9487 3800  
                                           i2l9479 37DC                                             i2l9495 336A  
                                           i2l9583 3504                                             i2l9575 34A4  
                                           i2l9567 3486                                             i2l9809 3DA0  
                                           i2l9585 351C                                             i2l9577 34BC  
                                           i2l9569 3488                                             i2l9579 34D4  
                                           i2l9797 3D44                                             i2l9799 3D46  
                               ?_keyPad_Initialize 00DF                                             _OSCCON 0FD3  
                         LCD_4Bits_Set_Curser@_LCD 00E2                                             _SPBRGH 0FB0  
                         i2LCD_4Bits_Set_Curser@rt 0011                                 ?_EUSART_ASYNC_Init 0159  
                                           _SSPADD 0FC8                                             _TRISA5 7C95  
                                           _TRISC3 7CA3                                             _TRISC4 7CA4  
                                           _TRISC5 7CA5                                             _SSPBUF 0FC9  
                                           _SPI_SS 00C6                                 Timer0_Init@_timer0 00D9  
                                 __end_of___xxtofl 2C04                               _LCD_4Bits_Set_Curser 38AC  
                             ??_Timer1_Write_Value 0005                                      ??_Timer0_Init 00DB  
                              _I2C_MasterGetRxData 4B4E                              EUSART_RX_Init@_EUSART 00D5  
                              ??_keyPad_Initialize 00E1                                ??_EUSART_ASYNC_Init 00FE  
                                        ??___fladd 0147                                          ??___fldiv 00EB  
                                    _I2C_MasterFsm 4094                                          ??___awdiv 0005  
                                        ??___awmod 0005                                          ??___fltol 00D9  
                                           _pinRC6 0031                                             _pinRC7 0030  
               CCPx_CompareMode_WriteData@CCPx_reg 0006                                             clear_0 406C  
                                           clear_1 4078                                             clear_2 4084  
                                I2C_SetCallback@cb 00D5                                   ___awdiv@quotient 0007  
                                  ___awmod@divisor 0003                             ?_I2C_Read1ByteRegister 00E4  
                                           isa$std 0001                                    ___awmod@counter 0005  
                                    _I2C_SetBuffer 4936                                 __end_of_I2C_Poller 4974  
                     __end_of_I2C_MasterDisableIrq 4B6E                                _CCP2_InterrptHandle 00BD  
                   ?_REALTIMECLOCK_DS1307_Get_Data 00E7                                          ?_CCP1_ISR 0001  
                              _I2C_DO_ADDRESS_NACK 42A2                                       __pdataCOMRAM 0034  
                                        ?_CCP2_ISR 0001                               ?_I2C_MasterGetRxData 0001  
                                        ?_I2C_Open 0001                 __end_of_I2C_SetAddressNackCallback 4A26  
                  i2ECU_LCD_4Bit_Send_char_Data@rt 000D                      ECU_LCD_4Bit_Send_char_Data@rt 00E1  
                       _I2C_SetAddressNackCallback 4A12                         _USART_FRE_InterruptHandler 008B  
                                     __mediumconst 0000                             __end_of_EUSART_RX_Init 345E  
                        ECU_LCD_4Bit_Initialize@rt 00E5                                             tblptrh 0FF7  
                                           tblptrl 0FF6                          __end_of_keyPad_Initialize 3E46  
                                           tblptru 0FF8                             __end_of_EUSART_TX_Init 375C  
                        ??_I2C_MasterEnableRestart 00D5                          _Interrupt_RB4_Handler_LOW 00AD  
                        __end_of_EUSART_ASYNC_Init 466E                        _USART_OVRR_InterruptHandler 0089  
                          _Timer0_InterruptHandler 009D                                       ___xxtofl@arg 00DF  
                        ??_Timer0_Prescaler_Config 00D7                                       ___xxtofl@exp 00DE  
                                _SYSTEM_Initialize 4A80                                       ___xxtofl@val 00D5  
                                       __accesstop 0060                            __end_of__initialization 408A  
                                        ?_INT0_ISR 0001                                          ?_INT1_ISR 0001  
                                        ?_INT2_ISR 0001                              ?_LCD_4Bits_Set_Curser 00E2  
                              _I2C_MasterOperation 466E                                 ?_SYSTEM_Initialize 0001  
                                    ___rparam_used 0001                               ?_I2C_DO_ADDRESS_NACK 0001  
                                       ___fltol@f1 00D5                             ?_Timer0_Set_Resolution 00D5  
                       _I2C_Report_Write_Collision 00B7                            _rdBlkRegCompleteHandler 4738  
                                RB5_ISR@RB5_Source 0001                             ??_gpio_pin_write_logic 00D8  
                                   __pcstackCOMRAM 0001                 __end_of_EUSART_BaudRateCalculation 1556  
                       _EUSART_BaudRateCalculation 104A                                     ?_I2C_MasterFsm 0001  
                                  ??_I2C_DO_RX_ACK 00D5                                       __pidataBANK1 46F8  
                           _I2C_CallbackReturnStop 4B5A                                ??_SYSTEM_Initialize 00D5  
                                        ?_TMR0_ISR 0001                                    ??_EUSART_RX_ISR 0001  
                        _USART_TX_InterruptHandler 008F                                          ?_TMR1_ISR 0001  
                                        ?_TMR2_ISR 0001                                          ?_TMR3_ISR 0001  
                         i2gpio_pin_write_logic@rt 0006                __end_of_ECU_LCD_4Bit_Send_char_Data 41D4  
                   ?i2_ECU_LCD_4Bit_Send_char_Data 000B                        _ECU_LCD_4Bit_Send_char_Data 416C  
                           ECU_Relay_turnOFF@F3472 00C5                                    ??_EUSART_TX_ISR 0001  
                         Timer1_Write_Value@_value 0003                                __end_of_Timer0_Init 3C34  
                                   ?_I2C_SetBuffer 00D5                            ?_I2C_MasterWaitForEvent 0001  
                    __end_of_I2C_DO_SEND_ADR_WRITE 4A9C                         ?_I2C_DO_SEND_RESTART_WRITE 0001  
                             ?_I2C_MasterOperation 0001                              ??_I2C_MasterGetRxData 00D5  
                                       ??_CCP1_ISR 0008                                         ??_CCP2_ISR 0001  
                                 LED_turnOFF@F3471 0028                                         ??_I2C_Open 00D5  
               __end_of_PinsConfig@hal_usart$F4705 46F8                         _PinsConfig@hal_usart$F4705 46B4  
                        ??_ECU_LCD_4Bit_Initialize 00E3                        ??_ECU_LCD_4Bit_Send_Command 00E1  
                                  ?_EUSART_RX_Init 00D5                         __end_of_I2C_MasterClearIrq 4B76  
                                  ?_EUSART_TX_Init 00D5                          _Interrupt_RB5_Handler_LOW 00A9  
                        __end_of_SYSTEM_Initialize 4A8E                                  _I2C_MasterSendAck 4B3E  
            Timer0_Interrupt_Configuration@_timer0 00D5                                         __pbssBANK0 0060  
                                       __pbssBANK1 0165            __end_of_REALTIMECLOCK_DS1307_print_Data 31B0  
                ??_REALTIMECLOCK_DS1307_print_Data 00FE                   ?_REALTIMECLOCK_DS1307_print_Data 015B  
                  _REALTIMECLOCK_DS1307_print_Data 30C0                                      ??_I2C_DO_IDLE 00D5  
                                    ??_I2C_DO_RCEN 00D5                      __end_of_rd2RegCompleteHandler 4856  
                     __end_of_I2C_MasterSendTxData 4AEE                                 ?_I2C_MasterSendAck 0001  
                                       ??_INT0_ISR 0001                                  _I2C_MasterStartRx 4B52  
                                       ??_INT1_ISR 0001                                         ??_INT2_ISR 0001  
                            ??_I2C_DO_ADDRESS_NACK 00DD                      __end_of_wr2RegCompleteHandler 48A6  
          EUSART_ASYNC_WriteStringBlocking@str_len 00D8                                _I2C_DO_RX_NACK_STOP 4B06  
                            _rd1RegCompleteHandler 4856                                 ?_I2C_MasterStartRx 0001  
                       __end_of_I2C_MasterSendNack 4B4A                              _wr1RegCompleteHandler 4806  
                              ??_I2C_MasterSendAck 00D5                           rd1RegCompleteHandler@ptr 00DC  
                      __end_of_I2C_DO_SEND_RESTART 4B26                                    _I2C_DO_TX_EMPTY 3EC2  
                              I2C_SetBuffer@buffer 00D5                                         ??_TMR0_ISR 0018  
                                       ??_TMR1_ISR 0001                                         ??_TMR2_ISR 0001  
                                       ??_TMR3_ISR 0001                     __end_of_I2C_MasterWaitForEvent 4A70  
                              ??_I2C_MasterStartRx 00D5                                            _ADC_ISR 4B96  
                            ??_I2C_MasterOperation 00E2                     I2C_SetDataCompleteCallback@ptr 00DB  
                                 LCD_Send_4Bits@rt 00DE                                  RB7_ISR@RB7_Source 0001  
                         ??_I2C_DO_RX_NACK_RESTART 00D5                  __end_of_I2C_DO_SEND_RESTART_WRITE 4B2E  
                             ?_I2C_DO_RX_NACK_STOP 0001                                  ?i2_update_display 0001  
                                          i2l10101 4B82                                            i2l10017 4B96  
                                          i2l10121 49E0                                            i2l10203 4B76  
                                          i2l10115 4A10                                            i2l10107 49FA  
                                          i2l10123 49E2                                            i2l11011 004E  
                                          i2l10061 4B92                                            i2l10109 49FC  
                                          i2l11101 02B8                                            i2l11021 00A0  
                                          i2l11013 0060                                            i2l10055 47A8  
                                          i2l10143 49DC                                            i2l10135 49C6  
                                          i2l10151 49AE                                            i2l11111 0306  
                                          i2l11103 02C6                                            i2l11031 00E2  
                                          i2l11023 00AE                                            i2l11015 006E  
                                          i2l11007 0032                                            i2l10057 47AA  
                                          i2l10081 4B7A                                            i2l10129 49F6  
                                          i2l10137 49C8                                            i2l11121 0358  
                                          i2l11113 0318                                            i2l11105 02D8  
                                          i2l11041 0126                                            i2l11033 00F0  
                                          i2l11025 00BC                                            i2l11017 0080  
                                          i2l11009 0040                                            i2l10059 47BE  
                                          i2l10171 478E                                            i2l10163 4770  
                                          i2l11131 03A6                                            i2l11123 0366  
                                          i2l11115 0326                                            i2l11107 02E6  
                                          i2l11051 0168                                            i2l11043 0134  
                                          i2l11035 00FE                                            i2l11027 00CC  
                                          i2l11019 008E                                            i2l10085 4B7E  
                                          i2l10157 49C2                                            i2l10149 49AC  
                                          i2l10165 4772                                            i2l10173 4AAA  
                                          i2l10181 4B36                                            i2l11141 03F8  
                                          i2l11133 03B8                                            i2l11125 0378  
                                          i2l11117 0338                                            i2l11109 02F8  
                                          i2l11061 01AC                                            i2l11053 0176  
                                          i2l11045 0142                                            i2l11037 010E  
                                          i2l11029 00CE                                            i2l10095 4B86  
                                          i2l10167 4778                                            i2l10175 4AAC  
                                          i2l11143 0406                                            i2l11135 03C6  
                                          i2l11127 0386                                            i2l11119 0346  
                                          i2l11071 01EE                                            i2l11063 01BA  
                                          i2l11055 0184                                            i2l11047 0152  
                                          i2l11039 0112                                            i2l10193 4B8E  
                                          i2l10089 4B8A                                            i2l10169 477C  
                                          i2l10177 4AB2                                            i2l10185 4A9C  
                                          i2l11145 0418                                            i2l11137 03D8  
                                          i2l11129 0398                                            i2l11081 0232  
                                          i2l11073 01FC                                            i2l11065 01C8  
                                          i2l11057 0194                                            i2l11049 0154  
                                          i2l10187 4A9E                                            i2l11147 0426  
                                          i2l11139 03E6                                            i2l11091 0274  
                                          i2l11083 0240                                            i2l11075 020A  
                                          i2l11067 01D8                                            i2l11059 0198  
                                          i2l10197 4B9A                                            i2l10189 4AA4  
                                          i2l11093 0282                                            i2l11085 024E  
                                          i2l11077 021A                                            i2l11069 01DA  
                                          i2l11095 0290                                            i2l11087 025E  
                                          i2l11079 021E                                            i2l11097 02A0  
                                          i2l11089 0260                                            i2l11099 02A4  
                                          _RB4_ISR 49F8                                            _RB5_ISR 49DE  
                                          i2l14847 2A32                                            _RB6_ISR 49C4  
                                          _RB7_ISR 49AA                                    _Timer0_Set_Mode 3CC0  
                                        ?___xxtofl 00D5                           _ret@ecu_servoMotor$F5789 00C3  
                                    ?_MSSP_I2C_ISR 0001                                 ??i2_update_display 0018  
                                ?i2_LCD_Send_4Bits 0007                          __end_of_I2C_MasterSendAck 4B44  
                                          _OSCTUNE 0F9B                          _Interrupt_RB6_Handler_LOW 00A5  
                                          _SSPCON1 0FC6                                            _SSPCON2 0FC5  
                                          _SPI_SDI 00C8                                            _SPI_SCK 00C7  
                               ??i2_LCD_Send_4Bits 0009                                            _SPI_SDO 00C9  
                                          _SSPSTAT 0FC7                                            _PWM_Val 0022  
                        __end_of_I2C_MasterStartRx 4B56                               I2C_Close@returnValue 00D5  
                     ?_I2C_SetDataCompleteCallback 00D9                    i2ECU_LCD_4Bit_Send_Command@_LCD 000B  
                    ECU_LCD_4Bit_Send_Command@_LCD 00DF                                          _I2C_DO_RX 380A  
                                        _I2C_DO_TX 3522                             ??_LCD_4Bits_Set_Curser 00E5  
                 __end_of_I2C_DO_SEND_RESTART_READ 4B36                              gpio_pin_initialize@rt 00DE  
                     I2C_Read1ByteRegister@address 00E5                                     _tris_registers 011A  
                                        _I2C_Close 47D8                          ??_rdBlkRegCompleteHandler 00DD  
                                    ?_MSSP_SPI_ISR 0001                                          _CCP1_flag 0024  
                             _I2C_MasterDisableIrq 4B6A                              gpio_pin_read_logic@rt 00DA  
                                 ??_update_display 00FE                                  ??_MSSP_I2C_BC_ISR 0001  
                     ?i2_ECU_LCD_4Bit_Send_Command 000B                          _ECU_LCD_4Bit_Send_Command 41D4  
                                  ??_I2C_MasterFsm 00DF                               _ADC_InterruptHandler 00C1  
                                          __Hparam 0000                                        _Timer0_Init 3BA4  
                                          __Lparam 0000                                __end_of_I2C_DO_IDLE 4AE4  
                              __end_of_I2C_DO_RCEN 4AC4                                   ??_LCD_Send_4Bits 00DD  
                             _SPI_InterruptHandler 009F                                _gpio_pin_initialize 4306  
                                          ___fladd 1556                                 LCD_Send_4Bits@_LCD 00DB  
                                          ___fldiv 1E70                                            ___awdiv 35E4  
                              _gpio_pin_read_logic 2C04                                            ___awmod 375C  
                                          ___fltol 2EC0                                    ??_I2C_SetBuffer 00D8  
                  ?_EUSART_ASYNC_WriteByteBlocking 0001                   ??_EUSART_ASYNC_WriteByteBlocking 00D5  
                            Timer1_Write_Value@ret 0005                            I2C_SetBuffer@bufferSize 00D6  
                                     __psmallconst 1000                            _Timer1_InterruptHandler 0099  
                                   _I2C_MasterOpen 4916                                            __pcinit 4026  
                                   _I2C_MasterStop 4B5E                                      keyPad_Read@rt 00E0  
                                   _I2C_Initialize 4A4E                                            __ramtop 1000  
                                          __ptext0 1A0E                                            __ptext1 31B0  
                                          __ptext2 394A                                            __ptext3 38AC  
                                          __ptext4 416C                                            __ptext5 2FC8  
                                          __ptext6 2C04                                            __ptext7 3DC8  
                                          __ptext8 3BA4                                            __ptext9 43CA  
                                       _exit_alarm 002C                              ??_I2C_DO_RX_NACK_STOP 00D5  
                                        _T0CONbits 0FD5                                          _T1CONbits 0FCD  
                  ??_gpio_pin_direction_initialize 00D7                                     ??_MSSP_I2C_ISR 0001  
                            _OSCILLATOR_Initialize 4AEE                                          _T2CONbits 0FCA  
                                       ??___xxtofl 00D9                                          _T3CONbits 0FB1  
                                 ___awmod@dividend 0001                                 I2C_SetCallback@idx 00D8  
                                          _minutes 002E                           ??_PIN_MANAGER_Initialize 00D5  
                    I2C_CallbackReturnReset@funPtr 00DC                                            _seconds 002F  
                               I2C_SetCallback@ptr 00D7                           wr1RegCompleteHandler@ptr 00DC  
                             ?_gpio_pin_initialize 00DB                          _Interrupt_RB7_Handler_LOW 00A1  
                             ?_gpio_pin_read_logic 00D5                           ??i2_gpio_pin_write_logic 0004  
                      ?_CCPx_CompareMode_WriteData 0001                               end_of_initialization 408A  
              EUSART_ASYNC_WriteStringBlocking@ret 00DC                                         ?_I2C_DO_RX 0001  
                                       ?_I2C_DO_TX 0001                      PinsConfig@hal_usart$F4705@ret 00DF  
           __end_of_Timer0_Interrupt_Configuration 4990                     _Timer0_Interrupt_Configuration 4974  
                                       ?_I2C_Close 0001                                     ??_MSSP_SPI_ISR 0001  
                           ?_rd1RegCompleteHandler 00DC                            __end_of_I2C_DO_TX_EMPTY 3F3C  
                            ?_I2C_MasterDisableIrq 0001                             ?_wr1RegCompleteHandler 00DC  
                                        i2u1398_47 45C0                         _Interrupt_RB4_Handler_HIGH 00AF  
                    ??i2_ECU_LCD_4Bit_Send_Command 000D                                          _RCSTAbits 0FAB  
                                       _timer1_obj 0183                                            postdec1 0FE5  
                                          postdec2 0FDD                            ??_I2C_Read1ByteRegister 00E5  
                           __end_of_I2C_MasterOpen 4936                                            postinc0 0FEE  
                                          postinc2 0FDE                             __end_of_I2C_MasterStop 4B62  
                           __end_of_I2C_Initialize 4A60                                         _time_array 0083  
                          __end_of_Timer0_Set_Mode 3D44                                   Timer0_Deinit@ret 00D7  
                                        _PORTBbits 0F81                    __end_of_rdBlkRegCompleteHandler 4770  
                             _I2C_MasterSendTxData 4AE4                                   _InterruptManager 0008  
                                      ___fladd@grs 014E                                      ___xxtofl@sign 00DD  
                      ?_I2C_SetAddressNackCallback 00D9                                          _TRISCbits 0F94  
                     gpio_pin_initialize@pinConfig 00DB                              ??_gpio_pin_initialize 00DD  
                            ??_gpio_pin_read_logic 00D8                                        ___fldiv@grs 00F6  
                                      ___fldiv@rem 00EF                  EUSART_BaudRateCalculation@_EUSART 00FC  
                         EUSART_ASYNC_Init@_EUSART 0159                            ??_Timer0_Set_Resolution 00D7  
                                      _I2C_DO_IDLE 4ADA                                        _I2C_DO_RCEN 4AB8  
                       rdBlkRegCompleteHandler@ptr 00DC                                        _CCP1CONbits 0FBD  
                                      _CCP2CONbits 0FBA                                          _TXSTAbits 0FAC  
                    CCPx_CompareMode_WriteData@ret 0005                            ?_I2C_CallbackReturnStop 00DC  
                         _I2C_DO_SEND_RESTART_READ 4B2E                             Timer0_Set_Mode@_timer0 00D5  
                      ?_EUSART_BaudRateCalculation 00FC                       I2C_CallbackReturnStop@funPtr 00DC  
                                  ?_I2C_MasterOpen 0001                                    ?_I2C_MasterStop 0001  
                                  ?_I2C_Initialize 0001                      Convert_uint16_to_string@F3619 0165  
                          _I2C_CallbackReturnReset 4B56                           I2C_Read1ByteRegister@reg 00E4  
                                      _BAUDCONbits 0FB8                                      __pidataCOMRAM 4AC4  
                                 ??_EUSART_RX_Init 00D7                                     _timer0_preload 009B  
      i2ECU_LCD_4Bit_Send_String_Data_Postition@rt 0017          ECU_LCD_4Bit_Send_String_Data_Postition@rt 0162  
                                 ??_EUSART_TX_Init 00D7                              ?_I2C_MasterSendTxData 0001  
                         ??i2_LCD_4Bits_Set_Curser 0011                             ?_OSCILLATOR_Initialize 0001  
                      ??_I2C_DO_SEND_RESTART_WRITE 00D5                                     _timer1_preload 0097  
                                ??_CCP1_DefaultISR 0008                                     _timer2_preload 002B  
           EUSART_BaudRateCalculation@baudrate_Val 0151                                start_initialization 4026  
                                   _timer3_preload 0091                        ?_PinsConfig@hal_usart$F4706 0001  
                                    ??_keyPad_Read 00DE                                      ?_I2C_DO_RESET 0001  
           gpio_pin_direction_initialize@pinConfig 00D5              __end_of_gpio_pin_direction_initialize 24D2  
                    _gpio_pin_direction_initialize 2202                    gpio_pin_direction_initialize@rt 00D9  
                          _Timer2_InterruptHandler 0095                                        ??_I2C_DO_RX 00DD  
                                      ??_I2C_DO_TX 00DD                                  ??_I2C_MasterClose 00D5  
                                    _Timer0_Deinit 48CE                             ??_I2C_MasterDisableIrq 00D5  
                                      ??_I2C_Close 00D5                                  ??_I2C_MasterStart 00D5  
                                ??_I2C_MasterWrite 00E4                     __end_of_I2C_CallbackReturnStop 4B5E  
                         keyPad_Read@coloumn_logic 00E4                             _I2C_DO_RX_NACK_RESTART 4AFE  
                                 ?_I2C_DO_TX_EMPTY 0001                                 _I2C_MasterClearIrq 4B72  
                             __end_of_MSSP_I2C_ISR 4B7E                            LCD_4Bits_Set_Curser@row 00E3  
                       _Interrupt_RB5_Handler_HIGH 00AB                          _USART_RX_InterruptHandler 008D  
                              ?_I2C_MasterClearIrq 0001                        __end_of_I2C_MasterGetRxData 4B52  
                                      __pdataBANK1 0100                 keyPad_Initialize@l_coloums_counter 00E5  
                         Timer0_Write_Value@_value 00D7                              __end_of_I2C_DO_RX_ACK 4B16  
                                 ?_Timer0_Set_Mode 00D5                                           ?_ADC_ISR 0001  
                            i2LCD_Send_4Bits@_Data 0008                              __end_of_EUSART_RX_ISR 4B9C  
                            __end_of_EUSART_TX_ISR 4B92                                   _I2C_DO_SEND_STOP 4B16  
                                ??_I2C_SetCallback 00D8                                I2C_Open@returnValue 00D6  
                               _I2C_MasterSendNack 4B44                           ?_I2C_MasterEnableRestart 0001  
                                        ___fladd@a 0143                                          ___fladd@b 013F  
                                _i2c_fsmStateTable 1001                               __end_of_MSSP_SPI_ISR 4B7A  
             __end_of_LCD_4Bits_Send_Enable_Signal 4592                   ??i2_LCD_4Bits_Send_Enable_Signal 0008  
                  ?i2_LCD_4Bits_Send_Enable_Signal 0007                       _LCD_4Bits_Send_Enable_Signal 453C  
                                        ___fldiv@a 00E7                                          ___fldiv@b 00E3  
                                         ?_RB4_ISR 0001  __end_ofi2_ECU_LCD_4Bit_Send_String_Data_Postition 3B10  
  __end_of_ECU_LCD_4Bit_Send_String_Data_Postition 39E6        ??i2_ECU_LCD_4Bit_Send_String_Data_Postition 0017  
       ?i2_ECU_LCD_4Bit_Send_String_Data_Postition 0012          ??_ECU_LCD_4Bit_Send_String_Data_Postition 00FE  
         ?_ECU_LCD_4Bit_Send_String_Data_Postition 015D          i2_ECU_LCD_4Bit_Send_String_Data_Postition 3A7C  
          _ECU_LCD_4Bit_Send_String_Data_Postition 394A                                           ?_RB5_ISR 0001  
                                         ?_RB6_ISR 0001                              _I2C_DO_SEND_ADR_WRITE 4A8E  
                                         ?_RB7_ISR 0001                                        __pbssCOMRAM 0022  
                                    __pcstackBANK0 00D5                                      __pcstackBANK1 013F  
                                   ??_I2C_DO_RESET 00D5                           ?_Timer0_Prescaler_Config 00D5  
                              ?_I2C_MasterSendNack 0001                                    _MSSP_I2C_BC_ISR 4B7E  
                                keyPad_Read@keypad 00DB                                      LED_init@F3461 002A  
                     __end_of_I2C_DO_SEND_ADR_READ 4A80                               ??_I2C_MasterClearIrq 00D5  
                      __end_of_I2C_DO_ADDRESS_NACK 4306                                     ?_Timer0_Deinit 00D5  
                                 _I2C_MasterIsNack 4A26                                __end_of_keyPad_Read 30C0  
                                    _NumberPressed 00FF                          _I2C_DO_SEND_RESTART_WRITE 4B26  
                    i2ECU_LCD_4Bit_Send_Command@rt 000D                                   _I2C_MasterSetIrq 4B4A  
                                        __pnvBANK0 00FE                              _rd2RegCompleteHandler 482E  
                     Timer0_Set_Resolution@_timer0 00D5                                       ?_Timer0_Init 00D9  
                           _PIN_MANAGER_Initialize 48F4                              _wr2RegCompleteHandler 487E  
                        ??_I2C_CallbackReturnReset 00DD                        __end_of_I2C_MasterOperation 46B4  
                             ??_I2C_MasterSendNack 00D5                           rd2RegCompleteHandler@ptr 00DC  
                                        __pintcode 0008                                           ?___fladd 013F  
                           i2_gpio_pin_write_logic 279A                                           ?___fldiv 00E3  
                                         ?___awdiv 0001                                          __ptext100 4592  
                                        __ptext101 279A                                          __ptext110 4B7E  
                                        __ptext102 375C                                          __ptext111 4B82  
                                        __ptext103 35E4                                          __ptext120 423C  
                                        __ptext112 4B86                                          __ptext104 49AA  
                                        __ptext121 4B96                                          __ptext113 4B8A  
                                        __ptext105 49C4                                          __ptext114 4B8E  
                                        __ptext106 49DE                                          __ptext115 4B9A  
                                        __ptext107 49F8                                          __ptext116 4B92  
                                        __ptext108 4B76                                          __ptext117 47A8  
                                        __ptext109 4B7A                                          __ptext118 3D44  
                                        __ptext119 48A6                                           ?___awmod 0001  
                                         ?___fltol 00D5                                keyPad_Initialize@rt 00E3  
                           ??_I2C_MasterSendTxData 00D5                                _CCP1_InterrptHandle 00BF  
                        __end_of_i2c_fsmStateTable 1021                          gpio_pin_write_logic@logic 00D7  
              i2ECU_LCD_4Bit_Send_Command@_Command 000C                  ECU_LCD_4Bit_Send_Command@_Command 00E0  
                         ?_ECU_LCD_4Bit_Initialize 00E2                    CCPx_CompareMode_WriteData@_CCPx 0001  
                             Timer0_Deinit@_timer0 00D5                    CCPx_CompareMode_WriteData@_Data 0002  
                                        _btn_value 0100                                        __smallconst 1000  
                                         _CCP1_ISR 47A8                                           _CCP2_ISR 4B92  
                          I2C_MasterOperation@read 00E2                                           _I2C_Open 3FB4  
                                         _CCP1_obj 00CA                      ?_LCD_4Bits_Send_Enable_Signal 00DB  
                               i2LCD_Send_4Bits@rt 000A                                          _curserPos 0038  
                          ??_rd1RegCompleteHandler 00DD                            ??_wr1RegCompleteHandler 00DD  
                                         _INT0_ISR 4B8A                                           _INT1_ISR 4B86  
                                         _INT2_ISR 4B82                                           _RB4_Flag 0037  
                                         _RB5_Flag 0036                                           _RB6_Flag 0035  
                                         _RB7_Flag 0034                                  RB4_ISR@RB4_Source 0001  
                         __end_of_InterruptManager 0456                                           _PIE1bits 0F9D  
                                         _PIE2bits 0FA0                      i2LCD_4Bits_Set_Curser@coloumn 0010  
                                         i2u600_44 2920                                           i2u600_45 291C  
                                         _PIR1bits 0F9E                                           i2u601_44 294E  
                                         i2u601_45 294A                                           i2u602_44 297C  
                                         i2u602_45 2978                                           _PIR2bits 0FA1  
                                         i2u603_44 29AA                                           i2u603_45 29A6  
                                         i2u612_40 3C44                                           i2u612_41 3C40  
                                         i2u604_44 29D8                                           i2u604_45 29D4  
                                         i2u613_40 45A2                                           i2u613_41 459E  
                                         i2u630_40 4494                                           i2u630_41 4490  
                                         i2u742_40 424C                                           i2u734_40 3A8E  
                                         i2u742_41 4248                                           i2u734_41 3A8A  
                                         i2u743_40 4270                                           i2u830_48 47C4  
                                         i2u647_40 44F0                                           i2u735_40 3ACE  
                                         i2u743_41 426C                                           i2u830_49 47D6  
                                         i2u647_41 44EC                                           i2u735_47 3AC4  
                                         i2u744_40 4292                                           i2u808_40 3D6E  
                                         i2u840_40 49D8                                           i2u760_40 3652  
                                         i2u648_40 3B24                                           i2u736_40 3AFC  
                                         i2u744_41 428E                                           i2u808_41 3D6A  
                                         i2u840_41 49D4                                           i2u760_41 364E  
                                         i2u648_41 3B20                                           i2u736_47 3AF2  
                                         i2u745_40 48B8                                           i2u809_40 3DA0  
                                         i2u841_40 49BE                                           i2u761_40 366E  
                                         i2u593_40 27B0                                           i2u737_40 3B0C  
                                         i2u745_41 48B4                                           i2u809_41 3D9C  
                                         i2u841_41 49BA                                           i2u761_41 366A  
                                         i2u593_41 27AC                                           i2u737_41 3B08  
                                         i2u762_40 3694                                           i2u594_40 27D2  
                                         i2u842_40 478E                                           i2u930_40 004E  
                                         i2u762_41 3690                                           i2u594_41 27CE  
                                         i2u842_41 478A                                           i2u930_41 004A  
                                         i2u763_40 376C                                           i2u931_40 0060  
                                         i2u763_41 3768                                           i2u931_41 005C  
                                         i2u595_44 27F8                                           i2u595_45 27F4  
                                         i2u764_40 3786                                           i2u843_48 4794  
                                         i2u940_40 00F0                                           i2u932_40 006E  
                                         i2u764_41 3782                                           i2u843_49 47A6  
                                         i2u940_41 00EC                                           i2u932_41 006A  
                                         i2u596_44 2828                                           i2u596_45 2824  
                                         i2u829_40 47BE                                           i2u757_40 35F4  
                                         i2u765_40 37A0                                           i2u941_40 00FE  
                                         i2u933_40 0080                                           i2u829_41 47BA  
                                         i2u757_41 35F0                                           i2u765_41 379C  
                                         i2u941_41 00FA                                           i2u933_41 007C  
                                         i2u597_44 2858                                           i2u597_45 2854  
                                         i2u838_40 4A0C                                           i2u758_40 360E  
                                         i2u766_40 37BE                                           i2u950_40 0194  
                                         i2u942_40 010E                                           i2u934_40 008E  
                                         i2u838_41 4A08                                           i2u758_41 360A  
                                         i2u766_41 37BA                                           i2u950_41 0190  
                                         i2u942_41 010A                                           i2u934_41 008A  
                                         i2u598_44 2888                                           i2u598_45 2884  
                                         i2u839_40 49F2                                           i2u759_40 3634  
                                         i2u767_40 37D4                                           i2u775_40 346E  
                                         i2u951_40 01AC                                           i2u943_40 0126  
                                         i2u935_40 00A0                                           i2u839_41 49EE  
                                         i2u759_41 3630                                           i2u767_41 37D0  
                                         i2u775_41 346A                                           i2u951_41 01A8  
                                         i2u943_41 0122                                           i2u935_41 009C  
                                         i2u599_44 28B8                                           i2u599_45 28B4  
                                         i2u768_40 37F8                                           i2u776_40 3482  
                                         i2u960_40 0240                                           i2u952_40 01BA  
                                         i2u944_40 0134                                           i2u936_40 00AE  
                                         i2u768_41 37F4                                           i2u776_41 347E  
                                         i2u960_41 023C                                           i2u952_41 01B6  
                                         i2u944_41 0130                                           i2u936_41 00AA  
                                         i2u961_40 024E                                           i2u953_40 01C8  
                                         i2u945_40 0142                                           i2u937_40 00BC  
                                         i2u929_40 0040                                           i2u961_41 024A  
                                         i2u953_41 01C4                                           i2u945_41 013E  
                                         i2u937_41 00B8                                           i2u929_41 003C  
                                         i2u970_40 02E6                                           i2u962_40 025E  
                                         i2u954_40 01D8                                           i2u946_40 0152  
                                         i2u938_40 00CC                                           i2u970_41 02E2  
                                         i2u962_41 025A                                           i2u954_41 01D4  
                                         i2u946_41 014E                                           i2u938_41 00C8  
                                         i2u971_40 02F8                                           i2u963_40 0274  
                                         i2u955_40 01EE                                           i2u947_40 0168  
                                         i2u939_40 00E2                                           i2u971_41 02F4  
                                         i2u963_41 0270                                           i2u955_41 01EA  
                                         i2u947_41 0164                                           i2u939_41 00DE  
                                         i2u980_40 0386                                           i2u972_40 0306  
                                         i2u964_40 0282                                           i2u956_40 01FC  
                                         i2u948_40 0176                                           i2u980_41 0382  
                                         i2u972_41 0302                                           i2u964_41 027E  
                                         i2u956_41 01F8                                           i2u948_41 0172  
                                         i2u981_40 0398                                           i2u973_40 0318  
                                         i2u965_40 0290                                           i2u957_40 020A  
                                         i2u949_40 0184                                           i2u981_41 0394  
                                         i2u973_41 0314                                           i2u965_41 028C  
                                         i2u957_41 0206                                           i2u949_41 0180  
                            __end_of_I2C_MasterFsm 4102                                           i2u990_40 0426  
                                         i2u982_40 03A6                                           i2u974_40 0326  
                                         i2u966_40 02A0                                           i2u958_40 021A  
                                         i2u990_41 0422                                           i2u982_41 03A2  
                                         i2u974_41 0322                                           i2u966_41 029C  
                                         i2u958_41 0216                                           i2u983_40 03B8  
                                         i2u975_40 0338                                           i2u967_40 02B8  
                                         i2u959_40 0232                                           i2u983_41 03B4  
                                         i2u975_41 0334                                           i2u967_41 02B4  
                                         i2u959_41 022E                                           i2u984_40 03C6  
                                         i2u976_40 0346                                           i2u968_40 02C6  
                                         i2u984_41 03C2                                           i2u976_41 0342  
                                         i2u968_41 02C2                                           i2u985_40 03D8  
                                         i2u977_40 0358                                           i2u969_40 02D8  
                                         i2u985_41 03D4                                           i2u977_41 0354  
                                         i2u969_41 02D4                                           i2u986_40 03E6  
                                         i2u978_40 0366                                           i2u986_41 03E2  
                                         i2u978_41 0362                                           i2u987_40 03F8  
                                         i2u979_40 0378                                           i2u987_41 03F4  
                                         i2u979_41 0374                                           i2u988_40 0406  
                                         i2u988_41 0402                                           i2u989_40 0418  
                                         i2u989_41 0414                         _Interrupt_RB6_Handler_HIGH 00A7  
                 ??_Timer0_DefaultInterruptHandler 0018                    ?_Timer0_DefaultInterruptHandler 0001  
                            EUSART_TX_Init@_EUSART 00D5                        __end_of_I2C_DO_RX_NACK_STOP 4B0E  
                                         _TMR0_ISR 4770                                           _TMR1_ISR 4AAA  
                                         _TMR2_ISR 4B36                                           _TMR3_ISR 4A9C  
                  __end_of_I2C_MasterEnableRestart 4B66                                           _UART_obj 011F  
               ECU_LCD_4Bit_Initialize@LCD_Counter 00E4                        _I2C_Report_Receive_OverFlow 00B9  
                          _Timer3_InterruptHandler 0093                      __end_of_I2C_Read1ByteRegister 3FB4  
                            __end_of_I2C_SetBuffer 4956                EUSART_ASYNC_WriteByteBlocking@_Byte 00D5  
                                       _ADCON0bits 0FC2                                         _ADCON1bits 0FC1  
                                       _ADCON2bits 0FC0                             ?_I2C_DO_SEND_ADR_WRITE 0001  
                          __end_of_MSSP_I2C_BC_ISR 4B82                    __end_of_Timer0_Prescaler_Config 43CA  
                         I2C_MasterSendTxData@data 00D5                                          _userInput 0032  
                         wr2RegCompleteHandler@ptr 00DC                                        _keyPad_Read 2FC8  
                                  ??_Timer0_Deinit 00D7                                        _INTCON2bits 0FF1  
            EUSART_ASYNC_WriteStringBlocking@_Byte 00D6                                        _INTCON3bits 0FF0  
                       ??_I2C_DO_SEND_RESTART_READ 00D5                                          copy_data0 403A  
                                        copy_data1 405A                           ?_rdBlkRegCompleteHandler 00DC  
                                       _I2C_Poller 4956                         __end_of_Timer0_Write_Value 4428  
                                       _I2C_Status 0060                                       ?_I2C_DO_IDLE 0001  
                                     ?_I2C_DO_RCEN 0001  i2ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn 0014  
  ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn 015F                             i2_LCD_4Bits_Set_Curser 3B10  
                           ?_rd2RegCompleteHandler 00DC                          ECU_Relay_Initialize@F3462 0026  
                                       _EECON1bits 0FA6                      __end_of_Timer0_Set_Resolution 4628  
                                 ??_I2C_MasterOpen 00D5                             ?_wr2RegCompleteHandler 00DC  
  _REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F5571 007D                                   ??_I2C_MasterStop 00D5  
                         ??_I2C_MasterWaitForEvent 00D5                                   ??_I2C_Initialize 00D5  
                             _REALTIMECLOCK_DS1307 016B                                           __Hrparam 0000  
                           LCD_4Bits_Set_Curser@rt 00E5                                           __Lrparam 0000  
                                  _CCP1_DefaultISR 3D44                        ECU_LCD_4Bit_Send_Command@rt 00E1  
                             __end_of_I2C_DO_RESET 4ADA                    __end_of_ECU_LCD_4Bit_Initialize 2EC0  
                             i2LCD_Send_4Bits@_LCD 0007                            ??_OSCILLATOR_Initialize 00D5  
                                RB6_ISR@RB6_Source 0001                       ?_ECU_LCD_4Bit_Send_char_Data 00DF  
                             _I2C_DO_SEND_ADR_READ 4A70                          Timer0_Write_Value@_timer0 00D5  
                              LCD_Send_4Bits@_Data 00DC                    i2gpio_pin_write_logic@pinConfig 0001  
                    gpio_pin_write_logic@pinConfig 00D5                             _Interrupt_INT0_Handler 00B5  
                      __end_of_gpio_pin_initialize 436A                   I2C_Read1ByteRegister@returnValue 00E6  
               i2ECU_LCD_4Bit_Send_char_Data@_Data 000C                   ECU_LCD_4Bit_Send_char_Data@_Data 00E0  
                      __end_of_gpio_pin_read_logic 2DA8                             _Interrupt_INT1_Handler 00B3  
                                  _I2C_MasterClose 4B6E                      I2C_SetAddressNackCallback@ptr 00DB  
                           _Interrupt_INT2_Handler 00B1                                    I2C_Open@address 00D5  
                                         ___xxtofl 2A4C                                    _I2C_MasterStart 4B66  
                                     _MSSP_I2C_ISR 4B7A                                    _I2C_MasterWrite 4AF6  
                                         __ptext10 45E2                                           __ptext11 3CC0  
                                         __ptext20 3E46                                           __ptext12 436A  
                                         __ptext21 4990                                           __ptext13 4974  
                                         __ptext30 1556                                           __ptext22 4628  
                                         __ptext14 48CE                                           __ptext31 4102  
                                         __ptext23 46B4                                           __ptext15 4A80  
                                         __ptext40 4094                                           __ptext32 3F3C  
                                         __ptext24 36A6                                           __ptext16 48F4  
                                         __ptext41 42A2                                           __ptext33 4A12  
                                         __ptext25 3380                                           __ptext17 4AEE  
                                         __ptext50 4AB8                                           __ptext42 4AD0  
                                         __ptext34 3FB4                                           __ptext26 104A  
                                         __ptext18 4A4E                                           __ptext51 380A  
                                         __ptext43 4AFE                                           __ptext35 4916  
                                         __ptext27 2A4C                                           __ptext19 30C0  
                                         __ptext60 4B3E                                           __ptext52 3522  
                                         __ptext44 4B06                                           __ptext36 4AF6  
                                         __ptext28 2EC0                                           __ptext61 4B4E  
                                         __ptext53 4A8E                                           __ptext45 4B0E  
                                         __ptext37 466E                                           __ptext29 1E70  
                                         __ptext70 487E                                           __ptext62 4B44  
                                         __ptext54 4A70                                           __ptext46 4B16  
                                         __ptext38 4956                                           __ptext71 4A3A  
                                         __ptext63 4B52                                           __ptext55 4ADA  
                                         __ptext47 4B1E                                           __ptext39 4A60  
                                         __ptext80 4B72                                           __ptext72 4428  
                                         __ptext64 4B56                                           __ptext56 3EC2  
                                         __ptext48 4B26                                           __ptext81 2DA8  
                                         __ptext73 4936                                           __ptext65 4B5A  
                                         __ptext57 4B4A                                           __ptext49 4B2E  
                                         __ptext90 4B36                                           __ptext82 4306  
                                         __ptext74 4B5E                                           __ptext66 4738  
                                         __ptext58 4A26                                           __ptext91 4AAA  
                                         __ptext83 2202                                           __ptext75 4B62  
                                         __ptext67 4806                                           __ptext59 4AE4  
                                         __ptext92 4770                                           __ptext84 41D4  
                                         __ptext76 4B66                                           __ptext68 482E  
                                         __ptext93 345E                                           __ptext85 39E6  
                                         __ptext77 47D8                                           __ptext69 4856  
                                         __ptext94 329A                                           __ptext86 453C  
                                         __ptext78 4B6A                                           __ptext95 3A7C  
                                         __ptext87 24D2                                           __ptext79 4B6E  
                                         __ptext96 3B10                                           __ptext97 4484  
                                         __ptext89 4A9C                                           __ptext98 44E0  
                                         __ptext99 3C34                __end_of_I2C_SetDataCompleteCallback 4A4E  
                      _I2C_SetDataCompleteCallback 4A3A                            ?_I2C_DO_RX_NACK_RESTART 0001  
                   ??_LCD_4Bits_Send_Enable_Signal 00DC                         __end_of_Timer1_Write_Value 48CE  
                         __end_of_I2C_DO_SEND_STOP 4B1E                            keyPad_Initialize@keypad 00DF  
                                 i2_update_display 329A                                           _keypad_1 0130  
                                         _nextBack 0033                __end_ofi2_ECU_LCD_4Bit_Send_Command 44E0  
                      i2_ECU_LCD_4Bit_Send_Command 4484                                       _MSSP_SPI_ISR 4B76  
                                 i2_LCD_Send_4Bits 3C34                                    _I2C_SetCallback 4428  
                    ??_I2C_SetDataCompleteCallback 00DC                                           _timer0_1 0138  
                    keyPad_Read@l_coloumns_counter 00E3           __end_of_EUSART_ASYNC_WriteStringBlocking 3EC2  
               ??_EUSART_ASYNC_WriteStringBlocking 00DA                  ?_EUSART_ASYNC_WriteStringBlocking 00D6  
                 _EUSART_ASYNC_WriteStringBlocking 3E46                                           isa$xinst 0000  
                       _Interrupt_RB7_Handler_HIGH 00A3                                           int$flags 003F  
                            ?_I2C_DO_SEND_ADR_READ 0001                        LCD_4Bits_Set_Curser@coloumn 00E4  
                         __end_of_I2C_MasterIsNack 4A3A                      ??_ECU_LCD_4Bit_Send_char_Data 00E1  
                           gpio_pin_write_logic@rt 00DA                                     Timer0_Init@ret 00DB  
                         __end_of_I2C_MasterSetIrq 4B4E                                   ?_MSSP_I2C_BC_ISR 0001  
                                       _INTCONbits 0FF2                     __end_of_I2C_DO_RX_NACK_RESTART 4B06  
                     __end_of_gpio_pin_write_logic 279A                  i2ECU_LCD_4Bit_Send_char_Data@_LCD 000B  
                  ECU_LCD_4Bit_Send_char_Data@_LCD 00DF                                           intlevel2 0000  
                                      ?_I2C_Poller 0001                         i2LCD_4Bits_Set_Curser@_LCD 000E  
                          __end_of_CCP1_DefaultISR 3DC8                        ECU_LCD_4Bit_Initialize@_LCD 00E2  
                          ?_PIN_MANAGER_Initialize 0001             __end_ofi2_LCD_4Bits_Send_Enable_Signal 45E2  
                   i2_LCD_4Bits_Send_Enable_Signal 4592                                _I2C_DO_SEND_RESTART 4B1E  
                          ?i2_gpio_pin_write_logic 0001                    ??_REALTIMECLOCK_DS1307_Get_Data 00ED  
                          __end_of_I2C_MasterClose 4B72                            __end_of_I2C_MasterStart 4B6A  
                          __end_of_I2C_MasterWrite 4AFE                            keyPad_Read@keypad_value 00DD  
                             ?_I2C_DO_SEND_RESTART 0001                                     _port_registers 0110  
                        i2LCD_4Bits_Set_Curser@row 000F      i2ECU_LCD_4Bit_Send_String_Data_Postition@_LCD 0012  
      ECU_LCD_4Bit_Send_String_Data_Postition@_LCD 015D                                        _SSPCON1bits 0FC6  
                                      _SSPCON2bits 0FC5      i2ECU_LCD_4Bit_Send_String_Data_Postition@_Row 0013  
      ECU_LCD_4Bit_Send_String_Data_Postition@_Row 015E      i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str 0015  
      ECU_LCD_4Bit_Send_String_Data_Postition@_Str 0160                    _EUSART_BaudRateCalculation$6910 0155  
                                    ___fladd@signs 014B                       ??_CCPx_CompareMode_WriteData 0004  
                          __end_of_I2C_SetCallback 4484                    ??i2_ECU_LCD_4Bit_Send_char_Data 000D  
                   __end_of_PIN_MANAGER_Initialize 4916                      __end_of_rd1RegCompleteHandler 487E  
                                     ___fladd@aexp 014C                                       ___fladd@bexp 014D  
                   __end_ofi2_gpio_pin_write_logic 2A4C                      __end_of_wr1RegCompleteHandler 482E  
                                ?_InterruptManager 0001                    keyPad_Initialize@l_rows_counter 00E4  
