

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Sat Oct 26 20:13:38 2024

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,space=0,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,inline
    27                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,inline
    28                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,inline
    29                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,inline
    30                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,space=0,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,space=0,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,space=0,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,space=0,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,space=0,delta=1,group=1
    44                           	psect	text25,global,reloc=2,class=CODE,space=0,delta=1,group=1
    45                           	psect	text26,global,reloc=2,class=CODE,space=0,delta=1,group=1
    46                           	psect	text27,global,reloc=2,class=CODE,space=0,delta=1,group=1
    47                           	psect	text28,global,reloc=2,class=CODE,space=0,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,space=0,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,space=0,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,space=0,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,space=0,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,space=0,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,space=0,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,space=0,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,space=0,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,space=0,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,space=0,delta=1,inline
    58                           	psect	text39,global,reloc=2,class=CODE,space=0,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,space=0,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,space=0,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,space=0,delta=1,inline
    62                           	psect	text43,global,reloc=2,class=CODE,space=0,delta=1,inline
    63                           	psect	text44,global,reloc=2,class=CODE,space=0,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,space=0,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,space=0,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,space=0,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,space=0,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,space=0,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,space=0,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,space=0,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,space=0,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,space=0,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,space=0,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,space=0,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,space=0,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,space=0,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,space=0,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,space=0,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,space=0,delta=1,inline
    80                           	psect	text61,global,reloc=2,class=CODE,space=0,delta=1,inline
    81                           	psect	text62,global,reloc=2,class=CODE,space=0,delta=1,inline
    82                           	psect	text63,global,reloc=2,class=CODE,space=0,delta=1,inline
    83                           	psect	text64,global,reloc=2,class=CODE,space=0,delta=1,inline
    84                           	psect	text65,global,reloc=2,class=CODE,space=0,delta=1,inline
    85                           	psect	text66,global,reloc=2,class=CODE,space=0,delta=1,inline
    86                           	psect	text67,global,reloc=2,class=CODE,space=0,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,space=0,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,space=0,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,space=0,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,space=0,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,space=0,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,space=0,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,space=0,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,space=0,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,space=0,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,space=0,delta=1,inline
    97                           	psect	text78,global,reloc=2,class=CODE,space=0,delta=1,inline
    98                           	psect	text79,global,reloc=2,class=CODE,space=0,delta=1,inline
    99                           	psect	text80,global,reloc=2,class=CODE,space=0,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,space=0,delta=1,inline
   101                           	psect	text82,global,reloc=2,class=CODE,space=0,delta=1,inline
   102                           	psect	text83,global,reloc=2,class=CODE,space=0,delta=1,inline
   103                           	psect	text84,global,reloc=2,class=CODE,space=0,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,space=0,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,space=0,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,space=0,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,space=0,delta=1
   108                           	psect	text89,global,reloc=2,class=CODE,space=0,delta=1
   109                           	psect	text90,global,reloc=2,class=CODE,space=0,delta=1
   110                           	psect	text91,global,reloc=2,class=CODE,space=0,delta=1
   111                           	psect	text92,global,reloc=2,class=CODE,space=0,delta=1
   112                           	psect	text93,global,reloc=2,class=CODE,space=0,delta=1
   113                           	psect	text94,global,reloc=2,class=CODE,space=0,delta=1
   114                           	psect	text95,global,reloc=2,class=CODE,space=0,delta=1
   115                           	psect	text96,global,reloc=2,class=CODE,space=0,delta=1,inline
   116                           	psect	text97,global,reloc=2,class=CODE,space=0,delta=1,inline
   117                           	psect	text98,global,reloc=2,class=CODE,space=0,delta=1,inline
   118                           	psect	text99,global,reloc=2,class=CODE,space=0,delta=1,inline
   119                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
   120                           	psect	text101,global,reloc=2,class=CODE,space=0,delta=1
   121                           	psect	text102,global,reloc=2,class=CODE,space=0,delta=1
   122                           	psect	text103,global,reloc=2,class=CODE,space=0,delta=1
   123                           	psect	text104,global,reloc=2,class=CODE,space=0,delta=1
   124                           	psect	text105,global,reloc=2,class=CODE,space=0,delta=1
   125                           	psect	text106,global,reloc=2,class=CODE,space=0,delta=1
   126                           	psect	text107,global,reloc=2,class=CODE,space=0,delta=1
   127                           	psect	text108,global,reloc=2,class=CODE,space=0,delta=1
   128                           	psect	text109,global,reloc=2,class=CODE,space=0,delta=1
   129                           	psect	text110,global,reloc=2,class=CODE,space=0,delta=1
   130                           	psect	text111,global,reloc=2,class=CODE,space=0,delta=1
   131                           	psect	text112,global,reloc=2,class=CODE,space=0,delta=1
   132                           	psect	text113,global,reloc=2,class=CODE,space=0,delta=1
   133                           	psect	text114,global,reloc=2,class=CODE,space=0,delta=1,group=1
   134                           	psect	text115,global,reloc=2,class=CODE,space=0,delta=1,group=1
   135                           	psect	text116,global,reloc=2,class=CODE,space=0,delta=1
   136                           	psect	text117,global,reloc=2,class=CODE,space=0,delta=1
   137                           	psect	text118,global,reloc=2,class=CODE,space=0,delta=1
   138                           	psect	text119,global,reloc=2,class=CODE,space=0,delta=1
   139                           	psect	text120,global,reloc=2,class=CODE,space=0,delta=1
   140                           	psect	text121,global,reloc=2,class=CODE,space=0,delta=1
   141                           	psect	text122,global,reloc=2,class=CODE,space=0,delta=1
   142                           	psect	text123,global,reloc=2,class=CODE,space=0,delta=1
   143                           	psect	text124,global,reloc=2,class=CODE,space=0,delta=1
   144                           	psect	text125,global,reloc=2,class=CODE,space=0,delta=1
   145                           	psect	text126,global,reloc=2,class=CODE,space=0,delta=1
   146                           	psect	text127,global,reloc=2,class=CODE,space=0,delta=1
   147                           	psect	text128,global,reloc=2,class=CODE,space=0,delta=1
   148                           	psect	text129,global,reloc=2,class=CODE,space=0,delta=1
   149                           	psect	text130,global,reloc=2,class=CODE,space=0,delta=1
   150                           	psect	text131,global,reloc=2,class=CODE,space=0,delta=1
   151                           	psect	text132,global,reloc=2,class=CODE,space=0,delta=1
   152                           	psect	text133,global,reloc=2,class=CODE,space=0,delta=1
   153                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   154                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   155                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
   156                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   157   000000                     
   158                           ; Generated 12/10/2023 GMT
   159                           ; 
   160                           ; Copyright © 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
   161                           ; All rights reserved.
   162                           ; 
   163                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   164                           ; 
   165                           ; Redistribution and use in source and binary forms, with or without modification, are
   166                           ; permitted provided that the following conditions are met:
   167                           ; 
   168                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   169                           ;        conditions and the following disclaimer.
   170                           ; 
   171                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   172                           ;        of conditions and the following disclaimer in the documentation and/or other
   173                           ;        materials provided with the distribution. Publication is not required when
   174                           ;        this file is used in an embedded application.
   175                           ; 
   176                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   177                           ;        software without specific prior written permission.
   178                           ; 
   179                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   180                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   181                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   182                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   183                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   184                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   185                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   186                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   187                           ; 
   188                           ; 
   189                           ; Code-generator required, PIC18F46K20 Definitions
   190                           ; 
   191                           ; SFR Addresses
   192   000FE0                     bsr             equ	4064
   193   000FE9                     fsr0            equ	4073
   194   000FEA                     fsr0h           equ	4074
   195   000FE9                     fsr0l           equ	4073
   196   000FE1                     fsr1            equ	4065
   197   000FE2                     fsr1h           equ	4066
   198   000FE1                     fsr1l           equ	4065
   199   000FD9                     fsr2            equ	4057
   200   000FDA                     fsr2h           equ	4058
   201   000FD9                     fsr2l           equ	4057
   202   000FEF                     indf0           equ	4079
   203   000FE7                     indf1           equ	4071
   204   000FDF                     indf2           equ	4063
   205   000FF2                     intcon          equ	4082
   206   000000                     nvmcon          equ	0
   207   000FF9                     pcl             equ	4089
   208   000FFA                     pclath          equ	4090
   209   000FFB                     pclatu          equ	4091
   210   000FEB                     plusw0          equ	4075
   211   000FE3                     plusw1          equ	4067
   212   000FDB                     plusw2          equ	4059
   213   000FED                     postdec0        equ	4077
   214   000FE5                     postdec1        equ	4069
   215   000FDD                     postdec2        equ	4061
   216   000FEE                     postinc0        equ	4078
   217   000FE6                     postinc1        equ	4070
   218   000FDE                     postinc2        equ	4062
   219   000FEC                     preinc0         equ	4076
   220   000FE4                     preinc1         equ	4068
   221   000FDC                     preinc2         equ	4060
   222   000FF3                     prod            equ	4083
   223   000FF4                     prodh           equ	4084
   224   000FF3                     prodl           equ	4083
   225   000FD8                     status          equ	4056
   226   000FF5                     tablat          equ	4085
   227   000FF6                     tblptr          equ	4086
   228   000FF7                     tblptrh         equ	4087
   229   000FF6                     tblptrl         equ	4086
   230   000FF8                     tblptru         equ	4088
   231   000FFD                     tosl            equ	4093
   232   000FE8                     wreg            equ	4072
   233   000F77                     SSPMSK          equ	3959	;# 
   234   000F78                     SLRCON          equ	3960	;# 
   235   000F79                     CM2CON1         equ	3961	;# 
   236   000F7A                     CM2CON0         equ	3962	;# 
   237   000F7B                     CM1CON0         equ	3963	;# 
   238   000F7C                     WPUB            equ	3964	;# 
   239   000F7D                     IOCB            equ	3965	;# 
   240   000F7E                     ANSEL           equ	3966	;# 
   241   000F7F                     ANSELH          equ	3967	;# 
   242   000F80                     PORTA           equ	3968	;# 
   243   000F81                     PORTB           equ	3969	;# 
   244   000F82                     PORTC           equ	3970	;# 
   245   000F83                     PORTD           equ	3971	;# 
   246   000F84                     PORTE           equ	3972	;# 
   247   000F89                     LATA            equ	3977	;# 
   248   000F8A                     LATB            equ	3978	;# 
   249   000F8B                     LATC            equ	3979	;# 
   250   000F8C                     LATD            equ	3980	;# 
   251   000F8D                     LATE            equ	3981	;# 
   252   000F92                     TRISA           equ	3986	;# 
   253   000F92                     DDRA            equ	3986	;# 
   254   000F93                     TRISB           equ	3987	;# 
   255   000F93                     DDRB            equ	3987	;# 
   256   000F94                     TRISC           equ	3988	;# 
   257   000F94                     DDRC            equ	3988	;# 
   258   000F95                     TRISD           equ	3989	;# 
   259   000F95                     DDRD            equ	3989	;# 
   260   000F96                     TRISE           equ	3990	;# 
   261   000F96                     DDRE            equ	3990	;# 
   262   000F9B                     OSCTUNE         equ	3995	;# 
   263   000F9D                     PIE1            equ	3997	;# 
   264   000F9E                     PIR1            equ	3998	;# 
   265   000F9F                     IPR1            equ	3999	;# 
   266   000FA0                     PIE2            equ	4000	;# 
   267   000FA1                     PIR2            equ	4001	;# 
   268   000FA2                     IPR2            equ	4002	;# 
   269   000FA6                     EECON1          equ	4006	;# 
   270   000FA7                     EECON2          equ	4007	;# 
   271   000FA8                     EEDATA          equ	4008	;# 
   272   000FA9                     EEADR           equ	4009	;# 
   273   000FAA                     EEADRH          equ	4010	;# 
   274   000FAB                     RCSTA           equ	4011	;# 
   275   000FAB                     RCSTA1          equ	4011	;# 
   276   000FAC                     TXSTA           equ	4012	;# 
   277   000FAC                     TXSTA1          equ	4012	;# 
   278   000FAD                     TXREG           equ	4013	;# 
   279   000FAD                     TXREG1          equ	4013	;# 
   280   000FAE                     RCREG           equ	4014	;# 
   281   000FAE                     RCREG1          equ	4014	;# 
   282   000FAF                     SPBRG           equ	4015	;# 
   283   000FAF                     SPBRG1          equ	4015	;# 
   284   000FB0                     SPBRGH          equ	4016	;# 
   285   000FB1                     T3CON           equ	4017	;# 
   286   000FB2                     TMR3            equ	4018	;# 
   287   000FB2                     TMR3L           equ	4018	;# 
   288   000FB3                     TMR3H           equ	4019	;# 
   289   000FB4                     CVRCON2         equ	4020	;# 
   290   000FB5                     CVRCON          equ	4021	;# 
   291   000FB6                     ECCP1AS         equ	4022	;# 
   292   000FB7                     PWM1CON         equ	4023	;# 
   293   000FB8                     BAUDCON         equ	4024	;# 
   294   000FB8                     BAUDCTL         equ	4024	;# 
   295   000FB9                     PSTRCON         equ	4025	;# 
   296   000FBA                     CCP2CON         equ	4026	;# 
   297   000FBB                     CCPR2           equ	4027	;# 
   298   000FBB                     CCPR2L          equ	4027	;# 
   299   000FBC                     CCPR2H          equ	4028	;# 
   300   000FBD                     CCP1CON         equ	4029	;# 
   301   000FBE                     CCPR1           equ	4030	;# 
   302   000FBE                     CCPR1L          equ	4030	;# 
   303   000FBF                     CCPR1H          equ	4031	;# 
   304   000FC0                     ADCON2          equ	4032	;# 
   305   000FC1                     ADCON1          equ	4033	;# 
   306   000FC2                     ADCON0          equ	4034	;# 
   307   000FC3                     ADRES           equ	4035	;# 
   308   000FC3                     ADRESL          equ	4035	;# 
   309   000FC4                     ADRESH          equ	4036	;# 
   310   000FC5                     SSPCON2         equ	4037	;# 
   311   000FC6                     SSPCON1         equ	4038	;# 
   312   000FC7                     SSPSTAT         equ	4039	;# 
   313   000FC8                     SSPADD          equ	4040	;# 
   314   000FC9                     SSPBUF          equ	4041	;# 
   315   000FCA                     T2CON           equ	4042	;# 
   316   000FCB                     PR2             equ	4043	;# 
   317   000FCB                     MEMCON          equ	4043	;# 
   318   000FCC                     TMR2            equ	4044	;# 
   319   000FCD                     T1CON           equ	4045	;# 
   320   000FCE                     TMR1            equ	4046	;# 
   321   000FCE                     TMR1L           equ	4046	;# 
   322   000FCF                     TMR1H           equ	4047	;# 
   323   000FD0                     RCON            equ	4048	;# 
   324   000FD1                     WDTCON          equ	4049	;# 
   325   000FD2                     HLVDCON         equ	4050	;# 
   326   000FD2                     LVDCON          equ	4050	;# 
   327   000FD3                     OSCCON          equ	4051	;# 
   328   000FD5                     T0CON           equ	4053	;# 
   329   000FD6                     TMR0            equ	4054	;# 
   330   000FD6                     TMR0L           equ	4054	;# 
   331   000FD7                     TMR0H           equ	4055	;# 
   332   000FD8                     STATUS          equ	4056	;# 
   333   000FD9                     FSR2            equ	4057	;# 
   334   000FD9                     FSR2L           equ	4057	;# 
   335   000FDA                     FSR2H           equ	4058	;# 
   336   000FDB                     PLUSW2          equ	4059	;# 
   337   000FDC                     PREINC2         equ	4060	;# 
   338   000FDD                     POSTDEC2        equ	4061	;# 
   339   000FDE                     POSTINC2        equ	4062	;# 
   340   000FDF                     INDF2           equ	4063	;# 
   341   000FE0                     BSR             equ	4064	;# 
   342   000FE1                     FSR1            equ	4065	;# 
   343   000FE1                     FSR1L           equ	4065	;# 
   344   000FE2                     FSR1H           equ	4066	;# 
   345   000FE3                     PLUSW1          equ	4067	;# 
   346   000FE4                     PREINC1         equ	4068	;# 
   347   000FE5                     POSTDEC1        equ	4069	;# 
   348   000FE6                     POSTINC1        equ	4070	;# 
   349   000FE7                     INDF1           equ	4071	;# 
   350   000FE8                     WREG            equ	4072	;# 
   351   000FE9                     FSR0            equ	4073	;# 
   352   000FE9                     FSR0L           equ	4073	;# 
   353   000FEA                     FSR0H           equ	4074	;# 
   354   000FEB                     PLUSW0          equ	4075	;# 
   355   000FEC                     PREINC0         equ	4076	;# 
   356   000FED                     POSTDEC0        equ	4077	;# 
   357   000FEE                     POSTINC0        equ	4078	;# 
   358   000FEF                     INDF0           equ	4079	;# 
   359   000FF0                     INTCON3         equ	4080	;# 
   360   000FF1                     INTCON2         equ	4081	;# 
   361   000FF2                     INTCON          equ	4082	;# 
   362   000FF3                     PROD            equ	4083	;# 
   363   000FF3                     PRODL           equ	4083	;# 
   364   000FF4                     PRODH           equ	4084	;# 
   365   000FF5                     TABLAT          equ	4085	;# 
   366   000FF6                     TBLPTR          equ	4086	;# 
   367   000FF6                     TBLPTRL         equ	4086	;# 
   368   000FF7                     TBLPTRH         equ	4087	;# 
   369   000FF8                     TBLPTRU         equ	4088	;# 
   370   000FF9                     PCLAT           equ	4089	;# 
   371   000FF9                     PC              equ	4089	;# 
   372   000FF9                     PCL             equ	4089	;# 
   373   000FFA                     PCLATH          equ	4090	;# 
   374   000FFB                     PCLATU          equ	4091	;# 
   375   000FFC                     STKPTR          equ	4092	;# 
   376   000FFD                     TOS             equ	4093	;# 
   377   000FFD                     TOSL            equ	4093	;# 
   378   000FFE                     TOSH            equ	4094	;# 
   379   000FFF                     TOSU            equ	4095	;# 
   380   000F77                     SSPMSK          equ	3959	;# 
   381   000F78                     SLRCON          equ	3960	;# 
   382   000F79                     CM2CON1         equ	3961	;# 
   383   000F7A                     CM2CON0         equ	3962	;# 
   384   000F7B                     CM1CON0         equ	3963	;# 
   385   000F7C                     WPUB            equ	3964	;# 
   386   000F7D                     IOCB            equ	3965	;# 
   387   000F7E                     ANSEL           equ	3966	;# 
   388   000F7F                     ANSELH          equ	3967	;# 
   389   000F80                     PORTA           equ	3968	;# 
   390   000F81                     PORTB           equ	3969	;# 
   391   000F82                     PORTC           equ	3970	;# 
   392   000F83                     PORTD           equ	3971	;# 
   393   000F84                     PORTE           equ	3972	;# 
   394   000F89                     LATA            equ	3977	;# 
   395   000F8A                     LATB            equ	3978	;# 
   396   000F8B                     LATC            equ	3979	;# 
   397   000F8C                     LATD            equ	3980	;# 
   398   000F8D                     LATE            equ	3981	;# 
   399   000F92                     TRISA           equ	3986	;# 
   400   000F92                     DDRA            equ	3986	;# 
   401   000F93                     TRISB           equ	3987	;# 
   402   000F93                     DDRB            equ	3987	;# 
   403   000F94                     TRISC           equ	3988	;# 
   404   000F94                     DDRC            equ	3988	;# 
   405   000F95                     TRISD           equ	3989	;# 
   406   000F95                     DDRD            equ	3989	;# 
   407   000F96                     TRISE           equ	3990	;# 
   408   000F96                     DDRE            equ	3990	;# 
   409   000F9B                     OSCTUNE         equ	3995	;# 
   410   000F9D                     PIE1            equ	3997	;# 
   411   000F9E                     PIR1            equ	3998	;# 
   412   000F9F                     IPR1            equ	3999	;# 
   413   000FA0                     PIE2            equ	4000	;# 
   414   000FA1                     PIR2            equ	4001	;# 
   415   000FA2                     IPR2            equ	4002	;# 
   416   000FA6                     EECON1          equ	4006	;# 
   417   000FA7                     EECON2          equ	4007	;# 
   418   000FA8                     EEDATA          equ	4008	;# 
   419   000FA9                     EEADR           equ	4009	;# 
   420   000FAA                     EEADRH          equ	4010	;# 
   421   000FAB                     RCSTA           equ	4011	;# 
   422   000FAB                     RCSTA1          equ	4011	;# 
   423   000FAC                     TXSTA           equ	4012	;# 
   424   000FAC                     TXSTA1          equ	4012	;# 
   425   000FAD                     TXREG           equ	4013	;# 
   426   000FAD                     TXREG1          equ	4013	;# 
   427   000FAE                     RCREG           equ	4014	;# 
   428   000FAE                     RCREG1          equ	4014	;# 
   429   000FAF                     SPBRG           equ	4015	;# 
   430   000FAF                     SPBRG1          equ	4015	;# 
   431   000FB0                     SPBRGH          equ	4016	;# 
   432   000FB1                     T3CON           equ	4017	;# 
   433   000FB2                     TMR3            equ	4018	;# 
   434   000FB2                     TMR3L           equ	4018	;# 
   435   000FB3                     TMR3H           equ	4019	;# 
   436   000FB4                     CVRCON2         equ	4020	;# 
   437   000FB5                     CVRCON          equ	4021	;# 
   438   000FB6                     ECCP1AS         equ	4022	;# 
   439   000FB7                     PWM1CON         equ	4023	;# 
   440   000FB8                     BAUDCON         equ	4024	;# 
   441   000FB8                     BAUDCTL         equ	4024	;# 
   442   000FB9                     PSTRCON         equ	4025	;# 
   443   000FBA                     CCP2CON         equ	4026	;# 
   444   000FBB                     CCPR2           equ	4027	;# 
   445   000FBB                     CCPR2L          equ	4027	;# 
   446   000FBC                     CCPR2H          equ	4028	;# 
   447   000FBD                     CCP1CON         equ	4029	;# 
   448   000FBE                     CCPR1           equ	4030	;# 
   449   000FBE                     CCPR1L          equ	4030	;# 
   450   000FBF                     CCPR1H          equ	4031	;# 
   451   000FC0                     ADCON2          equ	4032	;# 
   452   000FC1                     ADCON1          equ	4033	;# 
   453   000FC2                     ADCON0          equ	4034	;# 
   454   000FC3                     ADRES           equ	4035	;# 
   455   000FC3                     ADRESL          equ	4035	;# 
   456   000FC4                     ADRESH          equ	4036	;# 
   457   000FC5                     SSPCON2         equ	4037	;# 
   458   000FC6                     SSPCON1         equ	4038	;# 
   459   000FC7                     SSPSTAT         equ	4039	;# 
   460   000FC8                     SSPADD          equ	4040	;# 
   461   000FC9                     SSPBUF          equ	4041	;# 
   462   000FCA                     T2CON           equ	4042	;# 
   463   000FCB                     PR2             equ	4043	;# 
   464   000FCB                     MEMCON          equ	4043	;# 
   465   000FCC                     TMR2            equ	4044	;# 
   466   000FCD                     T1CON           equ	4045	;# 
   467   000FCE                     TMR1            equ	4046	;# 
   468   000FCE                     TMR1L           equ	4046	;# 
   469   000FCF                     TMR1H           equ	4047	;# 
   470   000FD0                     RCON            equ	4048	;# 
   471   000FD1                     WDTCON          equ	4049	;# 
   472   000FD2                     HLVDCON         equ	4050	;# 
   473   000FD2                     LVDCON          equ	4050	;# 
   474   000FD3                     OSCCON          equ	4051	;# 
   475   000FD5                     T0CON           equ	4053	;# 
   476   000FD6                     TMR0            equ	4054	;# 
   477   000FD6                     TMR0L           equ	4054	;# 
   478   000FD7                     TMR0H           equ	4055	;# 
   479   000FD8                     STATUS          equ	4056	;# 
   480   000FD9                     FSR2            equ	4057	;# 
   481   000FD9                     FSR2L           equ	4057	;# 
   482   000FDA                     FSR2H           equ	4058	;# 
   483   000FDB                     PLUSW2          equ	4059	;# 
   484   000FDC                     PREINC2         equ	4060	;# 
   485   000FDD                     POSTDEC2        equ	4061	;# 
   486   000FDE                     POSTINC2        equ	4062	;# 
   487   000FDF                     INDF2           equ	4063	;# 
   488   000FE0                     BSR             equ	4064	;# 
   489   000FE1                     FSR1            equ	4065	;# 
   490   000FE1                     FSR1L           equ	4065	;# 
   491   000FE2                     FSR1H           equ	4066	;# 
   492   000FE3                     PLUSW1          equ	4067	;# 
   493   000FE4                     PREINC1         equ	4068	;# 
   494   000FE5                     POSTDEC1        equ	4069	;# 
   495   000FE6                     POSTINC1        equ	4070	;# 
   496   000FE7                     INDF1           equ	4071	;# 
   497   000FE8                     WREG            equ	4072	;# 
   498   000FE9                     FSR0            equ	4073	;# 
   499   000FE9                     FSR0L           equ	4073	;# 
   500   000FEA                     FSR0H           equ	4074	;# 
   501   000FEB                     PLUSW0          equ	4075	;# 
   502   000FEC                     PREINC0         equ	4076	;# 
   503   000FED                     POSTDEC0        equ	4077	;# 
   504   000FEE                     POSTINC0        equ	4078	;# 
   505   000FEF                     INDF0           equ	4079	;# 
   506   000FF0                     INTCON3         equ	4080	;# 
   507   000FF1                     INTCON2         equ	4081	;# 
   508   000FF2                     INTCON          equ	4082	;# 
   509   000FF3                     PROD            equ	4083	;# 
   510   000FF3                     PRODL           equ	4083	;# 
   511   000FF4                     PRODH           equ	4084	;# 
   512   000FF5                     TABLAT          equ	4085	;# 
   513   000FF6                     TBLPTR          equ	4086	;# 
   514   000FF6                     TBLPTRL         equ	4086	;# 
   515   000FF7                     TBLPTRH         equ	4087	;# 
   516   000FF8                     TBLPTRU         equ	4088	;# 
   517   000FF9                     PCLAT           equ	4089	;# 
   518   000FF9                     PC              equ	4089	;# 
   519   000FF9                     PCL             equ	4089	;# 
   520   000FFA                     PCLATH          equ	4090	;# 
   521   000FFB                     PCLATU          equ	4091	;# 
   522   000FFC                     STKPTR          equ	4092	;# 
   523   000FFD                     TOS             equ	4093	;# 
   524   000FFD                     TOSL            equ	4093	;# 
   525   000FFE                     TOSH            equ	4094	;# 
   526   000FFF                     TOSU            equ	4095	;# 
   527   000F77                     SSPMSK          equ	3959	;# 
   528   000F78                     SLRCON          equ	3960	;# 
   529   000F79                     CM2CON1         equ	3961	;# 
   530   000F7A                     CM2CON0         equ	3962	;# 
   531   000F7B                     CM1CON0         equ	3963	;# 
   532   000F7C                     WPUB            equ	3964	;# 
   533   000F7D                     IOCB            equ	3965	;# 
   534   000F7E                     ANSEL           equ	3966	;# 
   535   000F7F                     ANSELH          equ	3967	;# 
   536   000F80                     PORTA           equ	3968	;# 
   537   000F81                     PORTB           equ	3969	;# 
   538   000F82                     PORTC           equ	3970	;# 
   539   000F83                     PORTD           equ	3971	;# 
   540   000F84                     PORTE           equ	3972	;# 
   541   000F89                     LATA            equ	3977	;# 
   542   000F8A                     LATB            equ	3978	;# 
   543   000F8B                     LATC            equ	3979	;# 
   544   000F8C                     LATD            equ	3980	;# 
   545   000F8D                     LATE            equ	3981	;# 
   546   000F92                     TRISA           equ	3986	;# 
   547   000F92                     DDRA            equ	3986	;# 
   548   000F93                     TRISB           equ	3987	;# 
   549   000F93                     DDRB            equ	3987	;# 
   550   000F94                     TRISC           equ	3988	;# 
   551   000F94                     DDRC            equ	3988	;# 
   552   000F95                     TRISD           equ	3989	;# 
   553   000F95                     DDRD            equ	3989	;# 
   554   000F96                     TRISE           equ	3990	;# 
   555   000F96                     DDRE            equ	3990	;# 
   556   000F9B                     OSCTUNE         equ	3995	;# 
   557   000F9D                     PIE1            equ	3997	;# 
   558   000F9E                     PIR1            equ	3998	;# 
   559   000F9F                     IPR1            equ	3999	;# 
   560   000FA0                     PIE2            equ	4000	;# 
   561   000FA1                     PIR2            equ	4001	;# 
   562   000FA2                     IPR2            equ	4002	;# 
   563   000FA6                     EECON1          equ	4006	;# 
   564   000FA7                     EECON2          equ	4007	;# 
   565   000FA8                     EEDATA          equ	4008	;# 
   566   000FA9                     EEADR           equ	4009	;# 
   567   000FAA                     EEADRH          equ	4010	;# 
   568   000FAB                     RCSTA           equ	4011	;# 
   569   000FAB                     RCSTA1          equ	4011	;# 
   570   000FAC                     TXSTA           equ	4012	;# 
   571   000FAC                     TXSTA1          equ	4012	;# 
   572   000FAD                     TXREG           equ	4013	;# 
   573   000FAD                     TXREG1          equ	4013	;# 
   574   000FAE                     RCREG           equ	4014	;# 
   575   000FAE                     RCREG1          equ	4014	;# 
   576   000FAF                     SPBRG           equ	4015	;# 
   577   000FAF                     SPBRG1          equ	4015	;# 
   578   000FB0                     SPBRGH          equ	4016	;# 
   579   000FB1                     T3CON           equ	4017	;# 
   580   000FB2                     TMR3            equ	4018	;# 
   581   000FB2                     TMR3L           equ	4018	;# 
   582   000FB3                     TMR3H           equ	4019	;# 
   583   000FB4                     CVRCON2         equ	4020	;# 
   584   000FB5                     CVRCON          equ	4021	;# 
   585   000FB6                     ECCP1AS         equ	4022	;# 
   586   000FB7                     PWM1CON         equ	4023	;# 
   587   000FB8                     BAUDCON         equ	4024	;# 
   588   000FB8                     BAUDCTL         equ	4024	;# 
   589   000FB9                     PSTRCON         equ	4025	;# 
   590   000FBA                     CCP2CON         equ	4026	;# 
   591   000FBB                     CCPR2           equ	4027	;# 
   592   000FBB                     CCPR2L          equ	4027	;# 
   593   000FBC                     CCPR2H          equ	4028	;# 
   594   000FBD                     CCP1CON         equ	4029	;# 
   595   000FBE                     CCPR1           equ	4030	;# 
   596   000FBE                     CCPR1L          equ	4030	;# 
   597   000FBF                     CCPR1H          equ	4031	;# 
   598   000FC0                     ADCON2          equ	4032	;# 
   599   000FC1                     ADCON1          equ	4033	;# 
   600   000FC2                     ADCON0          equ	4034	;# 
   601   000FC3                     ADRES           equ	4035	;# 
   602   000FC3                     ADRESL          equ	4035	;# 
   603   000FC4                     ADRESH          equ	4036	;# 
   604   000FC5                     SSPCON2         equ	4037	;# 
   605   000FC6                     SSPCON1         equ	4038	;# 
   606   000FC7                     SSPSTAT         equ	4039	;# 
   607   000FC8                     SSPADD          equ	4040	;# 
   608   000FC9                     SSPBUF          equ	4041	;# 
   609   000FCA                     T2CON           equ	4042	;# 
   610   000FCB                     PR2             equ	4043	;# 
   611   000FCB                     MEMCON          equ	4043	;# 
   612   000FCC                     TMR2            equ	4044	;# 
   613   000FCD                     T1CON           equ	4045	;# 
   614   000FCE                     TMR1            equ	4046	;# 
   615   000FCE                     TMR1L           equ	4046	;# 
   616   000FCF                     TMR1H           equ	4047	;# 
   617   000FD0                     RCON            equ	4048	;# 
   618   000FD1                     WDTCON          equ	4049	;# 
   619   000FD2                     HLVDCON         equ	4050	;# 
   620   000FD2                     LVDCON          equ	4050	;# 
   621   000FD3                     OSCCON          equ	4051	;# 
   622   000FD5                     T0CON           equ	4053	;# 
   623   000FD6                     TMR0            equ	4054	;# 
   624   000FD6                     TMR0L           equ	4054	;# 
   625   000FD7                     TMR0H           equ	4055	;# 
   626   000FD8                     STATUS          equ	4056	;# 
   627   000FD9                     FSR2            equ	4057	;# 
   628   000FD9                     FSR2L           equ	4057	;# 
   629   000FDA                     FSR2H           equ	4058	;# 
   630   000FDB                     PLUSW2          equ	4059	;# 
   631   000FDC                     PREINC2         equ	4060	;# 
   632   000FDD                     POSTDEC2        equ	4061	;# 
   633   000FDE                     POSTINC2        equ	4062	;# 
   634   000FDF                     INDF2           equ	4063	;# 
   635   000FE0                     BSR             equ	4064	;# 
   636   000FE1                     FSR1            equ	4065	;# 
   637   000FE1                     FSR1L           equ	4065	;# 
   638   000FE2                     FSR1H           equ	4066	;# 
   639   000FE3                     PLUSW1          equ	4067	;# 
   640   000FE4                     PREINC1         equ	4068	;# 
   641   000FE5                     POSTDEC1        equ	4069	;# 
   642   000FE6                     POSTINC1        equ	4070	;# 
   643   000FE7                     INDF1           equ	4071	;# 
   644   000FE8                     WREG            equ	4072	;# 
   645   000FE9                     FSR0            equ	4073	;# 
   646   000FE9                     FSR0L           equ	4073	;# 
   647   000FEA                     FSR0H           equ	4074	;# 
   648   000FEB                     PLUSW0          equ	4075	;# 
   649   000FEC                     PREINC0         equ	4076	;# 
   650   000FED                     POSTDEC0        equ	4077	;# 
   651   000FEE                     POSTINC0        equ	4078	;# 
   652   000FEF                     INDF0           equ	4079	;# 
   653   000FF0                     INTCON3         equ	4080	;# 
   654   000FF1                     INTCON2         equ	4081	;# 
   655   000FF2                     INTCON          equ	4082	;# 
   656   000FF3                     PROD            equ	4083	;# 
   657   000FF3                     PRODL           equ	4083	;# 
   658   000FF4                     PRODH           equ	4084	;# 
   659   000FF5                     TABLAT          equ	4085	;# 
   660   000FF6                     TBLPTR          equ	4086	;# 
   661   000FF6                     TBLPTRL         equ	4086	;# 
   662   000FF7                     TBLPTRH         equ	4087	;# 
   663   000FF8                     TBLPTRU         equ	4088	;# 
   664   000FF9                     PCLAT           equ	4089	;# 
   665   000FF9                     PC              equ	4089	;# 
   666   000FF9                     PCL             equ	4089	;# 
   667   000FFA                     PCLATH          equ	4090	;# 
   668   000FFB                     PCLATU          equ	4091	;# 
   669   000FFC                     STKPTR          equ	4092	;# 
   670   000FFD                     TOS             equ	4093	;# 
   671   000FFD                     TOSL            equ	4093	;# 
   672   000FFE                     TOSH            equ	4094	;# 
   673   000FFF                     TOSU            equ	4095	;# 
   674   000F77                     SSPMSK          equ	3959	;# 
   675   000F78                     SLRCON          equ	3960	;# 
   676   000F79                     CM2CON1         equ	3961	;# 
   677   000F7A                     CM2CON0         equ	3962	;# 
   678   000F7B                     CM1CON0         equ	3963	;# 
   679   000F7C                     WPUB            equ	3964	;# 
   680   000F7D                     IOCB            equ	3965	;# 
   681   000F7E                     ANSEL           equ	3966	;# 
   682   000F7F                     ANSELH          equ	3967	;# 
   683   000F80                     PORTA           equ	3968	;# 
   684   000F81                     PORTB           equ	3969	;# 
   685   000F82                     PORTC           equ	3970	;# 
   686   000F83                     PORTD           equ	3971	;# 
   687   000F84                     PORTE           equ	3972	;# 
   688   000F89                     LATA            equ	3977	;# 
   689   000F8A                     LATB            equ	3978	;# 
   690   000F8B                     LATC            equ	3979	;# 
   691   000F8C                     LATD            equ	3980	;# 
   692   000F8D                     LATE            equ	3981	;# 
   693   000F92                     TRISA           equ	3986	;# 
   694   000F92                     DDRA            equ	3986	;# 
   695   000F93                     TRISB           equ	3987	;# 
   696   000F93                     DDRB            equ	3987	;# 
   697   000F94                     TRISC           equ	3988	;# 
   698   000F94                     DDRC            equ	3988	;# 
   699   000F95                     TRISD           equ	3989	;# 
   700   000F95                     DDRD            equ	3989	;# 
   701   000F96                     TRISE           equ	3990	;# 
   702   000F96                     DDRE            equ	3990	;# 
   703   000F9B                     OSCTUNE         equ	3995	;# 
   704   000F9D                     PIE1            equ	3997	;# 
   705   000F9E                     PIR1            equ	3998	;# 
   706   000F9F                     IPR1            equ	3999	;# 
   707   000FA0                     PIE2            equ	4000	;# 
   708   000FA1                     PIR2            equ	4001	;# 
   709   000FA2                     IPR2            equ	4002	;# 
   710   000FA6                     EECON1          equ	4006	;# 
   711   000FA7                     EECON2          equ	4007	;# 
   712   000FA8                     EEDATA          equ	4008	;# 
   713   000FA9                     EEADR           equ	4009	;# 
   714   000FAA                     EEADRH          equ	4010	;# 
   715   000FAB                     RCSTA           equ	4011	;# 
   716   000FAB                     RCSTA1          equ	4011	;# 
   717   000FAC                     TXSTA           equ	4012	;# 
   718   000FAC                     TXSTA1          equ	4012	;# 
   719   000FAD                     TXREG           equ	4013	;# 
   720   000FAD                     TXREG1          equ	4013	;# 
   721   000FAE                     RCREG           equ	4014	;# 
   722   000FAE                     RCREG1          equ	4014	;# 
   723   000FAF                     SPBRG           equ	4015	;# 
   724   000FAF                     SPBRG1          equ	4015	;# 
   725   000FB0                     SPBRGH          equ	4016	;# 
   726   000FB1                     T3CON           equ	4017	;# 
   727   000FB2                     TMR3            equ	4018	;# 
   728   000FB2                     TMR3L           equ	4018	;# 
   729   000FB3                     TMR3H           equ	4019	;# 
   730   000FB4                     CVRCON2         equ	4020	;# 
   731   000FB5                     CVRCON          equ	4021	;# 
   732   000FB6                     ECCP1AS         equ	4022	;# 
   733   000FB7                     PWM1CON         equ	4023	;# 
   734   000FB8                     BAUDCON         equ	4024	;# 
   735   000FB8                     BAUDCTL         equ	4024	;# 
   736   000FB9                     PSTRCON         equ	4025	;# 
   737   000FBA                     CCP2CON         equ	4026	;# 
   738   000FBB                     CCPR2           equ	4027	;# 
   739   000FBB                     CCPR2L          equ	4027	;# 
   740   000FBC                     CCPR2H          equ	4028	;# 
   741   000FBD                     CCP1CON         equ	4029	;# 
   742   000FBE                     CCPR1           equ	4030	;# 
   743   000FBE                     CCPR1L          equ	4030	;# 
   744   000FBF                     CCPR1H          equ	4031	;# 
   745   000FC0                     ADCON2          equ	4032	;# 
   746   000FC1                     ADCON1          equ	4033	;# 
   747   000FC2                     ADCON0          equ	4034	;# 
   748   000FC3                     ADRES           equ	4035	;# 
   749   000FC3                     ADRESL          equ	4035	;# 
   750   000FC4                     ADRESH          equ	4036	;# 
   751   000FC5                     SSPCON2         equ	4037	;# 
   752   000FC6                     SSPCON1         equ	4038	;# 
   753   000FC7                     SSPSTAT         equ	4039	;# 
   754   000FC8                     SSPADD          equ	4040	;# 
   755   000FC9                     SSPBUF          equ	4041	;# 
   756   000FCA                     T2CON           equ	4042	;# 
   757   000FCB                     PR2             equ	4043	;# 
   758   000FCB                     MEMCON          equ	4043	;# 
   759   000FCC                     TMR2            equ	4044	;# 
   760   000FCD                     T1CON           equ	4045	;# 
   761   000FCE                     TMR1            equ	4046	;# 
   762   000FCE                     TMR1L           equ	4046	;# 
   763   000FCF                     TMR1H           equ	4047	;# 
   764   000FD0                     RCON            equ	4048	;# 
   765   000FD1                     WDTCON          equ	4049	;# 
   766   000FD2                     HLVDCON         equ	4050	;# 
   767   000FD2                     LVDCON          equ	4050	;# 
   768   000FD3                     OSCCON          equ	4051	;# 
   769   000FD5                     T0CON           equ	4053	;# 
   770   000FD6                     TMR0            equ	4054	;# 
   771   000FD6                     TMR0L           equ	4054	;# 
   772   000FD7                     TMR0H           equ	4055	;# 
   773   000FD8                     STATUS          equ	4056	;# 
   774   000FD9                     FSR2            equ	4057	;# 
   775   000FD9                     FSR2L           equ	4057	;# 
   776   000FDA                     FSR2H           equ	4058	;# 
   777   000FDB                     PLUSW2          equ	4059	;# 
   778   000FDC                     PREINC2         equ	4060	;# 
   779   000FDD                     POSTDEC2        equ	4061	;# 
   780   000FDE                     POSTINC2        equ	4062	;# 
   781   000FDF                     INDF2           equ	4063	;# 
   782   000FE0                     BSR             equ	4064	;# 
   783   000FE1                     FSR1            equ	4065	;# 
   784   000FE1                     FSR1L           equ	4065	;# 
   785   000FE2                     FSR1H           equ	4066	;# 
   786   000FE3                     PLUSW1          equ	4067	;# 
   787   000FE4                     PREINC1         equ	4068	;# 
   788   000FE5                     POSTDEC1        equ	4069	;# 
   789   000FE6                     POSTINC1        equ	4070	;# 
   790   000FE7                     INDF1           equ	4071	;# 
   791   000FE8                     WREG            equ	4072	;# 
   792   000FE9                     FSR0            equ	4073	;# 
   793   000FE9                     FSR0L           equ	4073	;# 
   794   000FEA                     FSR0H           equ	4074	;# 
   795   000FEB                     PLUSW0          equ	4075	;# 
   796   000FEC                     PREINC0         equ	4076	;# 
   797   000FED                     POSTDEC0        equ	4077	;# 
   798   000FEE                     POSTINC0        equ	4078	;# 
   799   000FEF                     INDF0           equ	4079	;# 
   800   000FF0                     INTCON3         equ	4080	;# 
   801   000FF1                     INTCON2         equ	4081	;# 
   802   000FF2                     INTCON          equ	4082	;# 
   803   000FF3                     PROD            equ	4083	;# 
   804   000FF3                     PRODL           equ	4083	;# 
   805   000FF4                     PRODH           equ	4084	;# 
   806   000FF5                     TABLAT          equ	4085	;# 
   807   000FF6                     TBLPTR          equ	4086	;# 
   808   000FF6                     TBLPTRL         equ	4086	;# 
   809   000FF7                     TBLPTRH         equ	4087	;# 
   810   000FF8                     TBLPTRU         equ	4088	;# 
   811   000FF9                     PCLAT           equ	4089	;# 
   812   000FF9                     PC              equ	4089	;# 
   813   000FF9                     PCL             equ	4089	;# 
   814   000FFA                     PCLATH          equ	4090	;# 
   815   000FFB                     PCLATU          equ	4091	;# 
   816   000FFC                     STKPTR          equ	4092	;# 
   817   000FFD                     TOS             equ	4093	;# 
   818   000FFD                     TOSL            equ	4093	;# 
   819   000FFE                     TOSH            equ	4094	;# 
   820   000FFF                     TOSU            equ	4095	;# 
   821   000F77                     SSPMSK          equ	3959	;# 
   822   000F78                     SLRCON          equ	3960	;# 
   823   000F79                     CM2CON1         equ	3961	;# 
   824   000F7A                     CM2CON0         equ	3962	;# 
   825   000F7B                     CM1CON0         equ	3963	;# 
   826   000F7C                     WPUB            equ	3964	;# 
   827   000F7D                     IOCB            equ	3965	;# 
   828   000F7E                     ANSEL           equ	3966	;# 
   829   000F7F                     ANSELH          equ	3967	;# 
   830   000F80                     PORTA           equ	3968	;# 
   831   000F81                     PORTB           equ	3969	;# 
   832   000F82                     PORTC           equ	3970	;# 
   833   000F83                     PORTD           equ	3971	;# 
   834   000F84                     PORTE           equ	3972	;# 
   835   000F89                     LATA            equ	3977	;# 
   836   000F8A                     LATB            equ	3978	;# 
   837   000F8B                     LATC            equ	3979	;# 
   838   000F8C                     LATD            equ	3980	;# 
   839   000F8D                     LATE            equ	3981	;# 
   840   000F92                     TRISA           equ	3986	;# 
   841   000F92                     DDRA            equ	3986	;# 
   842   000F93                     TRISB           equ	3987	;# 
   843   000F93                     DDRB            equ	3987	;# 
   844   000F94                     TRISC           equ	3988	;# 
   845   000F94                     DDRC            equ	3988	;# 
   846   000F95                     TRISD           equ	3989	;# 
   847   000F95                     DDRD            equ	3989	;# 
   848   000F96                     TRISE           equ	3990	;# 
   849   000F96                     DDRE            equ	3990	;# 
   850   000F9B                     OSCTUNE         equ	3995	;# 
   851   000F9D                     PIE1            equ	3997	;# 
   852   000F9E                     PIR1            equ	3998	;# 
   853   000F9F                     IPR1            equ	3999	;# 
   854   000FA0                     PIE2            equ	4000	;# 
   855   000FA1                     PIR2            equ	4001	;# 
   856   000FA2                     IPR2            equ	4002	;# 
   857   000FA6                     EECON1          equ	4006	;# 
   858   000FA7                     EECON2          equ	4007	;# 
   859   000FA8                     EEDATA          equ	4008	;# 
   860   000FA9                     EEADR           equ	4009	;# 
   861   000FAA                     EEADRH          equ	4010	;# 
   862   000FAB                     RCSTA           equ	4011	;# 
   863   000FAB                     RCSTA1          equ	4011	;# 
   864   000FAC                     TXSTA           equ	4012	;# 
   865   000FAC                     TXSTA1          equ	4012	;# 
   866   000FAD                     TXREG           equ	4013	;# 
   867   000FAD                     TXREG1          equ	4013	;# 
   868   000FAE                     RCREG           equ	4014	;# 
   869   000FAE                     RCREG1          equ	4014	;# 
   870   000FAF                     SPBRG           equ	4015	;# 
   871   000FAF                     SPBRG1          equ	4015	;# 
   872   000FB0                     SPBRGH          equ	4016	;# 
   873   000FB1                     T3CON           equ	4017	;# 
   874   000FB2                     TMR3            equ	4018	;# 
   875   000FB2                     TMR3L           equ	4018	;# 
   876   000FB3                     TMR3H           equ	4019	;# 
   877   000FB4                     CVRCON2         equ	4020	;# 
   878   000FB5                     CVRCON          equ	4021	;# 
   879   000FB6                     ECCP1AS         equ	4022	;# 
   880   000FB7                     PWM1CON         equ	4023	;# 
   881   000FB8                     BAUDCON         equ	4024	;# 
   882   000FB8                     BAUDCTL         equ	4024	;# 
   883   000FB9                     PSTRCON         equ	4025	;# 
   884   000FBA                     CCP2CON         equ	4026	;# 
   885   000FBB                     CCPR2           equ	4027	;# 
   886   000FBB                     CCPR2L          equ	4027	;# 
   887   000FBC                     CCPR2H          equ	4028	;# 
   888   000FBD                     CCP1CON         equ	4029	;# 
   889   000FBE                     CCPR1           equ	4030	;# 
   890   000FBE                     CCPR1L          equ	4030	;# 
   891   000FBF                     CCPR1H          equ	4031	;# 
   892   000FC0                     ADCON2          equ	4032	;# 
   893   000FC1                     ADCON1          equ	4033	;# 
   894   000FC2                     ADCON0          equ	4034	;# 
   895   000FC3                     ADRES           equ	4035	;# 
   896   000FC3                     ADRESL          equ	4035	;# 
   897   000FC4                     ADRESH          equ	4036	;# 
   898   000FC5                     SSPCON2         equ	4037	;# 
   899   000FC6                     SSPCON1         equ	4038	;# 
   900   000FC7                     SSPSTAT         equ	4039	;# 
   901   000FC8                     SSPADD          equ	4040	;# 
   902   000FC9                     SSPBUF          equ	4041	;# 
   903   000FCA                     T2CON           equ	4042	;# 
   904   000FCB                     PR2             equ	4043	;# 
   905   000FCB                     MEMCON          equ	4043	;# 
   906   000FCC                     TMR2            equ	4044	;# 
   907   000FCD                     T1CON           equ	4045	;# 
   908   000FCE                     TMR1            equ	4046	;# 
   909   000FCE                     TMR1L           equ	4046	;# 
   910   000FCF                     TMR1H           equ	4047	;# 
   911   000FD0                     RCON            equ	4048	;# 
   912   000FD1                     WDTCON          equ	4049	;# 
   913   000FD2                     HLVDCON         equ	4050	;# 
   914   000FD2                     LVDCON          equ	4050	;# 
   915   000FD3                     OSCCON          equ	4051	;# 
   916   000FD5                     T0CON           equ	4053	;# 
   917   000FD6                     TMR0            equ	4054	;# 
   918   000FD6                     TMR0L           equ	4054	;# 
   919   000FD7                     TMR0H           equ	4055	;# 
   920   000FD8                     STATUS          equ	4056	;# 
   921   000FD9                     FSR2            equ	4057	;# 
   922   000FD9                     FSR2L           equ	4057	;# 
   923   000FDA                     FSR2H           equ	4058	;# 
   924   000FDB                     PLUSW2          equ	4059	;# 
   925   000FDC                     PREINC2         equ	4060	;# 
   926   000FDD                     POSTDEC2        equ	4061	;# 
   927   000FDE                     POSTINC2        equ	4062	;# 
   928   000FDF                     INDF2           equ	4063	;# 
   929   000FE0                     BSR             equ	4064	;# 
   930   000FE1                     FSR1            equ	4065	;# 
   931   000FE1                     FSR1L           equ	4065	;# 
   932   000FE2                     FSR1H           equ	4066	;# 
   933   000FE3                     PLUSW1          equ	4067	;# 
   934   000FE4                     PREINC1         equ	4068	;# 
   935   000FE5                     POSTDEC1        equ	4069	;# 
   936   000FE6                     POSTINC1        equ	4070	;# 
   937   000FE7                     INDF1           equ	4071	;# 
   938   000FE8                     WREG            equ	4072	;# 
   939   000FE9                     FSR0            equ	4073	;# 
   940   000FE9                     FSR0L           equ	4073	;# 
   941   000FEA                     FSR0H           equ	4074	;# 
   942   000FEB                     PLUSW0          equ	4075	;# 
   943   000FEC                     PREINC0         equ	4076	;# 
   944   000FED                     POSTDEC0        equ	4077	;# 
   945   000FEE                     POSTINC0        equ	4078	;# 
   946   000FEF                     INDF0           equ	4079	;# 
   947   000FF0                     INTCON3         equ	4080	;# 
   948   000FF1                     INTCON2         equ	4081	;# 
   949   000FF2                     INTCON          equ	4082	;# 
   950   000FF3                     PROD            equ	4083	;# 
   951   000FF3                     PRODL           equ	4083	;# 
   952   000FF4                     PRODH           equ	4084	;# 
   953   000FF5                     TABLAT          equ	4085	;# 
   954   000FF6                     TBLPTR          equ	4086	;# 
   955   000FF6                     TBLPTRL         equ	4086	;# 
   956   000FF7                     TBLPTRH         equ	4087	;# 
   957   000FF8                     TBLPTRU         equ	4088	;# 
   958   000FF9                     PCLAT           equ	4089	;# 
   959   000FF9                     PC              equ	4089	;# 
   960   000FF9                     PCL             equ	4089	;# 
   961   000FFA                     PCLATH          equ	4090	;# 
   962   000FFB                     PCLATU          equ	4091	;# 
   963   000FFC                     STKPTR          equ	4092	;# 
   964   000FFD                     TOS             equ	4093	;# 
   965   000FFD                     TOSL            equ	4093	;# 
   966   000FFE                     TOSH            equ	4094	;# 
   967   000FFF                     TOSU            equ	4095	;# 
   968   000F77                     SSPMSK          equ	3959	;# 
   969   000F78                     SLRCON          equ	3960	;# 
   970   000F79                     CM2CON1         equ	3961	;# 
   971   000F7A                     CM2CON0         equ	3962	;# 
   972   000F7B                     CM1CON0         equ	3963	;# 
   973   000F7C                     WPUB            equ	3964	;# 
   974   000F7D                     IOCB            equ	3965	;# 
   975   000F7E                     ANSEL           equ	3966	;# 
   976   000F7F                     ANSELH          equ	3967	;# 
   977   000F80                     PORTA           equ	3968	;# 
   978   000F81                     PORTB           equ	3969	;# 
   979   000F82                     PORTC           equ	3970	;# 
   980   000F83                     PORTD           equ	3971	;# 
   981   000F84                     PORTE           equ	3972	;# 
   982   000F89                     LATA            equ	3977	;# 
   983   000F8A                     LATB            equ	3978	;# 
   984   000F8B                     LATC            equ	3979	;# 
   985   000F8C                     LATD            equ	3980	;# 
   986   000F8D                     LATE            equ	3981	;# 
   987   000F92                     TRISA           equ	3986	;# 
   988   000F92                     DDRA            equ	3986	;# 
   989   000F93                     TRISB           equ	3987	;# 
   990   000F93                     DDRB            equ	3987	;# 
   991   000F94                     TRISC           equ	3988	;# 
   992   000F94                     DDRC            equ	3988	;# 
   993   000F95                     TRISD           equ	3989	;# 
   994   000F95                     DDRD            equ	3989	;# 
   995   000F96                     TRISE           equ	3990	;# 
   996   000F96                     DDRE            equ	3990	;# 
   997   000F9B                     OSCTUNE         equ	3995	;# 
   998   000F9D                     PIE1            equ	3997	;# 
   999   000F9E                     PIR1            equ	3998	;# 
  1000   000F9F                     IPR1            equ	3999	;# 
  1001   000FA0                     PIE2            equ	4000	;# 
  1002   000FA1                     PIR2            equ	4001	;# 
  1003   000FA2                     IPR2            equ	4002	;# 
  1004   000FA6                     EECON1          equ	4006	;# 
  1005   000FA7                     EECON2          equ	4007	;# 
  1006   000FA8                     EEDATA          equ	4008	;# 
  1007   000FA9                     EEADR           equ	4009	;# 
  1008   000FAA                     EEADRH          equ	4010	;# 
  1009   000FAB                     RCSTA           equ	4011	;# 
  1010   000FAB                     RCSTA1          equ	4011	;# 
  1011   000FAC                     TXSTA           equ	4012	;# 
  1012   000FAC                     TXSTA1          equ	4012	;# 
  1013   000FAD                     TXREG           equ	4013	;# 
  1014   000FAD                     TXREG1          equ	4013	;# 
  1015   000FAE                     RCREG           equ	4014	;# 
  1016   000FAE                     RCREG1          equ	4014	;# 
  1017   000FAF                     SPBRG           equ	4015	;# 
  1018   000FAF                     SPBRG1          equ	4015	;# 
  1019   000FB0                     SPBRGH          equ	4016	;# 
  1020   000FB1                     T3CON           equ	4017	;# 
  1021   000FB2                     TMR3            equ	4018	;# 
  1022   000FB2                     TMR3L           equ	4018	;# 
  1023   000FB3                     TMR3H           equ	4019	;# 
  1024   000FB4                     CVRCON2         equ	4020	;# 
  1025   000FB5                     CVRCON          equ	4021	;# 
  1026   000FB6                     ECCP1AS         equ	4022	;# 
  1027   000FB7                     PWM1CON         equ	4023	;# 
  1028   000FB8                     BAUDCON         equ	4024	;# 
  1029   000FB8                     BAUDCTL         equ	4024	;# 
  1030   000FB9                     PSTRCON         equ	4025	;# 
  1031   000FBA                     CCP2CON         equ	4026	;# 
  1032   000FBB                     CCPR2           equ	4027	;# 
  1033   000FBB                     CCPR2L          equ	4027	;# 
  1034   000FBC                     CCPR2H          equ	4028	;# 
  1035   000FBD                     CCP1CON         equ	4029	;# 
  1036   000FBE                     CCPR1           equ	4030	;# 
  1037   000FBE                     CCPR1L          equ	4030	;# 
  1038   000FBF                     CCPR1H          equ	4031	;# 
  1039   000FC0                     ADCON2          equ	4032	;# 
  1040   000FC1                     ADCON1          equ	4033	;# 
  1041   000FC2                     ADCON0          equ	4034	;# 
  1042   000FC3                     ADRES           equ	4035	;# 
  1043   000FC3                     ADRESL          equ	4035	;# 
  1044   000FC4                     ADRESH          equ	4036	;# 
  1045   000FC5                     SSPCON2         equ	4037	;# 
  1046   000FC6                     SSPCON1         equ	4038	;# 
  1047   000FC7                     SSPSTAT         equ	4039	;# 
  1048   000FC8                     SSPADD          equ	4040	;# 
  1049   000FC9                     SSPBUF          equ	4041	;# 
  1050   000FCA                     T2CON           equ	4042	;# 
  1051   000FCB                     PR2             equ	4043	;# 
  1052   000FCB                     MEMCON          equ	4043	;# 
  1053   000FCC                     TMR2            equ	4044	;# 
  1054   000FCD                     T1CON           equ	4045	;# 
  1055   000FCE                     TMR1            equ	4046	;# 
  1056   000FCE                     TMR1L           equ	4046	;# 
  1057   000FCF                     TMR1H           equ	4047	;# 
  1058   000FD0                     RCON            equ	4048	;# 
  1059   000FD1                     WDTCON          equ	4049	;# 
  1060   000FD2                     HLVDCON         equ	4050	;# 
  1061   000FD2                     LVDCON          equ	4050	;# 
  1062   000FD3                     OSCCON          equ	4051	;# 
  1063   000FD5                     T0CON           equ	4053	;# 
  1064   000FD6                     TMR0            equ	4054	;# 
  1065   000FD6                     TMR0L           equ	4054	;# 
  1066   000FD7                     TMR0H           equ	4055	;# 
  1067   000FD8                     STATUS          equ	4056	;# 
  1068   000FD9                     FSR2            equ	4057	;# 
  1069   000FD9                     FSR2L           equ	4057	;# 
  1070   000FDA                     FSR2H           equ	4058	;# 
  1071   000FDB                     PLUSW2          equ	4059	;# 
  1072   000FDC                     PREINC2         equ	4060	;# 
  1073   000FDD                     POSTDEC2        equ	4061	;# 
  1074   000FDE                     POSTINC2        equ	4062	;# 
  1075   000FDF                     INDF2           equ	4063	;# 
  1076   000FE0                     BSR             equ	4064	;# 
  1077   000FE1                     FSR1            equ	4065	;# 
  1078   000FE1                     FSR1L           equ	4065	;# 
  1079   000FE2                     FSR1H           equ	4066	;# 
  1080   000FE3                     PLUSW1          equ	4067	;# 
  1081   000FE4                     PREINC1         equ	4068	;# 
  1082   000FE5                     POSTDEC1        equ	4069	;# 
  1083   000FE6                     POSTINC1        equ	4070	;# 
  1084   000FE7                     INDF1           equ	4071	;# 
  1085   000FE8                     WREG            equ	4072	;# 
  1086   000FE9                     FSR0            equ	4073	;# 
  1087   000FE9                     FSR0L           equ	4073	;# 
  1088   000FEA                     FSR0H           equ	4074	;# 
  1089   000FEB                     PLUSW0          equ	4075	;# 
  1090   000FEC                     PREINC0         equ	4076	;# 
  1091   000FED                     POSTDEC0        equ	4077	;# 
  1092   000FEE                     POSTINC0        equ	4078	;# 
  1093   000FEF                     INDF0           equ	4079	;# 
  1094   000FF0                     INTCON3         equ	4080	;# 
  1095   000FF1                     INTCON2         equ	4081	;# 
  1096   000FF2                     INTCON          equ	4082	;# 
  1097   000FF3                     PROD            equ	4083	;# 
  1098   000FF3                     PRODL           equ	4083	;# 
  1099   000FF4                     PRODH           equ	4084	;# 
  1100   000FF5                     TABLAT          equ	4085	;# 
  1101   000FF6                     TBLPTR          equ	4086	;# 
  1102   000FF6                     TBLPTRL         equ	4086	;# 
  1103   000FF7                     TBLPTRH         equ	4087	;# 
  1104   000FF8                     TBLPTRU         equ	4088	;# 
  1105   000FF9                     PCLAT           equ	4089	;# 
  1106   000FF9                     PC              equ	4089	;# 
  1107   000FF9                     PCL             equ	4089	;# 
  1108   000FFA                     PCLATH          equ	4090	;# 
  1109   000FFB                     PCLATU          equ	4091	;# 
  1110   000FFC                     STKPTR          equ	4092	;# 
  1111   000FFD                     TOS             equ	4093	;# 
  1112   000FFD                     TOSL            equ	4093	;# 
  1113   000FFE                     TOSH            equ	4094	;# 
  1114   000FFF                     TOSU            equ	4095	;# 
  1115   000F77                     SSPMSK          equ	3959	;# 
  1116   000F78                     SLRCON          equ	3960	;# 
  1117   000F79                     CM2CON1         equ	3961	;# 
  1118   000F7A                     CM2CON0         equ	3962	;# 
  1119   000F7B                     CM1CON0         equ	3963	;# 
  1120   000F7C                     WPUB            equ	3964	;# 
  1121   000F7D                     IOCB            equ	3965	;# 
  1122   000F7E                     ANSEL           equ	3966	;# 
  1123   000F7F                     ANSELH          equ	3967	;# 
  1124   000F80                     PORTA           equ	3968	;# 
  1125   000F81                     PORTB           equ	3969	;# 
  1126   000F82                     PORTC           equ	3970	;# 
  1127   000F83                     PORTD           equ	3971	;# 
  1128   000F84                     PORTE           equ	3972	;# 
  1129   000F89                     LATA            equ	3977	;# 
  1130   000F8A                     LATB            equ	3978	;# 
  1131   000F8B                     LATC            equ	3979	;# 
  1132   000F8C                     LATD            equ	3980	;# 
  1133   000F8D                     LATE            equ	3981	;# 
  1134   000F92                     TRISA           equ	3986	;# 
  1135   000F92                     DDRA            equ	3986	;# 
  1136   000F93                     TRISB           equ	3987	;# 
  1137   000F93                     DDRB            equ	3987	;# 
  1138   000F94                     TRISC           equ	3988	;# 
  1139   000F94                     DDRC            equ	3988	;# 
  1140   000F95                     TRISD           equ	3989	;# 
  1141   000F95                     DDRD            equ	3989	;# 
  1142   000F96                     TRISE           equ	3990	;# 
  1143   000F96                     DDRE            equ	3990	;# 
  1144   000F9B                     OSCTUNE         equ	3995	;# 
  1145   000F9D                     PIE1            equ	3997	;# 
  1146   000F9E                     PIR1            equ	3998	;# 
  1147   000F9F                     IPR1            equ	3999	;# 
  1148   000FA0                     PIE2            equ	4000	;# 
  1149   000FA1                     PIR2            equ	4001	;# 
  1150   000FA2                     IPR2            equ	4002	;# 
  1151   000FA6                     EECON1          equ	4006	;# 
  1152   000FA7                     EECON2          equ	4007	;# 
  1153   000FA8                     EEDATA          equ	4008	;# 
  1154   000FA9                     EEADR           equ	4009	;# 
  1155   000FAA                     EEADRH          equ	4010	;# 
  1156   000FAB                     RCSTA           equ	4011	;# 
  1157   000FAB                     RCSTA1          equ	4011	;# 
  1158   000FAC                     TXSTA           equ	4012	;# 
  1159   000FAC                     TXSTA1          equ	4012	;# 
  1160   000FAD                     TXREG           equ	4013	;# 
  1161   000FAD                     TXREG1          equ	4013	;# 
  1162   000FAE                     RCREG           equ	4014	;# 
  1163   000FAE                     RCREG1          equ	4014	;# 
  1164   000FAF                     SPBRG           equ	4015	;# 
  1165   000FAF                     SPBRG1          equ	4015	;# 
  1166   000FB0                     SPBRGH          equ	4016	;# 
  1167   000FB1                     T3CON           equ	4017	;# 
  1168   000FB2                     TMR3            equ	4018	;# 
  1169   000FB2                     TMR3L           equ	4018	;# 
  1170   000FB3                     TMR3H           equ	4019	;# 
  1171   000FB4                     CVRCON2         equ	4020	;# 
  1172   000FB5                     CVRCON          equ	4021	;# 
  1173   000FB6                     ECCP1AS         equ	4022	;# 
  1174   000FB7                     PWM1CON         equ	4023	;# 
  1175   000FB8                     BAUDCON         equ	4024	;# 
  1176   000FB8                     BAUDCTL         equ	4024	;# 
  1177   000FB9                     PSTRCON         equ	4025	;# 
  1178   000FBA                     CCP2CON         equ	4026	;# 
  1179   000FBB                     CCPR2           equ	4027	;# 
  1180   000FBB                     CCPR2L          equ	4027	;# 
  1181   000FBC                     CCPR2H          equ	4028	;# 
  1182   000FBD                     CCP1CON         equ	4029	;# 
  1183   000FBE                     CCPR1           equ	4030	;# 
  1184   000FBE                     CCPR1L          equ	4030	;# 
  1185   000FBF                     CCPR1H          equ	4031	;# 
  1186   000FC0                     ADCON2          equ	4032	;# 
  1187   000FC1                     ADCON1          equ	4033	;# 
  1188   000FC2                     ADCON0          equ	4034	;# 
  1189   000FC3                     ADRES           equ	4035	;# 
  1190   000FC3                     ADRESL          equ	4035	;# 
  1191   000FC4                     ADRESH          equ	4036	;# 
  1192   000FC5                     SSPCON2         equ	4037	;# 
  1193   000FC6                     SSPCON1         equ	4038	;# 
  1194   000FC7                     SSPSTAT         equ	4039	;# 
  1195   000FC8                     SSPADD          equ	4040	;# 
  1196   000FC9                     SSPBUF          equ	4041	;# 
  1197   000FCA                     T2CON           equ	4042	;# 
  1198   000FCB                     PR2             equ	4043	;# 
  1199   000FCB                     MEMCON          equ	4043	;# 
  1200   000FCC                     TMR2            equ	4044	;# 
  1201   000FCD                     T1CON           equ	4045	;# 
  1202   000FCE                     TMR1            equ	4046	;# 
  1203   000FCE                     TMR1L           equ	4046	;# 
  1204   000FCF                     TMR1H           equ	4047	;# 
  1205   000FD0                     RCON            equ	4048	;# 
  1206   000FD1                     WDTCON          equ	4049	;# 
  1207   000FD2                     HLVDCON         equ	4050	;# 
  1208   000FD2                     LVDCON          equ	4050	;# 
  1209   000FD3                     OSCCON          equ	4051	;# 
  1210   000FD5                     T0CON           equ	4053	;# 
  1211   000FD6                     TMR0            equ	4054	;# 
  1212   000FD6                     TMR0L           equ	4054	;# 
  1213   000FD7                     TMR0H           equ	4055	;# 
  1214   000FD8                     STATUS          equ	4056	;# 
  1215   000FD9                     FSR2            equ	4057	;# 
  1216   000FD9                     FSR2L           equ	4057	;# 
  1217   000FDA                     FSR2H           equ	4058	;# 
  1218   000FDB                     PLUSW2          equ	4059	;# 
  1219   000FDC                     PREINC2         equ	4060	;# 
  1220   000FDD                     POSTDEC2        equ	4061	;# 
  1221   000FDE                     POSTINC2        equ	4062	;# 
  1222   000FDF                     INDF2           equ	4063	;# 
  1223   000FE0                     BSR             equ	4064	;# 
  1224   000FE1                     FSR1            equ	4065	;# 
  1225   000FE1                     FSR1L           equ	4065	;# 
  1226   000FE2                     FSR1H           equ	4066	;# 
  1227   000FE3                     PLUSW1          equ	4067	;# 
  1228   000FE4                     PREINC1         equ	4068	;# 
  1229   000FE5                     POSTDEC1        equ	4069	;# 
  1230   000FE6                     POSTINC1        equ	4070	;# 
  1231   000FE7                     INDF1           equ	4071	;# 
  1232   000FE8                     WREG            equ	4072	;# 
  1233   000FE9                     FSR0            equ	4073	;# 
  1234   000FE9                     FSR0L           equ	4073	;# 
  1235   000FEA                     FSR0H           equ	4074	;# 
  1236   000FEB                     PLUSW0          equ	4075	;# 
  1237   000FEC                     PREINC0         equ	4076	;# 
  1238   000FED                     POSTDEC0        equ	4077	;# 
  1239   000FEE                     POSTINC0        equ	4078	;# 
  1240   000FEF                     INDF0           equ	4079	;# 
  1241   000FF0                     INTCON3         equ	4080	;# 
  1242   000FF1                     INTCON2         equ	4081	;# 
  1243   000FF2                     INTCON          equ	4082	;# 
  1244   000FF3                     PROD            equ	4083	;# 
  1245   000FF3                     PRODL           equ	4083	;# 
  1246   000FF4                     PRODH           equ	4084	;# 
  1247   000FF5                     TABLAT          equ	4085	;# 
  1248   000FF6                     TBLPTR          equ	4086	;# 
  1249   000FF6                     TBLPTRL         equ	4086	;# 
  1250   000FF7                     TBLPTRH         equ	4087	;# 
  1251   000FF8                     TBLPTRU         equ	4088	;# 
  1252   000FF9                     PCLAT           equ	4089	;# 
  1253   000FF9                     PC              equ	4089	;# 
  1254   000FF9                     PCL             equ	4089	;# 
  1255   000FFA                     PCLATH          equ	4090	;# 
  1256   000FFB                     PCLATU          equ	4091	;# 
  1257   000FFC                     STKPTR          equ	4092	;# 
  1258   000FFD                     TOS             equ	4093	;# 
  1259   000FFD                     TOSL            equ	4093	;# 
  1260   000FFE                     TOSH            equ	4094	;# 
  1261   000FFF                     TOSU            equ	4095	;# 
  1262   000F77                     SSPMSK          equ	3959	;# 
  1263   000F78                     SLRCON          equ	3960	;# 
  1264   000F79                     CM2CON1         equ	3961	;# 
  1265   000F7A                     CM2CON0         equ	3962	;# 
  1266   000F7B                     CM1CON0         equ	3963	;# 
  1267   000F7C                     WPUB            equ	3964	;# 
  1268   000F7D                     IOCB            equ	3965	;# 
  1269   000F7E                     ANSEL           equ	3966	;# 
  1270   000F7F                     ANSELH          equ	3967	;# 
  1271   000F80                     PORTA           equ	3968	;# 
  1272   000F81                     PORTB           equ	3969	;# 
  1273   000F82                     PORTC           equ	3970	;# 
  1274   000F83                     PORTD           equ	3971	;# 
  1275   000F84                     PORTE           equ	3972	;# 
  1276   000F89                     LATA            equ	3977	;# 
  1277   000F8A                     LATB            equ	3978	;# 
  1278   000F8B                     LATC            equ	3979	;# 
  1279   000F8C                     LATD            equ	3980	;# 
  1280   000F8D                     LATE            equ	3981	;# 
  1281   000F92                     TRISA           equ	3986	;# 
  1282   000F92                     DDRA            equ	3986	;# 
  1283   000F93                     TRISB           equ	3987	;# 
  1284   000F93                     DDRB            equ	3987	;# 
  1285   000F94                     TRISC           equ	3988	;# 
  1286   000F94                     DDRC            equ	3988	;# 
  1287   000F95                     TRISD           equ	3989	;# 
  1288   000F95                     DDRD            equ	3989	;# 
  1289   000F96                     TRISE           equ	3990	;# 
  1290   000F96                     DDRE            equ	3990	;# 
  1291   000F9B                     OSCTUNE         equ	3995	;# 
  1292   000F9D                     PIE1            equ	3997	;# 
  1293   000F9E                     PIR1            equ	3998	;# 
  1294   000F9F                     IPR1            equ	3999	;# 
  1295   000FA0                     PIE2            equ	4000	;# 
  1296   000FA1                     PIR2            equ	4001	;# 
  1297   000FA2                     IPR2            equ	4002	;# 
  1298   000FA6                     EECON1          equ	4006	;# 
  1299   000FA7                     EECON2          equ	4007	;# 
  1300   000FA8                     EEDATA          equ	4008	;# 
  1301   000FA9                     EEADR           equ	4009	;# 
  1302   000FAA                     EEADRH          equ	4010	;# 
  1303   000FAB                     RCSTA           equ	4011	;# 
  1304   000FAB                     RCSTA1          equ	4011	;# 
  1305   000FAC                     TXSTA           equ	4012	;# 
  1306   000FAC                     TXSTA1          equ	4012	;# 
  1307   000FAD                     TXREG           equ	4013	;# 
  1308   000FAD                     TXREG1          equ	4013	;# 
  1309   000FAE                     RCREG           equ	4014	;# 
  1310   000FAE                     RCREG1          equ	4014	;# 
  1311   000FAF                     SPBRG           equ	4015	;# 
  1312   000FAF                     SPBRG1          equ	4015	;# 
  1313   000FB0                     SPBRGH          equ	4016	;# 
  1314   000FB1                     T3CON           equ	4017	;# 
  1315   000FB2                     TMR3            equ	4018	;# 
  1316   000FB2                     TMR3L           equ	4018	;# 
  1317   000FB3                     TMR3H           equ	4019	;# 
  1318   000FB4                     CVRCON2         equ	4020	;# 
  1319   000FB5                     CVRCON          equ	4021	;# 
  1320   000FB6                     ECCP1AS         equ	4022	;# 
  1321   000FB7                     PWM1CON         equ	4023	;# 
  1322   000FB8                     BAUDCON         equ	4024	;# 
  1323   000FB8                     BAUDCTL         equ	4024	;# 
  1324   000FB9                     PSTRCON         equ	4025	;# 
  1325   000FBA                     CCP2CON         equ	4026	;# 
  1326   000FBB                     CCPR2           equ	4027	;# 
  1327   000FBB                     CCPR2L          equ	4027	;# 
  1328   000FBC                     CCPR2H          equ	4028	;# 
  1329   000FBD                     CCP1CON         equ	4029	;# 
  1330   000FBE                     CCPR1           equ	4030	;# 
  1331   000FBE                     CCPR1L          equ	4030	;# 
  1332   000FBF                     CCPR1H          equ	4031	;# 
  1333   000FC0                     ADCON2          equ	4032	;# 
  1334   000FC1                     ADCON1          equ	4033	;# 
  1335   000FC2                     ADCON0          equ	4034	;# 
  1336   000FC3                     ADRES           equ	4035	;# 
  1337   000FC3                     ADRESL          equ	4035	;# 
  1338   000FC4                     ADRESH          equ	4036	;# 
  1339   000FC5                     SSPCON2         equ	4037	;# 
  1340   000FC6                     SSPCON1         equ	4038	;# 
  1341   000FC7                     SSPSTAT         equ	4039	;# 
  1342   000FC8                     SSPADD          equ	4040	;# 
  1343   000FC9                     SSPBUF          equ	4041	;# 
  1344   000FCA                     T2CON           equ	4042	;# 
  1345   000FCB                     PR2             equ	4043	;# 
  1346   000FCB                     MEMCON          equ	4043	;# 
  1347   000FCC                     TMR2            equ	4044	;# 
  1348   000FCD                     T1CON           equ	4045	;# 
  1349   000FCE                     TMR1            equ	4046	;# 
  1350   000FCE                     TMR1L           equ	4046	;# 
  1351   000FCF                     TMR1H           equ	4047	;# 
  1352   000FD0                     RCON            equ	4048	;# 
  1353   000FD1                     WDTCON          equ	4049	;# 
  1354   000FD2                     HLVDCON         equ	4050	;# 
  1355   000FD2                     LVDCON          equ	4050	;# 
  1356   000FD3                     OSCCON          equ	4051	;# 
  1357   000FD5                     T0CON           equ	4053	;# 
  1358   000FD6                     TMR0            equ	4054	;# 
  1359   000FD6                     TMR0L           equ	4054	;# 
  1360   000FD7                     TMR0H           equ	4055	;# 
  1361   000FD8                     STATUS          equ	4056	;# 
  1362   000FD9                     FSR2            equ	4057	;# 
  1363   000FD9                     FSR2L           equ	4057	;# 
  1364   000FDA                     FSR2H           equ	4058	;# 
  1365   000FDB                     PLUSW2          equ	4059	;# 
  1366   000FDC                     PREINC2         equ	4060	;# 
  1367   000FDD                     POSTDEC2        equ	4061	;# 
  1368   000FDE                     POSTINC2        equ	4062	;# 
  1369   000FDF                     INDF2           equ	4063	;# 
  1370   000FE0                     BSR             equ	4064	;# 
  1371   000FE1                     FSR1            equ	4065	;# 
  1372   000FE1                     FSR1L           equ	4065	;# 
  1373   000FE2                     FSR1H           equ	4066	;# 
  1374   000FE3                     PLUSW1          equ	4067	;# 
  1375   000FE4                     PREINC1         equ	4068	;# 
  1376   000FE5                     POSTDEC1        equ	4069	;# 
  1377   000FE6                     POSTINC1        equ	4070	;# 
  1378   000FE7                     INDF1           equ	4071	;# 
  1379   000FE8                     WREG            equ	4072	;# 
  1380   000FE9                     FSR0            equ	4073	;# 
  1381   000FE9                     FSR0L           equ	4073	;# 
  1382   000FEA                     FSR0H           equ	4074	;# 
  1383   000FEB                     PLUSW0          equ	4075	;# 
  1384   000FEC                     PREINC0         equ	4076	;# 
  1385   000FED                     POSTDEC0        equ	4077	;# 
  1386   000FEE                     POSTINC0        equ	4078	;# 
  1387   000FEF                     INDF0           equ	4079	;# 
  1388   000FF0                     INTCON3         equ	4080	;# 
  1389   000FF1                     INTCON2         equ	4081	;# 
  1390   000FF2                     INTCON          equ	4082	;# 
  1391   000FF3                     PROD            equ	4083	;# 
  1392   000FF3                     PRODL           equ	4083	;# 
  1393   000FF4                     PRODH           equ	4084	;# 
  1394   000FF5                     TABLAT          equ	4085	;# 
  1395   000FF6                     TBLPTR          equ	4086	;# 
  1396   000FF6                     TBLPTRL         equ	4086	;# 
  1397   000FF7                     TBLPTRH         equ	4087	;# 
  1398   000FF8                     TBLPTRU         equ	4088	;# 
  1399   000FF9                     PCLAT           equ	4089	;# 
  1400   000FF9                     PC              equ	4089	;# 
  1401   000FF9                     PCL             equ	4089	;# 
  1402   000FFA                     PCLATH          equ	4090	;# 
  1403   000FFB                     PCLATU          equ	4091	;# 
  1404   000FFC                     STKPTR          equ	4092	;# 
  1405   000FFD                     TOS             equ	4093	;# 
  1406   000FFD                     TOSL            equ	4093	;# 
  1407   000FFE                     TOSH            equ	4094	;# 
  1408   000FFF                     TOSU            equ	4095	;# 
  1409   000F77                     SSPMSK          equ	3959	;# 
  1410   000F78                     SLRCON          equ	3960	;# 
  1411   000F79                     CM2CON1         equ	3961	;# 
  1412   000F7A                     CM2CON0         equ	3962	;# 
  1413   000F7B                     CM1CON0         equ	3963	;# 
  1414   000F7C                     WPUB            equ	3964	;# 
  1415   000F7D                     IOCB            equ	3965	;# 
  1416   000F7E                     ANSEL           equ	3966	;# 
  1417   000F7F                     ANSELH          equ	3967	;# 
  1418   000F80                     PORTA           equ	3968	;# 
  1419   000F81                     PORTB           equ	3969	;# 
  1420   000F82                     PORTC           equ	3970	;# 
  1421   000F83                     PORTD           equ	3971	;# 
  1422   000F84                     PORTE           equ	3972	;# 
  1423   000F89                     LATA            equ	3977	;# 
  1424   000F8A                     LATB            equ	3978	;# 
  1425   000F8B                     LATC            equ	3979	;# 
  1426   000F8C                     LATD            equ	3980	;# 
  1427   000F8D                     LATE            equ	3981	;# 
  1428   000F92                     TRISA           equ	3986	;# 
  1429   000F92                     DDRA            equ	3986	;# 
  1430   000F93                     TRISB           equ	3987	;# 
  1431   000F93                     DDRB            equ	3987	;# 
  1432   000F94                     TRISC           equ	3988	;# 
  1433   000F94                     DDRC            equ	3988	;# 
  1434   000F95                     TRISD           equ	3989	;# 
  1435   000F95                     DDRD            equ	3989	;# 
  1436   000F96                     TRISE           equ	3990	;# 
  1437   000F96                     DDRE            equ	3990	;# 
  1438   000F9B                     OSCTUNE         equ	3995	;# 
  1439   000F9D                     PIE1            equ	3997	;# 
  1440   000F9E                     PIR1            equ	3998	;# 
  1441   000F9F                     IPR1            equ	3999	;# 
  1442   000FA0                     PIE2            equ	4000	;# 
  1443   000FA1                     PIR2            equ	4001	;# 
  1444   000FA2                     IPR2            equ	4002	;# 
  1445   000FA6                     EECON1          equ	4006	;# 
  1446   000FA7                     EECON2          equ	4007	;# 
  1447   000FA8                     EEDATA          equ	4008	;# 
  1448   000FA9                     EEADR           equ	4009	;# 
  1449   000FAA                     EEADRH          equ	4010	;# 
  1450   000FAB                     RCSTA           equ	4011	;# 
  1451   000FAB                     RCSTA1          equ	4011	;# 
  1452   000FAC                     TXSTA           equ	4012	;# 
  1453   000FAC                     TXSTA1          equ	4012	;# 
  1454   000FAD                     TXREG           equ	4013	;# 
  1455   000FAD                     TXREG1          equ	4013	;# 
  1456   000FAE                     RCREG           equ	4014	;# 
  1457   000FAE                     RCREG1          equ	4014	;# 
  1458   000FAF                     SPBRG           equ	4015	;# 
  1459   000FAF                     SPBRG1          equ	4015	;# 
  1460   000FB0                     SPBRGH          equ	4016	;# 
  1461   000FB1                     T3CON           equ	4017	;# 
  1462   000FB2                     TMR3            equ	4018	;# 
  1463   000FB2                     TMR3L           equ	4018	;# 
  1464   000FB3                     TMR3H           equ	4019	;# 
  1465   000FB4                     CVRCON2         equ	4020	;# 
  1466   000FB5                     CVRCON          equ	4021	;# 
  1467   000FB6                     ECCP1AS         equ	4022	;# 
  1468   000FB7                     PWM1CON         equ	4023	;# 
  1469   000FB8                     BAUDCON         equ	4024	;# 
  1470   000FB8                     BAUDCTL         equ	4024	;# 
  1471   000FB9                     PSTRCON         equ	4025	;# 
  1472   000FBA                     CCP2CON         equ	4026	;# 
  1473   000FBB                     CCPR2           equ	4027	;# 
  1474   000FBB                     CCPR2L          equ	4027	;# 
  1475   000FBC                     CCPR2H          equ	4028	;# 
  1476   000FBD                     CCP1CON         equ	4029	;# 
  1477   000FBE                     CCPR1           equ	4030	;# 
  1478   000FBE                     CCPR1L          equ	4030	;# 
  1479   000FBF                     CCPR1H          equ	4031	;# 
  1480   000FC0                     ADCON2          equ	4032	;# 
  1481   000FC1                     ADCON1          equ	4033	;# 
  1482   000FC2                     ADCON0          equ	4034	;# 
  1483   000FC3                     ADRES           equ	4035	;# 
  1484   000FC3                     ADRESL          equ	4035	;# 
  1485   000FC4                     ADRESH          equ	4036	;# 
  1486   000FC5                     SSPCON2         equ	4037	;# 
  1487   000FC6                     SSPCON1         equ	4038	;# 
  1488   000FC7                     SSPSTAT         equ	4039	;# 
  1489   000FC8                     SSPADD          equ	4040	;# 
  1490   000FC9                     SSPBUF          equ	4041	;# 
  1491   000FCA                     T2CON           equ	4042	;# 
  1492   000FCB                     PR2             equ	4043	;# 
  1493   000FCB                     MEMCON          equ	4043	;# 
  1494   000FCC                     TMR2            equ	4044	;# 
  1495   000FCD                     T1CON           equ	4045	;# 
  1496   000FCE                     TMR1            equ	4046	;# 
  1497   000FCE                     TMR1L           equ	4046	;# 
  1498   000FCF                     TMR1H           equ	4047	;# 
  1499   000FD0                     RCON            equ	4048	;# 
  1500   000FD1                     WDTCON          equ	4049	;# 
  1501   000FD2                     HLVDCON         equ	4050	;# 
  1502   000FD2                     LVDCON          equ	4050	;# 
  1503   000FD3                     OSCCON          equ	4051	;# 
  1504   000FD5                     T0CON           equ	4053	;# 
  1505   000FD6                     TMR0            equ	4054	;# 
  1506   000FD6                     TMR0L           equ	4054	;# 
  1507   000FD7                     TMR0H           equ	4055	;# 
  1508   000FD8                     STATUS          equ	4056	;# 
  1509   000FD9                     FSR2            equ	4057	;# 
  1510   000FD9                     FSR2L           equ	4057	;# 
  1511   000FDA                     FSR2H           equ	4058	;# 
  1512   000FDB                     PLUSW2          equ	4059	;# 
  1513   000FDC                     PREINC2         equ	4060	;# 
  1514   000FDD                     POSTDEC2        equ	4061	;# 
  1515   000FDE                     POSTINC2        equ	4062	;# 
  1516   000FDF                     INDF2           equ	4063	;# 
  1517   000FE0                     BSR             equ	4064	;# 
  1518   000FE1                     FSR1            equ	4065	;# 
  1519   000FE1                     FSR1L           equ	4065	;# 
  1520   000FE2                     FSR1H           equ	4066	;# 
  1521   000FE3                     PLUSW1          equ	4067	;# 
  1522   000FE4                     PREINC1         equ	4068	;# 
  1523   000FE5                     POSTDEC1        equ	4069	;# 
  1524   000FE6                     POSTINC1        equ	4070	;# 
  1525   000FE7                     INDF1           equ	4071	;# 
  1526   000FE8                     WREG            equ	4072	;# 
  1527   000FE9                     FSR0            equ	4073	;# 
  1528   000FE9                     FSR0L           equ	4073	;# 
  1529   000FEA                     FSR0H           equ	4074	;# 
  1530   000FEB                     PLUSW0          equ	4075	;# 
  1531   000FEC                     PREINC0         equ	4076	;# 
  1532   000FED                     POSTDEC0        equ	4077	;# 
  1533   000FEE                     POSTINC0        equ	4078	;# 
  1534   000FEF                     INDF0           equ	4079	;# 
  1535   000FF0                     INTCON3         equ	4080	;# 
  1536   000FF1                     INTCON2         equ	4081	;# 
  1537   000FF2                     INTCON          equ	4082	;# 
  1538   000FF3                     PROD            equ	4083	;# 
  1539   000FF3                     PRODL           equ	4083	;# 
  1540   000FF4                     PRODH           equ	4084	;# 
  1541   000FF5                     TABLAT          equ	4085	;# 
  1542   000FF6                     TBLPTR          equ	4086	;# 
  1543   000FF6                     TBLPTRL         equ	4086	;# 
  1544   000FF7                     TBLPTRH         equ	4087	;# 
  1545   000FF8                     TBLPTRU         equ	4088	;# 
  1546   000FF9                     PCLAT           equ	4089	;# 
  1547   000FF9                     PC              equ	4089	;# 
  1548   000FF9                     PCL             equ	4089	;# 
  1549   000FFA                     PCLATH          equ	4090	;# 
  1550   000FFB                     PCLATU          equ	4091	;# 
  1551   000FFC                     STKPTR          equ	4092	;# 
  1552   000FFD                     TOS             equ	4093	;# 
  1553   000FFD                     TOSL            equ	4093	;# 
  1554   000FFE                     TOSH            equ	4094	;# 
  1555   000FFF                     TOSU            equ	4095	;# 
  1556   000F77                     SSPMSK          equ	3959	;# 
  1557   000F78                     SLRCON          equ	3960	;# 
  1558   000F79                     CM2CON1         equ	3961	;# 
  1559   000F7A                     CM2CON0         equ	3962	;# 
  1560   000F7B                     CM1CON0         equ	3963	;# 
  1561   000F7C                     WPUB            equ	3964	;# 
  1562   000F7D                     IOCB            equ	3965	;# 
  1563   000F7E                     ANSEL           equ	3966	;# 
  1564   000F7F                     ANSELH          equ	3967	;# 
  1565   000F80                     PORTA           equ	3968	;# 
  1566   000F81                     PORTB           equ	3969	;# 
  1567   000F82                     PORTC           equ	3970	;# 
  1568   000F83                     PORTD           equ	3971	;# 
  1569   000F84                     PORTE           equ	3972	;# 
  1570   000F89                     LATA            equ	3977	;# 
  1571   000F8A                     LATB            equ	3978	;# 
  1572   000F8B                     LATC            equ	3979	;# 
  1573   000F8C                     LATD            equ	3980	;# 
  1574   000F8D                     LATE            equ	3981	;# 
  1575   000F92                     TRISA           equ	3986	;# 
  1576   000F92                     DDRA            equ	3986	;# 
  1577   000F93                     TRISB           equ	3987	;# 
  1578   000F93                     DDRB            equ	3987	;# 
  1579   000F94                     TRISC           equ	3988	;# 
  1580   000F94                     DDRC            equ	3988	;# 
  1581   000F95                     TRISD           equ	3989	;# 
  1582   000F95                     DDRD            equ	3989	;# 
  1583   000F96                     TRISE           equ	3990	;# 
  1584   000F96                     DDRE            equ	3990	;# 
  1585   000F9B                     OSCTUNE         equ	3995	;# 
  1586   000F9D                     PIE1            equ	3997	;# 
  1587   000F9E                     PIR1            equ	3998	;# 
  1588   000F9F                     IPR1            equ	3999	;# 
  1589   000FA0                     PIE2            equ	4000	;# 
  1590   000FA1                     PIR2            equ	4001	;# 
  1591   000FA2                     IPR2            equ	4002	;# 
  1592   000FA6                     EECON1          equ	4006	;# 
  1593   000FA7                     EECON2          equ	4007	;# 
  1594   000FA8                     EEDATA          equ	4008	;# 
  1595   000FA9                     EEADR           equ	4009	;# 
  1596   000FAA                     EEADRH          equ	4010	;# 
  1597   000FAB                     RCSTA           equ	4011	;# 
  1598   000FAB                     RCSTA1          equ	4011	;# 
  1599   000FAC                     TXSTA           equ	4012	;# 
  1600   000FAC                     TXSTA1          equ	4012	;# 
  1601   000FAD                     TXREG           equ	4013	;# 
  1602   000FAD                     TXREG1          equ	4013	;# 
  1603   000FAE                     RCREG           equ	4014	;# 
  1604   000FAE                     RCREG1          equ	4014	;# 
  1605   000FAF                     SPBRG           equ	4015	;# 
  1606   000FAF                     SPBRG1          equ	4015	;# 
  1607   000FB0                     SPBRGH          equ	4016	;# 
  1608   000FB1                     T3CON           equ	4017	;# 
  1609   000FB2                     TMR3            equ	4018	;# 
  1610   000FB2                     TMR3L           equ	4018	;# 
  1611   000FB3                     TMR3H           equ	4019	;# 
  1612   000FB4                     CVRCON2         equ	4020	;# 
  1613   000FB5                     CVRCON          equ	4021	;# 
  1614   000FB6                     ECCP1AS         equ	4022	;# 
  1615   000FB7                     PWM1CON         equ	4023	;# 
  1616   000FB8                     BAUDCON         equ	4024	;# 
  1617   000FB8                     BAUDCTL         equ	4024	;# 
  1618   000FB9                     PSTRCON         equ	4025	;# 
  1619   000FBA                     CCP2CON         equ	4026	;# 
  1620   000FBB                     CCPR2           equ	4027	;# 
  1621   000FBB                     CCPR2L          equ	4027	;# 
  1622   000FBC                     CCPR2H          equ	4028	;# 
  1623   000FBD                     CCP1CON         equ	4029	;# 
  1624   000FBE                     CCPR1           equ	4030	;# 
  1625   000FBE                     CCPR1L          equ	4030	;# 
  1626   000FBF                     CCPR1H          equ	4031	;# 
  1627   000FC0                     ADCON2          equ	4032	;# 
  1628   000FC1                     ADCON1          equ	4033	;# 
  1629   000FC2                     ADCON0          equ	4034	;# 
  1630   000FC3                     ADRES           equ	4035	;# 
  1631   000FC3                     ADRESL          equ	4035	;# 
  1632   000FC4                     ADRESH          equ	4036	;# 
  1633   000FC5                     SSPCON2         equ	4037	;# 
  1634   000FC6                     SSPCON1         equ	4038	;# 
  1635   000FC7                     SSPSTAT         equ	4039	;# 
  1636   000FC8                     SSPADD          equ	4040	;# 
  1637   000FC9                     SSPBUF          equ	4041	;# 
  1638   000FCA                     T2CON           equ	4042	;# 
  1639   000FCB                     PR2             equ	4043	;# 
  1640   000FCB                     MEMCON          equ	4043	;# 
  1641   000FCC                     TMR2            equ	4044	;# 
  1642   000FCD                     T1CON           equ	4045	;# 
  1643   000FCE                     TMR1            equ	4046	;# 
  1644   000FCE                     TMR1L           equ	4046	;# 
  1645   000FCF                     TMR1H           equ	4047	;# 
  1646   000FD0                     RCON            equ	4048	;# 
  1647   000FD1                     WDTCON          equ	4049	;# 
  1648   000FD2                     HLVDCON         equ	4050	;# 
  1649   000FD2                     LVDCON          equ	4050	;# 
  1650   000FD3                     OSCCON          equ	4051	;# 
  1651   000FD5                     T0CON           equ	4053	;# 
  1652   000FD6                     TMR0            equ	4054	;# 
  1653   000FD6                     TMR0L           equ	4054	;# 
  1654   000FD7                     TMR0H           equ	4055	;# 
  1655   000FD8                     STATUS          equ	4056	;# 
  1656   000FD9                     FSR2            equ	4057	;# 
  1657   000FD9                     FSR2L           equ	4057	;# 
  1658   000FDA                     FSR2H           equ	4058	;# 
  1659   000FDB                     PLUSW2          equ	4059	;# 
  1660   000FDC                     PREINC2         equ	4060	;# 
  1661   000FDD                     POSTDEC2        equ	4061	;# 
  1662   000FDE                     POSTINC2        equ	4062	;# 
  1663   000FDF                     INDF2           equ	4063	;# 
  1664   000FE0                     BSR             equ	4064	;# 
  1665   000FE1                     FSR1            equ	4065	;# 
  1666   000FE1                     FSR1L           equ	4065	;# 
  1667   000FE2                     FSR1H           equ	4066	;# 
  1668   000FE3                     PLUSW1          equ	4067	;# 
  1669   000FE4                     PREINC1         equ	4068	;# 
  1670   000FE5                     POSTDEC1        equ	4069	;# 
  1671   000FE6                     POSTINC1        equ	4070	;# 
  1672   000FE7                     INDF1           equ	4071	;# 
  1673   000FE8                     WREG            equ	4072	;# 
  1674   000FE9                     FSR0            equ	4073	;# 
  1675   000FE9                     FSR0L           equ	4073	;# 
  1676   000FEA                     FSR0H           equ	4074	;# 
  1677   000FEB                     PLUSW0          equ	4075	;# 
  1678   000FEC                     PREINC0         equ	4076	;# 
  1679   000FED                     POSTDEC0        equ	4077	;# 
  1680   000FEE                     POSTINC0        equ	4078	;# 
  1681   000FEF                     INDF0           equ	4079	;# 
  1682   000FF0                     INTCON3         equ	4080	;# 
  1683   000FF1                     INTCON2         equ	4081	;# 
  1684   000FF2                     INTCON          equ	4082	;# 
  1685   000FF3                     PROD            equ	4083	;# 
  1686   000FF3                     PRODL           equ	4083	;# 
  1687   000FF4                     PRODH           equ	4084	;# 
  1688   000FF5                     TABLAT          equ	4085	;# 
  1689   000FF6                     TBLPTR          equ	4086	;# 
  1690   000FF6                     TBLPTRL         equ	4086	;# 
  1691   000FF7                     TBLPTRH         equ	4087	;# 
  1692   000FF8                     TBLPTRU         equ	4088	;# 
  1693   000FF9                     PCLAT           equ	4089	;# 
  1694   000FF9                     PC              equ	4089	;# 
  1695   000FF9                     PCL             equ	4089	;# 
  1696   000FFA                     PCLATH          equ	4090	;# 
  1697   000FFB                     PCLATU          equ	4091	;# 
  1698   000FFC                     STKPTR          equ	4092	;# 
  1699   000FFD                     TOS             equ	4093	;# 
  1700   000FFD                     TOSL            equ	4093	;# 
  1701   000FFE                     TOSH            equ	4094	;# 
  1702   000FFF                     TOSU            equ	4095	;# 
  1703   000F77                     SSPMSK          equ	3959	;# 
  1704   000F78                     SLRCON          equ	3960	;# 
  1705   000F79                     CM2CON1         equ	3961	;# 
  1706   000F7A                     CM2CON0         equ	3962	;# 
  1707   000F7B                     CM1CON0         equ	3963	;# 
  1708   000F7C                     WPUB            equ	3964	;# 
  1709   000F7D                     IOCB            equ	3965	;# 
  1710   000F7E                     ANSEL           equ	3966	;# 
  1711   000F7F                     ANSELH          equ	3967	;# 
  1712   000F80                     PORTA           equ	3968	;# 
  1713   000F81                     PORTB           equ	3969	;# 
  1714   000F82                     PORTC           equ	3970	;# 
  1715   000F83                     PORTD           equ	3971	;# 
  1716   000F84                     PORTE           equ	3972	;# 
  1717   000F89                     LATA            equ	3977	;# 
  1718   000F8A                     LATB            equ	3978	;# 
  1719   000F8B                     LATC            equ	3979	;# 
  1720   000F8C                     LATD            equ	3980	;# 
  1721   000F8D                     LATE            equ	3981	;# 
  1722   000F92                     TRISA           equ	3986	;# 
  1723   000F92                     DDRA            equ	3986	;# 
  1724   000F93                     TRISB           equ	3987	;# 
  1725   000F93                     DDRB            equ	3987	;# 
  1726   000F94                     TRISC           equ	3988	;# 
  1727   000F94                     DDRC            equ	3988	;# 
  1728   000F95                     TRISD           equ	3989	;# 
  1729   000F95                     DDRD            equ	3989	;# 
  1730   000F96                     TRISE           equ	3990	;# 
  1731   000F96                     DDRE            equ	3990	;# 
  1732   000F9B                     OSCTUNE         equ	3995	;# 
  1733   000F9D                     PIE1            equ	3997	;# 
  1734   000F9E                     PIR1            equ	3998	;# 
  1735   000F9F                     IPR1            equ	3999	;# 
  1736   000FA0                     PIE2            equ	4000	;# 
  1737   000FA1                     PIR2            equ	4001	;# 
  1738   000FA2                     IPR2            equ	4002	;# 
  1739   000FA6                     EECON1          equ	4006	;# 
  1740   000FA7                     EECON2          equ	4007	;# 
  1741   000FA8                     EEDATA          equ	4008	;# 
  1742   000FA9                     EEADR           equ	4009	;# 
  1743   000FAA                     EEADRH          equ	4010	;# 
  1744   000FAB                     RCSTA           equ	4011	;# 
  1745   000FAB                     RCSTA1          equ	4011	;# 
  1746   000FAC                     TXSTA           equ	4012	;# 
  1747   000FAC                     TXSTA1          equ	4012	;# 
  1748   000FAD                     TXREG           equ	4013	;# 
  1749   000FAD                     TXREG1          equ	4013	;# 
  1750   000FAE                     RCREG           equ	4014	;# 
  1751   000FAE                     RCREG1          equ	4014	;# 
  1752   000FAF                     SPBRG           equ	4015	;# 
  1753   000FAF                     SPBRG1          equ	4015	;# 
  1754   000FB0                     SPBRGH          equ	4016	;# 
  1755   000FB1                     T3CON           equ	4017	;# 
  1756   000FB2                     TMR3            equ	4018	;# 
  1757   000FB2                     TMR3L           equ	4018	;# 
  1758   000FB3                     TMR3H           equ	4019	;# 
  1759   000FB4                     CVRCON2         equ	4020	;# 
  1760   000FB5                     CVRCON          equ	4021	;# 
  1761   000FB6                     ECCP1AS         equ	4022	;# 
  1762   000FB7                     PWM1CON         equ	4023	;# 
  1763   000FB8                     BAUDCON         equ	4024	;# 
  1764   000FB8                     BAUDCTL         equ	4024	;# 
  1765   000FB9                     PSTRCON         equ	4025	;# 
  1766   000FBA                     CCP2CON         equ	4026	;# 
  1767   000FBB                     CCPR2           equ	4027	;# 
  1768   000FBB                     CCPR2L          equ	4027	;# 
  1769   000FBC                     CCPR2H          equ	4028	;# 
  1770   000FBD                     CCP1CON         equ	4029	;# 
  1771   000FBE                     CCPR1           equ	4030	;# 
  1772   000FBE                     CCPR1L          equ	4030	;# 
  1773   000FBF                     CCPR1H          equ	4031	;# 
  1774   000FC0                     ADCON2          equ	4032	;# 
  1775   000FC1                     ADCON1          equ	4033	;# 
  1776   000FC2                     ADCON0          equ	4034	;# 
  1777   000FC3                     ADRES           equ	4035	;# 
  1778   000FC3                     ADRESL          equ	4035	;# 
  1779   000FC4                     ADRESH          equ	4036	;# 
  1780   000FC5                     SSPCON2         equ	4037	;# 
  1781   000FC6                     SSPCON1         equ	4038	;# 
  1782   000FC7                     SSPSTAT         equ	4039	;# 
  1783   000FC8                     SSPADD          equ	4040	;# 
  1784   000FC9                     SSPBUF          equ	4041	;# 
  1785   000FCA                     T2CON           equ	4042	;# 
  1786   000FCB                     PR2             equ	4043	;# 
  1787   000FCB                     MEMCON          equ	4043	;# 
  1788   000FCC                     TMR2            equ	4044	;# 
  1789   000FCD                     T1CON           equ	4045	;# 
  1790   000FCE                     TMR1            equ	4046	;# 
  1791   000FCE                     TMR1L           equ	4046	;# 
  1792   000FCF                     TMR1H           equ	4047	;# 
  1793   000FD0                     RCON            equ	4048	;# 
  1794   000FD1                     WDTCON          equ	4049	;# 
  1795   000FD2                     HLVDCON         equ	4050	;# 
  1796   000FD2                     LVDCON          equ	4050	;# 
  1797   000FD3                     OSCCON          equ	4051	;# 
  1798   000FD5                     T0CON           equ	4053	;# 
  1799   000FD6                     TMR0            equ	4054	;# 
  1800   000FD6                     TMR0L           equ	4054	;# 
  1801   000FD7                     TMR0H           equ	4055	;# 
  1802   000FD8                     STATUS          equ	4056	;# 
  1803   000FD9                     FSR2            equ	4057	;# 
  1804   000FD9                     FSR2L           equ	4057	;# 
  1805   000FDA                     FSR2H           equ	4058	;# 
  1806   000FDB                     PLUSW2          equ	4059	;# 
  1807   000FDC                     PREINC2         equ	4060	;# 
  1808   000FDD                     POSTDEC2        equ	4061	;# 
  1809   000FDE                     POSTINC2        equ	4062	;# 
  1810   000FDF                     INDF2           equ	4063	;# 
  1811   000FE0                     BSR             equ	4064	;# 
  1812   000FE1                     FSR1            equ	4065	;# 
  1813   000FE1                     FSR1L           equ	4065	;# 
  1814   000FE2                     FSR1H           equ	4066	;# 
  1815   000FE3                     PLUSW1          equ	4067	;# 
  1816   000FE4                     PREINC1         equ	4068	;# 
  1817   000FE5                     POSTDEC1        equ	4069	;# 
  1818   000FE6                     POSTINC1        equ	4070	;# 
  1819   000FE7                     INDF1           equ	4071	;# 
  1820   000FE8                     WREG            equ	4072	;# 
  1821   000FE9                     FSR0            equ	4073	;# 
  1822   000FE9                     FSR0L           equ	4073	;# 
  1823   000FEA                     FSR0H           equ	4074	;# 
  1824   000FEB                     PLUSW0          equ	4075	;# 
  1825   000FEC                     PREINC0         equ	4076	;# 
  1826   000FED                     POSTDEC0        equ	4077	;# 
  1827   000FEE                     POSTINC0        equ	4078	;# 
  1828   000FEF                     INDF0           equ	4079	;# 
  1829   000FF0                     INTCON3         equ	4080	;# 
  1830   000FF1                     INTCON2         equ	4081	;# 
  1831   000FF2                     INTCON          equ	4082	;# 
  1832   000FF3                     PROD            equ	4083	;# 
  1833   000FF3                     PRODL           equ	4083	;# 
  1834   000FF4                     PRODH           equ	4084	;# 
  1835   000FF5                     TABLAT          equ	4085	;# 
  1836   000FF6                     TBLPTR          equ	4086	;# 
  1837   000FF6                     TBLPTRL         equ	4086	;# 
  1838   000FF7                     TBLPTRH         equ	4087	;# 
  1839   000FF8                     TBLPTRU         equ	4088	;# 
  1840   000FF9                     PCLAT           equ	4089	;# 
  1841   000FF9                     PC              equ	4089	;# 
  1842   000FF9                     PCL             equ	4089	;# 
  1843   000FFA                     PCLATH          equ	4090	;# 
  1844   000FFB                     PCLATU          equ	4091	;# 
  1845   000FFC                     STKPTR          equ	4092	;# 
  1846   000FFD                     TOS             equ	4093	;# 
  1847   000FFD                     TOSL            equ	4093	;# 
  1848   000FFE                     TOSH            equ	4094	;# 
  1849   000FFF                     TOSU            equ	4095	;# 
  1850   000F77                     SSPMSK          equ	3959	;# 
  1851   000F78                     SLRCON          equ	3960	;# 
  1852   000F79                     CM2CON1         equ	3961	;# 
  1853   000F7A                     CM2CON0         equ	3962	;# 
  1854   000F7B                     CM1CON0         equ	3963	;# 
  1855   000F7C                     WPUB            equ	3964	;# 
  1856   000F7D                     IOCB            equ	3965	;# 
  1857   000F7E                     ANSEL           equ	3966	;# 
  1858   000F7F                     ANSELH          equ	3967	;# 
  1859   000F80                     PORTA           equ	3968	;# 
  1860   000F81                     PORTB           equ	3969	;# 
  1861   000F82                     PORTC           equ	3970	;# 
  1862   000F83                     PORTD           equ	3971	;# 
  1863   000F84                     PORTE           equ	3972	;# 
  1864   000F89                     LATA            equ	3977	;# 
  1865   000F8A                     LATB            equ	3978	;# 
  1866   000F8B                     LATC            equ	3979	;# 
  1867   000F8C                     LATD            equ	3980	;# 
  1868   000F8D                     LATE            equ	3981	;# 
  1869   000F92                     TRISA           equ	3986	;# 
  1870   000F92                     DDRA            equ	3986	;# 
  1871   000F93                     TRISB           equ	3987	;# 
  1872   000F93                     DDRB            equ	3987	;# 
  1873   000F94                     TRISC           equ	3988	;# 
  1874   000F94                     DDRC            equ	3988	;# 
  1875   000F95                     TRISD           equ	3989	;# 
  1876   000F95                     DDRD            equ	3989	;# 
  1877   000F96                     TRISE           equ	3990	;# 
  1878   000F96                     DDRE            equ	3990	;# 
  1879   000F9B                     OSCTUNE         equ	3995	;# 
  1880   000F9D                     PIE1            equ	3997	;# 
  1881   000F9E                     PIR1            equ	3998	;# 
  1882   000F9F                     IPR1            equ	3999	;# 
  1883   000FA0                     PIE2            equ	4000	;# 
  1884   000FA1                     PIR2            equ	4001	;# 
  1885   000FA2                     IPR2            equ	4002	;# 
  1886   000FA6                     EECON1          equ	4006	;# 
  1887   000FA7                     EECON2          equ	4007	;# 
  1888   000FA8                     EEDATA          equ	4008	;# 
  1889   000FA9                     EEADR           equ	4009	;# 
  1890   000FAA                     EEADRH          equ	4010	;# 
  1891   000FAB                     RCSTA           equ	4011	;# 
  1892   000FAB                     RCSTA1          equ	4011	;# 
  1893   000FAC                     TXSTA           equ	4012	;# 
  1894   000FAC                     TXSTA1          equ	4012	;# 
  1895   000FAD                     TXREG           equ	4013	;# 
  1896   000FAD                     TXREG1          equ	4013	;# 
  1897   000FAE                     RCREG           equ	4014	;# 
  1898   000FAE                     RCREG1          equ	4014	;# 
  1899   000FAF                     SPBRG           equ	4015	;# 
  1900   000FAF                     SPBRG1          equ	4015	;# 
  1901   000FB0                     SPBRGH          equ	4016	;# 
  1902   000FB1                     T3CON           equ	4017	;# 
  1903   000FB2                     TMR3            equ	4018	;# 
  1904   000FB2                     TMR3L           equ	4018	;# 
  1905   000FB3                     TMR3H           equ	4019	;# 
  1906   000FB4                     CVRCON2         equ	4020	;# 
  1907   000FB5                     CVRCON          equ	4021	;# 
  1908   000FB6                     ECCP1AS         equ	4022	;# 
  1909   000FB7                     PWM1CON         equ	4023	;# 
  1910   000FB8                     BAUDCON         equ	4024	;# 
  1911   000FB8                     BAUDCTL         equ	4024	;# 
  1912   000FB9                     PSTRCON         equ	4025	;# 
  1913   000FBA                     CCP2CON         equ	4026	;# 
  1914   000FBB                     CCPR2           equ	4027	;# 
  1915   000FBB                     CCPR2L          equ	4027	;# 
  1916   000FBC                     CCPR2H          equ	4028	;# 
  1917   000FBD                     CCP1CON         equ	4029	;# 
  1918   000FBE                     CCPR1           equ	4030	;# 
  1919   000FBE                     CCPR1L          equ	4030	;# 
  1920   000FBF                     CCPR1H          equ	4031	;# 
  1921   000FC0                     ADCON2          equ	4032	;# 
  1922   000FC1                     ADCON1          equ	4033	;# 
  1923   000FC2                     ADCON0          equ	4034	;# 
  1924   000FC3                     ADRES           equ	4035	;# 
  1925   000FC3                     ADRESL          equ	4035	;# 
  1926   000FC4                     ADRESH          equ	4036	;# 
  1927   000FC5                     SSPCON2         equ	4037	;# 
  1928   000FC6                     SSPCON1         equ	4038	;# 
  1929   000FC7                     SSPSTAT         equ	4039	;# 
  1930   000FC8                     SSPADD          equ	4040	;# 
  1931   000FC9                     SSPBUF          equ	4041	;# 
  1932   000FCA                     T2CON           equ	4042	;# 
  1933   000FCB                     PR2             equ	4043	;# 
  1934   000FCB                     MEMCON          equ	4043	;# 
  1935   000FCC                     TMR2            equ	4044	;# 
  1936   000FCD                     T1CON           equ	4045	;# 
  1937   000FCE                     TMR1            equ	4046	;# 
  1938   000FCE                     TMR1L           equ	4046	;# 
  1939   000FCF                     TMR1H           equ	4047	;# 
  1940   000FD0                     RCON            equ	4048	;# 
  1941   000FD1                     WDTCON          equ	4049	;# 
  1942   000FD2                     HLVDCON         equ	4050	;# 
  1943   000FD2                     LVDCON          equ	4050	;# 
  1944   000FD3                     OSCCON          equ	4051	;# 
  1945   000FD5                     T0CON           equ	4053	;# 
  1946   000FD6                     TMR0            equ	4054	;# 
  1947   000FD6                     TMR0L           equ	4054	;# 
  1948   000FD7                     TMR0H           equ	4055	;# 
  1949   000FD8                     STATUS          equ	4056	;# 
  1950   000FD9                     FSR2            equ	4057	;# 
  1951   000FD9                     FSR2L           equ	4057	;# 
  1952   000FDA                     FSR2H           equ	4058	;# 
  1953   000FDB                     PLUSW2          equ	4059	;# 
  1954   000FDC                     PREINC2         equ	4060	;# 
  1955   000FDD                     POSTDEC2        equ	4061	;# 
  1956   000FDE                     POSTINC2        equ	4062	;# 
  1957   000FDF                     INDF2           equ	4063	;# 
  1958   000FE0                     BSR             equ	4064	;# 
  1959   000FE1                     FSR1            equ	4065	;# 
  1960   000FE1                     FSR1L           equ	4065	;# 
  1961   000FE2                     FSR1H           equ	4066	;# 
  1962   000FE3                     PLUSW1          equ	4067	;# 
  1963   000FE4                     PREINC1         equ	4068	;# 
  1964   000FE5                     POSTDEC1        equ	4069	;# 
  1965   000FE6                     POSTINC1        equ	4070	;# 
  1966   000FE7                     INDF1           equ	4071	;# 
  1967   000FE8                     WREG            equ	4072	;# 
  1968   000FE9                     FSR0            equ	4073	;# 
  1969   000FE9                     FSR0L           equ	4073	;# 
  1970   000FEA                     FSR0H           equ	4074	;# 
  1971   000FEB                     PLUSW0          equ	4075	;# 
  1972   000FEC                     PREINC0         equ	4076	;# 
  1973   000FED                     POSTDEC0        equ	4077	;# 
  1974   000FEE                     POSTINC0        equ	4078	;# 
  1975   000FEF                     INDF0           equ	4079	;# 
  1976   000FF0                     INTCON3         equ	4080	;# 
  1977   000FF1                     INTCON2         equ	4081	;# 
  1978   000FF2                     INTCON          equ	4082	;# 
  1979   000FF3                     PROD            equ	4083	;# 
  1980   000FF3                     PRODL           equ	4083	;# 
  1981   000FF4                     PRODH           equ	4084	;# 
  1982   000FF5                     TABLAT          equ	4085	;# 
  1983   000FF6                     TBLPTR          equ	4086	;# 
  1984   000FF6                     TBLPTRL         equ	4086	;# 
  1985   000FF7                     TBLPTRH         equ	4087	;# 
  1986   000FF8                     TBLPTRU         equ	4088	;# 
  1987   000FF9                     PCLAT           equ	4089	;# 
  1988   000FF9                     PC              equ	4089	;# 
  1989   000FF9                     PCL             equ	4089	;# 
  1990   000FFA                     PCLATH          equ	4090	;# 
  1991   000FFB                     PCLATU          equ	4091	;# 
  1992   000FFC                     STKPTR          equ	4092	;# 
  1993   000FFD                     TOS             equ	4093	;# 
  1994   000FFD                     TOSL            equ	4093	;# 
  1995   000FFE                     TOSH            equ	4094	;# 
  1996   000FFF                     TOSU            equ	4095	;# 
  1997   000F77                     SSPMSK          equ	3959	;# 
  1998   000F78                     SLRCON          equ	3960	;# 
  1999   000F79                     CM2CON1         equ	3961	;# 
  2000   000F7A                     CM2CON0         equ	3962	;# 
  2001   000F7B                     CM1CON0         equ	3963	;# 
  2002   000F7C                     WPUB            equ	3964	;# 
  2003   000F7D                     IOCB            equ	3965	;# 
  2004   000F7E                     ANSEL           equ	3966	;# 
  2005   000F7F                     ANSELH          equ	3967	;# 
  2006   000F80                     PORTA           equ	3968	;# 
  2007   000F81                     PORTB           equ	3969	;# 
  2008   000F82                     PORTC           equ	3970	;# 
  2009   000F83                     PORTD           equ	3971	;# 
  2010   000F84                     PORTE           equ	3972	;# 
  2011   000F89                     LATA            equ	3977	;# 
  2012   000F8A                     LATB            equ	3978	;# 
  2013   000F8B                     LATC            equ	3979	;# 
  2014   000F8C                     LATD            equ	3980	;# 
  2015   000F8D                     LATE            equ	3981	;# 
  2016   000F92                     TRISA           equ	3986	;# 
  2017   000F92                     DDRA            equ	3986	;# 
  2018   000F93                     TRISB           equ	3987	;# 
  2019   000F93                     DDRB            equ	3987	;# 
  2020   000F94                     TRISC           equ	3988	;# 
  2021   000F94                     DDRC            equ	3988	;# 
  2022   000F95                     TRISD           equ	3989	;# 
  2023   000F95                     DDRD            equ	3989	;# 
  2024   000F96                     TRISE           equ	3990	;# 
  2025   000F96                     DDRE            equ	3990	;# 
  2026   000F9B                     OSCTUNE         equ	3995	;# 
  2027   000F9D                     PIE1            equ	3997	;# 
  2028   000F9E                     PIR1            equ	3998	;# 
  2029   000F9F                     IPR1            equ	3999	;# 
  2030   000FA0                     PIE2            equ	4000	;# 
  2031   000FA1                     PIR2            equ	4001	;# 
  2032   000FA2                     IPR2            equ	4002	;# 
  2033   000FA6                     EECON1          equ	4006	;# 
  2034   000FA7                     EECON2          equ	4007	;# 
  2035   000FA8                     EEDATA          equ	4008	;# 
  2036   000FA9                     EEADR           equ	4009	;# 
  2037   000FAA                     EEADRH          equ	4010	;# 
  2038   000FAB                     RCSTA           equ	4011	;# 
  2039   000FAB                     RCSTA1          equ	4011	;# 
  2040   000FAC                     TXSTA           equ	4012	;# 
  2041   000FAC                     TXSTA1          equ	4012	;# 
  2042   000FAD                     TXREG           equ	4013	;# 
  2043   000FAD                     TXREG1          equ	4013	;# 
  2044   000FAE                     RCREG           equ	4014	;# 
  2045   000FAE                     RCREG1          equ	4014	;# 
  2046   000FAF                     SPBRG           equ	4015	;# 
  2047   000FAF                     SPBRG1          equ	4015	;# 
  2048   000FB0                     SPBRGH          equ	4016	;# 
  2049   000FB1                     T3CON           equ	4017	;# 
  2050   000FB2                     TMR3            equ	4018	;# 
  2051   000FB2                     TMR3L           equ	4018	;# 
  2052   000FB3                     TMR3H           equ	4019	;# 
  2053   000FB4                     CVRCON2         equ	4020	;# 
  2054   000FB5                     CVRCON          equ	4021	;# 
  2055   000FB6                     ECCP1AS         equ	4022	;# 
  2056   000FB7                     PWM1CON         equ	4023	;# 
  2057   000FB8                     BAUDCON         equ	4024	;# 
  2058   000FB8                     BAUDCTL         equ	4024	;# 
  2059   000FB9                     PSTRCON         equ	4025	;# 
  2060   000FBA                     CCP2CON         equ	4026	;# 
  2061   000FBB                     CCPR2           equ	4027	;# 
  2062   000FBB                     CCPR2L          equ	4027	;# 
  2063   000FBC                     CCPR2H          equ	4028	;# 
  2064   000FBD                     CCP1CON         equ	4029	;# 
  2065   000FBE                     CCPR1           equ	4030	;# 
  2066   000FBE                     CCPR1L          equ	4030	;# 
  2067   000FBF                     CCPR1H          equ	4031	;# 
  2068   000FC0                     ADCON2          equ	4032	;# 
  2069   000FC1                     ADCON1          equ	4033	;# 
  2070   000FC2                     ADCON0          equ	4034	;# 
  2071   000FC3                     ADRES           equ	4035	;# 
  2072   000FC3                     ADRESL          equ	4035	;# 
  2073   000FC4                     ADRESH          equ	4036	;# 
  2074   000FC5                     SSPCON2         equ	4037	;# 
  2075   000FC6                     SSPCON1         equ	4038	;# 
  2076   000FC7                     SSPSTAT         equ	4039	;# 
  2077   000FC8                     SSPADD          equ	4040	;# 
  2078   000FC9                     SSPBUF          equ	4041	;# 
  2079   000FCA                     T2CON           equ	4042	;# 
  2080   000FCB                     PR2             equ	4043	;# 
  2081   000FCB                     MEMCON          equ	4043	;# 
  2082   000FCC                     TMR2            equ	4044	;# 
  2083   000FCD                     T1CON           equ	4045	;# 
  2084   000FCE                     TMR1            equ	4046	;# 
  2085   000FCE                     TMR1L           equ	4046	;# 
  2086   000FCF                     TMR1H           equ	4047	;# 
  2087   000FD0                     RCON            equ	4048	;# 
  2088   000FD1                     WDTCON          equ	4049	;# 
  2089   000FD2                     HLVDCON         equ	4050	;# 
  2090   000FD2                     LVDCON          equ	4050	;# 
  2091   000FD3                     OSCCON          equ	4051	;# 
  2092   000FD5                     T0CON           equ	4053	;# 
  2093   000FD6                     TMR0            equ	4054	;# 
  2094   000FD6                     TMR0L           equ	4054	;# 
  2095   000FD7                     TMR0H           equ	4055	;# 
  2096   000FD8                     STATUS          equ	4056	;# 
  2097   000FD9                     FSR2            equ	4057	;# 
  2098   000FD9                     FSR2L           equ	4057	;# 
  2099   000FDA                     FSR2H           equ	4058	;# 
  2100   000FDB                     PLUSW2          equ	4059	;# 
  2101   000FDC                     PREINC2         equ	4060	;# 
  2102   000FDD                     POSTDEC2        equ	4061	;# 
  2103   000FDE                     POSTINC2        equ	4062	;# 
  2104   000FDF                     INDF2           equ	4063	;# 
  2105   000FE0                     BSR             equ	4064	;# 
  2106   000FE1                     FSR1            equ	4065	;# 
  2107   000FE1                     FSR1L           equ	4065	;# 
  2108   000FE2                     FSR1H           equ	4066	;# 
  2109   000FE3                     PLUSW1          equ	4067	;# 
  2110   000FE4                     PREINC1         equ	4068	;# 
  2111   000FE5                     POSTDEC1        equ	4069	;# 
  2112   000FE6                     POSTINC1        equ	4070	;# 
  2113   000FE7                     INDF1           equ	4071	;# 
  2114   000FE8                     WREG            equ	4072	;# 
  2115   000FE9                     FSR0            equ	4073	;# 
  2116   000FE9                     FSR0L           equ	4073	;# 
  2117   000FEA                     FSR0H           equ	4074	;# 
  2118   000FEB                     PLUSW0          equ	4075	;# 
  2119   000FEC                     PREINC0         equ	4076	;# 
  2120   000FED                     POSTDEC0        equ	4077	;# 
  2121   000FEE                     POSTINC0        equ	4078	;# 
  2122   000FEF                     INDF0           equ	4079	;# 
  2123   000FF0                     INTCON3         equ	4080	;# 
  2124   000FF1                     INTCON2         equ	4081	;# 
  2125   000FF2                     INTCON          equ	4082	;# 
  2126   000FF3                     PROD            equ	4083	;# 
  2127   000FF3                     PRODL           equ	4083	;# 
  2128   000FF4                     PRODH           equ	4084	;# 
  2129   000FF5                     TABLAT          equ	4085	;# 
  2130   000FF6                     TBLPTR          equ	4086	;# 
  2131   000FF6                     TBLPTRL         equ	4086	;# 
  2132   000FF7                     TBLPTRH         equ	4087	;# 
  2133   000FF8                     TBLPTRU         equ	4088	;# 
  2134   000FF9                     PCLAT           equ	4089	;# 
  2135   000FF9                     PC              equ	4089	;# 
  2136   000FF9                     PCL             equ	4089	;# 
  2137   000FFA                     PCLATH          equ	4090	;# 
  2138   000FFB                     PCLATU          equ	4091	;# 
  2139   000FFC                     STKPTR          equ	4092	;# 
  2140   000FFD                     TOS             equ	4093	;# 
  2141   000FFD                     TOSL            equ	4093	;# 
  2142   000FFE                     TOSH            equ	4094	;# 
  2143   000FFF                     TOSU            equ	4095	;# 
  2144   000F77                     SSPMSK          equ	3959	;# 
  2145   000F78                     SLRCON          equ	3960	;# 
  2146   000F79                     CM2CON1         equ	3961	;# 
  2147   000F7A                     CM2CON0         equ	3962	;# 
  2148   000F7B                     CM1CON0         equ	3963	;# 
  2149   000F7C                     WPUB            equ	3964	;# 
  2150   000F7D                     IOCB            equ	3965	;# 
  2151   000F7E                     ANSEL           equ	3966	;# 
  2152   000F7F                     ANSELH          equ	3967	;# 
  2153   000F80                     PORTA           equ	3968	;# 
  2154   000F81                     PORTB           equ	3969	;# 
  2155   000F82                     PORTC           equ	3970	;# 
  2156   000F83                     PORTD           equ	3971	;# 
  2157   000F84                     PORTE           equ	3972	;# 
  2158   000F89                     LATA            equ	3977	;# 
  2159   000F8A                     LATB            equ	3978	;# 
  2160   000F8B                     LATC            equ	3979	;# 
  2161   000F8C                     LATD            equ	3980	;# 
  2162   000F8D                     LATE            equ	3981	;# 
  2163   000F92                     TRISA           equ	3986	;# 
  2164   000F92                     DDRA            equ	3986	;# 
  2165   000F93                     TRISB           equ	3987	;# 
  2166   000F93                     DDRB            equ	3987	;# 
  2167   000F94                     TRISC           equ	3988	;# 
  2168   000F94                     DDRC            equ	3988	;# 
  2169   000F95                     TRISD           equ	3989	;# 
  2170   000F95                     DDRD            equ	3989	;# 
  2171   000F96                     TRISE           equ	3990	;# 
  2172   000F96                     DDRE            equ	3990	;# 
  2173   000F9B                     OSCTUNE         equ	3995	;# 
  2174   000F9D                     PIE1            equ	3997	;# 
  2175   000F9E                     PIR1            equ	3998	;# 
  2176   000F9F                     IPR1            equ	3999	;# 
  2177   000FA0                     PIE2            equ	4000	;# 
  2178   000FA1                     PIR2            equ	4001	;# 
  2179   000FA2                     IPR2            equ	4002	;# 
  2180   000FA6                     EECON1          equ	4006	;# 
  2181   000FA7                     EECON2          equ	4007	;# 
  2182   000FA8                     EEDATA          equ	4008	;# 
  2183   000FA9                     EEADR           equ	4009	;# 
  2184   000FAA                     EEADRH          equ	4010	;# 
  2185   000FAB                     RCSTA           equ	4011	;# 
  2186   000FAB                     RCSTA1          equ	4011	;# 
  2187   000FAC                     TXSTA           equ	4012	;# 
  2188   000FAC                     TXSTA1          equ	4012	;# 
  2189   000FAD                     TXREG           equ	4013	;# 
  2190   000FAD                     TXREG1          equ	4013	;# 
  2191   000FAE                     RCREG           equ	4014	;# 
  2192   000FAE                     RCREG1          equ	4014	;# 
  2193   000FAF                     SPBRG           equ	4015	;# 
  2194   000FAF                     SPBRG1          equ	4015	;# 
  2195   000FB0                     SPBRGH          equ	4016	;# 
  2196   000FB1                     T3CON           equ	4017	;# 
  2197   000FB2                     TMR3            equ	4018	;# 
  2198   000FB2                     TMR3L           equ	4018	;# 
  2199   000FB3                     TMR3H           equ	4019	;# 
  2200   000FB4                     CVRCON2         equ	4020	;# 
  2201   000FB5                     CVRCON          equ	4021	;# 
  2202   000FB6                     ECCP1AS         equ	4022	;# 
  2203   000FB7                     PWM1CON         equ	4023	;# 
  2204   000FB8                     BAUDCON         equ	4024	;# 
  2205   000FB8                     BAUDCTL         equ	4024	;# 
  2206   000FB9                     PSTRCON         equ	4025	;# 
  2207   000FBA                     CCP2CON         equ	4026	;# 
  2208   000FBB                     CCPR2           equ	4027	;# 
  2209   000FBB                     CCPR2L          equ	4027	;# 
  2210   000FBC                     CCPR2H          equ	4028	;# 
  2211   000FBD                     CCP1CON         equ	4029	;# 
  2212   000FBE                     CCPR1           equ	4030	;# 
  2213   000FBE                     CCPR1L          equ	4030	;# 
  2214   000FBF                     CCPR1H          equ	4031	;# 
  2215   000FC0                     ADCON2          equ	4032	;# 
  2216   000FC1                     ADCON1          equ	4033	;# 
  2217   000FC2                     ADCON0          equ	4034	;# 
  2218   000FC3                     ADRES           equ	4035	;# 
  2219   000FC3                     ADRESL          equ	4035	;# 
  2220   000FC4                     ADRESH          equ	4036	;# 
  2221   000FC5                     SSPCON2         equ	4037	;# 
  2222   000FC6                     SSPCON1         equ	4038	;# 
  2223   000FC7                     SSPSTAT         equ	4039	;# 
  2224   000FC8                     SSPADD          equ	4040	;# 
  2225   000FC9                     SSPBUF          equ	4041	;# 
  2226   000FCA                     T2CON           equ	4042	;# 
  2227   000FCB                     PR2             equ	4043	;# 
  2228   000FCB                     MEMCON          equ	4043	;# 
  2229   000FCC                     TMR2            equ	4044	;# 
  2230   000FCD                     T1CON           equ	4045	;# 
  2231   000FCE                     TMR1            equ	4046	;# 
  2232   000FCE                     TMR1L           equ	4046	;# 
  2233   000FCF                     TMR1H           equ	4047	;# 
  2234   000FD0                     RCON            equ	4048	;# 
  2235   000FD1                     WDTCON          equ	4049	;# 
  2236   000FD2                     HLVDCON         equ	4050	;# 
  2237   000FD2                     LVDCON          equ	4050	;# 
  2238   000FD3                     OSCCON          equ	4051	;# 
  2239   000FD5                     T0CON           equ	4053	;# 
  2240   000FD6                     TMR0            equ	4054	;# 
  2241   000FD6                     TMR0L           equ	4054	;# 
  2242   000FD7                     TMR0H           equ	4055	;# 
  2243   000FD8                     STATUS          equ	4056	;# 
  2244   000FD9                     FSR2            equ	4057	;# 
  2245   000FD9                     FSR2L           equ	4057	;# 
  2246   000FDA                     FSR2H           equ	4058	;# 
  2247   000FDB                     PLUSW2          equ	4059	;# 
  2248   000FDC                     PREINC2         equ	4060	;# 
  2249   000FDD                     POSTDEC2        equ	4061	;# 
  2250   000FDE                     POSTINC2        equ	4062	;# 
  2251   000FDF                     INDF2           equ	4063	;# 
  2252   000FE0                     BSR             equ	4064	;# 
  2253   000FE1                     FSR1            equ	4065	;# 
  2254   000FE1                     FSR1L           equ	4065	;# 
  2255   000FE2                     FSR1H           equ	4066	;# 
  2256   000FE3                     PLUSW1          equ	4067	;# 
  2257   000FE4                     PREINC1         equ	4068	;# 
  2258   000FE5                     POSTDEC1        equ	4069	;# 
  2259   000FE6                     POSTINC1        equ	4070	;# 
  2260   000FE7                     INDF1           equ	4071	;# 
  2261   000FE8                     WREG            equ	4072	;# 
  2262   000FE9                     FSR0            equ	4073	;# 
  2263   000FE9                     FSR0L           equ	4073	;# 
  2264   000FEA                     FSR0H           equ	4074	;# 
  2265   000FEB                     PLUSW0          equ	4075	;# 
  2266   000FEC                     PREINC0         equ	4076	;# 
  2267   000FED                     POSTDEC0        equ	4077	;# 
  2268   000FEE                     POSTINC0        equ	4078	;# 
  2269   000FEF                     INDF0           equ	4079	;# 
  2270   000FF0                     INTCON3         equ	4080	;# 
  2271   000FF1                     INTCON2         equ	4081	;# 
  2272   000FF2                     INTCON          equ	4082	;# 
  2273   000FF3                     PROD            equ	4083	;# 
  2274   000FF3                     PRODL           equ	4083	;# 
  2275   000FF4                     PRODH           equ	4084	;# 
  2276   000FF5                     TABLAT          equ	4085	;# 
  2277   000FF6                     TBLPTR          equ	4086	;# 
  2278   000FF6                     TBLPTRL         equ	4086	;# 
  2279   000FF7                     TBLPTRH         equ	4087	;# 
  2280   000FF8                     TBLPTRU         equ	4088	;# 
  2281   000FF9                     PCLAT           equ	4089	;# 
  2282   000FF9                     PC              equ	4089	;# 
  2283   000FF9                     PCL             equ	4089	;# 
  2284   000FFA                     PCLATH          equ	4090	;# 
  2285   000FFB                     PCLATU          equ	4091	;# 
  2286   000FFC                     STKPTR          equ	4092	;# 
  2287   000FFD                     TOS             equ	4093	;# 
  2288   000FFD                     TOSL            equ	4093	;# 
  2289   000FFE                     TOSH            equ	4094	;# 
  2290   000FFF                     TOSU            equ	4095	;# 
  2291   000F77                     SSPMSK          equ	3959	;# 
  2292   000F78                     SLRCON          equ	3960	;# 
  2293   000F79                     CM2CON1         equ	3961	;# 
  2294   000F7A                     CM2CON0         equ	3962	;# 
  2295   000F7B                     CM1CON0         equ	3963	;# 
  2296   000F7C                     WPUB            equ	3964	;# 
  2297   000F7D                     IOCB            equ	3965	;# 
  2298   000F7E                     ANSEL           equ	3966	;# 
  2299   000F7F                     ANSELH          equ	3967	;# 
  2300   000F80                     PORTA           equ	3968	;# 
  2301   000F81                     PORTB           equ	3969	;# 
  2302   000F82                     PORTC           equ	3970	;# 
  2303   000F83                     PORTD           equ	3971	;# 
  2304   000F84                     PORTE           equ	3972	;# 
  2305   000F89                     LATA            equ	3977	;# 
  2306   000F8A                     LATB            equ	3978	;# 
  2307   000F8B                     LATC            equ	3979	;# 
  2308   000F8C                     LATD            equ	3980	;# 
  2309   000F8D                     LATE            equ	3981	;# 
  2310   000F92                     TRISA           equ	3986	;# 
  2311   000F92                     DDRA            equ	3986	;# 
  2312   000F93                     TRISB           equ	3987	;# 
  2313   000F93                     DDRB            equ	3987	;# 
  2314   000F94                     TRISC           equ	3988	;# 
  2315   000F94                     DDRC            equ	3988	;# 
  2316   000F95                     TRISD           equ	3989	;# 
  2317   000F95                     DDRD            equ	3989	;# 
  2318   000F96                     TRISE           equ	3990	;# 
  2319   000F96                     DDRE            equ	3990	;# 
  2320   000F9B                     OSCTUNE         equ	3995	;# 
  2321   000F9D                     PIE1            equ	3997	;# 
  2322   000F9E                     PIR1            equ	3998	;# 
  2323   000F9F                     IPR1            equ	3999	;# 
  2324   000FA0                     PIE2            equ	4000	;# 
  2325   000FA1                     PIR2            equ	4001	;# 
  2326   000FA2                     IPR2            equ	4002	;# 
  2327   000FA6                     EECON1          equ	4006	;# 
  2328   000FA7                     EECON2          equ	4007	;# 
  2329   000FA8                     EEDATA          equ	4008	;# 
  2330   000FA9                     EEADR           equ	4009	;# 
  2331   000FAA                     EEADRH          equ	4010	;# 
  2332   000FAB                     RCSTA           equ	4011	;# 
  2333   000FAB                     RCSTA1          equ	4011	;# 
  2334   000FAC                     TXSTA           equ	4012	;# 
  2335   000FAC                     TXSTA1          equ	4012	;# 
  2336   000FAD                     TXREG           equ	4013	;# 
  2337   000FAD                     TXREG1          equ	4013	;# 
  2338   000FAE                     RCREG           equ	4014	;# 
  2339   000FAE                     RCREG1          equ	4014	;# 
  2340   000FAF                     SPBRG           equ	4015	;# 
  2341   000FAF                     SPBRG1          equ	4015	;# 
  2342   000FB0                     SPBRGH          equ	4016	;# 
  2343   000FB1                     T3CON           equ	4017	;# 
  2344   000FB2                     TMR3            equ	4018	;# 
  2345   000FB2                     TMR3L           equ	4018	;# 
  2346   000FB3                     TMR3H           equ	4019	;# 
  2347   000FB4                     CVRCON2         equ	4020	;# 
  2348   000FB5                     CVRCON          equ	4021	;# 
  2349   000FB6                     ECCP1AS         equ	4022	;# 
  2350   000FB7                     PWM1CON         equ	4023	;# 
  2351   000FB8                     BAUDCON         equ	4024	;# 
  2352   000FB8                     BAUDCTL         equ	4024	;# 
  2353   000FB9                     PSTRCON         equ	4025	;# 
  2354   000FBA                     CCP2CON         equ	4026	;# 
  2355   000FBB                     CCPR2           equ	4027	;# 
  2356   000FBB                     CCPR2L          equ	4027	;# 
  2357   000FBC                     CCPR2H          equ	4028	;# 
  2358   000FBD                     CCP1CON         equ	4029	;# 
  2359   000FBE                     CCPR1           equ	4030	;# 
  2360   000FBE                     CCPR1L          equ	4030	;# 
  2361   000FBF                     CCPR1H          equ	4031	;# 
  2362   000FC0                     ADCON2          equ	4032	;# 
  2363   000FC1                     ADCON1          equ	4033	;# 
  2364   000FC2                     ADCON0          equ	4034	;# 
  2365   000FC3                     ADRES           equ	4035	;# 
  2366   000FC3                     ADRESL          equ	4035	;# 
  2367   000FC4                     ADRESH          equ	4036	;# 
  2368   000FC5                     SSPCON2         equ	4037	;# 
  2369   000FC6                     SSPCON1         equ	4038	;# 
  2370   000FC7                     SSPSTAT         equ	4039	;# 
  2371   000FC8                     SSPADD          equ	4040	;# 
  2372   000FC9                     SSPBUF          equ	4041	;# 
  2373   000FCA                     T2CON           equ	4042	;# 
  2374   000FCB                     PR2             equ	4043	;# 
  2375   000FCB                     MEMCON          equ	4043	;# 
  2376   000FCC                     TMR2            equ	4044	;# 
  2377   000FCD                     T1CON           equ	4045	;# 
  2378   000FCE                     TMR1            equ	4046	;# 
  2379   000FCE                     TMR1L           equ	4046	;# 
  2380   000FCF                     TMR1H           equ	4047	;# 
  2381   000FD0                     RCON            equ	4048	;# 
  2382   000FD1                     WDTCON          equ	4049	;# 
  2383   000FD2                     HLVDCON         equ	4050	;# 
  2384   000FD2                     LVDCON          equ	4050	;# 
  2385   000FD3                     OSCCON          equ	4051	;# 
  2386   000FD5                     T0CON           equ	4053	;# 
  2387   000FD6                     TMR0            equ	4054	;# 
  2388   000FD6                     TMR0L           equ	4054	;# 
  2389   000FD7                     TMR0H           equ	4055	;# 
  2390   000FD8                     STATUS          equ	4056	;# 
  2391   000FD9                     FSR2            equ	4057	;# 
  2392   000FD9                     FSR2L           equ	4057	;# 
  2393   000FDA                     FSR2H           equ	4058	;# 
  2394   000FDB                     PLUSW2          equ	4059	;# 
  2395   000FDC                     PREINC2         equ	4060	;# 
  2396   000FDD                     POSTDEC2        equ	4061	;# 
  2397   000FDE                     POSTINC2        equ	4062	;# 
  2398   000FDF                     INDF2           equ	4063	;# 
  2399   000FE0                     BSR             equ	4064	;# 
  2400   000FE1                     FSR1            equ	4065	;# 
  2401   000FE1                     FSR1L           equ	4065	;# 
  2402   000FE2                     FSR1H           equ	4066	;# 
  2403   000FE3                     PLUSW1          equ	4067	;# 
  2404   000FE4                     PREINC1         equ	4068	;# 
  2405   000FE5                     POSTDEC1        equ	4069	;# 
  2406   000FE6                     POSTINC1        equ	4070	;# 
  2407   000FE7                     INDF1           equ	4071	;# 
  2408   000FE8                     WREG            equ	4072	;# 
  2409   000FE9                     FSR0            equ	4073	;# 
  2410   000FE9                     FSR0L           equ	4073	;# 
  2411   000FEA                     FSR0H           equ	4074	;# 
  2412   000FEB                     PLUSW0          equ	4075	;# 
  2413   000FEC                     PREINC0         equ	4076	;# 
  2414   000FED                     POSTDEC0        equ	4077	;# 
  2415   000FEE                     POSTINC0        equ	4078	;# 
  2416   000FEF                     INDF0           equ	4079	;# 
  2417   000FF0                     INTCON3         equ	4080	;# 
  2418   000FF1                     INTCON2         equ	4081	;# 
  2419   000FF2                     INTCON          equ	4082	;# 
  2420   000FF3                     PROD            equ	4083	;# 
  2421   000FF3                     PRODL           equ	4083	;# 
  2422   000FF4                     PRODH           equ	4084	;# 
  2423   000FF5                     TABLAT          equ	4085	;# 
  2424   000FF6                     TBLPTR          equ	4086	;# 
  2425   000FF6                     TBLPTRL         equ	4086	;# 
  2426   000FF7                     TBLPTRH         equ	4087	;# 
  2427   000FF8                     TBLPTRU         equ	4088	;# 
  2428   000FF9                     PCLAT           equ	4089	;# 
  2429   000FF9                     PC              equ	4089	;# 
  2430   000FF9                     PCL             equ	4089	;# 
  2431   000FFA                     PCLATH          equ	4090	;# 
  2432   000FFB                     PCLATU          equ	4091	;# 
  2433   000FFC                     STKPTR          equ	4092	;# 
  2434   000FFD                     TOS             equ	4093	;# 
  2435   000FFD                     TOSL            equ	4093	;# 
  2436   000FFE                     TOSH            equ	4094	;# 
  2437   000FFF                     TOSU            equ	4095	;# 
  2438   000F77                     SSPMSK          equ	3959	;# 
  2439   000F78                     SLRCON          equ	3960	;# 
  2440   000F79                     CM2CON1         equ	3961	;# 
  2441   000F7A                     CM2CON0         equ	3962	;# 
  2442   000F7B                     CM1CON0         equ	3963	;# 
  2443   000F7C                     WPUB            equ	3964	;# 
  2444   000F7D                     IOCB            equ	3965	;# 
  2445   000F7E                     ANSEL           equ	3966	;# 
  2446   000F7F                     ANSELH          equ	3967	;# 
  2447   000F80                     PORTA           equ	3968	;# 
  2448   000F81                     PORTB           equ	3969	;# 
  2449   000F82                     PORTC           equ	3970	;# 
  2450   000F83                     PORTD           equ	3971	;# 
  2451   000F84                     PORTE           equ	3972	;# 
  2452   000F89                     LATA            equ	3977	;# 
  2453   000F8A                     LATB            equ	3978	;# 
  2454   000F8B                     LATC            equ	3979	;# 
  2455   000F8C                     LATD            equ	3980	;# 
  2456   000F8D                     LATE            equ	3981	;# 
  2457   000F92                     TRISA           equ	3986	;# 
  2458   000F92                     DDRA            equ	3986	;# 
  2459   000F93                     TRISB           equ	3987	;# 
  2460   000F93                     DDRB            equ	3987	;# 
  2461   000F94                     TRISC           equ	3988	;# 
  2462   000F94                     DDRC            equ	3988	;# 
  2463   000F95                     TRISD           equ	3989	;# 
  2464   000F95                     DDRD            equ	3989	;# 
  2465   000F96                     TRISE           equ	3990	;# 
  2466   000F96                     DDRE            equ	3990	;# 
  2467   000F9B                     OSCTUNE         equ	3995	;# 
  2468   000F9D                     PIE1            equ	3997	;# 
  2469   000F9E                     PIR1            equ	3998	;# 
  2470   000F9F                     IPR1            equ	3999	;# 
  2471   000FA0                     PIE2            equ	4000	;# 
  2472   000FA1                     PIR2            equ	4001	;# 
  2473   000FA2                     IPR2            equ	4002	;# 
  2474   000FA6                     EECON1          equ	4006	;# 
  2475   000FA7                     EECON2          equ	4007	;# 
  2476   000FA8                     EEDATA          equ	4008	;# 
  2477   000FA9                     EEADR           equ	4009	;# 
  2478   000FAA                     EEADRH          equ	4010	;# 
  2479   000FAB                     RCSTA           equ	4011	;# 
  2480   000FAB                     RCSTA1          equ	4011	;# 
  2481   000FAC                     TXSTA           equ	4012	;# 
  2482   000FAC                     TXSTA1          equ	4012	;# 
  2483   000FAD                     TXREG           equ	4013	;# 
  2484   000FAD                     TXREG1          equ	4013	;# 
  2485   000FAE                     RCREG           equ	4014	;# 
  2486   000FAE                     RCREG1          equ	4014	;# 
  2487   000FAF                     SPBRG           equ	4015	;# 
  2488   000FAF                     SPBRG1          equ	4015	;# 
  2489   000FB0                     SPBRGH          equ	4016	;# 
  2490   000FB1                     T3CON           equ	4017	;# 
  2491   000FB2                     TMR3            equ	4018	;# 
  2492   000FB2                     TMR3L           equ	4018	;# 
  2493   000FB3                     TMR3H           equ	4019	;# 
  2494   000FB4                     CVRCON2         equ	4020	;# 
  2495   000FB5                     CVRCON          equ	4021	;# 
  2496   000FB6                     ECCP1AS         equ	4022	;# 
  2497   000FB7                     PWM1CON         equ	4023	;# 
  2498   000FB8                     BAUDCON         equ	4024	;# 
  2499   000FB8                     BAUDCTL         equ	4024	;# 
  2500   000FB9                     PSTRCON         equ	4025	;# 
  2501   000FBA                     CCP2CON         equ	4026	;# 
  2502   000FBB                     CCPR2           equ	4027	;# 
  2503   000FBB                     CCPR2L          equ	4027	;# 
  2504   000FBC                     CCPR2H          equ	4028	;# 
  2505   000FBD                     CCP1CON         equ	4029	;# 
  2506   000FBE                     CCPR1           equ	4030	;# 
  2507   000FBE                     CCPR1L          equ	4030	;# 
  2508   000FBF                     CCPR1H          equ	4031	;# 
  2509   000FC0                     ADCON2          equ	4032	;# 
  2510   000FC1                     ADCON1          equ	4033	;# 
  2511   000FC2                     ADCON0          equ	4034	;# 
  2512   000FC3                     ADRES           equ	4035	;# 
  2513   000FC3                     ADRESL          equ	4035	;# 
  2514   000FC4                     ADRESH          equ	4036	;# 
  2515   000FC5                     SSPCON2         equ	4037	;# 
  2516   000FC6                     SSPCON1         equ	4038	;# 
  2517   000FC7                     SSPSTAT         equ	4039	;# 
  2518   000FC8                     SSPADD          equ	4040	;# 
  2519   000FC9                     SSPBUF          equ	4041	;# 
  2520   000FCA                     T2CON           equ	4042	;# 
  2521   000FCB                     PR2             equ	4043	;# 
  2522   000FCB                     MEMCON          equ	4043	;# 
  2523   000FCC                     TMR2            equ	4044	;# 
  2524   000FCD                     T1CON           equ	4045	;# 
  2525   000FCE                     TMR1            equ	4046	;# 
  2526   000FCE                     TMR1L           equ	4046	;# 
  2527   000FCF                     TMR1H           equ	4047	;# 
  2528   000FD0                     RCON            equ	4048	;# 
  2529   000FD1                     WDTCON          equ	4049	;# 
  2530   000FD2                     HLVDCON         equ	4050	;# 
  2531   000FD2                     LVDCON          equ	4050	;# 
  2532   000FD3                     OSCCON          equ	4051	;# 
  2533   000FD5                     T0CON           equ	4053	;# 
  2534   000FD6                     TMR0            equ	4054	;# 
  2535   000FD6                     TMR0L           equ	4054	;# 
  2536   000FD7                     TMR0H           equ	4055	;# 
  2537   000FD8                     STATUS          equ	4056	;# 
  2538   000FD9                     FSR2            equ	4057	;# 
  2539   000FD9                     FSR2L           equ	4057	;# 
  2540   000FDA                     FSR2H           equ	4058	;# 
  2541   000FDB                     PLUSW2          equ	4059	;# 
  2542   000FDC                     PREINC2         equ	4060	;# 
  2543   000FDD                     POSTDEC2        equ	4061	;# 
  2544   000FDE                     POSTINC2        equ	4062	;# 
  2545   000FDF                     INDF2           equ	4063	;# 
  2546   000FE0                     BSR             equ	4064	;# 
  2547   000FE1                     FSR1            equ	4065	;# 
  2548   000FE1                     FSR1L           equ	4065	;# 
  2549   000FE2                     FSR1H           equ	4066	;# 
  2550   000FE3                     PLUSW1          equ	4067	;# 
  2551   000FE4                     PREINC1         equ	4068	;# 
  2552   000FE5                     POSTDEC1        equ	4069	;# 
  2553   000FE6                     POSTINC1        equ	4070	;# 
  2554   000FE7                     INDF1           equ	4071	;# 
  2555   000FE8                     WREG            equ	4072	;# 
  2556   000FE9                     FSR0            equ	4073	;# 
  2557   000FE9                     FSR0L           equ	4073	;# 
  2558   000FEA                     FSR0H           equ	4074	;# 
  2559   000FEB                     PLUSW0          equ	4075	;# 
  2560   000FEC                     PREINC0         equ	4076	;# 
  2561   000FED                     POSTDEC0        equ	4077	;# 
  2562   000FEE                     POSTINC0        equ	4078	;# 
  2563   000FEF                     INDF0           equ	4079	;# 
  2564   000FF0                     INTCON3         equ	4080	;# 
  2565   000FF1                     INTCON2         equ	4081	;# 
  2566   000FF2                     INTCON          equ	4082	;# 
  2567   000FF3                     PROD            equ	4083	;# 
  2568   000FF3                     PRODL           equ	4083	;# 
  2569   000FF4                     PRODH           equ	4084	;# 
  2570   000FF5                     TABLAT          equ	4085	;# 
  2571   000FF6                     TBLPTR          equ	4086	;# 
  2572   000FF6                     TBLPTRL         equ	4086	;# 
  2573   000FF7                     TBLPTRH         equ	4087	;# 
  2574   000FF8                     TBLPTRU         equ	4088	;# 
  2575   000FF9                     PCLAT           equ	4089	;# 
  2576   000FF9                     PC              equ	4089	;# 
  2577   000FF9                     PCL             equ	4089	;# 
  2578   000FFA                     PCLATH          equ	4090	;# 
  2579   000FFB                     PCLATU          equ	4091	;# 
  2580   000FFC                     STKPTR          equ	4092	;# 
  2581   000FFD                     TOS             equ	4093	;# 
  2582   000FFD                     TOSL            equ	4093	;# 
  2583   000FFE                     TOSH            equ	4094	;# 
  2584   000FFF                     TOSU            equ	4095	;# 
  2585   000F77                     SSPMSK          equ	3959	;# 
  2586   000F78                     SLRCON          equ	3960	;# 
  2587   000F79                     CM2CON1         equ	3961	;# 
  2588   000F7A                     CM2CON0         equ	3962	;# 
  2589   000F7B                     CM1CON0         equ	3963	;# 
  2590   000F7C                     WPUB            equ	3964	;# 
  2591   000F7D                     IOCB            equ	3965	;# 
  2592   000F7E                     ANSEL           equ	3966	;# 
  2593   000F7F                     ANSELH          equ	3967	;# 
  2594   000F80                     PORTA           equ	3968	;# 
  2595   000F81                     PORTB           equ	3969	;# 
  2596   000F82                     PORTC           equ	3970	;# 
  2597   000F83                     PORTD           equ	3971	;# 
  2598   000F84                     PORTE           equ	3972	;# 
  2599   000F89                     LATA            equ	3977	;# 
  2600   000F8A                     LATB            equ	3978	;# 
  2601   000F8B                     LATC            equ	3979	;# 
  2602   000F8C                     LATD            equ	3980	;# 
  2603   000F8D                     LATE            equ	3981	;# 
  2604   000F92                     TRISA           equ	3986	;# 
  2605   000F92                     DDRA            equ	3986	;# 
  2606   000F93                     TRISB           equ	3987	;# 
  2607   000F93                     DDRB            equ	3987	;# 
  2608   000F94                     TRISC           equ	3988	;# 
  2609   000F94                     DDRC            equ	3988	;# 
  2610   000F95                     TRISD           equ	3989	;# 
  2611   000F95                     DDRD            equ	3989	;# 
  2612   000F96                     TRISE           equ	3990	;# 
  2613   000F96                     DDRE            equ	3990	;# 
  2614   000F9B                     OSCTUNE         equ	3995	;# 
  2615   000F9D                     PIE1            equ	3997	;# 
  2616   000F9E                     PIR1            equ	3998	;# 
  2617   000F9F                     IPR1            equ	3999	;# 
  2618   000FA0                     PIE2            equ	4000	;# 
  2619   000FA1                     PIR2            equ	4001	;# 
  2620   000FA2                     IPR2            equ	4002	;# 
  2621   000FA6                     EECON1          equ	4006	;# 
  2622   000FA7                     EECON2          equ	4007	;# 
  2623   000FA8                     EEDATA          equ	4008	;# 
  2624   000FA9                     EEADR           equ	4009	;# 
  2625   000FAA                     EEADRH          equ	4010	;# 
  2626   000FAB                     RCSTA           equ	4011	;# 
  2627   000FAB                     RCSTA1          equ	4011	;# 
  2628   000FAC                     TXSTA           equ	4012	;# 
  2629   000FAC                     TXSTA1          equ	4012	;# 
  2630   000FAD                     TXREG           equ	4013	;# 
  2631   000FAD                     TXREG1          equ	4013	;# 
  2632   000FAE                     RCREG           equ	4014	;# 
  2633   000FAE                     RCREG1          equ	4014	;# 
  2634   000FAF                     SPBRG           equ	4015	;# 
  2635   000FAF                     SPBRG1          equ	4015	;# 
  2636   000FB0                     SPBRGH          equ	4016	;# 
  2637   000FB1                     T3CON           equ	4017	;# 
  2638   000FB2                     TMR3            equ	4018	;# 
  2639   000FB2                     TMR3L           equ	4018	;# 
  2640   000FB3                     TMR3H           equ	4019	;# 
  2641   000FB4                     CVRCON2         equ	4020	;# 
  2642   000FB5                     CVRCON          equ	4021	;# 
  2643   000FB6                     ECCP1AS         equ	4022	;# 
  2644   000FB7                     PWM1CON         equ	4023	;# 
  2645   000FB8                     BAUDCON         equ	4024	;# 
  2646   000FB8                     BAUDCTL         equ	4024	;# 
  2647   000FB9                     PSTRCON         equ	4025	;# 
  2648   000FBA                     CCP2CON         equ	4026	;# 
  2649   000FBB                     CCPR2           equ	4027	;# 
  2650   000FBB                     CCPR2L          equ	4027	;# 
  2651   000FBC                     CCPR2H          equ	4028	;# 
  2652   000FBD                     CCP1CON         equ	4029	;# 
  2653   000FBE                     CCPR1           equ	4030	;# 
  2654   000FBE                     CCPR1L          equ	4030	;# 
  2655   000FBF                     CCPR1H          equ	4031	;# 
  2656   000FC0                     ADCON2          equ	4032	;# 
  2657   000FC1                     ADCON1          equ	4033	;# 
  2658   000FC2                     ADCON0          equ	4034	;# 
  2659   000FC3                     ADRES           equ	4035	;# 
  2660   000FC3                     ADRESL          equ	4035	;# 
  2661   000FC4                     ADRESH          equ	4036	;# 
  2662   000FC5                     SSPCON2         equ	4037	;# 
  2663   000FC6                     SSPCON1         equ	4038	;# 
  2664   000FC7                     SSPSTAT         equ	4039	;# 
  2665   000FC8                     SSPADD          equ	4040	;# 
  2666   000FC9                     SSPBUF          equ	4041	;# 
  2667   000FCA                     T2CON           equ	4042	;# 
  2668   000FCB                     PR2             equ	4043	;# 
  2669   000FCB                     MEMCON          equ	4043	;# 
  2670   000FCC                     TMR2            equ	4044	;# 
  2671   000FCD                     T1CON           equ	4045	;# 
  2672   000FCE                     TMR1            equ	4046	;# 
  2673   000FCE                     TMR1L           equ	4046	;# 
  2674   000FCF                     TMR1H           equ	4047	;# 
  2675   000FD0                     RCON            equ	4048	;# 
  2676   000FD1                     WDTCON          equ	4049	;# 
  2677   000FD2                     HLVDCON         equ	4050	;# 
  2678   000FD2                     LVDCON          equ	4050	;# 
  2679   000FD3                     OSCCON          equ	4051	;# 
  2680   000FD5                     T0CON           equ	4053	;# 
  2681   000FD6                     TMR0            equ	4054	;# 
  2682   000FD6                     TMR0L           equ	4054	;# 
  2683   000FD7                     TMR0H           equ	4055	;# 
  2684   000FD8                     STATUS          equ	4056	;# 
  2685   000FD9                     FSR2            equ	4057	;# 
  2686   000FD9                     FSR2L           equ	4057	;# 
  2687   000FDA                     FSR2H           equ	4058	;# 
  2688   000FDB                     PLUSW2          equ	4059	;# 
  2689   000FDC                     PREINC2         equ	4060	;# 
  2690   000FDD                     POSTDEC2        equ	4061	;# 
  2691   000FDE                     POSTINC2        equ	4062	;# 
  2692   000FDF                     INDF2           equ	4063	;# 
  2693   000FE0                     BSR             equ	4064	;# 
  2694   000FE1                     FSR1            equ	4065	;# 
  2695   000FE1                     FSR1L           equ	4065	;# 
  2696   000FE2                     FSR1H           equ	4066	;# 
  2697   000FE3                     PLUSW1          equ	4067	;# 
  2698   000FE4                     PREINC1         equ	4068	;# 
  2699   000FE5                     POSTDEC1        equ	4069	;# 
  2700   000FE6                     POSTINC1        equ	4070	;# 
  2701   000FE7                     INDF1           equ	4071	;# 
  2702   000FE8                     WREG            equ	4072	;# 
  2703   000FE9                     FSR0            equ	4073	;# 
  2704   000FE9                     FSR0L           equ	4073	;# 
  2705   000FEA                     FSR0H           equ	4074	;# 
  2706   000FEB                     PLUSW0          equ	4075	;# 
  2707   000FEC                     PREINC0         equ	4076	;# 
  2708   000FED                     POSTDEC0        equ	4077	;# 
  2709   000FEE                     POSTINC0        equ	4078	;# 
  2710   000FEF                     INDF0           equ	4079	;# 
  2711   000FF0                     INTCON3         equ	4080	;# 
  2712   000FF1                     INTCON2         equ	4081	;# 
  2713   000FF2                     INTCON          equ	4082	;# 
  2714   000FF3                     PROD            equ	4083	;# 
  2715   000FF3                     PRODL           equ	4083	;# 
  2716   000FF4                     PRODH           equ	4084	;# 
  2717   000FF5                     TABLAT          equ	4085	;# 
  2718   000FF6                     TBLPTR          equ	4086	;# 
  2719   000FF6                     TBLPTRL         equ	4086	;# 
  2720   000FF7                     TBLPTRH         equ	4087	;# 
  2721   000FF8                     TBLPTRU         equ	4088	;# 
  2722   000FF9                     PCLAT           equ	4089	;# 
  2723   000FF9                     PC              equ	4089	;# 
  2724   000FF9                     PCL             equ	4089	;# 
  2725   000FFA                     PCLATH          equ	4090	;# 
  2726   000FFB                     PCLATU          equ	4091	;# 
  2727   000FFC                     STKPTR          equ	4092	;# 
  2728   000FFD                     TOS             equ	4093	;# 
  2729   000FFD                     TOSL            equ	4093	;# 
  2730   000FFE                     TOSH            equ	4094	;# 
  2731   000FFF                     TOSU            equ	4095	;# 
  2732   000F77                     SSPMSK          equ	3959	;# 
  2733   000F78                     SLRCON          equ	3960	;# 
  2734   000F79                     CM2CON1         equ	3961	;# 
  2735   000F7A                     CM2CON0         equ	3962	;# 
  2736   000F7B                     CM1CON0         equ	3963	;# 
  2737   000F7C                     WPUB            equ	3964	;# 
  2738   000F7D                     IOCB            equ	3965	;# 
  2739   000F7E                     ANSEL           equ	3966	;# 
  2740   000F7F                     ANSELH          equ	3967	;# 
  2741   000F80                     PORTA           equ	3968	;# 
  2742   000F81                     PORTB           equ	3969	;# 
  2743   000F82                     PORTC           equ	3970	;# 
  2744   000F83                     PORTD           equ	3971	;# 
  2745   000F84                     PORTE           equ	3972	;# 
  2746   000F89                     LATA            equ	3977	;# 
  2747   000F8A                     LATB            equ	3978	;# 
  2748   000F8B                     LATC            equ	3979	;# 
  2749   000F8C                     LATD            equ	3980	;# 
  2750   000F8D                     LATE            equ	3981	;# 
  2751   000F92                     TRISA           equ	3986	;# 
  2752   000F92                     DDRA            equ	3986	;# 
  2753   000F93                     TRISB           equ	3987	;# 
  2754   000F93                     DDRB            equ	3987	;# 
  2755   000F94                     TRISC           equ	3988	;# 
  2756   000F94                     DDRC            equ	3988	;# 
  2757   000F95                     TRISD           equ	3989	;# 
  2758   000F95                     DDRD            equ	3989	;# 
  2759   000F96                     TRISE           equ	3990	;# 
  2760   000F96                     DDRE            equ	3990	;# 
  2761   000F9B                     OSCTUNE         equ	3995	;# 
  2762   000F9D                     PIE1            equ	3997	;# 
  2763   000F9E                     PIR1            equ	3998	;# 
  2764   000F9F                     IPR1            equ	3999	;# 
  2765   000FA0                     PIE2            equ	4000	;# 
  2766   000FA1                     PIR2            equ	4001	;# 
  2767   000FA2                     IPR2            equ	4002	;# 
  2768   000FA6                     EECON1          equ	4006	;# 
  2769   000FA7                     EECON2          equ	4007	;# 
  2770   000FA8                     EEDATA          equ	4008	;# 
  2771   000FA9                     EEADR           equ	4009	;# 
  2772   000FAA                     EEADRH          equ	4010	;# 
  2773   000FAB                     RCSTA           equ	4011	;# 
  2774   000FAB                     RCSTA1          equ	4011	;# 
  2775   000FAC                     TXSTA           equ	4012	;# 
  2776   000FAC                     TXSTA1          equ	4012	;# 
  2777   000FAD                     TXREG           equ	4013	;# 
  2778   000FAD                     TXREG1          equ	4013	;# 
  2779   000FAE                     RCREG           equ	4014	;# 
  2780   000FAE                     RCREG1          equ	4014	;# 
  2781   000FAF                     SPBRG           equ	4015	;# 
  2782   000FAF                     SPBRG1          equ	4015	;# 
  2783   000FB0                     SPBRGH          equ	4016	;# 
  2784   000FB1                     T3CON           equ	4017	;# 
  2785   000FB2                     TMR3            equ	4018	;# 
  2786   000FB2                     TMR3L           equ	4018	;# 
  2787   000FB3                     TMR3H           equ	4019	;# 
  2788   000FB4                     CVRCON2         equ	4020	;# 
  2789   000FB5                     CVRCON          equ	4021	;# 
  2790   000FB6                     ECCP1AS         equ	4022	;# 
  2791   000FB7                     PWM1CON         equ	4023	;# 
  2792   000FB8                     BAUDCON         equ	4024	;# 
  2793   000FB8                     BAUDCTL         equ	4024	;# 
  2794   000FB9                     PSTRCON         equ	4025	;# 
  2795   000FBA                     CCP2CON         equ	4026	;# 
  2796   000FBB                     CCPR2           equ	4027	;# 
  2797   000FBB                     CCPR2L          equ	4027	;# 
  2798   000FBC                     CCPR2H          equ	4028	;# 
  2799   000FBD                     CCP1CON         equ	4029	;# 
  2800   000FBE                     CCPR1           equ	4030	;# 
  2801   000FBE                     CCPR1L          equ	4030	;# 
  2802   000FBF                     CCPR1H          equ	4031	;# 
  2803   000FC0                     ADCON2          equ	4032	;# 
  2804   000FC1                     ADCON1          equ	4033	;# 
  2805   000FC2                     ADCON0          equ	4034	;# 
  2806   000FC3                     ADRES           equ	4035	;# 
  2807   000FC3                     ADRESL          equ	4035	;# 
  2808   000FC4                     ADRESH          equ	4036	;# 
  2809   000FC5                     SSPCON2         equ	4037	;# 
  2810   000FC6                     SSPCON1         equ	4038	;# 
  2811   000FC7                     SSPSTAT         equ	4039	;# 
  2812   000FC8                     SSPADD          equ	4040	;# 
  2813   000FC9                     SSPBUF          equ	4041	;# 
  2814   000FCA                     T2CON           equ	4042	;# 
  2815   000FCB                     PR2             equ	4043	;# 
  2816   000FCB                     MEMCON          equ	4043	;# 
  2817   000FCC                     TMR2            equ	4044	;# 
  2818   000FCD                     T1CON           equ	4045	;# 
  2819   000FCE                     TMR1            equ	4046	;# 
  2820   000FCE                     TMR1L           equ	4046	;# 
  2821   000FCF                     TMR1H           equ	4047	;# 
  2822   000FD0                     RCON            equ	4048	;# 
  2823   000FD1                     WDTCON          equ	4049	;# 
  2824   000FD2                     HLVDCON         equ	4050	;# 
  2825   000FD2                     LVDCON          equ	4050	;# 
  2826   000FD3                     OSCCON          equ	4051	;# 
  2827   000FD5                     T0CON           equ	4053	;# 
  2828   000FD6                     TMR0            equ	4054	;# 
  2829   000FD6                     TMR0L           equ	4054	;# 
  2830   000FD7                     TMR0H           equ	4055	;# 
  2831   000FD8                     STATUS          equ	4056	;# 
  2832   000FD9                     FSR2            equ	4057	;# 
  2833   000FD9                     FSR2L           equ	4057	;# 
  2834   000FDA                     FSR2H           equ	4058	;# 
  2835   000FDB                     PLUSW2          equ	4059	;# 
  2836   000FDC                     PREINC2         equ	4060	;# 
  2837   000FDD                     POSTDEC2        equ	4061	;# 
  2838   000FDE                     POSTINC2        equ	4062	;# 
  2839   000FDF                     INDF2           equ	4063	;# 
  2840   000FE0                     BSR             equ	4064	;# 
  2841   000FE1                     FSR1            equ	4065	;# 
  2842   000FE1                     FSR1L           equ	4065	;# 
  2843   000FE2                     FSR1H           equ	4066	;# 
  2844   000FE3                     PLUSW1          equ	4067	;# 
  2845   000FE4                     PREINC1         equ	4068	;# 
  2846   000FE5                     POSTDEC1        equ	4069	;# 
  2847   000FE6                     POSTINC1        equ	4070	;# 
  2848   000FE7                     INDF1           equ	4071	;# 
  2849   000FE8                     WREG            equ	4072	;# 
  2850   000FE9                     FSR0            equ	4073	;# 
  2851   000FE9                     FSR0L           equ	4073	;# 
  2852   000FEA                     FSR0H           equ	4074	;# 
  2853   000FEB                     PLUSW0          equ	4075	;# 
  2854   000FEC                     PREINC0         equ	4076	;# 
  2855   000FED                     POSTDEC0        equ	4077	;# 
  2856   000FEE                     POSTINC0        equ	4078	;# 
  2857   000FEF                     INDF0           equ	4079	;# 
  2858   000FF0                     INTCON3         equ	4080	;# 
  2859   000FF1                     INTCON2         equ	4081	;# 
  2860   000FF2                     INTCON          equ	4082	;# 
  2861   000FF3                     PROD            equ	4083	;# 
  2862   000FF3                     PRODL           equ	4083	;# 
  2863   000FF4                     PRODH           equ	4084	;# 
  2864   000FF5                     TABLAT          equ	4085	;# 
  2865   000FF6                     TBLPTR          equ	4086	;# 
  2866   000FF6                     TBLPTRL         equ	4086	;# 
  2867   000FF7                     TBLPTRH         equ	4087	;# 
  2868   000FF8                     TBLPTRU         equ	4088	;# 
  2869   000FF9                     PCLAT           equ	4089	;# 
  2870   000FF9                     PC              equ	4089	;# 
  2871   000FF9                     PCL             equ	4089	;# 
  2872   000FFA                     PCLATH          equ	4090	;# 
  2873   000FFB                     PCLATU          equ	4091	;# 
  2874   000FFC                     STKPTR          equ	4092	;# 
  2875   000FFD                     TOS             equ	4093	;# 
  2876   000FFD                     TOSL            equ	4093	;# 
  2877   000FFE                     TOSH            equ	4094	;# 
  2878   000FFF                     TOSU            equ	4095	;# 
  2879   000F77                     SSPMSK          equ	3959	;# 
  2880   000F78                     SLRCON          equ	3960	;# 
  2881   000F79                     CM2CON1         equ	3961	;# 
  2882   000F7A                     CM2CON0         equ	3962	;# 
  2883   000F7B                     CM1CON0         equ	3963	;# 
  2884   000F7C                     WPUB            equ	3964	;# 
  2885   000F7D                     IOCB            equ	3965	;# 
  2886   000F7E                     ANSEL           equ	3966	;# 
  2887   000F7F                     ANSELH          equ	3967	;# 
  2888   000F80                     PORTA           equ	3968	;# 
  2889   000F81                     PORTB           equ	3969	;# 
  2890   000F82                     PORTC           equ	3970	;# 
  2891   000F83                     PORTD           equ	3971	;# 
  2892   000F84                     PORTE           equ	3972	;# 
  2893   000F89                     LATA            equ	3977	;# 
  2894   000F8A                     LATB            equ	3978	;# 
  2895   000F8B                     LATC            equ	3979	;# 
  2896   000F8C                     LATD            equ	3980	;# 
  2897   000F8D                     LATE            equ	3981	;# 
  2898   000F92                     TRISA           equ	3986	;# 
  2899   000F92                     DDRA            equ	3986	;# 
  2900   000F93                     TRISB           equ	3987	;# 
  2901   000F93                     DDRB            equ	3987	;# 
  2902   000F94                     TRISC           equ	3988	;# 
  2903   000F94                     DDRC            equ	3988	;# 
  2904   000F95                     TRISD           equ	3989	;# 
  2905   000F95                     DDRD            equ	3989	;# 
  2906   000F96                     TRISE           equ	3990	;# 
  2907   000F96                     DDRE            equ	3990	;# 
  2908   000F9B                     OSCTUNE         equ	3995	;# 
  2909   000F9D                     PIE1            equ	3997	;# 
  2910   000F9E                     PIR1            equ	3998	;# 
  2911   000F9F                     IPR1            equ	3999	;# 
  2912   000FA0                     PIE2            equ	4000	;# 
  2913   000FA1                     PIR2            equ	4001	;# 
  2914   000FA2                     IPR2            equ	4002	;# 
  2915   000FA6                     EECON1          equ	4006	;# 
  2916   000FA7                     EECON2          equ	4007	;# 
  2917   000FA8                     EEDATA          equ	4008	;# 
  2918   000FA9                     EEADR           equ	4009	;# 
  2919   000FAA                     EEADRH          equ	4010	;# 
  2920   000FAB                     RCSTA           equ	4011	;# 
  2921   000FAB                     RCSTA1          equ	4011	;# 
  2922   000FAC                     TXSTA           equ	4012	;# 
  2923   000FAC                     TXSTA1          equ	4012	;# 
  2924   000FAD                     TXREG           equ	4013	;# 
  2925   000FAD                     TXREG1          equ	4013	;# 
  2926   000FAE                     RCREG           equ	4014	;# 
  2927   000FAE                     RCREG1          equ	4014	;# 
  2928   000FAF                     SPBRG           equ	4015	;# 
  2929   000FAF                     SPBRG1          equ	4015	;# 
  2930   000FB0                     SPBRGH          equ	4016	;# 
  2931   000FB1                     T3CON           equ	4017	;# 
  2932   000FB2                     TMR3            equ	4018	;# 
  2933   000FB2                     TMR3L           equ	4018	;# 
  2934   000FB3                     TMR3H           equ	4019	;# 
  2935   000FB4                     CVRCON2         equ	4020	;# 
  2936   000FB5                     CVRCON          equ	4021	;# 
  2937   000FB6                     ECCP1AS         equ	4022	;# 
  2938   000FB7                     PWM1CON         equ	4023	;# 
  2939   000FB8                     BAUDCON         equ	4024	;# 
  2940   000FB8                     BAUDCTL         equ	4024	;# 
  2941   000FB9                     PSTRCON         equ	4025	;# 
  2942   000FBA                     CCP2CON         equ	4026	;# 
  2943   000FBB                     CCPR2           equ	4027	;# 
  2944   000FBB                     CCPR2L          equ	4027	;# 
  2945   000FBC                     CCPR2H          equ	4028	;# 
  2946   000FBD                     CCP1CON         equ	4029	;# 
  2947   000FBE                     CCPR1           equ	4030	;# 
  2948   000FBE                     CCPR1L          equ	4030	;# 
  2949   000FBF                     CCPR1H          equ	4031	;# 
  2950   000FC0                     ADCON2          equ	4032	;# 
  2951   000FC1                     ADCON1          equ	4033	;# 
  2952   000FC2                     ADCON0          equ	4034	;# 
  2953   000FC3                     ADRES           equ	4035	;# 
  2954   000FC3                     ADRESL          equ	4035	;# 
  2955   000FC4                     ADRESH          equ	4036	;# 
  2956   000FC5                     SSPCON2         equ	4037	;# 
  2957   000FC6                     SSPCON1         equ	4038	;# 
  2958   000FC7                     SSPSTAT         equ	4039	;# 
  2959   000FC8                     SSPADD          equ	4040	;# 
  2960   000FC9                     SSPBUF          equ	4041	;# 
  2961   000FCA                     T2CON           equ	4042	;# 
  2962   000FCB                     PR2             equ	4043	;# 
  2963   000FCB                     MEMCON          equ	4043	;# 
  2964   000FCC                     TMR2            equ	4044	;# 
  2965   000FCD                     T1CON           equ	4045	;# 
  2966   000FCE                     TMR1            equ	4046	;# 
  2967   000FCE                     TMR1L           equ	4046	;# 
  2968   000FCF                     TMR1H           equ	4047	;# 
  2969   000FD0                     RCON            equ	4048	;# 
  2970   000FD1                     WDTCON          equ	4049	;# 
  2971   000FD2                     HLVDCON         equ	4050	;# 
  2972   000FD2                     LVDCON          equ	4050	;# 
  2973   000FD3                     OSCCON          equ	4051	;# 
  2974   000FD5                     T0CON           equ	4053	;# 
  2975   000FD6                     TMR0            equ	4054	;# 
  2976   000FD6                     TMR0L           equ	4054	;# 
  2977   000FD7                     TMR0H           equ	4055	;# 
  2978   000FD8                     STATUS          equ	4056	;# 
  2979   000FD9                     FSR2            equ	4057	;# 
  2980   000FD9                     FSR2L           equ	4057	;# 
  2981   000FDA                     FSR2H           equ	4058	;# 
  2982   000FDB                     PLUSW2          equ	4059	;# 
  2983   000FDC                     PREINC2         equ	4060	;# 
  2984   000FDD                     POSTDEC2        equ	4061	;# 
  2985   000FDE                     POSTINC2        equ	4062	;# 
  2986   000FDF                     INDF2           equ	4063	;# 
  2987   000FE0                     BSR             equ	4064	;# 
  2988   000FE1                     FSR1            equ	4065	;# 
  2989   000FE1                     FSR1L           equ	4065	;# 
  2990   000FE2                     FSR1H           equ	4066	;# 
  2991   000FE3                     PLUSW1          equ	4067	;# 
  2992   000FE4                     PREINC1         equ	4068	;# 
  2993   000FE5                     POSTDEC1        equ	4069	;# 
  2994   000FE6                     POSTINC1        equ	4070	;# 
  2995   000FE7                     INDF1           equ	4071	;# 
  2996   000FE8                     WREG            equ	4072	;# 
  2997   000FE9                     FSR0            equ	4073	;# 
  2998   000FE9                     FSR0L           equ	4073	;# 
  2999   000FEA                     FSR0H           equ	4074	;# 
  3000   000FEB                     PLUSW0          equ	4075	;# 
  3001   000FEC                     PREINC0         equ	4076	;# 
  3002   000FED                     POSTDEC0        equ	4077	;# 
  3003   000FEE                     POSTINC0        equ	4078	;# 
  3004   000FEF                     INDF0           equ	4079	;# 
  3005   000FF0                     INTCON3         equ	4080	;# 
  3006   000FF1                     INTCON2         equ	4081	;# 
  3007   000FF2                     INTCON          equ	4082	;# 
  3008   000FF3                     PROD            equ	4083	;# 
  3009   000FF3                     PRODL           equ	4083	;# 
  3010   000FF4                     PRODH           equ	4084	;# 
  3011   000FF5                     TABLAT          equ	4085	;# 
  3012   000FF6                     TBLPTR          equ	4086	;# 
  3013   000FF6                     TBLPTRL         equ	4086	;# 
  3014   000FF7                     TBLPTRH         equ	4087	;# 
  3015   000FF8                     TBLPTRU         equ	4088	;# 
  3016   000FF9                     PCLAT           equ	4089	;# 
  3017   000FF9                     PC              equ	4089	;# 
  3018   000FF9                     PCL             equ	4089	;# 
  3019   000FFA                     PCLATH          equ	4090	;# 
  3020   000FFB                     PCLATU          equ	4091	;# 
  3021   000FFC                     STKPTR          equ	4092	;# 
  3022   000FFD                     TOS             equ	4093	;# 
  3023   000FFD                     TOSL            equ	4093	;# 
  3024   000FFE                     TOSH            equ	4094	;# 
  3025   000FFF                     TOSU            equ	4095	;# 
  3026   000F77                     SSPMSK          equ	3959	;# 
  3027   000F78                     SLRCON          equ	3960	;# 
  3028   000F79                     CM2CON1         equ	3961	;# 
  3029   000F7A                     CM2CON0         equ	3962	;# 
  3030   000F7B                     CM1CON0         equ	3963	;# 
  3031   000F7C                     WPUB            equ	3964	;# 
  3032   000F7D                     IOCB            equ	3965	;# 
  3033   000F7E                     ANSEL           equ	3966	;# 
  3034   000F7F                     ANSELH          equ	3967	;# 
  3035   000F80                     PORTA           equ	3968	;# 
  3036   000F81                     PORTB           equ	3969	;# 
  3037   000F82                     PORTC           equ	3970	;# 
  3038   000F83                     PORTD           equ	3971	;# 
  3039   000F84                     PORTE           equ	3972	;# 
  3040   000F89                     LATA            equ	3977	;# 
  3041   000F8A                     LATB            equ	3978	;# 
  3042   000F8B                     LATC            equ	3979	;# 
  3043   000F8C                     LATD            equ	3980	;# 
  3044   000F8D                     LATE            equ	3981	;# 
  3045   000F92                     TRISA           equ	3986	;# 
  3046   000F92                     DDRA            equ	3986	;# 
  3047   000F93                     TRISB           equ	3987	;# 
  3048   000F93                     DDRB            equ	3987	;# 
  3049   000F94                     TRISC           equ	3988	;# 
  3050   000F94                     DDRC            equ	3988	;# 
  3051   000F95                     TRISD           equ	3989	;# 
  3052   000F95                     DDRD            equ	3989	;# 
  3053   000F96                     TRISE           equ	3990	;# 
  3054   000F96                     DDRE            equ	3990	;# 
  3055   000F9B                     OSCTUNE         equ	3995	;# 
  3056   000F9D                     PIE1            equ	3997	;# 
  3057   000F9E                     PIR1            equ	3998	;# 
  3058   000F9F                     IPR1            equ	3999	;# 
  3059   000FA0                     PIE2            equ	4000	;# 
  3060   000FA1                     PIR2            equ	4001	;# 
  3061   000FA2                     IPR2            equ	4002	;# 
  3062   000FA6                     EECON1          equ	4006	;# 
  3063   000FA7                     EECON2          equ	4007	;# 
  3064   000FA8                     EEDATA          equ	4008	;# 
  3065   000FA9                     EEADR           equ	4009	;# 
  3066   000FAA                     EEADRH          equ	4010	;# 
  3067   000FAB                     RCSTA           equ	4011	;# 
  3068   000FAB                     RCSTA1          equ	4011	;# 
  3069   000FAC                     TXSTA           equ	4012	;# 
  3070   000FAC                     TXSTA1          equ	4012	;# 
  3071   000FAD                     TXREG           equ	4013	;# 
  3072   000FAD                     TXREG1          equ	4013	;# 
  3073   000FAE                     RCREG           equ	4014	;# 
  3074   000FAE                     RCREG1          equ	4014	;# 
  3075   000FAF                     SPBRG           equ	4015	;# 
  3076   000FAF                     SPBRG1          equ	4015	;# 
  3077   000FB0                     SPBRGH          equ	4016	;# 
  3078   000FB1                     T3CON           equ	4017	;# 
  3079   000FB2                     TMR3            equ	4018	;# 
  3080   000FB2                     TMR3L           equ	4018	;# 
  3081   000FB3                     TMR3H           equ	4019	;# 
  3082   000FB4                     CVRCON2         equ	4020	;# 
  3083   000FB5                     CVRCON          equ	4021	;# 
  3084   000FB6                     ECCP1AS         equ	4022	;# 
  3085   000FB7                     PWM1CON         equ	4023	;# 
  3086   000FB8                     BAUDCON         equ	4024	;# 
  3087   000FB8                     BAUDCTL         equ	4024	;# 
  3088   000FB9                     PSTRCON         equ	4025	;# 
  3089   000FBA                     CCP2CON         equ	4026	;# 
  3090   000FBB                     CCPR2           equ	4027	;# 
  3091   000FBB                     CCPR2L          equ	4027	;# 
  3092   000FBC                     CCPR2H          equ	4028	;# 
  3093   000FBD                     CCP1CON         equ	4029	;# 
  3094   000FBE                     CCPR1           equ	4030	;# 
  3095   000FBE                     CCPR1L          equ	4030	;# 
  3096   000FBF                     CCPR1H          equ	4031	;# 
  3097   000FC0                     ADCON2          equ	4032	;# 
  3098   000FC1                     ADCON1          equ	4033	;# 
  3099   000FC2                     ADCON0          equ	4034	;# 
  3100   000FC3                     ADRES           equ	4035	;# 
  3101   000FC3                     ADRESL          equ	4035	;# 
  3102   000FC4                     ADRESH          equ	4036	;# 
  3103   000FC5                     SSPCON2         equ	4037	;# 
  3104   000FC6                     SSPCON1         equ	4038	;# 
  3105   000FC7                     SSPSTAT         equ	4039	;# 
  3106   000FC8                     SSPADD          equ	4040	;# 
  3107   000FC9                     SSPBUF          equ	4041	;# 
  3108   000FCA                     T2CON           equ	4042	;# 
  3109   000FCB                     PR2             equ	4043	;# 
  3110   000FCB                     MEMCON          equ	4043	;# 
  3111   000FCC                     TMR2            equ	4044	;# 
  3112   000FCD                     T1CON           equ	4045	;# 
  3113   000FCE                     TMR1            equ	4046	;# 
  3114   000FCE                     TMR1L           equ	4046	;# 
  3115   000FCF                     TMR1H           equ	4047	;# 
  3116   000FD0                     RCON            equ	4048	;# 
  3117   000FD1                     WDTCON          equ	4049	;# 
  3118   000FD2                     HLVDCON         equ	4050	;# 
  3119   000FD2                     LVDCON          equ	4050	;# 
  3120   000FD3                     OSCCON          equ	4051	;# 
  3121   000FD5                     T0CON           equ	4053	;# 
  3122   000FD6                     TMR0            equ	4054	;# 
  3123   000FD6                     TMR0L           equ	4054	;# 
  3124   000FD7                     TMR0H           equ	4055	;# 
  3125   000FD8                     STATUS          equ	4056	;# 
  3126   000FD9                     FSR2            equ	4057	;# 
  3127   000FD9                     FSR2L           equ	4057	;# 
  3128   000FDA                     FSR2H           equ	4058	;# 
  3129   000FDB                     PLUSW2          equ	4059	;# 
  3130   000FDC                     PREINC2         equ	4060	;# 
  3131   000FDD                     POSTDEC2        equ	4061	;# 
  3132   000FDE                     POSTINC2        equ	4062	;# 
  3133   000FDF                     INDF2           equ	4063	;# 
  3134   000FE0                     BSR             equ	4064	;# 
  3135   000FE1                     FSR1            equ	4065	;# 
  3136   000FE1                     FSR1L           equ	4065	;# 
  3137   000FE2                     FSR1H           equ	4066	;# 
  3138   000FE3                     PLUSW1          equ	4067	;# 
  3139   000FE4                     PREINC1         equ	4068	;# 
  3140   000FE5                     POSTDEC1        equ	4069	;# 
  3141   000FE6                     POSTINC1        equ	4070	;# 
  3142   000FE7                     INDF1           equ	4071	;# 
  3143   000FE8                     WREG            equ	4072	;# 
  3144   000FE9                     FSR0            equ	4073	;# 
  3145   000FE9                     FSR0L           equ	4073	;# 
  3146   000FEA                     FSR0H           equ	4074	;# 
  3147   000FEB                     PLUSW0          equ	4075	;# 
  3148   000FEC                     PREINC0         equ	4076	;# 
  3149   000FED                     POSTDEC0        equ	4077	;# 
  3150   000FEE                     POSTINC0        equ	4078	;# 
  3151   000FEF                     INDF0           equ	4079	;# 
  3152   000FF0                     INTCON3         equ	4080	;# 
  3153   000FF1                     INTCON2         equ	4081	;# 
  3154   000FF2                     INTCON          equ	4082	;# 
  3155   000FF3                     PROD            equ	4083	;# 
  3156   000FF3                     PRODL           equ	4083	;# 
  3157   000FF4                     PRODH           equ	4084	;# 
  3158   000FF5                     TABLAT          equ	4085	;# 
  3159   000FF6                     TBLPTR          equ	4086	;# 
  3160   000FF6                     TBLPTRL         equ	4086	;# 
  3161   000FF7                     TBLPTRH         equ	4087	;# 
  3162   000FF8                     TBLPTRU         equ	4088	;# 
  3163   000FF9                     PCLAT           equ	4089	;# 
  3164   000FF9                     PC              equ	4089	;# 
  3165   000FF9                     PCL             equ	4089	;# 
  3166   000FFA                     PCLATH          equ	4090	;# 
  3167   000FFB                     PCLATU          equ	4091	;# 
  3168   000FFC                     STKPTR          equ	4092	;# 
  3169   000FFD                     TOS             equ	4093	;# 
  3170   000FFD                     TOSL            equ	4093	;# 
  3171   000FFE                     TOSH            equ	4094	;# 
  3172   000FFF                     TOSU            equ	4095	;# 
  3173   000F77                     SSPMSK          equ	3959	;# 
  3174   000F78                     SLRCON          equ	3960	;# 
  3175   000F79                     CM2CON1         equ	3961	;# 
  3176   000F7A                     CM2CON0         equ	3962	;# 
  3177   000F7B                     CM1CON0         equ	3963	;# 
  3178   000F7C                     WPUB            equ	3964	;# 
  3179   000F7D                     IOCB            equ	3965	;# 
  3180   000F7E                     ANSEL           equ	3966	;# 
  3181   000F7F                     ANSELH          equ	3967	;# 
  3182   000F80                     PORTA           equ	3968	;# 
  3183   000F81                     PORTB           equ	3969	;# 
  3184   000F82                     PORTC           equ	3970	;# 
  3185   000F83                     PORTD           equ	3971	;# 
  3186   000F84                     PORTE           equ	3972	;# 
  3187   000F89                     LATA            equ	3977	;# 
  3188   000F8A                     LATB            equ	3978	;# 
  3189   000F8B                     LATC            equ	3979	;# 
  3190   000F8C                     LATD            equ	3980	;# 
  3191   000F8D                     LATE            equ	3981	;# 
  3192   000F92                     TRISA           equ	3986	;# 
  3193   000F92                     DDRA            equ	3986	;# 
  3194   000F93                     TRISB           equ	3987	;# 
  3195   000F93                     DDRB            equ	3987	;# 
  3196   000F94                     TRISC           equ	3988	;# 
  3197   000F94                     DDRC            equ	3988	;# 
  3198   000F95                     TRISD           equ	3989	;# 
  3199   000F95                     DDRD            equ	3989	;# 
  3200   000F96                     TRISE           equ	3990	;# 
  3201   000F96                     DDRE            equ	3990	;# 
  3202   000F9B                     OSCTUNE         equ	3995	;# 
  3203   000F9D                     PIE1            equ	3997	;# 
  3204   000F9E                     PIR1            equ	3998	;# 
  3205   000F9F                     IPR1            equ	3999	;# 
  3206   000FA0                     PIE2            equ	4000	;# 
  3207   000FA1                     PIR2            equ	4001	;# 
  3208   000FA2                     IPR2            equ	4002	;# 
  3209   000FA6                     EECON1          equ	4006	;# 
  3210   000FA7                     EECON2          equ	4007	;# 
  3211   000FA8                     EEDATA          equ	4008	;# 
  3212   000FA9                     EEADR           equ	4009	;# 
  3213   000FAA                     EEADRH          equ	4010	;# 
  3214   000FAB                     RCSTA           equ	4011	;# 
  3215   000FAB                     RCSTA1          equ	4011	;# 
  3216   000FAC                     TXSTA           equ	4012	;# 
  3217   000FAC                     TXSTA1          equ	4012	;# 
  3218   000FAD                     TXREG           equ	4013	;# 
  3219   000FAD                     TXREG1          equ	4013	;# 
  3220   000FAE                     RCREG           equ	4014	;# 
  3221   000FAE                     RCREG1          equ	4014	;# 
  3222   000FAF                     SPBRG           equ	4015	;# 
  3223   000FAF                     SPBRG1          equ	4015	;# 
  3224   000FB0                     SPBRGH          equ	4016	;# 
  3225   000FB1                     T3CON           equ	4017	;# 
  3226   000FB2                     TMR3            equ	4018	;# 
  3227   000FB2                     TMR3L           equ	4018	;# 
  3228   000FB3                     TMR3H           equ	4019	;# 
  3229   000FB4                     CVRCON2         equ	4020	;# 
  3230   000FB5                     CVRCON          equ	4021	;# 
  3231   000FB6                     ECCP1AS         equ	4022	;# 
  3232   000FB7                     PWM1CON         equ	4023	;# 
  3233   000FB8                     BAUDCON         equ	4024	;# 
  3234   000FB8                     BAUDCTL         equ	4024	;# 
  3235   000FB9                     PSTRCON         equ	4025	;# 
  3236   000FBA                     CCP2CON         equ	4026	;# 
  3237   000FBB                     CCPR2           equ	4027	;# 
  3238   000FBB                     CCPR2L          equ	4027	;# 
  3239   000FBC                     CCPR2H          equ	4028	;# 
  3240   000FBD                     CCP1CON         equ	4029	;# 
  3241   000FBE                     CCPR1           equ	4030	;# 
  3242   000FBE                     CCPR1L          equ	4030	;# 
  3243   000FBF                     CCPR1H          equ	4031	;# 
  3244   000FC0                     ADCON2          equ	4032	;# 
  3245   000FC1                     ADCON1          equ	4033	;# 
  3246   000FC2                     ADCON0          equ	4034	;# 
  3247   000FC3                     ADRES           equ	4035	;# 
  3248   000FC3                     ADRESL          equ	4035	;# 
  3249   000FC4                     ADRESH          equ	4036	;# 
  3250   000FC5                     SSPCON2         equ	4037	;# 
  3251   000FC6                     SSPCON1         equ	4038	;# 
  3252   000FC7                     SSPSTAT         equ	4039	;# 
  3253   000FC8                     SSPADD          equ	4040	;# 
  3254   000FC9                     SSPBUF          equ	4041	;# 
  3255   000FCA                     T2CON           equ	4042	;# 
  3256   000FCB                     PR2             equ	4043	;# 
  3257   000FCB                     MEMCON          equ	4043	;# 
  3258   000FCC                     TMR2            equ	4044	;# 
  3259   000FCD                     T1CON           equ	4045	;# 
  3260   000FCE                     TMR1            equ	4046	;# 
  3261   000FCE                     TMR1L           equ	4046	;# 
  3262   000FCF                     TMR1H           equ	4047	;# 
  3263   000FD0                     RCON            equ	4048	;# 
  3264   000FD1                     WDTCON          equ	4049	;# 
  3265   000FD2                     HLVDCON         equ	4050	;# 
  3266   000FD2                     LVDCON          equ	4050	;# 
  3267   000FD3                     OSCCON          equ	4051	;# 
  3268   000FD5                     T0CON           equ	4053	;# 
  3269   000FD6                     TMR0            equ	4054	;# 
  3270   000FD6                     TMR0L           equ	4054	;# 
  3271   000FD7                     TMR0H           equ	4055	;# 
  3272   000FD8                     STATUS          equ	4056	;# 
  3273   000FD9                     FSR2            equ	4057	;# 
  3274   000FD9                     FSR2L           equ	4057	;# 
  3275   000FDA                     FSR2H           equ	4058	;# 
  3276   000FDB                     PLUSW2          equ	4059	;# 
  3277   000FDC                     PREINC2         equ	4060	;# 
  3278   000FDD                     POSTDEC2        equ	4061	;# 
  3279   000FDE                     POSTINC2        equ	4062	;# 
  3280   000FDF                     INDF2           equ	4063	;# 
  3281   000FE0                     BSR             equ	4064	;# 
  3282   000FE1                     FSR1            equ	4065	;# 
  3283   000FE1                     FSR1L           equ	4065	;# 
  3284   000FE2                     FSR1H           equ	4066	;# 
  3285   000FE3                     PLUSW1          equ	4067	;# 
  3286   000FE4                     PREINC1         equ	4068	;# 
  3287   000FE5                     POSTDEC1        equ	4069	;# 
  3288   000FE6                     POSTINC1        equ	4070	;# 
  3289   000FE7                     INDF1           equ	4071	;# 
  3290   000FE8                     WREG            equ	4072	;# 
  3291   000FE9                     FSR0            equ	4073	;# 
  3292   000FE9                     FSR0L           equ	4073	;# 
  3293   000FEA                     FSR0H           equ	4074	;# 
  3294   000FEB                     PLUSW0          equ	4075	;# 
  3295   000FEC                     PREINC0         equ	4076	;# 
  3296   000FED                     POSTDEC0        equ	4077	;# 
  3297   000FEE                     POSTINC0        equ	4078	;# 
  3298   000FEF                     INDF0           equ	4079	;# 
  3299   000FF0                     INTCON3         equ	4080	;# 
  3300   000FF1                     INTCON2         equ	4081	;# 
  3301   000FF2                     INTCON          equ	4082	;# 
  3302   000FF3                     PROD            equ	4083	;# 
  3303   000FF3                     PRODL           equ	4083	;# 
  3304   000FF4                     PRODH           equ	4084	;# 
  3305   000FF5                     TABLAT          equ	4085	;# 
  3306   000FF6                     TBLPTR          equ	4086	;# 
  3307   000FF6                     TBLPTRL         equ	4086	;# 
  3308   000FF7                     TBLPTRH         equ	4087	;# 
  3309   000FF8                     TBLPTRU         equ	4088	;# 
  3310   000FF9                     PCLAT           equ	4089	;# 
  3311   000FF9                     PC              equ	4089	;# 
  3312   000FF9                     PCL             equ	4089	;# 
  3313   000FFA                     PCLATH          equ	4090	;# 
  3314   000FFB                     PCLATU          equ	4091	;# 
  3315   000FFC                     STKPTR          equ	4092	;# 
  3316   000FFD                     TOS             equ	4093	;# 
  3317   000FFD                     TOSL            equ	4093	;# 
  3318   000FFE                     TOSH            equ	4094	;# 
  3319   000FFF                     TOSU            equ	4095	;# 
  3320   000F77                     SSPMSK          equ	3959	;# 
  3321   000F78                     SLRCON          equ	3960	;# 
  3322   000F79                     CM2CON1         equ	3961	;# 
  3323   000F7A                     CM2CON0         equ	3962	;# 
  3324   000F7B                     CM1CON0         equ	3963	;# 
  3325   000F7C                     WPUB            equ	3964	;# 
  3326   000F7D                     IOCB            equ	3965	;# 
  3327   000F7E                     ANSEL           equ	3966	;# 
  3328   000F7F                     ANSELH          equ	3967	;# 
  3329   000F80                     PORTA           equ	3968	;# 
  3330   000F81                     PORTB           equ	3969	;# 
  3331   000F82                     PORTC           equ	3970	;# 
  3332   000F83                     PORTD           equ	3971	;# 
  3333   000F84                     PORTE           equ	3972	;# 
  3334   000F89                     LATA            equ	3977	;# 
  3335   000F8A                     LATB            equ	3978	;# 
  3336   000F8B                     LATC            equ	3979	;# 
  3337   000F8C                     LATD            equ	3980	;# 
  3338   000F8D                     LATE            equ	3981	;# 
  3339   000F92                     TRISA           equ	3986	;# 
  3340   000F92                     DDRA            equ	3986	;# 
  3341   000F93                     TRISB           equ	3987	;# 
  3342   000F93                     DDRB            equ	3987	;# 
  3343   000F94                     TRISC           equ	3988	;# 
  3344   000F94                     DDRC            equ	3988	;# 
  3345   000F95                     TRISD           equ	3989	;# 
  3346   000F95                     DDRD            equ	3989	;# 
  3347   000F96                     TRISE           equ	3990	;# 
  3348   000F96                     DDRE            equ	3990	;# 
  3349   000F9B                     OSCTUNE         equ	3995	;# 
  3350   000F9D                     PIE1            equ	3997	;# 
  3351   000F9E                     PIR1            equ	3998	;# 
  3352   000F9F                     IPR1            equ	3999	;# 
  3353   000FA0                     PIE2            equ	4000	;# 
  3354   000FA1                     PIR2            equ	4001	;# 
  3355   000FA2                     IPR2            equ	4002	;# 
  3356   000FA6                     EECON1          equ	4006	;# 
  3357   000FA7                     EECON2          equ	4007	;# 
  3358   000FA8                     EEDATA          equ	4008	;# 
  3359   000FA9                     EEADR           equ	4009	;# 
  3360   000FAA                     EEADRH          equ	4010	;# 
  3361   000FAB                     RCSTA           equ	4011	;# 
  3362   000FAB                     RCSTA1          equ	4011	;# 
  3363   000FAC                     TXSTA           equ	4012	;# 
  3364   000FAC                     TXSTA1          equ	4012	;# 
  3365   000FAD                     TXREG           equ	4013	;# 
  3366   000FAD                     TXREG1          equ	4013	;# 
  3367   000FAE                     RCREG           equ	4014	;# 
  3368   000FAE                     RCREG1          equ	4014	;# 
  3369   000FAF                     SPBRG           equ	4015	;# 
  3370   000FAF                     SPBRG1          equ	4015	;# 
  3371   000FB0                     SPBRGH          equ	4016	;# 
  3372   000FB1                     T3CON           equ	4017	;# 
  3373   000FB2                     TMR3            equ	4018	;# 
  3374   000FB2                     TMR3L           equ	4018	;# 
  3375   000FB3                     TMR3H           equ	4019	;# 
  3376   000FB4                     CVRCON2         equ	4020	;# 
  3377   000FB5                     CVRCON          equ	4021	;# 
  3378   000FB6                     ECCP1AS         equ	4022	;# 
  3379   000FB7                     PWM1CON         equ	4023	;# 
  3380   000FB8                     BAUDCON         equ	4024	;# 
  3381   000FB8                     BAUDCTL         equ	4024	;# 
  3382   000FB9                     PSTRCON         equ	4025	;# 
  3383   000FBA                     CCP2CON         equ	4026	;# 
  3384   000FBB                     CCPR2           equ	4027	;# 
  3385   000FBB                     CCPR2L          equ	4027	;# 
  3386   000FBC                     CCPR2H          equ	4028	;# 
  3387   000FBD                     CCP1CON         equ	4029	;# 
  3388   000FBE                     CCPR1           equ	4030	;# 
  3389   000FBE                     CCPR1L          equ	4030	;# 
  3390   000FBF                     CCPR1H          equ	4031	;# 
  3391   000FC0                     ADCON2          equ	4032	;# 
  3392   000FC1                     ADCON1          equ	4033	;# 
  3393   000FC2                     ADCON0          equ	4034	;# 
  3394   000FC3                     ADRES           equ	4035	;# 
  3395   000FC3                     ADRESL          equ	4035	;# 
  3396   000FC4                     ADRESH          equ	4036	;# 
  3397   000FC5                     SSPCON2         equ	4037	;# 
  3398   000FC6                     SSPCON1         equ	4038	;# 
  3399   000FC7                     SSPSTAT         equ	4039	;# 
  3400   000FC8                     SSPADD          equ	4040	;# 
  3401   000FC9                     SSPBUF          equ	4041	;# 
  3402   000FCA                     T2CON           equ	4042	;# 
  3403   000FCB                     PR2             equ	4043	;# 
  3404   000FCB                     MEMCON          equ	4043	;# 
  3405   000FCC                     TMR2            equ	4044	;# 
  3406   000FCD                     T1CON           equ	4045	;# 
  3407   000FCE                     TMR1            equ	4046	;# 
  3408   000FCE                     TMR1L           equ	4046	;# 
  3409   000FCF                     TMR1H           equ	4047	;# 
  3410   000FD0                     RCON            equ	4048	;# 
  3411   000FD1                     WDTCON          equ	4049	;# 
  3412   000FD2                     HLVDCON         equ	4050	;# 
  3413   000FD2                     LVDCON          equ	4050	;# 
  3414   000FD3                     OSCCON          equ	4051	;# 
  3415   000FD5                     T0CON           equ	4053	;# 
  3416   000FD6                     TMR0            equ	4054	;# 
  3417   000FD6                     TMR0L           equ	4054	;# 
  3418   000FD7                     TMR0H           equ	4055	;# 
  3419   000FD8                     STATUS          equ	4056	;# 
  3420   000FD9                     FSR2            equ	4057	;# 
  3421   000FD9                     FSR2L           equ	4057	;# 
  3422   000FDA                     FSR2H           equ	4058	;# 
  3423   000FDB                     PLUSW2          equ	4059	;# 
  3424   000FDC                     PREINC2         equ	4060	;# 
  3425   000FDD                     POSTDEC2        equ	4061	;# 
  3426   000FDE                     POSTINC2        equ	4062	;# 
  3427   000FDF                     INDF2           equ	4063	;# 
  3428   000FE0                     BSR             equ	4064	;# 
  3429   000FE1                     FSR1            equ	4065	;# 
  3430   000FE1                     FSR1L           equ	4065	;# 
  3431   000FE2                     FSR1H           equ	4066	;# 
  3432   000FE3                     PLUSW1          equ	4067	;# 
  3433   000FE4                     PREINC1         equ	4068	;# 
  3434   000FE5                     POSTDEC1        equ	4069	;# 
  3435   000FE6                     POSTINC1        equ	4070	;# 
  3436   000FE7                     INDF1           equ	4071	;# 
  3437   000FE8                     WREG            equ	4072	;# 
  3438   000FE9                     FSR0            equ	4073	;# 
  3439   000FE9                     FSR0L           equ	4073	;# 
  3440   000FEA                     FSR0H           equ	4074	;# 
  3441   000FEB                     PLUSW0          equ	4075	;# 
  3442   000FEC                     PREINC0         equ	4076	;# 
  3443   000FED                     POSTDEC0        equ	4077	;# 
  3444   000FEE                     POSTINC0        equ	4078	;# 
  3445   000FEF                     INDF0           equ	4079	;# 
  3446   000FF0                     INTCON3         equ	4080	;# 
  3447   000FF1                     INTCON2         equ	4081	;# 
  3448   000FF2                     INTCON          equ	4082	;# 
  3449   000FF3                     PROD            equ	4083	;# 
  3450   000FF3                     PRODL           equ	4083	;# 
  3451   000FF4                     PRODH           equ	4084	;# 
  3452   000FF5                     TABLAT          equ	4085	;# 
  3453   000FF6                     TBLPTR          equ	4086	;# 
  3454   000FF6                     TBLPTRL         equ	4086	;# 
  3455   000FF7                     TBLPTRH         equ	4087	;# 
  3456   000FF8                     TBLPTRU         equ	4088	;# 
  3457   000FF9                     PCLAT           equ	4089	;# 
  3458   000FF9                     PC              equ	4089	;# 
  3459   000FF9                     PCL             equ	4089	;# 
  3460   000FFA                     PCLATH          equ	4090	;# 
  3461   000FFB                     PCLATU          equ	4091	;# 
  3462   000FFC                     STKPTR          equ	4092	;# 
  3463   000FFD                     TOS             equ	4093	;# 
  3464   000FFD                     TOSL            equ	4093	;# 
  3465   000FFE                     TOSH            equ	4094	;# 
  3466   000FFF                     TOSU            equ	4095	;# 
  3467   000F77                     SSPMSK          equ	3959	;# 
  3468   000F78                     SLRCON          equ	3960	;# 
  3469   000F79                     CM2CON1         equ	3961	;# 
  3470   000F7A                     CM2CON0         equ	3962	;# 
  3471   000F7B                     CM1CON0         equ	3963	;# 
  3472   000F7C                     WPUB            equ	3964	;# 
  3473   000F7D                     IOCB            equ	3965	;# 
  3474   000F7E                     ANSEL           equ	3966	;# 
  3475   000F7F                     ANSELH          equ	3967	;# 
  3476   000F80                     PORTA           equ	3968	;# 
  3477   000F81                     PORTB           equ	3969	;# 
  3478   000F82                     PORTC           equ	3970	;# 
  3479   000F83                     PORTD           equ	3971	;# 
  3480   000F84                     PORTE           equ	3972	;# 
  3481   000F89                     LATA            equ	3977	;# 
  3482   000F8A                     LATB            equ	3978	;# 
  3483   000F8B                     LATC            equ	3979	;# 
  3484   000F8C                     LATD            equ	3980	;# 
  3485   000F8D                     LATE            equ	3981	;# 
  3486   000F92                     TRISA           equ	3986	;# 
  3487   000F92                     DDRA            equ	3986	;# 
  3488   000F93                     TRISB           equ	3987	;# 
  3489   000F93                     DDRB            equ	3987	;# 
  3490   000F94                     TRISC           equ	3988	;# 
  3491   000F94                     DDRC            equ	3988	;# 
  3492   000F95                     TRISD           equ	3989	;# 
  3493   000F95                     DDRD            equ	3989	;# 
  3494   000F96                     TRISE           equ	3990	;# 
  3495   000F96                     DDRE            equ	3990	;# 
  3496   000F9B                     OSCTUNE         equ	3995	;# 
  3497   000F9D                     PIE1            equ	3997	;# 
  3498   000F9E                     PIR1            equ	3998	;# 
  3499   000F9F                     IPR1            equ	3999	;# 
  3500   000FA0                     PIE2            equ	4000	;# 
  3501   000FA1                     PIR2            equ	4001	;# 
  3502   000FA2                     IPR2            equ	4002	;# 
  3503   000FA6                     EECON1          equ	4006	;# 
  3504   000FA7                     EECON2          equ	4007	;# 
  3505   000FA8                     EEDATA          equ	4008	;# 
  3506   000FA9                     EEADR           equ	4009	;# 
  3507   000FAA                     EEADRH          equ	4010	;# 
  3508   000FAB                     RCSTA           equ	4011	;# 
  3509   000FAB                     RCSTA1          equ	4011	;# 
  3510   000FAC                     TXSTA           equ	4012	;# 
  3511   000FAC                     TXSTA1          equ	4012	;# 
  3512   000FAD                     TXREG           equ	4013	;# 
  3513   000FAD                     TXREG1          equ	4013	;# 
  3514   000FAE                     RCREG           equ	4014	;# 
  3515   000FAE                     RCREG1          equ	4014	;# 
  3516   000FAF                     SPBRG           equ	4015	;# 
  3517   000FAF                     SPBRG1          equ	4015	;# 
  3518   000FB0                     SPBRGH          equ	4016	;# 
  3519   000FB1                     T3CON           equ	4017	;# 
  3520   000FB2                     TMR3            equ	4018	;# 
  3521   000FB2                     TMR3L           equ	4018	;# 
  3522   000FB3                     TMR3H           equ	4019	;# 
  3523   000FB4                     CVRCON2         equ	4020	;# 
  3524   000FB5                     CVRCON          equ	4021	;# 
  3525   000FB6                     ECCP1AS         equ	4022	;# 
  3526   000FB7                     PWM1CON         equ	4023	;# 
  3527   000FB8                     BAUDCON         equ	4024	;# 
  3528   000FB8                     BAUDCTL         equ	4024	;# 
  3529   000FB9                     PSTRCON         equ	4025	;# 
  3530   000FBA                     CCP2CON         equ	4026	;# 
  3531   000FBB                     CCPR2           equ	4027	;# 
  3532   000FBB                     CCPR2L          equ	4027	;# 
  3533   000FBC                     CCPR2H          equ	4028	;# 
  3534   000FBD                     CCP1CON         equ	4029	;# 
  3535   000FBE                     CCPR1           equ	4030	;# 
  3536   000FBE                     CCPR1L          equ	4030	;# 
  3537   000FBF                     CCPR1H          equ	4031	;# 
  3538   000FC0                     ADCON2          equ	4032	;# 
  3539   000FC1                     ADCON1          equ	4033	;# 
  3540   000FC2                     ADCON0          equ	4034	;# 
  3541   000FC3                     ADRES           equ	4035	;# 
  3542   000FC3                     ADRESL          equ	4035	;# 
  3543   000FC4                     ADRESH          equ	4036	;# 
  3544   000FC5                     SSPCON2         equ	4037	;# 
  3545   000FC6                     SSPCON1         equ	4038	;# 
  3546   000FC7                     SSPSTAT         equ	4039	;# 
  3547   000FC8                     SSPADD          equ	4040	;# 
  3548   000FC9                     SSPBUF          equ	4041	;# 
  3549   000FCA                     T2CON           equ	4042	;# 
  3550   000FCB                     PR2             equ	4043	;# 
  3551   000FCB                     MEMCON          equ	4043	;# 
  3552   000FCC                     TMR2            equ	4044	;# 
  3553   000FCD                     T1CON           equ	4045	;# 
  3554   000FCE                     TMR1            equ	4046	;# 
  3555   000FCE                     TMR1L           equ	4046	;# 
  3556   000FCF                     TMR1H           equ	4047	;# 
  3557   000FD0                     RCON            equ	4048	;# 
  3558   000FD1                     WDTCON          equ	4049	;# 
  3559   000FD2                     HLVDCON         equ	4050	;# 
  3560   000FD2                     LVDCON          equ	4050	;# 
  3561   000FD3                     OSCCON          equ	4051	;# 
  3562   000FD5                     T0CON           equ	4053	;# 
  3563   000FD6                     TMR0            equ	4054	;# 
  3564   000FD6                     TMR0L           equ	4054	;# 
  3565   000FD7                     TMR0H           equ	4055	;# 
  3566   000FD8                     STATUS          equ	4056	;# 
  3567   000FD9                     FSR2            equ	4057	;# 
  3568   000FD9                     FSR2L           equ	4057	;# 
  3569   000FDA                     FSR2H           equ	4058	;# 
  3570   000FDB                     PLUSW2          equ	4059	;# 
  3571   000FDC                     PREINC2         equ	4060	;# 
  3572   000FDD                     POSTDEC2        equ	4061	;# 
  3573   000FDE                     POSTINC2        equ	4062	;# 
  3574   000FDF                     INDF2           equ	4063	;# 
  3575   000FE0                     BSR             equ	4064	;# 
  3576   000FE1                     FSR1            equ	4065	;# 
  3577   000FE1                     FSR1L           equ	4065	;# 
  3578   000FE2                     FSR1H           equ	4066	;# 
  3579   000FE3                     PLUSW1          equ	4067	;# 
  3580   000FE4                     PREINC1         equ	4068	;# 
  3581   000FE5                     POSTDEC1        equ	4069	;# 
  3582   000FE6                     POSTINC1        equ	4070	;# 
  3583   000FE7                     INDF1           equ	4071	;# 
  3584   000FE8                     WREG            equ	4072	;# 
  3585   000FE9                     FSR0            equ	4073	;# 
  3586   000FE9                     FSR0L           equ	4073	;# 
  3587   000FEA                     FSR0H           equ	4074	;# 
  3588   000FEB                     PLUSW0          equ	4075	;# 
  3589   000FEC                     PREINC0         equ	4076	;# 
  3590   000FED                     POSTDEC0        equ	4077	;# 
  3591   000FEE                     POSTINC0        equ	4078	;# 
  3592   000FEF                     INDF0           equ	4079	;# 
  3593   000FF0                     INTCON3         equ	4080	;# 
  3594   000FF1                     INTCON2         equ	4081	;# 
  3595   000FF2                     INTCON          equ	4082	;# 
  3596   000FF3                     PROD            equ	4083	;# 
  3597   000FF3                     PRODL           equ	4083	;# 
  3598   000FF4                     PRODH           equ	4084	;# 
  3599   000FF5                     TABLAT          equ	4085	;# 
  3600   000FF6                     TBLPTR          equ	4086	;# 
  3601   000FF6                     TBLPTRL         equ	4086	;# 
  3602   000FF7                     TBLPTRH         equ	4087	;# 
  3603   000FF8                     TBLPTRU         equ	4088	;# 
  3604   000FF9                     PCLAT           equ	4089	;# 
  3605   000FF9                     PC              equ	4089	;# 
  3606   000FF9                     PCL             equ	4089	;# 
  3607   000FFA                     PCLATH          equ	4090	;# 
  3608   000FFB                     PCLATU          equ	4091	;# 
  3609   000FFC                     STKPTR          equ	4092	;# 
  3610   000FFD                     TOS             equ	4093	;# 
  3611   000FFD                     TOSL            equ	4093	;# 
  3612   000FFE                     TOSH            equ	4094	;# 
  3613   000FFF                     TOSU            equ	4095	;# 
  3614   000F77                     SSPMSK          equ	3959	;# 
  3615   000F78                     SLRCON          equ	3960	;# 
  3616   000F79                     CM2CON1         equ	3961	;# 
  3617   000F7A                     CM2CON0         equ	3962	;# 
  3618   000F7B                     CM1CON0         equ	3963	;# 
  3619   000F7C                     WPUB            equ	3964	;# 
  3620   000F7D                     IOCB            equ	3965	;# 
  3621   000F7E                     ANSEL           equ	3966	;# 
  3622   000F7F                     ANSELH          equ	3967	;# 
  3623   000F80                     PORTA           equ	3968	;# 
  3624   000F81                     PORTB           equ	3969	;# 
  3625   000F82                     PORTC           equ	3970	;# 
  3626   000F83                     PORTD           equ	3971	;# 
  3627   000F84                     PORTE           equ	3972	;# 
  3628   000F89                     LATA            equ	3977	;# 
  3629   000F8A                     LATB            equ	3978	;# 
  3630   000F8B                     LATC            equ	3979	;# 
  3631   000F8C                     LATD            equ	3980	;# 
  3632   000F8D                     LATE            equ	3981	;# 
  3633   000F92                     TRISA           equ	3986	;# 
  3634   000F92                     DDRA            equ	3986	;# 
  3635   000F93                     TRISB           equ	3987	;# 
  3636   000F93                     DDRB            equ	3987	;# 
  3637   000F94                     TRISC           equ	3988	;# 
  3638   000F94                     DDRC            equ	3988	;# 
  3639   000F95                     TRISD           equ	3989	;# 
  3640   000F95                     DDRD            equ	3989	;# 
  3641   000F96                     TRISE           equ	3990	;# 
  3642   000F96                     DDRE            equ	3990	;# 
  3643   000F9B                     OSCTUNE         equ	3995	;# 
  3644   000F9D                     PIE1            equ	3997	;# 
  3645   000F9E                     PIR1            equ	3998	;# 
  3646   000F9F                     IPR1            equ	3999	;# 
  3647   000FA0                     PIE2            equ	4000	;# 
  3648   000FA1                     PIR2            equ	4001	;# 
  3649   000FA2                     IPR2            equ	4002	;# 
  3650   000FA6                     EECON1          equ	4006	;# 
  3651   000FA7                     EECON2          equ	4007	;# 
  3652   000FA8                     EEDATA          equ	4008	;# 
  3653   000FA9                     EEADR           equ	4009	;# 
  3654   000FAA                     EEADRH          equ	4010	;# 
  3655   000FAB                     RCSTA           equ	4011	;# 
  3656   000FAB                     RCSTA1          equ	4011	;# 
  3657   000FAC                     TXSTA           equ	4012	;# 
  3658   000FAC                     TXSTA1          equ	4012	;# 
  3659   000FAD                     TXREG           equ	4013	;# 
  3660   000FAD                     TXREG1          equ	4013	;# 
  3661   000FAE                     RCREG           equ	4014	;# 
  3662   000FAE                     RCREG1          equ	4014	;# 
  3663   000FAF                     SPBRG           equ	4015	;# 
  3664   000FAF                     SPBRG1          equ	4015	;# 
  3665   000FB0                     SPBRGH          equ	4016	;# 
  3666   000FB1                     T3CON           equ	4017	;# 
  3667   000FB2                     TMR3            equ	4018	;# 
  3668   000FB2                     TMR3L           equ	4018	;# 
  3669   000FB3                     TMR3H           equ	4019	;# 
  3670   000FB4                     CVRCON2         equ	4020	;# 
  3671   000FB5                     CVRCON          equ	4021	;# 
  3672   000FB6                     ECCP1AS         equ	4022	;# 
  3673   000FB7                     PWM1CON         equ	4023	;# 
  3674   000FB8                     BAUDCON         equ	4024	;# 
  3675   000FB8                     BAUDCTL         equ	4024	;# 
  3676   000FB9                     PSTRCON         equ	4025	;# 
  3677   000FBA                     CCP2CON         equ	4026	;# 
  3678   000FBB                     CCPR2           equ	4027	;# 
  3679   000FBB                     CCPR2L          equ	4027	;# 
  3680   000FBC                     CCPR2H          equ	4028	;# 
  3681   000FBD                     CCP1CON         equ	4029	;# 
  3682   000FBE                     CCPR1           equ	4030	;# 
  3683   000FBE                     CCPR1L          equ	4030	;# 
  3684   000FBF                     CCPR1H          equ	4031	;# 
  3685   000FC0                     ADCON2          equ	4032	;# 
  3686   000FC1                     ADCON1          equ	4033	;# 
  3687   000FC2                     ADCON0          equ	4034	;# 
  3688   000FC3                     ADRES           equ	4035	;# 
  3689   000FC3                     ADRESL          equ	4035	;# 
  3690   000FC4                     ADRESH          equ	4036	;# 
  3691   000FC5                     SSPCON2         equ	4037	;# 
  3692   000FC6                     SSPCON1         equ	4038	;# 
  3693   000FC7                     SSPSTAT         equ	4039	;# 
  3694   000FC8                     SSPADD          equ	4040	;# 
  3695   000FC9                     SSPBUF          equ	4041	;# 
  3696   000FCA                     T2CON           equ	4042	;# 
  3697   000FCB                     PR2             equ	4043	;# 
  3698   000FCB                     MEMCON          equ	4043	;# 
  3699   000FCC                     TMR2            equ	4044	;# 
  3700   000FCD                     T1CON           equ	4045	;# 
  3701   000FCE                     TMR1            equ	4046	;# 
  3702   000FCE                     TMR1L           equ	4046	;# 
  3703   000FCF                     TMR1H           equ	4047	;# 
  3704   000FD0                     RCON            equ	4048	;# 
  3705   000FD1                     WDTCON          equ	4049	;# 
  3706   000FD2                     HLVDCON         equ	4050	;# 
  3707   000FD2                     LVDCON          equ	4050	;# 
  3708   000FD3                     OSCCON          equ	4051	;# 
  3709   000FD5                     T0CON           equ	4053	;# 
  3710   000FD6                     TMR0            equ	4054	;# 
  3711   000FD6                     TMR0L           equ	4054	;# 
  3712   000FD7                     TMR0H           equ	4055	;# 
  3713   000FD8                     STATUS          equ	4056	;# 
  3714   000FD9                     FSR2            equ	4057	;# 
  3715   000FD9                     FSR2L           equ	4057	;# 
  3716   000FDA                     FSR2H           equ	4058	;# 
  3717   000FDB                     PLUSW2          equ	4059	;# 
  3718   000FDC                     PREINC2         equ	4060	;# 
  3719   000FDD                     POSTDEC2        equ	4061	;# 
  3720   000FDE                     POSTINC2        equ	4062	;# 
  3721   000FDF                     INDF2           equ	4063	;# 
  3722   000FE0                     BSR             equ	4064	;# 
  3723   000FE1                     FSR1            equ	4065	;# 
  3724   000FE1                     FSR1L           equ	4065	;# 
  3725   000FE2                     FSR1H           equ	4066	;# 
  3726   000FE3                     PLUSW1          equ	4067	;# 
  3727   000FE4                     PREINC1         equ	4068	;# 
  3728   000FE5                     POSTDEC1        equ	4069	;# 
  3729   000FE6                     POSTINC1        equ	4070	;# 
  3730   000FE7                     INDF1           equ	4071	;# 
  3731   000FE8                     WREG            equ	4072	;# 
  3732   000FE9                     FSR0            equ	4073	;# 
  3733   000FE9                     FSR0L           equ	4073	;# 
  3734   000FEA                     FSR0H           equ	4074	;# 
  3735   000FEB                     PLUSW0          equ	4075	;# 
  3736   000FEC                     PREINC0         equ	4076	;# 
  3737   000FED                     POSTDEC0        equ	4077	;# 
  3738   000FEE                     POSTINC0        equ	4078	;# 
  3739   000FEF                     INDF0           equ	4079	;# 
  3740   000FF0                     INTCON3         equ	4080	;# 
  3741   000FF1                     INTCON2         equ	4081	;# 
  3742   000FF2                     INTCON          equ	4082	;# 
  3743   000FF3                     PROD            equ	4083	;# 
  3744   000FF3                     PRODL           equ	4083	;# 
  3745   000FF4                     PRODH           equ	4084	;# 
  3746   000FF5                     TABLAT          equ	4085	;# 
  3747   000FF6                     TBLPTR          equ	4086	;# 
  3748   000FF6                     TBLPTRL         equ	4086	;# 
  3749   000FF7                     TBLPTRH         equ	4087	;# 
  3750   000FF8                     TBLPTRU         equ	4088	;# 
  3751   000FF9                     PCLAT           equ	4089	;# 
  3752   000FF9                     PC              equ	4089	;# 
  3753   000FF9                     PCL             equ	4089	;# 
  3754   000FFA                     PCLATH          equ	4090	;# 
  3755   000FFB                     PCLATU          equ	4091	;# 
  3756   000FFC                     STKPTR          equ	4092	;# 
  3757   000FFD                     TOS             equ	4093	;# 
  3758   000FFD                     TOSL            equ	4093	;# 
  3759   000FFE                     TOSH            equ	4094	;# 
  3760   000FFF                     TOSU            equ	4095	;# 
  3761   000F77                     SSPMSK          equ	3959	;# 
  3762   000F78                     SLRCON          equ	3960	;# 
  3763   000F79                     CM2CON1         equ	3961	;# 
  3764   000F7A                     CM2CON0         equ	3962	;# 
  3765   000F7B                     CM1CON0         equ	3963	;# 
  3766   000F7C                     WPUB            equ	3964	;# 
  3767   000F7D                     IOCB            equ	3965	;# 
  3768   000F7E                     ANSEL           equ	3966	;# 
  3769   000F7F                     ANSELH          equ	3967	;# 
  3770   000F80                     PORTA           equ	3968	;# 
  3771   000F81                     PORTB           equ	3969	;# 
  3772   000F82                     PORTC           equ	3970	;# 
  3773   000F83                     PORTD           equ	3971	;# 
  3774   000F84                     PORTE           equ	3972	;# 
  3775   000F89                     LATA            equ	3977	;# 
  3776   000F8A                     LATB            equ	3978	;# 
  3777   000F8B                     LATC            equ	3979	;# 
  3778   000F8C                     LATD            equ	3980	;# 
  3779   000F8D                     LATE            equ	3981	;# 
  3780   000F92                     TRISA           equ	3986	;# 
  3781   000F92                     DDRA            equ	3986	;# 
  3782   000F93                     TRISB           equ	3987	;# 
  3783   000F93                     DDRB            equ	3987	;# 
  3784   000F94                     TRISC           equ	3988	;# 
  3785   000F94                     DDRC            equ	3988	;# 
  3786   000F95                     TRISD           equ	3989	;# 
  3787   000F95                     DDRD            equ	3989	;# 
  3788   000F96                     TRISE           equ	3990	;# 
  3789   000F96                     DDRE            equ	3990	;# 
  3790   000F9B                     OSCTUNE         equ	3995	;# 
  3791   000F9D                     PIE1            equ	3997	;# 
  3792   000F9E                     PIR1            equ	3998	;# 
  3793   000F9F                     IPR1            equ	3999	;# 
  3794   000FA0                     PIE2            equ	4000	;# 
  3795   000FA1                     PIR2            equ	4001	;# 
  3796   000FA2                     IPR2            equ	4002	;# 
  3797   000FA6                     EECON1          equ	4006	;# 
  3798   000FA7                     EECON2          equ	4007	;# 
  3799   000FA8                     EEDATA          equ	4008	;# 
  3800   000FA9                     EEADR           equ	4009	;# 
  3801   000FAA                     EEADRH          equ	4010	;# 
  3802   000FAB                     RCSTA           equ	4011	;# 
  3803   000FAB                     RCSTA1          equ	4011	;# 
  3804   000FAC                     TXSTA           equ	4012	;# 
  3805   000FAC                     TXSTA1          equ	4012	;# 
  3806   000FAD                     TXREG           equ	4013	;# 
  3807   000FAD                     TXREG1          equ	4013	;# 
  3808   000FAE                     RCREG           equ	4014	;# 
  3809   000FAE                     RCREG1          equ	4014	;# 
  3810   000FAF                     SPBRG           equ	4015	;# 
  3811   000FAF                     SPBRG1          equ	4015	;# 
  3812   000FB0                     SPBRGH          equ	4016	;# 
  3813   000FB1                     T3CON           equ	4017	;# 
  3814   000FB2                     TMR3            equ	4018	;# 
  3815   000FB2                     TMR3L           equ	4018	;# 
  3816   000FB3                     TMR3H           equ	4019	;# 
  3817   000FB4                     CVRCON2         equ	4020	;# 
  3818   000FB5                     CVRCON          equ	4021	;# 
  3819   000FB6                     ECCP1AS         equ	4022	;# 
  3820   000FB7                     PWM1CON         equ	4023	;# 
  3821   000FB8                     BAUDCON         equ	4024	;# 
  3822   000FB8                     BAUDCTL         equ	4024	;# 
  3823   000FB9                     PSTRCON         equ	4025	;# 
  3824   000FBA                     CCP2CON         equ	4026	;# 
  3825   000FBB                     CCPR2           equ	4027	;# 
  3826   000FBB                     CCPR2L          equ	4027	;# 
  3827   000FBC                     CCPR2H          equ	4028	;# 
  3828   000FBD                     CCP1CON         equ	4029	;# 
  3829   000FBE                     CCPR1           equ	4030	;# 
  3830   000FBE                     CCPR1L          equ	4030	;# 
  3831   000FBF                     CCPR1H          equ	4031	;# 
  3832   000FC0                     ADCON2          equ	4032	;# 
  3833   000FC1                     ADCON1          equ	4033	;# 
  3834   000FC2                     ADCON0          equ	4034	;# 
  3835   000FC3                     ADRES           equ	4035	;# 
  3836   000FC3                     ADRESL          equ	4035	;# 
  3837   000FC4                     ADRESH          equ	4036	;# 
  3838   000FC5                     SSPCON2         equ	4037	;# 
  3839   000FC6                     SSPCON1         equ	4038	;# 
  3840   000FC7                     SSPSTAT         equ	4039	;# 
  3841   000FC8                     SSPADD          equ	4040	;# 
  3842   000FC9                     SSPBUF          equ	4041	;# 
  3843   000FCA                     T2CON           equ	4042	;# 
  3844   000FCB                     PR2             equ	4043	;# 
  3845   000FCB                     MEMCON          equ	4043	;# 
  3846   000FCC                     TMR2            equ	4044	;# 
  3847   000FCD                     T1CON           equ	4045	;# 
  3848   000FCE                     TMR1            equ	4046	;# 
  3849   000FCE                     TMR1L           equ	4046	;# 
  3850   000FCF                     TMR1H           equ	4047	;# 
  3851   000FD0                     RCON            equ	4048	;# 
  3852   000FD1                     WDTCON          equ	4049	;# 
  3853   000FD2                     HLVDCON         equ	4050	;# 
  3854   000FD2                     LVDCON          equ	4050	;# 
  3855   000FD3                     OSCCON          equ	4051	;# 
  3856   000FD5                     T0CON           equ	4053	;# 
  3857   000FD6                     TMR0            equ	4054	;# 
  3858   000FD6                     TMR0L           equ	4054	;# 
  3859   000FD7                     TMR0H           equ	4055	;# 
  3860   000FD8                     STATUS          equ	4056	;# 
  3861   000FD9                     FSR2            equ	4057	;# 
  3862   000FD9                     FSR2L           equ	4057	;# 
  3863   000FDA                     FSR2H           equ	4058	;# 
  3864   000FDB                     PLUSW2          equ	4059	;# 
  3865   000FDC                     PREINC2         equ	4060	;# 
  3866   000FDD                     POSTDEC2        equ	4061	;# 
  3867   000FDE                     POSTINC2        equ	4062	;# 
  3868   000FDF                     INDF2           equ	4063	;# 
  3869   000FE0                     BSR             equ	4064	;# 
  3870   000FE1                     FSR1            equ	4065	;# 
  3871   000FE1                     FSR1L           equ	4065	;# 
  3872   000FE2                     FSR1H           equ	4066	;# 
  3873   000FE3                     PLUSW1          equ	4067	;# 
  3874   000FE4                     PREINC1         equ	4068	;# 
  3875   000FE5                     POSTDEC1        equ	4069	;# 
  3876   000FE6                     POSTINC1        equ	4070	;# 
  3877   000FE7                     INDF1           equ	4071	;# 
  3878   000FE8                     WREG            equ	4072	;# 
  3879   000FE9                     FSR0            equ	4073	;# 
  3880   000FE9                     FSR0L           equ	4073	;# 
  3881   000FEA                     FSR0H           equ	4074	;# 
  3882   000FEB                     PLUSW0          equ	4075	;# 
  3883   000FEC                     PREINC0         equ	4076	;# 
  3884   000FED                     POSTDEC0        equ	4077	;# 
  3885   000FEE                     POSTINC0        equ	4078	;# 
  3886   000FEF                     INDF0           equ	4079	;# 
  3887   000FF0                     INTCON3         equ	4080	;# 
  3888   000FF1                     INTCON2         equ	4081	;# 
  3889   000FF2                     INTCON          equ	4082	;# 
  3890   000FF3                     PROD            equ	4083	;# 
  3891   000FF3                     PRODL           equ	4083	;# 
  3892   000FF4                     PRODH           equ	4084	;# 
  3893   000FF5                     TABLAT          equ	4085	;# 
  3894   000FF6                     TBLPTR          equ	4086	;# 
  3895   000FF6                     TBLPTRL         equ	4086	;# 
  3896   000FF7                     TBLPTRH         equ	4087	;# 
  3897   000FF8                     TBLPTRU         equ	4088	;# 
  3898   000FF9                     PCLAT           equ	4089	;# 
  3899   000FF9                     PC              equ	4089	;# 
  3900   000FF9                     PCL             equ	4089	;# 
  3901   000FFA                     PCLATH          equ	4090	;# 
  3902   000FFB                     PCLATU          equ	4091	;# 
  3903   000FFC                     STKPTR          equ	4092	;# 
  3904   000FFD                     TOS             equ	4093	;# 
  3905   000FFD                     TOSL            equ	4093	;# 
  3906   000FFE                     TOSH            equ	4094	;# 
  3907   000FFF                     TOSU            equ	4095	;# 
  3908   000F77                     SSPMSK          equ	3959	;# 
  3909   000F78                     SLRCON          equ	3960	;# 
  3910   000F79                     CM2CON1         equ	3961	;# 
  3911   000F7A                     CM2CON0         equ	3962	;# 
  3912   000F7B                     CM1CON0         equ	3963	;# 
  3913   000F7C                     WPUB            equ	3964	;# 
  3914   000F7D                     IOCB            equ	3965	;# 
  3915   000F7E                     ANSEL           equ	3966	;# 
  3916   000F7F                     ANSELH          equ	3967	;# 
  3917   000F80                     PORTA           equ	3968	;# 
  3918   000F81                     PORTB           equ	3969	;# 
  3919   000F82                     PORTC           equ	3970	;# 
  3920   000F83                     PORTD           equ	3971	;# 
  3921   000F84                     PORTE           equ	3972	;# 
  3922   000F89                     LATA            equ	3977	;# 
  3923   000F8A                     LATB            equ	3978	;# 
  3924   000F8B                     LATC            equ	3979	;# 
  3925   000F8C                     LATD            equ	3980	;# 
  3926   000F8D                     LATE            equ	3981	;# 
  3927   000F92                     TRISA           equ	3986	;# 
  3928   000F92                     DDRA            equ	3986	;# 
  3929   000F93                     TRISB           equ	3987	;# 
  3930   000F93                     DDRB            equ	3987	;# 
  3931   000F94                     TRISC           equ	3988	;# 
  3932   000F94                     DDRC            equ	3988	;# 
  3933   000F95                     TRISD           equ	3989	;# 
  3934   000F95                     DDRD            equ	3989	;# 
  3935   000F96                     TRISE           equ	3990	;# 
  3936   000F96                     DDRE            equ	3990	;# 
  3937   000F9B                     OSCTUNE         equ	3995	;# 
  3938   000F9D                     PIE1            equ	3997	;# 
  3939   000F9E                     PIR1            equ	3998	;# 
  3940   000F9F                     IPR1            equ	3999	;# 
  3941   000FA0                     PIE2            equ	4000	;# 
  3942   000FA1                     PIR2            equ	4001	;# 
  3943   000FA2                     IPR2            equ	4002	;# 
  3944   000FA6                     EECON1          equ	4006	;# 
  3945   000FA7                     EECON2          equ	4007	;# 
  3946   000FA8                     EEDATA          equ	4008	;# 
  3947   000FA9                     EEADR           equ	4009	;# 
  3948   000FAA                     EEADRH          equ	4010	;# 
  3949   000FAB                     RCSTA           equ	4011	;# 
  3950   000FAB                     RCSTA1          equ	4011	;# 
  3951   000FAC                     TXSTA           equ	4012	;# 
  3952   000FAC                     TXSTA1          equ	4012	;# 
  3953   000FAD                     TXREG           equ	4013	;# 
  3954   000FAD                     TXREG1          equ	4013	;# 
  3955   000FAE                     RCREG           equ	4014	;# 
  3956   000FAE                     RCREG1          equ	4014	;# 
  3957   000FAF                     SPBRG           equ	4015	;# 
  3958   000FAF                     SPBRG1          equ	4015	;# 
  3959   000FB0                     SPBRGH          equ	4016	;# 
  3960   000FB1                     T3CON           equ	4017	;# 
  3961   000FB2                     TMR3            equ	4018	;# 
  3962   000FB2                     TMR3L           equ	4018	;# 
  3963   000FB3                     TMR3H           equ	4019	;# 
  3964   000FB4                     CVRCON2         equ	4020	;# 
  3965   000FB5                     CVRCON          equ	4021	;# 
  3966   000FB6                     ECCP1AS         equ	4022	;# 
  3967   000FB7                     PWM1CON         equ	4023	;# 
  3968   000FB8                     BAUDCON         equ	4024	;# 
  3969   000FB8                     BAUDCTL         equ	4024	;# 
  3970   000FB9                     PSTRCON         equ	4025	;# 
  3971   000FBA                     CCP2CON         equ	4026	;# 
  3972   000FBB                     CCPR2           equ	4027	;# 
  3973   000FBB                     CCPR2L          equ	4027	;# 
  3974   000FBC                     CCPR2H          equ	4028	;# 
  3975   000FBD                     CCP1CON         equ	4029	;# 
  3976   000FBE                     CCPR1           equ	4030	;# 
  3977   000FBE                     CCPR1L          equ	4030	;# 
  3978   000FBF                     CCPR1H          equ	4031	;# 
  3979   000FC0                     ADCON2          equ	4032	;# 
  3980   000FC1                     ADCON1          equ	4033	;# 
  3981   000FC2                     ADCON0          equ	4034	;# 
  3982   000FC3                     ADRES           equ	4035	;# 
  3983   000FC3                     ADRESL          equ	4035	;# 
  3984   000FC4                     ADRESH          equ	4036	;# 
  3985   000FC5                     SSPCON2         equ	4037	;# 
  3986   000FC6                     SSPCON1         equ	4038	;# 
  3987   000FC7                     SSPSTAT         equ	4039	;# 
  3988   000FC8                     SSPADD          equ	4040	;# 
  3989   000FC9                     SSPBUF          equ	4041	;# 
  3990   000FCA                     T2CON           equ	4042	;# 
  3991   000FCB                     PR2             equ	4043	;# 
  3992   000FCB                     MEMCON          equ	4043	;# 
  3993   000FCC                     TMR2            equ	4044	;# 
  3994   000FCD                     T1CON           equ	4045	;# 
  3995   000FCE                     TMR1            equ	4046	;# 
  3996   000FCE                     TMR1L           equ	4046	;# 
  3997   000FCF                     TMR1H           equ	4047	;# 
  3998   000FD0                     RCON            equ	4048	;# 
  3999   000FD1                     WDTCON          equ	4049	;# 
  4000   000FD2                     HLVDCON         equ	4050	;# 
  4001   000FD2                     LVDCON          equ	4050	;# 
  4002   000FD3                     OSCCON          equ	4051	;# 
  4003   000FD5                     T0CON           equ	4053	;# 
  4004   000FD6                     TMR0            equ	4054	;# 
  4005   000FD6                     TMR0L           equ	4054	;# 
  4006   000FD7                     TMR0H           equ	4055	;# 
  4007   000FD8                     STATUS          equ	4056	;# 
  4008   000FD9                     FSR2            equ	4057	;# 
  4009   000FD9                     FSR2L           equ	4057	;# 
  4010   000FDA                     FSR2H           equ	4058	;# 
  4011   000FDB                     PLUSW2          equ	4059	;# 
  4012   000FDC                     PREINC2         equ	4060	;# 
  4013   000FDD                     POSTDEC2        equ	4061	;# 
  4014   000FDE                     POSTINC2        equ	4062	;# 
  4015   000FDF                     INDF2           equ	4063	;# 
  4016   000FE0                     BSR             equ	4064	;# 
  4017   000FE1                     FSR1            equ	4065	;# 
  4018   000FE1                     FSR1L           equ	4065	;# 
  4019   000FE2                     FSR1H           equ	4066	;# 
  4020   000FE3                     PLUSW1          equ	4067	;# 
  4021   000FE4                     PREINC1         equ	4068	;# 
  4022   000FE5                     POSTDEC1        equ	4069	;# 
  4023   000FE6                     POSTINC1        equ	4070	;# 
  4024   000FE7                     INDF1           equ	4071	;# 
  4025   000FE8                     WREG            equ	4072	;# 
  4026   000FE9                     FSR0            equ	4073	;# 
  4027   000FE9                     FSR0L           equ	4073	;# 
  4028   000FEA                     FSR0H           equ	4074	;# 
  4029   000FEB                     PLUSW0          equ	4075	;# 
  4030   000FEC                     PREINC0         equ	4076	;# 
  4031   000FED                     POSTDEC0        equ	4077	;# 
  4032   000FEE                     POSTINC0        equ	4078	;# 
  4033   000FEF                     INDF0           equ	4079	;# 
  4034   000FF0                     INTCON3         equ	4080	;# 
  4035   000FF1                     INTCON2         equ	4081	;# 
  4036   000FF2                     INTCON          equ	4082	;# 
  4037   000FF3                     PROD            equ	4083	;# 
  4038   000FF3                     PRODL           equ	4083	;# 
  4039   000FF4                     PRODH           equ	4084	;# 
  4040   000FF5                     TABLAT          equ	4085	;# 
  4041   000FF6                     TBLPTR          equ	4086	;# 
  4042   000FF6                     TBLPTRL         equ	4086	;# 
  4043   000FF7                     TBLPTRH         equ	4087	;# 
  4044   000FF8                     TBLPTRU         equ	4088	;# 
  4045   000FF9                     PCLAT           equ	4089	;# 
  4046   000FF9                     PC              equ	4089	;# 
  4047   000FF9                     PCL             equ	4089	;# 
  4048   000FFA                     PCLATH          equ	4090	;# 
  4049   000FFB                     PCLATU          equ	4091	;# 
  4050   000FFC                     STKPTR          equ	4092	;# 
  4051   000FFD                     TOS             equ	4093	;# 
  4052   000FFD                     TOSL            equ	4093	;# 
  4053   000FFE                     TOSH            equ	4094	;# 
  4054   000FFF                     TOSU            equ	4095	;# 
  4055   000F77                     SSPMSK          equ	3959	;# 
  4056   000F78                     SLRCON          equ	3960	;# 
  4057   000F79                     CM2CON1         equ	3961	;# 
  4058   000F7A                     CM2CON0         equ	3962	;# 
  4059   000F7B                     CM1CON0         equ	3963	;# 
  4060   000F7C                     WPUB            equ	3964	;# 
  4061   000F7D                     IOCB            equ	3965	;# 
  4062   000F7E                     ANSEL           equ	3966	;# 
  4063   000F7F                     ANSELH          equ	3967	;# 
  4064   000F80                     PORTA           equ	3968	;# 
  4065   000F81                     PORTB           equ	3969	;# 
  4066   000F82                     PORTC           equ	3970	;# 
  4067   000F83                     PORTD           equ	3971	;# 
  4068   000F84                     PORTE           equ	3972	;# 
  4069   000F89                     LATA            equ	3977	;# 
  4070   000F8A                     LATB            equ	3978	;# 
  4071   000F8B                     LATC            equ	3979	;# 
  4072   000F8C                     LATD            equ	3980	;# 
  4073   000F8D                     LATE            equ	3981	;# 
  4074   000F92                     TRISA           equ	3986	;# 
  4075   000F92                     DDRA            equ	3986	;# 
  4076   000F93                     TRISB           equ	3987	;# 
  4077   000F93                     DDRB            equ	3987	;# 
  4078   000F94                     TRISC           equ	3988	;# 
  4079   000F94                     DDRC            equ	3988	;# 
  4080   000F95                     TRISD           equ	3989	;# 
  4081   000F95                     DDRD            equ	3989	;# 
  4082   000F96                     TRISE           equ	3990	;# 
  4083   000F96                     DDRE            equ	3990	;# 
  4084   000F9B                     OSCTUNE         equ	3995	;# 
  4085   000F9D                     PIE1            equ	3997	;# 
  4086   000F9E                     PIR1            equ	3998	;# 
  4087   000F9F                     IPR1            equ	3999	;# 
  4088   000FA0                     PIE2            equ	4000	;# 
  4089   000FA1                     PIR2            equ	4001	;# 
  4090   000FA2                     IPR2            equ	4002	;# 
  4091   000FA6                     EECON1          equ	4006	;# 
  4092   000FA7                     EECON2          equ	4007	;# 
  4093   000FA8                     EEDATA          equ	4008	;# 
  4094   000FA9                     EEADR           equ	4009	;# 
  4095   000FAA                     EEADRH          equ	4010	;# 
  4096   000FAB                     RCSTA           equ	4011	;# 
  4097   000FAB                     RCSTA1          equ	4011	;# 
  4098   000FAC                     TXSTA           equ	4012	;# 
  4099   000FAC                     TXSTA1          equ	4012	;# 
  4100   000FAD                     TXREG           equ	4013	;# 
  4101   000FAD                     TXREG1          equ	4013	;# 
  4102   000FAE                     RCREG           equ	4014	;# 
  4103   000FAE                     RCREG1          equ	4014	;# 
  4104   000FAF                     SPBRG           equ	4015	;# 
  4105   000FAF                     SPBRG1          equ	4015	;# 
  4106   000FB0                     SPBRGH          equ	4016	;# 
  4107   000FB1                     T3CON           equ	4017	;# 
  4108   000FB2                     TMR3            equ	4018	;# 
  4109   000FB2                     TMR3L           equ	4018	;# 
  4110   000FB3                     TMR3H           equ	4019	;# 
  4111   000FB4                     CVRCON2         equ	4020	;# 
  4112   000FB5                     CVRCON          equ	4021	;# 
  4113   000FB6                     ECCP1AS         equ	4022	;# 
  4114   000FB7                     PWM1CON         equ	4023	;# 
  4115   000FB8                     BAUDCON         equ	4024	;# 
  4116   000FB8                     BAUDCTL         equ	4024	;# 
  4117   000FB9                     PSTRCON         equ	4025	;# 
  4118   000FBA                     CCP2CON         equ	4026	;# 
  4119   000FBB                     CCPR2           equ	4027	;# 
  4120   000FBB                     CCPR2L          equ	4027	;# 
  4121   000FBC                     CCPR2H          equ	4028	;# 
  4122   000FBD                     CCP1CON         equ	4029	;# 
  4123   000FBE                     CCPR1           equ	4030	;# 
  4124   000FBE                     CCPR1L          equ	4030	;# 
  4125   000FBF                     CCPR1H          equ	4031	;# 
  4126   000FC0                     ADCON2          equ	4032	;# 
  4127   000FC1                     ADCON1          equ	4033	;# 
  4128   000FC2                     ADCON0          equ	4034	;# 
  4129   000FC3                     ADRES           equ	4035	;# 
  4130   000FC3                     ADRESL          equ	4035	;# 
  4131   000FC4                     ADRESH          equ	4036	;# 
  4132   000FC5                     SSPCON2         equ	4037	;# 
  4133   000FC6                     SSPCON1         equ	4038	;# 
  4134   000FC7                     SSPSTAT         equ	4039	;# 
  4135   000FC8                     SSPADD          equ	4040	;# 
  4136   000FC9                     SSPBUF          equ	4041	;# 
  4137   000FCA                     T2CON           equ	4042	;# 
  4138   000FCB                     PR2             equ	4043	;# 
  4139   000FCB                     MEMCON          equ	4043	;# 
  4140   000FCC                     TMR2            equ	4044	;# 
  4141   000FCD                     T1CON           equ	4045	;# 
  4142   000FCE                     TMR1            equ	4046	;# 
  4143   000FCE                     TMR1L           equ	4046	;# 
  4144   000FCF                     TMR1H           equ	4047	;# 
  4145   000FD0                     RCON            equ	4048	;# 
  4146   000FD1                     WDTCON          equ	4049	;# 
  4147   000FD2                     HLVDCON         equ	4050	;# 
  4148   000FD2                     LVDCON          equ	4050	;# 
  4149   000FD3                     OSCCON          equ	4051	;# 
  4150   000FD5                     T0CON           equ	4053	;# 
  4151   000FD6                     TMR0            equ	4054	;# 
  4152   000FD6                     TMR0L           equ	4054	;# 
  4153   000FD7                     TMR0H           equ	4055	;# 
  4154   000FD8                     STATUS          equ	4056	;# 
  4155   000FD9                     FSR2            equ	4057	;# 
  4156   000FD9                     FSR2L           equ	4057	;# 
  4157   000FDA                     FSR2H           equ	4058	;# 
  4158   000FDB                     PLUSW2          equ	4059	;# 
  4159   000FDC                     PREINC2         equ	4060	;# 
  4160   000FDD                     POSTDEC2        equ	4061	;# 
  4161   000FDE                     POSTINC2        equ	4062	;# 
  4162   000FDF                     INDF2           equ	4063	;# 
  4163   000FE0                     BSR             equ	4064	;# 
  4164   000FE1                     FSR1            equ	4065	;# 
  4165   000FE1                     FSR1L           equ	4065	;# 
  4166   000FE2                     FSR1H           equ	4066	;# 
  4167   000FE3                     PLUSW1          equ	4067	;# 
  4168   000FE4                     PREINC1         equ	4068	;# 
  4169   000FE5                     POSTDEC1        equ	4069	;# 
  4170   000FE6                     POSTINC1        equ	4070	;# 
  4171   000FE7                     INDF1           equ	4071	;# 
  4172   000FE8                     WREG            equ	4072	;# 
  4173   000FE9                     FSR0            equ	4073	;# 
  4174   000FE9                     FSR0L           equ	4073	;# 
  4175   000FEA                     FSR0H           equ	4074	;# 
  4176   000FEB                     PLUSW0          equ	4075	;# 
  4177   000FEC                     PREINC0         equ	4076	;# 
  4178   000FED                     POSTDEC0        equ	4077	;# 
  4179   000FEE                     POSTINC0        equ	4078	;# 
  4180   000FEF                     INDF0           equ	4079	;# 
  4181   000FF0                     INTCON3         equ	4080	;# 
  4182   000FF1                     INTCON2         equ	4081	;# 
  4183   000FF2                     INTCON          equ	4082	;# 
  4184   000FF3                     PROD            equ	4083	;# 
  4185   000FF3                     PRODL           equ	4083	;# 
  4186   000FF4                     PRODH           equ	4084	;# 
  4187   000FF5                     TABLAT          equ	4085	;# 
  4188   000FF6                     TBLPTR          equ	4086	;# 
  4189   000FF6                     TBLPTRL         equ	4086	;# 
  4190   000FF7                     TBLPTRH         equ	4087	;# 
  4191   000FF8                     TBLPTRU         equ	4088	;# 
  4192   000FF9                     PCLAT           equ	4089	;# 
  4193   000FF9                     PC              equ	4089	;# 
  4194   000FF9                     PCL             equ	4089	;# 
  4195   000FFA                     PCLATH          equ	4090	;# 
  4196   000FFB                     PCLATU          equ	4091	;# 
  4197   000FFC                     STKPTR          equ	4092	;# 
  4198   000FFD                     TOS             equ	4093	;# 
  4199   000FFD                     TOSL            equ	4093	;# 
  4200   000FFE                     TOSH            equ	4094	;# 
  4201   000FFF                     TOSU            equ	4095	;# 
  4202   000F77                     SSPMSK          equ	3959	;# 
  4203   000F78                     SLRCON          equ	3960	;# 
  4204   000F79                     CM2CON1         equ	3961	;# 
  4205   000F7A                     CM2CON0         equ	3962	;# 
  4206   000F7B                     CM1CON0         equ	3963	;# 
  4207   000F7C                     WPUB            equ	3964	;# 
  4208   000F7D                     IOCB            equ	3965	;# 
  4209   000F7E                     ANSEL           equ	3966	;# 
  4210   000F7F                     ANSELH          equ	3967	;# 
  4211   000F80                     PORTA           equ	3968	;# 
  4212   000F81                     PORTB           equ	3969	;# 
  4213   000F82                     PORTC           equ	3970	;# 
  4214   000F83                     PORTD           equ	3971	;# 
  4215   000F84                     PORTE           equ	3972	;# 
  4216   000F89                     LATA            equ	3977	;# 
  4217   000F8A                     LATB            equ	3978	;# 
  4218   000F8B                     LATC            equ	3979	;# 
  4219   000F8C                     LATD            equ	3980	;# 
  4220   000F8D                     LATE            equ	3981	;# 
  4221   000F92                     TRISA           equ	3986	;# 
  4222   000F92                     DDRA            equ	3986	;# 
  4223   000F93                     TRISB           equ	3987	;# 
  4224   000F93                     DDRB            equ	3987	;# 
  4225   000F94                     TRISC           equ	3988	;# 
  4226   000F94                     DDRC            equ	3988	;# 
  4227   000F95                     TRISD           equ	3989	;# 
  4228   000F95                     DDRD            equ	3989	;# 
  4229   000F96                     TRISE           equ	3990	;# 
  4230   000F96                     DDRE            equ	3990	;# 
  4231   000F9B                     OSCTUNE         equ	3995	;# 
  4232   000F9D                     PIE1            equ	3997	;# 
  4233   000F9E                     PIR1            equ	3998	;# 
  4234   000F9F                     IPR1            equ	3999	;# 
  4235   000FA0                     PIE2            equ	4000	;# 
  4236   000FA1                     PIR2            equ	4001	;# 
  4237   000FA2                     IPR2            equ	4002	;# 
  4238   000FA6                     EECON1          equ	4006	;# 
  4239   000FA7                     EECON2          equ	4007	;# 
  4240   000FA8                     EEDATA          equ	4008	;# 
  4241   000FA9                     EEADR           equ	4009	;# 
  4242   000FAA                     EEADRH          equ	4010	;# 
  4243   000FAB                     RCSTA           equ	4011	;# 
  4244   000FAB                     RCSTA1          equ	4011	;# 
  4245   000FAC                     TXSTA           equ	4012	;# 
  4246   000FAC                     TXSTA1          equ	4012	;# 
  4247   000FAD                     TXREG           equ	4013	;# 
  4248   000FAD                     TXREG1          equ	4013	;# 
  4249   000FAE                     RCREG           equ	4014	;# 
  4250   000FAE                     RCREG1          equ	4014	;# 
  4251   000FAF                     SPBRG           equ	4015	;# 
  4252   000FAF                     SPBRG1          equ	4015	;# 
  4253   000FB0                     SPBRGH          equ	4016	;# 
  4254   000FB1                     T3CON           equ	4017	;# 
  4255   000FB2                     TMR3            equ	4018	;# 
  4256   000FB2                     TMR3L           equ	4018	;# 
  4257   000FB3                     TMR3H           equ	4019	;# 
  4258   000FB4                     CVRCON2         equ	4020	;# 
  4259   000FB5                     CVRCON          equ	4021	;# 
  4260   000FB6                     ECCP1AS         equ	4022	;# 
  4261   000FB7                     PWM1CON         equ	4023	;# 
  4262   000FB8                     BAUDCON         equ	4024	;# 
  4263   000FB8                     BAUDCTL         equ	4024	;# 
  4264   000FB9                     PSTRCON         equ	4025	;# 
  4265   000FBA                     CCP2CON         equ	4026	;# 
  4266   000FBB                     CCPR2           equ	4027	;# 
  4267   000FBB                     CCPR2L          equ	4027	;# 
  4268   000FBC                     CCPR2H          equ	4028	;# 
  4269   000FBD                     CCP1CON         equ	4029	;# 
  4270   000FBE                     CCPR1           equ	4030	;# 
  4271   000FBE                     CCPR1L          equ	4030	;# 
  4272   000FBF                     CCPR1H          equ	4031	;# 
  4273   000FC0                     ADCON2          equ	4032	;# 
  4274   000FC1                     ADCON1          equ	4033	;# 
  4275   000FC2                     ADCON0          equ	4034	;# 
  4276   000FC3                     ADRES           equ	4035	;# 
  4277   000FC3                     ADRESL          equ	4035	;# 
  4278   000FC4                     ADRESH          equ	4036	;# 
  4279   000FC5                     SSPCON2         equ	4037	;# 
  4280   000FC6                     SSPCON1         equ	4038	;# 
  4281   000FC7                     SSPSTAT         equ	4039	;# 
  4282   000FC8                     SSPADD          equ	4040	;# 
  4283   000FC9                     SSPBUF          equ	4041	;# 
  4284   000FCA                     T2CON           equ	4042	;# 
  4285   000FCB                     PR2             equ	4043	;# 
  4286   000FCB                     MEMCON          equ	4043	;# 
  4287   000FCC                     TMR2            equ	4044	;# 
  4288   000FCD                     T1CON           equ	4045	;# 
  4289   000FCE                     TMR1            equ	4046	;# 
  4290   000FCE                     TMR1L           equ	4046	;# 
  4291   000FCF                     TMR1H           equ	4047	;# 
  4292   000FD0                     RCON            equ	4048	;# 
  4293   000FD1                     WDTCON          equ	4049	;# 
  4294   000FD2                     HLVDCON         equ	4050	;# 
  4295   000FD2                     LVDCON          equ	4050	;# 
  4296   000FD3                     OSCCON          equ	4051	;# 
  4297   000FD5                     T0CON           equ	4053	;# 
  4298   000FD6                     TMR0            equ	4054	;# 
  4299   000FD6                     TMR0L           equ	4054	;# 
  4300   000FD7                     TMR0H           equ	4055	;# 
  4301   000FD8                     STATUS          equ	4056	;# 
  4302   000FD9                     FSR2            equ	4057	;# 
  4303   000FD9                     FSR2L           equ	4057	;# 
  4304   000FDA                     FSR2H           equ	4058	;# 
  4305   000FDB                     PLUSW2          equ	4059	;# 
  4306   000FDC                     PREINC2         equ	4060	;# 
  4307   000FDD                     POSTDEC2        equ	4061	;# 
  4308   000FDE                     POSTINC2        equ	4062	;# 
  4309   000FDF                     INDF2           equ	4063	;# 
  4310   000FE0                     BSR             equ	4064	;# 
  4311   000FE1                     FSR1            equ	4065	;# 
  4312   000FE1                     FSR1L           equ	4065	;# 
  4313   000FE2                     FSR1H           equ	4066	;# 
  4314   000FE3                     PLUSW1          equ	4067	;# 
  4315   000FE4                     PREINC1         equ	4068	;# 
  4316   000FE5                     POSTDEC1        equ	4069	;# 
  4317   000FE6                     POSTINC1        equ	4070	;# 
  4318   000FE7                     INDF1           equ	4071	;# 
  4319   000FE8                     WREG            equ	4072	;# 
  4320   000FE9                     FSR0            equ	4073	;# 
  4321   000FE9                     FSR0L           equ	4073	;# 
  4322   000FEA                     FSR0H           equ	4074	;# 
  4323   000FEB                     PLUSW0          equ	4075	;# 
  4324   000FEC                     PREINC0         equ	4076	;# 
  4325   000FED                     POSTDEC0        equ	4077	;# 
  4326   000FEE                     POSTINC0        equ	4078	;# 
  4327   000FEF                     INDF0           equ	4079	;# 
  4328   000FF0                     INTCON3         equ	4080	;# 
  4329   000FF1                     INTCON2         equ	4081	;# 
  4330   000FF2                     INTCON          equ	4082	;# 
  4331   000FF3                     PROD            equ	4083	;# 
  4332   000FF3                     PRODL           equ	4083	;# 
  4333   000FF4                     PRODH           equ	4084	;# 
  4334   000FF5                     TABLAT          equ	4085	;# 
  4335   000FF6                     TBLPTR          equ	4086	;# 
  4336   000FF6                     TBLPTRL         equ	4086	;# 
  4337   000FF7                     TBLPTRH         equ	4087	;# 
  4338   000FF8                     TBLPTRU         equ	4088	;# 
  4339   000FF9                     PCLAT           equ	4089	;# 
  4340   000FF9                     PC              equ	4089	;# 
  4341   000FF9                     PCL             equ	4089	;# 
  4342   000FFA                     PCLATH          equ	4090	;# 
  4343   000FFB                     PCLATU          equ	4091	;# 
  4344   000FFC                     STKPTR          equ	4092	;# 
  4345   000FFD                     TOS             equ	4093	;# 
  4346   000FFD                     TOSL            equ	4093	;# 
  4347   000FFE                     TOSH            equ	4094	;# 
  4348   000FFF                     TOSU            equ	4095	;# 
  4349   000F77                     SSPMSK          equ	3959	;# 
  4350   000F78                     SLRCON          equ	3960	;# 
  4351   000F79                     CM2CON1         equ	3961	;# 
  4352   000F7A                     CM2CON0         equ	3962	;# 
  4353   000F7B                     CM1CON0         equ	3963	;# 
  4354   000F7C                     WPUB            equ	3964	;# 
  4355   000F7D                     IOCB            equ	3965	;# 
  4356   000F7E                     ANSEL           equ	3966	;# 
  4357   000F7F                     ANSELH          equ	3967	;# 
  4358   000F80                     PORTA           equ	3968	;# 
  4359   000F81                     PORTB           equ	3969	;# 
  4360   000F82                     PORTC           equ	3970	;# 
  4361   000F83                     PORTD           equ	3971	;# 
  4362   000F84                     PORTE           equ	3972	;# 
  4363   000F89                     LATA            equ	3977	;# 
  4364   000F8A                     LATB            equ	3978	;# 
  4365   000F8B                     LATC            equ	3979	;# 
  4366   000F8C                     LATD            equ	3980	;# 
  4367   000F8D                     LATE            equ	3981	;# 
  4368   000F92                     TRISA           equ	3986	;# 
  4369   000F92                     DDRA            equ	3986	;# 
  4370   000F93                     TRISB           equ	3987	;# 
  4371   000F93                     DDRB            equ	3987	;# 
  4372   000F94                     TRISC           equ	3988	;# 
  4373   000F94                     DDRC            equ	3988	;# 
  4374   000F95                     TRISD           equ	3989	;# 
  4375   000F95                     DDRD            equ	3989	;# 
  4376   000F96                     TRISE           equ	3990	;# 
  4377   000F96                     DDRE            equ	3990	;# 
  4378   000F9B                     OSCTUNE         equ	3995	;# 
  4379   000F9D                     PIE1            equ	3997	;# 
  4380   000F9E                     PIR1            equ	3998	;# 
  4381   000F9F                     IPR1            equ	3999	;# 
  4382   000FA0                     PIE2            equ	4000	;# 
  4383   000FA1                     PIR2            equ	4001	;# 
  4384   000FA2                     IPR2            equ	4002	;# 
  4385   000FA6                     EECON1          equ	4006	;# 
  4386   000FA7                     EECON2          equ	4007	;# 
  4387   000FA8                     EEDATA          equ	4008	;# 
  4388   000FA9                     EEADR           equ	4009	;# 
  4389   000FAA                     EEADRH          equ	4010	;# 
  4390   000FAB                     RCSTA           equ	4011	;# 
  4391   000FAB                     RCSTA1          equ	4011	;# 
  4392   000FAC                     TXSTA           equ	4012	;# 
  4393   000FAC                     TXSTA1          equ	4012	;# 
  4394   000FAD                     TXREG           equ	4013	;# 
  4395   000FAD                     TXREG1          equ	4013	;# 
  4396   000FAE                     RCREG           equ	4014	;# 
  4397   000FAE                     RCREG1          equ	4014	;# 
  4398   000FAF                     SPBRG           equ	4015	;# 
  4399   000FAF                     SPBRG1          equ	4015	;# 
  4400   000FB0                     SPBRGH          equ	4016	;# 
  4401   000FB1                     T3CON           equ	4017	;# 
  4402   000FB2                     TMR3            equ	4018	;# 
  4403   000FB2                     TMR3L           equ	4018	;# 
  4404   000FB3                     TMR3H           equ	4019	;# 
  4405   000FB4                     CVRCON2         equ	4020	;# 
  4406   000FB5                     CVRCON          equ	4021	;# 
  4407   000FB6                     ECCP1AS         equ	4022	;# 
  4408   000FB7                     PWM1CON         equ	4023	;# 
  4409   000FB8                     BAUDCON         equ	4024	;# 
  4410   000FB8                     BAUDCTL         equ	4024	;# 
  4411   000FB9                     PSTRCON         equ	4025	;# 
  4412   000FBA                     CCP2CON         equ	4026	;# 
  4413   000FBB                     CCPR2           equ	4027	;# 
  4414   000FBB                     CCPR2L          equ	4027	;# 
  4415   000FBC                     CCPR2H          equ	4028	;# 
  4416   000FBD                     CCP1CON         equ	4029	;# 
  4417   000FBE                     CCPR1           equ	4030	;# 
  4418   000FBE                     CCPR1L          equ	4030	;# 
  4419   000FBF                     CCPR1H          equ	4031	;# 
  4420   000FC0                     ADCON2          equ	4032	;# 
  4421   000FC1                     ADCON1          equ	4033	;# 
  4422   000FC2                     ADCON0          equ	4034	;# 
  4423   000FC3                     ADRES           equ	4035	;# 
  4424   000FC3                     ADRESL          equ	4035	;# 
  4425   000FC4                     ADRESH          equ	4036	;# 
  4426   000FC5                     SSPCON2         equ	4037	;# 
  4427   000FC6                     SSPCON1         equ	4038	;# 
  4428   000FC7                     SSPSTAT         equ	4039	;# 
  4429   000FC8                     SSPADD          equ	4040	;# 
  4430   000FC9                     SSPBUF          equ	4041	;# 
  4431   000FCA                     T2CON           equ	4042	;# 
  4432   000FCB                     PR2             equ	4043	;# 
  4433   000FCB                     MEMCON          equ	4043	;# 
  4434   000FCC                     TMR2            equ	4044	;# 
  4435   000FCD                     T1CON           equ	4045	;# 
  4436   000FCE                     TMR1            equ	4046	;# 
  4437   000FCE                     TMR1L           equ	4046	;# 
  4438   000FCF                     TMR1H           equ	4047	;# 
  4439   000FD0                     RCON            equ	4048	;# 
  4440   000FD1                     WDTCON          equ	4049	;# 
  4441   000FD2                     HLVDCON         equ	4050	;# 
  4442   000FD2                     LVDCON          equ	4050	;# 
  4443   000FD3                     OSCCON          equ	4051	;# 
  4444   000FD5                     T0CON           equ	4053	;# 
  4445   000FD6                     TMR0            equ	4054	;# 
  4446   000FD6                     TMR0L           equ	4054	;# 
  4447   000FD7                     TMR0H           equ	4055	;# 
  4448   000FD8                     STATUS          equ	4056	;# 
  4449   000FD9                     FSR2            equ	4057	;# 
  4450   000FD9                     FSR2L           equ	4057	;# 
  4451   000FDA                     FSR2H           equ	4058	;# 
  4452   000FDB                     PLUSW2          equ	4059	;# 
  4453   000FDC                     PREINC2         equ	4060	;# 
  4454   000FDD                     POSTDEC2        equ	4061	;# 
  4455   000FDE                     POSTINC2        equ	4062	;# 
  4456   000FDF                     INDF2           equ	4063	;# 
  4457   000FE0                     BSR             equ	4064	;# 
  4458   000FE1                     FSR1            equ	4065	;# 
  4459   000FE1                     FSR1L           equ	4065	;# 
  4460   000FE2                     FSR1H           equ	4066	;# 
  4461   000FE3                     PLUSW1          equ	4067	;# 
  4462   000FE4                     PREINC1         equ	4068	;# 
  4463   000FE5                     POSTDEC1        equ	4069	;# 
  4464   000FE6                     POSTINC1        equ	4070	;# 
  4465   000FE7                     INDF1           equ	4071	;# 
  4466   000FE8                     WREG            equ	4072	;# 
  4467   000FE9                     FSR0            equ	4073	;# 
  4468   000FE9                     FSR0L           equ	4073	;# 
  4469   000FEA                     FSR0H           equ	4074	;# 
  4470   000FEB                     PLUSW0          equ	4075	;# 
  4471   000FEC                     PREINC0         equ	4076	;# 
  4472   000FED                     POSTDEC0        equ	4077	;# 
  4473   000FEE                     POSTINC0        equ	4078	;# 
  4474   000FEF                     INDF0           equ	4079	;# 
  4475   000FF0                     INTCON3         equ	4080	;# 
  4476   000FF1                     INTCON2         equ	4081	;# 
  4477   000FF2                     INTCON          equ	4082	;# 
  4478   000FF3                     PROD            equ	4083	;# 
  4479   000FF3                     PRODL           equ	4083	;# 
  4480   000FF4                     PRODH           equ	4084	;# 
  4481   000FF5                     TABLAT          equ	4085	;# 
  4482   000FF6                     TBLPTR          equ	4086	;# 
  4483   000FF6                     TBLPTRL         equ	4086	;# 
  4484   000FF7                     TBLPTRH         equ	4087	;# 
  4485   000FF8                     TBLPTRU         equ	4088	;# 
  4486   000FF9                     PCLAT           equ	4089	;# 
  4487   000FF9                     PC              equ	4089	;# 
  4488   000FF9                     PCL             equ	4089	;# 
  4489   000FFA                     PCLATH          equ	4090	;# 
  4490   000FFB                     PCLATU          equ	4091	;# 
  4491   000FFC                     STKPTR          equ	4092	;# 
  4492   000FFD                     TOS             equ	4093	;# 
  4493   000FFD                     TOSL            equ	4093	;# 
  4494   000FFE                     TOSH            equ	4094	;# 
  4495   000FFF                     TOSU            equ	4095	;# 
  4496   000F77                     SSPMSK          equ	3959	;# 
  4497   000F78                     SLRCON          equ	3960	;# 
  4498   000F79                     CM2CON1         equ	3961	;# 
  4499   000F7A                     CM2CON0         equ	3962	;# 
  4500   000F7B                     CM1CON0         equ	3963	;# 
  4501   000F7C                     WPUB            equ	3964	;# 
  4502   000F7D                     IOCB            equ	3965	;# 
  4503   000F7E                     ANSEL           equ	3966	;# 
  4504   000F7F                     ANSELH          equ	3967	;# 
  4505   000F80                     PORTA           equ	3968	;# 
  4506   000F81                     PORTB           equ	3969	;# 
  4507   000F82                     PORTC           equ	3970	;# 
  4508   000F83                     PORTD           equ	3971	;# 
  4509   000F84                     PORTE           equ	3972	;# 
  4510   000F89                     LATA            equ	3977	;# 
  4511   000F8A                     LATB            equ	3978	;# 
  4512   000F8B                     LATC            equ	3979	;# 
  4513   000F8C                     LATD            equ	3980	;# 
  4514   000F8D                     LATE            equ	3981	;# 
  4515   000F92                     TRISA           equ	3986	;# 
  4516   000F92                     DDRA            equ	3986	;# 
  4517   000F93                     TRISB           equ	3987	;# 
  4518   000F93                     DDRB            equ	3987	;# 
  4519   000F94                     TRISC           equ	3988	;# 
  4520   000F94                     DDRC            equ	3988	;# 
  4521   000F95                     TRISD           equ	3989	;# 
  4522   000F95                     DDRD            equ	3989	;# 
  4523   000F96                     TRISE           equ	3990	;# 
  4524   000F96                     DDRE            equ	3990	;# 
  4525   000F9B                     OSCTUNE         equ	3995	;# 
  4526   000F9D                     PIE1            equ	3997	;# 
  4527   000F9E                     PIR1            equ	3998	;# 
  4528   000F9F                     IPR1            equ	3999	;# 
  4529   000FA0                     PIE2            equ	4000	;# 
  4530   000FA1                     PIR2            equ	4001	;# 
  4531   000FA2                     IPR2            equ	4002	;# 
  4532   000FA6                     EECON1          equ	4006	;# 
  4533   000FA7                     EECON2          equ	4007	;# 
  4534   000FA8                     EEDATA          equ	4008	;# 
  4535   000FA9                     EEADR           equ	4009	;# 
  4536   000FAA                     EEADRH          equ	4010	;# 
  4537   000FAB                     RCSTA           equ	4011	;# 
  4538   000FAB                     RCSTA1          equ	4011	;# 
  4539   000FAC                     TXSTA           equ	4012	;# 
  4540   000FAC                     TXSTA1          equ	4012	;# 
  4541   000FAD                     TXREG           equ	4013	;# 
  4542   000FAD                     TXREG1          equ	4013	;# 
  4543   000FAE                     RCREG           equ	4014	;# 
  4544   000FAE                     RCREG1          equ	4014	;# 
  4545   000FAF                     SPBRG           equ	4015	;# 
  4546   000FAF                     SPBRG1          equ	4015	;# 
  4547   000FB0                     SPBRGH          equ	4016	;# 
  4548   000FB1                     T3CON           equ	4017	;# 
  4549   000FB2                     TMR3            equ	4018	;# 
  4550   000FB2                     TMR3L           equ	4018	;# 
  4551   000FB3                     TMR3H           equ	4019	;# 
  4552   000FB4                     CVRCON2         equ	4020	;# 
  4553   000FB5                     CVRCON          equ	4021	;# 
  4554   000FB6                     ECCP1AS         equ	4022	;# 
  4555   000FB7                     PWM1CON         equ	4023	;# 
  4556   000FB8                     BAUDCON         equ	4024	;# 
  4557   000FB8                     BAUDCTL         equ	4024	;# 
  4558   000FB9                     PSTRCON         equ	4025	;# 
  4559   000FBA                     CCP2CON         equ	4026	;# 
  4560   000FBB                     CCPR2           equ	4027	;# 
  4561   000FBB                     CCPR2L          equ	4027	;# 
  4562   000FBC                     CCPR2H          equ	4028	;# 
  4563   000FBD                     CCP1CON         equ	4029	;# 
  4564   000FBE                     CCPR1           equ	4030	;# 
  4565   000FBE                     CCPR1L          equ	4030	;# 
  4566   000FBF                     CCPR1H          equ	4031	;# 
  4567   000FC0                     ADCON2          equ	4032	;# 
  4568   000FC1                     ADCON1          equ	4033	;# 
  4569   000FC2                     ADCON0          equ	4034	;# 
  4570   000FC3                     ADRES           equ	4035	;# 
  4571   000FC3                     ADRESL          equ	4035	;# 
  4572   000FC4                     ADRESH          equ	4036	;# 
  4573   000FC5                     SSPCON2         equ	4037	;# 
  4574   000FC6                     SSPCON1         equ	4038	;# 
  4575   000FC7                     SSPSTAT         equ	4039	;# 
  4576   000FC8                     SSPADD          equ	4040	;# 
  4577   000FC9                     SSPBUF          equ	4041	;# 
  4578   000FCA                     T2CON           equ	4042	;# 
  4579   000FCB                     PR2             equ	4043	;# 
  4580   000FCB                     MEMCON          equ	4043	;# 
  4581   000FCC                     TMR2            equ	4044	;# 
  4582   000FCD                     T1CON           equ	4045	;# 
  4583   000FCE                     TMR1            equ	4046	;# 
  4584   000FCE                     TMR1L           equ	4046	;# 
  4585   000FCF                     TMR1H           equ	4047	;# 
  4586   000FD0                     RCON            equ	4048	;# 
  4587   000FD1                     WDTCON          equ	4049	;# 
  4588   000FD2                     HLVDCON         equ	4050	;# 
  4589   000FD2                     LVDCON          equ	4050	;# 
  4590   000FD3                     OSCCON          equ	4051	;# 
  4591   000FD5                     T0CON           equ	4053	;# 
  4592   000FD6                     TMR0            equ	4054	;# 
  4593   000FD6                     TMR0L           equ	4054	;# 
  4594   000FD7                     TMR0H           equ	4055	;# 
  4595   000FD8                     STATUS          equ	4056	;# 
  4596   000FD9                     FSR2            equ	4057	;# 
  4597   000FD9                     FSR2L           equ	4057	;# 
  4598   000FDA                     FSR2H           equ	4058	;# 
  4599   000FDB                     PLUSW2          equ	4059	;# 
  4600   000FDC                     PREINC2         equ	4060	;# 
  4601   000FDD                     POSTDEC2        equ	4061	;# 
  4602   000FDE                     POSTINC2        equ	4062	;# 
  4603   000FDF                     INDF2           equ	4063	;# 
  4604   000FE0                     BSR             equ	4064	;# 
  4605   000FE1                     FSR1            equ	4065	;# 
  4606   000FE1                     FSR1L           equ	4065	;# 
  4607   000FE2                     FSR1H           equ	4066	;# 
  4608   000FE3                     PLUSW1          equ	4067	;# 
  4609   000FE4                     PREINC1         equ	4068	;# 
  4610   000FE5                     POSTDEC1        equ	4069	;# 
  4611   000FE6                     POSTINC1        equ	4070	;# 
  4612   000FE7                     INDF1           equ	4071	;# 
  4613   000FE8                     WREG            equ	4072	;# 
  4614   000FE9                     FSR0            equ	4073	;# 
  4615   000FE9                     FSR0L           equ	4073	;# 
  4616   000FEA                     FSR0H           equ	4074	;# 
  4617   000FEB                     PLUSW0          equ	4075	;# 
  4618   000FEC                     PREINC0         equ	4076	;# 
  4619   000FED                     POSTDEC0        equ	4077	;# 
  4620   000FEE                     POSTINC0        equ	4078	;# 
  4621   000FEF                     INDF0           equ	4079	;# 
  4622   000FF0                     INTCON3         equ	4080	;# 
  4623   000FF1                     INTCON2         equ	4081	;# 
  4624   000FF2                     INTCON          equ	4082	;# 
  4625   000FF3                     PROD            equ	4083	;# 
  4626   000FF3                     PRODL           equ	4083	;# 
  4627   000FF4                     PRODH           equ	4084	;# 
  4628   000FF5                     TABLAT          equ	4085	;# 
  4629   000FF6                     TBLPTR          equ	4086	;# 
  4630   000FF6                     TBLPTRL         equ	4086	;# 
  4631   000FF7                     TBLPTRH         equ	4087	;# 
  4632   000FF8                     TBLPTRU         equ	4088	;# 
  4633   000FF9                     PCLAT           equ	4089	;# 
  4634   000FF9                     PC              equ	4089	;# 
  4635   000FF9                     PCL             equ	4089	;# 
  4636   000FFA                     PCLATH          equ	4090	;# 
  4637   000FFB                     PCLATU          equ	4091	;# 
  4638   000FFC                     STKPTR          equ	4092	;# 
  4639   000FFD                     TOS             equ	4093	;# 
  4640   000FFD                     TOSL            equ	4093	;# 
  4641   000FFE                     TOSH            equ	4094	;# 
  4642   000FFF                     TOSU            equ	4095	;# 
  4643   000F77                     SSPMSK          equ	3959	;# 
  4644   000F78                     SLRCON          equ	3960	;# 
  4645   000F79                     CM2CON1         equ	3961	;# 
  4646   000F7A                     CM2CON0         equ	3962	;# 
  4647   000F7B                     CM1CON0         equ	3963	;# 
  4648   000F7C                     WPUB            equ	3964	;# 
  4649   000F7D                     IOCB            equ	3965	;# 
  4650   000F7E                     ANSEL           equ	3966	;# 
  4651   000F7F                     ANSELH          equ	3967	;# 
  4652   000F80                     PORTA           equ	3968	;# 
  4653   000F81                     PORTB           equ	3969	;# 
  4654   000F82                     PORTC           equ	3970	;# 
  4655   000F83                     PORTD           equ	3971	;# 
  4656   000F84                     PORTE           equ	3972	;# 
  4657   000F89                     LATA            equ	3977	;# 
  4658   000F8A                     LATB            equ	3978	;# 
  4659   000F8B                     LATC            equ	3979	;# 
  4660   000F8C                     LATD            equ	3980	;# 
  4661   000F8D                     LATE            equ	3981	;# 
  4662   000F92                     TRISA           equ	3986	;# 
  4663   000F92                     DDRA            equ	3986	;# 
  4664   000F93                     TRISB           equ	3987	;# 
  4665   000F93                     DDRB            equ	3987	;# 
  4666   000F94                     TRISC           equ	3988	;# 
  4667   000F94                     DDRC            equ	3988	;# 
  4668   000F95                     TRISD           equ	3989	;# 
  4669   000F95                     DDRD            equ	3989	;# 
  4670   000F96                     TRISE           equ	3990	;# 
  4671   000F96                     DDRE            equ	3990	;# 
  4672   000F9B                     OSCTUNE         equ	3995	;# 
  4673   000F9D                     PIE1            equ	3997	;# 
  4674   000F9E                     PIR1            equ	3998	;# 
  4675   000F9F                     IPR1            equ	3999	;# 
  4676   000FA0                     PIE2            equ	4000	;# 
  4677   000FA1                     PIR2            equ	4001	;# 
  4678   000FA2                     IPR2            equ	4002	;# 
  4679   000FA6                     EECON1          equ	4006	;# 
  4680   000FA7                     EECON2          equ	4007	;# 
  4681   000FA8                     EEDATA          equ	4008	;# 
  4682   000FA9                     EEADR           equ	4009	;# 
  4683   000FAA                     EEADRH          equ	4010	;# 
  4684   000FAB                     RCSTA           equ	4011	;# 
  4685   000FAB                     RCSTA1          equ	4011	;# 
  4686   000FAC                     TXSTA           equ	4012	;# 
  4687   000FAC                     TXSTA1          equ	4012	;# 
  4688   000FAD                     TXREG           equ	4013	;# 
  4689   000FAD                     TXREG1          equ	4013	;# 
  4690   000FAE                     RCREG           equ	4014	;# 
  4691   000FAE                     RCREG1          equ	4014	;# 
  4692   000FAF                     SPBRG           equ	4015	;# 
  4693   000FAF                     SPBRG1          equ	4015	;# 
  4694   000FB0                     SPBRGH          equ	4016	;# 
  4695   000FB1                     T3CON           equ	4017	;# 
  4696   000FB2                     TMR3            equ	4018	;# 
  4697   000FB2                     TMR3L           equ	4018	;# 
  4698   000FB3                     TMR3H           equ	4019	;# 
  4699   000FB4                     CVRCON2         equ	4020	;# 
  4700   000FB5                     CVRCON          equ	4021	;# 
  4701   000FB6                     ECCP1AS         equ	4022	;# 
  4702   000FB7                     PWM1CON         equ	4023	;# 
  4703   000FB8                     BAUDCON         equ	4024	;# 
  4704   000FB8                     BAUDCTL         equ	4024	;# 
  4705   000FB9                     PSTRCON         equ	4025	;# 
  4706   000FBA                     CCP2CON         equ	4026	;# 
  4707   000FBB                     CCPR2           equ	4027	;# 
  4708   000FBB                     CCPR2L          equ	4027	;# 
  4709   000FBC                     CCPR2H          equ	4028	;# 
  4710   000FBD                     CCP1CON         equ	4029	;# 
  4711   000FBE                     CCPR1           equ	4030	;# 
  4712   000FBE                     CCPR1L          equ	4030	;# 
  4713   000FBF                     CCPR1H          equ	4031	;# 
  4714   000FC0                     ADCON2          equ	4032	;# 
  4715   000FC1                     ADCON1          equ	4033	;# 
  4716   000FC2                     ADCON0          equ	4034	;# 
  4717   000FC3                     ADRES           equ	4035	;# 
  4718   000FC3                     ADRESL          equ	4035	;# 
  4719   000FC4                     ADRESH          equ	4036	;# 
  4720   000FC5                     SSPCON2         equ	4037	;# 
  4721   000FC6                     SSPCON1         equ	4038	;# 
  4722   000FC7                     SSPSTAT         equ	4039	;# 
  4723   000FC8                     SSPADD          equ	4040	;# 
  4724   000FC9                     SSPBUF          equ	4041	;# 
  4725   000FCA                     T2CON           equ	4042	;# 
  4726   000FCB                     PR2             equ	4043	;# 
  4727   000FCB                     MEMCON          equ	4043	;# 
  4728   000FCC                     TMR2            equ	4044	;# 
  4729   000FCD                     T1CON           equ	4045	;# 
  4730   000FCE                     TMR1            equ	4046	;# 
  4731   000FCE                     TMR1L           equ	4046	;# 
  4732   000FCF                     TMR1H           equ	4047	;# 
  4733   000FD0                     RCON            equ	4048	;# 
  4734   000FD1                     WDTCON          equ	4049	;# 
  4735   000FD2                     HLVDCON         equ	4050	;# 
  4736   000FD2                     LVDCON          equ	4050	;# 
  4737   000FD3                     OSCCON          equ	4051	;# 
  4738   000FD5                     T0CON           equ	4053	;# 
  4739   000FD6                     TMR0            equ	4054	;# 
  4740   000FD6                     TMR0L           equ	4054	;# 
  4741   000FD7                     TMR0H           equ	4055	;# 
  4742   000FD8                     STATUS          equ	4056	;# 
  4743   000FD9                     FSR2            equ	4057	;# 
  4744   000FD9                     FSR2L           equ	4057	;# 
  4745   000FDA                     FSR2H           equ	4058	;# 
  4746   000FDB                     PLUSW2          equ	4059	;# 
  4747   000FDC                     PREINC2         equ	4060	;# 
  4748   000FDD                     POSTDEC2        equ	4061	;# 
  4749   000FDE                     POSTINC2        equ	4062	;# 
  4750   000FDF                     INDF2           equ	4063	;# 
  4751   000FE0                     BSR             equ	4064	;# 
  4752   000FE1                     FSR1            equ	4065	;# 
  4753   000FE1                     FSR1L           equ	4065	;# 
  4754   000FE2                     FSR1H           equ	4066	;# 
  4755   000FE3                     PLUSW1          equ	4067	;# 
  4756   000FE4                     PREINC1         equ	4068	;# 
  4757   000FE5                     POSTDEC1        equ	4069	;# 
  4758   000FE6                     POSTINC1        equ	4070	;# 
  4759   000FE7                     INDF1           equ	4071	;# 
  4760   000FE8                     WREG            equ	4072	;# 
  4761   000FE9                     FSR0            equ	4073	;# 
  4762   000FE9                     FSR0L           equ	4073	;# 
  4763   000FEA                     FSR0H           equ	4074	;# 
  4764   000FEB                     PLUSW0          equ	4075	;# 
  4765   000FEC                     PREINC0         equ	4076	;# 
  4766   000FED                     POSTDEC0        equ	4077	;# 
  4767   000FEE                     POSTINC0        equ	4078	;# 
  4768   000FEF                     INDF0           equ	4079	;# 
  4769   000FF0                     INTCON3         equ	4080	;# 
  4770   000FF1                     INTCON2         equ	4081	;# 
  4771   000FF2                     INTCON          equ	4082	;# 
  4772   000FF3                     PROD            equ	4083	;# 
  4773   000FF3                     PRODL           equ	4083	;# 
  4774   000FF4                     PRODH           equ	4084	;# 
  4775   000FF5                     TABLAT          equ	4085	;# 
  4776   000FF6                     TBLPTR          equ	4086	;# 
  4777   000FF6                     TBLPTRL         equ	4086	;# 
  4778   000FF7                     TBLPTRH         equ	4087	;# 
  4779   000FF8                     TBLPTRU         equ	4088	;# 
  4780   000FF9                     PCLAT           equ	4089	;# 
  4781   000FF9                     PC              equ	4089	;# 
  4782   000FF9                     PCL             equ	4089	;# 
  4783   000FFA                     PCLATH          equ	4090	;# 
  4784   000FFB                     PCLATU          equ	4091	;# 
  4785   000FFC                     STKPTR          equ	4092	;# 
  4786   000FFD                     TOS             equ	4093	;# 
  4787   000FFD                     TOSL            equ	4093	;# 
  4788   000FFE                     TOSH            equ	4094	;# 
  4789   000FFF                     TOSU            equ	4095	;# 
  4790                           
  4791                           	psect	idataCOMRAM
  4792   005564                     __pidataCOMRAM:
  4793                           	callstack 0
  4794                           
  4795                           ;initializer for _curserPos
  4796   005564  09                 	db	9
  4797                           
  4798                           ;initializer for _RB7_Flag
  4799   005565  01                 	db	1
  4800                           
  4801                           ;initializer for _RB6_Flag
  4802   005566  01                 	db	1
  4803                           
  4804                           ;initializer for _RB5_Flag
  4805   005567  01                 	db	1
  4806                           
  4807                           ;initializer for _RB4_Flag
  4808   005568  01                 	db	1
  4809                           
  4810                           ;initializer for _LCD_1
  4811   005569  1B                 	db	27
  4812   00556A  04                 	db	4
  4813   00556B  23                 	db	35
  4814   00556C  2B                 	db	43
  4815   00556D  33                 	db	51
  4816   00556E  3B                 	db	59
  4817                           
  4818                           ;initializer for _Buzz
  4819   00556F  14                 	db	20
  4820                           
  4821                           	psect	idataBANK1
  4822   005006                     __pidataBANK1:
  4823                           	callstack 0
  4824                           
  4825                           ;initializer for _btn_value
  4826   005006  37                 	db	55
  4827   005007  38                 	db	56
  4828   005008  39                 	db	57
  4829   005009  2F                 	db	47
  4830   00500A  34                 	db	52
  4831   00500B  35                 	db	53
  4832   00500C  36                 	db	54
  4833   00500D  2A                 	db	42
  4834   00500E  31                 	db	49
  4835   00500F  32                 	db	50
  4836   005010  33                 	db	51
  4837   005011  2D                 	db	45
  4838   005012  23                 	db	35
  4839   005013  30                 	db	48
  4840   005014  3D                 	db	61
  4841   005015  2B                 	db	43
  4842                           
  4843                           ;initializer for _port_registers
  4844   005016  80                 	db	128
  4845   005017  81                 	db	129
  4846   005018  82                 	db	130
  4847   005019  83                 	db	131
  4848   00501A  84                 	db	132
  4849                           
  4850                           ;initializer for _lat_registers
  4851   00501B  89                 	db	137
  4852   00501C  8A                 	db	138
  4853   00501D  8B                 	db	139
  4854   00501E  8C                 	db	140
  4855   00501F  8D                 	db	141
  4856                           
  4857                           ;initializer for _tris_registers
  4858   005020  92                 	db	146
  4859   005021  93                 	db	147
  4860   005022  94                 	db	148
  4861   005023  95                 	db	149
  4862   005024  96                 	db	150
  4863                           
  4864                           ;initializer for _UART_obj
  4865   005025  2580               	dw	9600
  4866   005027  0000               	dw	0
  4867   005029  01                 	db	1
  4868   00502A  00                 	db	0
  4869   00502B  01                 	db	1
  4870   00502C  00                 	db	0
  4871   00502D  00                 	db	0
  4872   00502E  00                 	db	0
  4873   00502F  00                 	db	0
  4874   005030  00                 	db	0
  4875   005031  00                 	db	0
  4876   005032  00                 	db	0
  4877   005033  00                 	db	0
  4878   005034  00                 	db	0
  4879   005035  00                 	db	0
  4880                           
  4881                           ;initializer for _ADC_LDR
  4882   005036  00                 	db	0
  4883   005037  00                 	db	0
  4884   005038  00                 	db	0
  4885   005039  00                 	db	0
  4886   00503A  05                 	db	5
  4887   00503B  03                 	db	3
  4888   00503C  00                 	db	0
  4889   00503D  01                 	db	1
  4890                           
  4891                           ;initializer for _keypad_1
  4892   00503E  02                 	db	2
  4893   00503F  0A                 	db	10
  4894   005040  12                 	db	18
  4895   005041  2A                 	db	42
  4896   005042  43                 	db	67
  4897   005043  4B                 	db	75
  4898   005044  53                 	db	83
  4899   005045  4C                 	db	76
  4900                           
  4901                           ;initializer for _timer0_1
  4902   005046  F8                 	db	low _Timer0_DefaultInterruptHandler
  4903   005047  3A                 	db	high _Timer0_DefaultInterruptHandler
  4904   005048  01                 	db	1
  4905   005049  03                 	db	3
  4906   00504A  0BDC               	dw	3036
  4907   00504C  04                 	db	4
  4908                           
  4909                           	psect	smallconst
  4910   001000                     __psmallconst:
  4911                           	callstack 0
  4912   001000  00                 	db	0
  4913   001001                     _i2c_fsmStateTable:
  4914                           	callstack 0
  4915   001001  86                 	db	low _I2C_DO_IDLE
  4916   001002  55                 	db	high _I2C_DO_IDLE
  4917   001003  1C                 	db	low _I2C_DO_SEND_ADR_READ
  4918   001004  55                 	db	high _I2C_DO_SEND_ADR_READ
  4919   001005  3A                 	db	low _I2C_DO_SEND_ADR_WRITE
  4920   001006  55                 	db	high _I2C_DO_SEND_ADR_WRITE
  4921   001007  BC                 	db	low _I2C_DO_TX
  4922   001008  3B                 	db	high _I2C_DO_TX
  4923   001009  BE                 	db	low _I2C_DO_RX
  4924   00100A  40                 	db	high _I2C_DO_RX
  4925   00100B  70                 	db	low _I2C_DO_RCEN
  4926   00100C  55                 	db	high _I2C_DO_RCEN
  4927   00100D  7A                 	db	low _I2C_DO_TX_EMPTY
  4928   00100E  47                 	db	high _I2C_DO_TX_EMPTY
  4929   00100F  DA                 	db	low _I2C_DO_SEND_RESTART_READ
  4930   001010  55                 	db	high _I2C_DO_SEND_RESTART_READ
  4931   001011  D2                 	db	low _I2C_DO_SEND_RESTART_WRITE
  4932   001012  55                 	db	high _I2C_DO_SEND_RESTART_WRITE
  4933   001013  CA                 	db	low _I2C_DO_SEND_RESTART
  4934   001014  55                 	db	high _I2C_DO_SEND_RESTART
  4935   001015  C2                 	db	low _I2C_DO_SEND_STOP
  4936   001016  55                 	db	high _I2C_DO_SEND_STOP
  4937   001017  BA                 	db	low _I2C_DO_RX_ACK
  4938   001018  55                 	db	high _I2C_DO_RX_ACK
  4939   001019  B2                 	db	low _I2C_DO_RX_NACK_STOP
  4940   00101A  55                 	db	high _I2C_DO_RX_NACK_STOP
  4941   00101B  AA                 	db	low _I2C_DO_RX_NACK_RESTART
  4942   00101C  55                 	db	high _I2C_DO_RX_NACK_RESTART
  4943   00101D  7C                 	db	low _I2C_DO_RESET
  4944   00101E  55                 	db	high _I2C_DO_RESET
  4945   00101F  34                 	db	low _I2C_DO_ADDRESS_NACK
  4946   001020  4C                 	db	high _I2C_DO_ADDRESS_NACK
  4947   001021                     __end_of_i2c_fsmStateTable:
  4948                           	callstack 0
  4949   001021                     STR_5:
  4950   001021  53                 	db	83	;'S'
  4951   001022  74                 	db	116	;'t'
  4952   001023  6F                 	db	111	;'o'
  4953   001024  70                 	db	112	;'p'
  4954   001025  20                 	db	32
  4955   001026  57                 	db	87	;'W'
  4956   001027  61                 	db	97	;'a'
  4957   001028  74                 	db	116	;'t'
  4958   001029  63                 	db	99	;'c'
  4959   00102A  68                 	db	104	;'h'
  4960   00102B  00                 	db	0
  4961   00102C                     STR_8:
  4962   00102C  31                 	db	49	;'1'
  4963   00102D  3A                 	db	58	;':'
  4964   00102E  20                 	db	32
  4965   00102F  43                 	db	67	;'C'
  4966   001030  6C                 	db	108	;'l'
  4967   001031  6F                 	db	111	;'o'
  4968   001032  63                 	db	99	;'c'
  4969   001033  6B                 	db	107	;'k'
  4970   001034  00                 	db	0
  4971   001035                     STR_9:
  4972   001035  32                 	db	50	;'2'
  4973   001036  3A                 	db	58	;':'
  4974   001037  20                 	db	32
  4975   001038  41                 	db	65	;'A'
  4976   001039  6C                 	db	108	;'l'
  4977   00103A  61                 	db	97	;'a'
  4978   00103B  72                 	db	114	;'r'
  4979   00103C  6D                 	db	109	;'m'
  4980   00103D  00                 	db	0
  4981   00103E                     STR_6:
  4982   00103E  31                 	db	49	;'1'
  4983   00103F  3A                 	db	58	;':'
  4984   001040  20                 	db	32
  4985   001041  42                 	db	66	;'B'
  4986   001042  61                 	db	97	;'a'
  4987   001043  63                 	db	99	;'c'
  4988   001044  6B                 	db	107	;'k'
  4989   001045  00                 	db	0
  4990   001046                     STR_4:
  4991   001046  44                 	db	68	;'D'
  4992   001047  61                 	db	97	;'a'
  4993   001048  74                 	db	116	;'t'
  4994   001049  65                 	db	101	;'e'
  4995   00104A  3A                 	db	58	;':'
  4996   00104B  20                 	db	32
  4997   00104C  00                 	db	0
  4998   00104D                     STR_1:
  4999   00104D  25                 	db	37
  5000   00104E  69                 	db	105	;'i'
  5001   00104F  00                 	db	0
  5002   00103E                     STR_7           equ	STR_6
  5003   00104D                     STR_2           equ	STR_1
  5004   00104D                     STR_3           equ	STR_1
  5005   001050  00                 	db	0	; dummy byte at the end
  5006   000003                     __activetblptr  equ	3
  5007                           
  5008                           	psect	nvCOMRAM
  5009   00003E                     __pnvCOMRAM:
  5010                           	callstack 0
  5011   00003E                     _TemperatureSensor_TC74_Read_Value:
  5012                           	callstack 0
  5013   00003E                     	ds	1
  5014                           
  5015                           	psect	nvBANK1
  5016   000196                     __pnvBANK1:
  5017                           	callstack 0
  5018   000196                     _ret:
  5019                           	callstack 0
  5020   000196                     	ds	1
  5021   007CA3                     _TRISC3         set	31907
  5022   007C95                     _TRISA5         set	31893
  5023   007CA4                     _TRISC4         set	31908
  5024   007CA5                     _TRISC5         set	31909
  5025   000F7C                     _WPUB           set	3964
  5026   000F7F                     _ANSELH         set	3967
  5027   000F7E                     _ANSEL          set	3966
  5028   000FC5                     _SSPCON2        set	4037
  5029   000FC6                     _SSPCON1        set	4038
  5030   000FC7                     _SSPSTAT        set	4039
  5031   000F9B                     _OSCTUNE        set	3995
  5032   000FD3                     _OSCCON         set	4051
  5033   000FAF                     _SPBRG          set	4015
  5034   000FB0                     _SPBRGH         set	4016
  5035   000FB8                     _BAUDCONbits    set	4024
  5036   000FAD                     _TXREG          set	4013
  5037   000FAC                     _TXSTAbits      set	4012
  5038   000FAE                     _RCREG          set	4014
  5039   000FAB                     _RCSTAbits      set	4011
  5040   000FB2                     _TMR3L          set	4018
  5041   000FB3                     _TMR3H          set	4019
  5042   000FCC                     _TMR2           set	4044
  5043   000FCA                     _T2CONbits      set	4042
  5044   000FCE                     _TMR1L          set	4046
  5045   000FCF                     _TMR1H          set	4047
  5046   000FCD                     _T1CONbits      set	4045
  5047   000FD7                     _TMR0H          set	4055
  5048   000FD6                     _TMR0L          set	4054
  5049   000FD5                     _T0CONbits      set	4053
  5050   000F81                     _PORTBbits      set	3969
  5051   000FF0                     _INTCON3bits    set	4080
  5052   000FF1                     _INTCON2bits    set	4081
  5053   000F94                     _TRISCbits      set	3988
  5054   000FC9                     _SSPBUF         set	4041
  5055   000FC7                     _SSPSTATbits    set	4039
  5056   000FC8                     _SSPADD         set	4040
  5057   000FC5                     _SSPCON2bits    set	4037
  5058   000FC6                     _SSPCON1bits    set	4038
  5059   000FA7                     _EECON2         set	4007
  5060   000FA6                     _EECON1bits     set	4006
  5061   000FA8                     _EEDATA         set	4008
  5062   000FA9                     _EEADR          set	4009
  5063   000FAA                     _EEADRH         set	4010
  5064   000FB1                     _T3CONbits      set	4017
  5065   000FBC                     _CCPR2H         set	4028
  5066   000FBB                     _CCPR2L         set	4027
  5067   000FBF                     _CCPR1H         set	4031
  5068   000FBE                     _CCPR1L         set	4030
  5069   000FA1                     _PIR2bits       set	4001
  5070   000FA0                     _PIE2bits       set	4000
  5071   000FBA                     _CCP2CONbits    set	4026
  5072   000FF2                     _INTCONbits     set	4082
  5073   000FC1                     _ADCON1bits     set	4033
  5074   000F9E                     _PIR1bits       set	3998
  5075   000FC3                     _ADRESL         set	4035
  5076   000FC4                     _ADRESH         set	4036
  5077   000F9D                     _PIE1bits       set	3997
  5078   000FC0                     _ADCON2bits     set	4032
  5079   000FC2                     _ADCON0bits     set	4034
  5080   000FBD                     _CCP1CONbits    set	4029
  5081   000F84                     _PORTE          set	3972
  5082   000F83                     _PORTD          set	3971
  5083   000F82                     _PORTC          set	3970
  5084   000F81                     _PORTB          set	3969
  5085   000F80                     _PORTA          set	3968
  5086   000F8D                     _LATE           set	3981
  5087   000F8C                     _LATD           set	3980
  5088   000F8B                     _LATC           set	3979
  5089   000F8A                     _LATB           set	3978
  5090   000F89                     _LATA           set	3977
  5091   000F95                     _TRISD          set	3989
  5092   000F94                     _TRISC          set	3988
  5093   000F93                     _TRISB          set	3987
  5094   000F96                     _TRISE          set	3990
  5095   000F92                     _TRISA          set	3986
  5096                           
  5097                           ; #config settings
  5098                           
  5099                           	psect	cinit
  5100   00494E                     __pcinit:
  5101                           	callstack 0
  5102   00494E                     start_initialization:
  5103                           	callstack 0
  5104   00494E                     __initialization:
  5105                           	callstack 0
  5106                           
  5107                           ; Initialize objects allocated to BANK1 (71 bytes)
  5108                           ; load TBLPTR registers with __pidataBANK1
  5109   00494E  0E06               	movlw	low __pidataBANK1
  5110   004950  6EF6               	movwf	tblptrl,c
  5111   004952  0E50               	movlw	high __pidataBANK1
  5112   004954  6EF7               	movwf	tblptrh,c
  5113   004956  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  5114   004958  6EF8               	movwf	tblptru,c
  5115   00495A  EE01  F000         	lfsr	0,__pdataBANK1
  5116   00495E  EE10 F047          	lfsr	1,71
  5117   004962                     copy_data0:
  5118   004962  0009               	tblrd		*+
  5119   004964  CFF5 FFEE          	movff	tablat,postinc0
  5120   004968  50E5               	movf	postdec1,w,c
  5121   00496A  50E1               	movf	fsr1l,w,c
  5122   00496C  E1FA               	bnz	copy_data0
  5123                           
  5124                           ; Initialize objects allocated to COMRAM (12 bytes)
  5125                           ; load TBLPTR registers with __pidataCOMRAM
  5126   00496E  0E64               	movlw	low __pidataCOMRAM
  5127   004970  6EF6               	movwf	tblptrl,c
  5128   004972  0E55               	movlw	high __pidataCOMRAM
  5129   004974  6EF7               	movwf	tblptrh,c
  5130   004976  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  5131   004978  6EF8               	movwf	tblptru,c
  5132   00497A  EE00  F032         	lfsr	0,__pdataCOMRAM
  5133   00497E  EE10 F00C          	lfsr	1,12
  5134   004982                     copy_data1:
  5135   004982  0009               	tblrd		*+
  5136   004984  CFF5 FFEE          	movff	tablat,postinc0
  5137   004988  50E5               	movf	postdec1,w,c
  5138   00498A  50E1               	movf	fsr1l,w,c
  5139   00498C  E1FA               	bnz	copy_data1
  5140                           
  5141                           ; Clear objects allocated to BANK1 (41 bytes)
  5142   00498E  EE01  F047         	lfsr	0,__pbssBANK1
  5143   004992  0E29               	movlw	41
  5144   004994                     clear_0:
  5145   004994  6AEE               	clrf	postinc0,c
  5146   004996  06E8               	decf	wreg,f,c
  5147   004998  E1FD               	bnz	clear_0
  5148                           
  5149                           ; Clear objects allocated to BANK0 (117 bytes)
  5150   00499A  EE00  F060         	lfsr	0,__pbssBANK0
  5151   00499E  0E75               	movlw	117
  5152   0049A0                     clear_1:
  5153   0049A0  6AEE               	clrf	postinc0,c
  5154   0049A2  06E8               	decf	wreg,f,c
  5155   0049A4  E1FD               	bnz	clear_1
  5156                           
  5157                           ; Clear objects allocated to COMRAM (16 bytes)
  5158   0049A6  EE00  F022         	lfsr	0,__pbssCOMRAM
  5159   0049AA  0E10               	movlw	16
  5160   0049AC                     clear_2:
  5161   0049AC  6AEE               	clrf	postinc0,c
  5162   0049AE  06E8               	decf	wreg,f,c
  5163   0049B0  E1FD               	bnz	clear_2
  5164   0049B2                     end_of_initialization:
  5165                           	callstack 0
  5166   0049B2                     __end_of__initialization:
  5167                           	callstack 0
  5168   0049B2  903F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  5169   0049B4  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  5170   0049B6  0100               	movlb	0
  5171   0049B8  EF29  F008         	goto	_main	;jump to C main() function
  5172                           
  5173                           	psect	bssCOMRAM
  5174   000022                     __pbssCOMRAM:
  5175                           	callstack 0
  5176   000022                     _PWM_Val:
  5177                           	callstack 0
  5178   000022                     	ds	2
  5179   000024                     _hours:
  5180                           	callstack 0
  5181   000024                     	ds	1
  5182   000025                     _minutes:
  5183                           	callstack 0
  5184   000025                     	ds	1
  5185   000026                     _seconds:
  5186                           	callstack 0
  5187   000026                     	ds	1
  5188   000027                     _CCP1_flag:
  5189                           	callstack 0
  5190   000027                     	ds	1
  5191   000028                     LED_toggle@F3476:
  5192                           	callstack 0
  5193   000028                     	ds	1
  5194   000029                     LED_turnOFF@F3471:
  5195                           	callstack 0
  5196   000029                     	ds	1
  5197   00002A                     LED_turnON@F3466:
  5198                           	callstack 0
  5199   00002A                     	ds	1
  5200   00002B                     LED_init@F3461:
  5201                           	callstack 0
  5202   00002B                     	ds	1
  5203   00002C                     _exit_Clock:
  5204                           	callstack 0
  5205   00002C                     	ds	1
  5206   00002D                     _exit_alarm:
  5207                           	callstack 0
  5208   00002D                     	ds	1
  5209   00002E                     _userInput:
  5210                           	callstack 0
  5211   00002E                     	ds	1
  5212   00002F                     _nextBack:
  5213                           	callstack 0
  5214   00002F                     	ds	1
  5215   000030                     _NumberPressed:
  5216                           	callstack 0
  5217   000030                     	ds	1
  5218   000031                     _LDR_Read_Value:
  5219                           	callstack 0
  5220   000031                     	ds	1
  5221                           
  5222                           	psect	dataCOMRAM
  5223   000032                     __pdataCOMRAM:
  5224                           	callstack 0
  5225   000032                     _curserPos:
  5226                           	callstack 0
  5227   000032                     	ds	1
  5228   000033                     _RB7_Flag:
  5229                           	callstack 0
  5230   000033                     	ds	1
  5231   000034                     _RB6_Flag:
  5232                           	callstack 0
  5233   000034                     	ds	1
  5234   000035                     _RB5_Flag:
  5235                           	callstack 0
  5236   000035                     	ds	1
  5237   000036                     _RB4_Flag:
  5238                           	callstack 0
  5239   000036                     	ds	1
  5240   000037                     _LCD_1:
  5241                           	callstack 0
  5242   000037                     	ds	6
  5243   00003D                     _Buzz:
  5244                           	callstack 0
  5245   00003D                     	ds	1
  5246                           
  5247                           	psect	bssBANK0
  5248   000060                     __pbssBANK0:
  5249                           	callstack 0
  5250   000060                     _I2C_Status:
  5251                           	callstack 0
  5252   000060                     	ds	29
  5253   00007D                     _time_array:
  5254                           	callstack 0
  5255   00007D                     	ds	6
  5256   000083                     _REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604:
  5257                           	callstack 0
  5258   000083                     	ds	6
  5259   000089                     _USART_OVRR_InterruptHandler:
  5260                           	callstack 0
  5261   000089                     	ds	2
  5262   00008B                     _USART_FRE_InterruptHandler:
  5263                           	callstack 0
  5264   00008B                     	ds	2
  5265   00008D                     _USART_RX_InterruptHandler:
  5266                           	callstack 0
  5267   00008D                     	ds	2
  5268   00008F                     _USART_TX_InterruptHandler:
  5269                           	callstack 0
  5270   00008F                     	ds	2
  5271   000091                     _timer3_preload:
  5272                           	callstack 0
  5273   000091                     	ds	2
  5274   000093                     _Timer3_InterruptHandler:
  5275                           	callstack 0
  5276   000093                     	ds	2
  5277   000095                     _Timer2_InterruptHandler:
  5278                           	callstack 0
  5279   000095                     	ds	2
  5280   000097                     _timer1_preload:
  5281                           	callstack 0
  5282   000097                     	ds	2
  5283   000099                     _Timer1_InterruptHandler:
  5284                           	callstack 0
  5285   000099                     	ds	2
  5286   00009B                     _timer0_preload:
  5287                           	callstack 0
  5288   00009B                     	ds	2
  5289   00009D                     _Timer0_InterruptHandler:
  5290                           	callstack 0
  5291   00009D                     	ds	2
  5292   00009F                     _SPI_InterruptHandler:
  5293                           	callstack 0
  5294   00009F                     	ds	2
  5295   0000A1                     _Interrupt_RB7_Handler_LOW:
  5296                           	callstack 0
  5297   0000A1                     	ds	2
  5298   0000A3                     _Interrupt_RB7_Handler_HIGH:
  5299                           	callstack 0
  5300   0000A3                     	ds	2
  5301   0000A5                     _Interrupt_RB6_Handler_LOW:
  5302                           	callstack 0
  5303   0000A5                     	ds	2
  5304   0000A7                     _Interrupt_RB6_Handler_HIGH:
  5305                           	callstack 0
  5306   0000A7                     	ds	2
  5307   0000A9                     _Interrupt_RB5_Handler_LOW:
  5308                           	callstack 0
  5309   0000A9                     	ds	2
  5310   0000AB                     _Interrupt_RB5_Handler_HIGH:
  5311                           	callstack 0
  5312   0000AB                     	ds	2
  5313   0000AD                     _Interrupt_RB4_Handler_LOW:
  5314                           	callstack 0
  5315   0000AD                     	ds	2
  5316   0000AF                     _Interrupt_RB4_Handler_HIGH:
  5317                           	callstack 0
  5318   0000AF                     	ds	2
  5319   0000B1                     _Interrupt_INT2_Handler:
  5320                           	callstack 0
  5321   0000B1                     	ds	2
  5322   0000B3                     _Interrupt_INT1_Handler:
  5323                           	callstack 0
  5324   0000B3                     	ds	2
  5325   0000B5                     _Interrupt_INT0_Handler:
  5326                           	callstack 0
  5327   0000B5                     	ds	2
  5328   0000B7                     _I2C_Report_Write_Collision:
  5329                           	callstack 0
  5330   0000B7                     	ds	2
  5331   0000B9                     _I2C_Report_Receive_OverFlow:
  5332                           	callstack 0
  5333   0000B9                     	ds	2
  5334   0000BB                     _I2C_DefaultInterruptHandler:
  5335                           	callstack 0
  5336   0000BB                     	ds	2
  5337   0000BD                     _CCP2_InterrptHandle:
  5338                           	callstack 0
  5339   0000BD                     	ds	2
  5340   0000BF                     _CCP1_InterrptHandle:
  5341                           	callstack 0
  5342   0000BF                     	ds	2
  5343   0000C1                     _ADC_InterruptHandler:
  5344                           	callstack 0
  5345   0000C1                     	ds	2
  5346   0000C3                     _timer2_preload:
  5347                           	callstack 0
  5348   0000C3                     	ds	1
  5349   0000C4                     _SPI_SS:
  5350                           	callstack 0
  5351   0000C4                     	ds	1
  5352   0000C5                     _SPI_SCK:
  5353                           	callstack 0
  5354   0000C5                     	ds	1
  5355   0000C6                     _SPI_SDI:
  5356                           	callstack 0
  5357   0000C6                     	ds	1
  5358   0000C7                     _SPI_SDO:
  5359                           	callstack 0
  5360   0000C7                     	ds	1
  5361   0000C8                     _ret@ecu_servoMotor$F857:
  5362                           	callstack 0
  5363   0000C8                     	ds	1
  5364   0000C9                     ECU_Relay_toggle@F3477:
  5365                           	callstack 0
  5366   0000C9                     	ds	1
  5367   0000CA                     ECU_Relay_turnOFF@F3472:
  5368                           	callstack 0
  5369   0000CA                     	ds	1
  5370   0000CB                     ECU_Relay_turnON@F3467:
  5371                           	callstack 0
  5372   0000CB                     	ds	1
  5373   0000CC                     ECU_Relay_Initialize@F3462:
  5374                           	callstack 0
  5375   0000CC                     	ds	1
  5376   0000CD                     _timer1_obj:
  5377                           	callstack 0
  5378   0000CD                     	ds	6
  5379   0000D3                     _pinRC7:
  5380                           	callstack 0
  5381   0000D3                     	ds	1
  5382   0000D4                     _pinRC6:
  5383                           	callstack 0
  5384   0000D4                     	ds	1
  5385                           
  5386                           	psect	bssBANK1
  5387   000147                     __pbssBANK1:
  5388                           	callstack 0
  5389   000147                     _REALTIMECLOCK_DS1307:
  5390                           	callstack 0
  5391   000147                     	ds	6
  5392   00014D                     	ds	6
  5393   000153                     _REALTIMECLOCK_DS1307_Data:
  5394                           	callstack 0
  5395   000153                     	ds	18
  5396   000165                     _CCP1_obj:
  5397                           	callstack 0
  5398   000165                     	ds	11
  5399                           
  5400                           	psect	dataBANK1
  5401   000100                     __pdataBANK1:
  5402                           	callstack 0
  5403   000100                     _btn_value:
  5404                           	callstack 0
  5405   000100                     	ds	16
  5406   000110                     _port_registers:
  5407                           	callstack 0
  5408   000110                     	ds	5
  5409   000115                     _lat_registers:
  5410                           	callstack 0
  5411   000115                     	ds	5
  5412   00011A                     _tris_registers:
  5413                           	callstack 0
  5414   00011A                     	ds	5
  5415   00011F                     _UART_obj:
  5416                           	callstack 0
  5417   00011F                     	ds	17
  5418   000130                     _ADC_LDR:
  5419                           	callstack 0
  5420   000130                     	ds	8
  5421   000138                     _keypad_1:
  5422                           	callstack 0
  5423   000138                     	ds	8
  5424   000140                     _timer0_1:
  5425                           	callstack 0
  5426   000140                     	ds	7
  5427                           
  5428                           	psect	cstackBANK1
  5429   000170                     __pcstackBANK1:
  5430                           	callstack 0
  5431   000170                     ?___fladd:
  5432                           	callstack 0
  5433   000170                     ___fladd@b:
  5434                           	callstack 0
  5435                           
  5436                           ; 4 bytes @ 0x0
  5437   000170                     	ds	4
  5438   000174                     ___fladd@a:
  5439                           	callstack 0
  5440                           
  5441                           ; 4 bytes @ 0x4
  5442   000174                     	ds	4
  5443   000178                     ___fladd@signs:
  5444                           	callstack 0
  5445                           
  5446                           ; 1 bytes @ 0x8
  5447   000178                     	ds	1
  5448   000179                     ___fladd@aexp:
  5449                           	callstack 0
  5450                           
  5451                           ; 1 bytes @ 0x9
  5452   000179                     	ds	1
  5453   00017A                     ___fladd@bexp:
  5454                           	callstack 0
  5455                           
  5456                           ; 1 bytes @ 0xA
  5457   00017A                     	ds	1
  5458   00017B                     ___fladd@grs:
  5459                           	callstack 0
  5460                           
  5461                           ; 1 bytes @ 0xB
  5462   00017B                     	ds	1
  5463   00017C                     EUSART_BaudRateCalculation@_EUSART:
  5464                           	callstack 0
  5465                           
  5466                           ; 2 bytes @ 0xC
  5467   00017C                     	ds	2
  5468   00017E                     ??_EUSART_BaudRateCalculation:
  5469                           
  5470                           ; 1 bytes @ 0xE
  5471   00017E                     	ds	2
  5472   000180                     EUSART_BaudRateCalculation@baudrate_Val:
  5473                           	callstack 0
  5474                           
  5475                           ; 4 bytes @ 0x10
  5476   000180                     	ds	4
  5477   000184                     _EUSART_BaudRateCalculation$7013:
  5478                           	callstack 0
  5479                           
  5480                           ; 4 bytes @ 0x14
  5481   000184                     	ds	4
  5482   000188                     EUSART_ASYNC_Init@_EUSART:
  5483                           	callstack 0
  5484                           
  5485                           ; 2 bytes @ 0x18
  5486   000188                     	ds	2
  5487   00018A                     ?_REALTIMECLOCK_DS1307_print_Data:
  5488                           	callstack 0
  5489                           
  5490                           ; 2 bytes @ 0x1A
  5491   00018A                     	ds	2
  5492   00018C                     ECU_LCD_4Bit_Send_String_Data_Postition@_LCD:
  5493                           	callstack 0
  5494                           
  5495                           ; 1 bytes @ 0x1C
  5496   00018C                     	ds	1
  5497   00018D                     ECU_LCD_4Bit_Send_String_Data_Postition@_Row:
  5498                           	callstack 0
  5499                           
  5500                           ; 1 bytes @ 0x1D
  5501   00018D                     	ds	1
  5502   00018E                     ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn:
  5503                           	callstack 0
  5504                           
  5505                           ; 1 bytes @ 0x1E
  5506   00018E                     	ds	1
  5507   00018F                     ECU_LCD_4Bit_Send_String_Data_Postition@_Str:
  5508                           	callstack 0
  5509                           
  5510                           ; 2 bytes @ 0x1F
  5511   00018F                     	ds	2
  5512   000191                     ECU_LCD_4Bit_Send_String_Data_Postition@rt:
  5513                           	callstack 0
  5514                           
  5515                           ; 1 bytes @ 0x21
  5516   000191                     	ds	1
  5517   000192                     ??_Dashboard:
  5518                           
  5519                           ; 1 bytes @ 0x22
  5520   000192                     	ds	2
  5521   000194                     ??_main:
  5522                           
  5523                           ; 1 bytes @ 0x24
  5524   000194                     	ds	2
  5525                           
  5526                           	psect	cstackBANK0
  5527   0000D5                     __pcstackBANK0:
  5528                           	callstack 0
  5529   0000D5                     ?___fltol:
  5530                           	callstack 0
  5531   0000D5                     ?___xxtofl:
  5532                           	callstack 0
  5533   0000D5                     EUSART_ASYNC_WriteByteBlocking@_Byte:
  5534                           	callstack 0
  5535   0000D5                     I2C_Open@address:
  5536                           	callstack 0
  5537   0000D5                     I2C_Close@returnValue:
  5538                           	callstack 0
  5539   0000D5                     I2C_SetBuffer@buffer:
  5540                           	callstack 0
  5541   0000D5                     I2C_MasterSendTxData@data:
  5542                           	callstack 0
  5543   0000D5                     ADC_Start_Conversion@_ADC_config:
  5544                           	callstack 0
  5545   0000D5                     ADC_Conversion_Result@_ADC_config:
  5546                           	callstack 0
  5547   0000D5                     ADC_Voltage_Reference_Control@_ADC_config:
  5548                           	callstack 0
  5549   0000D5                     ADC_Result_Format_Control@_ADC_config:
  5550                           	callstack 0
  5551   0000D5                     ADC_Interrupt_Configuration@_ADC_config:
  5552                           	callstack 0
  5553   0000D5                     gpio_pin_direction_initialize@pinConfig:
  5554                           	callstack 0
  5555   0000D5                     gpio_pin_write_logic@pinConfig:
  5556                           	callstack 0
  5557   0000D5                     gpio_pin_read_logic@pinConfig:
  5558                           	callstack 0
  5559   0000D5                     Timer0_Deinit@_timer0:
  5560                           	callstack 0
  5561   0000D5                     Timer0_Write_Value@_timer0:
  5562                           	callstack 0
  5563   0000D5                     Timer0_Set_Resolution@_timer0:
  5564                           	callstack 0
  5565   0000D5                     Timer0_Set_Mode@_timer0:
  5566                           	callstack 0
  5567   0000D5                     Timer0_Prescaler_Config@_timer0:
  5568                           	callstack 0
  5569   0000D5                     Timer0_Interrupt_Configuration@_timer0:
  5570                           	callstack 0
  5571   0000D5                     EUSART_TX_Init@_EUSART:
  5572                           	callstack 0
  5573   0000D5                     EUSART_RX_Init@_EUSART:
  5574                           	callstack 0
  5575   0000D5                     I2C_SetCallback@cb:
  5576                           	callstack 0
  5577   0000D5                     ___fltol@f1:
  5578                           	callstack 0
  5579   0000D5                     ___xxtofl@val:
  5580                           	callstack 0
  5581   0000D5                     ??_ADC_Select_Specific_Channel:
  5582   0000D5                     
  5583                           ; 1 bytes @ 0x0
  5584   0000D5                     	ds	1
  5585   0000D6                     I2C_Open@returnValue:
  5586                           	callstack 0
  5587   0000D6                     EUSART_ASYNC_WriteStringBlocking@_Byte:
  5588                           	callstack 0
  5589   0000D6                     I2C_SetBuffer@bufferSize:
  5590                           	callstack 0
  5591   0000D6                     
  5592                           ; 1 bytes @ 0x1
  5593   0000D6                     	ds	1
  5594   0000D7                     ADC_Conversion_Result@_ADC_Result:
  5595                           	callstack 0
  5596   0000D7                     ADC_Select_Specific_Channel@_ADC_Channel:
  5597                           	callstack 0
  5598   0000D7                     gpio_pin_write_logic@logic:
  5599                           	callstack 0
  5600   0000D7                     gpio_pin_read_logic@logic:
  5601                           	callstack 0
  5602   0000D7                     Timer0_Deinit@ret:
  5603                           	callstack 0
  5604   0000D7                     I2C_SetCallback@ptr:
  5605                           	callstack 0
  5606   0000D7                     Timer0_Write_Value@_value:
  5607                           	callstack 0
  5608   0000D7                     ??_gpio_pin_direction_initialize:
  5609   0000D7                     ??_ADC_Result_Format_Control:
  5610   0000D7                     ??_ADC_Voltage_Reference_Control:
  5611   0000D7                     ??_Timer0_Prescaler_Config:
  5612   0000D7                     
  5613                           ; 1 bytes @ 0x2
  5614   0000D7                     	ds	1
  5615   0000D8                     I2C_SetCallback@idx:
  5616                           	callstack 0
  5617   0000D8                     ADC_Select_Channel@_ADC_config:
  5618                           	callstack 0
  5619   0000D8                     EUSART_ASYNC_WriteStringBlocking@str_len:
  5620                           	callstack 0
  5621   0000D8                     ??_gpio_pin_write_logic:
  5622   0000D8                     ??_gpio_pin_read_logic:
  5623   0000D8                     ??_ADC_Conversion_Result:
  5624                           
  5625                           ; 1 bytes @ 0x3
  5626   0000D8                     	ds	1
  5627   0000D9                     gpio_pin_direction_initialize@rt:
  5628                           	callstack 0
  5629   0000D9                     ADC_Init@_ADC_config:
  5630                           	callstack 0
  5631   0000D9                     Timer0_Init@_timer0:
  5632                           	callstack 0
  5633   0000D9                     I2C_SetDataCompleteCallback@cb:
  5634                           	callstack 0
  5635   0000D9                     I2C_SetAddressNackCallback@cb:
  5636                           	callstack 0
  5637   0000D9                     ??___fltol:
  5638   0000D9                     ??___xxtofl:
  5639                           
  5640                           ; 1 bytes @ 0x4
  5641   0000D9                     	ds	1
  5642   0000DA                     ADC_Select_Channel@_ADC_Channel:
  5643                           	callstack 0
  5644   0000DA                     gpio_pin_write_logic@rt:
  5645                           	callstack 0
  5646   0000DA                     gpio_pin_read_logic@rt:
  5647                           	callstack 0
  5648   0000DA                     ??_EUSART_ASYNC_WriteStringBlocking:
  5649                           
  5650                           ; 1 bytes @ 0x5
  5651   0000DA                     	ds	1
  5652   0000DB                     LCD_Send_4Bits@_LCD:
  5653                           	callstack 0
  5654   0000DB                     LCD_4Bits_Send_Enable_Signal@_LCD:
  5655                           	callstack 0
  5656   0000DB                     Timer0_Init@ret:
  5657                           	callstack 0
  5658   0000DB                     I2C_SetDataCompleteCallback@ptr:
  5659                           	callstack 0
  5660   0000DB                     keyPad_Read@keypad:
  5661                           	callstack 0
  5662   0000DB                     gpio_pin_initialize@pinConfig:
  5663                           	callstack 0
  5664   0000DB                     I2C_SetAddressNackCallback@ptr:
  5665                           	callstack 0
  5666   0000DB                     ??_ADC_Init:
  5667   0000DB                     ??_ADC_Select_Channel:
  5668   0000DB                     
  5669                           ; 1 bytes @ 0x6
  5670   0000DB                     	ds	1
  5671   0000DC                     LCD_Send_4Bits@_Data:
  5672                           	callstack 0
  5673   0000DC                     ADC_Init@ret:
  5674                           	callstack 0
  5675   0000DC                     EUSART_ASYNC_WriteStringBlocking@ret:
  5676                           	callstack 0
  5677   0000DC                     rd1RegCompleteHandler@ptr:
  5678                           	callstack 0
  5679   0000DC                     rd2RegCompleteHandler@ptr:
  5680                           	callstack 0
  5681   0000DC                     wr1RegCompleteHandler@ptr:
  5682                           	callstack 0
  5683   0000DC                     wr2RegCompleteHandler@ptr:
  5684                           	callstack 0
  5685   0000DC                     rdBlkRegCompleteHandler@ptr:
  5686                           	callstack 0
  5687   0000DC                     I2C_CallbackReturnReset@funPtr:
  5688                           	callstack 0
  5689   0000DC                     ADC_Get_Conversion_Result_Block@_ADC_config:
  5690                           	callstack 0
  5691   0000DC                     ??_LCD_4Bits_Send_Enable_Signal:
  5692   0000DC                     
  5693                           ; 1 bytes @ 0x7
  5694   0000DC                     	ds	1
  5695   0000DD                     keyPad_Read@keypad_value:
  5696                           	callstack 0
  5697   0000DD                     LCD_4Bits_Send_Enable_Signal@rt:
  5698                           	callstack 0
  5699   0000DD                     ___fltol@sign1:
  5700                           	callstack 0
  5701   0000DD                     ___xxtofl@sign:
  5702                           	callstack 0
  5703   0000DD                     EUSART_ASYNC_WriteStringBlocking@char_counter:
  5704                           	callstack 0
  5705   0000DD                     ??_gpio_pin_initialize:
  5706   0000DD                     ??_LCD_Send_4Bits:
  5707   0000DD                     ??_I2C_DO_TX:
  5708   0000DD                     ??_I2C_DO_RX:
  5709   0000DD                     ??_I2C_DO_TX_EMPTY:
  5710   0000DD                     ??_I2C_DO_ADDRESS_NACK:
  5711   0000DD                     
  5712                           ; 1 bytes @ 0x8
  5713   0000DD                     	ds	1
  5714   0000DE                     LCD_Send_4Bits@rt:
  5715                           	callstack 0
  5716   0000DE                     ADC_Get_Conversion_Result_Block@_ADC_Channel:
  5717                           	callstack 0
  5718   0000DE                     gpio_pin_initialize@rt:
  5719                           	callstack 0
  5720   0000DE                     ___fltol@exp1:
  5721                           	callstack 0
  5722   0000DE                     ___xxtofl@exp:
  5723                           	callstack 0
  5724   0000DE                     ??_keyPad_Read:
  5725                           
  5726                           ; 1 bytes @ 0x9
  5727   0000DE                     	ds	1
  5728   0000DF                     ECU_LCD_4Bit_Send_Command@_LCD:
  5729                           	callstack 0
  5730   0000DF                     ECU_LCD_4Bit_Send_char_Data@_LCD:
  5731                           	callstack 0
  5732   0000DF                     ADC_Get_Conversion_Result_Block@_ADC_Result:
  5733                           	callstack 0
  5734   0000DF                     PinsConfig@hal_usart$F4659@ret:
  5735                           	callstack 0
  5736   0000DF                     keyPad_Initialize@keypad:
  5737                           	callstack 0
  5738   0000DF                     ___xxtofl@arg:
  5739                           	callstack 0
  5740   0000DF                     ??_I2C_MasterFsm:
  5741                           
  5742                           ; 1 bytes @ 0xA
  5743   0000DF                     	ds	1
  5744   0000E0                     keyPad_Read@rt:
  5745                           	callstack 0
  5746   0000E0                     ECU_LCD_4Bit_Send_Command@_Command:
  5747                           	callstack 0
  5748   0000E0                     ECU_LCD_4Bit_Send_char_Data@_Data:
  5749                           	callstack 0
  5750   0000E0                     ADC_Get_Conversion_Result_Block@ret:
  5751                           	callstack 0
  5752   0000E0                     
  5753                           ; 1 bytes @ 0xB
  5754   0000E0                     	ds	1
  5755   0000E1                     keyPad_Read@l_counter:
  5756                           	callstack 0
  5757   0000E1                     ECU_LCD_4Bit_Send_Command@rt:
  5758                           	callstack 0
  5759   0000E1                     ECU_LCD_4Bit_Send_char_Data@rt:
  5760                           	callstack 0
  5761   0000E1                     ??_keyPad_Initialize:
  5762   0000E1                     
  5763                           ; 1 bytes @ 0xC
  5764   0000E1                     	ds	1
  5765   0000E2                     keyPad_Read@l_rows_counter:
  5766                           	callstack 0
  5767   0000E2                     ECU_LCD_4Bit_Initialize@_LCD:
  5768                           	callstack 0
  5769   0000E2                     LCD_4Bits_Set_Curser@_LCD:
  5770                           	callstack 0
  5771   0000E2                     I2C_MasterOperation@read:
  5772                           	callstack 0
  5773   0000E2                     
  5774                           ; 1 bytes @ 0xD
  5775   0000E2                     	ds	1
  5776   0000E3                     ?___fldiv:
  5777                           	callstack 0
  5778   0000E3                     keyPad_Initialize@rt:
  5779                           	callstack 0
  5780   0000E3                     keyPad_Read@l_coloumns_counter:
  5781                           	callstack 0
  5782   0000E3                     LCD_4Bits_Set_Curser@row:
  5783                           	callstack 0
  5784   0000E3                     I2C_MasterOperation@returnValue:
  5785                           	callstack 0
  5786   0000E3                     ___fldiv@b:
  5787                           	callstack 0
  5788   0000E3                     ??_ECU_LCD_4Bit_Initialize:
  5789                           
  5790                           ; 1 bytes @ 0xE
  5791   0000E3                     	ds	1
  5792   0000E4                     keyPad_Initialize@l_rows_counter:
  5793                           	callstack 0
  5794   0000E4                     keyPad_Read@coloumn_logic:
  5795                           	callstack 0
  5796   0000E4                     ECU_LCD_4Bit_Initialize@LCD_Counter:
  5797                           	callstack 0
  5798   0000E4                     LCD_4Bits_Set_Curser@coloumn:
  5799                           	callstack 0
  5800   0000E4                     I2C_Read1ByteRegister@reg:
  5801                           	callstack 0
  5802   0000E4                     I2C_Write1ByteRegister@reg:
  5803                           	callstack 0
  5804   0000E4                     
  5805                           ; 1 bytes @ 0xF
  5806   0000E4                     	ds	1
  5807   0000E5                     keyPad_Initialize@l_coloums_counter:
  5808                           	callstack 0
  5809   0000E5                     ECU_LCD_4Bit_Initialize@rt:
  5810                           	callstack 0
  5811   0000E5                     LCD_4Bits_Set_Curser@rt:
  5812                           	callstack 0
  5813   0000E5                     I2C_Read1ByteRegister@address:
  5814                           	callstack 0
  5815   0000E5                     I2C_Write1ByteRegister@data:
  5816                           	callstack 0
  5817   0000E5                     
  5818                           ; 1 bytes @ 0x10
  5819   0000E5                     	ds	1
  5820   0000E6                     I2C_Read1ByteRegister@returnValue:
  5821                           	callstack 0
  5822   0000E6                     I2C_Write1ByteRegister@address:
  5823                           	callstack 0
  5824   0000E6                     
  5825                           ; 1 bytes @ 0x11
  5826   0000E6                     	ds	1
  5827   0000E7                     ?_REALTIMECLOCK_DS1307_Get_Data:
  5828                           	callstack 0
  5829   0000E7                     TemperatureSensor_TC74_Read_Temp@TC74_Address:
  5830                           	callstack 0
  5831   0000E7                     ___fldiv@a:
  5832                           	callstack 0
  5833   0000E7                     
  5834                           ; 1 bytes @ 0x12
  5835   0000E7                     	ds	1
  5836   0000E8                     TemperatureSensor_TC74_Read_Temp@TC74_TempValue:
  5837                           	callstack 0
  5838                           
  5839                           ; 1 bytes @ 0x13
  5840   0000E8                     	ds	3
  5841   0000EB                     ??___fldiv:
  5842                           
  5843                           ; 1 bytes @ 0x16
  5844   0000EB                     	ds	2
  5845   0000ED                     
  5846                           ; 1 bytes @ 0x18
  5847   0000ED                     	ds	2
  5848   0000EF                     ___fldiv@rem:
  5849                           	callstack 0
  5850                           
  5851                           ; 4 bytes @ 0x1A
  5852   0000EF                     	ds	4
  5853   0000F3                     ___fldiv@sign:
  5854                           	callstack 0
  5855                           
  5856                           ; 1 bytes @ 0x1E
  5857   0000F3                     	ds	1
  5858   0000F4                     ___fldiv@new_exp:
  5859                           	callstack 0
  5860                           
  5861                           ; 2 bytes @ 0x1F
  5862   0000F4                     	ds	2
  5863   0000F6                     ___fldiv@grs:
  5864                           	callstack 0
  5865                           
  5866                           ; 4 bytes @ 0x21
  5867   0000F6                     	ds	4
  5868   0000FA                     ___fldiv@bexp:
  5869                           	callstack 0
  5870                           
  5871                           ; 1 bytes @ 0x25
  5872   0000FA                     	ds	1
  5873   0000FB                     ___fldiv@aexp:
  5874                           	callstack 0
  5875                           
  5876                           ; 1 bytes @ 0x26
  5877   0000FB                     	ds	1
  5878   0000FC                     ??___fladd:
  5879                           
  5880                           ; 1 bytes @ 0x27
  5881   0000FC                     	ds	4
  5882   000100                     
  5883                           ; 1 bytes @ 0x2B
  5884                           
  5885                           	psect	cstackCOMRAM
  5886   000001                     __pcstackCOMRAM:
  5887                           	callstack 0
  5888   000001                     ?___awdiv:
  5889                           	callstack 0
  5890   000001                     ?___awmod:
  5891                           	callstack 0
  5892   000001                     RB4_ISR@RB4_Source:
  5893                           	callstack 0
  5894   000001                     RB5_ISR@RB5_Source:
  5895                           	callstack 0
  5896   000001                     RB6_ISR@RB6_Source:
  5897                           	callstack 0
  5898   000001                     RB7_ISR@RB7_Source:
  5899                           	callstack 0
  5900   000001                     Timer1_Write_Value@_timer1:
  5901                           	callstack 0
  5902   000001                     CCPx_CompareMode_WriteData@_CCPx:
  5903                           	callstack 0
  5904   000001                     ___awdiv@dividend:
  5905                           	callstack 0
  5906   000001                     ___awmod@dividend:
  5907                           	callstack 0
  5908   000001                     i2gpio_pin_write_logic@pinConfig:
  5909                           	callstack 0
  5910   000001                     
  5911                           ; 1 bytes @ 0x0
  5912   000001                     	ds	1
  5913   000002                     Timer1_Write_Value@_value:
  5914                           	callstack 0
  5915                           
  5916                           ; 2 bytes @ 0x1
  5917   000002                     	ds	1
  5918   000003                     i2gpio_pin_write_logic@logic:
  5919                           	callstack 0
  5920   000003                     CCPx_CompareMode_WriteData@_Data:
  5921                           	callstack 0
  5922   000003                     ___awdiv@divisor:
  5923                           	callstack 0
  5924   000003                     ___awmod@divisor:
  5925                           	callstack 0
  5926                           
  5927                           ; 2 bytes @ 0x2
  5928   000003                     	ds	1
  5929   000004                     Timer1_Write_Value@ret:
  5930                           	callstack 0
  5931   000004                     ??i2_gpio_pin_write_logic:
  5932                           
  5933                           ; 1 bytes @ 0x3
  5934   000004                     	ds	1
  5935   000005                     ___awdiv@counter:
  5936                           	callstack 0
  5937   000005                     ___awmod@counter:
  5938                           	callstack 0
  5939   000005                     
  5940                           ; 1 bytes @ 0x4
  5941   000005                     	ds	1
  5942   000006                     CCPx_CompareMode_WriteData@ret:
  5943                           	callstack 0
  5944   000006                     ___awdiv@sign:
  5945                           	callstack 0
  5946   000006                     ___awmod@sign:
  5947                           	callstack 0
  5948   000006                     i2gpio_pin_write_logic@rt:
  5949                           	callstack 0
  5950                           
  5951                           ; 1 bytes @ 0x5
  5952   000006                     	ds	1
  5953   000007                     i2LCD_Send_4Bits@_LCD:
  5954                           	callstack 0
  5955   000007                     i2LCD_4Bits_Send_Enable_Signal@_LCD:
  5956                           	callstack 0
  5957   000007                     CCPx_CompareMode_WriteData@CCPx_reg:
  5958                           	callstack 0
  5959   000007                     ___awdiv@quotient:
  5960                           	callstack 0
  5961                           
  5962                           ; 2 bytes @ 0x6
  5963   000007                     	ds	1
  5964   000008                     i2LCD_Send_4Bits@_Data:
  5965                           	callstack 0
  5966   000008                     ??i2_LCD_4Bits_Send_Enable_Signal:
  5967                           
  5968                           ; 1 bytes @ 0x7
  5969   000008                     	ds	1
  5970   000009                     i2LCD_4Bits_Send_Enable_Signal@rt:
  5971                           	callstack 0
  5972   000009                     ??i2_LCD_Send_4Bits:
  5973                           
  5974                           ; 1 bytes @ 0x8
  5975   000009                     	ds	1
  5976   00000A                     i2LCD_Send_4Bits@rt:
  5977                           	callstack 0
  5978                           
  5979                           ; 1 bytes @ 0x9
  5980   00000A                     	ds	1
  5981   00000B                     i2ECU_LCD_4Bit_Send_Command@_LCD:
  5982                           	callstack 0
  5983   00000B                     i2ECU_LCD_4Bit_Send_char_Data@_LCD:
  5984                           	callstack 0
  5985                           
  5986                           ; 1 bytes @ 0xA
  5987   00000B                     	ds	1
  5988   00000C                     i2ECU_LCD_4Bit_Send_Command@_Command:
  5989                           	callstack 0
  5990   00000C                     i2ECU_LCD_4Bit_Send_char_Data@_Data:
  5991                           	callstack 0
  5992                           
  5993                           ; 1 bytes @ 0xB
  5994   00000C                     	ds	1
  5995   00000D                     i2ECU_LCD_4Bit_Send_Command@rt:
  5996                           	callstack 0
  5997   00000D                     i2ECU_LCD_4Bit_Send_char_Data@rt:
  5998                           	callstack 0
  5999   00000D                     
  6000                           ; 1 bytes @ 0xC
  6001   00000D                     	ds	1
  6002   00000E                     i2LCD_4Bits_Set_Curser@_LCD:
  6003                           	callstack 0
  6004                           
  6005                           ; 1 bytes @ 0xD
  6006   00000E                     	ds	1
  6007   00000F                     i2LCD_4Bits_Set_Curser@row:
  6008                           	callstack 0
  6009                           
  6010                           ; 1 bytes @ 0xE
  6011   00000F                     	ds	1
  6012   000010                     i2LCD_4Bits_Set_Curser@coloumn:
  6013                           	callstack 0
  6014                           
  6015                           ; 1 bytes @ 0xF
  6016   000010                     	ds	1
  6017   000011                     i2LCD_4Bits_Set_Curser@rt:
  6018                           	callstack 0
  6019   000011                     
  6020                           ; 1 bytes @ 0x10
  6021   000011                     	ds	1
  6022   000012                     i2ECU_LCD_4Bit_Send_String_Data_Postition@_LCD:
  6023                           	callstack 0
  6024                           
  6025                           ; 1 bytes @ 0x11
  6026   000012                     	ds	1
  6027   000013                     i2ECU_LCD_4Bit_Send_String_Data_Postition@_Row:
  6028                           	callstack 0
  6029                           
  6030                           ; 1 bytes @ 0x12
  6031   000013                     	ds	1
  6032   000014                     i2ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn:
  6033                           	callstack 0
  6034                           
  6035                           ; 1 bytes @ 0x13
  6036   000014                     	ds	1
  6037   000015                     i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str:
  6038                           	callstack 0
  6039                           
  6040                           ; 2 bytes @ 0x14
  6041   000015                     	ds	2
  6042   000017                     i2ECU_LCD_4Bit_Send_String_Data_Postition@rt:
  6043                           	callstack 0
  6044   000017                     
  6045                           ; 1 bytes @ 0x16
  6046   000017                     	ds	1
  6047   000018                     ??_InterruptManager:
  6048   000018                     
  6049                           ; 1 bytes @ 0x17
  6050   000018                     	ds	10
  6051                           
  6052 ;;
  6053 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  6054 ;;
  6055 ;; *************** function _main *****************
  6056 ;; Defined at:
  6057 ;;		line 185 in file "main.c"
  6058 ;; Parameters:    Size  Location     Type
  6059 ;;		None
  6060 ;; Auto vars:     Size  Location     Type
  6061 ;;		None
  6062 ;; Return value:  Size  Location     Type
  6063 ;;                  1    wreg      void 
  6064 ;; Registers used:
  6065 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  6066 ;; Tracked objects:
  6067 ;;		On entry : 0/0
  6068 ;;		On exit  : 0/0
  6069 ;;		Unchanged: 0/0
  6070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6073 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6074 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6075 ;;Total ram usage:        2 bytes
  6076 ;; Hardware stack levels required when called: 20
  6077 ;; This function calls:
  6078 ;;		_ADC_Get_Conversion_Result_Block
  6079 ;;		_ADC_Init
  6080 ;;		_Dashboard
  6081 ;;		_ECU_LCD_4Bit_Initialize
  6082 ;;		_ECU_LCD_4Bit_Send_Command
  6083 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
  6084 ;;		_I2C_Write1ByteRegister
  6085 ;;		_LCD_4Bits_Set_Curser
  6086 ;;		_REALTIMECLOCK_DS1307_Get_Data
  6087 ;;		_REALTIMECLOCK_DS1307_print_Data
  6088 ;;		_SYSTEM_Initialize
  6089 ;;		_TemperatureSensor_TC74_Read_Temp
  6090 ;;		_Timer0_Deinit
  6091 ;;		_Timer0_Init
  6092 ;;		_gpio_pin_initialize
  6093 ;;		_gpio_pin_write_logic
  6094 ;;		_keyPad_Initialize
  6095 ;;		_keyPad_Read
  6096 ;;		_update_display
  6097 ;; This function is called by:
  6098 ;;		Startup code after reset
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text0
  6103   001052                     __ptext0:
  6104                           	callstack 0
  6105   001052                     _main:
  6106                           	callstack 11
  6107   001052                     
  6108                           ;main.c: 188:     SYSTEM_Initialize();
  6109   001052  EC96  F02A         	call	_SYSTEM_Initialize	;wreg free
  6110   001056                     
  6111                           ;main.c: 206:     ret = gpio_pin_initialize(&Buzz);
  6112   001056  0E3D               	movlw	low _Buzz
  6113   001058  0100               	movlb	0	; () banked
  6114   00105A  6FDB               	movwf	gpio_pin_initialize@pinConfig& (0+255),b
  6115   00105C  6BDC               	clrf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
  6116   00105E  ECE8  F025         	call	_gpio_pin_initialize	;wreg free
  6117   001062  0101               	movlb	1	; () banked
  6118   001064  6F96               	movwf	_ret& (0+255),b
  6119   001066                     
  6120                           ; BSR set to: 1
  6121                           ;main.c: 207:     ret = ECU_LCD_4Bit_Initialize(&LCD_1);
  6122   001066  0E37               	movlw	low _LCD_1
  6123   001068  0100               	movlb	0	; () banked
  6124   00106A  6FE2               	movwf	ECU_LCD_4Bit_Initialize@_LCD& (0+255),b
  6125   00106C  ECA4  F019         	call	_ECU_LCD_4Bit_Initialize	;wreg free
  6126   001070  0101               	movlb	1	; () banked
  6127   001072  6F96               	movwf	_ret& (0+255),b
  6128   001074                     
  6129                           ; BSR set to: 1
  6130                           ;main.c: 208:     ret = keyPad_Initialize(&keypad_1);
  6131   001074  0E38               	movlw	low _keypad_1
  6132   001076  0100               	movlb	0	; () banked
  6133   001078  6FDF               	movwf	keyPad_Initialize@keypad& (0+255),b
  6134   00107A  0E01               	movlw	high _keypad_1
  6135   00107C  6FE0               	movwf	(keyPad_Initialize@keypad+1)& (0+255),b
  6136   00107E  EC40  F023         	call	_keyPad_Initialize	;wreg free
  6137   001082  0101               	movlb	1	; () banked
  6138   001084  6F96               	movwf	_ret& (0+255),b
  6139   001086                     
  6140                           ; BSR set to: 1
  6141                           ;main.c: 209:     ret = ADC_Init (&ADC_LDR);
  6142   001086  0E30               	movlw	low _ADC_LDR
  6143   001088  0100               	movlb	0	; () banked
  6144   00108A  6FD9               	movwf	ADC_Init@_ADC_config& (0+255),b
  6145   00108C  0E01               	movlw	high _ADC_LDR
  6146   00108E  6FDA               	movwf	(ADC_Init@_ADC_config+1)& (0+255),b
  6147   001090  EC58  F01F         	call	_ADC_Init	;wreg free
  6148   001094  0101               	movlb	1	; () banked
  6149   001096  6F96               	movwf	_ret& (0+255),b
  6150   001098                     l15296:
  6151                           
  6152                           ;main.c: 212:     Dashboard();
  6153   001098  ECA0  F01E         	call	_Dashboard	;wreg free
  6154   00109C                     l15298:
  6155                           
  6156                           ;main.c: 215:     {;main.c: 218:         NumberPressed = '\0';
  6157   00109C  6A30               	clrf	_NumberPressed^0,c
  6158                           
  6159                           ;main.c: 219:         while(NumberPressed == '\0'){
  6160   00109E  EFB8  F008         	goto	l15322
  6161   0010A2                     l15300:
  6162                           
  6163                           ;main.c: 220:             ret = keyPad_Read(&keypad_1, &NumberPressed);
  6164   0010A2  0E38               	movlw	low _keypad_1
  6165   0010A4  0100               	movlb	0	; () banked
  6166   0010A6  6FDB               	movwf	keyPad_Read@keypad& (0+255),b
  6167   0010A8  0E01               	movlw	high _keypad_1
  6168   0010AA  6FDC               	movwf	(keyPad_Read@keypad+1)& (0+255),b
  6169   0010AC  0E30               	movlw	low _NumberPressed
  6170   0010AE  6FDD               	movwf	keyPad_Read@keypad_value& (0+255),b
  6171   0010B0  EC32  F01B         	call	_keyPad_Read	;wreg free
  6172   0010B4  0101               	movlb	1	; () banked
  6173   0010B6  6F96               	movwf	_ret& (0+255),b
  6174   0010B8                     
  6175                           ; BSR set to: 1
  6176                           ;main.c: 222:             TemperatureSensor_TC74_Read_Value = TemperatureSensor_TC74_Rea
      +                          d_Temp(0x92);
  6177   0010B8  0E92               	movlw	146
  6178   0010BA  EC53  F02A         	call	_TemperatureSensor_TC74_Read_Temp
  6179   0010BE  6E3E               	movwf	_TemperatureSensor_TC74_Read_Value^0,c
  6180   0010C0                     
  6181                           ;main.c: 223:             I2C_Write1ByteRegister(0x70, 0x00, TemperatureSensor_TC74_Read
      +                          _Value);
  6182   0010C0  0E00               	movlw	0
  6183   0010C2  0100               	movlb	0	; () banked
  6184   0010C4  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  6185   0010C6  C03E  F0E5         	movff	_TemperatureSensor_TC74_Read_Value,I2C_Write1ByteRegister@data
  6186   0010CA  0E70               	movlw	112
  6187   0010CC  EC6F  F024         	call	_I2C_Write1ByteRegister
  6188   0010D0                     
  6189                           ;main.c: 224:             _delay((unsigned long)((100)*(8000000/4000.0)));
  6190   0010D0  0E02               	movlw	2
  6191   0010D2  0101               	movlb	1	; () banked
  6192   0010D4  6F95               	movwf	(??_main+1)& (0+255),b
  6193   0010D6  0E04               	movlw	4
  6194   0010D8  6F94               	movwf	??_main& (0+255),b
  6195   0010DA  0EBA               	movlw	186
  6196   0010DC                     u14307:
  6197   0010DC  2EE8               	decfsz	wreg,f,c
  6198   0010DE  D7FE               	bra	u14307
  6199   0010E0  2F94               	decfsz	??_main& (0+255),f,b
  6200   0010E2  D7FC               	bra	u14307
  6201   0010E4  2F95               	decfsz	(??_main+1)& (0+255),f,b
  6202   0010E6  D7FA               	bra	u14307
  6203   0010E8  0000               	nop	
  6204   0010EA                     
  6205                           ;main.c: 226:             ret = ADC_Get_Conversion_Result_Block (&ADC_LDR, ADC_CHANNEL_A
      +                          N0, &LDR_Read_Value);
  6206   0010EA  0E30               	movlw	low _ADC_LDR
  6207   0010EC  0100               	movlb	0	; () banked
  6208   0010EE  6FDC               	movwf	ADC_Get_Conversion_Result_Block@_ADC_config& (0+255),b
  6209   0010F0  0E01               	movlw	high _ADC_LDR
  6210   0010F2  6FDD               	movwf	(ADC_Get_Conversion_Result_Block@_ADC_config+1)& (0+255),b
  6211   0010F4  0E00               	movlw	0
  6212   0010F6  6FDE               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Channel& (0+255),b
  6213   0010F8  0E31               	movlw	low _LDR_Read_Value
  6214   0010FA  6FDF               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Result& (0+255),b
  6215   0010FC  ECAB  F026         	call	_ADC_Get_Conversion_Result_Block	;wreg free
  6216   001100  0101               	movlb	1	; () banked
  6217   001102  6F96               	movwf	_ret& (0+255),b
  6218   001104                     
  6219                           ; BSR set to: 1
  6220                           ;main.c: 227:             I2C_Write1ByteRegister(0x50, 0x00, LDR_Read_Value);
  6221   001104  0E00               	movlw	0
  6222   001106  0100               	movlb	0	; () banked
  6223   001108  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  6224   00110A  C031  F0E5         	movff	_LDR_Read_Value,I2C_Write1ByteRegister@data
  6225   00110E  0E50               	movlw	80
  6226   001110  EC6F  F024         	call	_I2C_Write1ByteRegister
  6227   001114                     
  6228                           ;main.c: 228:             _delay((unsigned long)((100)*(8000000/4000.0)));
  6229   001114  0E02               	movlw	2
  6230   001116  0101               	movlb	1	; () banked
  6231   001118  6F95               	movwf	(??_main+1)& (0+255),b
  6232   00111A  0E04               	movlw	4
  6233   00111C  6F94               	movwf	??_main& (0+255),b
  6234   00111E  0EBA               	movlw	186
  6235   001120                     u14317:
  6236   001120  2EE8               	decfsz	wreg,f,c
  6237   001122  D7FE               	bra	u14317
  6238   001124  2F94               	decfsz	??_main& (0+255),f,b
  6239   001126  D7FC               	bra	u14317
  6240   001128  2F95               	decfsz	(??_main+1)& (0+255),f,b
  6241   00112A  D7FA               	bra	u14317
  6242   00112C  0000               	nop	
  6243   00112E                     
  6244                           ;main.c: 230:             if(seconds == 0 && minutes == 0 && hours == 0){
  6245   00112E  5026               	movf	_seconds^0,w,c
  6246   001130  A4D8               	btfss	status,2,c
  6247   001132  EF9D  F008         	goto	u13931
  6248   001136  EF9F  F008         	goto	u13930
  6249   00113A                     u13931:
  6250   00113A  EFB8  F008         	goto	l15322
  6251   00113E                     u13930:
  6252   00113E  5025               	movf	_minutes^0,w,c
  6253   001140  A4D8               	btfss	status,2,c
  6254   001142  EFA5  F008         	goto	u13941
  6255   001146  EFA7  F008         	goto	u13940
  6256   00114A                     u13941:
  6257   00114A  EFB8  F008         	goto	l15322
  6258   00114E                     u13940:
  6259   00114E  5024               	movf	_hours^0,w,c
  6260   001150  A4D8               	btfss	status,2,c
  6261   001152  EFAD  F008         	goto	u13951
  6262   001156  EFAF  F008         	goto	u13950
  6263   00115A                     u13951:
  6264   00115A  EFB8  F008         	goto	l15322
  6265   00115E                     u13950:
  6266   00115E                     
  6267                           ;main.c: 231:                 ret = Timer0_Deinit (&timer0_1);
  6268   00115E  0E40               	movlw	low _timer0_1
  6269   001160  0100               	movlb	0	; () banked
  6270   001162  6FD5               	movwf	Timer0_Deinit@_timer0& (0+255),b
  6271   001164  0E01               	movlw	high _timer0_1
  6272   001166  6FD6               	movwf	(Timer0_Deinit@_timer0+1)& (0+255),b
  6273   001168  EC82  F029         	call	_Timer0_Deinit	;wreg free
  6274   00116C  0101               	movlb	1	; () banked
  6275   00116E  6F96               	movwf	_ret& (0+255),b
  6276   001170                     l15322:
  6277                           
  6278                           ;main.c: 219:         while(NumberPressed == '\0'){
  6279   001170  5030               	movf	_NumberPressed^0,w,c
  6280   001172  B4D8               	btfsc	status,2,c
  6281   001174  EFBE  F008         	goto	u13961
  6282   001178  EFC0  F008         	goto	u13960
  6283   00117C                     u13961:
  6284   00117C  EF51  F008         	goto	l15300
  6285   001180                     u13960:
  6286   001180                     
  6287                           ;main.c: 234:         if( NumberPressed != '\0'){
  6288   001180  5030               	movf	_NumberPressed^0,w,c
  6289   001182  B4D8               	btfsc	status,2,c
  6290   001184  EFC6  F008         	goto	u13971
  6291   001188  EFC8  F008         	goto	u13970
  6292   00118C                     u13971:
  6293   00118C  EF4E  F008         	goto	l15298
  6294   001190                     u13970:
  6295   001190  EFFE  F00C         	goto	l15612
  6296   001194                     l15328:
  6297                           
  6298                           ;main.c: 237:                 ECU_LCD_4Bit_Send_Command(&LCD_1, 0x01);
  6299   001194  0E37               	movlw	low _LCD_1
  6300   001196  0100               	movlb	0	; () banked
  6301   001198  6FDF               	movwf	ECU_LCD_4Bit_Send_Command@_LCD& (0+255),b
  6302   00119A  0E01               	movlw	1
  6303   00119C  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  6304   00119E  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  6305   0011A2                     
  6306                           ;main.c: 238:                 _delay((unsigned long)((10)*(8000000/4000.0)));
  6307   0011A2  0E1A               	movlw	26
  6308   0011A4  0101               	movlb	1	; () banked
  6309   0011A6  6F94               	movwf	??_main& (0+255),b
  6310   0011A8  0EF8               	movlw	248
  6311   0011AA                     u14327:
  6312   0011AA  2EE8               	decfsz	wreg,f,c
  6313   0011AC  D7FE               	bra	u14327
  6314   0011AE  2F94               	decfsz	??_main& (0+255),f,b
  6315   0011B0  D7FC               	bra	u14327
  6316   0011B2  0000               	nop	
  6317   0011B4                     
  6318                           ;main.c: 240:                 TemperatureSensor_TC74_Read_Value = TemperatureSensor_TC74
      +                          _Read_Temp(0x92);
  6319   0011B4  0E92               	movlw	146
  6320   0011B6  EC53  F02A         	call	_TemperatureSensor_TC74_Read_Temp
  6321   0011BA  6E3E               	movwf	_TemperatureSensor_TC74_Read_Value^0,c
  6322   0011BC                     
  6323                           ;main.c: 241:                 I2C_Write1ByteRegister(0x70, 0x00, TemperatureSensor_TC74_
      +                          Read_Value);
  6324   0011BC  0E00               	movlw	0
  6325   0011BE  0100               	movlb	0	; () banked
  6326   0011C0  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  6327   0011C2  C03E  F0E5         	movff	_TemperatureSensor_TC74_Read_Value,I2C_Write1ByteRegister@data
  6328   0011C6  0E70               	movlw	112
  6329   0011C8  EC6F  F024         	call	_I2C_Write1ByteRegister
  6330   0011CC                     
  6331                           ;main.c: 242:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  6332   0011CC  0E02               	movlw	2
  6333   0011CE  0101               	movlb	1	; () banked
  6334   0011D0  6F95               	movwf	(??_main+1)& (0+255),b
  6335   0011D2  0E04               	movlw	4
  6336   0011D4  6F94               	movwf	??_main& (0+255),b
  6337   0011D6  0EBA               	movlw	186
  6338   0011D8                     u14337:
  6339   0011D8  2EE8               	decfsz	wreg,f,c
  6340   0011DA  D7FE               	bra	u14337
  6341   0011DC  2F94               	decfsz	??_main& (0+255),f,b
  6342   0011DE  D7FC               	bra	u14337
  6343   0011E0  2F95               	decfsz	(??_main+1)& (0+255),f,b
  6344   0011E2  D7FA               	bra	u14337
  6345   0011E4  0000               	nop	
  6346                           
  6347                           ;main.c: 244:                 ret = ADC_Get_Conversion_Result_Block (&ADC_LDR, ADC_CHANN
      +                          EL_AN0, &LDR_Read_Value);
  6348   0011E6  0E30               	movlw	low _ADC_LDR
  6349   0011E8  0100               	movlb	0	; () banked
  6350   0011EA  6FDC               	movwf	ADC_Get_Conversion_Result_Block@_ADC_config& (0+255),b
  6351   0011EC  0E01               	movlw	high _ADC_LDR
  6352   0011EE  6FDD               	movwf	(ADC_Get_Conversion_Result_Block@_ADC_config+1)& (0+255),b
  6353   0011F0  0E00               	movlw	0
  6354   0011F2  6FDE               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Channel& (0+255),b
  6355   0011F4  0E31               	movlw	low _LDR_Read_Value
  6356   0011F6  6FDF               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Result& (0+255),b
  6357   0011F8  ECAB  F026         	call	_ADC_Get_Conversion_Result_Block	;wreg free
  6358   0011FC  0101               	movlb	1	; () banked
  6359   0011FE  6F96               	movwf	_ret& (0+255),b
  6360   001200                     
  6361                           ; BSR set to: 1
  6362                           ;main.c: 245:                 I2C_Write1ByteRegister(0x50, 0x00, LDR_Read_Value);
  6363   001200  0E00               	movlw	0
  6364   001202  0100               	movlb	0	; () banked
  6365   001204  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  6366   001206  C031  F0E5         	movff	_LDR_Read_Value,I2C_Write1ByteRegister@data
  6367   00120A  0E50               	movlw	80
  6368   00120C  EC6F  F024         	call	_I2C_Write1ByteRegister
  6369   001210                     
  6370                           ;main.c: 246:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  6371   001210  0E02               	movlw	2
  6372   001212  0101               	movlb	1	; () banked
  6373   001214  6F95               	movwf	(??_main+1)& (0+255),b
  6374   001216  0E04               	movlw	4
  6375   001218  6F94               	movwf	??_main& (0+255),b
  6376   00121A  0EBA               	movlw	186
  6377   00121C                     u14347:
  6378   00121C  2EE8               	decfsz	wreg,f,c
  6379   00121E  D7FE               	bra	u14347
  6380   001220  2F94               	decfsz	??_main& (0+255),f,b
  6381   001222  D7FC               	bra	u14347
  6382   001224  2F95               	decfsz	(??_main+1)& (0+255),f,b
  6383   001226  D7FA               	bra	u14347
  6384   001228  0000               	nop	
  6385   00122A                     
  6386                           ;main.c: 248:                 exit_Clock = '\0';
  6387   00122A  6A2C               	clrf	_exit_Clock^0,c
  6388   00122C                     
  6389                           ;main.c: 249:                 ret = ECU_LCD_4Bit_Send_Command(&LCD_1, 0x0C);
  6390   00122C  0E37               	movlw	low _LCD_1
  6391   00122E  0100               	movlb	0	; () banked
  6392   001230  6FDF               	movwf	ECU_LCD_4Bit_Send_Command@_LCD& (0+255),b
  6393   001232  0E0C               	movlw	12
  6394   001234  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  6395   001236  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  6396   00123A  0101               	movlb	1	; () banked
  6397   00123C  6F96               	movwf	_ret& (0+255),b
  6398                           
  6399                           ;main.c: 250:                 while(exit_Clock != '1'){
  6400   00123E  EF95  F009         	goto	l15366
  6401   001242                     l15346:
  6402                           
  6403                           ; BSR set to: 1
  6404                           ;main.c: 252:                     TemperatureSensor_TC74_Read_Value = TemperatureSensor_
      +                          TC74_Read_Temp(0x92);
  6405   001242  0E92               	movlw	146
  6406   001244  EC53  F02A         	call	_TemperatureSensor_TC74_Read_Temp
  6407   001248  6E3E               	movwf	_TemperatureSensor_TC74_Read_Value^0,c
  6408                           
  6409                           ;main.c: 253:                     I2C_Write1ByteRegister(0x70, 0x00, TemperatureSensor_T
      +                          C74_Read_Value);
  6410   00124A  0E00               	movlw	0
  6411   00124C  0100               	movlb	0	; () banked
  6412   00124E  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  6413   001250  C03E  F0E5         	movff	_TemperatureSensor_TC74_Read_Value,I2C_Write1ByteRegister@data
  6414   001254  0E70               	movlw	112
  6415   001256  EC6F  F024         	call	_I2C_Write1ByteRegister
  6416   00125A                     
  6417                           ;main.c: 254:                     _delay((unsigned long)((50)*(8000000/4000.0)));
  6418   00125A  0E82               	movlw	130
  6419   00125C  0101               	movlb	1	; () banked
  6420   00125E  6F94               	movwf	??_main& (0+255),b
  6421   001260  0EDD               	movlw	221
  6422   001262                     u14357:
  6423   001262  2EE8               	decfsz	wreg,f,c
  6424   001264  D7FE               	bra	u14357
  6425   001266  2F94               	decfsz	??_main& (0+255),f,b
  6426   001268  D7FC               	bra	u14357
  6427   00126A  F000 F000          	nop2	
  6428   00126E                     
  6429                           ;main.c: 256:                     ret = ADC_Get_Conversion_Result_Block (&ADC_LDR, ADC_C
      +                          HANNEL_AN0, &LDR_Read_Value);
  6430   00126E  0E30               	movlw	low _ADC_LDR
  6431   001270  0100               	movlb	0	; () banked
  6432   001272  6FDC               	movwf	ADC_Get_Conversion_Result_Block@_ADC_config& (0+255),b
  6433   001274  0E01               	movlw	high _ADC_LDR
  6434   001276  6FDD               	movwf	(ADC_Get_Conversion_Result_Block@_ADC_config+1)& (0+255),b
  6435   001278  0E00               	movlw	0
  6436   00127A  6FDE               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Channel& (0+255),b
  6437   00127C  0E31               	movlw	low _LDR_Read_Value
  6438   00127E  6FDF               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Result& (0+255),b
  6439   001280  ECAB  F026         	call	_ADC_Get_Conversion_Result_Block	;wreg free
  6440   001284  0101               	movlb	1	; () banked
  6441   001286  6F96               	movwf	_ret& (0+255),b
  6442   001288                     
  6443                           ; BSR set to: 1
  6444                           ;main.c: 257:                     I2C_Write1ByteRegister(0x50, 0x00, LDR_Read_Value);
  6445   001288  0E00               	movlw	0
  6446   00128A  0100               	movlb	0	; () banked
  6447   00128C  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  6448   00128E  C031  F0E5         	movff	_LDR_Read_Value,I2C_Write1ByteRegister@data
  6449   001292  0E50               	movlw	80
  6450   001294  EC6F  F024         	call	_I2C_Write1ByteRegister
  6451   001298                     
  6452                           ;main.c: 258:                     _delay((unsigned long)((50)*(8000000/4000.0)));
  6453   001298  0E82               	movlw	130
  6454   00129A  0101               	movlb	1	; () banked
  6455   00129C  6F94               	movwf	??_main& (0+255),b
  6456   00129E  0EDD               	movlw	221
  6457   0012A0                     u14367:
  6458   0012A0  2EE8               	decfsz	wreg,f,c
  6459   0012A2  D7FE               	bra	u14367
  6460   0012A4  2F94               	decfsz	??_main& (0+255),f,b
  6461   0012A6  D7FC               	bra	u14367
  6462   0012A8  F000 F000          	nop2	
  6463   0012AC                     
  6464                           ;main.c: 260:                     ret = keyPad_Read(&keypad_1, &exit_Clock);
  6465   0012AC  0E38               	movlw	low _keypad_1
  6466   0012AE  0100               	movlb	0	; () banked
  6467   0012B0  6FDB               	movwf	keyPad_Read@keypad& (0+255),b
  6468   0012B2  0E01               	movlw	high _keypad_1
  6469   0012B4  6FDC               	movwf	(keyPad_Read@keypad+1)& (0+255),b
  6470   0012B6  0E2C               	movlw	low _exit_Clock
  6471   0012B8  6FDD               	movwf	keyPad_Read@keypad_value& (0+255),b
  6472   0012BA  EC32  F01B         	call	_keyPad_Read	;wreg free
  6473   0012BE  0101               	movlb	1	; () banked
  6474   0012C0  6F96               	movwf	_ret& (0+255),b
  6475   0012C2                     
  6476                           ; BSR set to: 1
  6477                           ;main.c: 261:                     REALTIMECLOCK_DS1307 = REALTIMECLOCK_DS1307_Get_Data()
      +                          ;
  6478   0012C2  EC4B  F025         	call	_REALTIMECLOCK_DS1307_Get_Data	;wreg free
  6479   0012C6  EE21  F047         	lfsr	2,_REALTIMECLOCK_DS1307
  6480   0012CA  0E05               	movlw	5
  6481   0012CC                     u13981:
  6482   0012CC  CFEB FFDB          	movff	plusw0,plusw2
  6483   0012D0  06E8               	decf	wreg,f,c
  6484   0012D2  E2FC               	bc	u13981
  6485   0012D4                     
  6486                           ;main.c: 262:                     _delay((unsigned long)((50)*(8000000/4000.0)));
  6487   0012D4  0E82               	movlw	130
  6488   0012D6  0101               	movlb	1	; () banked
  6489   0012D8  6F94               	movwf	??_main& (0+255),b
  6490   0012DA  0EDD               	movlw	221
  6491   0012DC                     u14377:
  6492   0012DC  2EE8               	decfsz	wreg,f,c
  6493   0012DE  D7FE               	bra	u14377
  6494   0012E0  2F94               	decfsz	??_main& (0+255),f,b
  6495   0012E2  D7FC               	bra	u14377
  6496   0012E4  F000 F000          	nop2	
  6497   0012E8                     
  6498                           ;main.c: 263:                     ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1, 
      +                          2, 1,REALTIMECLOCK_DS1307_print_Data());
  6499   0012E8  0E37               	movlw	low _LCD_1
  6500   0012EA  0101               	movlb	1	; () banked
  6501   0012EC  6F8C               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD& (0+255),b
  6502   0012EE  0E02               	movlw	2
  6503   0012F0  6F8D               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Row& (0+255),b
  6504   0012F2  0E01               	movlw	1
  6505   0012F4  6F8E               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn& (0+255),b
  6506   0012F6  EC27  F01C         	call	_REALTIMECLOCK_DS1307_print_Data	;wreg free
  6507   0012FA  C18A  F18F         	movff	?_REALTIMECLOCK_DS1307_print_Data,ECU_LCD_4Bit_Send_String_Data_Postition@_Str
  6508   0012FE  C18B  F190         	movff	?_REALTIMECLOCK_DS1307_print_Data+1,ECU_LCD_4Bit_Send_String_Data_Postition@_Str+
      +                          1
  6509   001302  ECFF  F020         	call	_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
  6510   001306  0101               	movlb	1	; () banked
  6511   001308  6F96               	movwf	_ret& (0+255),b
  6512   00130A                     
  6513                           ; BSR set to: 1
  6514                           ;main.c: 264:                     ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1, 
      +                          4, 1,"1: Back");
  6515   00130A  0E37               	movlw	low _LCD_1
  6516   00130C  6F8C               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD& (0+255),b
  6517   00130E  0E04               	movlw	4
  6518   001310  6F8D               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Row& (0+255),b
  6519   001312  0E01               	movlw	1
  6520   001314  6F8E               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn& (0+255),b
  6521   001316  0E3E               	movlw	low STR_6
  6522   001318  6F8F               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),b
  6523   00131A  518F               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),w,b
  6524   00131C  A4D8               	btfss	status,2,c
  6525   00131E  0E10               	movlw	high __smallconst
  6526   001320  6F90               	movwf	(ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)& (0+255),b
  6527   001322  ECFF  F020         	call	_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
  6528   001326  0101               	movlb	1	; () banked
  6529   001328  6F96               	movwf	_ret& (0+255),b
  6530   00132A                     l15366:
  6531                           
  6532                           ; BSR set to: 1
  6533                           ;main.c: 250:                 while(exit_Clock != '1'){
  6534   00132A  0E31               	movlw	49
  6535   00132C  182C               	xorwf	_exit_Clock^0,w,c
  6536   00132E  A4D8               	btfss	status,2,c
  6537   001330  EF9C  F009         	goto	u13991
  6538   001334  EF9E  F009         	goto	u13990
  6539   001338                     u13991:
  6540   001338  EF21  F009         	goto	l15346
  6541   00133C                     u13990:
  6542   00133C                     
  6543                           ; BSR set to: 1
  6544                           ;main.c: 266:                 if(exit_Clock != '\0'){
  6545   00133C  502C               	movf	_exit_Clock^0,w,c
  6546   00133E  B4D8               	btfsc	status,2,c
  6547   001340  EFA4  F009         	goto	u14001
  6548   001344  EFA6  F009         	goto	u14000
  6549   001348                     u14001:
  6550   001348  EF09  F00D         	goto	l2675
  6551   00134C                     u14000:
  6552   00134C                     
  6553                           ; BSR set to: 1
  6554                           ;main.c: 267:                     ECU_LCD_4Bit_Send_Command(&LCD_1, 0x01);
  6555   00134C  0E37               	movlw	low _LCD_1
  6556   00134E  0100               	movlb	0	; () banked
  6557   001350  6FDF               	movwf	ECU_LCD_4Bit_Send_Command@_LCD& (0+255),b
  6558   001352  0E01               	movlw	1
  6559   001354  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  6560   001356  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  6561   00135A                     
  6562                           ;main.c: 268:                     _delay((unsigned long)((10)*(8000000/4000.0)));
  6563   00135A  0E1A               	movlw	26
  6564   00135C  0101               	movlb	1	; () banked
  6565   00135E  6F94               	movwf	??_main& (0+255),b
  6566   001360  0EF8               	movlw	248
  6567   001362                     u14387:
  6568   001362  2EE8               	decfsz	wreg,f,c
  6569   001364  D7FE               	bra	u14387
  6570   001366  2F94               	decfsz	??_main& (0+255),f,b
  6571   001368  D7FC               	bra	u14387
  6572   00136A  0000               	nop	
  6573   00136C  EF4C  F008         	goto	l15296
  6574   001370                     l15376:
  6575                           
  6576                           ;main.c: 275:                 ECU_LCD_4Bit_Send_Command(&LCD_1, 0x01);
  6577   001370  0E37               	movlw	low _LCD_1
  6578   001372  0100               	movlb	0	; () banked
  6579   001374  6FDF               	movwf	ECU_LCD_4Bit_Send_Command@_LCD& (0+255),b
  6580   001376  0E01               	movlw	1
  6581   001378  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  6582   00137A  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  6583   00137E                     
  6584                           ;main.c: 276:                 _delay((unsigned long)((10)*(8000000/4000.0)));
  6585   00137E  0E1A               	movlw	26
  6586   001380  0101               	movlb	1	; () banked
  6587   001382  6F94               	movwf	??_main& (0+255),b
  6588   001384  0EF8               	movlw	248
  6589   001386                     u14397:
  6590   001386  2EE8               	decfsz	wreg,f,c
  6591   001388  D7FE               	bra	u14397
  6592   00138A  2F94               	decfsz	??_main& (0+255),f,b
  6593   00138C  D7FC               	bra	u14397
  6594   00138E  0000               	nop	
  6595   001390                     
  6596                           ;main.c: 277:                 exit_alarm = 1;
  6597   001390  0E01               	movlw	1
  6598   001392  6E2D               	movwf	_exit_alarm^0,c
  6599   001394                     
  6600                           ;main.c: 278:                 update_display();
  6601   001394  ECB4  F01A         	call	_update_display	;wreg free
  6602   001398                     
  6603                           ;main.c: 279:                 ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1, 4, 1
      +                          ,"1: Back");
  6604   001398  0E37               	movlw	low _LCD_1
  6605   00139A  0101               	movlb	1	; () banked
  6606   00139C  6F8C               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD& (0+255),b
  6607   00139E  0E04               	movlw	4
  6608   0013A0  6F8D               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Row& (0+255),b
  6609   0013A2  0E01               	movlw	1
  6610   0013A4  6F8E               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn& (0+255),b
  6611   0013A6  0E3E               	movlw	low STR_6
  6612   0013A8  6F8F               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),b
  6613   0013AA  518F               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),w,b
  6614   0013AC  A4D8               	btfss	status,2,c
  6615   0013AE  0E10               	movlw	high __smallconst
  6616   0013B0  6F90               	movwf	(ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)& (0+255),b
  6617   0013B2  ECFF  F020         	call	_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
  6618   0013B6  0101               	movlb	1	; () banked
  6619   0013B8  6F96               	movwf	_ret& (0+255),b
  6620                           
  6621                           ;main.c: 280:                 while(exit_alarm != '1'){
  6622   0013BA  EFF3  F00C         	goto	l15610
  6623   0013BE                     l15386:
  6624                           
  6625                           ;main.c: 282:                     TemperatureSensor_TC74_Read_Value = TemperatureSensor_
      +                          TC74_Read_Temp(0x92);
  6626   0013BE  0E92               	movlw	146
  6627   0013C0  EC53  F02A         	call	_TemperatureSensor_TC74_Read_Temp
  6628   0013C4  6E3E               	movwf	_TemperatureSensor_TC74_Read_Value^0,c
  6629                           
  6630                           ;main.c: 283:                     I2C_Write1ByteRegister(0x70, 0x00, TemperatureSensor_T
      +                          C74_Read_Value);
  6631   0013C6  0E00               	movlw	0
  6632   0013C8  0100               	movlb	0	; () banked
  6633   0013CA  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  6634   0013CC  C03E  F0E5         	movff	_TemperatureSensor_TC74_Read_Value,I2C_Write1ByteRegister@data
  6635   0013D0  0E70               	movlw	112
  6636   0013D2  EC6F  F024         	call	_I2C_Write1ByteRegister
  6637   0013D6                     
  6638                           ;main.c: 284:                     _delay((unsigned long)((100)*(8000000/4000.0)));
  6639   0013D6  0E02               	movlw	2
  6640   0013D8  0101               	movlb	1	; () banked
  6641   0013DA  6F95               	movwf	(??_main+1)& (0+255),b
  6642   0013DC  0E04               	movlw	4
  6643   0013DE  6F94               	movwf	??_main& (0+255),b
  6644   0013E0  0EBA               	movlw	186
  6645   0013E2                     u14407:
  6646   0013E2  2EE8               	decfsz	wreg,f,c
  6647   0013E4  D7FE               	bra	u14407
  6648   0013E6  2F94               	decfsz	??_main& (0+255),f,b
  6649   0013E8  D7FC               	bra	u14407
  6650   0013EA  2F95               	decfsz	(??_main+1)& (0+255),f,b
  6651   0013EC  D7FA               	bra	u14407
  6652   0013EE  0000               	nop	
  6653   0013F0                     
  6654                           ;main.c: 286:                     ret = ADC_Get_Conversion_Result_Block (&ADC_LDR, ADC_C
      +                          HANNEL_AN0, &LDR_Read_Value);
  6655   0013F0  0E30               	movlw	low _ADC_LDR
  6656   0013F2  0100               	movlb	0	; () banked
  6657   0013F4  6FDC               	movwf	ADC_Get_Conversion_Result_Block@_ADC_config& (0+255),b
  6658   0013F6  0E01               	movlw	high _ADC_LDR
  6659   0013F8  6FDD               	movwf	(ADC_Get_Conversion_Result_Block@_ADC_config+1)& (0+255),b
  6660   0013FA  0E00               	movlw	0
  6661   0013FC  6FDE               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Channel& (0+255),b
  6662   0013FE  0E31               	movlw	low _LDR_Read_Value
  6663   001400  6FDF               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Result& (0+255),b
  6664   001402  ECAB  F026         	call	_ADC_Get_Conversion_Result_Block	;wreg free
  6665   001406  0101               	movlb	1	; () banked
  6666   001408  6F96               	movwf	_ret& (0+255),b
  6667   00140A                     
  6668                           ; BSR set to: 1
  6669                           ;main.c: 287:                     I2C_Write1ByteRegister(0x50, 0x00, LDR_Read_Value);
  6670   00140A  0E00               	movlw	0
  6671   00140C  0100               	movlb	0	; () banked
  6672   00140E  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  6673   001410  C031  F0E5         	movff	_LDR_Read_Value,I2C_Write1ByteRegister@data
  6674   001414  0E50               	movlw	80
  6675   001416  EC6F  F024         	call	_I2C_Write1ByteRegister
  6676   00141A                     
  6677                           ;main.c: 288:                      _delay((unsigned long)((100)*(8000000/4000.0)));
  6678   00141A  0E02               	movlw	2
  6679   00141C  0101               	movlb	1	; () banked
  6680   00141E  6F95               	movwf	(??_main+1)& (0+255),b
  6681   001420  0E04               	movlw	4
  6682   001422  6F94               	movwf	??_main& (0+255),b
  6683   001424  0EBA               	movlw	186
  6684   001426                     u14417:
  6685   001426  2EE8               	decfsz	wreg,f,c
  6686   001428  D7FE               	bra	u14417
  6687   00142A  2F94               	decfsz	??_main& (0+255),f,b
  6688   00142C  D7FC               	bra	u14417
  6689   00142E  2F95               	decfsz	(??_main+1)& (0+255),f,b
  6690   001430  D7FA               	bra	u14417
  6691   001432  0000               	nop	
  6692                           
  6693                           ;main.c: 290:                     while(nextBack == '\0'){
  6694   001434  EFDC  F00A         	goto	l15434
  6695   001438                     l15396:
  6696                           
  6697                           ;main.c: 292:                         TemperatureSensor_TC74_Read_Value = TemperatureSen
      +                          sor_TC74_Read_Temp(0x92);
  6698   001438  0E92               	movlw	146
  6699   00143A  EC53  F02A         	call	_TemperatureSensor_TC74_Read_Temp
  6700   00143E  6E3E               	movwf	_TemperatureSensor_TC74_Read_Value^0,c
  6701                           
  6702                           ;main.c: 293:                         I2C_Write1ByteRegister(0x70, 0x00, TemperatureSens
      +                          or_TC74_Read_Value);
  6703   001440  0E00               	movlw	0
  6704   001442  0100               	movlb	0	; () banked
  6705   001444  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  6706   001446  C03E  F0E5         	movff	_TemperatureSensor_TC74_Read_Value,I2C_Write1ByteRegister@data
  6707   00144A  0E70               	movlw	112
  6708   00144C  EC6F  F024         	call	_I2C_Write1ByteRegister
  6709   001450                     
  6710                           ;main.c: 294:                         _delay((unsigned long)((100)*(8000000/4000.0)));
  6711   001450  0E02               	movlw	2
  6712   001452  0101               	movlb	1	; () banked
  6713   001454  6F95               	movwf	(??_main+1)& (0+255),b
  6714   001456  0E04               	movlw	4
  6715   001458  6F94               	movwf	??_main& (0+255),b
  6716   00145A  0EBA               	movlw	186
  6717   00145C                     u14427:
  6718   00145C  2EE8               	decfsz	wreg,f,c
  6719   00145E  D7FE               	bra	u14427
  6720   001460  2F94               	decfsz	??_main& (0+255),f,b
  6721   001462  D7FC               	bra	u14427
  6722   001464  2F95               	decfsz	(??_main+1)& (0+255),f,b
  6723   001466  D7FA               	bra	u14427
  6724   001468  0000               	nop	
  6725   00146A                     
  6726                           ;main.c: 296:                         ret = ADC_Get_Conversion_Result_Block (&ADC_LDR, A
      +                          DC_CHANNEL_AN0, &LDR_Read_Value);
  6727   00146A  0E30               	movlw	low _ADC_LDR
  6728   00146C  0100               	movlb	0	; () banked
  6729   00146E  6FDC               	movwf	ADC_Get_Conversion_Result_Block@_ADC_config& (0+255),b
  6730   001470  0E01               	movlw	high _ADC_LDR
  6731   001472  6FDD               	movwf	(ADC_Get_Conversion_Result_Block@_ADC_config+1)& (0+255),b
  6732   001474  0E00               	movlw	0
  6733   001476  6FDE               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Channel& (0+255),b
  6734   001478  0E31               	movlw	low _LDR_Read_Value
  6735   00147A  6FDF               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Result& (0+255),b
  6736   00147C  ECAB  F026         	call	_ADC_Get_Conversion_Result_Block	;wreg free
  6737   001480  0101               	movlb	1	; () banked
  6738   001482  6F96               	movwf	_ret& (0+255),b
  6739   001484                     
  6740                           ; BSR set to: 1
  6741                           ;main.c: 297:                         I2C_Write1ByteRegister(0x50, 0x00, LDR_Read_Value)
      +                          ;
  6742   001484  0E00               	movlw	0
  6743   001486  0100               	movlb	0	; () banked
  6744   001488  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  6745   00148A  C031  F0E5         	movff	_LDR_Read_Value,I2C_Write1ByteRegister@data
  6746   00148E  0E50               	movlw	80
  6747   001490  EC6F  F024         	call	_I2C_Write1ByteRegister
  6748   001494                     
  6749                           ;main.c: 298:                         _delay((unsigned long)((100)*(8000000/4000.0)));
  6750   001494  0E02               	movlw	2
  6751   001496  0101               	movlb	1	; () banked
  6752   001498  6F95               	movwf	(??_main+1)& (0+255),b
  6753   00149A  0E04               	movlw	4
  6754   00149C  6F94               	movwf	??_main& (0+255),b
  6755   00149E  0EBA               	movlw	186
  6756   0014A0                     u14437:
  6757   0014A0  2EE8               	decfsz	wreg,f,c
  6758   0014A2  D7FE               	bra	u14437
  6759   0014A4  2F94               	decfsz	??_main& (0+255),f,b
  6760   0014A6  D7FC               	bra	u14437
  6761   0014A8  2F95               	decfsz	(??_main+1)& (0+255),f,b
  6762   0014AA  D7FA               	bra	u14437
  6763   0014AC  0000               	nop	
  6764   0014AE                     
  6765                           ;main.c: 300:                         if(seconds == 0 && minutes == 0 && hours == 0){
  6766   0014AE  5026               	movf	_seconds^0,w,c
  6767   0014B0  A4D8               	btfss	status,2,c
  6768   0014B2  EF5D  F00A         	goto	u14011
  6769   0014B6  EF5F  F00A         	goto	u14010
  6770   0014BA                     u14011:
  6771   0014BA  EF8B  F00A         	goto	l15418
  6772   0014BE                     u14010:
  6773   0014BE  5025               	movf	_minutes^0,w,c
  6774   0014C0  A4D8               	btfss	status,2,c
  6775   0014C2  EF65  F00A         	goto	u14021
  6776   0014C6  EF67  F00A         	goto	u14020
  6777   0014CA                     u14021:
  6778   0014CA  EF8B  F00A         	goto	l15418
  6779   0014CE                     u14020:
  6780   0014CE  5024               	movf	_hours^0,w,c
  6781   0014D0  A4D8               	btfss	status,2,c
  6782   0014D2  EF6D  F00A         	goto	u14031
  6783   0014D6  EF6F  F00A         	goto	u14030
  6784   0014DA                     u14031:
  6785   0014DA  EF8B  F00A         	goto	l15418
  6786   0014DE                     u14030:
  6787   0014DE                     
  6788                           ;main.c: 301:                             ret = Timer0_Deinit (&timer0_1);
  6789   0014DE  0E40               	movlw	low _timer0_1
  6790   0014E0  0100               	movlb	0	; () banked
  6791   0014E2  6FD5               	movwf	Timer0_Deinit@_timer0& (0+255),b
  6792   0014E4  0E01               	movlw	high _timer0_1
  6793   0014E6  6FD6               	movwf	(Timer0_Deinit@_timer0+1)& (0+255),b
  6794   0014E8  EC82  F029         	call	_Timer0_Deinit	;wreg free
  6795   0014EC  0101               	movlb	1	; () banked
  6796   0014EE  6F96               	movwf	_ret& (0+255),b
  6797   0014F0                     
  6798                           ; BSR set to: 1
  6799                           ;main.c: 302:                             if(exit_alarm == 12)
  6800   0014F0  0E0C               	movlw	12
  6801   0014F2  182D               	xorwf	_exit_alarm^0,w,c
  6802   0014F4  A4D8               	btfss	status,2,c
  6803   0014F6  EF7F  F00A         	goto	u14041
  6804   0014FA  EF81  F00A         	goto	u14040
  6805   0014FE                     u14041:
  6806   0014FE  EF8B  F00A         	goto	l15418
  6807   001502                     u14040:
  6808   001502                     
  6809                           ; BSR set to: 1
  6810                           ;main.c: 303:                             ret = gpio_pin_write_logic(&Buzz, GPIO_Pin_Log
      +                          ic_HIGH);
  6811   001502  0E3D               	movlw	low _Buzz
  6812   001504  0100               	movlb	0	; () banked
  6813   001506  6FD5               	movwf	gpio_pin_write_logic@pinConfig& (0+255),b
  6814   001508  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
  6815   00150A  0E01               	movlw	1
  6816   00150C  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
  6817   00150E  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
  6818   001512  0101               	movlb	1	; () banked
  6819   001514  6F96               	movwf	_ret& (0+255),b
  6820   001516                     l15418:
  6821                           
  6822                           ;main.c: 305:                         ret = keyPad_Read(&keypad_1, &nextBack);
  6823   001516  0E38               	movlw	low _keypad_1
  6824   001518  0100               	movlb	0	; () banked
  6825   00151A  6FDB               	movwf	keyPad_Read@keypad& (0+255),b
  6826   00151C  0E01               	movlw	high _keypad_1
  6827   00151E  6FDC               	movwf	(keyPad_Read@keypad+1)& (0+255),b
  6828   001520  0E2F               	movlw	low _nextBack
  6829   001522  6FDD               	movwf	keyPad_Read@keypad_value& (0+255),b
  6830   001524  EC32  F01B         	call	_keyPad_Read	;wreg free
  6831   001528  0101               	movlb	1	; () banked
  6832   00152A  6F96               	movwf	_ret& (0+255),b
  6833   00152C                     
  6834                           ; BSR set to: 1
  6835                           ;main.c: 306:                         ret = keyPad_Read(&keypad_1, &exit_alarm);
  6836   00152C  0E38               	movlw	low _keypad_1
  6837   00152E  0100               	movlb	0	; () banked
  6838   001530  6FDB               	movwf	keyPad_Read@keypad& (0+255),b
  6839   001532  0E01               	movlw	high _keypad_1
  6840   001534  6FDC               	movwf	(keyPad_Read@keypad+1)& (0+255),b
  6841   001536  0E2D               	movlw	low _exit_alarm
  6842   001538  6FDD               	movwf	keyPad_Read@keypad_value& (0+255),b
  6843   00153A  EC32  F01B         	call	_keyPad_Read	;wreg free
  6844   00153E  0101               	movlb	1	; () banked
  6845   001540  6F96               	movwf	_ret& (0+255),b
  6846   001542                     
  6847                           ; BSR set to: 1
  6848                           ;main.c: 307:                         _delay((unsigned long)((100)*(8000000/4000.0)));
  6849   001542  0E02               	movlw	2
  6850   001544  0101               	movlb	1	; () banked
  6851   001546  6F95               	movwf	(??_main+1)& (0+255),b
  6852   001548  0E04               	movlw	4
  6853   00154A  6F94               	movwf	??_main& (0+255),b
  6854   00154C  0EBA               	movlw	186
  6855   00154E                     u14447:
  6856   00154E  2EE8               	decfsz	wreg,f,c
  6857   001550  D7FE               	bra	u14447
  6858   001552  2F94               	decfsz	??_main& (0+255),f,b
  6859   001554  D7FC               	bra	u14447
  6860   001556  2F95               	decfsz	(??_main+1)& (0+255),f,b
  6861   001558  D7FA               	bra	u14447
  6862   00155A  0000               	nop	
  6863   00155C                     
  6864                           ;main.c: 308:                         if(exit_alarm == '1'){
  6865   00155C  0E31               	movlw	49
  6866   00155E  182D               	xorwf	_exit_alarm^0,w,c
  6867   001560  A4D8               	btfss	status,2,c
  6868   001562  EFB5  F00A         	goto	u14051
  6869   001566  EFB7  F00A         	goto	u14050
  6870   00156A                     u14051:
  6871   00156A  EFDC  F00A         	goto	l15434
  6872   00156E                     u14050:
  6873   00156E                     
  6874                           ;main.c: 309:                             ret = gpio_pin_write_logic(&Buzz, GPIO_Pin_Log
      +                          ic_LOW);
  6875   00156E  0E3D               	movlw	low _Buzz
  6876   001570  0100               	movlb	0	; () banked
  6877   001572  6FD5               	movwf	gpio_pin_write_logic@pinConfig& (0+255),b
  6878   001574  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
  6879   001576  0E00               	movlw	0
  6880   001578  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
  6881   00157A  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
  6882   00157E  0101               	movlb	1	; () banked
  6883   001580  6F96               	movwf	_ret& (0+255),b
  6884                           
  6885                           ;main.c: 310:                             ECU_LCD_4Bit_Send_Command(&LCD_1, 0x01);
  6886   001582  0E37               	movlw	low _LCD_1
  6887   001584  0100               	movlb	0	; () banked
  6888   001586  6FDF               	movwf	ECU_LCD_4Bit_Send_Command@_LCD& (0+255),b
  6889   001588  0E01               	movlw	1
  6890   00158A  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  6891   00158C  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  6892   001590                     
  6893                           ;main.c: 311:                             _delay((unsigned long)((10)*(8000000/4000.0)))
      +                          ;
  6894   001590  0E1A               	movlw	26
  6895   001592  0101               	movlb	1	; () banked
  6896   001594  6F94               	movwf	??_main& (0+255),b
  6897   001596  0EF8               	movlw	248
  6898   001598                     u14457:
  6899   001598  2EE8               	decfsz	wreg,f,c
  6900   00159A  D7FE               	bra	u14457
  6901   00159C  2F94               	decfsz	??_main& (0+255),f,b
  6902   00159E  D7FC               	bra	u14457
  6903   0015A0  0000               	nop	
  6904   0015A2                     
  6905                           ;main.c: 312:                             ret = ECU_LCD_4Bit_Send_Command(&LCD_1, 0x0C);
  6906   0015A2  0E37               	movlw	low _LCD_1
  6907   0015A4  0100               	movlb	0	; () banked
  6908   0015A6  6FDF               	movwf	ECU_LCD_4Bit_Send_Command@_LCD& (0+255),b
  6909   0015A8  0E0C               	movlw	12
  6910   0015AA  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  6911   0015AC  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  6912   0015B0  0101               	movlb	1	; () banked
  6913   0015B2  6F96               	movwf	_ret& (0+255),b
  6914   0015B4                     
  6915                           ; BSR set to: 1
  6916                           ;main.c: 313:                             Dashboard();
  6917   0015B4  ECA0  F01E         	call	_Dashboard	;wreg free
  6918   0015B8                     l15434:
  6919                           
  6920                           ;main.c: 290:                     while(nextBack == '\0'){
  6921   0015B8  502F               	movf	_nextBack^0,w,c
  6922   0015BA  B4D8               	btfsc	status,2,c
  6923   0015BC  EFE2  F00A         	goto	u14061
  6924   0015C0  EFE4  F00A         	goto	u14060
  6925   0015C4                     u14061:
  6926   0015C4  EF1C  F00A         	goto	l15396
  6927   0015C8                     u14060:
  6928   0015C8  EFEB  F00C         	goto	l15608
  6929   0015CC                     l15436:
  6930                           
  6931                           ;main.c: 318:                         TemperatureSensor_TC74_Read_Value = TemperatureSen
      +                          sor_TC74_Read_Temp(0x92);
  6932   0015CC  0E92               	movlw	146
  6933   0015CE  EC53  F02A         	call	_TemperatureSensor_TC74_Read_Temp
  6934   0015D2  6E3E               	movwf	_TemperatureSensor_TC74_Read_Value^0,c
  6935                           
  6936                           ;main.c: 319:                         I2C_Write1ByteRegister(0x70, 0x00, TemperatureSens
      +                          or_TC74_Read_Value);
  6937   0015D4  0E00               	movlw	0
  6938   0015D6  0100               	movlb	0	; () banked
  6939   0015D8  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  6940   0015DA  C03E  F0E5         	movff	_TemperatureSensor_TC74_Read_Value,I2C_Write1ByteRegister@data
  6941   0015DE  0E70               	movlw	112
  6942   0015E0  EC6F  F024         	call	_I2C_Write1ByteRegister
  6943   0015E4                     
  6944                           ;main.c: 320:                         _delay((unsigned long)((100)*(8000000/4000.0)));
  6945   0015E4  0E02               	movlw	2
  6946   0015E6  0101               	movlb	1	; () banked
  6947   0015E8  6F95               	movwf	(??_main+1)& (0+255),b
  6948   0015EA  0E04               	movlw	4
  6949   0015EC  6F94               	movwf	??_main& (0+255),b
  6950   0015EE  0EBA               	movlw	186
  6951   0015F0                     u14467:
  6952   0015F0  2EE8               	decfsz	wreg,f,c
  6953   0015F2  D7FE               	bra	u14467
  6954   0015F4  2F94               	decfsz	??_main& (0+255),f,b
  6955   0015F6  D7FC               	bra	u14467
  6956   0015F8  2F95               	decfsz	(??_main+1)& (0+255),f,b
  6957   0015FA  D7FA               	bra	u14467
  6958   0015FC  0000               	nop	
  6959   0015FE                     
  6960                           ;main.c: 322:                         ret = ADC_Get_Conversion_Result_Block (&ADC_LDR, A
      +                          DC_CHANNEL_AN0, &LDR_Read_Value);
  6961   0015FE  0E30               	movlw	low _ADC_LDR
  6962   001600  0100               	movlb	0	; () banked
  6963   001602  6FDC               	movwf	ADC_Get_Conversion_Result_Block@_ADC_config& (0+255),b
  6964   001604  0E01               	movlw	high _ADC_LDR
  6965   001606  6FDD               	movwf	(ADC_Get_Conversion_Result_Block@_ADC_config+1)& (0+255),b
  6966   001608  0E00               	movlw	0
  6967   00160A  6FDE               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Channel& (0+255),b
  6968   00160C  0E31               	movlw	low _LDR_Read_Value
  6969   00160E  6FDF               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Result& (0+255),b
  6970   001610  ECAB  F026         	call	_ADC_Get_Conversion_Result_Block	;wreg free
  6971   001614  0101               	movlb	1	; () banked
  6972   001616  6F96               	movwf	_ret& (0+255),b
  6973   001618                     
  6974                           ; BSR set to: 1
  6975                           ;main.c: 323:                         I2C_Write1ByteRegister(0x50, 0x00, LDR_Read_Value)
      +                          ;
  6976   001618  0E00               	movlw	0
  6977   00161A  0100               	movlb	0	; () banked
  6978   00161C  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  6979   00161E  C031  F0E5         	movff	_LDR_Read_Value,I2C_Write1ByteRegister@data
  6980   001622  0E50               	movlw	80
  6981   001624  EC6F  F024         	call	_I2C_Write1ByteRegister
  6982   001628                     
  6983                           ;main.c: 324:                         _delay((unsigned long)((100)*(8000000/4000.0)));
  6984   001628  0E02               	movlw	2
  6985   00162A  0101               	movlb	1	; () banked
  6986   00162C  6F95               	movwf	(??_main+1)& (0+255),b
  6987   00162E  0E04               	movlw	4
  6988   001630  6F94               	movwf	??_main& (0+255),b
  6989   001632  0EBA               	movlw	186
  6990   001634                     u14477:
  6991   001634  2EE8               	decfsz	wreg,f,c
  6992   001636  D7FE               	bra	u14477
  6993   001638  2F94               	decfsz	??_main& (0+255),f,b
  6994   00163A  D7FC               	bra	u14477
  6995   00163C  2F95               	decfsz	(??_main+1)& (0+255),f,b
  6996   00163E  D7FA               	bra	u14477
  6997   001640  0000               	nop	
  6998   001642                     
  6999                           ;main.c: 326:                         if (nextBack == '#'){
  7000   001642  0E23               	movlw	35
  7001   001644  182F               	xorwf	_nextBack^0,w,c
  7002   001646  A4D8               	btfss	status,2,c
  7003   001648  EF28  F00B         	goto	u14071
  7004   00164C  EF2A  F00B         	goto	u14070
  7005   001650                     u14071:
  7006   001650  EF61  F00B         	goto	l15466
  7007   001654                     u14070:
  7008   001654                     
  7009                           ;main.c: 327:                             if (curserPos > 0) {
  7010   001654  5032               	movf	_curserPos^0,w,c
  7011   001656  B4D8               	btfsc	status,2,c
  7012   001658  EF30  F00B         	goto	u14081
  7013   00165C  EF32  F00B         	goto	u14080
  7014   001660                     u14081:
  7015   001660  EF5E  F00B         	goto	l15464
  7016   001664                     u14080:
  7017   001664                     
  7018                           ;main.c: 328:                                 curserPos--;
  7019   001664  0632               	decf	_curserPos^0,f,c
  7020   001666                     
  7021                           ;main.c: 329:                                 if(curserPos == 3 || curserPos == 6){
  7022   001666  0E03               	movlw	3
  7023   001668  1832               	xorwf	_curserPos^0,w,c
  7024   00166A  B4D8               	btfsc	status,2,c
  7025   00166C  EF3A  F00B         	goto	u14091
  7026   001670  EF3C  F00B         	goto	u14090
  7027   001674                     u14091:
  7028   001674  EF45  F00B         	goto	l15456
  7029   001678                     u14090:
  7030   001678  0E06               	movlw	6
  7031   00167A  1832               	xorwf	_curserPos^0,w,c
  7032   00167C  A4D8               	btfss	status,2,c
  7033   00167E  EF43  F00B         	goto	u14101
  7034   001682  EF45  F00B         	goto	u14100
  7035   001686                     u14101:
  7036   001686  EF46  F00B         	goto	l15458
  7037   00168A                     u14100:
  7038   00168A                     l15456:
  7039                           
  7040                           ;main.c: 330:                                     curserPos--;
  7041   00168A  0632               	decf	_curserPos^0,f,c
  7042   00168C                     l15458:
  7043                           
  7044                           ;main.c: 332:                                 ret = LCD_4Bits_Set_Curser (&LCD_1, 1,curs
      +                          erPos);
  7045   00168C  0E37               	movlw	low _LCD_1
  7046   00168E  0100               	movlb	0	; () banked
  7047   001690  6FE2               	movwf	LCD_4Bits_Set_Curser@_LCD& (0+255),b
  7048   001692  0E01               	movlw	1
  7049   001694  6FE3               	movwf	LCD_4Bits_Set_Curser@row& (0+255),b
  7050   001696  C032  F0E4         	movff	_curserPos,LCD_4Bits_Set_Curser@coloumn
  7051   00169A  ECB0  F020         	call	_LCD_4Bits_Set_Curser	;wreg free
  7052   00169E  0101               	movlb	1	; () banked
  7053   0016A0  6F96               	movwf	_ret& (0+255),b
  7054   0016A2                     
  7055                           ; BSR set to: 1
  7056                           ;main.c: 333:                                 _delay((unsigned long)((200)*(8000000/4000
      +                          .0)));
  7057   0016A2  0E03               	movlw	3
  7058   0016A4  0101               	movlb	1	; () banked
  7059   0016A6  6F95               	movwf	(??_main+1)& (0+255),b
  7060   0016A8  0E08               	movlw	8
  7061   0016AA  6F94               	movwf	??_main& (0+255),b
  7062   0016AC  0E77               	movlw	119
  7063   0016AE                     u14487:
  7064   0016AE  2EE8               	decfsz	wreg,f,c
  7065   0016B0  D7FE               	bra	u14487
  7066   0016B2  2F94               	decfsz	??_main& (0+255),f,b
  7067   0016B4  D7FC               	bra	u14487
  7068   0016B6  2F95               	decfsz	(??_main+1)& (0+255),f,b
  7069   0016B8  D7FA               	bra	u14487
  7070   0016BA                     
  7071                           ;main.c: 334:                                 nextBack = '\0';
  7072   0016BA  6A2F               	clrf	_nextBack^0,c
  7073   0016BC                     l15464:
  7074                           
  7075                           ;main.c: 336:                         nextBack = '\0';
  7076   0016BC  6A2F               	clrf	_nextBack^0,c
  7077                           
  7078                           ;main.c: 337:                         }
  7079   0016BE  EFEB  F00C         	goto	l15608
  7080   0016C2                     l15466:
  7081   0016C2  0E3D               	movlw	61
  7082   0016C4  182F               	xorwf	_nextBack^0,w,c
  7083   0016C6  A4D8               	btfss	status,2,c
  7084   0016C8  EF68  F00B         	goto	u14111
  7085   0016CC  EF6A  F00B         	goto	u14110
  7086   0016D0                     u14111:
  7087   0016D0  EF88  F00B         	goto	l15486
  7088   0016D4                     u14110:
  7089   0016D4                     
  7090                           ;main.c: 339:                             if (curserPos < 8) {
  7091   0016D4  0E08               	movlw	8
  7092   0016D6  6032               	cpfslt	_curserPos^0,c
  7093   0016D8  EF70  F00B         	goto	u14121
  7094   0016DC  EF72  F00B         	goto	u14120
  7095   0016E0                     u14121:
  7096   0016E0  EF5E  F00B         	goto	l15464
  7097   0016E4                     u14120:
  7098   0016E4                     
  7099                           ;main.c: 340:                                 curserPos++;
  7100   0016E4  2A32               	incf	_curserPos^0,f,c
  7101   0016E6                     
  7102                           ;main.c: 341:                                 if(curserPos == 3 || curserPos == 6){
  7103   0016E6  0E03               	movlw	3
  7104   0016E8  1832               	xorwf	_curserPos^0,w,c
  7105   0016EA  B4D8               	btfsc	status,2,c
  7106   0016EC  EF7A  F00B         	goto	u14131
  7107   0016F0  EF7C  F00B         	goto	u14130
  7108   0016F4                     u14131:
  7109   0016F4  EF85  F00B         	goto	l15476
  7110   0016F8                     u14130:
  7111   0016F8  0E06               	movlw	6
  7112   0016FA  1832               	xorwf	_curserPos^0,w,c
  7113   0016FC  A4D8               	btfss	status,2,c
  7114   0016FE  EF83  F00B         	goto	u14141
  7115   001702  EF85  F00B         	goto	u14140
  7116   001706                     u14141:
  7117   001706  EF46  F00B         	goto	l15458
  7118   00170A                     u14140:
  7119   00170A                     l15476:
  7120                           
  7121                           ;main.c: 342:                                     curserPos++;
  7122   00170A  2A32               	incf	_curserPos^0,f,c
  7123   00170C  EF46  F00B         	goto	l15458
  7124   001710                     l15486:
  7125   001710  0E2B               	movlw	43
  7126   001712  182F               	xorwf	_nextBack^0,w,c
  7127   001714  A4D8               	btfss	status,2,c
  7128   001716  EF8F  F00B         	goto	u14151
  7129   00171A  EF91  F00B         	goto	u14150
  7130   00171E                     u14151:
  7131   00171E  EF9A  F00C         	goto	l15592
  7132   001722                     u14150:
  7133   001722                     
  7134                           ;main.c: 351:                             _delay((unsigned long)((200)*(8000000/4000.0))
      +                          );
  7135   001722  0E03               	movlw	3
  7136   001724  0101               	movlb	1	; () banked
  7137   001726  6F95               	movwf	(??_main+1)& (0+255),b
  7138   001728  0E08               	movlw	8
  7139   00172A  6F94               	movwf	??_main& (0+255),b
  7140   00172C  0E77               	movlw	119
  7141   00172E                     u14497:
  7142   00172E  2EE8               	decfsz	wreg,f,c
  7143   001730  D7FE               	bra	u14497
  7144   001732  2F94               	decfsz	??_main& (0+255),f,b
  7145   001734  D7FC               	bra	u14497
  7146   001736  2F95               	decfsz	(??_main+1)& (0+255),f,b
  7147   001738  D7FA               	bra	u14497
  7148                           
  7149                           ;main.c: 352:                             while(userInput == '\0'){
  7150   00173A  EFE5  F00B         	goto	l15502
  7151   00173E                     l15490:
  7152                           
  7153                           ;main.c: 354:                                 TemperatureSensor_TC74_Read_Value = Temper
      +                          atureSensor_TC74_Read_Temp(0x92);
  7154   00173E  0E92               	movlw	146
  7155   001740  EC53  F02A         	call	_TemperatureSensor_TC74_Read_Temp
  7156   001744  6E3E               	movwf	_TemperatureSensor_TC74_Read_Value^0,c
  7157                           
  7158                           ;main.c: 355:                                 I2C_Write1ByteRegister(0x70, 0x00, Tempera
      +                          tureSensor_TC74_Read_Value);
  7159   001746  0E00               	movlw	0
  7160   001748  0100               	movlb	0	; () banked
  7161   00174A  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  7162   00174C  C03E  F0E5         	movff	_TemperatureSensor_TC74_Read_Value,I2C_Write1ByteRegister@data
  7163   001750  0E70               	movlw	112
  7164   001752  EC6F  F024         	call	_I2C_Write1ByteRegister
  7165   001756                     
  7166                           ;main.c: 356:                                _delay((unsigned long)((100)*(8000000/4000.
      +                          0)));
  7167   001756  0E02               	movlw	2
  7168   001758  0101               	movlb	1	; () banked
  7169   00175A  6F95               	movwf	(??_main+1)& (0+255),b
  7170   00175C  0E04               	movlw	4
  7171   00175E  6F94               	movwf	??_main& (0+255),b
  7172   001760  0EBA               	movlw	186
  7173   001762                     u14507:
  7174   001762  2EE8               	decfsz	wreg,f,c
  7175   001764  D7FE               	bra	u14507
  7176   001766  2F94               	decfsz	??_main& (0+255),f,b
  7177   001768  D7FC               	bra	u14507
  7178   00176A  2F95               	decfsz	(??_main+1)& (0+255),f,b
  7179   00176C  D7FA               	bra	u14507
  7180   00176E  0000               	nop	
  7181   001770                     
  7182                           ;main.c: 358:                                ret = ADC_Get_Conversion_Result_Block (&ADC
      +                          _LDR, ADC_CHANNEL_AN0, &LDR_Read_Value);
  7183   001770  0E30               	movlw	low _ADC_LDR
  7184   001772  0100               	movlb	0	; () banked
  7185   001774  6FDC               	movwf	ADC_Get_Conversion_Result_Block@_ADC_config& (0+255),b
  7186   001776  0E01               	movlw	high _ADC_LDR
  7187   001778  6FDD               	movwf	(ADC_Get_Conversion_Result_Block@_ADC_config+1)& (0+255),b
  7188   00177A  0E00               	movlw	0
  7189   00177C  6FDE               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Channel& (0+255),b
  7190   00177E  0E31               	movlw	low _LDR_Read_Value
  7191   001780  6FDF               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Result& (0+255),b
  7192   001782  ECAB  F026         	call	_ADC_Get_Conversion_Result_Block	;wreg free
  7193   001786  0101               	movlb	1	; () banked
  7194   001788  6F96               	movwf	_ret& (0+255),b
  7195   00178A                     
  7196                           ; BSR set to: 1
  7197                           ;main.c: 359:                                 I2C_Write1ByteRegister(0x50, 0x00, LDR_Rea
      +                          d_Value);
  7198   00178A  0E00               	movlw	0
  7199   00178C  0100               	movlb	0	; () banked
  7200   00178E  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  7201   001790  C031  F0E5         	movff	_LDR_Read_Value,I2C_Write1ByteRegister@data
  7202   001794  0E50               	movlw	80
  7203   001796  EC6F  F024         	call	_I2C_Write1ByteRegister
  7204   00179A                     
  7205                           ;main.c: 360:                                 _delay((unsigned long)((100)*(8000000/4000
      +                          .0)));
  7206   00179A  0E02               	movlw	2
  7207   00179C  0101               	movlb	1	; () banked
  7208   00179E  6F95               	movwf	(??_main+1)& (0+255),b
  7209   0017A0  0E04               	movlw	4
  7210   0017A2  6F94               	movwf	??_main& (0+255),b
  7211   0017A4  0EBA               	movlw	186
  7212   0017A6                     u14517:
  7213   0017A6  2EE8               	decfsz	wreg,f,c
  7214   0017A8  D7FE               	bra	u14517
  7215   0017AA  2F94               	decfsz	??_main& (0+255),f,b
  7216   0017AC  D7FC               	bra	u14517
  7217   0017AE  2F95               	decfsz	(??_main+1)& (0+255),f,b
  7218   0017B0  D7FA               	bra	u14517
  7219   0017B2  0000               	nop	
  7220   0017B4                     
  7221                           ;main.c: 362:                                 ret = keyPad_Read(&keypad_1, &userInput);
  7222   0017B4  0E38               	movlw	low _keypad_1
  7223   0017B6  0100               	movlb	0	; () banked
  7224   0017B8  6FDB               	movwf	keyPad_Read@keypad& (0+255),b
  7225   0017BA  0E01               	movlw	high _keypad_1
  7226   0017BC  6FDC               	movwf	(keyPad_Read@keypad+1)& (0+255),b
  7227   0017BE  0E2E               	movlw	low _userInput
  7228   0017C0  6FDD               	movwf	keyPad_Read@keypad_value& (0+255),b
  7229   0017C2  EC32  F01B         	call	_keyPad_Read	;wreg free
  7230   0017C6  0101               	movlb	1	; () banked
  7231   0017C8  6F96               	movwf	_ret& (0+255),b
  7232   0017CA                     l15502:
  7233                           
  7234                           ;main.c: 352:                             while(userInput == '\0'){
  7235   0017CA  502E               	movf	_userInput^0,w,c
  7236   0017CC  B4D8               	btfsc	status,2,c
  7237   0017CE  EFEB  F00B         	goto	u14161
  7238   0017D2  EFED  F00B         	goto	u14160
  7239   0017D6                     u14161:
  7240   0017D6  EF9F  F00B         	goto	l15490
  7241   0017DA                     u14160:
  7242   0017DA                     
  7243                           ;main.c: 364:                             if (userInput >= '0' && userInput <= '9') {
  7244   0017DA  0E2F               	movlw	47
  7245   0017DC  642E               	cpfsgt	_userInput^0,c
  7246   0017DE  EFF3  F00B         	goto	u14171
  7247   0017E2  EFF5  F00B         	goto	u14170
  7248   0017E6                     u14171:
  7249   0017E6  EF7A  F00C         	goto	l2710
  7250   0017EA                     u14170:
  7251   0017EA  0E3A               	movlw	58
  7252   0017EC  602E               	cpfslt	_userInput^0,c
  7253   0017EE  EFFB  F00B         	goto	u14181
  7254   0017F2  EFFD  F00B         	goto	u14180
  7255   0017F6                     u14181:
  7256   0017F6  EF7A  F00C         	goto	l2710
  7257   0017FA                     u14180:
  7258   0017FA                     
  7259                           ;main.c: 366:                                 if (curserPos == 1) {
  7260   0017FA  0432               	decf	_curserPos^0,w,c
  7261   0017FC  A4D8               	btfss	status,2,c
  7262   0017FE  EF03  F00C         	goto	u14191
  7263   001802  EF05  F00C         	goto	u14190
  7264   001806                     u14191:
  7265   001806  EF1B  F00C         	goto	l15520
  7266   00180A                     u14190:
  7267   00180A                     
  7268                           ;main.c: 367:                                     time_array[0] = userInput - '0';
  7269   00180A  502E               	movf	_userInput^0,w,c
  7270   00180C  0FD0               	addlw	208
  7271   00180E  0100               	movlb	0	; () banked
  7272   001810  6F7D               	movwf	_time_array& (0+255),b
  7273   001812                     l15512:
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;main.c: 368:                                     nextBack = '\0';
  7277   001812  6A2F               	clrf	_nextBack^0,c
  7278   001814                     
  7279                           ; BSR set to: 0
  7280                           ;main.c: 369:                                     userInput = '\0';
  7281   001814  6A2E               	clrf	_userInput^0,c
  7282   001816                     
  7283                           ; BSR set to: 0
  7284                           ;main.c: 370:                                     update_display();
  7285   001816  ECB4  F01A         	call	_update_display	;wreg free
  7286   00181A                     
  7287                           ;main.c: 371:                                     _delay((unsigned long)((200)*(8000000/
      +                          4000.0)));
  7288   00181A  0E03               	movlw	3
  7289   00181C  0101               	movlb	1	; () banked
  7290   00181E  6F95               	movwf	(??_main+1)& (0+255),b
  7291   001820  0E08               	movlw	8
  7292   001822  6F94               	movwf	??_main& (0+255),b
  7293   001824  0E77               	movlw	119
  7294   001826                     u14527:
  7295   001826  2EE8               	decfsz	wreg,f,c
  7296   001828  D7FE               	bra	u14527
  7297   00182A  2F94               	decfsz	??_main& (0+255),f,b
  7298   00182C  D7FC               	bra	u14527
  7299   00182E  2F95               	decfsz	(??_main+1)& (0+255),f,b
  7300   001830  D7FA               	bra	u14527
  7301                           
  7302                           ;main.c: 372:                                 } else if (curserPos == 2) {
  7303   001832  EF7A  F00C         	goto	l2710
  7304   001836                     l15520:
  7305   001836  0E02               	movlw	2
  7306   001838  1832               	xorwf	_curserPos^0,w,c
  7307   00183A  A4D8               	btfss	status,2,c
  7308   00183C  EF22  F00C         	goto	u14201
  7309   001840  EF24  F00C         	goto	u14200
  7310   001844                     u14201:
  7311   001844  EF2A  F00C         	goto	l15532
  7312   001848                     u14200:
  7313   001848                     
  7314                           ;main.c: 373:                                     time_array[1] = userInput - '0';
  7315   001848  502E               	movf	_userInput^0,w,c
  7316   00184A  0FD0               	addlw	208
  7317   00184C  0100               	movlb	0	; () banked
  7318   00184E  6F7E               	movwf	(_time_array+1)& (0+255),b
  7319   001850  EF09  F00C         	goto	l15512
  7320   001854                     l15532:
  7321   001854  0E04               	movlw	4
  7322   001856  1832               	xorwf	_curserPos^0,w,c
  7323   001858  A4D8               	btfss	status,2,c
  7324   00185A  EF31  F00C         	goto	u14211
  7325   00185E  EF33  F00C         	goto	u14210
  7326   001862                     u14211:
  7327   001862  EF43  F00C         	goto	l15548
  7328   001866                     u14210:
  7329   001866                     
  7330                           ;main.c: 379:                                     if(userInput > '5'){
  7331   001866  0E35               	movlw	53
  7332   001868  642E               	cpfsgt	_userInput^0,c
  7333   00186A  EF39  F00C         	goto	u14221
  7334   00186E  EF3B  F00C         	goto	u14220
  7335   001872                     u14221:
  7336   001872  EF3D  F00C         	goto	l15538
  7337   001876                     u14220:
  7338   001876                     
  7339                           ;main.c: 380:                                         userInput = '5';
  7340   001876  0E35               	movlw	53
  7341   001878  6E2E               	movwf	_userInput^0,c
  7342   00187A                     l15538:
  7343                           
  7344                           ;main.c: 382:                                     time_array[2] = userInput - '0';
  7345   00187A  502E               	movf	_userInput^0,w,c
  7346   00187C  0FD0               	addlw	208
  7347   00187E  0100               	movlb	0	; () banked
  7348   001880  6F7F               	movwf	(_time_array+2)& (0+255),b
  7349   001882  EF09  F00C         	goto	l15512
  7350   001886                     l15548:
  7351   001886  0E05               	movlw	5
  7352   001888  1832               	xorwf	_curserPos^0,w,c
  7353   00188A  A4D8               	btfss	status,2,c
  7354   00188C  EF4A  F00C         	goto	u14231
  7355   001890  EF4C  F00C         	goto	u14230
  7356   001894                     u14231:
  7357   001894  EF52  F00C         	goto	l15560
  7358   001898                     u14230:
  7359   001898                     
  7360                           ;main.c: 388:                                     time_array[3] = userInput - '0';
  7361   001898  502E               	movf	_userInput^0,w,c
  7362   00189A  0FD0               	addlw	208
  7363   00189C  0100               	movlb	0	; () banked
  7364   00189E  6F80               	movwf	(_time_array+3)& (0+255),b
  7365   0018A0  EF09  F00C         	goto	l15512
  7366   0018A4                     l15560:
  7367   0018A4  0E07               	movlw	7
  7368   0018A6  1832               	xorwf	_curserPos^0,w,c
  7369   0018A8  A4D8               	btfss	status,2,c
  7370   0018AA  EF59  F00C         	goto	u14241
  7371   0018AE  EF5B  F00C         	goto	u14240
  7372   0018B2                     u14241:
  7373   0018B2  EF6B  F00C         	goto	l15576
  7374   0018B6                     u14240:
  7375   0018B6                     
  7376                           ;main.c: 394:                                     if(userInput > '5'){
  7377   0018B6  0E35               	movlw	53
  7378   0018B8  642E               	cpfsgt	_userInput^0,c
  7379   0018BA  EF61  F00C         	goto	u14251
  7380   0018BE  EF63  F00C         	goto	u14250
  7381   0018C2                     u14251:
  7382   0018C2  EF65  F00C         	goto	l15566
  7383   0018C6                     u14250:
  7384   0018C6                     
  7385                           ;main.c: 395:                                         userInput = '5';
  7386   0018C6  0E35               	movlw	53
  7387   0018C8  6E2E               	movwf	_userInput^0,c
  7388   0018CA                     l15566:
  7389                           
  7390                           ;main.c: 397:                                     time_array[4] = userInput - '0';
  7391   0018CA  502E               	movf	_userInput^0,w,c
  7392   0018CC  0FD0               	addlw	208
  7393   0018CE  0100               	movlb	0	; () banked
  7394   0018D0  6F81               	movwf	(_time_array+4)& (0+255),b
  7395   0018D2  EF09  F00C         	goto	l15512
  7396   0018D6                     l15576:
  7397   0018D6  0E08               	movlw	8
  7398   0018D8  1832               	xorwf	_curserPos^0,w,c
  7399   0018DA  A4D8               	btfss	status,2,c
  7400   0018DC  EF72  F00C         	goto	u14261
  7401   0018E0  EF74  F00C         	goto	u14260
  7402   0018E4                     u14261:
  7403   0018E4  EF7A  F00C         	goto	l2719
  7404   0018E8                     u14260:
  7405   0018E8                     
  7406                           ;main.c: 403:                                     time_array[5] = userInput - '0';
  7407   0018E8  502E               	movf	_userInput^0,w,c
  7408   0018EA  0FD0               	addlw	208
  7409   0018EC  0100               	movlb	0	; () banked
  7410   0018EE  6F82               	movwf	(_time_array+5)& (0+255),b
  7411   0018F0  EF09  F00C         	goto	l15512
  7412   0018F4                     l2719:
  7413   0018F4                     l2710:
  7414                           
  7415                           ;main.c: 413:                             nextBack = '\0';
  7416   0018F4  6A2F               	clrf	_nextBack^0,c
  7417                           
  7418                           ;main.c: 414:                             userInput = '\0';
  7419   0018F6  6A2E               	clrf	_userInput^0,c
  7420   0018F8                     
  7421                           ;main.c: 415:                             seconds = time_array[4]*10 + time_array[5];
  7422   0018F8  0100               	movlb	0	; () banked
  7423   0018FA  5181               	movf	(_time_array+4)& (0+255),w,b
  7424   0018FC  0D0A               	mullw	10
  7425   0018FE  50F3               	movf	243,w,c
  7426   001900  2582               	addwf	(_time_array+5)& (0+255),w,b
  7427   001902  6E26               	movwf	_seconds^0,c
  7428                           
  7429                           ;main.c: 416:                             minutes = time_array[2]*10 + time_array[3];
  7430   001904  517F               	movf	(_time_array+2)& (0+255),w,b
  7431   001906  0D0A               	mullw	10
  7432   001908  50F3               	movf	243,w,c
  7433   00190A  2580               	addwf	(_time_array+3)& (0+255),w,b
  7434   00190C  6E25               	movwf	_minutes^0,c
  7435                           
  7436                           ;main.c: 417:                             hours = time_array[0]*10 + time_array[1];
  7437   00190E  517D               	movf	_time_array& (0+255),w,b
  7438   001910  0D0A               	mullw	10
  7439   001912  50F3               	movf	243,w,c
  7440   001914  257E               	addwf	(_time_array+1)& (0+255),w,b
  7441   001916  6E24               	movwf	_hours^0,c
  7442   001918                     
  7443                           ; BSR set to: 0
  7444                           ;main.c: 418:                             _delay((unsigned long)((200)*(8000000/4000.0))
      +                          );
  7445   001918  0E03               	movlw	3
  7446   00191A  0101               	movlb	1	; () banked
  7447   00191C  6F95               	movwf	(??_main+1)& (0+255),b
  7448   00191E  0E08               	movlw	8
  7449   001920  6F94               	movwf	??_main& (0+255),b
  7450   001922  0E77               	movlw	119
  7451   001924                     u14537:
  7452   001924  2EE8               	decfsz	wreg,f,c
  7453   001926  D7FE               	bra	u14537
  7454   001928  2F94               	decfsz	??_main& (0+255),f,b
  7455   00192A  D7FC               	bra	u14537
  7456   00192C  2F95               	decfsz	(??_main+1)& (0+255),f,b
  7457   00192E  D7FA               	bra	u14537
  7458                           
  7459                           ;main.c: 420:                         }
  7460   001930  EFEB  F00C         	goto	l15608
  7461   001934                     l15592:
  7462   001934  0E2D               	movlw	45
  7463   001936  182F               	xorwf	_nextBack^0,w,c
  7464   001938  A4D8               	btfss	status,2,c
  7465   00193A  EFA1  F00C         	goto	u14271
  7466   00193E  EFA3  F00C         	goto	u14270
  7467   001942                     u14271:
  7468   001942  EF5E  F00B         	goto	l15464
  7469   001946                     u14270:
  7470   001946                     
  7471                           ;main.c: 424:                             TemperatureSensor_TC74_Read_Value = Temperatur
      +                          eSensor_TC74_Read_Temp(0x92);
  7472   001946  0E92               	movlw	146
  7473   001948  EC53  F02A         	call	_TemperatureSensor_TC74_Read_Temp
  7474   00194C  6E3E               	movwf	_TemperatureSensor_TC74_Read_Value^0,c
  7475                           
  7476                           ;main.c: 425:                             I2C_Write1ByteRegister(0x70, 0x00, Temperature
      +                          Sensor_TC74_Read_Value);
  7477   00194E  0E00               	movlw	0
  7478   001950  0100               	movlb	0	; () banked
  7479   001952  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  7480   001954  C03E  F0E5         	movff	_TemperatureSensor_TC74_Read_Value,I2C_Write1ByteRegister@data
  7481   001958  0E70               	movlw	112
  7482   00195A  EC6F  F024         	call	_I2C_Write1ByteRegister
  7483   00195E                     
  7484                           ;main.c: 426:                             _delay((unsigned long)((100)*(8000000/4000.0))
      +                          );
  7485   00195E  0E02               	movlw	2
  7486   001960  0101               	movlb	1	; () banked
  7487   001962  6F95               	movwf	(??_main+1)& (0+255),b
  7488   001964  0E04               	movlw	4
  7489   001966  6F94               	movwf	??_main& (0+255),b
  7490   001968  0EBA               	movlw	186
  7491   00196A                     u14547:
  7492   00196A  2EE8               	decfsz	wreg,f,c
  7493   00196C  D7FE               	bra	u14547
  7494   00196E  2F94               	decfsz	??_main& (0+255),f,b
  7495   001970  D7FC               	bra	u14547
  7496   001972  2F95               	decfsz	(??_main+1)& (0+255),f,b
  7497   001974  D7FA               	bra	u14547
  7498   001976  0000               	nop	
  7499   001978                     
  7500                           ;main.c: 428:                             ret = ADC_Get_Conversion_Result_Block (&ADC_LD
      +                          R, ADC_CHANNEL_AN0, &LDR_Read_Value);
  7501   001978  0E30               	movlw	low _ADC_LDR
  7502   00197A  0100               	movlb	0	; () banked
  7503   00197C  6FDC               	movwf	ADC_Get_Conversion_Result_Block@_ADC_config& (0+255),b
  7504   00197E  0E01               	movlw	high _ADC_LDR
  7505   001980  6FDD               	movwf	(ADC_Get_Conversion_Result_Block@_ADC_config+1)& (0+255),b
  7506   001982  0E00               	movlw	0
  7507   001984  6FDE               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Channel& (0+255),b
  7508   001986  0E31               	movlw	low _LDR_Read_Value
  7509   001988  6FDF               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Result& (0+255),b
  7510   00198A  ECAB  F026         	call	_ADC_Get_Conversion_Result_Block	;wreg free
  7511   00198E  0101               	movlb	1	; () banked
  7512   001990  6F96               	movwf	_ret& (0+255),b
  7513   001992                     
  7514                           ; BSR set to: 1
  7515                           ;main.c: 429:                             I2C_Write1ByteRegister(0x50, 0x00, LDR_Read_Va
      +                          lue);
  7516   001992  0E00               	movlw	0
  7517   001994  0100               	movlb	0	; () banked
  7518   001996  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
  7519   001998  C031  F0E5         	movff	_LDR_Read_Value,I2C_Write1ByteRegister@data
  7520   00199C  0E50               	movlw	80
  7521   00199E  EC6F  F024         	call	_I2C_Write1ByteRegister
  7522   0019A2                     
  7523                           ;main.c: 430:                              _delay((unsigned long)((100)*(8000000/4000.0)
      +                          ));
  7524   0019A2  0E02               	movlw	2
  7525   0019A4  0101               	movlb	1	; () banked
  7526   0019A6  6F95               	movwf	(??_main+1)& (0+255),b
  7527   0019A8  0E04               	movlw	4
  7528   0019AA  6F94               	movwf	??_main& (0+255),b
  7529   0019AC  0EBA               	movlw	186
  7530   0019AE                     u14557:
  7531   0019AE  2EE8               	decfsz	wreg,f,c
  7532   0019B0  D7FE               	bra	u14557
  7533   0019B2  2F94               	decfsz	??_main& (0+255),f,b
  7534   0019B4  D7FC               	bra	u14557
  7535   0019B6  2F95               	decfsz	(??_main+1)& (0+255),f,b
  7536   0019B8  D7FA               	bra	u14557
  7537   0019BA  0000               	nop	
  7538                           
  7539                           ;main.c: 432:                             ret = Timer0_Init (&timer0_1);
  7540   0019BC  0E40               	movlw	low _timer0_1
  7541   0019BE  0100               	movlb	0	; () banked
  7542   0019C0  6FD9               	movwf	Timer0_Init@_timer0& (0+255),b
  7543   0019C2  0E01               	movlw	high _timer0_1
  7544   0019C4  6FDA               	movwf	(Timer0_Init@_timer0+1)& (0+255),b
  7545   0019C6  EC2C  F022         	call	_Timer0_Init	;wreg free
  7546   0019CA  0101               	movlb	1	; () banked
  7547   0019CC  6F96               	movwf	_ret& (0+255),b
  7548   0019CE                     
  7549                           ; BSR set to: 1
  7550                           ;main.c: 433:                             exit_alarm = 12;
  7551   0019CE  0E0C               	movlw	12
  7552   0019D0  6E2D               	movwf	_exit_alarm^0,c
  7553   0019D2  EF5E  F00B         	goto	l15464
  7554   0019D6                     l15608:
  7555                           
  7556                           ;main.c: 316:                     while(nextBack != '\0'){
  7557   0019D6  502F               	movf	_nextBack^0,w,c
  7558   0019D8  A4D8               	btfss	status,2,c
  7559   0019DA  EFF1  F00C         	goto	u14281
  7560   0019DE  EFF3  F00C         	goto	u14280
  7561   0019E2                     u14281:
  7562   0019E2  EFE6  F00A         	goto	l15436
  7563   0019E6                     u14280:
  7564   0019E6                     l15610:
  7565                           
  7566                           ;main.c: 280:                 while(exit_alarm != '1'){
  7567   0019E6  0E31               	movlw	49
  7568   0019E8  182D               	xorwf	_exit_alarm^0,w,c
  7569   0019EA  A4D8               	btfss	status,2,c
  7570   0019EC  EFFA  F00C         	goto	u14291
  7571   0019F0  EFFC  F00C         	goto	u14290
  7572   0019F4                     u14291:
  7573   0019F4  EFDF  F009         	goto	l15386
  7574   0019F8                     u14290:
  7575   0019F8  EF4E  F008         	goto	l15298
  7576   0019FC                     l15612:
  7577   0019FC  5030               	movf	_NumberPressed^0,w,c
  7578                           
  7579                           ; Switch size 1, requested type "simple"
  7580                           ; Number of cases is 2, Range of values is 49 to 50
  7581                           ; switch strategies available:
  7582                           ; Name         Instructions Cycles
  7583                           ; simple_byte            7     4 (average)
  7584                           ;	Chosen strategy is simple_byte
  7585   0019FE  0A31               	xorlw	49	; case 49
  7586   001A00  B4D8               	btfsc	status,2,c
  7587   001A02  EFCA  F008         	goto	l15328
  7588   001A06  0A03               	xorlw	3	; case 50
  7589   001A08  B4D8               	btfsc	status,2,c
  7590   001A0A  EFB8  F009         	goto	l15376
  7591   001A0E  EF09  F00D         	goto	l2675
  7592   001A12                     l2675:
  7593   001A12  EF4E  F008         	goto	l15298
  7594   001A16  EF2B  F002         	goto	start
  7595   001A1A                     __end_of_main:
  7596                           	callstack 0
  7597                           
  7598 ;; *************** function _update_display *****************
  7599 ;; Defined at:
  7600 ;;		line 166 in file "main.c"
  7601 ;; Parameters:    Size  Location     Type
  7602 ;;		None
  7603 ;; Auto vars:     Size  Location     Type
  7604 ;;		None
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  1    wreg      void 
  7607 ;; Registers used:
  7608 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7618 ;;Total ram usage:        0 bytes
  7619 ;; Hardware stack levels used: 1
  7620 ;; Hardware stack levels required when called: 14
  7621 ;; This function calls:
  7622 ;;		_ECU_LCD_4Bit_Send_Command
  7623 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
  7624 ;;		_ECU_LCD_4Bit_Send_char_Data
  7625 ;;		_LCD_4Bits_Set_Curser
  7626 ;; This function is called by:
  7627 ;;		_main
  7628 ;; This function uses a non-reentrant model
  7629 ;;
  7630                           
  7631                           	psect	text1
  7632   003568                     __ptext1:
  7633                           	callstack 0
  7634   003568                     _update_display:
  7635                           	callstack 16
  7636   003568                     
  7637                           ;main.c: 167:     ret = ECU_LCD_4Bit_Send_Command(&LCD_1, 0x0D);
  7638   003568  0E37               	movlw	low _LCD_1
  7639   00356A  0100               	movlb	0	; () banked
  7640   00356C  6FDF               	movwf	ECU_LCD_4Bit_Send_Command@_LCD& (0+255),b
  7641   00356E  0E0D               	movlw	13
  7642   003570  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
  7643   003572  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
  7644   003576  0101               	movlb	1	; () banked
  7645   003578  6F96               	movwf	_ret& (0+255),b
  7646                           
  7647                           ;main.c: 168:     ret = LCD_4Bits_Set_Curser(&LCD_1, 1,1);
  7648   00357A  0E37               	movlw	low _LCD_1
  7649   00357C  0100               	movlb	0	; () banked
  7650   00357E  6FE2               	movwf	LCD_4Bits_Set_Curser@_LCD& (0+255),b
  7651   003580  0E01               	movlw	1
  7652   003582  6FE3               	movwf	LCD_4Bits_Set_Curser@row& (0+255),b
  7653   003584  0E01               	movlw	1
  7654   003586  6FE4               	movwf	LCD_4Bits_Set_Curser@coloumn& (0+255),b
  7655   003588  ECB0  F020         	call	_LCD_4Bits_Set_Curser	;wreg free
  7656   00358C  0101               	movlb	1	; () banked
  7657   00358E  6F96               	movwf	_ret& (0+255),b
  7658                           
  7659                           ;main.c: 170:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[0] + '0');
  7660   003590  0E37               	movlw	low _LCD_1
  7661   003592  0100               	movlb	0	; () banked
  7662   003594  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  7663   003596  517D               	movf	_time_array& (0+255),w,b
  7664   003598  0F30               	addlw	48
  7665   00359A  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  7666   00359C  ECB4  F025         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  7667   0035A0  0101               	movlb	1	; () banked
  7668   0035A2  6F96               	movwf	_ret& (0+255),b
  7669                           
  7670                           ;main.c: 171:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[1] + '0');
  7671   0035A4  0E37               	movlw	low _LCD_1
  7672   0035A6  0100               	movlb	0	; () banked
  7673   0035A8  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  7674   0035AA  517E               	movf	(_time_array+1)& (0+255),w,b
  7675   0035AC  0F30               	addlw	48
  7676   0035AE  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  7677   0035B0  ECB4  F025         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  7678   0035B4  0101               	movlb	1	; () banked
  7679   0035B6  6F96               	movwf	_ret& (0+255),b
  7680                           
  7681                           ;main.c: 172:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, ':');
  7682   0035B8  0E37               	movlw	low _LCD_1
  7683   0035BA  0100               	movlb	0	; () banked
  7684   0035BC  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  7685   0035BE  0E3A               	movlw	58
  7686   0035C0  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  7687   0035C2  ECB4  F025         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  7688   0035C6  0101               	movlb	1	; () banked
  7689   0035C8  6F96               	movwf	_ret& (0+255),b
  7690                           
  7691                           ;main.c: 173:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[2] + '0');
  7692   0035CA  0E37               	movlw	low _LCD_1
  7693   0035CC  0100               	movlb	0	; () banked
  7694   0035CE  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  7695   0035D0  517F               	movf	(_time_array+2)& (0+255),w,b
  7696   0035D2  0F30               	addlw	48
  7697   0035D4  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  7698   0035D6  ECB4  F025         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  7699   0035DA  0101               	movlb	1	; () banked
  7700   0035DC  6F96               	movwf	_ret& (0+255),b
  7701                           
  7702                           ;main.c: 174:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[3] + '0');
  7703   0035DE  0E37               	movlw	low _LCD_1
  7704   0035E0  0100               	movlb	0	; () banked
  7705   0035E2  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  7706   0035E4  5180               	movf	(_time_array+3)& (0+255),w,b
  7707   0035E6  0F30               	addlw	48
  7708   0035E8  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  7709   0035EA  ECB4  F025         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  7710   0035EE  0101               	movlb	1	; () banked
  7711   0035F0  6F96               	movwf	_ret& (0+255),b
  7712                           
  7713                           ;main.c: 175:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, ':');
  7714   0035F2  0E37               	movlw	low _LCD_1
  7715   0035F4  0100               	movlb	0	; () banked
  7716   0035F6  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  7717   0035F8  0E3A               	movlw	58
  7718   0035FA  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  7719   0035FC  ECB4  F025         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  7720   003600  0101               	movlb	1	; () banked
  7721   003602  6F96               	movwf	_ret& (0+255),b
  7722                           
  7723                           ;main.c: 176:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[4] + '0');
  7724   003604  0E37               	movlw	low _LCD_1
  7725   003606  0100               	movlb	0	; () banked
  7726   003608  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  7727   00360A  5181               	movf	(_time_array+4)& (0+255),w,b
  7728   00360C  0F30               	addlw	48
  7729   00360E  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  7730   003610  ECB4  F025         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  7731   003614  0101               	movlb	1	; () banked
  7732   003616  6F96               	movwf	_ret& (0+255),b
  7733                           
  7734                           ;main.c: 177:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[5] + '0');
  7735   003618  0E37               	movlw	low _LCD_1
  7736   00361A  0100               	movlb	0	; () banked
  7737   00361C  6FDF               	movwf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),b
  7738   00361E  5182               	movf	(_time_array+5)& (0+255),w,b
  7739   003620  0F30               	addlw	48
  7740   003622  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
  7741   003624  ECB4  F025         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
  7742   003628  0101               	movlb	1	; () banked
  7743   00362A  6F96               	movwf	_ret& (0+255),b
  7744   00362C                     
  7745                           ; BSR set to: 1
  7746                           ;main.c: 179:     ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1,2,6, "Stop Watch"
      +                          );
  7747   00362C  0E37               	movlw	low _LCD_1
  7748   00362E  6F8C               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD& (0+255),b
  7749   003630  0E02               	movlw	2
  7750   003632  6F8D               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Row& (0+255),b
  7751   003634  0E06               	movlw	6
  7752   003636  6F8E               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn& (0+255),b
  7753   003638  0E21               	movlw	low STR_5
  7754   00363A  6F8F               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),b
  7755   00363C  518F               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),w,b
  7756   00363E  A4D8               	btfss	status,2,c
  7757   003640  0E10               	movlw	high __smallconst
  7758   003642  6F90               	movwf	(ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)& (0+255),b
  7759   003644  ECFF  F020         	call	_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
  7760   003648  0101               	movlb	1	; () banked
  7761   00364A  6F96               	movwf	_ret& (0+255),b
  7762   00364C                     
  7763                           ; BSR set to: 1
  7764                           ;main.c: 180:     ret = LCD_4Bits_Set_Curser (&LCD_1, 1,9);
  7765   00364C  0E37               	movlw	low _LCD_1
  7766   00364E  0100               	movlb	0	; () banked
  7767   003650  6FE2               	movwf	LCD_4Bits_Set_Curser@_LCD& (0+255),b
  7768   003652  0E01               	movlw	1
  7769   003654  6FE3               	movwf	LCD_4Bits_Set_Curser@row& (0+255),b
  7770   003656  0E09               	movlw	9
  7771   003658  6FE4               	movwf	LCD_4Bits_Set_Curser@coloumn& (0+255),b
  7772   00365A  ECB0  F020         	call	_LCD_4Bits_Set_Curser	;wreg free
  7773   00365E  0101               	movlb	1	; () banked
  7774   003660  6F96               	movwf	_ret& (0+255),b
  7775   003662                     
  7776                           ; BSR set to: 1
  7777   003662  0012               	return		;funcret
  7778   003664                     __end_of_update_display:
  7779                           	callstack 0
  7780                           
  7781 ;; *************** function _keyPad_Read *****************
  7782 ;; Defined at:
  7783 ;;		line 39 in file "ECU_layer/KeyPad/ecu_keyPad.c"
  7784 ;; Parameters:    Size  Location     Type
  7785 ;;  keypad          2    6[BANK0 ] PTR const struct .
  7786 ;;		 -> keypad_1(8), 
  7787 ;;  keypad_value    1    8[BANK0 ] PTR unsigned char 
  7788 ;;		 -> userInput(1), nextBack(1), exit_alarm(1), exit_Clock(1), 
  7789 ;;		 -> NumberPressed(1), 
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;  coloumn_logi    1   15[BANK0 ] enum E3381
  7792 ;;  l_coloumns_c    1   14[BANK0 ] unsigned char 
  7793 ;;  l_rows_count    1   13[BANK0 ] unsigned char 
  7794 ;;  l_counter       1   12[BANK0 ] unsigned char 
  7795 ;;  rt              1   11[BANK0 ] unsigned char 
  7796 ;; Return value:  Size  Location     Type
  7797 ;;                  1    wreg      unsigned char 
  7798 ;; Registers used:
  7799 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7800 ;; Tracked objects:
  7801 ;;		On entry : 0/0
  7802 ;;		On exit  : 0/0
  7803 ;;		Unchanged: 0/0
  7804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7805 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7806 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7807 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7808 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7809 ;;Total ram usage:       10 bytes
  7810 ;; Hardware stack levels used: 1
  7811 ;; Hardware stack levels required when called: 10
  7812 ;; This function calls:
  7813 ;;		_gpio_pin_read_logic
  7814 ;;		_gpio_pin_write_logic
  7815 ;; This function is called by:
  7816 ;;		_main
  7817 ;; This function uses a non-reentrant model
  7818 ;;
  7819                           
  7820                           	psect	text2
  7821   003664                     __ptext2:
  7822                           	callstack 0
  7823   003664                     _keyPad_Read:
  7824                           	callstack 20
  7825   003664                     
  7826                           ;ECU_layer/KeyPad/ecu_keyPad.c: 41:     uint8 l_rows_counter = 0;
  7827   003664  0100               	movlb	0	; () banked
  7828   003666  6BE2               	clrf	keyPad_Read@l_rows_counter& (0+255),b
  7829                           
  7830                           ;ECU_layer/KeyPad/ecu_keyPad.c: 42:     uint8 l_coloumns_counter = 0;
  7831   003668  6BE3               	clrf	keyPad_Read@l_coloumns_counter& (0+255),b
  7832                           
  7833                           ;ECU_layer/KeyPad/ecu_keyPad.c: 43:     uint8 l_counter = 0;
  7834   00366A  6BE1               	clrf	keyPad_Read@l_counter& (0+255),b
  7835   00366C                     
  7836                           ; BSR set to: 0
  7837                           ;ECU_layer/KeyPad/ecu_keyPad.c: 44:     logic_t coloumn_logic;;ECU_layer/KeyPad/ecu_keyP
      +                          ad.c: 45:      if(((void*)0) == keypad || ((void*)0) == keypad_value ){
  7838   00366C  51DB               	movf	keyPad_Read@keypad& (0+255),w,b
  7839   00366E  11DC               	iorwf	(keyPad_Read@keypad+1)& (0+255),w,b
  7840   003670  B4D8               	btfsc	status,2,c
  7841   003672  EF3D  F01B         	goto	u12931
  7842   003676  EF3F  F01B         	goto	u12930
  7843   00367A                     u12931:
  7844   00367A  EF47  F01B         	goto	l58
  7845   00367E                     u12930:
  7846   00367E                     
  7847                           ; BSR set to: 0
  7848   00367E  51DD               	movf	keyPad_Read@keypad_value& (0+255),w,b
  7849   003680  A4D8               	btfss	status,2,c
  7850   003682  EF45  F01B         	goto	u12941
  7851   003686  EF47  F01B         	goto	u12940
  7852   00368A                     u12941:
  7853   00368A  EF4A  F01B         	goto	l56
  7854   00368E                     u12940:
  7855   00368E                     l58:
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;ECU_layer/KeyPad/ecu_keyPad.c: 46:         rt = (STD_ReturnType)0x00;
  7859   00368E  6BE0               	clrf	keyPad_Read@rt& (0+255),b
  7860                           
  7861                           ;ECU_layer/KeyPad/ecu_keyPad.c: 47:     }
  7862   003690  EFAC  F01B         	goto	l59
  7863   003694                     l56:
  7864                           
  7865                           ; BSR set to: 0
  7866                           ;ECU_layer/KeyPad/ecu_keyPad.c: 49:         for(l_rows_counter = 0 ; l_rows_counter < 4 
      +                          ; l_rows_counter++){
  7867   003694  6BE2               	clrf	keyPad_Read@l_rows_counter& (0+255),b
  7868   003696                     l60:
  7869                           
  7870                           ; BSR set to: 0
  7871                           ;ECU_layer/KeyPad/ecu_keyPad.c: 50:             for(l_counter = 0 ; l_counter < 4 ; l_co
      +                          unter++){
  7872   003696  6BE1               	clrf	keyPad_Read@l_counter& (0+255),b
  7873   003698                     l14274:
  7874                           
  7875                           ; BSR set to: 0
  7876   003698  51E1               	movf	keyPad_Read@l_counter& (0+255),w,b
  7877   00369A  25DB               	addwf	keyPad_Read@keypad& (0+255),w,b
  7878   00369C  6FD5               	movwf	gpio_pin_write_logic@pinConfig& (0+255),b
  7879   00369E  0E00               	movlw	0
  7880   0036A0  21DC               	addwfc	(keyPad_Read@keypad+1)& (0+255),w,b
  7881   0036A2  6FD6               	movwf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
  7882   0036A4  0E00               	movlw	0
  7883   0036A6  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
  7884   0036A8  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
  7885   0036AC                     
  7886                           ;ECU_layer/KeyPad/ecu_keyPad.c: 52:             }
  7887   0036AC  0100               	movlb	0	; () banked
  7888   0036AE  2BE1               	incf	keyPad_Read@l_counter& (0+255),f,b
  7889   0036B0                     
  7890                           ; BSR set to: 0
  7891   0036B0  0E03               	movlw	3
  7892   0036B2  65E1               	cpfsgt	keyPad_Read@l_counter& (0+255),b
  7893   0036B4  EF5E  F01B         	goto	u12951
  7894   0036B8  EF60  F01B         	goto	u12950
  7895   0036BC                     u12951:
  7896   0036BC  EF4C  F01B         	goto	l14274
  7897   0036C0                     u12950:
  7898   0036C0                     
  7899                           ; BSR set to: 0
  7900                           ;ECU_layer/KeyPad/ecu_keyPad.c: 53:             gpio_pin_write_logic(&(keypad->KeypadRow
      +                          sConfig[l_rows_counter]), GPIO_Pin_Logic_HIGH );
  7901   0036C0  51E2               	movf	keyPad_Read@l_rows_counter& (0+255),w,b
  7902   0036C2  25DB               	addwf	keyPad_Read@keypad& (0+255),w,b
  7903   0036C4  6FD5               	movwf	gpio_pin_write_logic@pinConfig& (0+255),b
  7904   0036C6  0E00               	movlw	0
  7905   0036C8  21DC               	addwfc	(keyPad_Read@keypad+1)& (0+255),w,b
  7906   0036CA  6FD6               	movwf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
  7907   0036CC  0E01               	movlw	1
  7908   0036CE  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
  7909   0036D0  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
  7910   0036D4                     
  7911                           ;ECU_layer/KeyPad/ecu_keyPad.c: 54:             for(l_coloumns_counter = 0 ; l_coloumns_
      +                          counter < 4 ; l_coloumns_counter++){
  7912   0036D4  0100               	movlb	0	; () banked
  7913   0036D6  6BE3               	clrf	keyPad_Read@l_coloumns_counter& (0+255),b
  7914   0036D8                     l14288:
  7915                           
  7916                           ; BSR set to: 0
  7917   0036D8  51E3               	movf	keyPad_Read@l_coloumns_counter& (0+255),w,b
  7918   0036DA  25DB               	addwf	keyPad_Read@keypad& (0+255),w,b
  7919   0036DC  6FDE               	movwf	??_keyPad_Read& (0+255),b
  7920   0036DE  0E00               	movlw	0
  7921   0036E0  21DC               	addwfc	(keyPad_Read@keypad+1)& (0+255),w,b
  7922   0036E2  6FDF               	movwf	(??_keyPad_Read+1)& (0+255),b
  7923   0036E4  0E04               	movlw	4
  7924   0036E6  25DE               	addwf	??_keyPad_Read& (0+255),w,b
  7925   0036E8  6FD5               	movwf	gpio_pin_read_logic@pinConfig& (0+255),b
  7926   0036EA  0E00               	movlw	0
  7927   0036EC  21DF               	addwfc	(??_keyPad_Read+1)& (0+255),w,b
  7928   0036EE  6FD6               	movwf	(gpio_pin_read_logic@pinConfig+1)& (0+255),b
  7929   0036F0  0EE4               	movlw	low keyPad_Read@coloumn_logic
  7930   0036F2  6FD7               	movwf	gpio_pin_read_logic@logic& (0+255),b
  7931   0036F4  ECD2  F018         	call	_gpio_pin_read_logic	;wreg free
  7932   0036F8                     
  7933                           ;ECU_layer/KeyPad/ecu_keyPad.c: 56:                if(coloumn_logic == GPIO_Pin_Logic_HI
      +                          GH ){
  7934   0036F8  0100               	movlb	0	; () banked
  7935   0036FA  05E4               	decf	keyPad_Read@coloumn_logic& (0+255),w,b
  7936   0036FC  A4D8               	btfss	status,2,c
  7937   0036FE  EF83  F01B         	goto	u12961
  7938   003702  EF85  F01B         	goto	u12960
  7939   003706                     u12961:
  7940   003706  EF98  F01B         	goto	l14294
  7941   00370A                     u12960:
  7942   00370A                     
  7943                           ; BSR set to: 0
  7944                           ;ECU_layer/KeyPad/ecu_keyPad.c: 57:                    *keypad_value = btn_value[l_rows_
      +                          counter][l_coloumns_counter];
  7945   00370A  51E2               	movf	keyPad_Read@l_rows_counter& (0+255),w,b
  7946   00370C  0D04               	mullw	4
  7947   00370E  0E00               	movlw	low _btn_value
  7948   003710  24F3               	addwf	243,w,c
  7949   003712  6FDE               	movwf	??_keyPad_Read& (0+255),b
  7950   003714  0E01               	movlw	high _btn_value
  7951   003716  20F4               	addwfc	prodh,w,c
  7952   003718  6FDF               	movwf	(??_keyPad_Read+1)& (0+255),b
  7953   00371A  51E3               	movf	keyPad_Read@l_coloumns_counter& (0+255),w,b
  7954   00371C  25DE               	addwf	??_keyPad_Read& (0+255),w,b
  7955   00371E  6ED9               	movwf	fsr2l,c
  7956   003720  0E00               	movlw	0
  7957   003722  21DF               	addwfc	(??_keyPad_Read+1)& (0+255),w,b
  7958   003724  6EDA               	movwf	fsr2h,c
  7959   003726  51DD               	movf	keyPad_Read@keypad_value& (0+255),w,b
  7960   003728  6EE1               	movwf	fsr1l,c
  7961   00372A  6AE2               	clrf	fsr1h,c
  7962   00372C  CFDF FFE7          	movff	indf2,indf1
  7963   003730                     l14294:
  7964                           
  7965                           ; BSR set to: 0
  7966                           ;ECU_layer/KeyPad/ecu_keyPad.c: 60:             }
  7967   003730  2BE3               	incf	keyPad_Read@l_coloumns_counter& (0+255),f,b
  7968   003732                     
  7969                           ; BSR set to: 0
  7970   003732  0E03               	movlw	3
  7971   003734  65E3               	cpfsgt	keyPad_Read@l_coloumns_counter& (0+255),b
  7972   003736  EF9F  F01B         	goto	u12971
  7973   00373A  EFA1  F01B         	goto	u12970
  7974   00373E                     u12971:
  7975   00373E  EF6C  F01B         	goto	l14288
  7976   003742                     u12970:
  7977   003742                     
  7978                           ; BSR set to: 0
  7979                           ;ECU_layer/KeyPad/ecu_keyPad.c: 61:         }
  7980   003742  2BE2               	incf	keyPad_Read@l_rows_counter& (0+255),f,b
  7981   003744                     
  7982                           ; BSR set to: 0
  7983   003744  0E03               	movlw	3
  7984   003746  65E2               	cpfsgt	keyPad_Read@l_rows_counter& (0+255),b
  7985   003748  EFA8  F01B         	goto	u12981
  7986   00374C  EFAA  F01B         	goto	u12980
  7987   003750                     u12981:
  7988   003750  EF4B  F01B         	goto	l60
  7989   003754                     u12980:
  7990   003754                     
  7991                           ; BSR set to: 0
  7992                           ;ECU_layer/KeyPad/ecu_keyPad.c: 62:         rt = (STD_ReturnType)0x01;
  7993   003754  0E01               	movlw	1
  7994   003756  6FE0               	movwf	keyPad_Read@rt& (0+255),b
  7995   003758                     l59:
  7996                           
  7997                           ; BSR set to: 0
  7998                           ;ECU_layer/KeyPad/ecu_keyPad.c: 64:     return rt;
  7999   003758  51E0               	movf	keyPad_Read@rt& (0+255),w,b
  8000   00375A                     
  8001                           ; BSR set to: 0
  8002   00375A  0012               	return		;funcret
  8003   00375C                     __end_of_keyPad_Read:
  8004                           	callstack 0
  8005                           
  8006 ;; *************** function _gpio_pin_read_logic *****************
  8007 ;; Defined at:
  8008 ;;		line 139 in file "MCAL_layer/GPIO/hal_gpio.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  pinConfig       2    0[BANK0 ] PTR const struct .
  8011 ;;		 -> keypad_1$KeypadColoumnsConfig(4), keypad_1(8), 
  8012 ;;  logic           1    2[BANK0 ] PTR enum E3381
  8013 ;;		 -> ECU_Button_Read@Get_buuton_logic(1), keyPad_Read@coloumn_logic(1), 
  8014 ;; Auto vars:     Size  Location     Type
  8015 ;;  rt              1    5[BANK0 ] unsigned char 
  8016 ;; Return value:  Size  Location     Type
  8017 ;;                  1    wreg      unsigned char 
  8018 ;; Registers used:
  8019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8020 ;; Tracked objects:
  8021 ;;		On entry : 0/0
  8022 ;;		On exit  : 0/0
  8023 ;;		Unchanged: 0/0
  8024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8025 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8026 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8027 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8028 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8029 ;;Total ram usage:        6 bytes
  8030 ;; Hardware stack levels used: 1
  8031 ;; Hardware stack levels required when called: 9
  8032 ;; This function calls:
  8033 ;;		Nothing
  8034 ;; This function is called by:
  8035 ;;		_keyPad_Read
  8036 ;;		_ECU_Button_Read
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           	psect	text3
  8041   0031A4                     __ptext3:
  8042                           	callstack 0
  8043   0031A4                     _gpio_pin_read_logic:
  8044                           	callstack 20
  8045   0031A4                     
  8046                           ;MCAL_layer/GPIO/hal_gpio.c: 140:     STD_ReturnType rt = (STD_ReturnType)0x01;
  8047   0031A4  0E01               	movlw	1
  8048   0031A6  0100               	movlb	0	; () banked
  8049   0031A8  6FDA               	movwf	gpio_pin_read_logic@rt& (0+255),b
  8050   0031AA                     
  8051                           ; BSR set to: 0
  8052                           ;MCAL_layer/GPIO/hal_gpio.c: 141:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 
      +                          -1 || ((void*)0) == logic ){
  8053   0031AA  51D5               	movf	gpio_pin_read_logic@pinConfig& (0+255),w,b
  8054   0031AC  11D6               	iorwf	(gpio_pin_read_logic@pinConfig+1)& (0+255),w,b
  8055   0031AE  B4D8               	btfsc	status,2,c
  8056   0031B0  EFDC  F018         	goto	u12611
  8057   0031B4  EFDE  F018         	goto	u12610
  8058   0031B8                     u12611:
  8059   0031B8  EFF7  F018         	goto	l839
  8060   0031BC                     u12610:
  8061   0031BC                     
  8062                           ; BSR set to: 0
  8063   0031BC  C0D5  FFD9         	movff	gpio_pin_read_logic@pinConfig,fsr2l
  8064   0031C0  C0D6  FFDA         	movff	gpio_pin_read_logic@pinConfig+1,fsr2h
  8065   0031C4  30DF               	rrcf	223,w,c
  8066   0031C6  32E8               	rrcf	wreg,f,c
  8067   0031C8  32E8               	rrcf	wreg,f,c
  8068   0031CA  0B07               	andlw	7
  8069   0031CC  6FD8               	movwf	??_gpio_pin_read_logic& (0+255),b
  8070   0031CE  0E08               	movlw	8
  8071   0031D0  61D8               	cpfslt	??_gpio_pin_read_logic& (0+255),b
  8072   0031D2  EFED  F018         	goto	u12621
  8073   0031D6  EFEF  F018         	goto	u12620
  8074   0031DA                     u12621:
  8075   0031DA  EFF7  F018         	goto	l839
  8076   0031DE                     u12620:
  8077   0031DE                     
  8078                           ; BSR set to: 0
  8079   0031DE  51D7               	movf	gpio_pin_read_logic@logic& (0+255),w,b
  8080   0031E0  A4D8               	btfss	status,2,c
  8081   0031E2  EFF5  F018         	goto	u12631
  8082   0031E6  EFF7  F018         	goto	u12630
  8083   0031EA                     u12631:
  8084   0031EA  EF86  F019         	goto	l14010
  8085   0031EE                     u12630:
  8086   0031EE                     l839:
  8087                           
  8088                           ; BSR set to: 0
  8089                           ;MCAL_layer/GPIO/hal_gpio.c: 142:         rt = (STD_ReturnType)0x00;
  8090   0031EE  6BDA               	clrf	gpio_pin_read_logic@rt& (0+255),b
  8091                           
  8092                           ;MCAL_layer/GPIO/hal_gpio.c: 143:     }
  8093   0031F0  EFA2  F019         	goto	l14012
  8094   0031F4                     l14000:
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;MCAL_layer/GPIO/hal_gpio.c: 147:                         *logic = ((PORTA >> pinConfig-
      +                          >pin)&1);break;
  8098   0031F4  51D7               	movf	gpio_pin_read_logic@logic& (0+255),w,b
  8099   0031F6  6ED9               	movwf	fsr2l,c
  8100   0031F8  6ADA               	clrf	fsr2h,c
  8101   0031FA  C0D5  FFE1         	movff	gpio_pin_read_logic@pinConfig,fsr1l
  8102   0031FE  C0D6  FFE2         	movff	gpio_pin_read_logic@pinConfig+1,fsr1h
  8103   003202  30E7               	rrcf	231,w,c
  8104   003204  32E8               	rrcf	wreg,f,c
  8105   003206  32E8               	rrcf	wreg,f,c
  8106   003208  0B07               	andlw	7
  8107   00320A  6FD8               	movwf	??_gpio_pin_read_logic& (0+255),b
  8108   00320C  CF80 F0D9          	movff	3968,??_gpio_pin_read_logic+1	;volatile
  8109   003210  2BD8               	incf	??_gpio_pin_read_logic& (0+255),f,b
  8110   003212  EF0D  F019         	goto	u12644
  8111   003216                     u12645:
  8112   003216  90D8               	bcf	status,0,c
  8113   003218  33D9               	rrcf	(??_gpio_pin_read_logic+1)& (0+255),f,b
  8114   00321A                     u12644:
  8115   00321A  2FD8               	decfsz	??_gpio_pin_read_logic& (0+255),f,b
  8116   00321C  EF0B  F019         	goto	u12645
  8117   003220  0100               	movlb	0	; () banked
  8118   003222  51D9               	movf	(??_gpio_pin_read_logic+1)& (0+255),w,b
  8119   003224  0B01               	andlw	1
  8120   003226  6EDF               	movwf	indf2,c
  8121   003228  EFA2  F019         	goto	l14012
  8122   00322C                     l14002:
  8123                           
  8124                           ; BSR set to: 0
  8125                           ;MCAL_layer/GPIO/hal_gpio.c: 149:                         *logic = ((PORTB >> pinConfig-
      +                          >pin)&1);break;
  8126   00322C  51D7               	movf	gpio_pin_read_logic@logic& (0+255),w,b
  8127   00322E  6ED9               	movwf	fsr2l,c
  8128   003230  6ADA               	clrf	fsr2h,c
  8129   003232  C0D5  FFE1         	movff	gpio_pin_read_logic@pinConfig,fsr1l
  8130   003236  C0D6  FFE2         	movff	gpio_pin_read_logic@pinConfig+1,fsr1h
  8131   00323A  30E7               	rrcf	231,w,c
  8132   00323C  32E8               	rrcf	wreg,f,c
  8133   00323E  32E8               	rrcf	wreg,f,c
  8134   003240  0B07               	andlw	7
  8135   003242  6FD8               	movwf	??_gpio_pin_read_logic& (0+255),b
  8136   003244  CF81 F0D9          	movff	3969,??_gpio_pin_read_logic+1	;volatile
  8137   003248  2BD8               	incf	??_gpio_pin_read_logic& (0+255),f,b
  8138   00324A  EF29  F019         	goto	u12654
  8139   00324E                     u12655:
  8140   00324E  90D8               	bcf	status,0,c
  8141   003250  33D9               	rrcf	(??_gpio_pin_read_logic+1)& (0+255),f,b
  8142   003252                     u12654:
  8143   003252  2FD8               	decfsz	??_gpio_pin_read_logic& (0+255),f,b
  8144   003254  EF27  F019         	goto	u12655
  8145   003258  0100               	movlb	0	; () banked
  8146   00325A  51D9               	movf	(??_gpio_pin_read_logic+1)& (0+255),w,b
  8147   00325C  0B01               	andlw	1
  8148   00325E  6EDF               	movwf	indf2,c
  8149   003260  EFA2  F019         	goto	l14012
  8150   003264                     l14004:
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;MCAL_layer/GPIO/hal_gpio.c: 151:                         *logic = ((PORTC >> pinConfig-
      +                          >pin)&1);break;
  8154   003264  51D7               	movf	gpio_pin_read_logic@logic& (0+255),w,b
  8155   003266  6ED9               	movwf	fsr2l,c
  8156   003268  6ADA               	clrf	fsr2h,c
  8157   00326A  C0D5  FFE1         	movff	gpio_pin_read_logic@pinConfig,fsr1l
  8158   00326E  C0D6  FFE2         	movff	gpio_pin_read_logic@pinConfig+1,fsr1h
  8159   003272  30E7               	rrcf	231,w,c
  8160   003274  32E8               	rrcf	wreg,f,c
  8161   003276  32E8               	rrcf	wreg,f,c
  8162   003278  0B07               	andlw	7
  8163   00327A  6FD8               	movwf	??_gpio_pin_read_logic& (0+255),b
  8164   00327C  CF82 F0D9          	movff	3970,??_gpio_pin_read_logic+1	;volatile
  8165   003280  2BD8               	incf	??_gpio_pin_read_logic& (0+255),f,b
  8166   003282  EF45  F019         	goto	u12664
  8167   003286                     u12665:
  8168   003286  90D8               	bcf	status,0,c
  8169   003288  33D9               	rrcf	(??_gpio_pin_read_logic+1)& (0+255),f,b
  8170   00328A                     u12664:
  8171   00328A  2FD8               	decfsz	??_gpio_pin_read_logic& (0+255),f,b
  8172   00328C  EF43  F019         	goto	u12665
  8173   003290  0100               	movlb	0	; () banked
  8174   003292  51D9               	movf	(??_gpio_pin_read_logic+1)& (0+255),w,b
  8175   003294  0B01               	andlw	1
  8176   003296  6EDF               	movwf	indf2,c
  8177   003298  EFA2  F019         	goto	l14012
  8178   00329C                     l14006:
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;MCAL_layer/GPIO/hal_gpio.c: 153:                         *logic = ((PORTD >> pinConfig-
      +                          >pin)&1);break;
  8182   00329C  51D7               	movf	gpio_pin_read_logic@logic& (0+255),w,b
  8183   00329E  6ED9               	movwf	fsr2l,c
  8184   0032A0  6ADA               	clrf	fsr2h,c
  8185   0032A2  C0D5  FFE1         	movff	gpio_pin_read_logic@pinConfig,fsr1l
  8186   0032A6  C0D6  FFE2         	movff	gpio_pin_read_logic@pinConfig+1,fsr1h
  8187   0032AA  30E7               	rrcf	231,w,c
  8188   0032AC  32E8               	rrcf	wreg,f,c
  8189   0032AE  32E8               	rrcf	wreg,f,c
  8190   0032B0  0B07               	andlw	7
  8191   0032B2  6FD8               	movwf	??_gpio_pin_read_logic& (0+255),b
  8192   0032B4  CF83 F0D9          	movff	3971,??_gpio_pin_read_logic+1	;volatile
  8193   0032B8  2BD8               	incf	??_gpio_pin_read_logic& (0+255),f,b
  8194   0032BA  EF61  F019         	goto	u12674
  8195   0032BE                     u12675:
  8196   0032BE  90D8               	bcf	status,0,c
  8197   0032C0  33D9               	rrcf	(??_gpio_pin_read_logic+1)& (0+255),f,b
  8198   0032C2                     u12674:
  8199   0032C2  2FD8               	decfsz	??_gpio_pin_read_logic& (0+255),f,b
  8200   0032C4  EF5F  F019         	goto	u12675
  8201   0032C8  0100               	movlb	0	; () banked
  8202   0032CA  51D9               	movf	(??_gpio_pin_read_logic+1)& (0+255),w,b
  8203   0032CC  0B01               	andlw	1
  8204   0032CE  6EDF               	movwf	indf2,c
  8205   0032D0  EFA2  F019         	goto	l14012
  8206   0032D4                     l14008:
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;MCAL_layer/GPIO/hal_gpio.c: 155:                         *logic = ((PORTE >> pinConfig-
      +                          >pin)&1);break;
  8210   0032D4  51D7               	movf	gpio_pin_read_logic@logic& (0+255),w,b
  8211   0032D6  6ED9               	movwf	fsr2l,c
  8212   0032D8  6ADA               	clrf	fsr2h,c
  8213   0032DA  C0D5  FFE1         	movff	gpio_pin_read_logic@pinConfig,fsr1l
  8214   0032DE  C0D6  FFE2         	movff	gpio_pin_read_logic@pinConfig+1,fsr1h
  8215   0032E2  30E7               	rrcf	231,w,c
  8216   0032E4  32E8               	rrcf	wreg,f,c
  8217   0032E6  32E8               	rrcf	wreg,f,c
  8218   0032E8  0B07               	andlw	7
  8219   0032EA  6FD8               	movwf	??_gpio_pin_read_logic& (0+255),b
  8220   0032EC  CF84 F0D9          	movff	3972,??_gpio_pin_read_logic+1	;volatile
  8221   0032F0  2BD8               	incf	??_gpio_pin_read_logic& (0+255),f,b
  8222   0032F2  EF7D  F019         	goto	u12684
  8223   0032F6                     u12685:
  8224   0032F6  90D8               	bcf	status,0,c
  8225   0032F8  33D9               	rrcf	(??_gpio_pin_read_logic+1)& (0+255),f,b
  8226   0032FA                     u12684:
  8227   0032FA  2FD8               	decfsz	??_gpio_pin_read_logic& (0+255),f,b
  8228   0032FC  EF7B  F019         	goto	u12685
  8229   003300  0100               	movlb	0	; () banked
  8230   003302  51D9               	movf	(??_gpio_pin_read_logic+1)& (0+255),w,b
  8231   003304  0B01               	andlw	1
  8232   003306  6EDF               	movwf	indf2,c
  8233   003308  EFA2  F019         	goto	l14012
  8234   00330C                     l14010:
  8235                           
  8236                           ; BSR set to: 0
  8237   00330C  C0D5  FFD9         	movff	gpio_pin_read_logic@pinConfig,fsr2l
  8238   003310  C0D6  FFDA         	movff	gpio_pin_read_logic@pinConfig+1,fsr2h
  8239   003314  50DF               	movf	223,w,c
  8240   003316  0B07               	andlw	7
  8241                           
  8242                           ; Switch size 1, requested type "simple"
  8243                           ; Number of cases is 5, Range of values is 0 to 4
  8244                           ; switch strategies available:
  8245                           ; Name         Instructions Cycles
  8246                           ; simple_byte           16     9 (average)
  8247                           ;	Chosen strategy is simple_byte
  8248   003318  0A00               	xorlw	0	; case 0
  8249   00331A  B4D8               	btfsc	status,2,c
  8250   00331C  EFFA  F018         	goto	l14000
  8251   003320  0A01               	xorlw	1	; case 1
  8252   003322  B4D8               	btfsc	status,2,c
  8253   003324  EF16  F019         	goto	l14002
  8254   003328  0A03               	xorlw	3	; case 2
  8255   00332A  B4D8               	btfsc	status,2,c
  8256   00332C  EF32  F019         	goto	l14004
  8257   003330  0A01               	xorlw	1	; case 3
  8258   003332  B4D8               	btfsc	status,2,c
  8259   003334  EF4E  F019         	goto	l14006
  8260   003338  0A07               	xorlw	7	; case 4
  8261   00333A  B4D8               	btfsc	status,2,c
  8262   00333C  EF6A  F019         	goto	l14008
  8263   003340  EFF7  F018         	goto	l839
  8264   003344                     l14012:
  8265                           
  8266                           ; BSR set to: 0
  8267                           ;MCAL_layer/GPIO/hal_gpio.c: 160:     return rt;
  8268   003344  51DA               	movf	gpio_pin_read_logic@rt& (0+255),w,b
  8269   003346                     
  8270                           ; BSR set to: 0
  8271   003346  0012               	return		;funcret
  8272   003348                     __end_of_gpio_pin_read_logic:
  8273                           	callstack 0
  8274                           
  8275 ;; *************** function _keyPad_Initialize *****************
  8276 ;; Defined at:
  8277 ;;		line 19 in file "ECU_layer/KeyPad/ecu_keyPad.c"
  8278 ;; Parameters:    Size  Location     Type
  8279 ;;  keypad          2   10[BANK0 ] PTR const struct .
  8280 ;;		 -> keypad_1(8), 
  8281 ;; Auto vars:     Size  Location     Type
  8282 ;;  l_coloums_co    1   16[BANK0 ] unsigned char 
  8283 ;;  l_rows_count    1   15[BANK0 ] unsigned char 
  8284 ;;  rt              1   14[BANK0 ] unsigned char 
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  1    wreg      unsigned char 
  8287 ;; Registers used:
  8288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8294 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8295 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8296 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8297 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8298 ;;Total ram usage:        7 bytes
  8299 ;; Hardware stack levels used: 1
  8300 ;; Hardware stack levels required when called: 11
  8301 ;; This function calls:
  8302 ;;		_gpio_pin_direction_initialize
  8303 ;;		_gpio_pin_initialize
  8304 ;; This function is called by:
  8305 ;;		_main
  8306 ;; This function uses a non-reentrant model
  8307 ;;
  8308                           
  8309                           	psect	text4
  8310   004680                     __ptext4:
  8311                           	callstack 0
  8312   004680                     _keyPad_Initialize:
  8313                           	callstack 19
  8314   004680                     
  8315                           ;ECU_layer/KeyPad/ecu_keyPad.c: 21:     uint8 l_rows_counter = 0;
  8316   004680  0100               	movlb	0	; () banked
  8317   004682  6BE4               	clrf	keyPad_Initialize@l_rows_counter& (0+255),b
  8318                           
  8319                           ;ECU_layer/KeyPad/ecu_keyPad.c: 22:     uint8 l_coloums_counter =0;
  8320   004684  6BE5               	clrf	keyPad_Initialize@l_coloums_counter& (0+255),b
  8321   004686                     
  8322                           ; BSR set to: 0
  8323                           ;ECU_layer/KeyPad/ecu_keyPad.c: 23:      if(((void*)0) == keypad ){
  8324   004686  51DF               	movf	keyPad_Initialize@keypad& (0+255),w,b
  8325   004688  11E0               	iorwf	(keyPad_Initialize@keypad+1)& (0+255),w,b
  8326   00468A  A4D8               	btfss	status,2,c
  8327   00468C  EF4A  F023         	goto	u12901
  8328   004690  EF4C  F023         	goto	u12900
  8329   004694                     u12901:
  8330   004694  EF4F  F023         	goto	l47
  8331   004698                     u12900:
  8332   004698                     
  8333                           ; BSR set to: 0
  8334                           ;ECU_layer/KeyPad/ecu_keyPad.c: 24:         rt = (STD_ReturnType)0x00;
  8335   004698  6BE3               	clrf	keyPad_Initialize@rt& (0+255),b
  8336                           
  8337                           ;ECU_layer/KeyPad/ecu_keyPad.c: 25:     }
  8338   00469A  EF7D  F023         	goto	l48
  8339   00469E                     l47:
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;ECU_layer/KeyPad/ecu_keyPad.c: 27:          for(l_rows_counter =0 ; l_rows_counter<4 ; 
      +                          l_rows_counter++){
  8343   00469E  6BE4               	clrf	keyPad_Initialize@l_rows_counter& (0+255),b
  8344   0046A0                     l14240:
  8345                           
  8346                           ; BSR set to: 0
  8347   0046A0  51E4               	movf	keyPad_Initialize@l_rows_counter& (0+255),w,b
  8348   0046A2  25DF               	addwf	keyPad_Initialize@keypad& (0+255),w,b
  8349   0046A4  6FDB               	movwf	gpio_pin_initialize@pinConfig& (0+255),b
  8350   0046A6  0E00               	movlw	0
  8351   0046A8  21E0               	addwfc	(keyPad_Initialize@keypad+1)& (0+255),w,b
  8352   0046AA  6FDC               	movwf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
  8353   0046AC  ECE8  F025         	call	_gpio_pin_initialize	;wreg free
  8354   0046B0                     
  8355                           ;ECU_layer/KeyPad/ecu_keyPad.c: 29:          }
  8356   0046B0  0100               	movlb	0	; () banked
  8357   0046B2  2BE4               	incf	keyPad_Initialize@l_rows_counter& (0+255),f,b
  8358   0046B4                     
  8359                           ; BSR set to: 0
  8360   0046B4  0E03               	movlw	3
  8361   0046B6  65E4               	cpfsgt	keyPad_Initialize@l_rows_counter& (0+255),b
  8362   0046B8  EF60  F023         	goto	u12911
  8363   0046BC  EF62  F023         	goto	u12910
  8364   0046C0                     u12911:
  8365   0046C0  EF50  F023         	goto	l14240
  8366   0046C4                     u12910:
  8367   0046C4                     
  8368                           ; BSR set to: 0
  8369                           ;ECU_layer/KeyPad/ecu_keyPad.c: 30:          for(l_coloums_counter = 0 ; l_coloums_count
      +                          er<4 ; l_coloums_counter++){
  8370   0046C4  6BE5               	clrf	keyPad_Initialize@l_coloums_counter& (0+255),b
  8371   0046C6                     l14250:
  8372                           
  8373                           ; BSR set to: 0
  8374   0046C6  51E5               	movf	keyPad_Initialize@l_coloums_counter& (0+255),w,b
  8375   0046C8  25DF               	addwf	keyPad_Initialize@keypad& (0+255),w,b
  8376   0046CA  6FE1               	movwf	??_keyPad_Initialize& (0+255),b
  8377   0046CC  0E00               	movlw	0
  8378   0046CE  21E0               	addwfc	(keyPad_Initialize@keypad+1)& (0+255),w,b
  8379   0046D0  6FE2               	movwf	(??_keyPad_Initialize+1)& (0+255),b
  8380   0046D2  0E04               	movlw	4
  8381   0046D4  25E1               	addwf	??_keyPad_Initialize& (0+255),w,b
  8382   0046D6  6FD5               	movwf	gpio_pin_direction_initialize@pinConfig& (0+255),b
  8383   0046D8  0E00               	movlw	0
  8384   0046DA  21E2               	addwfc	(??_keyPad_Initialize+1)& (0+255),w,b
  8385   0046DC  6FD6               	movwf	(gpio_pin_direction_initialize@pinConfig+1)& (0+255),b
  8386   0046DE  ECD1  F013         	call	_gpio_pin_direction_initialize	;wreg free
  8387   0046E2                     
  8388                           ;ECU_layer/KeyPad/ecu_keyPad.c: 32:          }
  8389   0046E2  0100               	movlb	0	; () banked
  8390   0046E4  2BE5               	incf	keyPad_Initialize@l_coloums_counter& (0+255),f,b
  8391   0046E6                     
  8392                           ; BSR set to: 0
  8393   0046E6  0E03               	movlw	3
  8394   0046E8  65E5               	cpfsgt	keyPad_Initialize@l_coloums_counter& (0+255),b
  8395   0046EA  EF79  F023         	goto	u12921
  8396   0046EE  EF7B  F023         	goto	u12920
  8397   0046F2                     u12921:
  8398   0046F2  EF63  F023         	goto	l14250
  8399   0046F6                     u12920:
  8400   0046F6                     
  8401                           ; BSR set to: 0
  8402                           ;ECU_layer/KeyPad/ecu_keyPad.c: 33:         rt = (STD_ReturnType)0x01;
  8403   0046F6  0E01               	movlw	1
  8404   0046F8  6FE3               	movwf	keyPad_Initialize@rt& (0+255),b
  8405   0046FA                     l48:
  8406                           
  8407                           ; BSR set to: 0
  8408                           ;ECU_layer/KeyPad/ecu_keyPad.c: 35:     return rt;
  8409   0046FA  51E3               	movf	keyPad_Initialize@rt& (0+255),w,b
  8410   0046FC                     
  8411                           ; BSR set to: 0
  8412   0046FC  0012               	return		;funcret
  8413   0046FE                     __end_of_keyPad_Initialize:
  8414                           	callstack 0
  8415                           
  8416 ;; *************** function _Timer0_Init *****************
  8417 ;; Defined at:
  8418 ;;		line 23 in file "MCAL_layer/Timer0/hal_timer0.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;  _timer0         2    4[BANK0 ] PTR const struct .
  8421 ;;		 -> timer0_1(7), 
  8422 ;; Auto vars:     Size  Location     Type
  8423 ;;  ret             1    6[BANK0 ] unsigned char 
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      unsigned char 
  8426 ;; Registers used:
  8427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8433 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8434 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8436 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8437 ;;Total ram usage:        3 bytes
  8438 ;; Hardware stack levels used: 1
  8439 ;; Hardware stack levels required when called: 10
  8440 ;; This function calls:
  8441 ;;		_Timer0_Interrupt_Configuration
  8442 ;;		_Timer0_Prescaler_Config
  8443 ;;		_Timer0_Set_Mode
  8444 ;;		_Timer0_Set_Resolution
  8445 ;;		_Timer0_Write_Value
  8446 ;; This function is called by:
  8447 ;;		_main
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           	psect	text5
  8452   004458                     __ptext5:
  8453                           	callstack 0
  8454   004458                     _Timer0_Init:
  8455                           	callstack 20
  8456   004458                     
  8457                           ;MCAL_layer/Timer0/hal_timer0.c: 25:     if(((void*)0) == _timer0){
  8458   004458  0100               	movlb	0	; () banked
  8459   00445A  51D9               	movf	Timer0_Init@_timer0& (0+255),w,b
  8460   00445C  11DA               	iorwf	(Timer0_Init@_timer0+1)& (0+255),w,b
  8461   00445E  A4D8               	btfss	status,2,c
  8462   004460  EF34  F022         	goto	u13101
  8463   004464  EF36  F022         	goto	u13100
  8464   004468                     u13101:
  8465   004468  EF39  F022         	goto	l1681
  8466   00446C                     u13100:
  8467   00446C                     
  8468                           ; BSR set to: 0
  8469                           ;MCAL_layer/Timer0/hal_timer0.c: 26:         ret = (STD_ReturnType)0x00;
  8470   00446C  6BDB               	clrf	Timer0_Init@ret& (0+255),b
  8471                           
  8472                           ;MCAL_layer/Timer0/hal_timer0.c: 27:     }
  8473   00446E  EF72  F022         	goto	l14496
  8474   004472                     l1681:
  8475                           
  8476                           ; BSR set to: 0
  8477                           ;MCAL_layer/Timer0/hal_timer0.c: 30:         (T0CONbits.TMR0ON = 0);
  8478   004472  9ED5               	bcf	213,7,c	;volatile
  8479   004474                     
  8480                           ; BSR set to: 0
  8481                           ;MCAL_layer/Timer0/hal_timer0.c: 32:         Timer0_Set_Resolution(_timer0);
  8482   004474  C0D9  F0D5         	movff	Timer0_Init@_timer0,Timer0_Set_Resolution@_timer0
  8483   004478  C0DA  F0D6         	movff	Timer0_Init@_timer0+1,Timer0_Set_Resolution@_timer0+1
  8484   00447C  EC27  F028         	call	_Timer0_Set_Resolution	;wreg free
  8485                           
  8486                           ;MCAL_layer/Timer0/hal_timer0.c: 34:         Timer0_Set_Mode(_timer0);
  8487   004480  C0D9  F0D5         	movff	Timer0_Init@_timer0,Timer0_Set_Mode@_timer0
  8488   004484  C0DA  F0D6         	movff	Timer0_Init@_timer0+1,Timer0_Set_Mode@_timer0+1
  8489   004488  ECFE  F022         	call	_Timer0_Set_Mode	;wreg free
  8490                           
  8491                           ;MCAL_layer/Timer0/hal_timer0.c: 36:         Timer0_Prescaler_Config(_timer0);
  8492   00448C  C0D9  F0D5         	movff	Timer0_Init@_timer0,Timer0_Prescaler_Config@_timer0
  8493   004490  C0DA  F0D6         	movff	Timer0_Init@_timer0+1,Timer0_Prescaler_Config@_timer0+1
  8494   004494  EC4C  F026         	call	_Timer0_Prescaler_Config	;wreg free
  8495                           
  8496                           ;MCAL_layer/Timer0/hal_timer0.c: 38:         Timer0_Write_Value (_timer0, _timer0->Timer
      +                          0_preloadValue);
  8497   004498  C0D9  F0D5         	movff	Timer0_Init@_timer0,Timer0_Write_Value@_timer0
  8498   00449C  C0DA  F0D6         	movff	Timer0_Init@_timer0+1,Timer0_Write_Value@_timer0+1
  8499   0044A0  0100               	movlb	0	; () banked
  8500   0044A2  EE20 F004          	lfsr	2,4
  8501   0044A6  51D9               	movf	Timer0_Init@_timer0& (0+255),w,b
  8502   0044A8  26D9               	addwf	fsr2l,f,c
  8503   0044AA  51DA               	movf	(Timer0_Init@_timer0+1)& (0+255),w,b
  8504   0044AC  22DA               	addwfc	fsr2h,f,c
  8505   0044AE  CFDE F0D7          	movff	postinc2,Timer0_Write_Value@_value
  8506   0044B2  CFDD F0D8          	movff	postdec2,Timer0_Write_Value@_value+1
  8507   0044B6  EC7C  F026         	call	_Timer0_Write_Value	;wreg free
  8508   0044BA                     
  8509                           ;MCAL_layer/Timer0/hal_timer0.c: 40:         timer0_preload = _timer0->Timer0_preloadVal
      +                          ue;
  8510   0044BA  0100               	movlb	0	; () banked
  8511   0044BC  EE20 F004          	lfsr	2,4
  8512   0044C0  51D9               	movf	Timer0_Init@_timer0& (0+255),w,b
  8513   0044C2  26D9               	addwf	fsr2l,f,c
  8514   0044C4  51DA               	movf	(Timer0_Init@_timer0+1)& (0+255),w,b
  8515   0044C6  22DA               	addwfc	fsr2h,f,c
  8516   0044C8  CFDE F09B          	movff	postinc2,_timer0_preload
  8517   0044CC  CFDD F09C          	movff	postdec2,_timer0_preload+1
  8518   0044D0                     
  8519                           ; BSR set to: 0
  8520                           ;MCAL_layer/Timer0/hal_timer0.c: 43:         Timer0_Interrupt_Configuration(_timer0);
  8521   0044D0  C0D9  F0D5         	movff	Timer0_Init@_timer0,Timer0_Interrupt_Configuration@_timer0
  8522   0044D4  C0DA  F0D6         	movff	Timer0_Init@_timer0+1,Timer0_Interrupt_Configuration@_timer0+1
  8523   0044D8  ECE8  F029         	call	_Timer0_Interrupt_Configuration	;wreg free
  8524   0044DC                     
  8525                           ;MCAL_layer/Timer0/hal_timer0.c: 46:         (T0CONbits.TMR0ON = 1);
  8526   0044DC  8ED5               	bsf	213,7,c	;volatile
  8527   0044DE                     
  8528                           ;MCAL_layer/Timer0/hal_timer0.c: 48:         ret = (STD_ReturnType)0x01;
  8529   0044DE  0E01               	movlw	1
  8530   0044E0  0100               	movlb	0	; () banked
  8531   0044E2  6FDB               	movwf	Timer0_Init@ret& (0+255),b
  8532   0044E4                     l14496:
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;MCAL_layer/Timer0/hal_timer0.c: 50:     return ret;
  8536   0044E4  51DB               	movf	Timer0_Init@ret& (0+255),w,b
  8537   0044E6                     
  8538                           ; BSR set to: 0
  8539   0044E6  0012               	return		;funcret
  8540   0044E8                     __end_of_Timer0_Init:
  8541                           	callstack 0
  8542                           
  8543 ;; *************** function _Timer0_Write_Value *****************
  8544 ;; Defined at:
  8545 ;;		line 72 in file "MCAL_layer/Timer0/hal_timer0.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;  _timer0         2    0[BANK0 ] PTR const struct .
  8548 ;;		 -> timer0_1(7), 
  8549 ;;  _value          2    2[BANK0 ] unsigned short 
  8550 ;; Auto vars:     Size  Location     Type
  8551 ;;  ret             1    0        unsigned char 
  8552 ;; Return value:  Size  Location     Type
  8553 ;;                  1    wreg      unsigned char 
  8554 ;; Registers used:
  8555 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8556 ;; Tracked objects:
  8557 ;;		On entry : 0/0
  8558 ;;		On exit  : 0/0
  8559 ;;		Unchanged: 0/0
  8560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8561 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8564 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8565 ;;Total ram usage:        4 bytes
  8566 ;; Hardware stack levels used: 1
  8567 ;; Hardware stack levels required when called: 9
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_Timer0_Init
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           	psect	text6
  8576   004CF8                     __ptext6:
  8577                           	callstack 0
  8578   004CF8                     _Timer0_Write_Value:
  8579                           	callstack 20
  8580   004CF8                     
  8581                           ;MCAL_layer/Timer0/hal_timer0.c: 74:     if(((void*)0) == _timer0){
  8582   004CF8  0100               	movlb	0	; () banked
  8583   004CFA  51D5               	movf	Timer0_Write_Value@_timer0& (0+255),w,b
  8584   004CFC  11D6               	iorwf	(Timer0_Write_Value@_timer0+1)& (0+255),w,b
  8585   004CFE  A4D8               	btfss	status,2,c
  8586   004D00  EF84  F026         	goto	u12871
  8587   004D04  EF86  F026         	goto	u12870
  8588   004D08                     u12871:
  8589   004D08  EF88  F026         	goto	l14182
  8590   004D0C                     u12870:
  8591   004D0C                     
  8592                           ; BSR set to: 0
  8593                           ;MCAL_layer/Timer0/hal_timer0.c: 76:     }
  8594   004D0C  EFAA  F026         	goto	l1697
  8595   004D10                     l14182:
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;MCAL_layer/Timer0/hal_timer0.c: 78:         if(1 == _timer0->Timer0_registerSize){
  8599   004D10  EE20 F006          	lfsr	2,6
  8600   004D14  51D5               	movf	Timer0_Write_Value@_timer0& (0+255),w,b
  8601   004D16  26D9               	addwf	fsr2l,f,c
  8602   004D18  51D6               	movf	(Timer0_Write_Value@_timer0+1)& (0+255),w,b
  8603   004D1A  22DA               	addwfc	fsr2h,f,c
  8604   004D1C  A0DF               	btfss	indf2,0,c
  8605   004D1E  EF93  F026         	goto	u12881
  8606   004D22  EF95  F026         	goto	u12880
  8607   004D26                     u12881:
  8608   004D26  EF99  F026         	goto	l14186
  8609   004D2A                     u12880:
  8610   004D2A                     l14184:
  8611                           
  8612                           ; BSR set to: 0
  8613                           ;MCAL_layer/Timer0/hal_timer0.c: 79:             TMR0L = (uint8)(_value);
  8614   004D2A  C0D7  FFD6         	movff	Timer0_Write_Value@_value,4054	;volatile
  8615                           
  8616                           ;MCAL_layer/Timer0/hal_timer0.c: 80:         }
  8617   004D2E  EFAA  F026         	goto	l14192
  8618   004D32                     l14186:
  8619                           
  8620                           ; BSR set to: 0
  8621   004D32  EE20 F006          	lfsr	2,6
  8622   004D36  51D5               	movf	Timer0_Write_Value@_timer0& (0+255),w,b
  8623   004D38  26D9               	addwf	fsr2l,f,c
  8624   004D3A  51D6               	movf	(Timer0_Write_Value@_timer0+1)& (0+255),w,b
  8625   004D3C  22DA               	addwfc	fsr2h,f,c
  8626   004D3E  B0DF               	btfsc	indf2,0,c
  8627   004D40  EFA4  F026         	goto	u12891
  8628   004D44  EFA6  F026         	goto	u12890
  8629   004D48                     u12891:
  8630   004D48  EFAA  F026         	goto	l14192
  8631   004D4C                     u12890:
  8632   004D4C                     
  8633                           ; BSR set to: 0
  8634                           ;MCAL_layer/Timer0/hal_timer0.c: 82:             TMR0H = (uint8)(_value >> 8);
  8635   004D4C  51D8               	movf	(Timer0_Write_Value@_value+1)& (0+255),w,b
  8636   004D4E  6ED7               	movwf	215,c	;volatile
  8637   004D50  EF95  F026         	goto	l14184
  8638   004D54                     l14192:
  8639   004D54                     l1697:
  8640                           
  8641                           ; BSR set to: 0
  8642   004D54  0012               	return		;funcret
  8643   004D56                     __end_of_Timer0_Write_Value:
  8644                           	callstack 0
  8645                           
  8646 ;; *************** function _Timer0_Set_Resolution *****************
  8647 ;; Defined at:
  8648 ;;		line 122 in file "MCAL_layer/Timer0/hal_timer0.c"
  8649 ;; Parameters:    Size  Location     Type
  8650 ;;  _timer0         2    0[BANK0 ] PTR const struct .
  8651 ;;		 -> timer0_1(7), 
  8652 ;; Auto vars:     Size  Location     Type
  8653 ;;		None
  8654 ;; Return value:  Size  Location     Type
  8655 ;;                  1    wreg      void 
  8656 ;; Registers used:
  8657 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8658 ;; Tracked objects:
  8659 ;;		On entry : 0/0
  8660 ;;		On exit  : 0/0
  8661 ;;		Unchanged: 0/0
  8662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8663 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8666 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8667 ;;Total ram usage:        2 bytes
  8668 ;; Hardware stack levels used: 1
  8669 ;; Hardware stack levels required when called: 9
  8670 ;; This function calls:
  8671 ;;		Nothing
  8672 ;; This function is called by:
  8673 ;;		_Timer0_Init
  8674 ;; This function uses a non-reentrant model
  8675 ;;
  8676                           
  8677                           	psect	text7
  8678   00504E                     __ptext7:
  8679                           	callstack 0
  8680   00504E                     _Timer0_Set_Resolution:
  8681                           	callstack 20
  8682   00504E                     
  8683                           ;MCAL_layer/Timer0/hal_timer0.c: 123:     switch(_timer0->Timer0_registerSize){
  8684   00504E  EF2F  F028         	goto	l14162
  8685   005052                     l1712:
  8686                           
  8687                           ; BSR set to: 0
  8688   005052  8CD5               	bsf	213,6,c	;volatile
  8689   005054  EF49  F028         	goto	l1716
  8690   005058                     l1714:
  8691                           
  8692                           ; BSR set to: 0
  8693   005058  9CD5               	bcf	213,6,c	;volatile
  8694   00505A  EF49  F028         	goto	l1716
  8695   00505E                     l14162:
  8696   00505E  0100               	movlb	0	; () banked
  8697   005060  EE20 F006          	lfsr	2,6
  8698   005064  51D5               	movf	Timer0_Set_Resolution@_timer0& (0+255),w,b
  8699   005066  26D9               	addwf	fsr2l,f,c
  8700   005068  51D6               	movf	(Timer0_Set_Resolution@_timer0+1)& (0+255),w,b
  8701   00506A  22DA               	addwfc	fsr2h,f,c
  8702   00506C  B0DF               	btfsc	indf2,0,c
  8703   00506E  EF3B  F028         	goto	u12831
  8704   005072  EF3E  F028         	goto	u12830
  8705   005076                     u12831:
  8706   005076  0E01               	movlw	1
  8707   005078  EF3F  F028         	goto	u12836
  8708   00507C                     u12830:
  8709   00507C  0E00               	movlw	0
  8710   00507E                     u12836:
  8711                           
  8712                           ; Switch size 1, requested type "simple"
  8713                           ; Number of cases is 2, Range of values is 0 to 1
  8714                           ; switch strategies available:
  8715                           ; Name         Instructions Cycles
  8716                           ; simple_byte            7     4 (average)
  8717                           ;	Chosen strategy is simple_byte
  8718   00507E  0A00               	xorlw	0	; case 0
  8719   005080  B4D8               	btfsc	status,2,c
  8720   005082  EF2C  F028         	goto	l1714
  8721   005086  0A01               	xorlw	1	; case 1
  8722   005088  B4D8               	btfsc	status,2,c
  8723   00508A  EF29  F028         	goto	l1712
  8724   00508E  EF49  F028         	goto	l1716
  8725   005092                     l1716:
  8726                           
  8727                           ; BSR set to: 0
  8728   005092  0012               	return		;funcret
  8729   005094                     __end_of_Timer0_Set_Resolution:
  8730                           	callstack 0
  8731                           
  8732 ;; *************** function _Timer0_Set_Mode *****************
  8733 ;; Defined at:
  8734 ;;		line 131 in file "MCAL_layer/Timer0/hal_timer0.c"
  8735 ;; Parameters:    Size  Location     Type
  8736 ;;  _timer0         2    0[BANK0 ] PTR const struct .
  8737 ;;		 -> timer0_1(7), 
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;		None
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      void 
  8742 ;; Registers used:
  8743 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8749 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8752 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8753 ;;Total ram usage:        2 bytes
  8754 ;; Hardware stack levels used: 1
  8755 ;; Hardware stack levels required when called: 9
  8756 ;; This function calls:
  8757 ;;		Nothing
  8758 ;; This function is called by:
  8759 ;;		_Timer0_Init
  8760 ;; This function uses a non-reentrant model
  8761 ;;
  8762                           
  8763                           	psect	text8
  8764   0045FC                     __ptext8:
  8765                           	callstack 0
  8766   0045FC                     _Timer0_Set_Mode:
  8767                           	callstack 20
  8768   0045FC                     
  8769                           ;MCAL_layer/Timer0/hal_timer0.c: 132:     switch(_timer0->Timer0_mode){
  8770   0045FC  EF25  F023         	goto	l14168
  8771   004600                     l1720:
  8772                           
  8773                           ; BSR set to: 0
  8774   004600  9AD5               	bcf	213,5,c	;volatile
  8775   004602  EF3F  F023         	goto	l1729
  8776   004606                     l1722:
  8777                           
  8778                           ; BSR set to: 0
  8779                           ;MCAL_layer/Timer0/hal_timer0.c: 135:             (T0CONbits.T0CS = 1);
  8780   004606  8AD5               	bsf	213,5,c	;volatile
  8781                           
  8782                           ;MCAL_layer/Timer0/hal_timer0.c: 136:             switch(_timer0->Timer0_counterEdge){
  8783   004608  EF0C  F023         	goto	l14166
  8784   00460C                     l1724:
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;MCAL_layer/Timer0/hal_timer0.c: 138:                     (T0CONbits.T0SE = 1);break;
  8788   00460C  88D5               	bsf	213,4,c	;volatile
  8789   00460E  EF3F  F023         	goto	l1729
  8790   004612                     l1726:
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;MCAL_layer/Timer0/hal_timer0.c: 140:                     (T0CONbits.T0SE = 0);break;
  8794   004612  98D5               	bcf	213,4,c	;volatile
  8795   004614  EF3F  F023         	goto	l1729
  8796   004618                     l14166:
  8797                           
  8798                           ; BSR set to: 0
  8799   004618  EE20 F006          	lfsr	2,6
  8800   00461C  51D5               	movf	Timer0_Set_Mode@_timer0& (0+255),w,b
  8801   00461E  26D9               	addwf	fsr2l,f,c
  8802   004620  51D6               	movf	(Timer0_Set_Mode@_timer0+1)& (0+255),w,b
  8803   004622  22DA               	addwfc	fsr2h,f,c
  8804   004624  B4DF               	btfsc	indf2,2,c
  8805   004626  EF17  F023         	goto	u12841
  8806   00462A  EF1A  F023         	goto	u12840
  8807   00462E                     u12841:
  8808   00462E  0E01               	movlw	1
  8809   004630  EF1B  F023         	goto	u12846
  8810   004634                     u12840:
  8811   004634  0E00               	movlw	0
  8812   004636                     u12846:
  8813                           
  8814                           ; Switch size 1, requested type "simple"
  8815                           ; Number of cases is 2, Range of values is 0 to 1
  8816                           ; switch strategies available:
  8817                           ; Name         Instructions Cycles
  8818                           ; simple_byte            7     4 (average)
  8819                           ;	Chosen strategy is simple_byte
  8820   004636  0A00               	xorlw	0	; case 0
  8821   004638  B4D8               	btfsc	status,2,c
  8822   00463A  EF09  F023         	goto	l1726
  8823   00463E  0A01               	xorlw	1	; case 1
  8824   004640  B4D8               	btfsc	status,2,c
  8825   004642  EF06  F023         	goto	l1724
  8826   004646  EF3F  F023         	goto	l1729
  8827   00464A                     l14168:
  8828   00464A  0100               	movlb	0	; () banked
  8829   00464C  EE20 F006          	lfsr	2,6
  8830   004650  51D5               	movf	Timer0_Set_Mode@_timer0& (0+255),w,b
  8831   004652  26D9               	addwf	fsr2l,f,c
  8832   004654  51D6               	movf	(Timer0_Set_Mode@_timer0+1)& (0+255),w,b
  8833   004656  22DA               	addwfc	fsr2h,f,c
  8834   004658  B2DF               	btfsc	indf2,1,c
  8835   00465A  EF31  F023         	goto	u12851
  8836   00465E  EF34  F023         	goto	u12850
  8837   004662                     u12851:
  8838   004662  0E01               	movlw	1
  8839   004664  EF35  F023         	goto	u12856
  8840   004668                     u12850:
  8841   004668  0E00               	movlw	0
  8842   00466A                     u12856:
  8843                           
  8844                           ; Switch size 1, requested type "simple"
  8845                           ; Number of cases is 2, Range of values is 0 to 1
  8846                           ; switch strategies available:
  8847                           ; Name         Instructions Cycles
  8848                           ; simple_byte            7     4 (average)
  8849                           ;	Chosen strategy is simple_byte
  8850   00466A  0A00               	xorlw	0	; case 0
  8851   00466C  B4D8               	btfsc	status,2,c
  8852   00466E  EF00  F023         	goto	l1720
  8853   004672  0A01               	xorlw	1	; case 1
  8854   004674  B4D8               	btfsc	status,2,c
  8855   004676  EF03  F023         	goto	l1722
  8856   00467A  EF3F  F023         	goto	l1729
  8857   00467E                     l1729:
  8858                           
  8859                           ; BSR set to: 0
  8860   00467E  0012               	return		;funcret
  8861   004680                     __end_of_Timer0_Set_Mode:
  8862                           	callstack 0
  8863                           
  8864 ;; *************** function _Timer0_Prescaler_Config *****************
  8865 ;; Defined at:
  8866 ;;		line 147 in file "MCAL_layer/Timer0/hal_timer0.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;  _timer0         2    0[BANK0 ] PTR const struct .
  8869 ;;		 -> timer0_1(7), 
  8870 ;; Auto vars:     Size  Location     Type
  8871 ;;		None
  8872 ;; Return value:  Size  Location     Type
  8873 ;;                  1    wreg      void 
  8874 ;; Registers used:
  8875 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8876 ;; Tracked objects:
  8877 ;;		On entry : 0/0
  8878 ;;		On exit  : 0/0
  8879 ;;		Unchanged: 0/0
  8880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8881 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8883 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8884 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8885 ;;Total ram usage:        3 bytes
  8886 ;; Hardware stack levels used: 1
  8887 ;; Hardware stack levels required when called: 9
  8888 ;; This function calls:
  8889 ;;		Nothing
  8890 ;; This function is called by:
  8891 ;;		_Timer0_Init
  8892 ;; This function uses a non-reentrant model
  8893 ;;
  8894                           
  8895                           	psect	text9
  8896   004C98                     __ptext9:
  8897                           	callstack 0
  8898   004C98                     _Timer0_Prescaler_Config:
  8899                           	callstack 20
  8900   004C98                     
  8901                           ;MCAL_layer/Timer0/hal_timer0.c: 149:     switch(_timer0->Timer0_prescalerConfig){
  8902   004C98  EF61  F026         	goto	l14174
  8903   004C9C                     l1733:
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;MCAL_layer/Timer0/hal_timer0.c: 151:             (T0CONbits.PSA = 0);
  8907   004C9C  96D5               	bcf	213,3,c	;volatile
  8908   004C9E                     
  8909                           ; BSR set to: 0
  8910                           ;MCAL_layer/Timer0/hal_timer0.c: 152:             T0CONbits.T0PS = _timer0->Timer0_Presc
      +                          aler_Value;
  8911   004C9E  EE20 F003          	lfsr	2,3
  8912   004CA2  51D5               	movf	Timer0_Prescaler_Config@_timer0& (0+255),w,b
  8913   004CA4  26D9               	addwf	fsr2l,f,c
  8914   004CA6  51D6               	movf	(Timer0_Prescaler_Config@_timer0+1)& (0+255),w,b
  8915   004CA8  22DA               	addwfc	fsr2h,f,c
  8916   004CAA  50DF               	movf	indf2,w,c
  8917   004CAC  6FD7               	movwf	??_Timer0_Prescaler_Config& (0+255),b
  8918   004CAE  50D5               	movf	213,w,c	;volatile
  8919   004CB0  19D7               	xorwf	??_Timer0_Prescaler_Config& (0+255),w,b
  8920   004CB2  0BF8               	andlw	-8
  8921   004CB4  19D7               	xorwf	??_Timer0_Prescaler_Config& (0+255),w,b
  8922   004CB6  6ED5               	movwf	213,c	;volatile
  8923                           
  8924                           ;MCAL_layer/Timer0/hal_timer0.c: 153:             break;
  8925   004CB8  EF7B  F026         	goto	l1737
  8926   004CBC                     l1735:
  8927                           
  8928                           ; BSR set to: 0
  8929   004CBC  86D5               	bsf	213,3,c	;volatile
  8930   004CBE  EF7B  F026         	goto	l1737
  8931   004CC2                     l14174:
  8932   004CC2  0100               	movlb	0	; () banked
  8933   004CC4  EE20 F006          	lfsr	2,6
  8934   004CC8  51D5               	movf	Timer0_Prescaler_Config@_timer0& (0+255),w,b
  8935   004CCA  26D9               	addwf	fsr2l,f,c
  8936   004CCC  51D6               	movf	(Timer0_Prescaler_Config@_timer0+1)& (0+255),w,b
  8937   004CCE  22DA               	addwfc	fsr2h,f,c
  8938   004CD0  B6DF               	btfsc	indf2,3,c
  8939   004CD2  EF6D  F026         	goto	u12861
  8940   004CD6  EF70  F026         	goto	u12860
  8941   004CDA                     u12861:
  8942   004CDA  0E01               	movlw	1
  8943   004CDC  EF71  F026         	goto	u12866
  8944   004CE0                     u12860:
  8945   004CE0  0E00               	movlw	0
  8946   004CE2                     u12866:
  8947                           
  8948                           ; Switch size 1, requested type "simple"
  8949                           ; Number of cases is 2, Range of values is 0 to 1
  8950                           ; switch strategies available:
  8951                           ; Name         Instructions Cycles
  8952                           ; simple_byte            7     4 (average)
  8953                           ;	Chosen strategy is simple_byte
  8954   004CE2  0A00               	xorlw	0	; case 0
  8955   004CE4  B4D8               	btfsc	status,2,c
  8956   004CE6  EF4E  F026         	goto	l1733
  8957   004CEA  0A01               	xorlw	1	; case 1
  8958   004CEC  B4D8               	btfsc	status,2,c
  8959   004CEE  EF5E  F026         	goto	l1735
  8960   004CF2  EF7B  F026         	goto	l1737
  8961   004CF6                     l1737:
  8962                           
  8963                           ; BSR set to: 0
  8964   004CF6  0012               	return		;funcret
  8965   004CF8                     __end_of_Timer0_Prescaler_Config:
  8966                           	callstack 0
  8967                           
  8968 ;; *************** function _Timer0_Interrupt_Configuration *****************
  8969 ;; Defined at:
  8970 ;;		line 162 in file "MCAL_layer/Timer0/hal_timer0.c"
  8971 ;; Parameters:    Size  Location     Type
  8972 ;;  _timer0         2    0[BANK0 ] PTR const struct .
  8973 ;;		 -> timer0_1(7), 
  8974 ;; Auto vars:     Size  Location     Type
  8975 ;;		None
  8976 ;; Return value:  Size  Location     Type
  8977 ;;                  1    wreg      void 
  8978 ;; Registers used:
  8979 ;;		fsr2l, fsr2h
  8980 ;; Tracked objects:
  8981 ;;		On entry : 0/0
  8982 ;;		On exit  : 0/0
  8983 ;;		Unchanged: 0/0
  8984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8985 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8988 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8989 ;;Total ram usage:        2 bytes
  8990 ;; Hardware stack levels used: 1
  8991 ;; Hardware stack levels required when called: 9
  8992 ;; This function calls:
  8993 ;;		Nothing
  8994 ;; This function is called by:
  8995 ;;		_Timer0_Init
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           	psect	text10
  9000   0053D0                     __ptext10:
  9001                           	callstack 0
  9002   0053D0                     _Timer0_Interrupt_Configuration:
  9003                           	callstack 20
  9004   0053D0                     
  9005                           ;MCAL_layer/Timer0/hal_timer0.c: 164:         (INTCONbits.TMR0IE = 0);
  9006   0053D0  9AF2               	bcf	242,5,c	;volatile
  9007                           
  9008                           ;MCAL_layer/Timer0/hal_timer0.c: 166:         (INTCONbits.TMR0IF = 0);
  9009   0053D2  94F2               	bcf	242,2,c	;volatile
  9010                           
  9011                           ;MCAL_layer/Timer0/hal_timer0.c: 190:         (INTCONbits.GIE = 1);
  9012   0053D4  8EF2               	bsf	242,7,c	;volatile
  9013                           
  9014                           ;MCAL_layer/Timer0/hal_timer0.c: 192:         (INTCONbits.PEIE = 1);
  9015   0053D6  8CF2               	bsf	242,6,c	;volatile
  9016   0053D8                     
  9017                           ;MCAL_layer/Timer0/hal_timer0.c: 194:         Timer0_InterruptHandler = _timer0->TIMER0_
      +                          InterruptHandler;
  9018   0053D8  C0D5  FFD9         	movff	Timer0_Interrupt_Configuration@_timer0,fsr2l
  9019   0053DC  C0D6  FFDA         	movff	Timer0_Interrupt_Configuration@_timer0+1,fsr2h
  9020   0053E0  CFDE F09D          	movff	postinc2,_Timer0_InterruptHandler
  9021   0053E4  CFDD F09E          	movff	postdec2,_Timer0_InterruptHandler+1
  9022   0053E8                     
  9023                           ;MCAL_layer/Timer0/hal_timer0.c: 196:         (INTCONbits.TMR0IE = 1);
  9024   0053E8  8AF2               	bsf	242,5,c	;volatile
  9025   0053EA  0012               	return		;funcret
  9026   0053EC                     __end_of_Timer0_Interrupt_Configuration:
  9027                           	callstack 0
  9028                           
  9029 ;; *************** function _Timer0_Deinit *****************
  9030 ;; Defined at:
  9031 ;;		line 54 in file "MCAL_layer/Timer0/hal_timer0.c"
  9032 ;; Parameters:    Size  Location     Type
  9033 ;;  _timer0         2    0[BANK0 ] PTR const struct .
  9034 ;;		 -> timer0_1(7), 
  9035 ;; Auto vars:     Size  Location     Type
  9036 ;;  ret             1    2[BANK0 ] unsigned char 
  9037 ;; Return value:  Size  Location     Type
  9038 ;;                  1    wreg      unsigned char 
  9039 ;; Registers used:
  9040 ;;		wreg, status,2, status,0
  9041 ;; Tracked objects:
  9042 ;;		On entry : 0/0
  9043 ;;		On exit  : 0/0
  9044 ;;		Unchanged: 0/0
  9045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9046 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9047 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9049 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;Total ram usage:        3 bytes
  9051 ;; Hardware stack levels used: 1
  9052 ;; Hardware stack levels required when called: 9
  9053 ;; This function calls:
  9054 ;;		Nothing
  9055 ;; This function is called by:
  9056 ;;		_main
  9057 ;; This function uses a non-reentrant model
  9058 ;;
  9059                           
  9060                           	psect	text11
  9061   005304                     __ptext11:
  9062                           	callstack 0
  9063   005304                     _Timer0_Deinit:
  9064                           	callstack 21
  9065   005304                     
  9066                           ;MCAL_layer/Timer0/hal_timer0.c: 56:     if(((void*)0) == _timer0){
  9067   005304  0100               	movlb	0	; () banked
  9068   005306  51D5               	movf	Timer0_Deinit@_timer0& (0+255),w,b
  9069   005308  11D6               	iorwf	(Timer0_Deinit@_timer0+1)& (0+255),w,b
  9070   00530A  A4D8               	btfss	status,2,c
  9071   00530C  EF8A  F029         	goto	u13111
  9072   005310  EF8C  F029         	goto	u13110
  9073   005314                     u13111:
  9074   005314  EF8F  F029         	goto	l1686
  9075   005318                     u13110:
  9076   005318                     
  9077                           ; BSR set to: 0
  9078                           ;MCAL_layer/Timer0/hal_timer0.c: 57:         ret = (STD_ReturnType)0x00;
  9079   005318  6BD7               	clrf	Timer0_Deinit@ret& (0+255),b
  9080                           
  9081                           ;MCAL_layer/Timer0/hal_timer0.c: 58:     }
  9082   00531A  EF93  F029         	goto	l1687
  9083   00531E                     l1686:
  9084                           
  9085                           ; BSR set to: 0
  9086                           ;MCAL_layer/Timer0/hal_timer0.c: 61:         (T0CONbits.TMR0ON = 0);
  9087   00531E  9ED5               	bcf	213,7,c	;volatile
  9088                           
  9089                           ;MCAL_layer/Timer0/hal_timer0.c: 63:        (INTCONbits.TMR0IE = 0);
  9090   005320  9AF2               	bcf	242,5,c	;volatile
  9091   005322                     
  9092                           ; BSR set to: 0
  9093                           ;MCAL_layer/Timer0/hal_timer0.c: 66:         ret = (STD_ReturnType)0x01;
  9094   005322  0E01               	movlw	1
  9095   005324  6FD7               	movwf	Timer0_Deinit@ret& (0+255),b
  9096   005326                     l1687:
  9097                           
  9098                           ; BSR set to: 0
  9099                           ;MCAL_layer/Timer0/hal_timer0.c: 68:     return ret;
  9100   005326  51D7               	movf	Timer0_Deinit@ret& (0+255),w,b
  9101   005328                     
  9102                           ; BSR set to: 0
  9103   005328  0012               	return		;funcret
  9104   00532A                     __end_of_Timer0_Deinit:
  9105                           	callstack 0
  9106                           
  9107 ;; *************** function _SYSTEM_Initialize *****************
  9108 ;; Defined at:
  9109 ;;		line 50 in file "mcc_generated_files/mcc.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;		None
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  1    wreg      void 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9127 ;;Total ram usage:        0 bytes
  9128 ;; Hardware stack levels used: 1
  9129 ;; Hardware stack levels required when called: 10
  9130 ;; This function calls:
  9131 ;;		_I2C_Initialize
  9132 ;;		_OSCILLATOR_Initialize
  9133 ;;		_PIN_MANAGER_Initialize
  9134 ;; This function is called by:
  9135 ;;		_main
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           	psect	text12
  9140   00552C                     __ptext12:
  9141                           	callstack 0
  9142   00552C                     _SYSTEM_Initialize:
  9143                           	callstack 20
  9144   00552C                     
  9145                           ;mcc_generated_files/mcc.c: 53:     I2C_Initialize();
  9146   00552C  EC7D  F02A         	call	_I2C_Initialize	;wreg free
  9147                           
  9148                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  9149   005530  ECA8  F029         	call	_PIN_MANAGER_Initialize	;wreg free
  9150                           
  9151                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  9152   005534  ECCD  F02A         	call	_OSCILLATOR_Initialize	;wreg free
  9153   005538  0012               	return		;funcret
  9154   00553A                     __end_of_SYSTEM_Initialize:
  9155                           	callstack 0
  9156                           
  9157 ;; *************** function _PIN_MANAGER_Initialize *****************
  9158 ;; Defined at:
  9159 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  9160 ;; Parameters:    Size  Location     Type
  9161 ;;		None
  9162 ;; Auto vars:     Size  Location     Type
  9163 ;;		None
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  1    wreg      void 
  9166 ;; Registers used:
  9167 ;;		wreg, status,2
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9177 ;;Total ram usage:        0 bytes
  9178 ;; Hardware stack levels used: 1
  9179 ;; Hardware stack levels required when called: 9
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		_SYSTEM_Initialize
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187                           	psect	text13
  9188   005350                     __ptext13:
  9189                           	callstack 0
  9190   005350                     _PIN_MANAGER_Initialize:
  9191                           	callstack 20
  9192   005350                     
  9193                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
  9194   005350  6A8D               	clrf	141,c	;volatile
  9195                           
  9196                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
  9197   005352  6A8C               	clrf	140,c	;volatile
  9198                           
  9199                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  9200   005354  6A89               	clrf	137,c	;volatile
  9201                           
  9202                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  9203   005356  6A8A               	clrf	138,c	;volatile
  9204                           
  9205                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  9206   005358  6A8B               	clrf	139,c	;volatile
  9207   00535A                     
  9208                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
  9209   00535A  0E07               	movlw	7
  9210   00535C  6E96               	movwf	150,c	;volatile
  9211   00535E                     
  9212                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
  9213   00535E  6892               	setf	146,c	;volatile
  9214   005360                     
  9215                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  9216   005360  6893               	setf	147,c	;volatile
  9217   005362                     
  9218                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xFF;
  9219   005362  6894               	setf	148,c	;volatile
  9220   005364                     
  9221                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
  9222   005364  6895               	setf	149,c	;volatile
  9223   005366                     
  9224                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
  9225   005366  687E               	setf	126,c	;volatile
  9226                           
  9227                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
  9228   005368  0E1F               	movlw	31
  9229   00536A  6E7F               	movwf	127,c	;volatile
  9230   00536C                     
  9231                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  9232   00536C  6A7C               	clrf	124,c	;volatile
  9233   00536E                     
  9234                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  9235   00536E  8EF1               	bsf	241,7,c	;volatile
  9236   005370  0012               	return		;funcret
  9237   005372                     __end_of_PIN_MANAGER_Initialize:
  9238                           	callstack 0
  9239                           
  9240 ;; *************** function _OSCILLATOR_Initialize *****************
  9241 ;; Defined at:
  9242 ;;		line 58 in file "mcc_generated_files/mcc.c"
  9243 ;; Parameters:    Size  Location     Type
  9244 ;;		None
  9245 ;; Auto vars:     Size  Location     Type
  9246 ;;		None
  9247 ;; Return value:  Size  Location     Type
  9248 ;;                  1    wreg      void 
  9249 ;; Registers used:
  9250 ;;		wreg, status,2
  9251 ;; Tracked objects:
  9252 ;;		On entry : 0/0
  9253 ;;		On exit  : 0/0
  9254 ;;		Unchanged: 0/0
  9255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9260 ;;Total ram usage:        0 bytes
  9261 ;; Hardware stack levels used: 1
  9262 ;; Hardware stack levels required when called: 9
  9263 ;; This function calls:
  9264 ;;		Nothing
  9265 ;; This function is called by:
  9266 ;;		_SYSTEM_Initialize
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           	psect	text14
  9271   00559A                     __ptext14:
  9272                           	callstack 0
  9273   00559A                     _OSCILLATOR_Initialize:
  9274                           	callstack 20
  9275   00559A                     
  9276                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x30;
  9277   00559A  0E30               	movlw	48
  9278   00559C  6ED3               	movwf	211,c	;volatile
  9279   00559E                     
  9280                           ;mcc_generated_files/mcc.c: 63:     OSCTUNE = 0x00;
  9281   00559E  6A9B               	clrf	155,c	;volatile
  9282   0055A0  0012               	return		;funcret
  9283   0055A2                     __end_of_OSCILLATOR_Initialize:
  9284                           	callstack 0
  9285                           
  9286 ;; *************** function _I2C_Initialize *****************
  9287 ;; Defined at:
  9288 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;		None
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;		None
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  1    wreg      void 
  9295 ;; Registers used:
  9296 ;;		wreg, status,2
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/0
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9306 ;;Total ram usage:        0 bytes
  9307 ;; Hardware stack levels used: 1
  9308 ;; Hardware stack levels required when called: 9
  9309 ;; This function calls:
  9310 ;;		Nothing
  9311 ;; This function is called by:
  9312 ;;		_SYSTEM_Initialize
  9313 ;; This function uses a non-reentrant model
  9314 ;;
  9315                           
  9316                           	psect	text15
  9317   0054FA                     __ptext15:
  9318                           	callstack 0
  9319   0054FA                     _I2C_Initialize:
  9320                           	callstack 20
  9321   0054FA                     
  9322                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x80;
  9323   0054FA  0E80               	movlw	128
  9324   0054FC  6EC7               	movwf	199,c	;volatile
  9325                           
  9326                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
  9327   0054FE  0E08               	movlw	8
  9328   005500  6EC6               	movwf	198,c	;volatile
  9329   005502                     
  9330                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
  9331   005502  6AC5               	clrf	197,c	;volatile
  9332                           
  9333                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
  9334   005504  0E13               	movlw	19
  9335   005506  6EC8               	movwf	200,c	;volatile
  9336   005508                     
  9337                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
  9338   005508  9AC6               	bcf	198,5,c	;volatile
  9339   00550A  0012               	return		;funcret
  9340   00550C                     __end_of_I2C_Initialize:
  9341                           	callstack 0
  9342                           
  9343 ;; *************** function _REALTIMECLOCK_DS1307_print_Data *****************
  9344 ;; Defined at:
  9345 ;;		line 37 in file "ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c"
  9346 ;; Parameters:    Size  Location     Type
  9347 ;;		None
  9348 ;; Auto vars:     Size  Location     Type
  9349 ;;  ret             1    0        unsigned char 
  9350 ;; Return value:  Size  Location     Type
  9351 ;;                  2   26[BANK1 ] PTR unsigned char 
  9352 ;; Registers used:
  9353 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9354 ;; Tracked objects:
  9355 ;;		On entry : 0/0
  9356 ;;		On exit  : 0/0
  9357 ;;		Unchanged: 0/0
  9358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9359 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9362 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9363 ;;Total ram usage:        2 bytes
  9364 ;; Hardware stack levels used: 1
  9365 ;; Hardware stack levels required when called: 13
  9366 ;; This function calls:
  9367 ;;		_EUSART_ASYNC_Init
  9368 ;;		_EUSART_ASYNC_WriteStringBlocking
  9369 ;; This function is called by:
  9370 ;;		_main
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text16
  9375   00384E                     __ptext16:
  9376                           	callstack 0
  9377   00384E                     _REALTIMECLOCK_DS1307_print_Data:
  9378                           	callstack 17
  9379   00384E                     
  9380                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 38:     STD_ReturnType ret;;ECU_
      +                          layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 39:     REALTIMECLOCK_DS1307_Data[0] 
      +                          = ((REALTIMECLOCK_DS1307.days >> 4) + 0x30);
  9381   00384E  0100               	movlb	0	; () banked
  9382   003850  3986               	swapf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+3)& (0+255),w,b
  9383   003852  0B0F               	andlw	15
  9384   003854  0F30               	addlw	48
  9385   003856  0101               	movlb	1	; () banked
  9386   003858  6F53               	movwf	_REALTIMECLOCK_DS1307_Data& (0+255),b
  9387                           
  9388                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 40:     REALTIMECLOCK_DS1307_Dat
      +                          a[1] = ((REALTIMECLOCK_DS1307.days & 0x0F) + 0x30);
  9389   00385A  0100               	movlb	0	; () banked
  9390   00385C  5186               	movf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+3)& (0+255),w,b
  9391   00385E  0B0F               	andlw	15
  9392   003860  0F30               	addlw	48
  9393   003862  0101               	movlb	1	; () banked
  9394   003864  6F54               	movwf	(_REALTIMECLOCK_DS1307_Data+1)& (0+255),b
  9395   003866                     
  9396                           ; BSR set to: 1
  9397                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 41:     REALTIMECLOCK_DS1307_Dat
      +                          a[2] = '/';
  9398   003866  0E2F               	movlw	47
  9399   003868  6F55               	movwf	(_REALTIMECLOCK_DS1307_Data+2)& (0+255),b
  9400   00386A                     
  9401                           ; BSR set to: 1
  9402                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 42:     REALTIMECLOCK_DS1307_Dat
      +                          a[3] = ((REALTIMECLOCK_DS1307.months >> 4) + 0x30);
  9403   00386A  0100               	movlb	0	; () banked
  9404   00386C  3987               	swapf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+4)& (0+255),w,b
  9405   00386E  0B0F               	andlw	15
  9406   003870  0F30               	addlw	48
  9407   003872  0101               	movlb	1	; () banked
  9408   003874  6F56               	movwf	(_REALTIMECLOCK_DS1307_Data+3)& (0+255),b
  9409   003876                     
  9410                           ; BSR set to: 1
  9411                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 43:     REALTIMECLOCK_DS1307_Dat
      +                          a[4] = ((REALTIMECLOCK_DS1307.months & 0x0F) + 0x30);
  9412   003876  0100               	movlb	0	; () banked
  9413   003878  5187               	movf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+4)& (0+255),w,b
  9414   00387A  0B0F               	andlw	15
  9415   00387C  0F30               	addlw	48
  9416   00387E  0101               	movlb	1	; () banked
  9417   003880  6F57               	movwf	(_REALTIMECLOCK_DS1307_Data+4)& (0+255),b
  9418   003882                     
  9419                           ; BSR set to: 1
  9420                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 44:     REALTIMECLOCK_DS1307_Dat
      +                          a[5] = '/';
  9421   003882  0E2F               	movlw	47
  9422   003884  6F58               	movwf	(_REALTIMECLOCK_DS1307_Data+5)& (0+255),b
  9423                           
  9424                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 45:     REALTIMECLOCK_DS1307_Dat
      +                          a[6] = ((REALTIMECLOCK_DS1307.years >> 4) + 0x30);
  9425   003886  0100               	movlb	0	; () banked
  9426   003888  3988               	swapf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+5)& (0+255),w,b
  9427   00388A  0B0F               	andlw	15
  9428   00388C  0F30               	addlw	48
  9429   00388E  0101               	movlb	1	; () banked
  9430   003890  6F59               	movwf	(_REALTIMECLOCK_DS1307_Data+6)& (0+255),b
  9431                           
  9432                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 46:     REALTIMECLOCK_DS1307_Dat
      +                          a[7] = ((REALTIMECLOCK_DS1307.years & 0x0F) + 0x30);
  9433   003892  0100               	movlb	0	; () banked
  9434   003894  5188               	movf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+5)& (0+255),w,b
  9435   003896  0B0F               	andlw	15
  9436   003898  0F30               	addlw	48
  9437   00389A  0101               	movlb	1	; () banked
  9438   00389C  6F5A               	movwf	(_REALTIMECLOCK_DS1307_Data+7)& (0+255),b
  9439   00389E                     
  9440                           ; BSR set to: 1
  9441                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 47:     REALTIMECLOCK_DS1307_Dat
      +                          a[8] = '-';
  9442   00389E  0E2D               	movlw	45
  9443   0038A0  6F5B               	movwf	(_REALTIMECLOCK_DS1307_Data+8)& (0+255),b
  9444   0038A2                     
  9445                           ; BSR set to: 1
  9446                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 48:     REALTIMECLOCK_DS1307_Dat
      +                          a[9] = ((REALTIMECLOCK_DS1307.hours >> 4) + 0x30);
  9447   0038A2  0100               	movlb	0	; () banked
  9448   0038A4  3985               	swapf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+2)& (0+255),w,b
  9449   0038A6  0B0F               	andlw	15
  9450   0038A8  0F30               	addlw	48
  9451   0038AA  0101               	movlb	1	; () banked
  9452   0038AC  6F5C               	movwf	(_REALTIMECLOCK_DS1307_Data+9)& (0+255),b
  9453   0038AE                     
  9454                           ; BSR set to: 1
  9455                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 49:     REALTIMECLOCK_DS1307_Dat
      +                          a[10] = ((REALTIMECLOCK_DS1307.hours & 0x0F) + 0x30);
  9456   0038AE  0100               	movlb	0	; () banked
  9457   0038B0  5185               	movf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+2)& (0+255),w,b
  9458   0038B2  0B0F               	andlw	15
  9459   0038B4  0F30               	addlw	48
  9460   0038B6  0101               	movlb	1	; () banked
  9461   0038B8  6F5D               	movwf	(_REALTIMECLOCK_DS1307_Data+10)& (0+255),b
  9462   0038BA                     
  9463                           ; BSR set to: 1
  9464                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 50:     REALTIMECLOCK_DS1307_Dat
      +                          a[11] = ':';
  9465   0038BA  0E3A               	movlw	58
  9466   0038BC  6F5E               	movwf	(_REALTIMECLOCK_DS1307_Data+11)& (0+255),b
  9467                           
  9468                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 51:     REALTIMECLOCK_DS1307_Dat
      +                          a[12] = ((REALTIMECLOCK_DS1307.minutes >> 4) + 0x30);
  9469   0038BE  0100               	movlb	0	; () banked
  9470   0038C0  3984               	swapf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+1)& (0+255),w,b
  9471   0038C2  0B0F               	andlw	15
  9472   0038C4  0F30               	addlw	48
  9473   0038C6  0101               	movlb	1	; () banked
  9474   0038C8  6F5F               	movwf	(_REALTIMECLOCK_DS1307_Data+12)& (0+255),b
  9475                           
  9476                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 52:     REALTIMECLOCK_DS1307_Dat
      +                          a[13] = ((REALTIMECLOCK_DS1307.minutes & 0x0F) + 0x30);
  9477   0038CA  0100               	movlb	0	; () banked
  9478   0038CC  5184               	movf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+1)& (0+255),w,b
  9479   0038CE  0B0F               	andlw	15
  9480   0038D0  0F30               	addlw	48
  9481   0038D2  0101               	movlb	1	; () banked
  9482   0038D4  6F60               	movwf	(_REALTIMECLOCK_DS1307_Data+13)& (0+255),b
  9483   0038D6                     
  9484                           ; BSR set to: 1
  9485                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 53:     REALTIMECLOCK_DS1307_Dat
      +                          a[14] = ':';
  9486   0038D6  0E3A               	movlw	58
  9487   0038D8  6F61               	movwf	(_REALTIMECLOCK_DS1307_Data+14)& (0+255),b
  9488   0038DA                     
  9489                           ; BSR set to: 1
  9490                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 54:     REALTIMECLOCK_DS1307_Dat
      +                          a[15] = ((REALTIMECLOCK_DS1307.seconds >> 4) + 0x30);
  9491   0038DA  0100               	movlb	0	; () banked
  9492   0038DC  3983               	swapf	_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604& (0+255),w,b
  9493   0038DE  0B0F               	andlw	15
  9494   0038E0  0F30               	addlw	48
  9495   0038E2  0101               	movlb	1	; () banked
  9496   0038E4  6F62               	movwf	(_REALTIMECLOCK_DS1307_Data+15)& (0+255),b
  9497   0038E6                     
  9498                           ; BSR set to: 1
  9499                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 55:     REALTIMECLOCK_DS1307_Dat
      +                          a[16] = ((REALTIMECLOCK_DS1307.seconds & 0x0F) + 0x30);
  9500   0038E6  0100               	movlb	0	; () banked
  9501   0038E8  5183               	movf	_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604& (0+255),w,b
  9502   0038EA  0B0F               	andlw	15
  9503   0038EC  0F30               	addlw	48
  9504   0038EE  0101               	movlb	1	; () banked
  9505   0038F0  6F63               	movwf	(_REALTIMECLOCK_DS1307_Data+16)& (0+255),b
  9506   0038F2                     
  9507                           ; BSR set to: 1
  9508                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 56:     REALTIMECLOCK_DS1307_Dat
      +                          a[17] = '\r';
  9509   0038F2  0E0D               	movlw	13
  9510   0038F4  6F64               	movwf	(_REALTIMECLOCK_DS1307_Data+17)& (0+255),b
  9511   0038F6                     
  9512                           ; BSR set to: 1
  9513                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 58:     EUSART_ASYNC_Init(&UART_
      +                          obj);
  9514   0038F6  0E1F               	movlw	low _UART_obj
  9515   0038F8  6F88               	movwf	EUSART_ASYNC_Init@_EUSART& (0+255),b
  9516   0038FA  0E01               	movlw	high _UART_obj
  9517   0038FC  6F89               	movwf	(EUSART_ASYNC_Init@_EUSART+1)& (0+255),b
  9518   0038FE  EC4A  F028         	call	_EUSART_ASYNC_Init	;wreg free
  9519   003902  0E46               	movlw	low STR_4
  9520   003904  0100               	movlb	0	; () banked
  9521   003906  6FD6               	movwf	EUSART_ASYNC_WriteStringBlocking@_Byte& (0+255),b
  9522   003908  51D6               	movf	EUSART_ASYNC_WriteStringBlocking@_Byte& (0+255),w,b
  9523   00390A  A4D8               	btfss	status,2,c
  9524   00390C  0E10               	movlw	high __smallconst
  9525   00390E  6FD7               	movwf	(EUSART_ASYNC_WriteStringBlocking@_Byte+1)& (0+255),b
  9526   003910  0E00               	movlw	0
  9527   003912  6FD9               	movwf	(EUSART_ASYNC_WriteStringBlocking@str_len+1)& (0+255),b
  9528   003914  0E06               	movlw	6
  9529   003916  6FD8               	movwf	EUSART_ASYNC_WriteStringBlocking@str_len& (0+255),b
  9530   003918  EC7F  F023         	call	_EUSART_ASYNC_WriteStringBlocking	;wreg free
  9531   00391C  0E53               	movlw	low _REALTIMECLOCK_DS1307_Data
  9532   00391E  0100               	movlb	0	; () banked
  9533   003920  6FD6               	movwf	EUSART_ASYNC_WriteStringBlocking@_Byte& (0+255),b
  9534   003922  0E01               	movlw	high _REALTIMECLOCK_DS1307_Data
  9535   003924  6FD7               	movwf	(EUSART_ASYNC_WriteStringBlocking@_Byte+1)& (0+255),b
  9536   003926  0E00               	movlw	0
  9537   003928  6FD9               	movwf	(EUSART_ASYNC_WriteStringBlocking@str_len+1)& (0+255),b
  9538   00392A  0E12               	movlw	18
  9539   00392C  6FD8               	movwf	EUSART_ASYNC_WriteStringBlocking@str_len& (0+255),b
  9540   00392E  EC7F  F023         	call	_EUSART_ASYNC_WriteStringBlocking	;wreg free
  9541   003932                     
  9542                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 62:     return REALTIMECLOCK_DS1
      +                          307_Data;
  9543   003932  0E53               	movlw	low _REALTIMECLOCK_DS1307_Data
  9544   003934  0101               	movlb	1	; () banked
  9545   003936  6F8A               	movwf	?_REALTIMECLOCK_DS1307_print_Data& (0+255),b
  9546   003938  0E01               	movlw	high _REALTIMECLOCK_DS1307_Data
  9547   00393A  6F8B               	movwf	(?_REALTIMECLOCK_DS1307_print_Data+1)& (0+255),b
  9548   00393C                     
  9549                           ; BSR set to: 1
  9550   00393C  0012               	return		;funcret
  9551   00393E                     __end_of_REALTIMECLOCK_DS1307_print_Data:
  9552                           	callstack 0
  9553                           
  9554 ;; *************** function _EUSART_ASYNC_WriteStringBlocking *****************
  9555 ;; Defined at:
  9556 ;;		line 112 in file "MCAL_layer/USART/hal_usart.c"
  9557 ;; Parameters:    Size  Location     Type
  9558 ;;  _Byte           2    1[BANK0 ] PTR unsigned char 
  9559 ;;		 -> STR_4(7), REALTIMECLOCK_DS1307_Data(18), 
  9560 ;;  str_len         2    3[BANK0 ] unsigned short 
  9561 ;; Auto vars:     Size  Location     Type
  9562 ;;  char_counter    2    8[BANK0 ] unsigned short 
  9563 ;;  ret             1    7[BANK0 ] unsigned char 
  9564 ;; Return value:  Size  Location     Type
  9565 ;;                  1    wreg      unsigned char 
  9566 ;; Registers used:
  9567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9568 ;; Tracked objects:
  9569 ;;		On entry : 0/0
  9570 ;;		On exit  : 0/0
  9571 ;;		Unchanged: 0/0
  9572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9573 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9574 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9575 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9576 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9577 ;;Total ram usage:        9 bytes
  9578 ;; Hardware stack levels used: 1
  9579 ;; Hardware stack levels required when called: 10
  9580 ;; This function calls:
  9581 ;;		_EUSART_ASYNC_WriteByteBlocking
  9582 ;; This function is called by:
  9583 ;;		_REALTIMECLOCK_DS1307_print_Data
  9584 ;; This function uses a non-reentrant model
  9585 ;;
  9586                           
  9587                           	psect	text17
  9588   0046FE                     __ptext17:
  9589                           	callstack 0
  9590   0046FE                     _EUSART_ASYNC_WriteStringBlocking:
  9591                           	callstack 19
  9592   0046FE                     
  9593                           ;MCAL_layer/USART/hal_usart.c: 115:     if(((void*)0) == _Byte){
  9594   0046FE  0100               	movlb	0	; () banked
  9595   004700  51D6               	movf	EUSART_ASYNC_WriteStringBlocking@_Byte& (0+255),w,b
  9596   004702  11D7               	iorwf	(EUSART_ASYNC_WriteStringBlocking@_Byte+1)& (0+255),w,b
  9597   004704  A4D8               	btfss	status,2,c
  9598   004706  EF87  F023         	goto	u12781
  9599   00470A  EF89  F023         	goto	u12780
  9600   00470E                     u12781:
  9601   00470E  EF8C  F023         	goto	l14098
  9602   004712                     u12780:
  9603   004712                     
  9604                           ; BSR set to: 0
  9605                           ;MCAL_layer/USART/hal_usart.c: 116:         ret = (STD_ReturnType)0x00;
  9606   004712  6BDC               	clrf	EUSART_ASYNC_WriteStringBlocking@ret& (0+255),b
  9607                           
  9608                           ;MCAL_layer/USART/hal_usart.c: 117:     }
  9609   004714  EFBB  F023         	goto	l2023
  9610   004718                     l14098:
  9611                           
  9612                           ; BSR set to: 0
  9613                           ;MCAL_layer/USART/hal_usart.c: 119:         for(char_counter = 0;char_counter<str_len;ch
      +                          ar_counter++){
  9614   004718  0E00               	movlw	0
  9615   00471A  6FDE               	movwf	(EUSART_ASYNC_WriteStringBlocking@char_counter+1)& (0+255),b
  9616   00471C  0E00               	movlw	0
  9617   00471E  6FDD               	movwf	EUSART_ASYNC_WriteStringBlocking@char_counter& (0+255),b
  9618   004720  EFAE  F023         	goto	l14104
  9619   004724                     l14100:
  9620                           
  9621                           ; BSR set to: 0
  9622   004724  51DD               	movf	EUSART_ASYNC_WriteStringBlocking@char_counter& (0+255),w,b
  9623   004726  25D6               	addwf	EUSART_ASYNC_WriteStringBlocking@_Byte& (0+255),w,b
  9624   004728  6FDA               	movwf	??_EUSART_ASYNC_WriteStringBlocking& (0+255),b
  9625   00472A  51DE               	movf	(EUSART_ASYNC_WriteStringBlocking@char_counter+1)& (0+255),w,b
  9626   00472C  21D7               	addwfc	(EUSART_ASYNC_WriteStringBlocking@_Byte+1)& (0+255),w,b
  9627   00472E  6FDB               	movwf	(??_EUSART_ASYNC_WriteStringBlocking+1)& (0+255),b
  9628   004730  C0DA  FFF6         	movff	??_EUSART_ASYNC_WriteStringBlocking,tblptrl
  9629   004734  C0DB  FFF7         	movff	??_EUSART_ASYNC_WriteStringBlocking+1,tblptrh
  9630   004738  0E00               	movlw	low (__smallconst shr (0+16))
  9631   00473A  6EF8               	movwf	tblptru,c
  9632   00473C  0E0F               	movlw	(high __ramtop+-1)
  9633   00473E  64F7               	cpfsgt	tblptrh,c
  9634   004740  D003               	bra	u12797
  9635   004742  0008               	tblrd		*
  9636   004744  50F5               	movf	tablat,w,c
  9637   004746  D005               	bra	u12790
  9638   004748                     u12797:
  9639   004748  CFF6 FFE9          	movff	tblptrl,fsr0l
  9640   00474C  CFF7 FFEA          	movff	tblptrh,fsr0h
  9641   004750  50EF               	movf	indf0,w,c
  9642   004752                     u12790:
  9643   004752  EC12  F02A         	call	_EUSART_ASYNC_WriteByteBlocking
  9644   004756                     
  9645                           ;MCAL_layer/USART/hal_usart.c: 121:         }
  9646   004756  0100               	movlb	0	; () banked
  9647   004758  4BDD               	infsnz	EUSART_ASYNC_WriteStringBlocking@char_counter& (0+255),f,b
  9648   00475A  2BDE               	incf	(EUSART_ASYNC_WriteStringBlocking@char_counter+1)& (0+255),f,b
  9649   00475C                     l14104:
  9650                           
  9651                           ; BSR set to: 0
  9652   00475C  51D8               	movf	EUSART_ASYNC_WriteStringBlocking@str_len& (0+255),w,b
  9653   00475E  5DDD               	subwf	EUSART_ASYNC_WriteStringBlocking@char_counter& (0+255),w,b
  9654   004760  51D9               	movf	(EUSART_ASYNC_WriteStringBlocking@str_len+1)& (0+255),w,b
  9655   004762  59DE               	subwfb	(EUSART_ASYNC_WriteStringBlocking@char_counter+1)& (0+255),w,b
  9656   004764  A0D8               	btfss	status,0,c
  9657   004766  EFB7  F023         	goto	u12801
  9658   00476A  EFB9  F023         	goto	u12800
  9659   00476E                     u12801:
  9660   00476E  EF92  F023         	goto	l14100
  9661   004772                     u12800:
  9662   004772                     
  9663                           ; BSR set to: 0
  9664                           ;MCAL_layer/USART/hal_usart.c: 123:         ret = (STD_ReturnType)0x01;
  9665   004772  0E01               	movlw	1
  9666   004774  6FDC               	movwf	EUSART_ASYNC_WriteStringBlocking@ret& (0+255),b
  9667   004776                     l2023:
  9668                           
  9669                           ; BSR set to: 0
  9670                           ;MCAL_layer/USART/hal_usart.c: 125:     return ret;
  9671   004776  51DC               	movf	EUSART_ASYNC_WriteStringBlocking@ret& (0+255),w,b
  9672   004778                     
  9673                           ; BSR set to: 0
  9674   004778  0012               	return		;funcret
  9675   00477A                     __end_of_EUSART_ASYNC_WriteStringBlocking:
  9676                           	callstack 0
  9677                           
  9678 ;; *************** function _EUSART_ASYNC_WriteByteBlocking *****************
  9679 ;; Defined at:
  9680 ;;		line 101 in file "MCAL_layer/USART/hal_usart.c"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;  _Byte           1    wreg     unsigned char 
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;  _Byte           1    0[BANK0 ] unsigned char 
  9685 ;;  ret             1    0        unsigned char 
  9686 ;; Return value:  Size  Location     Type
  9687 ;;                  1    wreg      unsigned char 
  9688 ;; Registers used:
  9689 ;;		wreg, status,2
  9690 ;; Tracked objects:
  9691 ;;		On entry : 0/0
  9692 ;;		On exit  : 0/0
  9693 ;;		Unchanged: 0/0
  9694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9696 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9698 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9699 ;;Total ram usage:        1 bytes
  9700 ;; Hardware stack levels used: 1
  9701 ;; Hardware stack levels required when called: 9
  9702 ;; This function calls:
  9703 ;;		Nothing
  9704 ;; This function is called by:
  9705 ;;		_EUSART_ASYNC_WriteStringBlocking
  9706 ;; This function uses a non-reentrant model
  9707 ;;
  9708                           
  9709                           	psect	text18
  9710   005424                     __ptext18:
  9711                           	callstack 0
  9712   005424                     _EUSART_ASYNC_WriteByteBlocking:
  9713                           	callstack 19
  9714                           
  9715                           ; BSR set to: 0
  9716                           ;incstack = 0
  9717                           ;EUSART_ASYNC_WriteByteBlocking@_Byte stored from wreg
  9718   005424  0100               	movlb	0	; () banked
  9719   005426  6FD5               	movwf	EUSART_ASYNC_WriteByteBlocking@_Byte& (0+255),b
  9720   005428                     l2016:
  9721   005428  A2AC               	btfss	172,1,c	;volatile
  9722   00542A  EF19  F02A         	goto	u12581
  9723   00542E  EF1B  F02A         	goto	u12580
  9724   005432                     u12581:
  9725   005432  EF14  F02A         	goto	l2016
  9726   005436                     u12580:
  9727   005436                     
  9728                           ;MCAL_layer/USART/hal_usart.c: 106:     (PIE1bits.TXIE = 1);
  9729   005436  889D               	bsf	157,4,c	;volatile
  9730   005438                     
  9731                           ;MCAL_layer/USART/hal_usart.c: 108:     TXREG = _Byte;
  9732   005438  C0D5  FFAD         	movff	EUSART_ASYNC_WriteByteBlocking@_Byte,4013	;volatile
  9733   00543C  0012               	return		;funcret
  9734   00543E                     __end_of_EUSART_ASYNC_WriteByteBlocking:
  9735                           	callstack 0
  9736                           
  9737 ;; *************** function _EUSART_ASYNC_Init *****************
  9738 ;; Defined at:
  9739 ;;		line 28 in file "MCAL_layer/USART/hal_usart.c"
  9740 ;; Parameters:    Size  Location     Type
  9741 ;;  _EUSART         2   24[BANK1 ] PTR const struct .
  9742 ;;		 -> UART_obj(17), 
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;  ret             1    0        unsigned char 
  9745 ;; Return value:  Size  Location     Type
  9746 ;;                  1    wreg      unsigned char 
  9747 ;; Registers used:
  9748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9749 ;; Tracked objects:
  9750 ;;		On entry : 0/0
  9751 ;;		On exit  : 0/0
  9752 ;;		Unchanged: 0/0
  9753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9754 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9757 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9758 ;;Total ram usage:        2 bytes
  9759 ;; Hardware stack levels used: 1
  9760 ;; Hardware stack levels required when called: 12
  9761 ;; This function calls:
  9762 ;;		_EUSART_BaudRateCalculation
  9763 ;;		_EUSART_RX_Init
  9764 ;;		_EUSART_TX_Init
  9765 ;;		_PinsConfig@hal_usart$F4659
  9766 ;; This function is called by:
  9767 ;;		_REALTIMECLOCK_DS1307_print_Data
  9768 ;; This function uses a non-reentrant model
  9769 ;;
  9770                           
  9771                           	psect	text19
  9772   005094                     __ptext19:
  9773                           	callstack 0
  9774   005094                     _EUSART_ASYNC_Init:
  9775                           	callstack 17
  9776   005094                     
  9777                           ;MCAL_layer/USART/hal_usart.c: 30:     if(((void*)0) == _EUSART){
  9778   005094  0101               	movlb	1	; () banked
  9779   005096  5188               	movf	EUSART_ASYNC_Init@_EUSART& (0+255),w,b
  9780   005098  1189               	iorwf	(EUSART_ASYNC_Init@_EUSART+1)& (0+255),w,b
  9781   00509A  A4D8               	btfss	status,2,c
  9782   00509C  EF52  F028         	goto	u12771
  9783   0050A0  EF54  F028         	goto	u12770
  9784   0050A4                     u12771:
  9785   0050A4  EF56  F028         	goto	l1989
  9786   0050A8                     u12770:
  9787   0050A8                     
  9788                           ; BSR set to: 1
  9789                           ;MCAL_layer/USART/hal_usart.c: 32:     }
  9790   0050A8  EF6C  F028         	goto	l1991
  9791   0050AC                     l1989:
  9792                           
  9793                           ; BSR set to: 1
  9794                           ;MCAL_layer/USART/hal_usart.c: 35:         (RCSTAbits.SPEN = 0);
  9795   0050AC  9EAB               	bcf	171,7,c	;volatile
  9796   0050AE                     
  9797                           ; BSR set to: 1
  9798                           ;MCAL_layer/USART/hal_usart.c: 37:         PinsConfig();
  9799   0050AE  EC90  F028         	call	_PinsConfig@hal_usart$F4659	;wreg free
  9800                           
  9801                           ;MCAL_layer/USART/hal_usart.c: 39:         EUSART_BaudRateCalculation(_EUSART);
  9802   0050B2  C188  F17C         	movff	EUSART_ASYNC_Init@_EUSART,EUSART_BaudRateCalculation@_EUSART
  9803   0050B6  C189  F17D         	movff	EUSART_ASYNC_Init@_EUSART+1,EUSART_BaudRateCalculation@_EUSART+1
  9804   0050BA  EC0D  F00D         	call	_EUSART_BaudRateCalculation	;wreg free
  9805                           
  9806                           ;MCAL_layer/USART/hal_usart.c: 41:         EUSART_TX_Init(_EUSART);
  9807   0050BE  C188  F0D5         	movff	EUSART_ASYNC_Init@_EUSART,EUSART_TX_Init@_EUSART
  9808   0050C2  C189  F0D6         	movff	EUSART_ASYNC_Init@_EUSART+1,EUSART_TX_Init@_EUSART+1
  9809   0050C6  ECFD  F01E         	call	_EUSART_TX_Init	;wreg free
  9810                           
  9811                           ;MCAL_layer/USART/hal_usart.c: 43:         EUSART_RX_Init(_EUSART);
  9812   0050CA  C188  F0D5         	movff	EUSART_ASYNC_Init@_EUSART,EUSART_RX_Init@_EUSART
  9813   0050CE  C189  F0D6         	movff	EUSART_ASYNC_Init@_EUSART+1,EUSART_RX_Init@_EUSART+1
  9814   0050D2  EC9F  F01C         	call	_EUSART_RX_Init	;wreg free
  9815   0050D6                     
  9816                           ;MCAL_layer/USART/hal_usart.c: 45:         (RCSTAbits.SPEN = 1);
  9817   0050D6  8EAB               	bsf	171,7,c	;volatile
  9818   0050D8                     l1991:
  9819   0050D8  0012               	return		;funcret
  9820   0050DA                     __end_of_EUSART_ASYNC_Init:
  9821                           	callstack 0
  9822                           
  9823 ;; *************** function _PinsConfig@hal_usart$F4659 *****************
  9824 ;; Defined at:
  9825 ;;		line 159 in file "MCAL_layer/USART/hal_usart.c"
  9826 ;; Parameters:    Size  Location     Type
  9827 ;;		None
  9828 ;; Auto vars:     Size  Location     Type
  9829 ;;  ret             1   10[BANK0 ] unsigned char 
  9830 ;; Return value:  Size  Location     Type
  9831 ;;                  1    wreg      void 
  9832 ;; Registers used:
  9833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9834 ;; Tracked objects:
  9835 ;;		On entry : 0/0
  9836 ;;		On exit  : 0/0
  9837 ;;		Unchanged: 0/0
  9838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9840 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9842 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9843 ;;Total ram usage:        1 bytes
  9844 ;; Hardware stack levels used: 1
  9845 ;; Hardware stack levels required when called: 11
  9846 ;; This function calls:
  9847 ;;		_gpio_pin_initialize
  9848 ;; This function is called by:
  9849 ;;		_EUSART_ASYNC_Init
  9850 ;; This function uses a non-reentrant model
  9851 ;;
  9852                           
  9853                           	psect	text20
  9854   005120                     __ptext20:
  9855                           	callstack 0
  9856   005120                     _PinsConfig@hal_usart$F4659:
  9857                           	callstack 17
  9858   005120                     
  9859                           ;MCAL_layer/USART/hal_usart.c: 162:     pinRC6.port = portC;
  9860   005120  0100               	movlb	0	; () banked
  9861   005122  51D4               	movf	_pinRC6& (0+255),w,b
  9862   005124  0BF8               	andlw	-8
  9863   005126  0902               	iorlw	2
  9864   005128  6FD4               	movwf	_pinRC6& (0+255),b
  9865                           
  9866                           ;MCAL_layer/USART/hal_usart.c: 163:     pinRC6.pin = pin6;
  9867   00512A  51D4               	movf	_pinRC6& (0+255),w,b
  9868   00512C  0BC7               	andlw	-57
  9869   00512E  0930               	iorlw	48
  9870   005130  6FD4               	movwf	_pinRC6& (0+255),b
  9871   005132                     
  9872                           ; BSR set to: 0
  9873                           ;MCAL_layer/USART/hal_usart.c: 164:     pinRC6.direction = GPIO_Pin_Direction_INPUT;
  9874   005132  8DD4               	bsf	_pinRC6& (0+255),6,b
  9875   005134                     
  9876                           ; BSR set to: 0
  9877                           ;MCAL_layer/USART/hal_usart.c: 165:     pinRC6.logic = GPIO_Pin_Logic_LOW;
  9878   005134  9FD4               	bcf	_pinRC6& (0+255),7,b
  9879   005136                     
  9880                           ; BSR set to: 0
  9881                           ;MCAL_layer/USART/hal_usart.c: 166:     ret = gpio_pin_initialize(&pinRC6);
  9882   005136  0ED4               	movlw	low _pinRC6
  9883   005138  6FDB               	movwf	gpio_pin_initialize@pinConfig& (0+255),b
  9884   00513A  6BDC               	clrf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
  9885   00513C  ECE8  F025         	call	_gpio_pin_initialize	;wreg free
  9886   005140  0100               	movlb	0	; () banked
  9887   005142  6FDF               	movwf	PinsConfig@hal_usart$F4659@ret& (0+255),b
  9888   005144                     
  9889                           ; BSR set to: 0
  9890                           ;MCAL_layer/USART/hal_usart.c: 168:     pinRC7.port = portC;
  9891   005144  51D3               	movf	_pinRC7& (0+255),w,b
  9892   005146  0BF8               	andlw	-8
  9893   005148  0902               	iorlw	2
  9894   00514A  6FD3               	movwf	_pinRC7& (0+255),b
  9895   00514C                     
  9896                           ; BSR set to: 0
  9897                           ;MCAL_layer/USART/hal_usart.c: 169:     pinRC7.pin = pin7;
  9898   00514C  0E38               	movlw	56
  9899   00514E  13D3               	iorwf	_pinRC7& (0+255),f,b
  9900   005150                     
  9901                           ; BSR set to: 0
  9902                           ;MCAL_layer/USART/hal_usart.c: 170:     pinRC7.direction = GPIO_Pin_Direction_INPUT;
  9903   005150  8DD3               	bsf	_pinRC7& (0+255),6,b
  9904   005152                     
  9905                           ; BSR set to: 0
  9906                           ;MCAL_layer/USART/hal_usart.c: 171:     pinRC7.logic = GPIO_Pin_Logic_LOW;
  9907   005152  9FD3               	bcf	_pinRC7& (0+255),7,b
  9908   005154                     
  9909                           ; BSR set to: 0
  9910                           ;MCAL_layer/USART/hal_usart.c: 172:     ret |= gpio_pin_initialize(&pinRC7);
  9911   005154  0ED3               	movlw	low _pinRC7
  9912   005156  6FDB               	movwf	gpio_pin_initialize@pinConfig& (0+255),b
  9913   005158  6BDC               	clrf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
  9914   00515A  ECE8  F025         	call	_gpio_pin_initialize	;wreg free
  9915   00515E  0100               	movlb	0	; () banked
  9916   005160  13DF               	iorwf	PinsConfig@hal_usart$F4659@ret& (0+255),f,b
  9917   005162                     
  9918                           ; BSR set to: 0
  9919   005162  0012               	return		;funcret
  9920   005164                     __end_of_PinsConfig@hal_usart$F4659:
  9921                           	callstack 0
  9922                           
  9923 ;; *************** function _EUSART_TX_Init *****************
  9924 ;; Defined at:
  9925 ;;		line 220 in file "MCAL_layer/USART/hal_usart.c"
  9926 ;; Parameters:    Size  Location     Type
  9927 ;;  _EUSART         2    0[BANK0 ] PTR const struct .
  9928 ;;		 -> UART_obj(17), 
  9929 ;; Auto vars:     Size  Location     Type
  9930 ;;		None
  9931 ;; Return value:  Size  Location     Type
  9932 ;;                  1    wreg      void 
  9933 ;; Registers used:
  9934 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9935 ;; Tracked objects:
  9936 ;;		On entry : 0/0
  9937 ;;		On exit  : 0/0
  9938 ;;		Unchanged: 0/0
  9939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9940 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9943 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9944 ;;Total ram usage:        2 bytes
  9945 ;; Hardware stack levels used: 1
  9946 ;; Hardware stack levels required when called: 9
  9947 ;; This function calls:
  9948 ;;		Nothing
  9949 ;; This function is called by:
  9950 ;;		_EUSART_ASYNC_Init
  9951 ;; This function uses a non-reentrant model
  9952 ;;
  9953                           
  9954                           	psect	text21
  9955   003DFA                     __ptext21:
  9956                           	callstack 0
  9957   003DFA                     _EUSART_TX_Init:
  9958                           	callstack 19
  9959   003DFA                     
  9960                           ;MCAL_layer/USART/hal_usart.c: 221:     if(_EUSART->TX_Config.Transmit_Enable){
  9961   003DFA  0100               	movlb	0	; () banked
  9962   003DFC  EE20 F006          	lfsr	2,6
  9963   003E00  51D5               	movf	EUSART_TX_Init@_EUSART& (0+255),w,b
  9964   003E02  26D9               	addwf	fsr2l,f,c
  9965   003E04  51D6               	movf	(EUSART_TX_Init@_EUSART+1)& (0+255),w,b
  9966   003E06  22DA               	addwfc	fsr2h,f,c
  9967   003E08  A0DF               	btfss	indf2,0,c
  9968   003E0A  EF09  F01F         	goto	u12481
  9969   003E0E  EF0B  F01F         	goto	u12480
  9970   003E12                     u12481:
  9971   003E12  EF57  F01F         	goto	l2068
  9972   003E16                     u12480:
  9973   003E16                     
  9974                           ; BSR set to: 0
  9975                           ;MCAL_layer/USART/hal_usart.c: 223:         (TXSTAbits.TXEN = 1);
  9976   003E16  8AAC               	bsf	172,5,c	;volatile
  9977   003E18                     
  9978                           ; BSR set to: 0
  9979                           ;MCAL_layer/USART/hal_usart.c: 224:         if(_EUSART->TX_Config.Transmit_Interrupt_Ena
      +                          ble){
  9980   003E18  EE20 F006          	lfsr	2,6
  9981   003E1C  51D5               	movf	EUSART_TX_Init@_EUSART& (0+255),w,b
  9982   003E1E  26D9               	addwf	fsr2l,f,c
  9983   003E20  51D6               	movf	(EUSART_TX_Init@_EUSART+1)& (0+255),w,b
  9984   003E22  22DA               	addwfc	fsr2h,f,c
  9985   003E24  A2DF               	btfss	indf2,1,c
  9986   003E26  EF17  F01F         	goto	u12491
  9987   003E2A  EF19  F01F         	goto	u12490
  9988   003E2E                     u12491:
  9989   003E2E  EF29  F01F         	goto	l13936
  9990   003E32                     u12490:
  9991   003E32                     
  9992                           ; BSR set to: 0
  9993                           ;MCAL_layer/USART/hal_usart.c: 226:             (PIE1bits.TXIE = 0);
  9994   003E32  989D               	bcf	157,4,c	;volatile
  9995                           
  9996                           ;MCAL_layer/USART/hal_usart.c: 250:             (INTCONbits.GIE = 1);
  9997   003E34  8EF2               	bsf	242,7,c	;volatile
  9998                           
  9999                           ;MCAL_layer/USART/hal_usart.c: 252:             (INTCONbits.PEIE = 1);
 10000   003E36  8CF2               	bsf	242,6,c	;volatile
 10001   003E38                     
 10002                           ; BSR set to: 0
 10003                           ;MCAL_layer/USART/hal_usart.c: 254:             USART_TX_InterruptHandler = _EUSART->EUS
      +                          ART_TX_InterruptHandler;
 10004   003E38  EE20 F009          	lfsr	2,9
 10005   003E3C  51D5               	movf	EUSART_TX_Init@_EUSART& (0+255),w,b
 10006   003E3E  26D9               	addwf	fsr2l,f,c
 10007   003E40  51D6               	movf	(EUSART_TX_Init@_EUSART+1)& (0+255),w,b
 10008   003E42  22DA               	addwfc	fsr2h,f,c
 10009   003E44  CFDE F08F          	movff	postinc2,_USART_TX_InterruptHandler
 10010   003E48  CFDD F090          	movff	postdec2,_USART_TX_InterruptHandler+1
 10011   003E4C                     
 10012                           ; BSR set to: 0
 10013                           ;MCAL_layer/USART/hal_usart.c: 256:             (PIE1bits.TXIE = 1);
 10014   003E4C  889D               	bsf	157,4,c	;volatile
 10015                           
 10016                           ;MCAL_layer/USART/hal_usart.c: 258:         }
 10017   003E4E  EF37  F01F         	goto	l13940
 10018   003E52                     l13936:
 10019                           
 10020                           ; BSR set to: 0
 10021   003E52  EE20 F006          	lfsr	2,6
 10022   003E56  51D5               	movf	EUSART_TX_Init@_EUSART& (0+255),w,b
 10023   003E58  26D9               	addwf	fsr2l,f,c
 10024   003E5A  51D6               	movf	(EUSART_TX_Init@_EUSART+1)& (0+255),w,b
 10025   003E5C  22DA               	addwfc	fsr2h,f,c
 10026   003E5E  B2DF               	btfsc	indf2,1,c
 10027   003E60  EF34  F01F         	goto	u12501
 10028   003E64  EF36  F01F         	goto	u12500
 10029   003E68                     u12501:
 10030   003E68  EF37  F01F         	goto	l13940
 10031   003E6C                     u12500:
 10032   003E6C                     
 10033                           ; BSR set to: 0
 10034                           ;MCAL_layer/USART/hal_usart.c: 261:             (PIE1bits.TXIE = 0);
 10035   003E6C  989D               	bcf	157,4,c	;volatile
 10036   003E6E                     l13940:
 10037                           
 10038                           ; BSR set to: 0
 10039                           ;MCAL_layer/USART/hal_usart.c: 267:         if(_EUSART->TX_Config.Transmit_TX9_Enable){
 10040   003E6E  EE20 F006          	lfsr	2,6
 10041   003E72  51D5               	movf	EUSART_TX_Init@_EUSART& (0+255),w,b
 10042   003E74  26D9               	addwf	fsr2l,f,c
 10043   003E76  51D6               	movf	(EUSART_TX_Init@_EUSART+1)& (0+255),w,b
 10044   003E78  22DA               	addwfc	fsr2h,f,c
 10045   003E7A  A4DF               	btfss	indf2,2,c
 10046   003E7C  EF42  F01F         	goto	u12511
 10047   003E80  EF44  F01F         	goto	u12510
 10048   003E84                     u12511:
 10049   003E84  EF47  F01F         	goto	l13944
 10050   003E88                     u12510:
 10051   003E88                     
 10052                           ; BSR set to: 0
 10053                           ;MCAL_layer/USART/hal_usart.c: 268:             (TXSTAbits.TX9 = 1);
 10054   003E88  8CAC               	bsf	172,6,c	;volatile
 10055                           
 10056                           ;MCAL_layer/USART/hal_usart.c: 269:         }
 10057   003E8A  EF57  F01F         	goto	l2068
 10058   003E8E                     l13944:
 10059                           
 10060                           ; BSR set to: 0
 10061   003E8E  EE20 F006          	lfsr	2,6
 10062   003E92  51D5               	movf	EUSART_TX_Init@_EUSART& (0+255),w,b
 10063   003E94  26D9               	addwf	fsr2l,f,c
 10064   003E96  51D6               	movf	(EUSART_TX_Init@_EUSART+1)& (0+255),w,b
 10065   003E98  22DA               	addwfc	fsr2h,f,c
 10066   003E9A  B4DF               	btfsc	indf2,2,c
 10067   003E9C  EF52  F01F         	goto	u12521
 10068   003EA0  EF54  F01F         	goto	u12520
 10069   003EA4                     u12521:
 10070   003EA4  EF57  F01F         	goto	l2064
 10071   003EA8                     u12520:
 10072   003EA8                     
 10073                           ; BSR set to: 0
 10074                           ;MCAL_layer/USART/hal_usart.c: 271:             (TXSTAbits.TX9 = 0);
 10075   003EA8  9CAC               	bcf	172,6,c	;volatile
 10076                           
 10077                           ;MCAL_layer/USART/hal_usart.c: 272:         }
 10078   003EAA  EF57  F01F         	goto	l2068
 10079   003EAE                     l2064:
 10080   003EAE                     l2068:
 10081                           
 10082                           ; BSR set to: 0
 10083   003EAE  0012               	return		;funcret
 10084   003EB0                     __end_of_EUSART_TX_Init:
 10085                           	callstack 0
 10086                           
 10087 ;; *************** function _EUSART_RX_Init *****************
 10088 ;; Defined at:
 10089 ;;		line 281 in file "MCAL_layer/USART/hal_usart.c"
 10090 ;; Parameters:    Size  Location     Type
 10091 ;;  _EUSART         2    0[BANK0 ] PTR const struct .
 10092 ;;		 -> UART_obj(17), 
 10093 ;; Auto vars:     Size  Location     Type
 10094 ;;		None
 10095 ;; Return value:  Size  Location     Type
 10096 ;;                  1    wreg      void 
 10097 ;; Registers used:
 10098 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10099 ;; Tracked objects:
 10100 ;;		On entry : 0/0
 10101 ;;		On exit  : 0/0
 10102 ;;		Unchanged: 0/0
 10103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10104 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10107 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10108 ;;Total ram usage:        2 bytes
 10109 ;; Hardware stack levels used: 1
 10110 ;; Hardware stack levels required when called: 9
 10111 ;; This function calls:
 10112 ;;		Nothing
 10113 ;; This function is called by:
 10114 ;;		_EUSART_ASYNC_Init
 10115 ;; This function uses a non-reentrant model
 10116 ;;
 10117                           
 10118                           	psect	text22
 10119   00393E                     __ptext22:
 10120                           	callstack 0
 10121   00393E                     _EUSART_RX_Init:
 10122                           	callstack 19
 10123   00393E                     
 10124                           ;MCAL_layer/USART/hal_usart.c: 282:     if(_EUSART->RX_Config.Receive_Enable){
 10125   00393E  0100               	movlb	0	; () banked
 10126   003940  EE20 F008          	lfsr	2,8
 10127   003944  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
 10128   003946  26D9               	addwf	fsr2l,f,c
 10129   003948  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
 10130   00394A  22DA               	addwfc	fsr2h,f,c
 10131   00394C  A0DF               	btfss	indf2,0,c
 10132   00394E  EFAB  F01C         	goto	u12531
 10133   003952  EFAD  F01C         	goto	u12530
 10134   003956                     u12531:
 10135   003956  EF0D  F01D         	goto	l2081
 10136   00395A                     u12530:
 10137   00395A                     
 10138                           ; BSR set to: 0
 10139                           ;MCAL_layer/USART/hal_usart.c: 283:         (RCSTAbits.CREN = 1);
 10140   00395A  88AB               	bsf	171,4,c	;volatile
 10141   00395C                     
 10142                           ; BSR set to: 0
 10143                           ;MCAL_layer/USART/hal_usart.c: 284:         if(_EUSART->RX_Config.Receive_Interrupt_Enab
      +                          le){
 10144   00395C  EE20 F008          	lfsr	2,8
 10145   003960  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
 10146   003962  26D9               	addwf	fsr2l,f,c
 10147   003964  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
 10148   003966  22DA               	addwfc	fsr2h,f,c
 10149   003968  A2DF               	btfss	indf2,1,c
 10150   00396A  EFB9  F01C         	goto	u12541
 10151   00396E  EFBB  F01C         	goto	u12540
 10152   003972                     u12541:
 10153   003972  EFDF  F01C         	goto	l13960
 10154   003976                     u12540:
 10155   003976                     
 10156                           ; BSR set to: 0
 10157                           ;MCAL_layer/USART/hal_usart.c: 286:             (PIE1bits.RCIE = 0);
 10158   003976  9A9D               	bcf	157,5,c	;volatile
 10159                           
 10160                           ;MCAL_layer/USART/hal_usart.c: 312:             (INTCONbits.GIE = 1);
 10161   003978  8EF2               	bsf	242,7,c	;volatile
 10162                           
 10163                           ;MCAL_layer/USART/hal_usart.c: 314:             (INTCONbits.PEIE = 1);
 10164   00397A  8CF2               	bsf	242,6,c	;volatile
 10165   00397C                     
 10166                           ; BSR set to: 0
 10167                           ;MCAL_layer/USART/hal_usart.c: 316:             USART_RX_InterruptHandler = _EUSART->EUS
      +                          ART_RX_InterruptHandler;
 10168   00397C  EE20 F00B          	lfsr	2,11
 10169   003980  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
 10170   003982  26D9               	addwf	fsr2l,f,c
 10171   003984  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
 10172   003986  22DA               	addwfc	fsr2h,f,c
 10173   003988  CFDE F08D          	movff	postinc2,_USART_RX_InterruptHandler
 10174   00398C  CFDD F08E          	movff	postdec2,_USART_RX_InterruptHandler+1
 10175                           
 10176                           ;MCAL_layer/USART/hal_usart.c: 317:             USART_FRE_InterruptHandler = _EUSART->EU
      +                          SART_FramingErrorInterruptHandler;
 10177   003990  EE20 F00D          	lfsr	2,13
 10178   003994  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
 10179   003996  26D9               	addwf	fsr2l,f,c
 10180   003998  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
 10181   00399A  22DA               	addwfc	fsr2h,f,c
 10182   00399C  CFDE F08B          	movff	postinc2,_USART_FRE_InterruptHandler
 10183   0039A0  CFDD F08C          	movff	postdec2,_USART_FRE_InterruptHandler+1
 10184                           
 10185                           ;MCAL_layer/USART/hal_usart.c: 318:             USART_OVRR_InterruptHandler = _EUSART->E
      +                          USART_OverrunErrorInterruptHandler;
 10186   0039A4  EE20 F00F          	lfsr	2,15
 10187   0039A8  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
 10188   0039AA  26D9               	addwf	fsr2l,f,c
 10189   0039AC  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
 10190   0039AE  22DA               	addwfc	fsr2h,f,c
 10191   0039B0  CFDE F089          	movff	postinc2,_USART_OVRR_InterruptHandler
 10192   0039B4  CFDD F08A          	movff	postdec2,_USART_OVRR_InterruptHandler+1
 10193   0039B8                     
 10194                           ; BSR set to: 0
 10195                           ;MCAL_layer/USART/hal_usart.c: 320:             (PIE1bits.RCIE = 1);
 10196   0039B8  8A9D               	bsf	157,5,c	;volatile
 10197                           
 10198                           ;MCAL_layer/USART/hal_usart.c: 322:         }
 10199   0039BA  EFED  F01C         	goto	l13964
 10200   0039BE                     l13960:
 10201                           
 10202                           ; BSR set to: 0
 10203   0039BE  EE20 F008          	lfsr	2,8
 10204   0039C2  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
 10205   0039C4  26D9               	addwf	fsr2l,f,c
 10206   0039C6  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
 10207   0039C8  22DA               	addwfc	fsr2h,f,c
 10208   0039CA  B2DF               	btfsc	indf2,1,c
 10209   0039CC  EFEA  F01C         	goto	u12551
 10210   0039D0  EFEC  F01C         	goto	u12550
 10211   0039D4                     u12551:
 10212   0039D4  EFED  F01C         	goto	l13964
 10213   0039D8                     u12550:
 10214   0039D8                     
 10215                           ; BSR set to: 0
 10216                           ;MCAL_layer/USART/hal_usart.c: 325:             (PIE1bits.RCIE = 0);
 10217   0039D8  9A9D               	bcf	157,5,c	;volatile
 10218   0039DA                     l13964:
 10219                           
 10220                           ; BSR set to: 0
 10221                           ;MCAL_layer/USART/hal_usart.c: 331:         if(_EUSART->RX_Config.Receive_RX9_Enable){
 10222   0039DA  EE20 F008          	lfsr	2,8
 10223   0039DE  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
 10224   0039E0  26D9               	addwf	fsr2l,f,c
 10225   0039E2  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
 10226   0039E4  22DA               	addwfc	fsr2h,f,c
 10227   0039E6  A4DF               	btfss	indf2,2,c
 10228   0039E8  EFF8  F01C         	goto	u12561
 10229   0039EC  EFFA  F01C         	goto	u12560
 10230   0039F0                     u12561:
 10231   0039F0  EFFD  F01C         	goto	l13968
 10232   0039F4                     u12560:
 10233   0039F4                     
 10234                           ; BSR set to: 0
 10235                           ;MCAL_layer/USART/hal_usart.c: 332:             (RCSTAbits.RX9 = 1);
 10236   0039F4  8CAB               	bsf	171,6,c	;volatile
 10237                           
 10238                           ;MCAL_layer/USART/hal_usart.c: 333:         }
 10239   0039F6  EF0D  F01D         	goto	l2081
 10240   0039FA                     l13968:
 10241                           
 10242                           ; BSR set to: 0
 10243   0039FA  EE20 F008          	lfsr	2,8
 10244   0039FE  51D5               	movf	EUSART_RX_Init@_EUSART& (0+255),w,b
 10245   003A00  26D9               	addwf	fsr2l,f,c
 10246   003A02  51D6               	movf	(EUSART_RX_Init@_EUSART+1)& (0+255),w,b
 10247   003A04  22DA               	addwfc	fsr2h,f,c
 10248   003A06  B4DF               	btfsc	indf2,2,c
 10249   003A08  EF08  F01D         	goto	u12571
 10250   003A0C  EF0A  F01D         	goto	u12570
 10251   003A10                     u12571:
 10252   003A10  EF0D  F01D         	goto	l2077
 10253   003A14                     u12570:
 10254   003A14                     
 10255                           ; BSR set to: 0
 10256                           ;MCAL_layer/USART/hal_usart.c: 335:             (RCSTAbits.RX9 = 0);
 10257   003A14  9CAB               	bcf	171,6,c	;volatile
 10258                           
 10259                           ;MCAL_layer/USART/hal_usart.c: 336:         }
 10260   003A16  EF0D  F01D         	goto	l2081
 10261   003A1A                     l2077:
 10262   003A1A                     l2081:
 10263                           
 10264                           ; BSR set to: 0
 10265   003A1A  0012               	return		;funcret
 10266   003A1C                     __end_of_EUSART_RX_Init:
 10267                           	callstack 0
 10268                           
 10269 ;; *************** function _EUSART_BaudRateCalculation *****************
 10270 ;; Defined at:
 10271 ;;		line 175 in file "MCAL_layer/USART/hal_usart.c"
 10272 ;; Parameters:    Size  Location     Type
 10273 ;;  _EUSART         2   12[BANK1 ] PTR const struct .
 10274 ;;		 -> UART_obj(17), 
 10275 ;; Auto vars:     Size  Location     Type
 10276 ;;  baudrate_Val    4   16[BANK1 ] float 
 10277 ;; Return value:  Size  Location     Type
 10278 ;;                  1    wreg      void 
 10279 ;; Registers used:
 10280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10281 ;; Tracked objects:
 10282 ;;		On entry : 0/0
 10283 ;;		On exit  : 0/0
 10284 ;;		Unchanged: 0/0
 10285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10286 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10287 ;;      Locals:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10288 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10289 ;;      Totals:         0       0      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10290 ;;Total ram usage:       12 bytes
 10291 ;; Hardware stack levels used: 1
 10292 ;; Hardware stack levels required when called: 10
 10293 ;; This function calls:
 10294 ;;		___fladd
 10295 ;;		___fldiv
 10296 ;;		___fltol
 10297 ;;		___xxtofl
 10298 ;; This function is called by:
 10299 ;;		_EUSART_ASYNC_Init
 10300 ;; This function uses a non-reentrant model
 10301 ;;
 10302                           
 10303                           	psect	text23
 10304   001A1A                     __ptext23:
 10305                           	callstack 0
 10306   001A1A                     _EUSART_BaudRateCalculation:
 10307                           	callstack 18
 10308   001A1A                     
 10309                           ;MCAL_layer/USART/hal_usart.c: 176:     float baudrate_Val = 0;
 10310   001A1A  0E00               	movlw	0
 10311   001A1C  0101               	movlb	1	; () banked
 10312   001A1E  6F80               	movwf	EUSART_BaudRateCalculation@baudrate_Val& (0+255),b
 10313   001A20  0E00               	movlw	0
 10314   001A22  6F81               	movwf	(EUSART_BaudRateCalculation@baudrate_Val+1)& (0+255),b
 10315   001A24  0E00               	movlw	0
 10316   001A26  6F82               	movwf	(EUSART_BaudRateCalculation@baudrate_Val+2)& (0+255),b
 10317   001A28  0E00               	movlw	0
 10318   001A2A  6F83               	movwf	(EUSART_BaudRateCalculation@baudrate_Val+3)& (0+255),b
 10319                           
 10320                           ;MCAL_layer/USART/hal_usart.c: 177:     switch(_EUSART->BAUDRAT_CONFIG){
 10321   001A2C  EF44  F00F         	goto	l13914
 10322   001A30                     l2047:
 10323                           
 10324                           ; BSR set to: 1
 10325                           ;MCAL_layer/USART/hal_usart.c: 179:             (TXSTAbits.SYNC = 0);
 10326   001A30  98AC               	bcf	172,4,c	;volatile
 10327                           
 10328                           ;MCAL_layer/USART/hal_usart.c: 180:             (BAUDCONbits.BRG16 = 0);
 10329   001A32  96B8               	bcf	184,3,c	;volatile
 10330                           
 10331                           ;MCAL_layer/USART/hal_usart.c: 181:             (TXSTAbits.BRGH = 1);
 10332   001A34  84AC               	bsf	172,2,c	;volatile
 10333   001A36                     
 10334                           ; BSR set to: 1
 10335                           ;MCAL_layer/USART/hal_usart.c: 182:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 16) - 1;
 10336   001A36  C17C  FFD9         	movff	EUSART_BaudRateCalculation@_EUSART,fsr2l
 10337   001A3A  C17D  FFDA         	movff	EUSART_BaudRateCalculation@_EUSART+1,fsr2h
 10338   001A3E  CFDE F0D5          	movff	postinc2,___xxtofl@val
 10339   001A42  CFDE F0D6          	movff	postinc2,___xxtofl@val+1
 10340   001A46  CFDE F0D7          	movff	postinc2,___xxtofl@val+2
 10341   001A4A  CFDE F0D8          	movff	postinc2,___xxtofl@val+3
 10342   001A4E  0E00               	movlw	0
 10343   001A50  ECF6  F017         	call	___xxtofl
 10344   001A54  C0D5  F0E7         	movff	?___xxtofl,___fldiv@a
 10345   001A58  C0D6  F0E8         	movff	?___xxtofl+1,___fldiv@a+1
 10346   001A5C  C0D7  F0E9         	movff	?___xxtofl+2,___fldiv@a+2
 10347   001A60  C0D8  F0EA         	movff	?___xxtofl+3,___fldiv@a+3
 10348   001A64  0E00               	movlw	0
 10349   001A66  0100               	movlb	0	; () banked
 10350   001A68  6FE3               	movwf	___fldiv@b& (0+255),b
 10351   001A6A  0E24               	movlw	36
 10352   001A6C  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 10353   001A6E  0EF4               	movlw	244
 10354   001A70  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 10355   001A72  0E4A               	movlw	74
 10356   001A74  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 10357   001A76  EC08  F012         	call	___fldiv	;wreg free
 10358   001A7A  C0E3  F184         	movff	?___fldiv,_EUSART_BaudRateCalculation$7013
 10359   001A7E  C0E4  F185         	movff	?___fldiv+1,_EUSART_BaudRateCalculation$7013+1
 10360   001A82  C0E5  F186         	movff	?___fldiv+2,_EUSART_BaudRateCalculation$7013+2
 10361   001A86  C0E6  F187         	movff	?___fldiv+3,_EUSART_BaudRateCalculation$7013+3
 10362   001A8A                     
 10363                           ;MCAL_layer/USART/hal_usart.c: 182:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 16) - 1;
 10364   001A8A  0E00               	movlw	0
 10365   001A8C  0100               	movlb	0	; () banked
 10366   001A8E  6FE7               	movwf	___fldiv@a& (0+255),b
 10367   001A90  0E00               	movlw	0
 10368   001A92  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
 10369   001A94  0E80               	movlw	128
 10370   001A96  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
 10371   001A98  0E41               	movlw	65
 10372   001A9A  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
 10373   001A9C  C184  F0E3         	movff	_EUSART_BaudRateCalculation$7013,___fldiv@b
 10374   001AA0  C185  F0E4         	movff	_EUSART_BaudRateCalculation$7013+1,___fldiv@b+1
 10375   001AA4  C186  F0E5         	movff	_EUSART_BaudRateCalculation$7013+2,___fldiv@b+2
 10376   001AA8  C187  F0E6         	movff	_EUSART_BaudRateCalculation$7013+3,___fldiv@b+3
 10377   001AAC  EC08  F012         	call	___fldiv	;wreg free
 10378   001AB0  C0E3  F170         	movff	?___fldiv,___fladd@b
 10379   001AB4  C0E4  F171         	movff	?___fldiv+1,___fladd@b+1
 10380   001AB8  C0E5  F172         	movff	?___fldiv+2,___fladd@b+2
 10381   001ABC  C0E6  F173         	movff	?___fldiv+3,___fladd@b+3
 10382   001AC0  0E00               	movlw	0
 10383   001AC2  0101               	movlb	1	; () banked
 10384   001AC4  6F74               	movwf	___fladd@a& (0+255),b
 10385   001AC6  0E00               	movlw	0
 10386   001AC8  6F75               	movwf	(___fladd@a+1)& (0+255),b
 10387   001ACA  0E80               	movlw	128
 10388   001ACC  6F76               	movwf	(___fladd@a+2)& (0+255),b
 10389   001ACE  0EBF               	movlw	191
 10390   001AD0  6F77               	movwf	(___fladd@a+3)& (0+255),b
 10391   001AD2  EC91  F00F         	call	___fladd	;wreg free
 10392   001AD6  C170  F180         	movff	?___fladd,EUSART_BaudRateCalculation@baudrate_Val
 10393   001ADA  C171  F181         	movff	?___fladd+1,EUSART_BaudRateCalculation@baudrate_Val+1
 10394   001ADE  C172  F182         	movff	?___fladd+2,EUSART_BaudRateCalculation@baudrate_Val+2
 10395   001AE2  C173  F183         	movff	?___fladd+3,EUSART_BaudRateCalculation@baudrate_Val+3
 10396                           
 10397                           ;MCAL_layer/USART/hal_usart.c: 183:             break;
 10398   001AE6  EF6F  F00F         	goto	l13916
 10399   001AEA                     l2049:
 10400                           
 10401                           ; BSR set to: 1
 10402                           ;MCAL_layer/USART/hal_usart.c: 185:             (TXSTAbits.SYNC = 0);
 10403   001AEA  98AC               	bcf	172,4,c	;volatile
 10404                           
 10405                           ;MCAL_layer/USART/hal_usart.c: 186:             (BAUDCONbits.BRG16 = 0);
 10406   001AEC  96B8               	bcf	184,3,c	;volatile
 10407                           
 10408                           ;MCAL_layer/USART/hal_usart.c: 187:             (TXSTAbits.BRGH = 0);
 10409   001AEE  94AC               	bcf	172,2,c	;volatile
 10410   001AF0                     
 10411                           ; BSR set to: 1
 10412                           ;MCAL_layer/USART/hal_usart.c: 188:             baudrate_Val = ((8000000UL/ (float)_EUSA
      +                          RT->Baud_rate) / 64) - 1;
 10413   001AF0  C17C  FFD9         	movff	EUSART_BaudRateCalculation@_EUSART,fsr2l
 10414   001AF4  C17D  FFDA         	movff	EUSART_BaudRateCalculation@_EUSART+1,fsr2h
 10415   001AF8  CFDE F0D5          	movff	postinc2,___xxtofl@val
 10416   001AFC  CFDE F0D6          	movff	postinc2,___xxtofl@val+1
 10417   001B00  CFDE F0D7          	movff	postinc2,___xxtofl@val+2
 10418   001B04  CFDE F0D8          	movff	postinc2,___xxtofl@val+3
 10419   001B08  0E00               	movlw	0
 10420   001B0A  ECF6  F017         	call	___xxtofl
 10421   001B0E  C0D5  F0E7         	movff	?___xxtofl,___fldiv@a
 10422   001B12  C0D6  F0E8         	movff	?___xxtofl+1,___fldiv@a+1
 10423   001B16  C0D7  F0E9         	movff	?___xxtofl+2,___fldiv@a+2
 10424   001B1A  C0D8  F0EA         	movff	?___xxtofl+3,___fldiv@a+3
 10425   001B1E  0E00               	movlw	0
 10426   001B20  0100               	movlb	0	; () banked
 10427   001B22  6FE3               	movwf	___fldiv@b& (0+255),b
 10428   001B24  0E24               	movlw	36
 10429   001B26  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 10430   001B28  0EF4               	movlw	244
 10431   001B2A  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 10432   001B2C  0E4A               	movlw	74
 10433   001B2E  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 10434   001B30  EC08  F012         	call	___fldiv	;wreg free
 10435   001B34  C0E3  F184         	movff	?___fldiv,_EUSART_BaudRateCalculation$7013
 10436   001B38  C0E4  F185         	movff	?___fldiv+1,_EUSART_BaudRateCalculation$7013+1
 10437   001B3C  C0E5  F186         	movff	?___fldiv+2,_EUSART_BaudRateCalculation$7013+2
 10438   001B40  C0E6  F187         	movff	?___fldiv+3,_EUSART_BaudRateCalculation$7013+3
 10439   001B44                     
 10440                           ;MCAL_layer/USART/hal_usart.c: 188:             baudrate_Val = ((8000000UL/ (float)_EUSA
      +                          RT->Baud_rate) / 64) - 1;
 10441   001B44  0E00               	movlw	0
 10442   001B46  0100               	movlb	0	; () banked
 10443   001B48  6FE7               	movwf	___fldiv@a& (0+255),b
 10444   001B4A  0E00               	movlw	0
 10445   001B4C  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
 10446   001B4E  0E80               	movlw	128
 10447   001B50  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
 10448   001B52  0E42               	movlw	66
 10449   001B54  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
 10450   001B56  C184  F0E3         	movff	_EUSART_BaudRateCalculation$7013,___fldiv@b
 10451   001B5A  C185  F0E4         	movff	_EUSART_BaudRateCalculation$7013+1,___fldiv@b+1
 10452   001B5E  C186  F0E5         	movff	_EUSART_BaudRateCalculation$7013+2,___fldiv@b+2
 10453   001B62  C187  F0E6         	movff	_EUSART_BaudRateCalculation$7013+3,___fldiv@b+3
 10454   001B66  EC08  F012         	call	___fldiv	;wreg free
 10455   001B6A  C0E3  F170         	movff	?___fldiv,___fladd@b
 10456   001B6E  C0E4  F171         	movff	?___fldiv+1,___fladd@b+1
 10457   001B72  C0E5  F172         	movff	?___fldiv+2,___fladd@b+2
 10458   001B76  C0E6  F173         	movff	?___fldiv+3,___fladd@b+3
 10459   001B7A  0E00               	movlw	0
 10460   001B7C  0101               	movlb	1	; () banked
 10461   001B7E  6F74               	movwf	___fladd@a& (0+255),b
 10462   001B80  0E00               	movlw	0
 10463   001B82  6F75               	movwf	(___fladd@a+1)& (0+255),b
 10464   001B84  0E80               	movlw	128
 10465   001B86  6F76               	movwf	(___fladd@a+2)& (0+255),b
 10466   001B88  0EBF               	movlw	191
 10467   001B8A  6F77               	movwf	(___fladd@a+3)& (0+255),b
 10468   001B8C  EC91  F00F         	call	___fladd	;wreg free
 10469   001B90  C170  F180         	movff	?___fladd,EUSART_BaudRateCalculation@baudrate_Val
 10470   001B94  C171  F181         	movff	?___fladd+1,EUSART_BaudRateCalculation@baudrate_Val+1
 10471   001B98  C172  F182         	movff	?___fladd+2,EUSART_BaudRateCalculation@baudrate_Val+2
 10472   001B9C  C173  F183         	movff	?___fladd+3,EUSART_BaudRateCalculation@baudrate_Val+3
 10473                           
 10474                           ;MCAL_layer/USART/hal_usart.c: 189:             break;
 10475   001BA0  EF6F  F00F         	goto	l13916
 10476   001BA4                     l2050:
 10477                           
 10478                           ; BSR set to: 1
 10479                           ;MCAL_layer/USART/hal_usart.c: 191:             (TXSTAbits.SYNC = 0);
 10480   001BA4  98AC               	bcf	172,4,c	;volatile
 10481                           
 10482                           ;MCAL_layer/USART/hal_usart.c: 192:             (BAUDCONbits.BRG16 = 1);
 10483   001BA6  86B8               	bsf	184,3,c	;volatile
 10484                           
 10485                           ;MCAL_layer/USART/hal_usart.c: 193:             (TXSTAbits.BRGH = 0);
 10486   001BA8  94AC               	bcf	172,2,c	;volatile
 10487   001BAA                     
 10488                           ; BSR set to: 1
 10489                           ;MCAL_layer/USART/hal_usart.c: 194:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 4) - 1;
 10490   001BAA  C17C  FFD9         	movff	EUSART_BaudRateCalculation@_EUSART,fsr2l
 10491   001BAE  C17D  FFDA         	movff	EUSART_BaudRateCalculation@_EUSART+1,fsr2h
 10492   001BB2  CFDE F0D5          	movff	postinc2,___xxtofl@val
 10493   001BB6  CFDE F0D6          	movff	postinc2,___xxtofl@val+1
 10494   001BBA  CFDE F0D7          	movff	postinc2,___xxtofl@val+2
 10495   001BBE  CFDE F0D8          	movff	postinc2,___xxtofl@val+3
 10496   001BC2  0E00               	movlw	0
 10497   001BC4  ECF6  F017         	call	___xxtofl
 10498   001BC8  C0D5  F0E7         	movff	?___xxtofl,___fldiv@a
 10499   001BCC  C0D6  F0E8         	movff	?___xxtofl+1,___fldiv@a+1
 10500   001BD0  C0D7  F0E9         	movff	?___xxtofl+2,___fldiv@a+2
 10501   001BD4  C0D8  F0EA         	movff	?___xxtofl+3,___fldiv@a+3
 10502   001BD8  0E00               	movlw	0
 10503   001BDA  0100               	movlb	0	; () banked
 10504   001BDC  6FE3               	movwf	___fldiv@b& (0+255),b
 10505   001BDE  0E24               	movlw	36
 10506   001BE0  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 10507   001BE2  0EF4               	movlw	244
 10508   001BE4  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 10509   001BE6  0E4A               	movlw	74
 10510   001BE8  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 10511   001BEA  EC08  F012         	call	___fldiv	;wreg free
 10512   001BEE  C0E3  F184         	movff	?___fldiv,_EUSART_BaudRateCalculation$7013
 10513   001BF2  C0E4  F185         	movff	?___fldiv+1,_EUSART_BaudRateCalculation$7013+1
 10514   001BF6  C0E5  F186         	movff	?___fldiv+2,_EUSART_BaudRateCalculation$7013+2
 10515   001BFA  C0E6  F187         	movff	?___fldiv+3,_EUSART_BaudRateCalculation$7013+3
 10516   001BFE                     
 10517                           ;MCAL_layer/USART/hal_usart.c: 194:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 4) - 1;
 10518   001BFE  0E00               	movlw	0
 10519   001C00  0100               	movlb	0	; () banked
 10520   001C02  6FE7               	movwf	___fldiv@a& (0+255),b
 10521   001C04  0E00               	movlw	0
 10522   001C06  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
 10523   001C08  0E80               	movlw	128
 10524   001C0A  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
 10525   001C0C  0E40               	movlw	64
 10526   001C0E  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
 10527   001C10  C184  F0E3         	movff	_EUSART_BaudRateCalculation$7013,___fldiv@b
 10528   001C14  C185  F0E4         	movff	_EUSART_BaudRateCalculation$7013+1,___fldiv@b+1
 10529   001C18  C186  F0E5         	movff	_EUSART_BaudRateCalculation$7013+2,___fldiv@b+2
 10530   001C1C  C187  F0E6         	movff	_EUSART_BaudRateCalculation$7013+3,___fldiv@b+3
 10531   001C20  EC08  F012         	call	___fldiv	;wreg free
 10532   001C24  C0E3  F170         	movff	?___fldiv,___fladd@b
 10533   001C28  C0E4  F171         	movff	?___fldiv+1,___fladd@b+1
 10534   001C2C  C0E5  F172         	movff	?___fldiv+2,___fladd@b+2
 10535   001C30  C0E6  F173         	movff	?___fldiv+3,___fladd@b+3
 10536   001C34  0E00               	movlw	0
 10537   001C36  0101               	movlb	1	; () banked
 10538   001C38  6F74               	movwf	___fladd@a& (0+255),b
 10539   001C3A  0E00               	movlw	0
 10540   001C3C  6F75               	movwf	(___fladd@a+1)& (0+255),b
 10541   001C3E  0E80               	movlw	128
 10542   001C40  6F76               	movwf	(___fladd@a+2)& (0+255),b
 10543   001C42  0EBF               	movlw	191
 10544   001C44  6F77               	movwf	(___fladd@a+3)& (0+255),b
 10545   001C46  EC91  F00F         	call	___fladd	;wreg free
 10546   001C4A  C170  F180         	movff	?___fladd,EUSART_BaudRateCalculation@baudrate_Val
 10547   001C4E  C171  F181         	movff	?___fladd+1,EUSART_BaudRateCalculation@baudrate_Val+1
 10548   001C52  C172  F182         	movff	?___fladd+2,EUSART_BaudRateCalculation@baudrate_Val+2
 10549   001C56  C173  F183         	movff	?___fladd+3,EUSART_BaudRateCalculation@baudrate_Val+3
 10550                           
 10551                           ;MCAL_layer/USART/hal_usart.c: 195:             break;
 10552   001C5A  EF6F  F00F         	goto	l13916
 10553   001C5E                     l2051:
 10554                           
 10555                           ; BSR set to: 1
 10556                           ;MCAL_layer/USART/hal_usart.c: 197:             (TXSTAbits.SYNC = 0);
 10557   001C5E  98AC               	bcf	172,4,c	;volatile
 10558                           
 10559                           ;MCAL_layer/USART/hal_usart.c: 198:             (BAUDCONbits.BRG16 = 1);
 10560   001C60  86B8               	bsf	184,3,c	;volatile
 10561                           
 10562                           ;MCAL_layer/USART/hal_usart.c: 199:             (TXSTAbits.BRGH = 0);
 10563   001C62  94AC               	bcf	172,2,c	;volatile
 10564   001C64                     
 10565                           ; BSR set to: 1
 10566                           ;MCAL_layer/USART/hal_usart.c: 200:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 16) - 1;
 10567   001C64  C17C  FFD9         	movff	EUSART_BaudRateCalculation@_EUSART,fsr2l
 10568   001C68  C17D  FFDA         	movff	EUSART_BaudRateCalculation@_EUSART+1,fsr2h
 10569   001C6C  CFDE F0D5          	movff	postinc2,___xxtofl@val
 10570   001C70  CFDE F0D6          	movff	postinc2,___xxtofl@val+1
 10571   001C74  CFDE F0D7          	movff	postinc2,___xxtofl@val+2
 10572   001C78  CFDE F0D8          	movff	postinc2,___xxtofl@val+3
 10573   001C7C  0E00               	movlw	0
 10574   001C7E  ECF6  F017         	call	___xxtofl
 10575   001C82  C0D5  F0E7         	movff	?___xxtofl,___fldiv@a
 10576   001C86  C0D6  F0E8         	movff	?___xxtofl+1,___fldiv@a+1
 10577   001C8A  C0D7  F0E9         	movff	?___xxtofl+2,___fldiv@a+2
 10578   001C8E  C0D8  F0EA         	movff	?___xxtofl+3,___fldiv@a+3
 10579   001C92  0E00               	movlw	0
 10580   001C94  0100               	movlb	0	; () banked
 10581   001C96  6FE3               	movwf	___fldiv@b& (0+255),b
 10582   001C98  0E24               	movlw	36
 10583   001C9A  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 10584   001C9C  0EF4               	movlw	244
 10585   001C9E  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 10586   001CA0  0E4A               	movlw	74
 10587   001CA2  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 10588   001CA4  EC08  F012         	call	___fldiv	;wreg free
 10589   001CA8  C0E3  F184         	movff	?___fldiv,_EUSART_BaudRateCalculation$7013
 10590   001CAC  C0E4  F185         	movff	?___fldiv+1,_EUSART_BaudRateCalculation$7013+1
 10591   001CB0  C0E5  F186         	movff	?___fldiv+2,_EUSART_BaudRateCalculation$7013+2
 10592   001CB4  C0E6  F187         	movff	?___fldiv+3,_EUSART_BaudRateCalculation$7013+3
 10593   001CB8                     
 10594                           ;MCAL_layer/USART/hal_usart.c: 200:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 16) - 1;
 10595   001CB8  0E00               	movlw	0
 10596   001CBA  0100               	movlb	0	; () banked
 10597   001CBC  6FE7               	movwf	___fldiv@a& (0+255),b
 10598   001CBE  0E00               	movlw	0
 10599   001CC0  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
 10600   001CC2  0E80               	movlw	128
 10601   001CC4  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
 10602   001CC6  0E41               	movlw	65
 10603   001CC8  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
 10604   001CCA  C184  F0E3         	movff	_EUSART_BaudRateCalculation$7013,___fldiv@b
 10605   001CCE  C185  F0E4         	movff	_EUSART_BaudRateCalculation$7013+1,___fldiv@b+1
 10606   001CD2  C186  F0E5         	movff	_EUSART_BaudRateCalculation$7013+2,___fldiv@b+2
 10607   001CD6  C187  F0E6         	movff	_EUSART_BaudRateCalculation$7013+3,___fldiv@b+3
 10608   001CDA  EC08  F012         	call	___fldiv	;wreg free
 10609   001CDE  C0E3  F170         	movff	?___fldiv,___fladd@b
 10610   001CE2  C0E4  F171         	movff	?___fldiv+1,___fladd@b+1
 10611   001CE6  C0E5  F172         	movff	?___fldiv+2,___fladd@b+2
 10612   001CEA  C0E6  F173         	movff	?___fldiv+3,___fladd@b+3
 10613   001CEE  0E00               	movlw	0
 10614   001CF0  0101               	movlb	1	; () banked
 10615   001CF2  6F74               	movwf	___fladd@a& (0+255),b
 10616   001CF4  0E00               	movlw	0
 10617   001CF6  6F75               	movwf	(___fladd@a+1)& (0+255),b
 10618   001CF8  0E80               	movlw	128
 10619   001CFA  6F76               	movwf	(___fladd@a+2)& (0+255),b
 10620   001CFC  0EBF               	movlw	191
 10621   001CFE  6F77               	movwf	(___fladd@a+3)& (0+255),b
 10622   001D00  EC91  F00F         	call	___fladd	;wreg free
 10623   001D04  C170  F180         	movff	?___fladd,EUSART_BaudRateCalculation@baudrate_Val
 10624   001D08  C171  F181         	movff	?___fladd+1,EUSART_BaudRateCalculation@baudrate_Val+1
 10625   001D0C  C172  F182         	movff	?___fladd+2,EUSART_BaudRateCalculation@baudrate_Val+2
 10626   001D10  C173  F183         	movff	?___fladd+3,EUSART_BaudRateCalculation@baudrate_Val+3
 10627                           
 10628                           ;MCAL_layer/USART/hal_usart.c: 201:             break;
 10629   001D14  EF6F  F00F         	goto	l13916
 10630   001D18                     l2052:
 10631                           
 10632                           ; BSR set to: 1
 10633                           ;MCAL_layer/USART/hal_usart.c: 203:             (TXSTAbits.SYNC = 1);
 10634   001D18  88AC               	bsf	172,4,c	;volatile
 10635                           
 10636                           ;MCAL_layer/USART/hal_usart.c: 204:             (BAUDCONbits.BRG16 = 0);
 10637   001D1A  96B8               	bcf	184,3,c	;volatile
 10638   001D1C                     
 10639                           ; BSR set to: 1
 10640                           ;MCAL_layer/USART/hal_usart.c: 205:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 4) - 1;
 10641   001D1C  C17C  FFD9         	movff	EUSART_BaudRateCalculation@_EUSART,fsr2l
 10642   001D20  C17D  FFDA         	movff	EUSART_BaudRateCalculation@_EUSART+1,fsr2h
 10643   001D24  CFDE F0D5          	movff	postinc2,___xxtofl@val
 10644   001D28  CFDE F0D6          	movff	postinc2,___xxtofl@val+1
 10645   001D2C  CFDE F0D7          	movff	postinc2,___xxtofl@val+2
 10646   001D30  CFDE F0D8          	movff	postinc2,___xxtofl@val+3
 10647   001D34  0E00               	movlw	0
 10648   001D36  ECF6  F017         	call	___xxtofl
 10649   001D3A  C0D5  F0E7         	movff	?___xxtofl,___fldiv@a
 10650   001D3E  C0D6  F0E8         	movff	?___xxtofl+1,___fldiv@a+1
 10651   001D42  C0D7  F0E9         	movff	?___xxtofl+2,___fldiv@a+2
 10652   001D46  C0D8  F0EA         	movff	?___xxtofl+3,___fldiv@a+3
 10653   001D4A  0E00               	movlw	0
 10654   001D4C  0100               	movlb	0	; () banked
 10655   001D4E  6FE3               	movwf	___fldiv@b& (0+255),b
 10656   001D50  0E24               	movlw	36
 10657   001D52  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 10658   001D54  0EF4               	movlw	244
 10659   001D56  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 10660   001D58  0E4A               	movlw	74
 10661   001D5A  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 10662   001D5C  EC08  F012         	call	___fldiv	;wreg free
 10663   001D60  C0E3  F184         	movff	?___fldiv,_EUSART_BaudRateCalculation$7013
 10664   001D64  C0E4  F185         	movff	?___fldiv+1,_EUSART_BaudRateCalculation$7013+1
 10665   001D68  C0E5  F186         	movff	?___fldiv+2,_EUSART_BaudRateCalculation$7013+2
 10666   001D6C  C0E6  F187         	movff	?___fldiv+3,_EUSART_BaudRateCalculation$7013+3
 10667   001D70                     
 10668                           ;MCAL_layer/USART/hal_usart.c: 205:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 4) - 1;
 10669   001D70  0E00               	movlw	0
 10670   001D72  0100               	movlb	0	; () banked
 10671   001D74  6FE7               	movwf	___fldiv@a& (0+255),b
 10672   001D76  0E00               	movlw	0
 10673   001D78  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
 10674   001D7A  0E80               	movlw	128
 10675   001D7C  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
 10676   001D7E  0E40               	movlw	64
 10677   001D80  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
 10678   001D82  C184  F0E3         	movff	_EUSART_BaudRateCalculation$7013,___fldiv@b
 10679   001D86  C185  F0E4         	movff	_EUSART_BaudRateCalculation$7013+1,___fldiv@b+1
 10680   001D8A  C186  F0E5         	movff	_EUSART_BaudRateCalculation$7013+2,___fldiv@b+2
 10681   001D8E  C187  F0E6         	movff	_EUSART_BaudRateCalculation$7013+3,___fldiv@b+3
 10682   001D92  EC08  F012         	call	___fldiv	;wreg free
 10683   001D96  C0E3  F170         	movff	?___fldiv,___fladd@b
 10684   001D9A  C0E4  F171         	movff	?___fldiv+1,___fladd@b+1
 10685   001D9E  C0E5  F172         	movff	?___fldiv+2,___fladd@b+2
 10686   001DA2  C0E6  F173         	movff	?___fldiv+3,___fladd@b+3
 10687   001DA6  0E00               	movlw	0
 10688   001DA8  0101               	movlb	1	; () banked
 10689   001DAA  6F74               	movwf	___fladd@a& (0+255),b
 10690   001DAC  0E00               	movlw	0
 10691   001DAE  6F75               	movwf	(___fladd@a+1)& (0+255),b
 10692   001DB0  0E80               	movlw	128
 10693   001DB2  6F76               	movwf	(___fladd@a+2)& (0+255),b
 10694   001DB4  0EBF               	movlw	191
 10695   001DB6  6F77               	movwf	(___fladd@a+3)& (0+255),b
 10696   001DB8  EC91  F00F         	call	___fladd	;wreg free
 10697   001DBC  C170  F180         	movff	?___fladd,EUSART_BaudRateCalculation@baudrate_Val
 10698   001DC0  C171  F181         	movff	?___fladd+1,EUSART_BaudRateCalculation@baudrate_Val+1
 10699   001DC4  C172  F182         	movff	?___fladd+2,EUSART_BaudRateCalculation@baudrate_Val+2
 10700   001DC8  C173  F183         	movff	?___fladd+3,EUSART_BaudRateCalculation@baudrate_Val+3
 10701                           
 10702                           ;MCAL_layer/USART/hal_usart.c: 206:             break;
 10703   001DCC  EF6F  F00F         	goto	l13916
 10704   001DD0                     l2053:
 10705                           
 10706                           ; BSR set to: 1
 10707                           ;MCAL_layer/USART/hal_usart.c: 208:             (TXSTAbits.SYNC = 1);
 10708   001DD0  88AC               	bsf	172,4,c	;volatile
 10709                           
 10710                           ;MCAL_layer/USART/hal_usart.c: 209:             (BAUDCONbits.BRG16 = 1);
 10711   001DD2  86B8               	bsf	184,3,c	;volatile
 10712   001DD4                     
 10713                           ; BSR set to: 1
 10714                           ;MCAL_layer/USART/hal_usart.c: 210:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 4) - 1;
 10715   001DD4  C17C  FFD9         	movff	EUSART_BaudRateCalculation@_EUSART,fsr2l
 10716   001DD8  C17D  FFDA         	movff	EUSART_BaudRateCalculation@_EUSART+1,fsr2h
 10717   001DDC  CFDE F0D5          	movff	postinc2,___xxtofl@val
 10718   001DE0  CFDE F0D6          	movff	postinc2,___xxtofl@val+1
 10719   001DE4  CFDE F0D7          	movff	postinc2,___xxtofl@val+2
 10720   001DE8  CFDE F0D8          	movff	postinc2,___xxtofl@val+3
 10721   001DEC  0E00               	movlw	0
 10722   001DEE  ECF6  F017         	call	___xxtofl
 10723   001DF2  C0D5  F0E7         	movff	?___xxtofl,___fldiv@a
 10724   001DF6  C0D6  F0E8         	movff	?___xxtofl+1,___fldiv@a+1
 10725   001DFA  C0D7  F0E9         	movff	?___xxtofl+2,___fldiv@a+2
 10726   001DFE  C0D8  F0EA         	movff	?___xxtofl+3,___fldiv@a+3
 10727   001E02  0E00               	movlw	0
 10728   001E04  0100               	movlb	0	; () banked
 10729   001E06  6FE3               	movwf	___fldiv@b& (0+255),b
 10730   001E08  0E24               	movlw	36
 10731   001E0A  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 10732   001E0C  0EF4               	movlw	244
 10733   001E0E  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 10734   001E10  0E4A               	movlw	74
 10735   001E12  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 10736   001E14  EC08  F012         	call	___fldiv	;wreg free
 10737   001E18  C0E3  F184         	movff	?___fldiv,_EUSART_BaudRateCalculation$7013
 10738   001E1C  C0E4  F185         	movff	?___fldiv+1,_EUSART_BaudRateCalculation$7013+1
 10739   001E20  C0E5  F186         	movff	?___fldiv+2,_EUSART_BaudRateCalculation$7013+2
 10740   001E24  C0E6  F187         	movff	?___fldiv+3,_EUSART_BaudRateCalculation$7013+3
 10741   001E28                     
 10742                           ;MCAL_layer/USART/hal_usart.c: 210:             baudrate_Val = ((8000000UL/(float)_EUSAR
      +                          T->Baud_rate) / 4) - 1;
 10743   001E28  0E00               	movlw	0
 10744   001E2A  0100               	movlb	0	; () banked
 10745   001E2C  6FE7               	movwf	___fldiv@a& (0+255),b
 10746   001E2E  0E00               	movlw	0
 10747   001E30  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
 10748   001E32  0E80               	movlw	128
 10749   001E34  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
 10750   001E36  0E40               	movlw	64
 10751   001E38  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
 10752   001E3A  C184  F0E3         	movff	_EUSART_BaudRateCalculation$7013,___fldiv@b
 10753   001E3E  C185  F0E4         	movff	_EUSART_BaudRateCalculation$7013+1,___fldiv@b+1
 10754   001E42  C186  F0E5         	movff	_EUSART_BaudRateCalculation$7013+2,___fldiv@b+2
 10755   001E46  C187  F0E6         	movff	_EUSART_BaudRateCalculation$7013+3,___fldiv@b+3
 10756   001E4A  EC08  F012         	call	___fldiv	;wreg free
 10757   001E4E  C0E3  F170         	movff	?___fldiv,___fladd@b
 10758   001E52  C0E4  F171         	movff	?___fldiv+1,___fladd@b+1
 10759   001E56  C0E5  F172         	movff	?___fldiv+2,___fladd@b+2
 10760   001E5A  C0E6  F173         	movff	?___fldiv+3,___fladd@b+3
 10761   001E5E  0E00               	movlw	0
 10762   001E60  0101               	movlb	1	; () banked
 10763   001E62  6F74               	movwf	___fladd@a& (0+255),b
 10764   001E64  0E00               	movlw	0
 10765   001E66  6F75               	movwf	(___fladd@a+1)& (0+255),b
 10766   001E68  0E80               	movlw	128
 10767   001E6A  6F76               	movwf	(___fladd@a+2)& (0+255),b
 10768   001E6C  0EBF               	movlw	191
 10769   001E6E  6F77               	movwf	(___fladd@a+3)& (0+255),b
 10770   001E70  EC91  F00F         	call	___fladd	;wreg free
 10771   001E74  C170  F180         	movff	?___fladd,EUSART_BaudRateCalculation@baudrate_Val
 10772   001E78  C171  F181         	movff	?___fladd+1,EUSART_BaudRateCalculation@baudrate_Val+1
 10773   001E7C  C172  F182         	movff	?___fladd+2,EUSART_BaudRateCalculation@baudrate_Val+2
 10774   001E80  C173  F183         	movff	?___fladd+3,EUSART_BaudRateCalculation@baudrate_Val+3
 10775                           
 10776                           ;MCAL_layer/USART/hal_usart.c: 211:             break;
 10777   001E84  EF6F  F00F         	goto	l13916
 10778   001E88                     l13914:
 10779                           
 10780                           ; BSR set to: 1
 10781   001E88  EE20 F004          	lfsr	2,4
 10782   001E8C  517C               	movf	EUSART_BaudRateCalculation@_EUSART& (0+255),w,b
 10783   001E8E  26D9               	addwf	fsr2l,f,c
 10784   001E90  517D               	movf	(EUSART_BaudRateCalculation@_EUSART+1)& (0+255),w,b
 10785   001E92  22DA               	addwfc	fsr2h,f,c
 10786   001E94  50DF               	movf	indf2,w,c
 10787   001E96  6F7E               	movwf	??_EUSART_BaudRateCalculation& (0+255),b
 10788   001E98  6B7F               	clrf	(??_EUSART_BaudRateCalculation+1)& (0+255),b
 10789                           
 10790                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10791                           ; Switch size 1, requested type "simple"
 10792                           ; Number of cases is 1, Range of values is 0 to 0
 10793                           ; switch strategies available:
 10794                           ; Name         Instructions Cycles
 10795                           ; simple_byte            4     3 (average)
 10796                           ;	Chosen strategy is simple_byte
 10797   001E9A  517F               	movf	(??_EUSART_BaudRateCalculation+1)& (0+255),w,b
 10798   001E9C  0A00               	xorlw	0	; case 0
 10799   001E9E  B4D8               	btfsc	status,2,c
 10800   001EA0  EF54  F00F         	goto	l15864
 10801   001EA4  EF6F  F00F         	goto	l13916
 10802   001EA8                     l15864:
 10803                           
 10804                           ; BSR set to: 1
 10805                           ; Switch size 1, requested type "simple"
 10806                           ; Number of cases is 6, Range of values is 0 to 5
 10807                           ; switch strategies available:
 10808                           ; Name         Instructions Cycles
 10809                           ; simple_byte           19    10 (average)
 10810                           ;	Chosen strategy is simple_byte
 10811   001EA8  517E               	movf	??_EUSART_BaudRateCalculation& (0+255),w,b
 10812   001EAA  0A00               	xorlw	0	; case 0
 10813   001EAC  B4D8               	btfsc	status,2,c
 10814   001EAE  EF18  F00D         	goto	l2047
 10815   001EB2  0A01               	xorlw	1	; case 1
 10816   001EB4  B4D8               	btfsc	status,2,c
 10817   001EB6  EF75  F00D         	goto	l2049
 10818   001EBA  0A03               	xorlw	3	; case 2
 10819   001EBC  B4D8               	btfsc	status,2,c
 10820   001EBE  EFD2  F00D         	goto	l2050
 10821   001EC2  0A01               	xorlw	1	; case 3
 10822   001EC4  B4D8               	btfsc	status,2,c
 10823   001EC6  EF2F  F00E         	goto	l2051
 10824   001ECA  0A07               	xorlw	7	; case 4
 10825   001ECC  B4D8               	btfsc	status,2,c
 10826   001ECE  EF8C  F00E         	goto	l2052
 10827   001ED2  0A01               	xorlw	1	; case 5
 10828   001ED4  B4D8               	btfsc	status,2,c
 10829   001ED6  EFE8  F00E         	goto	l2053
 10830   001EDA  EF6F  F00F         	goto	l13916
 10831   001EDE                     l13916:
 10832                           
 10833                           ;MCAL_layer/USART/hal_usart.c: 216:     SPBRGH = (uint8)(((uint32)(baudrate_Val)) >> 8);
 10834   001EDE  C180  F0D5         	movff	EUSART_BaudRateCalculation@baudrate_Val,___fltol@f1
 10835   001EE2  C181  F0D6         	movff	EUSART_BaudRateCalculation@baudrate_Val+1,___fltol@f1+1
 10836   001EE6  C182  F0D7         	movff	EUSART_BaudRateCalculation@baudrate_Val+2,___fltol@f1+2
 10837   001EEA  C183  F0D8         	movff	EUSART_BaudRateCalculation@baudrate_Val+3,___fltol@f1+3
 10838   001EEE  EC30  F01A         	call	___fltol	;wreg free
 10839   001EF2  0100               	movlb	0	; () banked
 10840   001EF4  C0D6  F0D5         	movff	?___fltol+1,?___fltol
 10841   001EF8  C0D7  F0D6         	movff	?___fltol+2,?___fltol+1
 10842   001EFC  C0D8  F0D7         	movff	?___fltol+3,?___fltol+2
 10843   001F00  6BD8               	clrf	(?___fltol+3)& (0+255),b
 10844   001F02  51D5               	movf	?___fltol& (0+255),w,b
 10845   001F04  6EB0               	movwf	176,c	;volatile
 10846                           
 10847                           ;MCAL_layer/USART/hal_usart.c: 217:     SPBRG = (uint8)(((uint32)(baudrate_Val)));
 10848   001F06  C180  F0D5         	movff	EUSART_BaudRateCalculation@baudrate_Val,___fltol@f1
 10849   001F0A  C181  F0D6         	movff	EUSART_BaudRateCalculation@baudrate_Val+1,___fltol@f1+1
 10850   001F0E  C182  F0D7         	movff	EUSART_BaudRateCalculation@baudrate_Val+2,___fltol@f1+2
 10851   001F12  C183  F0D8         	movff	EUSART_BaudRateCalculation@baudrate_Val+3,___fltol@f1+3
 10852   001F16  EC30  F01A         	call	___fltol	;wreg free
 10853   001F1A  0100               	movlb	0	; () banked
 10854   001F1C  51D5               	movf	?___fltol& (0+255),w,b
 10855   001F1E  6EAF               	movwf	175,c	;volatile
 10856   001F20                     
 10857                           ; BSR set to: 0
 10858   001F20  0012               	return		;funcret
 10859   001F22                     __end_of_EUSART_BaudRateCalculation:
 10860                           	callstack 0
 10861                           
 10862 ;; *************** function ___xxtofl *****************
 10863 ;; Defined at:
 10864 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\xxtofl.c"
 10865 ;; Parameters:    Size  Location     Type
 10866 ;;  sign            1    wreg     unsigned char 
 10867 ;;  val             4    0[BANK0 ] long 
 10868 ;; Auto vars:     Size  Location     Type
 10869 ;;  sign            1    8[BANK0 ] unsigned char 
 10870 ;;  arg             4   10[BANK0 ] unsigned long 
 10871 ;;  exp             1    9[BANK0 ] unsigned char 
 10872 ;; Return value:  Size  Location     Type
 10873 ;;                  4    0[BANK0 ] unsigned char 
 10874 ;; Registers used:
 10875 ;;		wreg, status,2, status,0
 10876 ;; Tracked objects:
 10877 ;;		On entry : 0/0
 10878 ;;		On exit  : 0/0
 10879 ;;		Unchanged: 0/0
 10880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10881 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10882 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10883 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10884 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10885 ;;Total ram usage:       14 bytes
 10886 ;; Hardware stack levels used: 1
 10887 ;; Hardware stack levels required when called: 9
 10888 ;; This function calls:
 10889 ;;		Nothing
 10890 ;; This function is called by:
 10891 ;;		_EUSART_BaudRateCalculation
 10892 ;;		_Servo_Set_Angle
 10893 ;;		_I2C_Master_Mode_Configuration
 10894 ;; This function uses a non-reentrant model
 10895 ;;
 10896                           
 10897                           	psect	text24
 10898   002FEC                     __ptext24:
 10899                           	callstack 0
 10900   002FEC                     ___xxtofl:
 10901                           	callstack 18
 10902                           
 10903                           ; BSR set to: 0
 10904                           ;incstack = 0
 10905                           ;___xxtofl@sign stored from wreg
 10906   002FEC  0100               	movlb	0	; () banked
 10907   002FEE  6FDD               	movwf	___xxtofl@sign& (0+255),b
 10908   002FF0  0100               	movlb	0	; () banked
 10909   002FF2  51DD               	movf	___xxtofl@sign& (0+255),w,b
 10910   002FF4  B4D8               	btfsc	status,2,c
 10911   002FF6  EFFF  F017         	goto	u12281
 10912   002FFA  EF01  F018         	goto	u12280
 10913   002FFE                     u12281:
 10914   002FFE  EF23  F018         	goto	l3399
 10915   003002                     u12280:
 10916   003002                     
 10917                           ; BSR set to: 0
 10918   003002  BFD8               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 10919   003004  EF08  F018         	goto	u12290
 10920   003008  EF06  F018         	goto	u12291
 10921   00300C                     u12291:
 10922   00300C  EF23  F018         	goto	l3399
 10923   003010                     u12290:
 10924   003010                     
 10925                           ; BSR set to: 0
 10926   003010  C0D5  F0D9         	movff	___xxtofl@val,??___xxtofl
 10927   003014  C0D6  F0DA         	movff	___xxtofl@val+1,??___xxtofl+1
 10928   003018  C0D7  F0DB         	movff	___xxtofl@val+2,??___xxtofl+2
 10929   00301C  C0D8  F0DC         	movff	___xxtofl@val+3,??___xxtofl+3
 10930   003020  1FD9               	comf	??___xxtofl& (0+255),f,b
 10931   003022  1FDA               	comf	(??___xxtofl+1)& (0+255),f,b
 10932   003024  1FDB               	comf	(??___xxtofl+2)& (0+255),f,b
 10933   003026  1FDC               	comf	(??___xxtofl+3)& (0+255),f,b
 10934   003028  2BD9               	incf	??___xxtofl& (0+255),f,b
 10935   00302A  0E00               	movlw	0
 10936   00302C  23DA               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10937   00302E  23DB               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10938   003030  23DC               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10939   003032  C0D9  F0DF         	movff	??___xxtofl,___xxtofl@arg
 10940   003036  C0DA  F0E0         	movff	??___xxtofl+1,___xxtofl@arg+1
 10941   00303A  C0DB  F0E1         	movff	??___xxtofl+2,___xxtofl@arg+2
 10942   00303E  C0DC  F0E2         	movff	??___xxtofl+3,___xxtofl@arg+3
 10943   003042  EF2B  F018         	goto	l13730
 10944   003046                     l3399:
 10945                           
 10946                           ; BSR set to: 0
 10947   003046  C0D5  F0DF         	movff	___xxtofl@val,___xxtofl@arg
 10948   00304A  C0D6  F0E0         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10949   00304E  C0D7  F0E1         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10950   003052  C0D8  F0E2         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10951   003056                     l13730:
 10952                           
 10953                           ; BSR set to: 0
 10954   003056  51D5               	movf	___xxtofl@val& (0+255),w,b
 10955   003058  11D6               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10956   00305A  11D7               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10957   00305C  11D8               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10958   00305E  A4D8               	btfss	status,2,c
 10959   003060  EF34  F018         	goto	u12301
 10960   003064  EF36  F018         	goto	u12300
 10961   003068                     u12301:
 10962   003068  EF40  F018         	goto	l13736
 10963   00306C                     u12300:
 10964   00306C                     
 10965                           ; BSR set to: 0
 10966   00306C  0E00               	movlw	0
 10967   00306E  6FD5               	movwf	?___xxtofl& (0+255),b
 10968   003070  0E00               	movlw	0
 10969   003072  6FD6               	movwf	(?___xxtofl+1)& (0+255),b
 10970   003074  0E00               	movlw	0
 10971   003076  6FD7               	movwf	(?___xxtofl+2)& (0+255),b
 10972   003078  0E00               	movlw	0
 10973   00307A  6FD8               	movwf	(?___xxtofl+3)& (0+255),b
 10974   00307C  EFD1  F018         	goto	l3402
 10975   003080                     l13736:
 10976                           
 10977                           ; BSR set to: 0
 10978   003080  0E96               	movlw	150
 10979   003082  6FDE               	movwf	___xxtofl@exp& (0+255),b
 10980   003084  EF4A  F018         	goto	l13740
 10981   003088                     l13738:
 10982                           
 10983                           ; BSR set to: 0
 10984   003088  2BDE               	incf	___xxtofl@exp& (0+255),f,b
 10985   00308A  90D8               	bcf	status,0,c
 10986   00308C  33E2               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10987   00308E  33E1               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10988   003090  33E0               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10989   003092  33DF               	rrcf	___xxtofl@arg& (0+255),f,b
 10990   003094                     l13740:
 10991                           
 10992                           ; BSR set to: 0
 10993   003094  0E00               	movlw	0
 10994   003096  15DF               	andwf	___xxtofl@arg& (0+255),w,b
 10995   003098  6FD9               	movwf	??___xxtofl& (0+255),b
 10996   00309A  0E00               	movlw	0
 10997   00309C  15E0               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10998   00309E  6FDA               	movwf	(??___xxtofl+1)& (0+255),b
 10999   0030A0  0E00               	movlw	0
 11000   0030A2  15E1               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11001   0030A4  6FDB               	movwf	(??___xxtofl+2)& (0+255),b
 11002   0030A6  0EFE               	movlw	254
 11003   0030A8  15E2               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11004   0030AA  6FDC               	movwf	(??___xxtofl+3)& (0+255),b
 11005   0030AC  51D9               	movf	??___xxtofl& (0+255),w,b
 11006   0030AE  11DA               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11007   0030B0  11DB               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11008   0030B2  11DC               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11009   0030B4  A4D8               	btfss	status,2,c
 11010   0030B6  EF5F  F018         	goto	u12311
 11011   0030BA  EF61  F018         	goto	u12310
 11012   0030BE                     u12311:
 11013   0030BE  EF44  F018         	goto	l13738
 11014   0030C2                     u12310:
 11015   0030C2  EF6F  F018         	goto	l3406
 11016   0030C6                     l13742:
 11017                           
 11018                           ; BSR set to: 0
 11019   0030C6  2BDE               	incf	___xxtofl@exp& (0+255),f,b
 11020   0030C8                     
 11021                           ; BSR set to: 0
 11022   0030C8  0E01               	movlw	1
 11023   0030CA  27DF               	addwf	___xxtofl@arg& (0+255),f,b
 11024   0030CC  0E00               	movlw	0
 11025   0030CE  23E0               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 11026   0030D0  23E1               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 11027   0030D2  23E2               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 11028   0030D4                     
 11029                           ; BSR set to: 0
 11030   0030D4  90D8               	bcf	status,0,c
 11031   0030D6  33E2               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 11032   0030D8  33E1               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 11033   0030DA  33E0               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 11034   0030DC  33DF               	rrcf	___xxtofl@arg& (0+255),f,b
 11035   0030DE                     l3406:
 11036                           
 11037                           ; BSR set to: 0
 11038   0030DE  0E00               	movlw	0
 11039   0030E0  15DF               	andwf	___xxtofl@arg& (0+255),w,b
 11040   0030E2  6FD9               	movwf	??___xxtofl& (0+255),b
 11041   0030E4  0E00               	movlw	0
 11042   0030E6  15E0               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 11043   0030E8  6FDA               	movwf	(??___xxtofl+1)& (0+255),b
 11044   0030EA  0E00               	movlw	0
 11045   0030EC  15E1               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 11046   0030EE  6FDB               	movwf	(??___xxtofl+2)& (0+255),b
 11047   0030F0  0EFF               	movlw	255
 11048   0030F2  15E2               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 11049   0030F4  6FDC               	movwf	(??___xxtofl+3)& (0+255),b
 11050   0030F6  51D9               	movf	??___xxtofl& (0+255),w,b
 11051   0030F8  11DA               	iorwf	(??___xxtofl+1)& (0+255),w,b
 11052   0030FA  11DB               	iorwf	(??___xxtofl+2)& (0+255),w,b
 11053   0030FC  11DC               	iorwf	(??___xxtofl+3)& (0+255),w,b
 11054   0030FE  A4D8               	btfss	status,2,c
 11055   003100  EF84  F018         	goto	u12321
 11056   003104  EF86  F018         	goto	u12320
 11057   003108                     u12321:
 11058   003108  EF63  F018         	goto	l13742
 11059   00310C                     u12320:
 11060   00310C  EF8E  F018         	goto	l13750
 11061   003110                     l13748:
 11062                           
 11063                           ; BSR set to: 0
 11064   003110  07DE               	decf	___xxtofl@exp& (0+255),f,b
 11065   003112  90D8               	bcf	status,0,c
 11066   003114  37DF               	rlcf	___xxtofl@arg& (0+255),f,b
 11067   003116  37E0               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 11068   003118  37E1               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 11069   00311A  37E2               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 11070   00311C                     l13750:
 11071                           
 11072                           ; BSR set to: 0
 11073   00311C  BFE1               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 11074   00311E  EF93  F018         	goto	u12331
 11075   003122  EF95  F018         	goto	u12330
 11076   003126                     u12331:
 11077   003126  EF9D  F018         	goto	l3413
 11078   00312A                     u12330:
 11079   00312A                     
 11080                           ; BSR set to: 0
 11081   00312A  0E02               	movlw	2
 11082   00312C  61DE               	cpfslt	___xxtofl@exp& (0+255),b
 11083   00312E  EF9B  F018         	goto	u12341
 11084   003132  EF9D  F018         	goto	u12340
 11085   003136                     u12341:
 11086   003136  EF88  F018         	goto	l13748
 11087   00313A                     u12340:
 11088   00313A                     l3413:
 11089                           
 11090                           ; BSR set to: 0
 11091   00313A  B1DE               	btfsc	___xxtofl@exp& (0+255),0,b
 11092   00313C  EFA2  F018         	goto	u12351
 11093   003140  EFA4  F018         	goto	u12350
 11094   003144                     u12351:
 11095   003144  EFA5  F018         	goto	l13756
 11096   003148                     u12350:
 11097   003148                     
 11098                           ; BSR set to: 0
 11099   003148  9FE1               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 11100   00314A                     l13756:
 11101                           
 11102                           ; BSR set to: 0
 11103   00314A  90D8               	bcf	status,0,c
 11104   00314C  33DE               	rrcf	___xxtofl@exp& (0+255),f,b
 11105   00314E                     
 11106                           ; BSR set to: 0
 11107   00314E  C0DE  F0D9         	movff	___xxtofl@exp,??___xxtofl
 11108   003152  6BDA               	clrf	(??___xxtofl+1)& (0+255),b
 11109   003154  6BDB               	clrf	(??___xxtofl+2)& (0+255),b
 11110   003156  6BDC               	clrf	(??___xxtofl+3)& (0+255),b
 11111   003158  C0D9  F0DC         	movff	??___xxtofl,??___xxtofl+3
 11112   00315C  6BDB               	clrf	(??___xxtofl+2)& (0+255),b
 11113   00315E  6BDA               	clrf	(??___xxtofl+1)& (0+255),b
 11114   003160  6BD9               	clrf	??___xxtofl& (0+255),b
 11115   003162  51D9               	movf	??___xxtofl& (0+255),w,b
 11116   003164  13DF               	iorwf	___xxtofl@arg& (0+255),f,b
 11117   003166  51DA               	movf	(??___xxtofl+1)& (0+255),w,b
 11118   003168  13E0               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 11119   00316A  51DB               	movf	(??___xxtofl+2)& (0+255),w,b
 11120   00316C  13E1               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 11121   00316E  51DC               	movf	(??___xxtofl+3)& (0+255),w,b
 11122   003170  13E2               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 11123   003172                     
 11124                           ; BSR set to: 0
 11125   003172  51DD               	movf	___xxtofl@sign& (0+255),w,b
 11126   003174  B4D8               	btfsc	status,2,c
 11127   003176  EFBF  F018         	goto	u12361
 11128   00317A  EFC1  F018         	goto	u12360
 11129   00317E                     u12361:
 11130   00317E  EFC9  F018         	goto	l13766
 11131   003182                     u12360:
 11132   003182                     
 11133                           ; BSR set to: 0
 11134   003182  BFD8               	btfsc	(___xxtofl@val+3)& (0+255),7,b
 11135   003184  EFC8  F018         	goto	u12370
 11136   003188  EFC6  F018         	goto	u12371
 11137   00318C                     u12371:
 11138   00318C  EFC9  F018         	goto	l13766
 11139   003190                     u12370:
 11140   003190                     
 11141                           ; BSR set to: 0
 11142   003190  8FE2               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 11143   003192                     l13766:
 11144                           
 11145                           ; BSR set to: 0
 11146   003192  C0DF  F0D5         	movff	___xxtofl@arg,?___xxtofl
 11147   003196  C0E0  F0D6         	movff	___xxtofl@arg+1,?___xxtofl+1
 11148   00319A  C0E1  F0D7         	movff	___xxtofl@arg+2,?___xxtofl+2
 11149   00319E  C0E2  F0D8         	movff	___xxtofl@arg+3,?___xxtofl+3
 11150   0031A2                     l3402:
 11151                           
 11152                           ; BSR set to: 0
 11153   0031A2  0012               	return		;funcret
 11154   0031A4                     __end_of___xxtofl:
 11155                           	callstack 0
 11156                           
 11157 ;; *************** function ___fltol *****************
 11158 ;; Defined at:
 11159 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\fltol.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;  f1              4    0[BANK0 ] unsigned char 
 11162 ;; Auto vars:     Size  Location     Type
 11163 ;;  exp1            1    9[BANK0 ] unsigned char 
 11164 ;;  sign1           1    8[BANK0 ] unsigned char 
 11165 ;; Return value:  Size  Location     Type
 11166 ;;                  4    0[BANK0 ] long 
 11167 ;; Registers used:
 11168 ;;		wreg, status,2, status,0
 11169 ;; Tracked objects:
 11170 ;;		On entry : 0/0
 11171 ;;		On exit  : 0/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11174 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11175 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11176 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11177 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11178 ;;Total ram usage:       10 bytes
 11179 ;; Hardware stack levels used: 1
 11180 ;; Hardware stack levels required when called: 9
 11181 ;; This function calls:
 11182 ;;		Nothing
 11183 ;; This function is called by:
 11184 ;;		_EUSART_BaudRateCalculation
 11185 ;;		_Servo_Set_Angle
 11186 ;;		_I2C_Master_Mode_Configuration
 11187 ;; This function uses a non-reentrant model
 11188 ;;
 11189                           
 11190                           	psect	text25
 11191   003460                     __ptext25:
 11192                           	callstack 0
 11193   003460                     ___fltol:
 11194                           	callstack 18
 11195   003460  0100               	movlb	0	; () banked
 11196   003462  35D7               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11197   003464  35D8               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11198   003466  6FDE               	movwf	___fltol@exp1& (0+255),b
 11199   003468  51DE               	movf	___fltol@exp1& (0+255),w,b
 11200   00346A  A4D8               	btfss	status,2,c
 11201   00346C  EF3A  F01A         	goto	u12211
 11202   003470  EF3C  F01A         	goto	u12210
 11203   003474                     u12211:
 11204   003474  EF46  F01A         	goto	l13686
 11205   003478                     u12210:
 11206   003478                     l13682:
 11207                           
 11208                           ; BSR set to: 0
 11209   003478  0E00               	movlw	0
 11210   00347A  6FD5               	movwf	?___fltol& (0+255),b
 11211   00347C  0E00               	movlw	0
 11212   00347E  6FD6               	movwf	(?___fltol+1)& (0+255),b
 11213   003480  0E00               	movlw	0
 11214   003482  6FD7               	movwf	(?___fltol+2)& (0+255),b
 11215   003484  0E00               	movlw	0
 11216   003486  6FD8               	movwf	(?___fltol+3)& (0+255),b
 11217   003488  EFB3  F01A         	goto	l3041
 11218   00348C                     l13686:
 11219                           
 11220                           ; BSR set to: 0
 11221   00348C  C0D5  F0D9         	movff	___fltol@f1,??___fltol
 11222   003490  C0D6  F0DA         	movff	___fltol@f1+1,??___fltol+1
 11223   003494  C0D7  F0DB         	movff	___fltol@f1+2,??___fltol+2
 11224   003498  C0D8  F0DC         	movff	___fltol@f1+3,??___fltol+3
 11225   00349C  0E20               	movlw	32
 11226   00349E  EF56  F01A         	goto	u12220
 11227   0034A2                     u12225:
 11228   0034A2  90D8               	bcf	status,0,c
 11229   0034A4  33DC               	rrcf	(??___fltol+3)& (0+255),f,b
 11230   0034A6  33DB               	rrcf	(??___fltol+2)& (0+255),f,b
 11231   0034A8  33DA               	rrcf	(??___fltol+1)& (0+255),f,b
 11232   0034AA  33D9               	rrcf	??___fltol& (0+255),f,b
 11233   0034AC                     u12220:
 11234   0034AC  2EE8               	decfsz	wreg,f,c
 11235   0034AE  EF51  F01A         	goto	u12225
 11236   0034B2  51D9               	movf	??___fltol& (0+255),w,b
 11237   0034B4  6FDD               	movwf	___fltol@sign1& (0+255),b
 11238   0034B6                     
 11239                           ; BSR set to: 0
 11240   0034B6  8FD7               	bsf	(___fltol@f1+2)& (0+255),7,b
 11241   0034B8                     
 11242                           ; BSR set to: 0
 11243   0034B8  0EFF               	movlw	255
 11244   0034BA  17D5               	andwf	___fltol@f1& (0+255),f,b
 11245   0034BC  0EFF               	movlw	255
 11246   0034BE  17D6               	andwf	(___fltol@f1+1)& (0+255),f,b
 11247   0034C0  0EFF               	movlw	255
 11248   0034C2  17D7               	andwf	(___fltol@f1+2)& (0+255),f,b
 11249   0034C4  0E00               	movlw	0
 11250   0034C6  17D8               	andwf	(___fltol@f1+3)& (0+255),f,b
 11251   0034C8                     
 11252                           ; BSR set to: 0
 11253   0034C8  0E96               	movlw	150
 11254   0034CA  5FDE               	subwf	___fltol@exp1& (0+255),f,b
 11255   0034CC                     
 11256                           ; BSR set to: 0
 11257   0034CC  BFDE               	btfsc	___fltol@exp1& (0+255),7,b
 11258   0034CE  EF6D  F01A         	goto	u12230
 11259   0034D2  EF6B  F01A         	goto	u12231
 11260   0034D6                     u12231:
 11261   0034D6  EF83  F01A         	goto	l13706
 11262   0034DA                     u12230:
 11263   0034DA                     
 11264                           ; BSR set to: 0
 11265   0034DA  51DE               	movf	___fltol@exp1& (0+255),w,b
 11266   0034DC  0A80               	xorlw	128
 11267   0034DE  0F97               	addlw	151
 11268   0034E0  B0D8               	btfsc	status,0,c
 11269   0034E2  EF75  F01A         	goto	u12241
 11270   0034E6  EF77  F01A         	goto	u12240
 11271   0034EA                     u12241:
 11272   0034EA  EF79  F01A         	goto	l13702
 11273   0034EE                     u12240:
 11274   0034EE  EF3C  F01A         	goto	l13682
 11275   0034F2                     l13702:
 11276                           
 11277                           ; BSR set to: 0
 11278   0034F2  90D8               	bcf	status,0,c
 11279   0034F4  33D8               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11280   0034F6  33D7               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11281   0034F8  33D6               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11282   0034FA  33D5               	rrcf	___fltol@f1& (0+255),f,b
 11283   0034FC                     
 11284                           ; BSR set to: 0
 11285   0034FC  3FDE               	incfsz	___fltol@exp1& (0+255),f,b
 11286   0034FE  EF79  F01A         	goto	l13702
 11287   003502  EF9B  F01A         	goto	l13716
 11288   003506                     l13706:
 11289                           
 11290                           ; BSR set to: 0
 11291   003506  0E1F               	movlw	31
 11292   003508  65DE               	cpfsgt	___fltol@exp1& (0+255),b
 11293   00350A  EF89  F01A         	goto	u12251
 11294   00350E  EF8B  F01A         	goto	u12250
 11295   003512                     u12251:
 11296   003512  EF93  F01A         	goto	l13714
 11297   003516                     u12250:
 11298   003516  EF3C  F01A         	goto	l13682
 11299   00351A                     l13712:
 11300                           
 11301                           ; BSR set to: 0
 11302   00351A  90D8               	bcf	status,0,c
 11303   00351C  37D5               	rlcf	___fltol@f1& (0+255),f,b
 11304   00351E  37D6               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11305   003520  37D7               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11306   003522  37D8               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11307   003524  07DE               	decf	___fltol@exp1& (0+255),f,b
 11308   003526                     l13714:
 11309                           
 11310                           ; BSR set to: 0
 11311   003526  51DE               	movf	___fltol@exp1& (0+255),w,b
 11312   003528  A4D8               	btfss	status,2,c
 11313   00352A  EF99  F01A         	goto	u12261
 11314   00352E  EF9B  F01A         	goto	u12260
 11315   003532                     u12261:
 11316   003532  EF8D  F01A         	goto	l13712
 11317   003536                     u12260:
 11318   003536                     l13716:
 11319                           
 11320                           ; BSR set to: 0
 11321   003536  51DD               	movf	___fltol@sign1& (0+255),w,b
 11322   003538  B4D8               	btfsc	status,2,c
 11323   00353A  EFA1  F01A         	goto	u12271
 11324   00353E  EFA3  F01A         	goto	u12270
 11325   003542                     u12271:
 11326   003542  EFAB  F01A         	goto	l13720
 11327   003546                     u12270:
 11328   003546                     
 11329                           ; BSR set to: 0
 11330   003546  1FD8               	comf	(___fltol@f1+3)& (0+255),f,b
 11331   003548  1FD7               	comf	(___fltol@f1+2)& (0+255),f,b
 11332   00354A  1FD6               	comf	(___fltol@f1+1)& (0+255),f,b
 11333   00354C  6DD5               	negf	___fltol@f1& (0+255),b
 11334   00354E  0E00               	movlw	0
 11335   003550  23D6               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11336   003552  23D7               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11337   003554  23D8               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11338   003556                     l13720:
 11339                           
 11340                           ; BSR set to: 0
 11341   003556  C0D5  F0D5         	movff	___fltol@f1,?___fltol
 11342   00355A  C0D6  F0D6         	movff	___fltol@f1+1,?___fltol+1
 11343   00355E  C0D7  F0D7         	movff	___fltol@f1+2,?___fltol+2
 11344   003562  C0D8  F0D8         	movff	___fltol@f1+3,?___fltol+3
 11345   003566                     l3041:
 11346                           
 11347                           ; BSR set to: 0
 11348   003566  0012               	return		;funcret
 11349   003568                     __end_of___fltol:
 11350                           	callstack 0
 11351                           
 11352 ;; *************** function ___fldiv *****************
 11353 ;; Defined at:
 11354 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcdiv.c"
 11355 ;; Parameters:    Size  Location     Type
 11356 ;;  b               4   14[BANK0 ] long 
 11357 ;;  a               4   18[BANK0 ] long 
 11358 ;; Auto vars:     Size  Location     Type
 11359 ;;  grs             4   33[BANK0 ] unsigned long 
 11360 ;;  rem             4   26[BANK0 ] unsigned long 
 11361 ;;  new_exp         2   31[BANK0 ] short 
 11362 ;;  aexp            1   38[BANK0 ] unsigned char 
 11363 ;;  bexp            1   37[BANK0 ] unsigned char 
 11364 ;;  sign            1   30[BANK0 ] unsigned char 
 11365 ;; Return value:  Size  Location     Type
 11366 ;;                  4   14[BANK0 ] unsigned char 
 11367 ;; Registers used:
 11368 ;;		wreg, status,2, status,0
 11369 ;; Tracked objects:
 11370 ;;		On entry : 0/0
 11371 ;;		On exit  : 0/0
 11372 ;;		Unchanged: 0/0
 11373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11374 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11375 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11376 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11377 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11378 ;;Total ram usage:       25 bytes
 11379 ;; Hardware stack levels used: 1
 11380 ;; Hardware stack levels required when called: 9
 11381 ;; This function calls:
 11382 ;;		Nothing
 11383 ;; This function is called by:
 11384 ;;		_EUSART_BaudRateCalculation
 11385 ;;		_Servo_Set_Angle
 11386 ;;		_I2C_Master_Mode_Configuration
 11387 ;; This function uses a non-reentrant model
 11388 ;;
 11389                           
 11390                           	psect	text26
 11391   002410                     __ptext26:
 11392                           	callstack 0
 11393   002410                     ___fldiv:
 11394                           	callstack 18
 11395   002410  0100               	movlb	0	; () banked
 11396   002412  51E6               	movf	(___fldiv@b+3)& (0+255),w,b
 11397   002414  0B80               	andlw	128
 11398   002416  6FF3               	movwf	___fldiv@sign& (0+255),b
 11399   002418  51E6               	movf	(___fldiv@b+3)& (0+255),w,b
 11400   00241A  25E6               	addwf	(___fldiv@b+3)& (0+255),w,b
 11401   00241C  6FFA               	movwf	___fldiv@bexp& (0+255),b
 11402   00241E                     
 11403                           ; BSR set to: 0
 11404   00241E  AFE5               	btfss	(___fldiv@b+2)& (0+255),7,b
 11405   002420  EF14  F012         	goto	u11981
 11406   002424  EF16  F012         	goto	u11980
 11407   002428                     u11981:
 11408   002428  EF17  F012         	goto	l13550
 11409   00242C                     u11980:
 11410   00242C                     
 11411                           ; BSR set to: 0
 11412   00242C  81FA               	bsf	___fldiv@bexp& (0+255),0,b
 11413   00242E                     l13550:
 11414                           
 11415                           ; BSR set to: 0
 11416   00242E  51FA               	movf	___fldiv@bexp& (0+255),w,b
 11417   002430  B4D8               	btfsc	status,2,c
 11418   002432  EF1D  F012         	goto	u11991
 11419   002436  EF1F  F012         	goto	u11990
 11420   00243A                     u11991:
 11421   00243A  EF33  F012         	goto	l13560
 11422   00243E                     u11990:
 11423   00243E                     
 11424                           ; BSR set to: 0
 11425   00243E  29FA               	incf	___fldiv@bexp& (0+255),w,b
 11426   002440  A4D8               	btfss	status,2,c
 11427   002442  EF25  F012         	goto	u12001
 11428   002446  EF27  F012         	goto	u12000
 11429   00244A                     u12001:
 11430   00244A  EF2F  F012         	goto	l13556
 11431   00244E                     u12000:
 11432   00244E                     
 11433                           ; BSR set to: 0
 11434   00244E  0E00               	movlw	0
 11435   002450  6FE3               	movwf	___fldiv@b& (0+255),b
 11436   002452  0E00               	movlw	0
 11437   002454  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 11438   002456  0E00               	movlw	0
 11439   002458  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 11440   00245A  0E00               	movlw	0
 11441   00245C  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 11442   00245E                     l13556:
 11443                           
 11444                           ; BSR set to: 0
 11445   00245E  8FE5               	bsf	(___fldiv@b+2)& (0+255),7,b
 11446   002460                     
 11447                           ; BSR set to: 0
 11448   002460  6BE6               	clrf	(___fldiv@b+3)& (0+255),b
 11449   002462  EF3B  F012         	goto	l13562
 11450   002466                     l13560:
 11451                           
 11452                           ; BSR set to: 0
 11453   002466  0E00               	movlw	0
 11454   002468  6FE3               	movwf	___fldiv@b& (0+255),b
 11455   00246A  0E00               	movlw	0
 11456   00246C  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 11457   00246E  0E00               	movlw	0
 11458   002470  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 11459   002472  0E00               	movlw	0
 11460   002474  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 11461   002476                     l13562:
 11462                           
 11463                           ; BSR set to: 0
 11464   002476  51EA               	movf	(___fldiv@a+3)& (0+255),w,b
 11465   002478  0B80               	andlw	128
 11466   00247A  1BF3               	xorwf	___fldiv@sign& (0+255),f,b
 11467   00247C                     
 11468                           ; BSR set to: 0
 11469   00247C  51EA               	movf	(___fldiv@a+3)& (0+255),w,b
 11470   00247E  25EA               	addwf	(___fldiv@a+3)& (0+255),w,b
 11471   002480  6FFB               	movwf	___fldiv@aexp& (0+255),b
 11472   002482                     
 11473                           ; BSR set to: 0
 11474   002482  AFE9               	btfss	(___fldiv@a+2)& (0+255),7,b
 11475   002484  EF46  F012         	goto	u12011
 11476   002488  EF48  F012         	goto	u12010
 11477   00248C                     u12011:
 11478   00248C  EF49  F012         	goto	l13570
 11479   002490                     u12010:
 11480   002490                     
 11481                           ; BSR set to: 0
 11482   002490  81FB               	bsf	___fldiv@aexp& (0+255),0,b
 11483   002492                     l13570:
 11484                           
 11485                           ; BSR set to: 0
 11486   002492  51FB               	movf	___fldiv@aexp& (0+255),w,b
 11487   002494  B4D8               	btfsc	status,2,c
 11488   002496  EF4F  F012         	goto	u12021
 11489   00249A  EF51  F012         	goto	u12020
 11490   00249E                     u12021:
 11491   00249E  EF65  F012         	goto	l13580
 11492   0024A2                     u12020:
 11493   0024A2                     
 11494                           ; BSR set to: 0
 11495   0024A2  29FB               	incf	___fldiv@aexp& (0+255),w,b
 11496   0024A4  A4D8               	btfss	status,2,c
 11497   0024A6  EF57  F012         	goto	u12031
 11498   0024AA  EF59  F012         	goto	u12030
 11499   0024AE                     u12031:
 11500   0024AE  EF61  F012         	goto	l13576
 11501   0024B2                     u12030:
 11502   0024B2                     
 11503                           ; BSR set to: 0
 11504   0024B2  0E00               	movlw	0
 11505   0024B4  6FE7               	movwf	___fldiv@a& (0+255),b
 11506   0024B6  0E00               	movlw	0
 11507   0024B8  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
 11508   0024BA  0E00               	movlw	0
 11509   0024BC  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
 11510   0024BE  0E00               	movlw	0
 11511   0024C0  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
 11512   0024C2                     l13576:
 11513                           
 11514                           ; BSR set to: 0
 11515   0024C2  8FE9               	bsf	(___fldiv@a+2)& (0+255),7,b
 11516   0024C4                     
 11517                           ; BSR set to: 0
 11518   0024C4  6BEA               	clrf	(___fldiv@a+3)& (0+255),b
 11519   0024C6  EF6D  F012         	goto	l13582
 11520   0024CA                     l13580:
 11521                           
 11522                           ; BSR set to: 0
 11523   0024CA  0E00               	movlw	0
 11524   0024CC  6FE7               	movwf	___fldiv@a& (0+255),b
 11525   0024CE  0E00               	movlw	0
 11526   0024D0  6FE8               	movwf	(___fldiv@a+1)& (0+255),b
 11527   0024D2  0E00               	movlw	0
 11528   0024D4  6FE9               	movwf	(___fldiv@a+2)& (0+255),b
 11529   0024D6  0E00               	movlw	0
 11530   0024D8  6FEA               	movwf	(___fldiv@a+3)& (0+255),b
 11531   0024DA                     l13582:
 11532                           
 11533                           ; BSR set to: 0
 11534   0024DA  51E7               	movf	___fldiv@a& (0+255),w,b
 11535   0024DC  11E8               	iorwf	(___fldiv@a+1)& (0+255),w,b
 11536   0024DE  11E9               	iorwf	(___fldiv@a+2)& (0+255),w,b
 11537   0024E0  11EA               	iorwf	(___fldiv@a+3)& (0+255),w,b
 11538   0024E2  A4D8               	btfss	status,2,c
 11539   0024E4  EF76  F012         	goto	u12041
 11540   0024E8  EF78  F012         	goto	u12040
 11541   0024EC                     u12041:
 11542   0024EC  EF90  F012         	goto	l13594
 11543   0024F0                     u12040:
 11544   0024F0                     
 11545                           ; BSR set to: 0
 11546   0024F0  0E00               	movlw	0
 11547   0024F2  6FE3               	movwf	___fldiv@b& (0+255),b
 11548   0024F4  0E00               	movlw	0
 11549   0024F6  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 11550   0024F8  0E00               	movlw	0
 11551   0024FA  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 11552   0024FC  0E00               	movlw	0
 11553   0024FE  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 11554   002500                     
 11555                           ; BSR set to: 0
 11556   002500  0E80               	movlw	128
 11557   002502  13E5               	iorwf	(___fldiv@b+2)& (0+255),f,b
 11558   002504  0E7F               	movlw	127
 11559   002506  13E6               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11560   002508                     l13588:
 11561                           
 11562                           ; BSR set to: 0
 11563   002508  51F3               	movf	___fldiv@sign& (0+255),w,b
 11564   00250A  13E6               	iorwf	(___fldiv@b+3)& (0+255),f,b
 11565   00250C                     
 11566                           ; BSR set to: 0
 11567   00250C  C0E3  F0E3         	movff	___fldiv@b,?___fldiv
 11568   002510  C0E4  F0E4         	movff	___fldiv@b+1,?___fldiv+1
 11569   002514  C0E5  F0E5         	movff	___fldiv@b+2,?___fldiv+2
 11570   002518  C0E6  F0E6         	movff	___fldiv@b+3,?___fldiv+3
 11571   00251C  EFD0  F013         	goto	l3326
 11572   002520                     l13594:
 11573                           
 11574                           ; BSR set to: 0
 11575   002520  51FA               	movf	___fldiv@bexp& (0+255),w,b
 11576   002522  A4D8               	btfss	status,2,c
 11577   002524  EF96  F012         	goto	u12051
 11578   002528  EF98  F012         	goto	u12050
 11579   00252C                     u12051:
 11580   00252C  EFA2  F012         	goto	l13602
 11581   002530                     u12050:
 11582   002530                     
 11583                           ; BSR set to: 0
 11584   002530  0E00               	movlw	0
 11585   002532  6FE3               	movwf	?___fldiv& (0+255),b
 11586   002534  0E00               	movlw	0
 11587   002536  6FE4               	movwf	(?___fldiv+1)& (0+255),b
 11588   002538  0E00               	movlw	0
 11589   00253A  6FE5               	movwf	(?___fldiv+2)& (0+255),b
 11590   00253C  0E00               	movlw	0
 11591   00253E  6FE6               	movwf	(?___fldiv+3)& (0+255),b
 11592   002540  EFD0  F013         	goto	l3326
 11593   002544                     l13602:
 11594                           
 11595                           ; BSR set to: 0
 11596   002544  51FB               	movf	___fldiv@aexp& (0+255),w,b
 11597   002546  C0FA  F0EB         	movff	___fldiv@bexp,??___fldiv
 11598   00254A  6BEC               	clrf	(??___fldiv+1)& (0+255),b
 11599   00254C  5FEB               	subwf	??___fldiv& (0+255),f,b
 11600   00254E  0E00               	movlw	0
 11601   002550  5BEC               	subwfb	(??___fldiv+1)& (0+255),f,b
 11602   002552  0E7F               	movlw	127
 11603   002554  25EB               	addwf	??___fldiv& (0+255),w,b
 11604   002556  6FF4               	movwf	___fldiv@new_exp& (0+255),b
 11605   002558  0E00               	movlw	0
 11606   00255A  21EC               	addwfc	(??___fldiv+1)& (0+255),w,b
 11607   00255C  6FF5               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11608   00255E                     
 11609                           ; BSR set to: 0
 11610   00255E  C0E3  F0EF         	movff	___fldiv@b,___fldiv@rem
 11611   002562  C0E4  F0F0         	movff	___fldiv@b+1,___fldiv@rem+1
 11612   002566  C0E5  F0F1         	movff	___fldiv@b+2,___fldiv@rem+2
 11613   00256A  C0E6  F0F2         	movff	___fldiv@b+3,___fldiv@rem+3
 11614   00256E                     
 11615                           ; BSR set to: 0
 11616   00256E  0E00               	movlw	0
 11617   002570  6FE3               	movwf	___fldiv@b& (0+255),b
 11618   002572  0E00               	movlw	0
 11619   002574  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 11620   002576  0E00               	movlw	0
 11621   002578  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 11622   00257A  0E00               	movlw	0
 11623   00257C  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 11624   00257E                     
 11625                           ; BSR set to: 0
 11626   00257E  0E00               	movlw	0
 11627   002580  6FF6               	movwf	___fldiv@grs& (0+255),b
 11628   002582  0E00               	movlw	0
 11629   002584  6FF7               	movwf	(___fldiv@grs+1)& (0+255),b
 11630   002586  0E00               	movlw	0
 11631   002588  6FF8               	movwf	(___fldiv@grs+2)& (0+255),b
 11632   00258A  0E00               	movlw	0
 11633   00258C  6FF9               	movwf	(___fldiv@grs+3)& (0+255),b
 11634   00258E                     
 11635                           ; BSR set to: 0
 11636   00258E  6BFB               	clrf	___fldiv@aexp& (0+255),b
 11637   002590  EF02  F013         	goto	l3328
 11638   002594                     l13612:
 11639                           
 11640                           ; BSR set to: 0
 11641   002594  51FB               	movf	___fldiv@aexp& (0+255),w,b
 11642   002596  B4D8               	btfsc	status,2,c
 11643   002598  EFD0  F012         	goto	u12061
 11644   00259C  EFD2  F012         	goto	u12060
 11645   0025A0                     u12061:
 11646   0025A0  EFE9  F012         	goto	l13620
 11647   0025A4                     u12060:
 11648   0025A4                     
 11649                           ; BSR set to: 0
 11650   0025A4  90D8               	bcf	status,0,c
 11651   0025A6  37EF               	rlcf	___fldiv@rem& (0+255),f,b
 11652   0025A8  37F0               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 11653   0025AA  37F1               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 11654   0025AC  37F2               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 11655   0025AE  90D8               	bcf	status,0,c
 11656   0025B0  37E3               	rlcf	___fldiv@b& (0+255),f,b
 11657   0025B2  37E4               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11658   0025B4  37E5               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11659   0025B6  37E6               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11660   0025B8                     
 11661                           ; BSR set to: 0
 11662   0025B8  AFF9               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11663   0025BA  EFE1  F012         	goto	u12071
 11664   0025BE  EFE3  F012         	goto	u12070
 11665   0025C2                     u12071:
 11666   0025C2  EFE4  F012         	goto	l3331
 11667   0025C6                     u12070:
 11668   0025C6                     
 11669                           ; BSR set to: 0
 11670   0025C6  81E3               	bsf	___fldiv@b& (0+255),0,b
 11671   0025C8                     l3331:
 11672                           
 11673                           ; BSR set to: 0
 11674   0025C8  90D8               	bcf	status,0,c
 11675   0025CA  37F6               	rlcf	___fldiv@grs& (0+255),f,b
 11676   0025CC  37F7               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11677   0025CE  37F8               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11678   0025D0  37F9               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11679   0025D2                     l13620:
 11680                           
 11681                           ; BSR set to: 0
 11682   0025D2  51E7               	movf	___fldiv@a& (0+255),w,b
 11683   0025D4  5DEF               	subwf	___fldiv@rem& (0+255),w,b
 11684   0025D6  51E8               	movf	(___fldiv@a+1)& (0+255),w,b
 11685   0025D8  59F0               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 11686   0025DA  51E9               	movf	(___fldiv@a+2)& (0+255),w,b
 11687   0025DC  59F1               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 11688   0025DE  51EA               	movf	(___fldiv@a+3)& (0+255),w,b
 11689   0025E0  59F2               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 11690   0025E2  A0D8               	btfss	status,0,c
 11691   0025E4  EFF6  F012         	goto	u12081
 11692   0025E8  EFF8  F012         	goto	u12080
 11693   0025EC                     u12081:
 11694   0025EC  EF01  F013         	goto	l13626
 11695   0025F0                     u12080:
 11696   0025F0                     
 11697                           ; BSR set to: 0
 11698   0025F0  8DF9               	bsf	(___fldiv@grs+3)& (0+255),6,b
 11699   0025F2                     
 11700                           ; BSR set to: 0
 11701   0025F2  51E7               	movf	___fldiv@a& (0+255),w,b
 11702   0025F4  5FEF               	subwf	___fldiv@rem& (0+255),f,b
 11703   0025F6  51E8               	movf	(___fldiv@a+1)& (0+255),w,b
 11704   0025F8  5BF0               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 11705   0025FA  51E9               	movf	(___fldiv@a+2)& (0+255),w,b
 11706   0025FC  5BF1               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 11707   0025FE  51EA               	movf	(___fldiv@a+3)& (0+255),w,b
 11708   002600  5BF2               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 11709   002602                     l13626:
 11710                           
 11711                           ; BSR set to: 0
 11712   002602  2BFB               	incf	___fldiv@aexp& (0+255),f,b
 11713   002604                     l3328:
 11714                           
 11715                           ; BSR set to: 0
 11716   002604  0E19               	movlw	25
 11717   002606  65FB               	cpfsgt	___fldiv@aexp& (0+255),b
 11718   002608  EF08  F013         	goto	u12091
 11719   00260C  EF0A  F013         	goto	u12090
 11720   002610                     u12091:
 11721   002610  EFCA  F012         	goto	l13612
 11722   002614                     u12090:
 11723   002614                     
 11724                           ; BSR set to: 0
 11725   002614  51EF               	movf	___fldiv@rem& (0+255),w,b
 11726   002616  11F0               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 11727   002618  11F1               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 11728   00261A  11F2               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 11729   00261C  B4D8               	btfsc	status,2,c
 11730   00261E  EF13  F013         	goto	u12101
 11731   002622  EF15  F013         	goto	u12100
 11732   002626                     u12101:
 11733   002626  EF2D  F013         	goto	l13638
 11734   00262A                     u12100:
 11735   00262A                     
 11736                           ; BSR set to: 0
 11737   00262A  81F6               	bsf	___fldiv@grs& (0+255),0,b
 11738   00262C  EF2D  F013         	goto	l13638
 11739   002630                     l13632:
 11740                           
 11741                           ; BSR set to: 0
 11742   002630  90D8               	bcf	status,0,c
 11743   002632  37E3               	rlcf	___fldiv@b& (0+255),f,b
 11744   002634  37E4               	rlcf	(___fldiv@b+1)& (0+255),f,b
 11745   002636  37E5               	rlcf	(___fldiv@b+2)& (0+255),f,b
 11746   002638  37E6               	rlcf	(___fldiv@b+3)& (0+255),f,b
 11747   00263A                     
 11748                           ; BSR set to: 0
 11749   00263A  AFF9               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11750   00263C  EF22  F013         	goto	u12111
 11751   002640  EF24  F013         	goto	u12110
 11752   002644                     u12111:
 11753   002644  EF25  F013         	goto	l3337
 11754   002648                     u12110:
 11755   002648                     
 11756                           ; BSR set to: 0
 11757   002648  81E3               	bsf	___fldiv@b& (0+255),0,b
 11758   00264A                     l3337:
 11759                           
 11760                           ; BSR set to: 0
 11761   00264A  90D8               	bcf	status,0,c
 11762   00264C  37F6               	rlcf	___fldiv@grs& (0+255),f,b
 11763   00264E  37F7               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 11764   002650  37F8               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 11765   002652  37F9               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 11766   002654  07F4               	decf	___fldiv@new_exp& (0+255),f,b
 11767   002656  A0D8               	btfss	status,0,c
 11768   002658  07F5               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 11769   00265A                     l13638:
 11770                           
 11771                           ; BSR set to: 0
 11772   00265A  AFE5               	btfss	(___fldiv@b+2)& (0+255),7,b
 11773   00265C  EF32  F013         	goto	u12121
 11774   002660  EF34  F013         	goto	u12120
 11775   002664                     u12121:
 11776   002664  EF18  F013         	goto	l13632
 11777   002668                     u12120:
 11778   002668                     
 11779                           ; BSR set to: 0
 11780   002668  6BFB               	clrf	___fldiv@aexp& (0+255),b
 11781   00266A  AFF9               	btfss	(___fldiv@grs+3)& (0+255),7,b
 11782   00266C  EF3A  F013         	goto	u12131
 11783   002670  EF3C  F013         	goto	u12130
 11784   002674                     u12131:
 11785   002674  EF60  F013         	goto	l3339
 11786   002678                     u12130:
 11787   002678                     
 11788                           ; BSR set to: 0
 11789   002678  0EFF               	movlw	255
 11790   00267A  15F6               	andwf	___fldiv@grs& (0+255),w,b
 11791   00267C  6FEB               	movwf	??___fldiv& (0+255),b
 11792   00267E  0EFF               	movlw	255
 11793   002680  15F7               	andwf	(___fldiv@grs+1)& (0+255),w,b
 11794   002682  6FEC               	movwf	(??___fldiv+1)& (0+255),b
 11795   002684  0EFF               	movlw	255
 11796   002686  15F8               	andwf	(___fldiv@grs+2)& (0+255),w,b
 11797   002688  6FED               	movwf	(??___fldiv+2)& (0+255),b
 11798   00268A  0E7F               	movlw	127
 11799   00268C  15F9               	andwf	(___fldiv@grs+3)& (0+255),w,b
 11800   00268E  6FEE               	movwf	(??___fldiv+3)& (0+255),b
 11801   002690  51EB               	movf	??___fldiv& (0+255),w,b
 11802   002692  11EC               	iorwf	(??___fldiv+1)& (0+255),w,b
 11803   002694  11ED               	iorwf	(??___fldiv+2)& (0+255),w,b
 11804   002696  11EE               	iorwf	(??___fldiv+3)& (0+255),w,b
 11805   002698  B4D8               	btfsc	status,2,c
 11806   00269A  EF51  F013         	goto	u12141
 11807   00269E  EF53  F013         	goto	u12140
 11808   0026A2                     u12141:
 11809   0026A2  EF57  F013         	goto	l3340
 11810   0026A6                     u12140:
 11811   0026A6                     l13642:
 11812                           
 11813                           ; BSR set to: 0
 11814   0026A6  0E01               	movlw	1
 11815   0026A8  6FFB               	movwf	___fldiv@aexp& (0+255),b
 11816   0026AA  EF60  F013         	goto	l3339
 11817   0026AE                     l3340:
 11818                           
 11819                           ; BSR set to: 0
 11820   0026AE  A1E3               	btfss	___fldiv@b& (0+255),0,b
 11821   0026B0  EF5C  F013         	goto	u12151
 11822   0026B4  EF5E  F013         	goto	u12150
 11823   0026B8                     u12151:
 11824   0026B8  EF60  F013         	goto	l3339
 11825   0026BC                     u12150:
 11826   0026BC  EF53  F013         	goto	l13642
 11827   0026C0                     l3339:
 11828                           
 11829                           ; BSR set to: 0
 11830   0026C0  51FB               	movf	___fldiv@aexp& (0+255),w,b
 11831   0026C2  B4D8               	btfsc	status,2,c
 11832   0026C4  EF66  F013         	goto	u12161
 11833   0026C8  EF68  F013         	goto	u12160
 11834   0026CC                     u12161:
 11835   0026CC  EF8C  F013         	goto	l13654
 11836   0026D0                     u12160:
 11837   0026D0                     
 11838                           ; BSR set to: 0
 11839   0026D0  0E01               	movlw	1
 11840   0026D2  27E3               	addwf	___fldiv@b& (0+255),f,b
 11841   0026D4  0E00               	movlw	0
 11842   0026D6  23E4               	addwfc	(___fldiv@b+1)& (0+255),f,b
 11843   0026D8  23E5               	addwfc	(___fldiv@b+2)& (0+255),f,b
 11844   0026DA  23E6               	addwfc	(___fldiv@b+3)& (0+255),f,b
 11845   0026DC                     
 11846                           ; BSR set to: 0
 11847   0026DC  A1E6               	btfss	(___fldiv@b+3)& (0+255),0,b
 11848   0026DE  EF73  F013         	goto	u12171
 11849   0026E2  EF75  F013         	goto	u12170
 11850   0026E6                     u12171:
 11851   0026E6  EF8C  F013         	goto	l13654
 11852   0026EA                     u12170:
 11853   0026EA                     
 11854                           ; BSR set to: 0
 11855   0026EA  C0E3  F0EB         	movff	___fldiv@b,??___fldiv
 11856   0026EE  C0E4  F0EC         	movff	___fldiv@b+1,??___fldiv+1
 11857   0026F2  C0E5  F0ED         	movff	___fldiv@b+2,??___fldiv+2
 11858   0026F6  C0E6  F0EE         	movff	___fldiv@b+3,??___fldiv+3
 11859   0026FA  35EE               	rlcf	(??___fldiv+3)& (0+255),w,b
 11860   0026FC  33EE               	rrcf	(??___fldiv+3)& (0+255),f,b
 11861   0026FE  33ED               	rrcf	(??___fldiv+2)& (0+255),f,b
 11862   002700  33EC               	rrcf	(??___fldiv+1)& (0+255),f,b
 11863   002702  33EB               	rrcf	??___fldiv& (0+255),f,b
 11864   002704  C0EB  F0E3         	movff	??___fldiv,___fldiv@b
 11865   002708  C0EC  F0E4         	movff	??___fldiv+1,___fldiv@b+1
 11866   00270C  C0ED  F0E5         	movff	??___fldiv+2,___fldiv@b+2
 11867   002710  C0EE  F0E6         	movff	??___fldiv+3,___fldiv@b+3
 11868   002714                     
 11869                           ; BSR set to: 0
 11870   002714  4BF4               	infsnz	___fldiv@new_exp& (0+255),f,b
 11871   002716  2BF5               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 11872   002718                     l13654:
 11873                           
 11874                           ; BSR set to: 0
 11875   002718  BFF5               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11876   00271A  EF97  F013         	goto	u12181
 11877   00271E  51F5               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11878   002720  E108               	bnz	u12180
 11879   002722  29F4               	incf	___fldiv@new_exp& (0+255),w,b
 11880   002724  A0D8               	btfss	status,0,c
 11881   002726  EF97  F013         	goto	u12181
 11882   00272A  EF99  F013         	goto	u12180
 11883   00272E                     u12181:
 11884   00272E  EFA4  F013         	goto	l13658
 11885   002732                     u12180:
 11886   002732                     
 11887                           ; BSR set to: 0
 11888   002732  0E00               	movlw	0
 11889   002734  6FF5               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11890   002736  69F4               	setf	___fldiv@new_exp& (0+255),b
 11891   002738  0E00               	movlw	0
 11892   00273A  6FE3               	movwf	___fldiv@b& (0+255),b
 11893   00273C  0E00               	movlw	0
 11894   00273E  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 11895   002740  0E00               	movlw	0
 11896   002742  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 11897   002744  0E00               	movlw	0
 11898   002746  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 11899   002748                     l13658:
 11900                           
 11901                           ; BSR set to: 0
 11902   002748  BFF5               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 11903   00274A  EFB1  F013         	goto	u12190
 11904   00274E  51F5               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 11905   002750  E106               	bnz	u12191
 11906   002752  05F4               	decf	___fldiv@new_exp& (0+255),w,b
 11907   002754  B0D8               	btfsc	status,0,c
 11908   002756  EFAF  F013         	goto	u12191
 11909   00275A  EFB1  F013         	goto	u12190
 11910   00275E                     u12191:
 11911   00275E  EFBE  F013         	goto	l13664
 11912   002762                     u12190:
 11913   002762                     
 11914                           ; BSR set to: 0
 11915   002762  0E00               	movlw	0
 11916   002764  6FF5               	movwf	(___fldiv@new_exp+1)& (0+255),b
 11917   002766  0E00               	movlw	0
 11918   002768  6FF4               	movwf	___fldiv@new_exp& (0+255),b
 11919   00276A  0E00               	movlw	0
 11920   00276C  6FE3               	movwf	___fldiv@b& (0+255),b
 11921   00276E  0E00               	movlw	0
 11922   002770  6FE4               	movwf	(___fldiv@b+1)& (0+255),b
 11923   002772  0E00               	movlw	0
 11924   002774  6FE5               	movwf	(___fldiv@b+2)& (0+255),b
 11925   002776  0E00               	movlw	0
 11926   002778  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 11927   00277A                     
 11928                           ; BSR set to: 0
 11929   00277A  6BF3               	clrf	___fldiv@sign& (0+255),b
 11930   00277C                     l13664:
 11931                           
 11932                           ; BSR set to: 0
 11933   00277C  C0F4  F0FA         	movff	___fldiv@new_exp,___fldiv@bexp
 11934   002780                     
 11935                           ; BSR set to: 0
 11936   002780  A1FA               	btfss	___fldiv@bexp& (0+255),0,b
 11937   002782  EFC5  F013         	goto	u12201
 11938   002786  EFC7  F013         	goto	u12200
 11939   00278A                     u12201:
 11940   00278A  EFCA  F013         	goto	l13670
 11941   00278E                     u12200:
 11942   00278E                     
 11943                           ; BSR set to: 0
 11944   00278E  8FE5               	bsf	(___fldiv@b+2)& (0+255),7,b
 11945   002790  EFCB  F013         	goto	l13672
 11946   002794                     l13670:
 11947                           
 11948                           ; BSR set to: 0
 11949   002794  9FE5               	bcf	(___fldiv@b+2)& (0+255),7,b
 11950   002796                     l13672:
 11951                           
 11952                           ; BSR set to: 0
 11953   002796  90D8               	bcf	status,0,c
 11954   002798  31FA               	rrcf	___fldiv@bexp& (0+255),w,b
 11955   00279A  6FE6               	movwf	(___fldiv@b+3)& (0+255),b
 11956   00279C  EF84  F012         	goto	l13588
 11957   0027A0                     l3326:
 11958                           
 11959                           ; BSR set to: 0
 11960   0027A0  0012               	return		;funcret
 11961   0027A2                     __end_of___fldiv:
 11962                           	callstack 0
 11963                           
 11964 ;; *************** function ___fladd *****************
 11965 ;; Defined at:
 11966 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\sprcadd.c"
 11967 ;; Parameters:    Size  Location     Type
 11968 ;;  b               4    0[BANK1 ] unsigned char 
 11969 ;;  a               4    4[BANK1 ] unsigned char 
 11970 ;; Auto vars:     Size  Location     Type
 11971 ;;  grs             1   11[BANK1 ] unsigned char 
 11972 ;;  bexp            1   10[BANK1 ] unsigned char 
 11973 ;;  aexp            1    9[BANK1 ] unsigned char 
 11974 ;;  signs           1    8[BANK1 ] unsigned char 
 11975 ;; Return value:  Size  Location     Type
 11976 ;;                  4    0[BANK1 ] unsigned char 
 11977 ;; Registers used:
 11978 ;;		wreg, status,2, status,0
 11979 ;; Tracked objects:
 11980 ;;		On entry : 0/0
 11981 ;;		On exit  : 0/0
 11982 ;;		Unchanged: 0/0
 11983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11984 ;;      Params:         0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11985 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11986 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11987 ;;      Totals:         0       4      12       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11988 ;;Total ram usage:       16 bytes
 11989 ;; Hardware stack levels used: 1
 11990 ;; Hardware stack levels required when called: 9
 11991 ;; This function calls:
 11992 ;;		Nothing
 11993 ;; This function is called by:
 11994 ;;		_EUSART_BaudRateCalculation
 11995 ;;		_Servo_Set_Angle
 11996 ;;		_I2C_Master_Mode_Configuration
 11997 ;; This function uses a non-reentrant model
 11998 ;;
 11999                           
 12000                           	psect	text27
 12001   001F22                     __ptext27:
 12002                           	callstack 0
 12003   001F22                     ___fladd:
 12004                           	callstack 18
 12005   001F22  0101               	movlb	1	; () banked
 12006   001F24  5173               	movf	(___fladd@b+3)& (0+255),w,b
 12007   001F26  0B80               	andlw	128
 12008   001F28  6F78               	movwf	___fladd@signs& (0+255),b
 12009   001F2A  5173               	movf	(___fladd@b+3)& (0+255),w,b
 12010   001F2C  2573               	addwf	(___fladd@b+3)& (0+255),w,b
 12011   001F2E  6F7A               	movwf	___fladd@bexp& (0+255),b
 12012   001F30                     
 12013                           ; BSR set to: 1
 12014   001F30  AF72               	btfss	(___fladd@b+2)& (0+255),7,b
 12015   001F32  EF9D  F00F         	goto	u11591
 12016   001F36  EF9F  F00F         	goto	u11590
 12017   001F3A                     u11591:
 12018   001F3A  EFA0  F00F         	goto	l13356
 12019   001F3E                     u11590:
 12020   001F3E                     
 12021                           ; BSR set to: 1
 12022   001F3E  817A               	bsf	___fladd@bexp& (0+255),0,b
 12023   001F40                     l13356:
 12024                           
 12025                           ; BSR set to: 1
 12026   001F40  517A               	movf	___fladd@bexp& (0+255),w,b
 12027   001F42  B4D8               	btfsc	status,2,c
 12028   001F44  EFA6  F00F         	goto	u11601
 12029   001F48  EFA8  F00F         	goto	u11600
 12030   001F4C                     u11601:
 12031   001F4C  EFBC  F00F         	goto	l13366
 12032   001F50                     u11600:
 12033   001F50                     
 12034                           ; BSR set to: 1
 12035   001F50  297A               	incf	___fladd@bexp& (0+255),w,b
 12036   001F52  A4D8               	btfss	status,2,c
 12037   001F54  EFAE  F00F         	goto	u11611
 12038   001F58  EFB0  F00F         	goto	u11610
 12039   001F5C                     u11611:
 12040   001F5C  EFB8  F00F         	goto	l13362
 12041   001F60                     u11610:
 12042   001F60                     
 12043                           ; BSR set to: 1
 12044   001F60  0E00               	movlw	0
 12045   001F62  6F70               	movwf	___fladd@b& (0+255),b
 12046   001F64  0E00               	movlw	0
 12047   001F66  6F71               	movwf	(___fladd@b+1)& (0+255),b
 12048   001F68  0E00               	movlw	0
 12049   001F6A  6F72               	movwf	(___fladd@b+2)& (0+255),b
 12050   001F6C  0E00               	movlw	0
 12051   001F6E  6F73               	movwf	(___fladd@b+3)& (0+255),b
 12052   001F70                     l13362:
 12053                           
 12054                           ; BSR set to: 1
 12055   001F70  8F72               	bsf	(___fladd@b+2)& (0+255),7,b
 12056   001F72                     
 12057                           ; BSR set to: 1
 12058   001F72  6B73               	clrf	(___fladd@b+3)& (0+255),b
 12059   001F74  EFC4  F00F         	goto	l13368
 12060   001F78                     l13366:
 12061                           
 12062                           ; BSR set to: 1
 12063   001F78  0E00               	movlw	0
 12064   001F7A  6F70               	movwf	___fladd@b& (0+255),b
 12065   001F7C  0E00               	movlw	0
 12066   001F7E  6F71               	movwf	(___fladd@b+1)& (0+255),b
 12067   001F80  0E00               	movlw	0
 12068   001F82  6F72               	movwf	(___fladd@b+2)& (0+255),b
 12069   001F84  0E00               	movlw	0
 12070   001F86  6F73               	movwf	(___fladd@b+3)& (0+255),b
 12071   001F88                     l13368:
 12072                           
 12073                           ; BSR set to: 1
 12074   001F88  5177               	movf	(___fladd@a+3)& (0+255),w,b
 12075   001F8A  0B80               	andlw	128
 12076   001F8C  6F79               	movwf	___fladd@aexp& (0+255),b
 12077   001F8E                     
 12078                           ; BSR set to: 1
 12079   001F8E  5178               	movf	___fladd@signs& (0+255),w,b
 12080   001F90  1979               	xorwf	___fladd@aexp& (0+255),w,b
 12081   001F92  B4D8               	btfsc	status,2,c
 12082   001F94  EFCE  F00F         	goto	u11621
 12083   001F98  EFD0  F00F         	goto	u11620
 12084   001F9C                     u11621:
 12085   001F9C  EFD1  F00F         	goto	l13374
 12086   001FA0                     u11620:
 12087   001FA0                     
 12088                           ; BSR set to: 1
 12089   001FA0  8D78               	bsf	___fladd@signs& (0+255),6,b
 12090   001FA2                     l13374:
 12091                           
 12092                           ; BSR set to: 1
 12093   001FA2  5177               	movf	(___fladd@a+3)& (0+255),w,b
 12094   001FA4  2577               	addwf	(___fladd@a+3)& (0+255),w,b
 12095   001FA6  6F79               	movwf	___fladd@aexp& (0+255),b
 12096   001FA8                     
 12097                           ; BSR set to: 1
 12098   001FA8  AF76               	btfss	(___fladd@a+2)& (0+255),7,b
 12099   001FAA  EFD9  F00F         	goto	u11631
 12100   001FAE  EFDB  F00F         	goto	u11630
 12101   001FB2                     u11631:
 12102   001FB2  EFDC  F00F         	goto	l13380
 12103   001FB6                     u11630:
 12104   001FB6                     
 12105                           ; BSR set to: 1
 12106   001FB6  8179               	bsf	___fladd@aexp& (0+255),0,b
 12107   001FB8                     l13380:
 12108                           
 12109                           ; BSR set to: 1
 12110   001FB8  5179               	movf	___fladd@aexp& (0+255),w,b
 12111   001FBA  B4D8               	btfsc	status,2,c
 12112   001FBC  EFE2  F00F         	goto	u11641
 12113   001FC0  EFE4  F00F         	goto	u11640
 12114   001FC4                     u11641:
 12115   001FC4  EFF8  F00F         	goto	l13390
 12116   001FC8                     u11640:
 12117   001FC8                     
 12118                           ; BSR set to: 1
 12119   001FC8  2979               	incf	___fladd@aexp& (0+255),w,b
 12120   001FCA  A4D8               	btfss	status,2,c
 12121   001FCC  EFEA  F00F         	goto	u11651
 12122   001FD0  EFEC  F00F         	goto	u11650
 12123   001FD4                     u11651:
 12124   001FD4  EFF4  F00F         	goto	l13386
 12125   001FD8                     u11650:
 12126   001FD8                     
 12127                           ; BSR set to: 1
 12128   001FD8  0E00               	movlw	0
 12129   001FDA  6F74               	movwf	___fladd@a& (0+255),b
 12130   001FDC  0E00               	movlw	0
 12131   001FDE  6F75               	movwf	(___fladd@a+1)& (0+255),b
 12132   001FE0  0E00               	movlw	0
 12133   001FE2  6F76               	movwf	(___fladd@a+2)& (0+255),b
 12134   001FE4  0E00               	movlw	0
 12135   001FE6  6F77               	movwf	(___fladd@a+3)& (0+255),b
 12136   001FE8                     l13386:
 12137                           
 12138                           ; BSR set to: 1
 12139   001FE8  8F76               	bsf	(___fladd@a+2)& (0+255),7,b
 12140   001FEA                     
 12141                           ; BSR set to: 1
 12142   001FEA  6B77               	clrf	(___fladd@a+3)& (0+255),b
 12143   001FEC  EF00  F010         	goto	l13392
 12144   001FF0                     l13390:
 12145                           
 12146                           ; BSR set to: 1
 12147   001FF0  0E00               	movlw	0
 12148   001FF2  6F74               	movwf	___fladd@a& (0+255),b
 12149   001FF4  0E00               	movlw	0
 12150   001FF6  6F75               	movwf	(___fladd@a+1)& (0+255),b
 12151   001FF8  0E00               	movlw	0
 12152   001FFA  6F76               	movwf	(___fladd@a+2)& (0+255),b
 12153   001FFC  0E00               	movlw	0
 12154   001FFE  6F77               	movwf	(___fladd@a+3)& (0+255),b
 12155   002000                     l13392:
 12156                           
 12157                           ; BSR set to: 1
 12158   002000  517A               	movf	___fladd@bexp& (0+255),w,b
 12159   002002  5D79               	subwf	___fladd@aexp& (0+255),w,b
 12160   002004  B0D8               	btfsc	status,0,c
 12161   002006  EF07  F010         	goto	u11661
 12162   00200A  EF09  F010         	goto	u11660
 12163   00200E                     u11661:
 12164   00200E  EF30  F010         	goto	l13428
 12165   002012                     u11660:
 12166   002012                     
 12167                           ; BSR set to: 1
 12168   002012  AD78               	btfss	___fladd@signs& (0+255),6,b
 12169   002014  EF0E  F010         	goto	u11671
 12170   002018  EF10  F010         	goto	u11670
 12171   00201C                     u11671:
 12172   00201C  EF12  F010         	goto	l13398
 12173   002020                     u11670:
 12174   002020                     
 12175                           ; BSR set to: 1
 12176   002020  0E80               	movlw	128
 12177   002022  1B78               	xorwf	___fladd@signs& (0+255),f,b
 12178   002024                     l13398:
 12179                           
 12180                           ; BSR set to: 1
 12181   002024  C17A  F17B         	movff	___fladd@bexp,___fladd@grs
 12182   002028                     
 12183                           ; BSR set to: 1
 12184   002028  C179  F17A         	movff	___fladd@aexp,___fladd@bexp
 12185   00202C                     
 12186                           ; BSR set to: 1
 12187   00202C  C17B  F179         	movff	___fladd@grs,___fladd@aexp
 12188   002030                     
 12189                           ; BSR set to: 1
 12190   002030  C170  F17B         	movff	___fladd@b,___fladd@grs
 12191   002034                     
 12192                           ; BSR set to: 1
 12193   002034  C174  F170         	movff	___fladd@a,___fladd@b
 12194   002038                     
 12195                           ; BSR set to: 1
 12196   002038  C17B  F174         	movff	___fladd@grs,___fladd@a
 12197   00203C                     
 12198                           ; BSR set to: 1
 12199   00203C  C171  F17B         	movff	___fladd@b+1,___fladd@grs
 12200   002040                     
 12201                           ; BSR set to: 1
 12202   002040  C175  F171         	movff	___fladd@a+1,___fladd@b+1
 12203   002044                     
 12204                           ; BSR set to: 1
 12205   002044  C17B  F175         	movff	___fladd@grs,___fladd@a+1
 12206   002048                     
 12207                           ; BSR set to: 1
 12208   002048  C172  F17B         	movff	___fladd@b+2,___fladd@grs
 12209   00204C                     
 12210                           ; BSR set to: 1
 12211   00204C  C176  F172         	movff	___fladd@a+2,___fladd@b+2
 12212   002050                     
 12213                           ; BSR set to: 1
 12214   002050  C17B  F176         	movff	___fladd@grs,___fladd@a+2
 12215   002054                     
 12216                           ; BSR set to: 1
 12217   002054  C173  F17B         	movff	___fladd@b+3,___fladd@grs
 12218   002058                     
 12219                           ; BSR set to: 1
 12220   002058  C177  F173         	movff	___fladd@a+3,___fladd@b+3
 12221   00205C                     
 12222                           ; BSR set to: 1
 12223   00205C  C17B  F177         	movff	___fladd@grs,___fladd@a+3
 12224   002060                     l13428:
 12225                           
 12226                           ; BSR set to: 1
 12227   002060  6B7B               	clrf	___fladd@grs& (0+255),b
 12228   002062  517A               	movf	___fladd@bexp& (0+255),w,b
 12229   002064  C179  F0FC         	movff	___fladd@aexp,??___fladd
 12230   002068  0100               	movlb	0	; () banked
 12231   00206A  6BFD               	clrf	(??___fladd+1)& (0+255),b
 12232   00206C  5FFC               	subwf	??___fladd& (0+255),f,b
 12233   00206E  0E00               	movlw	0
 12234   002070  5BFD               	subwfb	(??___fladd+1)& (0+255),f,b
 12235   002072  BFFD               	btfsc	(??___fladd+1)& (0+255),7,b
 12236   002074  EF45  F010         	goto	u11681
 12237   002078  51FD               	movf	(??___fladd+1)& (0+255),w,b
 12238   00207A  E109               	bnz	u11680
 12239   00207C  0E1A               	movlw	26
 12240   00207E  5DFC               	subwf	??___fladd& (0+255),w,b
 12241   002080  A0D8               	btfss	status,0,c
 12242   002082  EF45  F010         	goto	u11681
 12243   002086  EF47  F010         	goto	u11680
 12244   00208A                     u11681:
 12245   00208A  EF7F  F010         	goto	l3273
 12246   00208E                     u11680:
 12247   00208E                     
 12248                           ; BSR set to: 0
 12249   00208E  0101               	movlb	1	; () banked
 12250   002090  5170               	movf	___fladd@b& (0+255),w,b
 12251   002092  1171               	iorwf	(___fladd@b+1)& (0+255),w,b
 12252   002094  1172               	iorwf	(___fladd@b+2)& (0+255),w,b
 12253   002096  1173               	iorwf	(___fladd@b+3)& (0+255),w,b
 12254   002098  A4D8               	btfss	status,2,c
 12255   00209A  EF51  F010         	goto	u11691
 12256   00209E  EF54  F010         	goto	u11690
 12257   0020A2                     u11691:
 12258   0020A2  0E01               	movlw	1
 12259   0020A4  EF55  F010         	goto	u11700
 12260   0020A8                     u11690:
 12261   0020A8  0E00               	movlw	0
 12262   0020AA                     u11700:
 12263   0020AA  6F7B               	movwf	___fladd@grs& (0+255),b
 12264   0020AC                     
 12265                           ; BSR set to: 1
 12266   0020AC  0E00               	movlw	0
 12267   0020AE  6F70               	movwf	___fladd@b& (0+255),b
 12268   0020B0  0E00               	movlw	0
 12269   0020B2  6F71               	movwf	(___fladd@b+1)& (0+255),b
 12270   0020B4  0E00               	movlw	0
 12271   0020B6  6F72               	movwf	(___fladd@b+2)& (0+255),b
 12272   0020B8  0E00               	movlw	0
 12273   0020BA  6F73               	movwf	(___fladd@b+3)& (0+255),b
 12274   0020BC                     
 12275                           ; BSR set to: 1
 12276   0020BC  C179  F17A         	movff	___fladd@aexp,___fladd@bexp
 12277   0020C0  EF89  F010         	goto	l3272
 12278   0020C4                     l3274:
 12279                           
 12280                           ; BSR set to: 1
 12281   0020C4  A17B               	btfss	___fladd@grs& (0+255),0,b
 12282   0020C6  EF67  F010         	goto	u11711
 12283   0020CA  EF69  F010         	goto	u11710
 12284   0020CE                     u11711:
 12285   0020CE  EF6F  F010         	goto	l13438
 12286   0020D2                     u11710:
 12287   0020D2                     
 12288                           ; BSR set to: 1
 12289   0020D2  90D8               	bcf	status,0,c
 12290   0020D4  317B               	rrcf	___fladd@grs& (0+255),w,b
 12291   0020D6  0901               	iorlw	1
 12292   0020D8  6F7B               	movwf	___fladd@grs& (0+255),b
 12293   0020DA  EF71  F010         	goto	l13440
 12294   0020DE                     l13438:
 12295                           
 12296                           ; BSR set to: 1
 12297   0020DE  90D8               	bcf	status,0,c
 12298   0020E0  337B               	rrcf	___fladd@grs& (0+255),f,b
 12299   0020E2                     l13440:
 12300                           
 12301                           ; BSR set to: 1
 12302   0020E2  A170               	btfss	___fladd@b& (0+255),0,b
 12303   0020E4  EF76  F010         	goto	u11721
 12304   0020E8  EF78  F010         	goto	u11720
 12305   0020EC                     u11721:
 12306   0020EC  EF79  F010         	goto	l13444
 12307   0020F0                     u11720:
 12308   0020F0                     
 12309                           ; BSR set to: 1
 12310   0020F0  8F7B               	bsf	___fladd@grs& (0+255),7,b
 12311   0020F2                     l13444:
 12312                           
 12313                           ; BSR set to: 1
 12314   0020F2  3573               	rlcf	(___fladd@b+3)& (0+255),w,b
 12315   0020F4  3373               	rrcf	(___fladd@b+3)& (0+255),f,b
 12316   0020F6  3372               	rrcf	(___fladd@b+2)& (0+255),f,b
 12317   0020F8  3371               	rrcf	(___fladd@b+1)& (0+255),f,b
 12318   0020FA  3370               	rrcf	___fladd@b& (0+255),f,b
 12319   0020FC                     
 12320                           ; BSR set to: 1
 12321   0020FC  2B7A               	incf	___fladd@bexp& (0+255),f,b
 12322   0020FE                     l3273:
 12323   0020FE  0101               	movlb	1	; () banked
 12324   002100  5179               	movf	___fladd@aexp& (0+255),w,b
 12325   002102  5D7A               	subwf	___fladd@bexp& (0+255),w,b
 12326   002104  A0D8               	btfss	status,0,c
 12327   002106  EF87  F010         	goto	u11731
 12328   00210A  EF89  F010         	goto	u11730
 12329   00210E                     u11731:
 12330   00210E  EF62  F010         	goto	l3274
 12331   002112                     u11730:
 12332   002112                     l3272:
 12333                           
 12334                           ; BSR set to: 1
 12335   002112  BD78               	btfsc	___fladd@signs& (0+255),6,b
 12336   002114  EF8E  F010         	goto	u11741
 12337   002118  EF90  F010         	goto	u11740
 12338   00211C                     u11741:
 12339   00211C  EFD0  F010         	goto	l13472
 12340   002120                     u11740:
 12341   002120                     
 12342                           ; BSR set to: 1
 12343   002120  517A               	movf	___fladd@bexp& (0+255),w,b
 12344   002122  A4D8               	btfss	status,2,c
 12345   002124  EF96  F010         	goto	u11751
 12346   002128  EF98  F010         	goto	u11750
 12347   00212C                     u11751:
 12348   00212C  EFA2  F010         	goto	l13454
 12349   002130                     u11750:
 12350   002130                     
 12351                           ; BSR set to: 1
 12352   002130  0E00               	movlw	0
 12353   002132  6F70               	movwf	?___fladd& (0+255),b
 12354   002134  0E00               	movlw	0
 12355   002136  6F71               	movwf	(?___fladd+1)& (0+255),b
 12356   002138  0E00               	movlw	0
 12357   00213A  6F72               	movwf	(?___fladd+2)& (0+255),b
 12358   00213C  0E00               	movlw	0
 12359   00213E  6F73               	movwf	(?___fladd+3)& (0+255),b
 12360   002140  EF07  F012         	goto	l3281
 12361   002144                     l13454:
 12362                           
 12363                           ; BSR set to: 1
 12364   002144  5174               	movf	___fladd@a& (0+255),w,b
 12365   002146  2770               	addwf	___fladd@b& (0+255),f,b
 12366   002148  5175               	movf	(___fladd@a+1)& (0+255),w,b
 12367   00214A  2371               	addwfc	(___fladd@b+1)& (0+255),f,b
 12368   00214C  5176               	movf	(___fladd@a+2)& (0+255),w,b
 12369   00214E  2372               	addwfc	(___fladd@b+2)& (0+255),f,b
 12370   002150  5177               	movf	(___fladd@a+3)& (0+255),w,b
 12371   002152  2373               	addwfc	(___fladd@b+3)& (0+255),f,b
 12372   002154                     
 12373                           ; BSR set to: 1
 12374   002154  A173               	btfss	(___fladd@b+3)& (0+255),0,b
 12375   002156  EFAF  F010         	goto	u11761
 12376   00215A  EFB1  F010         	goto	u11760
 12377   00215E                     u11761:
 12378   00215E  EF70  F011         	goto	l3286
 12379   002162                     u11760:
 12380   002162                     
 12381                           ; BSR set to: 1
 12382   002162  A17B               	btfss	___fladd@grs& (0+255),0,b
 12383   002164  EFB6  F010         	goto	u11771
 12384   002168  EFB8  F010         	goto	u11770
 12385   00216C                     u11771:
 12386   00216C  EFBE  F010         	goto	l13462
 12387   002170                     u11770:
 12388   002170                     
 12389                           ; BSR set to: 1
 12390   002170  90D8               	bcf	status,0,c
 12391   002172  317B               	rrcf	___fladd@grs& (0+255),w,b
 12392   002174  0901               	iorlw	1
 12393   002176  6F7B               	movwf	___fladd@grs& (0+255),b
 12394   002178  EFC0  F010         	goto	l13464
 12395   00217C                     l13462:
 12396                           
 12397                           ; BSR set to: 1
 12398   00217C  90D8               	bcf	status,0,c
 12399   00217E  337B               	rrcf	___fladd@grs& (0+255),f,b
 12400   002180                     l13464:
 12401                           
 12402                           ; BSR set to: 1
 12403   002180  A170               	btfss	___fladd@b& (0+255),0,b
 12404   002182  EFC5  F010         	goto	u11781
 12405   002186  EFC7  F010         	goto	u11780
 12406   00218A                     u11781:
 12407   00218A  EFC8  F010         	goto	l13468
 12408   00218E                     u11780:
 12409   00218E                     
 12410                           ; BSR set to: 1
 12411   00218E  8F7B               	bsf	___fladd@grs& (0+255),7,b
 12412   002190                     l13468:
 12413                           
 12414                           ; BSR set to: 1
 12415   002190  3573               	rlcf	(___fladd@b+3)& (0+255),w,b
 12416   002192  3373               	rrcf	(___fladd@b+3)& (0+255),f,b
 12417   002194  3372               	rrcf	(___fladd@b+2)& (0+255),f,b
 12418   002196  3371               	rrcf	(___fladd@b+1)& (0+255),f,b
 12419   002198  3370               	rrcf	___fladd@b& (0+255),f,b
 12420   00219A                     
 12421                           ; BSR set to: 1
 12422   00219A  2B7A               	incf	___fladd@bexp& (0+255),f,b
 12423   00219C  EF70  F011         	goto	l3286
 12424   0021A0                     l13472:
 12425                           
 12426                           ; BSR set to: 1
 12427   0021A0  5174               	movf	___fladd@a& (0+255),w,b
 12428   0021A2  5D70               	subwf	___fladd@b& (0+255),w,b
 12429   0021A4  5175               	movf	(___fladd@a+1)& (0+255),w,b
 12430   0021A6  5971               	subwfb	(___fladd@b+1)& (0+255),w,b
 12431   0021A8  5176               	movf	(___fladd@a+2)& (0+255),w,b
 12432   0021AA  5972               	subwfb	(___fladd@b+2)& (0+255),w,b
 12433   0021AC  5173               	movf	(___fladd@b+3)& (0+255),w,b
 12434   0021AE  0A80               	xorlw	128
 12435   0021B0  0100               	movlb	0	; () banked
 12436   0021B2  6FFC               	movwf	??___fladd& (0+255),b
 12437   0021B4  0101               	movlb	1	; () banked
 12438   0021B6  5177               	movf	(___fladd@a+3)& (0+255),w,b
 12439   0021B8  0A80               	xorlw	128
 12440   0021BA  0100               	movlb	0	; () banked
 12441   0021BC  59FC               	subwfb	??___fladd& (0+255),w,b
 12442   0021BE  B0D8               	btfsc	status,0,c
 12443   0021C0  EFE4  F010         	goto	u11791
 12444   0021C4  EFE6  F010         	goto	u11790
 12445   0021C8                     u11791:
 12446   0021C8  EF20  F011         	goto	l13482
 12447   0021CC                     u11790:
 12448   0021CC                     
 12449                           ; BSR set to: 0
 12450   0021CC  0101               	movlb	1	; () banked
 12451   0021CE  5170               	movf	___fladd@b& (0+255),w,b
 12452   0021D0  5D74               	subwf	___fladd@a& (0+255),w,b
 12453   0021D2  0100               	movlb	0	; () banked
 12454   0021D4  6FFC               	movwf	??___fladd& (0+255),b
 12455   0021D6  0101               	movlb	1	; () banked
 12456   0021D8  5171               	movf	(___fladd@b+1)& (0+255),w,b
 12457   0021DA  5975               	subwfb	(___fladd@a+1)& (0+255),w,b
 12458   0021DC  0100               	movlb	0	; () banked
 12459   0021DE  6FFD               	movwf	(??___fladd+1)& (0+255),b
 12460   0021E0  0101               	movlb	1	; () banked
 12461   0021E2  5172               	movf	(___fladd@b+2)& (0+255),w,b
 12462   0021E4  5976               	subwfb	(___fladd@a+2)& (0+255),w,b
 12463   0021E6  0100               	movlb	0	; () banked
 12464   0021E8  6FFE               	movwf	(??___fladd+2)& (0+255),b
 12465   0021EA  0101               	movlb	1	; () banked
 12466   0021EC  5173               	movf	(___fladd@b+3)& (0+255),w,b
 12467   0021EE  5977               	subwfb	(___fladd@a+3)& (0+255),w,b
 12468   0021F0  0100               	movlb	0	; () banked
 12469   0021F2  6FFF               	movwf	(??___fladd+3)& (0+255),b
 12470   0021F4  0EFF               	movlw	255
 12471   0021F6  25FC               	addwf	??___fladd& (0+255),w,b
 12472   0021F8  0101               	movlb	1	; () banked
 12473   0021FA  6F70               	movwf	___fladd@b& (0+255),b
 12474   0021FC  0EFF               	movlw	255
 12475   0021FE  0100               	movlb	0	; () banked
 12476   002200  21FD               	addwfc	(??___fladd+1)& (0+255),w,b
 12477   002202  0101               	movlb	1	; () banked
 12478   002204  6F71               	movwf	(___fladd@b+1)& (0+255),b
 12479   002206  0EFF               	movlw	255
 12480   002208  0100               	movlb	0	; () banked
 12481   00220A  21FE               	addwfc	(??___fladd+2)& (0+255),w,b
 12482   00220C  0101               	movlb	1	; () banked
 12483   00220E  6F72               	movwf	(___fladd@b+2)& (0+255),b
 12484   002210  0EFF               	movlw	255
 12485   002212  0100               	movlb	0	; () banked
 12486   002214  21FF               	addwfc	(??___fladd+3)& (0+255),w,b
 12487   002216  0101               	movlb	1	; () banked
 12488   002218  6F73               	movwf	(___fladd@b+3)& (0+255),b
 12489   00221A  0E80               	movlw	128
 12490   00221C  1B78               	xorwf	___fladd@signs& (0+255),f,b
 12491   00221E                     
 12492                           ; BSR set to: 1
 12493   00221E  6D7B               	negf	___fladd@grs& (0+255),b
 12494   002220                     
 12495                           ; BSR set to: 1
 12496   002220  517B               	movf	___fladd@grs& (0+255),w,b
 12497   002222  A4D8               	btfss	status,2,c
 12498   002224  EF16  F011         	goto	u11801
 12499   002228  EF18  F011         	goto	u11800
 12500   00222C                     u11801:
 12501   00222C  EF29  F011         	goto	l3289
 12502   002230                     u11800:
 12503   002230                     
 12504                           ; BSR set to: 1
 12505   002230  0E01               	movlw	1
 12506   002232  2770               	addwf	___fladd@b& (0+255),f,b
 12507   002234  0E00               	movlw	0
 12508   002236  2371               	addwfc	(___fladd@b+1)& (0+255),f,b
 12509   002238  2372               	addwfc	(___fladd@b+2)& (0+255),f,b
 12510   00223A  2373               	addwfc	(___fladd@b+3)& (0+255),f,b
 12511   00223C  EF29  F011         	goto	l3289
 12512   002240                     l13482:
 12513                           
 12514                           ; BSR set to: 0
 12515   002240  0101               	movlb	1	; () banked
 12516   002242  5174               	movf	___fladd@a& (0+255),w,b
 12517   002244  5F70               	subwf	___fladd@b& (0+255),f,b
 12518   002246  5175               	movf	(___fladd@a+1)& (0+255),w,b
 12519   002248  5B71               	subwfb	(___fladd@b+1)& (0+255),f,b
 12520   00224A  5176               	movf	(___fladd@a+2)& (0+255),w,b
 12521   00224C  5B72               	subwfb	(___fladd@b+2)& (0+255),f,b
 12522   00224E  5177               	movf	(___fladd@a+3)& (0+255),w,b
 12523   002250  5B73               	subwfb	(___fladd@b+3)& (0+255),f,b
 12524   002252                     l3289:
 12525                           
 12526                           ; BSR set to: 1
 12527   002252  5170               	movf	___fladd@b& (0+255),w,b
 12528   002254  1171               	iorwf	(___fladd@b+1)& (0+255),w,b
 12529   002256  1172               	iorwf	(___fladd@b+2)& (0+255),w,b
 12530   002258  1173               	iorwf	(___fladd@b+3)& (0+255),w,b
 12531   00225A  A4D8               	btfss	status,2,c
 12532   00225C  EF32  F011         	goto	u11811
 12533   002260  EF34  F011         	goto	u11810
 12534   002264                     u11811:
 12535   002264  EF69  F011         	goto	l13506
 12536   002268                     u11810:
 12537   002268                     
 12538                           ; BSR set to: 1
 12539   002268  517B               	movf	___fladd@grs& (0+255),w,b
 12540   00226A  A4D8               	btfss	status,2,c
 12541   00226C  EF3A  F011         	goto	u11821
 12542   002270  EF3C  F011         	goto	u11820
 12543   002274                     u11821:
 12544   002274  EF69  F011         	goto	l13506
 12545   002278                     u11820:
 12546   002278                     
 12547                           ; BSR set to: 1
 12548   002278  0E00               	movlw	0
 12549   00227A  6F70               	movwf	?___fladd& (0+255),b
 12550   00227C  0E00               	movlw	0
 12551   00227E  6F71               	movwf	(?___fladd+1)& (0+255),b
 12552   002280  0E00               	movlw	0
 12553   002282  6F72               	movwf	(?___fladd+2)& (0+255),b
 12554   002284  0E00               	movlw	0
 12555   002286  6F73               	movwf	(?___fladd+3)& (0+255),b
 12556   002288  EF07  F012         	goto	l3281
 12557   00228C                     l13490:
 12558                           
 12559                           ; BSR set to: 1
 12560   00228C  90D8               	bcf	status,0,c
 12561   00228E  3770               	rlcf	___fladd@b& (0+255),f,b
 12562   002290  3771               	rlcf	(___fladd@b+1)& (0+255),f,b
 12563   002292  3772               	rlcf	(___fladd@b+2)& (0+255),f,b
 12564   002294  3773               	rlcf	(___fladd@b+3)& (0+255),f,b
 12565   002296                     
 12566                           ; BSR set to: 1
 12567   002296  AF7B               	btfss	___fladd@grs& (0+255),7,b
 12568   002298  EF50  F011         	goto	u11831
 12569   00229C  EF52  F011         	goto	u11830
 12570   0022A0                     u11831:
 12571   0022A0  EF53  F011         	goto	l13496
 12572   0022A4                     u11830:
 12573   0022A4                     
 12574                           ; BSR set to: 1
 12575   0022A4  8170               	bsf	___fladd@b& (0+255),0,b
 12576   0022A6                     l13496:
 12577                           
 12578                           ; BSR set to: 1
 12579   0022A6  A17B               	btfss	___fladd@grs& (0+255),0,b
 12580   0022A8  EF58  F011         	goto	u11841
 12581   0022AC  EF5A  F011         	goto	u11840
 12582   0022B0                     u11841:
 12583   0022B0  EF5E  F011         	goto	l13500
 12584   0022B4                     u11840:
 12585   0022B4                     
 12586                           ; BSR set to: 1
 12587   0022B4  80D8               	bsf	status,0,c
 12588   0022B6  377B               	rlcf	___fladd@grs& (0+255),f,b
 12589   0022B8  EF60  F011         	goto	l13502
 12590   0022BC                     l13500:
 12591                           
 12592                           ; BSR set to: 1
 12593   0022BC  90D8               	bcf	status,0,c
 12594   0022BE  377B               	rlcf	___fladd@grs& (0+255),f,b
 12595   0022C0                     l13502:
 12596                           
 12597                           ; BSR set to: 1
 12598   0022C0  517A               	movf	___fladd@bexp& (0+255),w,b
 12599   0022C2  B4D8               	btfsc	status,2,c
 12600   0022C4  EF66  F011         	goto	u11851
 12601   0022C8  EF68  F011         	goto	u11850
 12602   0022CC                     u11851:
 12603   0022CC  EF69  F011         	goto	l13506
 12604   0022D0                     u11850:
 12605   0022D0                     
 12606                           ; BSR set to: 1
 12607   0022D0  077A               	decf	___fladd@bexp& (0+255),f,b
 12608   0022D2                     l13506:
 12609                           
 12610                           ; BSR set to: 1
 12611   0022D2  AF72               	btfss	(___fladd@b+2)& (0+255),7,b
 12612   0022D4  EF6E  F011         	goto	u11861
 12613   0022D8  EF70  F011         	goto	u11860
 12614   0022DC                     u11861:
 12615   0022DC  EF46  F011         	goto	l13490
 12616   0022E0                     u11860:
 12617   0022E0                     l3286:
 12618                           
 12619                           ; BSR set to: 1
 12620   0022E0  6B79               	clrf	___fladd@aexp& (0+255),b
 12621   0022E2  AF7B               	btfss	___fladd@grs& (0+255),7,b
 12622   0022E4  EF76  F011         	goto	u11871
 12623   0022E8  EF78  F011         	goto	u11870
 12624   0022EC                     u11871:
 12625   0022EC  EF93  F011         	goto	l3298
 12626   0022F0                     u11870:
 12627   0022F0                     
 12628                           ; BSR set to: 1
 12629   0022F0  C17B  F0FC         	movff	___fladd@grs,??___fladd
 12630   0022F4  0E7F               	movlw	127
 12631   0022F6  0100               	movlb	0	; () banked
 12632   0022F8  17FC               	andwf	??___fladd& (0+255),f,b
 12633   0022FA  B4D8               	btfsc	status,2,c
 12634   0022FC  EF82  F011         	goto	u11881
 12635   002300  EF84  F011         	goto	u11880
 12636   002304                     u11881:
 12637   002304  EF89  F011         	goto	l3299
 12638   002308                     u11880:
 12639   002308                     l13510:
 12640   002308  0E01               	movlw	1
 12641   00230A  0101               	movlb	1	; () banked
 12642   00230C  6F79               	movwf	___fladd@aexp& (0+255),b
 12643   00230E  EF93  F011         	goto	l3298
 12644   002312                     l3299:
 12645                           
 12646                           ; BSR set to: 0
 12647   002312  0101               	movlb	1	; () banked
 12648   002314  A170               	btfss	___fladd@b& (0+255),0,b
 12649   002316  EF8F  F011         	goto	u11891
 12650   00231A  EF91  F011         	goto	u11890
 12651   00231E                     u11891:
 12652   00231E  EF93  F011         	goto	l3298
 12653   002322                     u11890:
 12654   002322  EF84  F011         	goto	l13510
 12655   002326                     l3298:
 12656                           
 12657                           ; BSR set to: 1
 12658   002326  5179               	movf	___fladd@aexp& (0+255),w,b
 12659   002328  B4D8               	btfsc	status,2,c
 12660   00232A  EF99  F011         	goto	u11901
 12661   00232E  EF9B  F011         	goto	u11900
 12662   002332                     u11901:
 12663   002332  EFC8  F011         	goto	l13522
 12664   002336                     u11900:
 12665   002336                     
 12666                           ; BSR set to: 1
 12667   002336  0E01               	movlw	1
 12668   002338  2770               	addwf	___fladd@b& (0+255),f,b
 12669   00233A  0E00               	movlw	0
 12670   00233C  2371               	addwfc	(___fladd@b+1)& (0+255),f,b
 12671   00233E  2372               	addwfc	(___fladd@b+2)& (0+255),f,b
 12672   002340  2373               	addwfc	(___fladd@b+3)& (0+255),f,b
 12673   002342                     
 12674                           ; BSR set to: 1
 12675   002342  A173               	btfss	(___fladd@b+3)& (0+255),0,b
 12676   002344  EFA6  F011         	goto	u11911
 12677   002348  EFA8  F011         	goto	u11910
 12678   00234C                     u11911:
 12679   00234C  EFC8  F011         	goto	l13522
 12680   002350                     u11910:
 12681   002350                     
 12682                           ; BSR set to: 1
 12683   002350  C170  F0FC         	movff	___fladd@b,??___fladd
 12684   002354  C171  F0FD         	movff	___fladd@b+1,??___fladd+1
 12685   002358  C172  F0FE         	movff	___fladd@b+2,??___fladd+2
 12686   00235C  C173  F0FF         	movff	___fladd@b+3,??___fladd+3
 12687   002360  0100               	movlb	0	; () banked
 12688   002362  35FF               	rlcf	(??___fladd+3)& (0+255),w,b
 12689   002364  33FF               	rrcf	(??___fladd+3)& (0+255),f,b
 12690   002366  33FE               	rrcf	(??___fladd+2)& (0+255),f,b
 12691   002368  33FD               	rrcf	(??___fladd+1)& (0+255),f,b
 12692   00236A  33FC               	rrcf	??___fladd& (0+255),f,b
 12693   00236C  C0FC  F170         	movff	??___fladd,___fladd@b
 12694   002370  C0FD  F171         	movff	??___fladd+1,___fladd@b+1
 12695   002374  C0FE  F172         	movff	??___fladd+2,___fladd@b+2
 12696   002378  C0FF  F173         	movff	??___fladd+3,___fladd@b+3
 12697   00237C  0101               	movlb	1	; () banked
 12698   00237E  297A               	incf	___fladd@bexp& (0+255),w,b
 12699   002380  B4D8               	btfsc	status,2,c
 12700   002382  EFC5  F011         	goto	u11921
 12701   002386  EFC7  F011         	goto	u11920
 12702   00238A                     u11921:
 12703   00238A  EFC8  F011         	goto	l13522
 12704   00238E                     u11920:
 12705   00238E                     
 12706                           ; BSR set to: 1
 12707   00238E  2B7A               	incf	___fladd@bexp& (0+255),f,b
 12708   002390                     l13522:
 12709                           
 12710                           ; BSR set to: 1
 12711   002390  297A               	incf	___fladd@bexp& (0+255),w,b
 12712   002392  B4D8               	btfsc	status,2,c
 12713   002394  EFCE  F011         	goto	u11931
 12714   002398  EFD0  F011         	goto	u11930
 12715   00239C                     u11931:
 12716   00239C  EFD8  F011         	goto	l13526
 12717   0023A0                     u11930:
 12718   0023A0                     
 12719                           ; BSR set to: 1
 12720   0023A0  517A               	movf	___fladd@bexp& (0+255),w,b
 12721   0023A2  A4D8               	btfss	status,2,c
 12722   0023A4  EFD6  F011         	goto	u11941
 12723   0023A8  EFD8  F011         	goto	u11940
 12724   0023AC                     u11941:
 12725   0023AC  EFE9  F011         	goto	l3305
 12726   0023B0                     u11940:
 12727   0023B0                     l13526:
 12728                           
 12729                           ; BSR set to: 1
 12730   0023B0  0E00               	movlw	0
 12731   0023B2  6F70               	movwf	___fladd@b& (0+255),b
 12732   0023B4  0E00               	movlw	0
 12733   0023B6  6F71               	movwf	(___fladd@b+1)& (0+255),b
 12734   0023B8  0E00               	movlw	0
 12735   0023BA  6F72               	movwf	(___fladd@b+2)& (0+255),b
 12736   0023BC  0E00               	movlw	0
 12737   0023BE  6F73               	movwf	(___fladd@b+3)& (0+255),b
 12738   0023C0  517A               	movf	___fladd@bexp& (0+255),w,b
 12739   0023C2  A4D8               	btfss	status,2,c
 12740   0023C4  EFE6  F011         	goto	u11951
 12741   0023C8  EFE8  F011         	goto	u11950
 12742   0023CC                     u11951:
 12743   0023CC  EFE9  F011         	goto	l3305
 12744   0023D0                     u11950:
 12745   0023D0                     
 12746                           ; BSR set to: 1
 12747   0023D0  6B78               	clrf	___fladd@signs& (0+255),b
 12748   0023D2                     l3305:
 12749                           
 12750                           ; BSR set to: 1
 12751   0023D2  A17A               	btfss	___fladd@bexp& (0+255),0,b
 12752   0023D4  EFEE  F011         	goto	u11961
 12753   0023D8  EFF0  F011         	goto	u11960
 12754   0023DC                     u11961:
 12755   0023DC  EFF3  F011         	goto	l13532
 12756   0023E0                     u11960:
 12757   0023E0                     
 12758                           ; BSR set to: 1
 12759   0023E0  8F72               	bsf	(___fladd@b+2)& (0+255),7,b
 12760   0023E2  EFF4  F011         	goto	l13534
 12761   0023E6                     l13532:
 12762                           
 12763                           ; BSR set to: 1
 12764   0023E6  9F72               	bcf	(___fladd@b+2)& (0+255),7,b
 12765   0023E8                     l13534:
 12766                           
 12767                           ; BSR set to: 1
 12768   0023E8  90D8               	bcf	status,0,c
 12769   0023EA  317A               	rrcf	___fladd@bexp& (0+255),w,b
 12770   0023EC  6F73               	movwf	(___fladd@b+3)& (0+255),b
 12771   0023EE                     
 12772                           ; BSR set to: 1
 12773   0023EE  AF78               	btfss	___fladd@signs& (0+255),7,b
 12774   0023F0  EFFC  F011         	goto	u11971
 12775   0023F4  EFFE  F011         	goto	u11970
 12776   0023F8                     u11971:
 12777   0023F8  EFFF  F011         	goto	l13540
 12778   0023FC                     u11970:
 12779   0023FC                     
 12780                           ; BSR set to: 1
 12781   0023FC  8F73               	bsf	(___fladd@b+3)& (0+255),7,b
 12782   0023FE                     l13540:
 12783                           
 12784                           ; BSR set to: 1
 12785   0023FE  C170  F170         	movff	___fladd@b,?___fladd
 12786   002402  C171  F171         	movff	___fladd@b+1,?___fladd+1
 12787   002406  C172  F172         	movff	___fladd@b+2,?___fladd+2
 12788   00240A  C173  F173         	movff	___fladd@b+3,?___fladd+3
 12789   00240E                     l3281:
 12790                           
 12791                           ; BSR set to: 1
 12792   00240E  0012               	return		;funcret
 12793   002410                     __end_of___fladd:
 12794                           	callstack 0
 12795                           
 12796 ;; *************** function _REALTIMECLOCK_DS1307_Get_Data *****************
 12797 ;; Defined at:
 12798 ;;		line 25 in file "ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c"
 12799 ;; Parameters:    Size  Location     Type
 12800 ;;		None
 12801 ;; Auto vars:     Size  Location     Type
 12802 ;;		None
 12803 ;; Return value:  Size  Location     Type
 12804 ;;                  6   18[BANK0 ] struct .
 12805 ;; Registers used:
 12806 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 12807 ;; Tracked objects:
 12808 ;;		On entry : 0/0
 12809 ;;		On exit  : 0/0
 12810 ;;		Unchanged: 0/0
 12811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12812 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12815 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12816 ;;Total ram usage:        6 bytes
 12817 ;; Hardware stack levels used: 1
 12818 ;; Hardware stack levels required when called: 18
 12819 ;; This function calls:
 12820 ;;		_I2C_Read1ByteRegister
 12821 ;; This function is called by:
 12822 ;;		_main
 12823 ;; This function uses a non-reentrant model
 12824 ;;
 12825                           
 12826                           	psect	text28
 12827   004A96                     __ptext28:
 12828                           	callstack 0
 12829   004A96                     _REALTIMECLOCK_DS1307_Get_Data:
 12830                           	callstack 12
 12831   004A96                     
 12832                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 26:     REALTIMECLOCK_DS1307.sec
      +                          onds = I2C_Read1ByteRegister(0xD0, 0x00);
 12833   004A96  0E00               	movlw	0
 12834   004A98  0100               	movlb	0	; () banked
 12835   004A9A  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 12836   004A9C  0ED0               	movlw	208
 12837   004A9E  ECFA  F023         	call	_I2C_Read1ByteRegister
 12838   004AA2  0100               	movlb	0	; () banked
 12839   004AA4  6F83               	movwf	_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604& (0+255),b
 12840                           
 12841                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 27:     REALTIMECLOCK_DS1307.min
      +                          utes = I2C_Read1ByteRegister(0xD0, 0x01);
 12842   004AA6  0E01               	movlw	1
 12843   004AA8  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 12844   004AAA  0ED0               	movlw	208
 12845   004AAC  ECFA  F023         	call	_I2C_Read1ByteRegister
 12846   004AB0  0100               	movlb	0	; () banked
 12847   004AB2  6F84               	movwf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+1)& (0+255),b
 12848                           
 12849                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 28:     REALTIMECLOCK_DS1307.hou
      +                          rs = I2C_Read1ByteRegister(0xD0, 0x02);
 12850   004AB4  0E02               	movlw	2
 12851   004AB6  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 12852   004AB8  0ED0               	movlw	208
 12853   004ABA  ECFA  F023         	call	_I2C_Read1ByteRegister
 12854   004ABE  0100               	movlb	0	; () banked
 12855   004AC0  6F85               	movwf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+2)& (0+255),b
 12856                           
 12857                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 29:     REALTIMECLOCK_DS1307.day
      +                          s = I2C_Read1ByteRegister(0xD0, 0x04);
 12858   004AC2  0E04               	movlw	4
 12859   004AC4  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 12860   004AC6  0ED0               	movlw	208
 12861   004AC8  ECFA  F023         	call	_I2C_Read1ByteRegister
 12862   004ACC  0100               	movlb	0	; () banked
 12863   004ACE  6F86               	movwf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+3)& (0+255),b
 12864                           
 12865                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 30:     REALTIMECLOCK_DS1307.mon
      +                          ths = I2C_Read1ByteRegister(0xD0, 0x05);
 12866   004AD0  0E05               	movlw	5
 12867   004AD2  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 12868   004AD4  0ED0               	movlw	208
 12869   004AD6  ECFA  F023         	call	_I2C_Read1ByteRegister
 12870   004ADA  0100               	movlb	0	; () banked
 12871   004ADC  6F87               	movwf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+4)& (0+255),b
 12872                           
 12873                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 31:     REALTIMECLOCK_DS1307.yea
      +                          rs = I2C_Read1ByteRegister(0xD0, 0x06);
 12874   004ADE  0E06               	movlw	6
 12875   004AE0  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 12876   004AE2  0ED0               	movlw	208
 12877   004AE4  ECFA  F023         	call	_I2C_Read1ByteRegister
 12878   004AE8  0100               	movlb	0	; () banked
 12879   004AEA  6F88               	movwf	(_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604+5)& (0+255),b
 12880   004AEC                     
 12881                           ; BSR set to: 0
 12882                           ;ECU_layer/RealTimeClock_DS1307/RealTimeClock_DS1307.c: 33:     return REALTIMECLOCK_DS1
      +                          307;
 12883   004AEC  EE20  F083         	lfsr	2,_REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604
 12884   004AF0  EE00  F0E7         	lfsr	0,?_REALTIMECLOCK_DS1307_Get_Data
 12885   004AF4  0E05               	movlw	5
 12886   004AF6                     u13081:
 12887   004AF6  CFDB FFEB          	movff	plusw2,plusw0
 12888   004AFA  06E8               	decf	wreg,f,c
 12889   004AFC  E2FC               	bc	u13081
 12890   004AFE                     
 12891                           ; BSR set to: 0
 12892   004AFE  0012               	return		;funcret
 12893   004B00                     __end_of_REALTIMECLOCK_DS1307_Get_Data:
 12894                           	callstack 0
 12895                           
 12896 ;; *************** function _ECU_LCD_4Bit_Initialize *****************
 12897 ;; Defined at:
 12898 ;;		line 20 in file "ECU_layer/LCD/LCD.c"
 12899 ;; Parameters:    Size  Location     Type
 12900 ;;  _LCD            1   13[BANK0 ] PTR const struct .
 12901 ;;		 -> LCD_1(6), 
 12902 ;; Auto vars:     Size  Location     Type
 12903 ;;  rt              1   16[BANK0 ] unsigned char 
 12904 ;;  LCD_Counter     1   15[BANK0 ] unsigned char 
 12905 ;; Return value:  Size  Location     Type
 12906 ;;                  1    wreg      unsigned char 
 12907 ;; Registers used:
 12908 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12909 ;; Tracked objects:
 12910 ;;		On entry : 0/0
 12911 ;;		On exit  : 0/0
 12912 ;;		Unchanged: 0/0
 12913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12914 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12915 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12916 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12917 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12918 ;;Total ram usage:        4 bytes
 12919 ;; Hardware stack levels used: 1
 12920 ;; Hardware stack levels required when called: 12
 12921 ;; This function calls:
 12922 ;;		_ECU_LCD_4Bit_Send_Command
 12923 ;;		_gpio_pin_initialize
 12924 ;; This function is called by:
 12925 ;;		_main
 12926 ;; This function uses a non-reentrant model
 12927 ;;
 12928                           
 12929                           	psect	text29
 12930   003348                     __ptext29:
 12931                           	callstack 0
 12932   003348                     _ECU_LCD_4Bit_Initialize:
 12933                           	callstack 18
 12934   003348                     
 12935                           ;ECU_layer/LCD/LCD.c: 22:     uint8 LCD_Counter = 0;
 12936   003348  0100               	movlb	0	; () banked
 12937   00334A  6BE4               	clrf	ECU_LCD_4Bit_Initialize@LCD_Counter& (0+255),b
 12938   00334C                     
 12939                           ; BSR set to: 0
 12940                           ;ECU_layer/LCD/LCD.c: 23:     if(((void*)0) == _LCD ){
 12941   00334C  51E2               	movf	ECU_LCD_4Bit_Initialize@_LCD& (0+255),w,b
 12942   00334E  A4D8               	btfss	status,2,c
 12943   003350  EFAC  F019         	goto	u12991
 12944   003354  EFAE  F019         	goto	u12990
 12945   003358                     u12991:
 12946   003358  EFB1  F019         	goto	l14312
 12947   00335C                     u12990:
 12948   00335C                     
 12949                           ; BSR set to: 0
 12950                           ;ECU_layer/LCD/LCD.c: 24:        rt = (STD_ReturnType)0x00;
 12951   00335C  6BE5               	clrf	ECU_LCD_4Bit_Initialize@rt& (0+255),b
 12952                           
 12953                           ;ECU_layer/LCD/LCD.c: 25:     }
 12954   00335E  EF2E  F01A         	goto	l14348
 12955   003362                     l14312:
 12956                           
 12957                           ; BSR set to: 0
 12958                           ;ECU_layer/LCD/LCD.c: 27:         rt = gpio_pin_initialize(&(_LCD->LCD_E));
 12959   003362  C0E2  F0E3         	movff	ECU_LCD_4Bit_Initialize@_LCD,??_ECU_LCD_4Bit_Initialize
 12960   003366  0E01               	movlw	1
 12961   003368  27E3               	addwf	??_ECU_LCD_4Bit_Initialize& (0+255),f,b
 12962   00336A  C0E3  F0DB         	movff	??_ECU_LCD_4Bit_Initialize,gpio_pin_initialize@pinConfig
 12963   00336E  6BDC               	clrf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
 12964   003370  ECE8  F025         	call	_gpio_pin_initialize	;wreg free
 12965   003374  0100               	movlb	0	; () banked
 12966   003376  6FE5               	movwf	ECU_LCD_4Bit_Initialize@rt& (0+255),b
 12967                           
 12968                           ;ECU_layer/LCD/LCD.c: 28:         rt = gpio_pin_initialize(&(_LCD->LCD_RS));
 12969   003378  C0E2  F0DB         	movff	ECU_LCD_4Bit_Initialize@_LCD,gpio_pin_initialize@pinConfig
 12970   00337C  6BDC               	clrf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
 12971   00337E  ECE8  F025         	call	_gpio_pin_initialize	;wreg free
 12972   003382  0100               	movlb	0	; () banked
 12973   003384  6FE5               	movwf	ECU_LCD_4Bit_Initialize@rt& (0+255),b
 12974   003386                     
 12975                           ; BSR set to: 0
 12976                           ;ECU_layer/LCD/LCD.c: 29:         for(LCD_Counter = 0; LCD_Counter<4 ; LCD_Counter++){
 12977   003386  6BE4               	clrf	ECU_LCD_4Bit_Initialize@LCD_Counter& (0+255),b
 12978   003388                     l14320:
 12979                           
 12980                           ; BSR set to: 0
 12981   003388  51E2               	movf	ECU_LCD_4Bit_Initialize@_LCD& (0+255),w,b
 12982   00338A  25E4               	addwf	ECU_LCD_4Bit_Initialize@LCD_Counter& (0+255),w,b
 12983   00338C  6FE3               	movwf	??_ECU_LCD_4Bit_Initialize& (0+255),b
 12984   00338E  0E02               	movlw	2
 12985   003390  27E3               	addwf	??_ECU_LCD_4Bit_Initialize& (0+255),f,b
 12986   003392  C0E3  F0DB         	movff	??_ECU_LCD_4Bit_Initialize,gpio_pin_initialize@pinConfig
 12987   003396  6BDC               	clrf	(gpio_pin_initialize@pinConfig+1)& (0+255),b
 12988   003398  ECE8  F025         	call	_gpio_pin_initialize	;wreg free
 12989   00339C                     
 12990                           ;ECU_layer/LCD/LCD.c: 31:         }
 12991   00339C  0100               	movlb	0	; () banked
 12992   00339E  2BE4               	incf	ECU_LCD_4Bit_Initialize@LCD_Counter& (0+255),f,b
 12993   0033A0                     
 12994                           ; BSR set to: 0
 12995   0033A0  0E03               	movlw	3
 12996   0033A2  65E4               	cpfsgt	ECU_LCD_4Bit_Initialize@LCD_Counter& (0+255),b
 12997   0033A4  EFD6  F019         	goto	u13001
 12998   0033A8  EFD8  F019         	goto	u13000
 12999   0033AC                     u13001:
 13000   0033AC  EFC4  F019         	goto	l14320
 13001   0033B0                     u13000:
 13002   0033B0                     
 13003                           ; BSR set to: 0
 13004                           ;ECU_layer/LCD/LCD.c: 32:         _delay((unsigned long)((15)*(8000000UL/4000.0)));
 13005   0033B0  0E27               	movlw	39
 13006   0033B2  0100               	movlb	0	; () banked
 13007   0033B4  6FE3               	movwf	??_ECU_LCD_4Bit_Initialize& (0+255),b
 13008   0033B6  0EF5               	movlw	245
 13009   0033B8                     u14567:
 13010   0033B8  2EE8               	decfsz	wreg,f,c
 13011   0033BA  D7FE               	bra	u14567
 13012   0033BC  2FE3               	decfsz	??_ECU_LCD_4Bit_Initialize& (0+255),f,b
 13013   0033BE  D7FC               	bra	u14567
 13014   0033C0  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 13015   0033C4  0E38               	movlw	56
 13016   0033C6  0100               	movlb	0	; () banked
 13017   0033C8  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 13018   0033CA  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 13019   0033CE                     
 13020                           ;ECU_layer/LCD/LCD.c: 34:         _delay((unsigned long)((4.1)*(8000000UL/4000.0)));
 13021   0033CE  0E0B               	movlw	11
 13022   0033D0  0100               	movlb	0	; () banked
 13023   0033D2  6FE3               	movwf	??_ECU_LCD_4Bit_Initialize& (0+255),b
 13024   0033D4  0EA5               	movlw	165
 13025   0033D6                     u14577:
 13026   0033D6  2EE8               	decfsz	wreg,f,c
 13027   0033D8  D7FE               	bra	u14577
 13028   0033DA  2FE3               	decfsz	??_ECU_LCD_4Bit_Initialize& (0+255),f,b
 13029   0033DC  D7FC               	bra	u14577
 13030   0033DE  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 13031   0033E2  0E38               	movlw	56
 13032   0033E4  0100               	movlb	0	; () banked
 13033   0033E6  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 13034   0033E8  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 13035   0033EC                     
 13036                           ;ECU_layer/LCD/LCD.c: 36:         _delay((unsigned long)((100)*(8000000UL/4000000.0)));
 13037   0033EC  0E42               	movlw	66
 13038   0033EE                     u14587:
 13039   0033EE  2EE8               	decfsz	wreg,f,c
 13040   0033F0  D7FE               	bra	u14587
 13041   0033F2  F000 F000          	nop2	
 13042   0033F6  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 13043   0033FA  0E38               	movlw	56
 13044   0033FC  0100               	movlb	0	; () banked
 13045   0033FE  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 13046   003400  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 13047   003404  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 13048   003408  0E01               	movlw	1
 13049   00340A  0100               	movlb	0	; () banked
 13050   00340C  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 13051   00340E  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 13052   003412  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 13053   003416  0E02               	movlw	2
 13054   003418  0100               	movlb	0	; () banked
 13055   00341A  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 13056   00341C  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 13057   003420  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 13058   003424  0E06               	movlw	6
 13059   003426  0100               	movlb	0	; () banked
 13060   003428  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 13061   00342A  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 13062   00342E  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 13063   003432  0E0C               	movlw	12
 13064   003434  0100               	movlb	0	; () banked
 13065   003436  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 13066   003438  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 13067   00343C  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 13068   003440  0E28               	movlw	40
 13069   003442  0100               	movlb	0	; () banked
 13070   003444  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 13071   003446  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 13072   00344A                     
 13073                           ;ECU_layer/LCD/LCD.c: 44:         rt = ECU_LCD_4Bit_Send_Command(_LCD,0x80);
 13074   00344A  C0E2  F0DF         	movff	ECU_LCD_4Bit_Initialize@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 13075   00344E  0E80               	movlw	128
 13076   003450  0100               	movlb	0	; () banked
 13077   003452  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 13078   003454  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 13079   003458  0100               	movlb	0	; () banked
 13080   00345A  6FE5               	movwf	ECU_LCD_4Bit_Initialize@rt& (0+255),b
 13081   00345C                     l14348:
 13082                           
 13083                           ; BSR set to: 0
 13084                           ;ECU_layer/LCD/LCD.c: 47:     return rt;
 13085   00345C  51E5               	movf	ECU_LCD_4Bit_Initialize@rt& (0+255),w,b
 13086   00345E                     
 13087                           ; BSR set to: 0
 13088   00345E  0012               	return		;funcret
 13089   003460                     __end_of_ECU_LCD_4Bit_Initialize:
 13090                           	callstack 0
 13091                           
 13092 ;; *************** function _gpio_pin_initialize *****************
 13093 ;; Defined at:
 13094 ;;		line 197 in file "MCAL_layer/GPIO/hal_gpio.c"
 13095 ;; Parameters:    Size  Location     Type
 13096 ;;  pinConfig       2    6[BANK0 ] PTR const struct .
 13097 ;;		 -> Buzz(1), keypad_1$KeypadRowsConfig(4), keypad_1(8), LCD_1$DataPins(4), 
 13098 ;;		 -> LCD_1(6), pinRC7(1), pinRC6(1), CCP1_obj$CCPx_PIN$port(1), 
 13099 ;;		 -> ECU_Relay_Initialize@relay_t(1), 
 13100 ;; Auto vars:     Size  Location     Type
 13101 ;;  rt              1    9[BANK0 ] unsigned char 
 13102 ;; Return value:  Size  Location     Type
 13103 ;;                  1    wreg      unsigned char 
 13104 ;; Registers used:
 13105 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13106 ;; Tracked objects:
 13107 ;;		On entry : 0/0
 13108 ;;		On exit  : 0/0
 13109 ;;		Unchanged: 0/0
 13110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13111 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13112 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13113 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13114 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13115 ;;Total ram usage:        4 bytes
 13116 ;; Hardware stack levels used: 1
 13117 ;; Hardware stack levels required when called: 10
 13118 ;; This function calls:
 13119 ;;		_gpio_pin_direction_initialize
 13120 ;;		_gpio_pin_write_logic
 13121 ;; This function is called by:
 13122 ;;		_keyPad_Initialize
 13123 ;;		_ECU_LCD_4Bit_Initialize
 13124 ;;		_PinsConfig@hal_usart$F4659
 13125 ;;		_main
 13126 ;;		_ECU_DC_Motor_initialize
 13127 ;;		_ECU_LCD_8Bit_Initialize
 13128 ;;		_ECU_Relay_Initialize
 13129 ;;		_ECU_Segment_initialize
 13130 ;;		_CCPx_Init
 13131 ;; This function uses a non-reentrant model
 13132 ;;
 13133                           
 13134                           	psect	text30
 13135   004BD0                     __ptext30:
 13136                           	callstack 0
 13137   004BD0                     _gpio_pin_initialize:
 13138                           	callstack 19
 13139   004BD0                     
 13140                           ;MCAL_layer/GPIO/hal_gpio.c: 198:     STD_ReturnType rt = (STD_ReturnType)0x01;
 13141   004BD0  0E01               	movlw	1
 13142   004BD2  0100               	movlb	0	; () banked
 13143   004BD4  6FDE               	movwf	gpio_pin_initialize@rt& (0+255),b
 13144   004BD6                     
 13145                           ; BSR set to: 0
 13146                           ;MCAL_layer/GPIO/hal_gpio.c: 199:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 
      +                          -1 ){
 13147   004BD6  51DB               	movf	gpio_pin_initialize@pinConfig& (0+255),w,b
 13148   004BD8  11DC               	iorwf	(gpio_pin_initialize@pinConfig+1)& (0+255),w,b
 13149   004BDA  B4D8               	btfsc	status,2,c
 13150   004BDC  EFF2  F025         	goto	u11541
 13151   004BE0  EFF4  F025         	goto	u11540
 13152   004BE4                     u11541:
 13153   004BE4  EF05  F026         	goto	l869
 13154   004BE8                     u11540:
 13155   004BE8                     
 13156                           ; BSR set to: 0
 13157   004BE8  C0DB  FFD9         	movff	gpio_pin_initialize@pinConfig,fsr2l
 13158   004BEC  C0DC  FFDA         	movff	gpio_pin_initialize@pinConfig+1,fsr2h
 13159   004BF0  30DF               	rrcf	223,w,c
 13160   004BF2  32E8               	rrcf	wreg,f,c
 13161   004BF4  32E8               	rrcf	wreg,f,c
 13162   004BF6  0B07               	andlw	7
 13163   004BF8  6FDD               	movwf	??_gpio_pin_initialize& (0+255),b
 13164   004BFA  0E07               	movlw	7
 13165   004BFC  65DD               	cpfsgt	??_gpio_pin_initialize& (0+255),b
 13166   004BFE  EF03  F026         	goto	u11551
 13167   004C02  EF05  F026         	goto	u11550
 13168   004C06                     u11551:
 13169   004C06  EF08  F026         	goto	l13230
 13170   004C0A                     u11550:
 13171   004C0A                     l869:
 13172                           
 13173                           ; BSR set to: 0
 13174                           ;MCAL_layer/GPIO/hal_gpio.c: 200:         rt = (STD_ReturnType)0x00;
 13175   004C0A  6BDE               	clrf	gpio_pin_initialize@rt& (0+255),b
 13176                           
 13177                           ;MCAL_layer/GPIO/hal_gpio.c: 201:     }
 13178   004C0C  EF17  F026         	goto	l13232
 13179   004C10                     l13230:
 13180                           
 13181                           ; BSR set to: 0
 13182                           ;MCAL_layer/GPIO/hal_gpio.c: 203:         gpio_pin_direction_initialize (pinConfig);
 13183   004C10  C0DB  F0D5         	movff	gpio_pin_initialize@pinConfig,gpio_pin_direction_initialize@pinConfig
 13184   004C14  C0DC  F0D6         	movff	gpio_pin_initialize@pinConfig+1,gpio_pin_direction_initialize@pinConfig+1
 13185   004C18  ECD1  F013         	call	_gpio_pin_direction_initialize	;wreg free
 13186                           
 13187                           ;MCAL_layer/GPIO/hal_gpio.c: 204:         gpio_pin_write_logic(pinConfig,GPIO_Pin_Logic_
      +                          LOW);
 13188   004C1C  C0DB  F0D5         	movff	gpio_pin_initialize@pinConfig,gpio_pin_write_logic@pinConfig
 13189   004C20  C0DC  F0D6         	movff	gpio_pin_initialize@pinConfig+1,gpio_pin_write_logic@pinConfig+1
 13190   004C24  0E00               	movlw	0
 13191   004C26  0100               	movlb	0	; () banked
 13192   004C28  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 13193   004C2A  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
 13194   004C2E                     l13232:
 13195                           
 13196                           ;MCAL_layer/GPIO/hal_gpio.c: 207:     return rt;
 13197   004C2E  0100               	movlb	0	; () banked
 13198   004C30  51DE               	movf	gpio_pin_initialize@rt& (0+255),w,b
 13199   004C32                     
 13200                           ; BSR set to: 0
 13201   004C32  0012               	return		;funcret
 13202   004C34                     __end_of_gpio_pin_initialize:
 13203                           	callstack 0
 13204                           
 13205 ;; *************** function _gpio_pin_direction_initialize *****************
 13206 ;; Defined at:
 13207 ;;		line 20 in file "MCAL_layer/GPIO/hal_gpio.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;  pinConfig       2    0[BANK0 ] PTR const struct .
 13210 ;;		 -> Buzz(1), keypad_1$KeypadColoumnsConfig(4), keypad_1$KeypadRowsConfig(4), keypad_1(8), 
 13211 ;;		 -> LCD_1$DataPins(4), LCD_1(6), pinRC7(1), pinRC6(1), 
 13212 ;;		 -> CCP1_obj$CCPx_PIN$port(1), ECU_Relay_Initialize@relay_t(1), LED_init@LED(1), 
 13213 ;; Auto vars:     Size  Location     Type
 13214 ;;  rt              1    4[BANK0 ] unsigned char 
 13215 ;; Return value:  Size  Location     Type
 13216 ;;                  1    wreg      unsigned char 
 13217 ;; Registers used:
 13218 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13219 ;; Tracked objects:
 13220 ;;		On entry : 0/0
 13221 ;;		On exit  : 0/0
 13222 ;;		Unchanged: 0/0
 13223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13224 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13225 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13226 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13227 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13228 ;;Total ram usage:        5 bytes
 13229 ;; Hardware stack levels used: 1
 13230 ;; Hardware stack levels required when called: 9
 13231 ;; This function calls:
 13232 ;;		Nothing
 13233 ;; This function is called by:
 13234 ;;		_keyPad_Initialize
 13235 ;;		_gpio_pin_initialize
 13236 ;;		_LED_init
 13237 ;;		_ECU_Button_Intalize
 13238 ;;		_ECU_STEPPER_Motor_initialize
 13239 ;;		_Interrupt_INTx_Pin_Init
 13240 ;;		_Interrupt_RBx_Pin_Init
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244                           	psect	text31
 13245   0027A2                     __ptext31:
 13246                           	callstack 0
 13247   0027A2                     _gpio_pin_direction_initialize:
 13248                           	callstack 19
 13249   0027A2                     
 13250                           ;MCAL_layer/GPIO/hal_gpio.c: 21:     STD_ReturnType rt = (STD_ReturnType)0x01;
 13251   0027A2  0E01               	movlw	1
 13252   0027A4  0100               	movlb	0	; () banked
 13253   0027A6  6FD9               	movwf	gpio_pin_direction_initialize@rt& (0+255),b
 13254   0027A8                     
 13255                           ; BSR set to: 0
 13256                           ;MCAL_layer/GPIO/hal_gpio.c: 22:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 -
      +                          1 ){
 13257   0027A8  51D5               	movf	gpio_pin_direction_initialize@pinConfig& (0+255),w,b
 13258   0027AA  11D6               	iorwf	(gpio_pin_direction_initialize@pinConfig+1)& (0+255),w,b
 13259   0027AC  B4D8               	btfsc	status,2,c
 13260   0027AE  EFDB  F013         	goto	u11361
 13261   0027B2  EFDD  F013         	goto	u11360
 13262   0027B6                     u11361:
 13263   0027B6  EFEE  F013         	goto	l768
 13264   0027BA                     u11360:
 13265   0027BA                     
 13266                           ; BSR set to: 0
 13267   0027BA  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13268   0027BE  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13269   0027C2  30DF               	rrcf	223,w,c
 13270   0027C4  32E8               	rrcf	wreg,f,c
 13271   0027C6  32E8               	rrcf	wreg,f,c
 13272   0027C8  0B07               	andlw	7
 13273   0027CA  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 13274   0027CC  0E07               	movlw	7
 13275   0027CE  65D7               	cpfsgt	??_gpio_pin_direction_initialize& (0+255),b
 13276   0027D0  EFEC  F013         	goto	u11371
 13277   0027D4  EFEE  F013         	goto	u11370
 13278   0027D8                     u11371:
 13279   0027D8  EF20  F015         	goto	l13156
 13280   0027DC                     u11370:
 13281   0027DC                     l768:
 13282                           
 13283                           ; BSR set to: 0
 13284                           ;MCAL_layer/GPIO/hal_gpio.c: 23:         rt = (STD_ReturnType)0x00;
 13285   0027DC  6BD9               	clrf	gpio_pin_direction_initialize@rt& (0+255),b
 13286                           
 13287                           ;MCAL_layer/GPIO/hal_gpio.c: 24:     }
 13288   0027DE  EF37  F015         	goto	l13158
 13289   0027E2                     l13132:
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;MCAL_layer/GPIO/hal_gpio.c: 30:                         TRISA &= ~(1 << pinConfig ->pin
      +                          );break;
 13293   0027E2  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13294   0027E6  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13295   0027EA  30DF               	rrcf	223,w,c
 13296   0027EC  32E8               	rrcf	wreg,f,c
 13297   0027EE  32E8               	rrcf	wreg,f,c
 13298   0027F0  0B07               	andlw	7
 13299   0027F2  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 13300   0027F4  0E01               	movlw	1
 13301   0027F6  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 13302   0027F8  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 13303   0027FA  EF01  F014         	goto	u11384
 13304   0027FE                     u11385:
 13305   0027FE  90D8               	bcf	status,0,c
 13306   002800  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 13307   002802                     u11384:
 13308   002802  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 13309   002804  EFFF  F013         	goto	u11385
 13310   002808  0100               	movlb	0	; () banked
 13311   00280A  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 13312   00280C  0AFF               	xorlw	255
 13313   00280E  1692               	andwf	146,f,c	;volatile
 13314   002810  EF37  F015         	goto	l13158
 13315   002814                     l13134:
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;MCAL_layer/GPIO/hal_gpio.c: 32:                         TRISB &= ~(1 << pinConfig ->pin
      +                          );break;
 13319   002814  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13320   002818  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13321   00281C  30DF               	rrcf	223,w,c
 13322   00281E  32E8               	rrcf	wreg,f,c
 13323   002820  32E8               	rrcf	wreg,f,c
 13324   002822  0B07               	andlw	7
 13325   002824  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 13326   002826  0E01               	movlw	1
 13327   002828  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 13328   00282A  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 13329   00282C  EF1A  F014         	goto	u11394
 13330   002830                     u11395:
 13331   002830  90D8               	bcf	status,0,c
 13332   002832  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 13333   002834                     u11394:
 13334   002834  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 13335   002836  EF18  F014         	goto	u11395
 13336   00283A  0100               	movlb	0	; () banked
 13337   00283C  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 13338   00283E  0AFF               	xorlw	255
 13339   002840  1693               	andwf	147,f,c	;volatile
 13340   002842  EF37  F015         	goto	l13158
 13341   002846                     l13136:
 13342                           
 13343                           ; BSR set to: 0
 13344                           ;MCAL_layer/GPIO/hal_gpio.c: 34:                         TRISC &= ~(1 << pinConfig ->pin
      +                          );break;
 13345   002846  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13346   00284A  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13347   00284E  30DF               	rrcf	223,w,c
 13348   002850  32E8               	rrcf	wreg,f,c
 13349   002852  32E8               	rrcf	wreg,f,c
 13350   002854  0B07               	andlw	7
 13351   002856  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 13352   002858  0E01               	movlw	1
 13353   00285A  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 13354   00285C  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 13355   00285E  EF33  F014         	goto	u11404
 13356   002862                     u11405:
 13357   002862  90D8               	bcf	status,0,c
 13358   002864  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 13359   002866                     u11404:
 13360   002866  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 13361   002868  EF31  F014         	goto	u11405
 13362   00286C  0100               	movlb	0	; () banked
 13363   00286E  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 13364   002870  0AFF               	xorlw	255
 13365   002872  1694               	andwf	148,f,c	;volatile
 13366   002874  EF37  F015         	goto	l13158
 13367   002878                     l13138:
 13368                           
 13369                           ; BSR set to: 0
 13370                           ;MCAL_layer/GPIO/hal_gpio.c: 36:                         TRISD &= ~(1 << pinConfig ->pin
      +                          );break;
 13371   002878  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13372   00287C  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13373   002880  30DF               	rrcf	223,w,c
 13374   002882  32E8               	rrcf	wreg,f,c
 13375   002884  32E8               	rrcf	wreg,f,c
 13376   002886  0B07               	andlw	7
 13377   002888  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 13378   00288A  0E01               	movlw	1
 13379   00288C  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 13380   00288E  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 13381   002890  EF4C  F014         	goto	u11414
 13382   002894                     u11415:
 13383   002894  90D8               	bcf	status,0,c
 13384   002896  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 13385   002898                     u11414:
 13386   002898  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 13387   00289A  EF4A  F014         	goto	u11415
 13388   00289E  0100               	movlb	0	; () banked
 13389   0028A0  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 13390   0028A2  0AFF               	xorlw	255
 13391   0028A4  1695               	andwf	149,f,c	;volatile
 13392   0028A6  EF37  F015         	goto	l13158
 13393   0028AA                     l13140:
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;MCAL_layer/GPIO/hal_gpio.c: 38:                         TRISE &= ~(1 << pinConfig ->pin
      +                          );break;
 13397   0028AA  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13398   0028AE  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13399   0028B2  30DF               	rrcf	223,w,c
 13400   0028B4  32E8               	rrcf	wreg,f,c
 13401   0028B6  32E8               	rrcf	wreg,f,c
 13402   0028B8  0B07               	andlw	7
 13403   0028BA  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 13404   0028BC  0E01               	movlw	1
 13405   0028BE  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 13406   0028C0  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 13407   0028C2  EF65  F014         	goto	u11424
 13408   0028C6                     u11425:
 13409   0028C6  90D8               	bcf	status,0,c
 13410   0028C8  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 13411   0028CA                     u11424:
 13412   0028CA  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 13413   0028CC  EF63  F014         	goto	u11425
 13414   0028D0  0100               	movlb	0	; () banked
 13415   0028D2  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 13416   0028D4  0AFF               	xorlw	255
 13417   0028D6  1696               	andwf	150,f,c	;volatile
 13418   0028D8  EF37  F015         	goto	l13158
 13419   0028DC                     l13142:
 13420                           
 13421                           ; BSR set to: 0
 13422   0028DC  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13423   0028E0  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13424   0028E4  50DF               	movf	223,w,c
 13425   0028E6  0B07               	andlw	7
 13426                           
 13427                           ; Switch size 1, requested type "simple"
 13428                           ; Number of cases is 5, Range of values is 0 to 4
 13429                           ; switch strategies available:
 13430                           ; Name         Instructions Cycles
 13431                           ; simple_byte           16     9 (average)
 13432                           ;	Chosen strategy is simple_byte
 13433   0028E8  0A00               	xorlw	0	; case 0
 13434   0028EA  B4D8               	btfsc	status,2,c
 13435   0028EC  EFF1  F013         	goto	l13132
 13436   0028F0  0A01               	xorlw	1	; case 1
 13437   0028F2  B4D8               	btfsc	status,2,c
 13438   0028F4  EF0A  F014         	goto	l13134
 13439   0028F8  0A03               	xorlw	3	; case 2
 13440   0028FA  B4D8               	btfsc	status,2,c
 13441   0028FC  EF23  F014         	goto	l13136
 13442   002900  0A01               	xorlw	1	; case 3
 13443   002902  B4D8               	btfsc	status,2,c
 13444   002904  EF3C  F014         	goto	l13138
 13445   002908  0A07               	xorlw	7	; case 4
 13446   00290A  B4D8               	btfsc	status,2,c
 13447   00290C  EF55  F014         	goto	l13140
 13448   002910  EFEE  F013         	goto	l768
 13449   002914                     l13144:
 13450                           
 13451                           ; BSR set to: 0
 13452                           ;MCAL_layer/GPIO/hal_gpio.c: 47:                         TRISA |= (1 << pinConfig ->pin)
      +                          ;break;
 13453   002914  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13454   002918  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13455   00291C  30DF               	rrcf	223,w,c
 13456   00291E  32E8               	rrcf	wreg,f,c
 13457   002920  32E8               	rrcf	wreg,f,c
 13458   002922  0B07               	andlw	7
 13459   002924  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 13460   002926  0E01               	movlw	1
 13461   002928  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 13462   00292A  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 13463   00292C  EF9A  F014         	goto	u11434
 13464   002930                     u11435:
 13465   002930  90D8               	bcf	status,0,c
 13466   002932  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 13467   002934                     u11434:
 13468   002934  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 13469   002936  EF98  F014         	goto	u11435
 13470   00293A  0100               	movlb	0	; () banked
 13471   00293C  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 13472   00293E  1292               	iorwf	146,f,c	;volatile
 13473   002940  EFEE  F013         	goto	l768
 13474   002944                     l13146:
 13475                           
 13476                           ; BSR set to: 0
 13477                           ;MCAL_layer/GPIO/hal_gpio.c: 49:                         TRISB |= (1 << pinConfig ->pin)
      +                          ;break;
 13478   002944  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13479   002948  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13480   00294C  30DF               	rrcf	223,w,c
 13481   00294E  32E8               	rrcf	wreg,f,c
 13482   002950  32E8               	rrcf	wreg,f,c
 13483   002952  0B07               	andlw	7
 13484   002954  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 13485   002956  0E01               	movlw	1
 13486   002958  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 13487   00295A  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 13488   00295C  EFB2  F014         	goto	u11444
 13489   002960                     u11445:
 13490   002960  90D8               	bcf	status,0,c
 13491   002962  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 13492   002964                     u11444:
 13493   002964  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 13494   002966  EFB0  F014         	goto	u11445
 13495   00296A  0100               	movlb	0	; () banked
 13496   00296C  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 13497   00296E  1293               	iorwf	147,f,c	;volatile
 13498   002970  EFEE  F013         	goto	l768
 13499   002974                     l13148:
 13500                           
 13501                           ; BSR set to: 0
 13502                           ;MCAL_layer/GPIO/hal_gpio.c: 51:                         TRISC |= (1 << pinConfig ->pin)
      +                          ;break;
 13503   002974  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13504   002978  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13505   00297C  30DF               	rrcf	223,w,c
 13506   00297E  32E8               	rrcf	wreg,f,c
 13507   002980  32E8               	rrcf	wreg,f,c
 13508   002982  0B07               	andlw	7
 13509   002984  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 13510   002986  0E01               	movlw	1
 13511   002988  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 13512   00298A  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 13513   00298C  EFCA  F014         	goto	u11454
 13514   002990                     u11455:
 13515   002990  90D8               	bcf	status,0,c
 13516   002992  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 13517   002994                     u11454:
 13518   002994  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 13519   002996  EFC8  F014         	goto	u11455
 13520   00299A  0100               	movlb	0	; () banked
 13521   00299C  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 13522   00299E  1294               	iorwf	148,f,c	;volatile
 13523   0029A0  EFEE  F013         	goto	l768
 13524   0029A4                     l13150:
 13525                           
 13526                           ; BSR set to: 0
 13527                           ;MCAL_layer/GPIO/hal_gpio.c: 53:                         TRISD |= (1 << pinConfig ->pin)
      +                          ;break;
 13528   0029A4  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13529   0029A8  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13530   0029AC  30DF               	rrcf	223,w,c
 13531   0029AE  32E8               	rrcf	wreg,f,c
 13532   0029B0  32E8               	rrcf	wreg,f,c
 13533   0029B2  0B07               	andlw	7
 13534   0029B4  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 13535   0029B6  0E01               	movlw	1
 13536   0029B8  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 13537   0029BA  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 13538   0029BC  EFE2  F014         	goto	u11464
 13539   0029C0                     u11465:
 13540   0029C0  90D8               	bcf	status,0,c
 13541   0029C2  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 13542   0029C4                     u11464:
 13543   0029C4  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 13544   0029C6  EFE0  F014         	goto	u11465
 13545   0029CA  0100               	movlb	0	; () banked
 13546   0029CC  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 13547   0029CE  1295               	iorwf	149,f,c	;volatile
 13548   0029D0  EFEE  F013         	goto	l768
 13549   0029D4                     l13152:
 13550                           
 13551                           ; BSR set to: 0
 13552                           ;MCAL_layer/GPIO/hal_gpio.c: 55:                         TRISE |= (1 << pinConfig ->pin)
      +                          ;break;
 13553   0029D4  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13554   0029D8  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13555   0029DC  30DF               	rrcf	223,w,c
 13556   0029DE  32E8               	rrcf	wreg,f,c
 13557   0029E0  32E8               	rrcf	wreg,f,c
 13558   0029E2  0B07               	andlw	7
 13559   0029E4  6FD7               	movwf	??_gpio_pin_direction_initialize& (0+255),b
 13560   0029E6  0E01               	movlw	1
 13561   0029E8  6FD8               	movwf	(??_gpio_pin_direction_initialize+1)& (0+255),b
 13562   0029EA  2BD7               	incf	??_gpio_pin_direction_initialize& (0+255),f,b
 13563   0029EC  EFFA  F014         	goto	u11474
 13564   0029F0                     u11475:
 13565   0029F0  90D8               	bcf	status,0,c
 13566   0029F2  37D8               	rlcf	(??_gpio_pin_direction_initialize+1)& (0+255),f,b
 13567   0029F4                     u11474:
 13568   0029F4  2FD7               	decfsz	??_gpio_pin_direction_initialize& (0+255),f,b
 13569   0029F6  EFF8  F014         	goto	u11475
 13570   0029FA  0100               	movlb	0	; () banked
 13571   0029FC  51D8               	movf	(??_gpio_pin_direction_initialize+1)& (0+255),w,b
 13572   0029FE  1296               	iorwf	150,f,c	;volatile
 13573   002A00  EFEE  F013         	goto	l768
 13574   002A04                     l789:
 13575                           
 13576                           ; BSR set to: 0
 13577                           ;MCAL_layer/GPIO/hal_gpio.c: 57:                 }
 13578   002A04  EFEE  F013         	goto	l768
 13579   002A08                     l13154:
 13580                           
 13581                           ; BSR set to: 0
 13582   002A08  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13583   002A0C  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13584   002A10  50DF               	movf	223,w,c
 13585   002A12  0B07               	andlw	7
 13586                           
 13587                           ; Switch size 1, requested type "simple"
 13588                           ; Number of cases is 5, Range of values is 0 to 4
 13589                           ; switch strategies available:
 13590                           ; Name         Instructions Cycles
 13591                           ; simple_byte           16     9 (average)
 13592                           ;	Chosen strategy is simple_byte
 13593   002A14  0A00               	xorlw	0	; case 0
 13594   002A16  B4D8               	btfsc	status,2,c
 13595   002A18  EF8A  F014         	goto	l13144
 13596   002A1C  0A01               	xorlw	1	; case 1
 13597   002A1E  B4D8               	btfsc	status,2,c
 13598   002A20  EFA2  F014         	goto	l13146
 13599   002A24  0A03               	xorlw	3	; case 2
 13600   002A26  B4D8               	btfsc	status,2,c
 13601   002A28  EFBA  F014         	goto	l13148
 13602   002A2C  0A01               	xorlw	1	; case 3
 13603   002A2E  B4D8               	btfsc	status,2,c
 13604   002A30  EFD2  F014         	goto	l13150
 13605   002A34  0A07               	xorlw	7	; case 4
 13606   002A36  B4D8               	btfsc	status,2,c
 13607   002A38  EFEA  F014         	goto	l13152
 13608   002A3C  EF02  F015         	goto	l789
 13609   002A40                     l13156:
 13610                           
 13611                           ; BSR set to: 0
 13612   002A40  C0D5  FFD9         	movff	gpio_pin_direction_initialize@pinConfig,fsr2l
 13613   002A44  C0D6  FFDA         	movff	gpio_pin_direction_initialize@pinConfig+1,fsr2h
 13614   002A48  BCDF               	btfsc	indf2,6,c
 13615   002A4A  EF29  F015         	goto	u11481
 13616   002A4E  EF2C  F015         	goto	u11480
 13617   002A52                     u11481:
 13618   002A52  0E01               	movlw	1
 13619   002A54  EF2D  F015         	goto	u11486
 13620   002A58                     u11480:
 13621   002A58  0E00               	movlw	0
 13622   002A5A                     u11486:
 13623                           
 13624                           ; Switch size 1, requested type "simple"
 13625                           ; Number of cases is 2, Range of values is 0 to 1
 13626                           ; switch strategies available:
 13627                           ; Name         Instructions Cycles
 13628                           ; simple_byte            7     4 (average)
 13629                           ;	Chosen strategy is simple_byte
 13630   002A5A  0A00               	xorlw	0	; case 0
 13631   002A5C  B4D8               	btfsc	status,2,c
 13632   002A5E  EF6E  F014         	goto	l13142
 13633   002A62  0A01               	xorlw	1	; case 1
 13634   002A64  B4D8               	btfsc	status,2,c
 13635   002A66  EF04  F015         	goto	l13154
 13636   002A6A  EFEE  F013         	goto	l768
 13637   002A6E                     l13158:
 13638                           
 13639                           ; BSR set to: 0
 13640                           ;MCAL_layer/GPIO/hal_gpio.c: 61:     return rt;
 13641   002A6E  51D9               	movf	gpio_pin_direction_initialize@rt& (0+255),w,b
 13642   002A70                     
 13643                           ; BSR set to: 0
 13644   002A70  0012               	return		;funcret
 13645   002A72                     __end_of_gpio_pin_direction_initialize:
 13646                           	callstack 0
 13647                           
 13648 ;; *************** function _Dashboard *****************
 13649 ;; Defined at:
 13650 ;;		line 474 in file "main.c"
 13651 ;; Parameters:    Size  Location     Type
 13652 ;;		None
 13653 ;; Auto vars:     Size  Location     Type
 13654 ;;		None
 13655 ;; Return value:  Size  Location     Type
 13656 ;;                  1    wreg      void 
 13657 ;; Registers used:
 13658 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
 13659 ;; Tracked objects:
 13660 ;;		On entry : 0/0
 13661 ;;		On exit  : 0/0
 13662 ;;		Unchanged: 0/0
 13663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13664 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13666 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13667 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13668 ;;Total ram usage:        2 bytes
 13669 ;; Hardware stack levels used: 1
 13670 ;; Hardware stack levels required when called: 19
 13671 ;; This function calls:
 13672 ;;		_ADC_Get_Conversion_Result_Block
 13673 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
 13674 ;;		_I2C_Write1ByteRegister
 13675 ;;		_TemperatureSensor_TC74_Read_Temp
 13676 ;; This function is called by:
 13677 ;;		_main
 13678 ;; This function uses a non-reentrant model
 13679 ;;
 13680                           
 13681                           	psect	text32
 13682   003D40                     __ptext32:
 13683                           	callstack 0
 13684   003D40                     _Dashboard:
 13685                           	callstack 11
 13686   003D40                     
 13687                           ;main.c: 476:     TemperatureSensor_TC74_Read_Value = TemperatureSensor_TC74_Read_Temp(0
      +                          x92);
 13688   003D40  0E92               	movlw	146
 13689   003D42  EC53  F02A         	call	_TemperatureSensor_TC74_Read_Temp
 13690   003D46  6E3E               	movwf	_TemperatureSensor_TC74_Read_Value^0,c
 13691                           
 13692                           ;main.c: 477:     I2C_Write1ByteRegister(0x70, 0x00, TemperatureSensor_TC74_Read_Value);
 13693   003D48  0E00               	movlw	0
 13694   003D4A  0100               	movlb	0	; () banked
 13695   003D4C  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
 13696   003D4E  C03E  F0E5         	movff	_TemperatureSensor_TC74_Read_Value,I2C_Write1ByteRegister@data
 13697   003D52  0E70               	movlw	112
 13698   003D54  EC6F  F024         	call	_I2C_Write1ByteRegister
 13699   003D58                     
 13700                           ;main.c: 478:     _delay((unsigned long)((100)*(8000000/4000.0)));
 13701   003D58  0E02               	movlw	2
 13702   003D5A  0101               	movlb	1	; () banked
 13703   003D5C  6F93               	movwf	(??_Dashboard+1)& (0+255),b
 13704   003D5E  0E04               	movlw	4
 13705   003D60  6F92               	movwf	??_Dashboard& (0+255),b
 13706   003D62  0EBA               	movlw	186
 13707   003D64                     u14597:
 13708   003D64  2EE8               	decfsz	wreg,f,c
 13709   003D66  D7FE               	bra	u14597
 13710   003D68  2F92               	decfsz	??_Dashboard& (0+255),f,b
 13711   003D6A  D7FC               	bra	u14597
 13712   003D6C  2F93               	decfsz	(??_Dashboard+1)& (0+255),f,b
 13713   003D6E  D7FA               	bra	u14597
 13714   003D70  0000               	nop	
 13715   003D72                     
 13716                           ;main.c: 480:     ret = ADC_Get_Conversion_Result_Block (&ADC_LDR, ADC_CHANNEL_AN0, &LDR
      +                          _Read_Value);
 13717   003D72  0E30               	movlw	low _ADC_LDR
 13718   003D74  0100               	movlb	0	; () banked
 13719   003D76  6FDC               	movwf	ADC_Get_Conversion_Result_Block@_ADC_config& (0+255),b
 13720   003D78  0E01               	movlw	high _ADC_LDR
 13721   003D7A  6FDD               	movwf	(ADC_Get_Conversion_Result_Block@_ADC_config+1)& (0+255),b
 13722   003D7C  0E00               	movlw	0
 13723   003D7E  6FDE               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Channel& (0+255),b
 13724   003D80  0E31               	movlw	low _LDR_Read_Value
 13725   003D82  6FDF               	movwf	ADC_Get_Conversion_Result_Block@_ADC_Result& (0+255),b
 13726   003D84  ECAB  F026         	call	_ADC_Get_Conversion_Result_Block	;wreg free
 13727   003D88  0101               	movlb	1	; () banked
 13728   003D8A  6F96               	movwf	_ret& (0+255),b
 13729   003D8C                     
 13730                           ; BSR set to: 1
 13731                           ;main.c: 481:     I2C_Write1ByteRegister(0x50, 0x00, LDR_Read_Value);
 13732   003D8C  0E00               	movlw	0
 13733   003D8E  0100               	movlb	0	; () banked
 13734   003D90  6FE4               	movwf	I2C_Write1ByteRegister@reg& (0+255),b
 13735   003D92  C031  F0E5         	movff	_LDR_Read_Value,I2C_Write1ByteRegister@data
 13736   003D96  0E50               	movlw	80
 13737   003D98  EC6F  F024         	call	_I2C_Write1ByteRegister
 13738   003D9C                     
 13739                           ;main.c: 482:     _delay((unsigned long)((100)*(8000000/4000.0)));
 13740   003D9C  0E02               	movlw	2
 13741   003D9E  0101               	movlb	1	; () banked
 13742   003DA0  6F93               	movwf	(??_Dashboard+1)& (0+255),b
 13743   003DA2  0E04               	movlw	4
 13744   003DA4  6F92               	movwf	??_Dashboard& (0+255),b
 13745   003DA6  0EBA               	movlw	186
 13746   003DA8                     u14607:
 13747   003DA8  2EE8               	decfsz	wreg,f,c
 13748   003DAA  D7FE               	bra	u14607
 13749   003DAC  2F92               	decfsz	??_Dashboard& (0+255),f,b
 13750   003DAE  D7FC               	bra	u14607
 13751   003DB0  2F93               	decfsz	(??_Dashboard+1)& (0+255),f,b
 13752   003DB2  D7FA               	bra	u14607
 13753   003DB4  0000               	nop	
 13754   003DB6                     
 13755                           ;main.c: 484:     ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1, 1, 1, "1: Clock"
      +                          );
 13756   003DB6  0E37               	movlw	low _LCD_1
 13757   003DB8  0101               	movlb	1	; () banked
 13758   003DBA  6F8C               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD& (0+255),b
 13759   003DBC  0E01               	movlw	1
 13760   003DBE  6F8D               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Row& (0+255),b
 13761   003DC0  0E01               	movlw	1
 13762   003DC2  6F8E               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn& (0+255),b
 13763   003DC4  0E2C               	movlw	low STR_8
 13764   003DC6  6F8F               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),b
 13765   003DC8  518F               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),w,b
 13766   003DCA  A4D8               	btfss	status,2,c
 13767   003DCC  0E10               	movlw	high __smallconst
 13768   003DCE  6F90               	movwf	(ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)& (0+255),b
 13769   003DD0  ECFF  F020         	call	_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
 13770   003DD4  0101               	movlb	1	; () banked
 13771   003DD6  6F96               	movwf	_ret& (0+255),b
 13772   003DD8                     
 13773                           ; BSR set to: 1
 13774                           ;main.c: 485:     ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1, 2, 1,"2: Alarm")
      +                          ;
 13775   003DD8  0E37               	movlw	low _LCD_1
 13776   003DDA  6F8C               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD& (0+255),b
 13777   003DDC  0E02               	movlw	2
 13778   003DDE  6F8D               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Row& (0+255),b
 13779   003DE0  0E01               	movlw	1
 13780   003DE2  6F8E               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn& (0+255),b
 13781   003DE4  0E35               	movlw	low STR_9
 13782   003DE6  6F8F               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),b
 13783   003DE8  518F               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),w,b
 13784   003DEA  A4D8               	btfss	status,2,c
 13785   003DEC  0E10               	movlw	high __smallconst
 13786   003DEE  6F90               	movwf	(ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)& (0+255),b
 13787   003DF0  ECFF  F020         	call	_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
 13788   003DF4  0101               	movlb	1	; () banked
 13789   003DF6  6F96               	movwf	_ret& (0+255),b
 13790   003DF8                     
 13791                           ; BSR set to: 1
 13792   003DF8  0012               	return		;funcret
 13793   003DFA                     __end_of_Dashboard:
 13794                           	callstack 0
 13795                           
 13796 ;; *************** function _TemperatureSensor_TC74_Read_Temp *****************
 13797 ;; Defined at:
 13798 ;;		line 11 in file "ECU_layer/TemperatureSensor_TC74/TemperatureSensor_TC74.c"
 13799 ;; Parameters:    Size  Location     Type
 13800 ;;  TC74_Address    1    wreg     unsigned char 
 13801 ;; Auto vars:     Size  Location     Type
 13802 ;;  TC74_Address    1   18[BANK0 ] unsigned char 
 13803 ;;  TC74_TempVal    1   19[BANK0 ] unsigned char 
 13804 ;; Return value:  Size  Location     Type
 13805 ;;                  1    wreg      unsigned char 
 13806 ;; Registers used:
 13807 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13808 ;; Tracked objects:
 13809 ;;		On entry : 0/0
 13810 ;;		On exit  : 0/0
 13811 ;;		Unchanged: 0/0
 13812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13814 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13817 ;;Total ram usage:        2 bytes
 13818 ;; Hardware stack levels used: 1
 13819 ;; Hardware stack levels required when called: 18
 13820 ;; This function calls:
 13821 ;;		_I2C_Read1ByteRegister
 13822 ;; This function is called by:
 13823 ;;		_main
 13824 ;;		_Dashboard
 13825 ;; This function uses a non-reentrant model
 13826 ;;
 13827                           
 13828                           	psect	text33
 13829   0054A6                     __ptext33:
 13830                           	callstack 0
 13831   0054A6                     _TemperatureSensor_TC74_Read_Temp:
 13832                           	callstack 12
 13833                           
 13834                           ; BSR set to: 1
 13835                           ;incstack = 0
 13836                           ;TemperatureSensor_TC74_Read_Temp@TC74_Address stored from wreg
 13837   0054A6  0100               	movlb	0	; () banked
 13838   0054A8  6FE7               	movwf	TemperatureSensor_TC74_Read_Temp@TC74_Address& (0+255),b
 13839   0054AA                     
 13840                           ;ECU_layer/TemperatureSensor_TC74/TemperatureSensor_TC74.c: 13:     TC74_TempValue = I2C
      +                          _Read1ByteRegister(TC74_Address, 0x00);
 13841   0054AA  0E00               	movlw	0
 13842   0054AC  0100               	movlb	0	; () banked
 13843   0054AE  6FE4               	movwf	I2C_Read1ByteRegister@reg& (0+255),b
 13844   0054B0  51E7               	movf	TemperatureSensor_TC74_Read_Temp@TC74_Address& (0+255),w,b
 13845   0054B2  ECFA  F023         	call	_I2C_Read1ByteRegister
 13846   0054B6  0100               	movlb	0	; () banked
 13847   0054B8  6FE8               	movwf	TemperatureSensor_TC74_Read_Temp@TC74_TempValue& (0+255),b
 13848   0054BA                     
 13849                           ; BSR set to: 0
 13850                           ;ECU_layer/TemperatureSensor_TC74/TemperatureSensor_TC74.c: 15:     return TC74_TempValu
      +                          e;
 13851   0054BA  51E8               	movf	TemperatureSensor_TC74_Read_Temp@TC74_TempValue& (0+255),w,b
 13852   0054BC                     
 13853                           ; BSR set to: 0
 13854   0054BC  0012               	return		;funcret
 13855   0054BE                     __end_of_TemperatureSensor_TC74_Read_Temp:
 13856                           	callstack 0
 13857                           
 13858 ;; *************** function _I2C_Read1ByteRegister *****************
 13859 ;; Defined at:
 13860 ;;		line 63 in file "mcc_generated_files/examples/i2c_master_example.c"
 13861 ;; Parameters:    Size  Location     Type
 13862 ;;  address         1    wreg     unsigned char 
 13863 ;;  reg             1   15[BANK0 ] unsigned char 
 13864 ;; Auto vars:     Size  Location     Type
 13865 ;;  address         1   16[BANK0 ] unsigned char 
 13866 ;;  returnValue     1   17[BANK0 ] unsigned char 
 13867 ;; Return value:  Size  Location     Type
 13868 ;;                  1    wreg      unsigned char 
 13869 ;; Registers used:
 13870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13876 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13877 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13879 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13880 ;;Total ram usage:        3 bytes
 13881 ;; Hardware stack levels used: 1
 13882 ;; Hardware stack levels required when called: 17
 13883 ;; This function calls:
 13884 ;;		_I2C_Close
 13885 ;;		_I2C_MasterWrite
 13886 ;;		_I2C_Open
 13887 ;;		_I2C_SetAddressNackCallback
 13888 ;;		_I2C_SetBuffer
 13889 ;;		_I2C_SetDataCompleteCallback
 13890 ;; This function is called by:
 13891 ;;		_REALTIMECLOCK_DS1307_Get_Data
 13892 ;;		_TemperatureSensor_TC74_Read_Temp
 13893 ;;		_EEPROM_20C02C_Read_Byte
 13894 ;; This function uses a non-reentrant model
 13895 ;;
 13896                           
 13897                           	psect	text34
 13898   0047F4                     __ptext34:
 13899                           	callstack 0
 13900   0047F4                     _I2C_Read1ByteRegister:
 13901                           	callstack 12
 13902                           
 13903                           ; BSR set to: 0
 13904                           ;incstack = 0
 13905                           ;I2C_Read1ByteRegister@address stored from wreg
 13906   0047F4  0100               	movlb	0	; () banked
 13907   0047F6  6FE5               	movwf	I2C_Read1ByteRegister@address& (0+255),b
 13908   0047F8                     
 13909                           ;mcc_generated_files/examples/i2c_master_example.c: 63: uint8_t I2C_Read1ByteRegister(i2
      +                          c_address_t address, uint8_t reg);mcc_generated_files/examples/i2c_master_example.c: 64:
      +                           {;mcc_generated_files/examples/i2c_master_example.c: 65:     uint8_t returnValue = 0x00
      +                          ;
 13910   0047F8  0100               	movlb	0	; () banked
 13911   0047FA  6BE6               	clrf	I2C_Read1ByteRegister@returnValue& (0+255),b
 13912   0047FC                     l13772:
 13913   0047FC  0100               	movlb	0	; () banked
 13914   0047FE  51E5               	movf	I2C_Read1ByteRegister@address& (0+255),w,b
 13915   004800  EC36  F024         	call	_I2C_Open
 13916   004804  0900               	iorlw	0
 13917   004806  B4D8               	btfsc	status,2,c
 13918   004808  EF08  F024         	goto	u12381
 13919   00480C  EF0A  F024         	goto	u12380
 13920   004810                     u12381:
 13921   004810  EFFE  F023         	goto	l13772
 13922   004814                     u12380:
 13923   004814                     
 13924                           ;mcc_generated_files/examples/i2c_master_example.c: 68:     I2C_SetDataCompleteCallback(
      +                          rd1RegCompleteHandler,&returnValue);
 13925   004814  0EB4               	movlw	low _rd1RegCompleteHandler
 13926   004816  0100               	movlb	0	; () banked
 13927   004818  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 13928   00481A  0E52               	movlw	high _rd1RegCompleteHandler
 13929   00481C  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 13930   00481E  0EE6               	movlw	low I2C_Read1ByteRegister@returnValue
 13931   004820  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 13932   004822  EC73  F02A         	call	_I2C_SetDataCompleteCallback	;wreg free
 13933   004826                     
 13934                           ;mcc_generated_files/examples/i2c_master_example.c: 69:     I2C_SetBuffer(&reg,1);
 13935   004826  0EE4               	movlw	low I2C_Read1ByteRegister@reg
 13936   004828  0100               	movlb	0	; () banked
 13937   00482A  6FD5               	movwf	I2C_SetBuffer@buffer& (0+255),b
 13938   00482C  0E00               	movlw	0
 13939   00482E  6FD7               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
 13940   004830  0E01               	movlw	1
 13941   004832  6FD6               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
 13942   004834  ECC9  F029         	call	_I2C_SetBuffer	;wreg free
 13943   004838                     
 13944                           ;mcc_generated_files/examples/i2c_master_example.c: 70:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 13945   004838  0E00               	movlw	0
 13946   00483A  0100               	movlb	0	; () banked
 13947   00483C  6FD9               	movwf	I2C_SetAddressNackCallback@cb& (0+255),b
 13948   00483E  0E00               	movlw	0
 13949   004840  6FDA               	movwf	(I2C_SetAddressNackCallback@cb+1)& (0+255),b
 13950   004842  0E00               	movlw	0
 13951   004844  6FDB               	movwf	I2C_SetAddressNackCallback@ptr& (0+255),b
 13952   004846  0E00               	movlw	0
 13953   004848  6FDC               	movwf	(I2C_SetAddressNackCallback@ptr+1)& (0+255),b
 13954   00484A  EC5F  F02A         	call	_I2C_SetAddressNackCallback	;wreg free
 13955   00484E                     
 13956                           ;mcc_generated_files/examples/i2c_master_example.c: 71:     I2C_MasterWrite();
 13957   00484E  ECD1  F02A         	call	_I2C_MasterWrite	;wreg free
 13958   004852                     l13782:
 13959   004852  EC1B  F029         	call	_I2C_Close	;wreg free
 13960   004856  06E8               	decf	wreg,f,c
 13961   004858  B4D8               	btfsc	status,2,c
 13962   00485A  EF31  F024         	goto	u12391
 13963   00485E  EF33  F024         	goto	u12390
 13964   004862                     u12391:
 13965   004862  EF29  F024         	goto	l13782
 13966   004866                     u12390:
 13967   004866                     
 13968                           ;mcc_generated_files/examples/i2c_master_example.c: 74:     return returnValue;
 13969   004866  0100               	movlb	0	; () banked
 13970   004868  51E6               	movf	I2C_Read1ByteRegister@returnValue& (0+255),w,b
 13971   00486A                     
 13972                           ; BSR set to: 0
 13973   00486A  0012               	return		;funcret
 13974   00486C                     __end_of_I2C_Read1ByteRegister:
 13975                           	callstack 0
 13976                           
 13977 ;; *************** function _I2C_Write1ByteRegister *****************
 13978 ;; Defined at:
 13979 ;;		line 91 in file "mcc_generated_files/examples/i2c_master_example.c"
 13980 ;; Parameters:    Size  Location     Type
 13981 ;;  address         1    wreg     unsigned char 
 13982 ;;  reg             1   15[BANK0 ] unsigned char 
 13983 ;;  data            1   16[BANK0 ] unsigned char 
 13984 ;; Auto vars:     Size  Location     Type
 13985 ;;  address         1   17[BANK0 ] unsigned char 
 13986 ;; Return value:  Size  Location     Type
 13987 ;;                  1    wreg      void 
 13988 ;; Registers used:
 13989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13990 ;; Tracked objects:
 13991 ;;		On entry : 0/0
 13992 ;;		On exit  : 0/0
 13993 ;;		Unchanged: 0/0
 13994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13995 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13996 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13998 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13999 ;;Total ram usage:        3 bytes
 14000 ;; Hardware stack levels used: 1
 14001 ;; Hardware stack levels required when called: 17
 14002 ;; This function calls:
 14003 ;;		_I2C_Close
 14004 ;;		_I2C_MasterWrite
 14005 ;;		_I2C_Open
 14006 ;;		_I2C_SetAddressNackCallback
 14007 ;;		_I2C_SetBuffer
 14008 ;;		_I2C_SetDataCompleteCallback
 14009 ;; This function is called by:
 14010 ;;		_main
 14011 ;;		_Dashboard
 14012 ;;		_EEPROM_20C02C_Write_Byte
 14013 ;; This function uses a non-reentrant model
 14014 ;;
 14015                           
 14016                           	psect	text35
 14017   0048DE                     __ptext35:
 14018                           	callstack 0
 14019   0048DE                     _I2C_Write1ByteRegister:
 14020                           	callstack 13
 14021                           
 14022                           ; BSR set to: 0
 14023                           ;incstack = 0
 14024                           ;I2C_Write1ByteRegister@address stored from wreg
 14025   0048DE  0100               	movlb	0	; () banked
 14026   0048E0  6FE6               	movwf	I2C_Write1ByteRegister@address& (0+255),b
 14027   0048E2                     l13980:
 14028   0048E2  0100               	movlb	0	; () banked
 14029   0048E4  51E6               	movf	I2C_Write1ByteRegister@address& (0+255),w,b
 14030   0048E6  EC36  F024         	call	_I2C_Open
 14031   0048EA  0900               	iorlw	0
 14032   0048EC  B4D8               	btfsc	status,2,c
 14033   0048EE  EF7B  F024         	goto	u12591
 14034   0048F2  EF7D  F024         	goto	u12590
 14035   0048F6                     u12591:
 14036   0048F6  EF71  F024         	goto	l13980
 14037   0048FA                     u12590:
 14038   0048FA                     
 14039                           ;mcc_generated_files/examples/i2c_master_example.c: 94:     I2C_SetDataCompleteCallback(
      +                          wr1RegCompleteHandler,&data);
 14040   0048FA  0E64               	movlw	low _wr1RegCompleteHandler
 14041   0048FC  0100               	movlb	0	; () banked
 14042   0048FE  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 14043   004900  0E52               	movlw	high _wr1RegCompleteHandler
 14044   004902  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 14045   004904  0EE5               	movlw	low I2C_Write1ByteRegister@data
 14046   004906  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 14047   004908  EC73  F02A         	call	_I2C_SetDataCompleteCallback	;wreg free
 14048   00490C                     
 14049                           ;mcc_generated_files/examples/i2c_master_example.c: 95:     I2C_SetBuffer(&reg,1);
 14050   00490C  0EE4               	movlw	low I2C_Write1ByteRegister@reg
 14051   00490E  0100               	movlb	0	; () banked
 14052   004910  6FD5               	movwf	I2C_SetBuffer@buffer& (0+255),b
 14053   004912  0E00               	movlw	0
 14054   004914  6FD7               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
 14055   004916  0E01               	movlw	1
 14056   004918  6FD6               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
 14057   00491A  ECC9  F029         	call	_I2C_SetBuffer	;wreg free
 14058   00491E                     
 14059                           ;mcc_generated_files/examples/i2c_master_example.c: 96:     I2C_SetAddressNackCallback((
      +                          (void*)0),((void*)0));
 14060   00491E  0E00               	movlw	0
 14061   004920  0100               	movlb	0	; () banked
 14062   004922  6FD9               	movwf	I2C_SetAddressNackCallback@cb& (0+255),b
 14063   004924  0E00               	movlw	0
 14064   004926  6FDA               	movwf	(I2C_SetAddressNackCallback@cb+1)& (0+255),b
 14065   004928  0E00               	movlw	0
 14066   00492A  6FDB               	movwf	I2C_SetAddressNackCallback@ptr& (0+255),b
 14067   00492C  0E00               	movlw	0
 14068   00492E  6FDC               	movwf	(I2C_SetAddressNackCallback@ptr+1)& (0+255),b
 14069   004930  EC5F  F02A         	call	_I2C_SetAddressNackCallback	;wreg free
 14070   004934                     
 14071                           ;mcc_generated_files/examples/i2c_master_example.c: 97:     I2C_MasterWrite();
 14072   004934  ECD1  F02A         	call	_I2C_MasterWrite	;wreg free
 14073   004938                     l13990:
 14074   004938  EC1B  F029         	call	_I2C_Close	;wreg free
 14075   00493C  06E8               	decf	wreg,f,c
 14076   00493E  B4D8               	btfsc	status,2,c
 14077   004940  EFA4  F024         	goto	u12601
 14078   004944  EFA6  F024         	goto	u12600
 14079   004948                     u12601:
 14080   004948  EF9C  F024         	goto	l13990
 14081   00494C                     u12600:
 14082   00494C  0012               	return		;funcret
 14083   00494E                     __end_of_I2C_Write1ByteRegister:
 14084                           	callstack 0
 14085                           
 14086 ;; *************** function _I2C_SetAddressNackCallback *****************
 14087 ;; Defined at:
 14088 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
 14089 ;; Parameters:    Size  Location     Type
 14090 ;;  cb              2    4[BANK0 ] PTR FTN(PTR void ,)enum 
 14091 ;;		 -> NULL(1), 
 14092 ;;  ptr             2    6[BANK0 ] PTR void 
 14093 ;;		 -> NULL(0), 
 14094 ;; Auto vars:     Size  Location     Type
 14095 ;;		None
 14096 ;; Return value:  Size  Location     Type
 14097 ;;                  1    wreg      void 
 14098 ;; Registers used:
 14099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14100 ;; Tracked objects:
 14101 ;;		On entry : 0/0
 14102 ;;		On exit  : 0/0
 14103 ;;		Unchanged: 0/0
 14104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14108 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14109 ;;Total ram usage:        4 bytes
 14110 ;; Hardware stack levels used: 1
 14111 ;; Hardware stack levels required when called: 10
 14112 ;; This function calls:
 14113 ;;		_I2C_SetCallback
 14114 ;; This function is called by:
 14115 ;;		_I2C_Read1ByteRegister
 14116 ;;		_I2C_Write1ByteRegister
 14117 ;;		_I2C_Read2ByteRegister
 14118 ;;		_I2C_Write2ByteRegister
 14119 ;;		_I2C_WriteNBytes
 14120 ;;		_I2C_ReadDataBlock
 14121 ;; This function uses a non-reentrant model
 14122 ;;
 14123                           
 14124                           	psect	text36
 14125   0054BE                     __ptext36:
 14126                           	callstack 0
 14127   0054BE                     _I2C_SetAddressNackCallback:
 14128                           	callstack 18
 14129   0054BE                     
 14130                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
 14131   0054BE  C0D9  F0D5         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
 14132   0054C2  C0DA  F0D6         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
 14133   0054C6  C0DB  F0D7         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
 14134   0054CA  0E02               	movlw	2
 14135   0054CC  ECDA  F026         	call	_I2C_SetCallback
 14136   0054D0  0012               	return		;funcret
 14137   0054D2                     __end_of_I2C_SetAddressNackCallback:
 14138                           	callstack 0
 14139                           
 14140 ;; *************** function _I2C_Open *****************
 14141 ;; Defined at:
 14142 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
 14143 ;; Parameters:    Size  Location     Type
 14144 ;;  address         1    wreg     unsigned char 
 14145 ;; Auto vars:     Size  Location     Type
 14146 ;;  address         1    0[BANK0 ] unsigned char 
 14147 ;;  returnValue     1    1[BANK0 ] enum E358
 14148 ;; Return value:  Size  Location     Type
 14149 ;;                  1    wreg      enum E358
 14150 ;; Registers used:
 14151 ;;		wreg, status,2, status,0, cstack
 14152 ;; Tracked objects:
 14153 ;;		On entry : 0/0
 14154 ;;		On exit  : 0/0
 14155 ;;		Unchanged: 0/0
 14156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14158 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14160 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14161 ;;Total ram usage:        2 bytes
 14162 ;; Hardware stack levels used: 1
 14163 ;; Hardware stack levels required when called: 10
 14164 ;; This function calls:
 14165 ;;		_I2C_MasterClearIrq
 14166 ;;		_I2C_MasterOpen
 14167 ;; This function is called by:
 14168 ;;		_I2C_Read1ByteRegister
 14169 ;;		_I2C_Write1ByteRegister
 14170 ;;		_I2C_Read2ByteRegister
 14171 ;;		_I2C_Write2ByteRegister
 14172 ;;		_I2C_WriteNBytes
 14173 ;;		_I2C_ReadNBytes
 14174 ;;		_I2C_ReadDataBlock
 14175 ;; This function uses a non-reentrant model
 14176 ;;
 14177                           
 14178                           	psect	text37
 14179   00486C                     __ptext37:
 14180                           	callstack 0
 14181   00486C                     _I2C_Open:
 14182                           	callstack 18
 14183                           
 14184                           ;incstack = 0
 14185                           ;I2C_Open@address stored from wreg
 14186   00486C  0100               	movlb	0	; () banked
 14187   00486E  6FD5               	movwf	I2C_Open@address& (0+255),b
 14188   004870                     
 14189                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 14190   004870  0E01               	movlw	1
 14191   004872  0100               	movlb	0	; () banked
 14192   004874  6FD6               	movwf	I2C_Open@returnValue& (0+255),b
 14193   004876                     
 14194                           ; BSR set to: 0
 14195                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
 14196   004876  B57C               	btfsc	(_I2C_Status+28)& (0+255),2,b
 14197   004878  EF40  F024         	goto	u11571
 14198   00487C  EF42  F024         	goto	u11570
 14199   004880                     u11571:
 14200   004880  EF6D  F024         	goto	l13326
 14201   004884                     u11570:
 14202   004884                     
 14203                           ; BSR set to: 0
 14204                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
 14205   004884  C0D5  F076         	movff	I2C_Open@address,_I2C_Status+22
 14206   004888                     
 14207                           ; BSR set to: 0
 14208                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
 14209   004888  937C               	bcf	(_I2C_Status+28)& (0+255),1,b
 14210   00488A                     
 14211                           ; BSR set to: 0
 14212                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
 14213   00488A  857C               	bsf	(_I2C_Status+28)& (0+255),2,b
 14214   00488C                     
 14215                           ; BSR set to: 0
 14216                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
 14217   00488C  917C               	bcf	(_I2C_Status+28)& (0+255),0,b
 14218   00488E                     
 14219                           ; BSR set to: 0
 14220                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
 14221   00488E  0E0E               	movlw	14
 14222   004890  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
 14223   004892                     
 14224                           ; BSR set to: 0
 14225                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
 14226   004892  0E01               	movlw	1
 14227   004894  6F75               	movwf	(_I2C_Status+21)& (0+255),b
 14228   004896  0EF4               	movlw	244
 14229   004898  6F74               	movwf	(_I2C_Status+20)& (0+255),b
 14230   00489A                     
 14231                           ; BSR set to: 0
 14232                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
 14233   00489A  877C               	bsf	(_I2C_Status+28)& (0+255),3,b
 14234   00489C                     
 14235                           ; BSR set to: 0
 14236                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
 14237   00489C  0E06               	movlw	low _I2C_CallbackReturnStop
 14238   00489E  6F60               	movwf	_I2C_Status& (0+255),b
 14239   0048A0  0E56               	movlw	high _I2C_CallbackReturnStop
 14240   0048A2  6F61               	movwf	(_I2C_Status+1)& (0+255),b
 14241   0048A4                     
 14242                           ; BSR set to: 0
 14243                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
 14244   0048A4  6B6C               	clrf	(_I2C_Status+12)& (0+255),b
 14245   0048A6                     
 14246                           ; BSR set to: 0
 14247                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
 14248   0048A6  0E06               	movlw	low _I2C_CallbackReturnStop
 14249   0048A8  6F62               	movwf	(_I2C_Status+2)& (0+255),b
 14250   0048AA  0E56               	movlw	high _I2C_CallbackReturnStop
 14251   0048AC  6F63               	movwf	(_I2C_Status+3)& (0+255),b
 14252   0048AE                     
 14253                           ; BSR set to: 0
 14254                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
 14255   0048AE  6B6D               	clrf	(_I2C_Status+13)& (0+255),b
 14256   0048B0                     
 14257                           ; BSR set to: 0
 14258                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
 14259   0048B0  0E06               	movlw	low _I2C_CallbackReturnStop
 14260   0048B2  6F64               	movwf	(_I2C_Status+4)& (0+255),b
 14261   0048B4  0E56               	movlw	high _I2C_CallbackReturnStop
 14262   0048B6  6F65               	movwf	(_I2C_Status+5)& (0+255),b
 14263   0048B8                     
 14264                           ; BSR set to: 0
 14265                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
 14266   0048B8  6B6E               	clrf	(_I2C_Status+14)& (0+255),b
 14267   0048BA                     
 14268                           ; BSR set to: 0
 14269                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
 14270   0048BA  0E06               	movlw	low _I2C_CallbackReturnStop
 14271   0048BC  6F66               	movwf	(_I2C_Status+6)& (0+255),b
 14272   0048BE  0E56               	movlw	high _I2C_CallbackReturnStop
 14273   0048C0  6F67               	movwf	(_I2C_Status+7)& (0+255),b
 14274   0048C2                     
 14275                           ; BSR set to: 0
 14276                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
 14277   0048C2  6B6F               	clrf	(_I2C_Status+15)& (0+255),b
 14278   0048C4                     
 14279                           ; BSR set to: 0
 14280                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
 14281   0048C4  0E02               	movlw	low _I2C_CallbackReturnReset
 14282   0048C6  6F68               	movwf	(_I2C_Status+8)& (0+255),b
 14283   0048C8  0E56               	movlw	high _I2C_CallbackReturnReset
 14284   0048CA  6F69               	movwf	(_I2C_Status+9)& (0+255),b
 14285   0048CC                     
 14286                           ; BSR set to: 0
 14287                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
 14288   0048CC  6B70               	clrf	(_I2C_Status+16)& (0+255),b
 14289   0048CE                     
 14290                           ; BSR set to: 0
 14291                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
 14292   0048CE  EC0F  F02B         	call	_I2C_MasterClearIrq	;wreg free
 14293                           
 14294                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
 14295   0048D2  ECB9  F029         	call	_I2C_MasterOpen	;wreg free
 14296   0048D6                     
 14297                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
 14298   0048D6  0100               	movlb	0	; () banked
 14299   0048D8  6BD6               	clrf	I2C_Open@returnValue& (0+255),b
 14300   0048DA                     l13326:
 14301                           
 14302                           ; BSR set to: 0
 14303                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
 14304   0048DA  51D6               	movf	I2C_Open@returnValue& (0+255),w,b
 14305   0048DC                     
 14306                           ; BSR set to: 0
 14307   0048DC  0012               	return		;funcret
 14308   0048DE                     __end_of_I2C_Open:
 14309                           	callstack 0
 14310                           
 14311 ;; *************** function _I2C_MasterOpen *****************
 14312 ;; Defined at:
 14313 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
 14314 ;; Parameters:    Size  Location     Type
 14315 ;;		None
 14316 ;; Auto vars:     Size  Location     Type
 14317 ;;		None
 14318 ;; Return value:  Size  Location     Type
 14319 ;;                  1    wreg      _Bool 
 14320 ;; Registers used:
 14321 ;;		wreg, status,2
 14322 ;; Tracked objects:
 14323 ;;		On entry : 0/0
 14324 ;;		On exit  : 0/0
 14325 ;;		Unchanged: 0/0
 14326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;Total ram usage:        0 bytes
 14332 ;; Hardware stack levels used: 1
 14333 ;; Hardware stack levels required when called: 9
 14334 ;; This function calls:
 14335 ;;		Nothing
 14336 ;; This function is called by:
 14337 ;;		_I2C_Open
 14338 ;; This function uses a non-reentrant model
 14339 ;;
 14340                           
 14341                           	psect	text38
 14342   005372                     __ptext38:
 14343                           	callstack 0
 14344   005372                     _I2C_MasterOpen:
 14345                           	callstack 18
 14346   005372                     
 14347                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
 14348   005372  BAC6               	btfsc	198,5,c	;volatile
 14349   005374  EFBE  F029         	goto	u11511
 14350   005378  EFC0  F029         	goto	u11510
 14351   00537C                     u11511:
 14352   00537C  EFC8  F029         	goto	l2485
 14353   005380                     u11510:
 14354   005380                     
 14355                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x80;
 14356   005380  0E80               	movlw	128
 14357   005382  6EC7               	movwf	199,c	;volatile
 14358                           
 14359                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
 14360   005384  0E08               	movlw	8
 14361   005386  6EC6               	movwf	198,c	;volatile
 14362   005388                     
 14363                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
 14364   005388  6AC5               	clrf	197,c	;volatile
 14365                           
 14366                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
 14367   00538A  0E13               	movlw	19
 14368   00538C  6EC8               	movwf	200,c	;volatile
 14369   00538E                     
 14370                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
 14371   00538E  8AC6               	bsf	198,5,c	;volatile
 14372   005390                     l2485:
 14373   005390  0012               	return		;funcret
 14374   005392                     __end_of_I2C_MasterOpen:
 14375                           	callstack 0
 14376                           
 14377 ;; *************** function _I2C_MasterWrite *****************
 14378 ;; Defined at:
 14379 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
 14380 ;; Parameters:    Size  Location     Type
 14381 ;;		None
 14382 ;; Auto vars:     Size  Location     Type
 14383 ;;		None
 14384 ;; Return value:  Size  Location     Type
 14385 ;;                  1    wreg      enum E358
 14386 ;; Registers used:
 14387 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14388 ;; Tracked objects:
 14389 ;;		On entry : 0/0
 14390 ;;		On exit  : 0/0
 14391 ;;		Unchanged: 0/0
 14392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14394 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14395 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14396 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14397 ;;Total ram usage:        0 bytes
 14398 ;; Hardware stack levels used: 1
 14399 ;; Hardware stack levels required when called: 16
 14400 ;; This function calls:
 14401 ;;		_I2C_MasterOperation
 14402 ;; This function is called by:
 14403 ;;		_I2C_Read1ByteRegister
 14404 ;;		_I2C_Write1ByteRegister
 14405 ;;		_I2C_Read2ByteRegister
 14406 ;;		_I2C_Write2ByteRegister
 14407 ;;		_I2C_WriteNBytes
 14408 ;;		_I2C_ReadDataBlock
 14409 ;; This function uses a non-reentrant model
 14410 ;;
 14411                           
 14412                           	psect	text39
 14413   0055A2                     __ptext39:
 14414                           	callstack 0
 14415   0055A2                     _I2C_MasterWrite:
 14416                           	callstack 12
 14417   0055A2                     
 14418                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
 14419   0055A2  0E00               	movlw	0
 14420   0055A4  EC6D  F028         	call	_I2C_MasterOperation
 14421   0055A8  0012               	return		;funcret
 14422   0055AA                     __end_of_I2C_MasterWrite:
 14423                           	callstack 0
 14424                           
 14425 ;; *************** function _I2C_MasterOperation *****************
 14426 ;; Defined at:
 14427 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
 14428 ;; Parameters:    Size  Location     Type
 14429 ;;  read            1    wreg     _Bool 
 14430 ;; Auto vars:     Size  Location     Type
 14431 ;;  read            1   13[BANK0 ] _Bool 
 14432 ;;  returnValue     1   14[BANK0 ] enum E358
 14433 ;; Return value:  Size  Location     Type
 14434 ;;                  1    wreg      enum E358
 14435 ;; Registers used:
 14436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14437 ;; Tracked objects:
 14438 ;;		On entry : 0/0
 14439 ;;		On exit  : 0/0
 14440 ;;		Unchanged: 0/0
 14441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14443 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14445 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14446 ;;Total ram usage:        2 bytes
 14447 ;; Hardware stack levels used: 1
 14448 ;; Hardware stack levels required when called: 15
 14449 ;; This function calls:
 14450 ;;		_I2C_MasterStart
 14451 ;;		_I2C_Poller
 14452 ;; This function is called by:
 14453 ;;		_I2C_MasterWrite
 14454 ;;		_I2C_MasterRead
 14455 ;; This function uses a non-reentrant model
 14456 ;;
 14457                           
 14458                           	psect	text40
 14459   0050DA                     __ptext40:
 14460                           	callstack 0
 14461   0050DA                     _I2C_MasterOperation:
 14462                           	callstack 12
 14463                           
 14464                           ;incstack = 0
 14465                           ;I2C_MasterOperation@read stored from wreg
 14466   0050DA  0100               	movlb	0	; () banked
 14467   0050DC  6FE2               	movwf	I2C_MasterOperation@read& (0+255),b
 14468   0050DE                     
 14469                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
 14470   0050DE  0E01               	movlw	1
 14471   0050E0  0100               	movlb	0	; () banked
 14472   0050E2  6FE3               	movwf	I2C_MasterOperation@returnValue& (0+255),b
 14473   0050E4                     
 14474                           ; BSR set to: 0
 14475                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
 14476   0050E4  B37C               	btfsc	(_I2C_Status+28)& (0+255),1,b
 14477   0050E6  EF77  F028         	goto	u11521
 14478   0050EA  EF79  F028         	goto	u11520
 14479   0050EE                     u11521:
 14480   0050EE  EF8D  F028         	goto	l13220
 14481   0050F2                     u11520:
 14482   0050F2                     
 14483                           ; BSR set to: 0
 14484                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 14485   0050F2  837C               	bsf	(_I2C_Status+28)& (0+255),1,b
 14486                           
 14487                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 14488   0050F4  6BE3               	clrf	I2C_MasterOperation@returnValue& (0+255),b
 14489   0050F6                     
 14490                           ; BSR set to: 0
 14491                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 14492   0050F6  51E2               	movf	I2C_MasterOperation@read& (0+255),w,b
 14493   0050F8  B4D8               	btfsc	status,2,c
 14494   0050FA  EF81  F028         	goto	u11531
 14495   0050FE  EF83  F028         	goto	u11530
 14496   005102                     u11531:
 14497   005102  EF87  F028         	goto	l13214
 14498   005106                     u11530:
 14499   005106                     
 14500                           ; BSR set to: 0
 14501                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 14502   005106  0E01               	movlw	1
 14503   005108  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
 14504                           
 14505                           ;mcc_generated_files/i2c_master.c: 235:         }
 14506   00510A  EF89  F028         	goto	l13216
 14507   00510E                     l13214:
 14508                           
 14509                           ; BSR set to: 0
 14510                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 14511   00510E  0E02               	movlw	2
 14512   005110  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
 14513   005112                     l13216:
 14514                           
 14515                           ; BSR set to: 0
 14516                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 14517   005112  EC09  F02B         	call	_I2C_MasterStart	;wreg free
 14518   005116                     
 14519                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 14520   005116  ECD9  F029         	call	_I2C_Poller	;wreg free
 14521   00511A                     l13220:
 14522                           
 14523                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 14524   00511A  0100               	movlb	0	; () banked
 14525   00511C  51E3               	movf	I2C_MasterOperation@returnValue& (0+255),w,b
 14526   00511E                     
 14527                           ; BSR set to: 0
 14528   00511E  0012               	return		;funcret
 14529   005120                     __end_of_I2C_MasterOperation:
 14530                           	callstack 0
 14531                           
 14532 ;; *************** function _I2C_Poller *****************
 14533 ;; Defined at:
 14534 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 14535 ;; Parameters:    Size  Location     Type
 14536 ;;		None
 14537 ;; Auto vars:     Size  Location     Type
 14538 ;;		None
 14539 ;; Return value:  Size  Location     Type
 14540 ;;                  1    wreg      void 
 14541 ;; Registers used:
 14542 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14543 ;; Tracked objects:
 14544 ;;		On entry : 0/0
 14545 ;;		On exit  : 0/0
 14546 ;;		Unchanged: 0/0
 14547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14552 ;;Total ram usage:        0 bytes
 14553 ;; Hardware stack levels used: 1
 14554 ;; Hardware stack levels required when called: 14
 14555 ;; This function calls:
 14556 ;;		_I2C_MasterFsm
 14557 ;;		_I2C_MasterWaitForEvent
 14558 ;; This function is called by:
 14559 ;;		_I2C_MasterOperation
 14560 ;; This function uses a non-reentrant model
 14561 ;;
 14562                           
 14563                           	psect	text41
 14564   0053B2                     __ptext41:
 14565                           	callstack 0
 14566   0053B2                     _I2C_Poller:
 14567                           	callstack 12
 14568   0053B2                     
 14569                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 14570   0053B2  EFDF  F029         	goto	l13124
 14571   0053B6                     l13120:
 14572                           
 14573                           ; BSR set to: 0
 14574                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 14575   0053B6  EC86  F02A         	call	_I2C_MasterWaitForEvent	;wreg free
 14576   0053BA                     
 14577                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 14578   0053BA  ECDE  F024         	call	_I2C_MasterFsm	;wreg free
 14579   0053BE                     l13124:
 14580                           
 14581                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 14582   0053BE  0100               	movlb	0	; () banked
 14583   0053C0  B37C               	btfsc	(_I2C_Status+28)& (0+255),1,b
 14584   0053C2  EFE5  F029         	goto	u11351
 14585   0053C6  EFE7  F029         	goto	u11350
 14586   0053CA                     u11351:
 14587   0053CA  EFDB  F029         	goto	l13120
 14588   0053CE                     u11350:
 14589   0053CE                     
 14590                           ; BSR set to: 0
 14591   0053CE  0012               	return		;funcret
 14592   0053D0                     __end_of_I2C_Poller:
 14593                           	callstack 0
 14594                           
 14595 ;; *************** function _I2C_MasterWaitForEvent *****************
 14596 ;; Defined at:
 14597 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 14598 ;; Parameters:    Size  Location     Type
 14599 ;;		None
 14600 ;; Auto vars:     Size  Location     Type
 14601 ;;		None
 14602 ;; Return value:  Size  Location     Type
 14603 ;;                  1    wreg      void 
 14604 ;; Registers used:
 14605 ;;		None
 14606 ;; Tracked objects:
 14607 ;;		On entry : 0/0
 14608 ;;		On exit  : 0/0
 14609 ;;		Unchanged: 0/0
 14610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14615 ;;Total ram usage:        0 bytes
 14616 ;; Hardware stack levels used: 1
 14617 ;; Hardware stack levels required when called: 9
 14618 ;; This function calls:
 14619 ;;		Nothing
 14620 ;; This function is called by:
 14621 ;;		_I2C_Poller
 14622 ;; This function uses a non-reentrant model
 14623 ;;
 14624                           
 14625                           	psect	text42
 14626   00550C                     __ptext42:
 14627                           	callstack 0
 14628   00550C                     _I2C_MasterWaitForEvent:
 14629                           	callstack 16
 14630   00550C                     l2542:
 14631                           
 14632                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
 14633   00550C  A69E               	btfss	158,3,c	;volatile
 14634   00550E  EF8B  F02A         	goto	u11191
 14635   005512  EF8D  F02A         	goto	u11190
 14636   005516                     u11191:
 14637   005516  EF86  F02A         	goto	l2542
 14638   00551A                     u11190:
 14639   00551A  0012               	return		;funcret
 14640   00551C                     __end_of_I2C_MasterWaitForEvent:
 14641                           	callstack 0
 14642                           
 14643 ;; *************** function _I2C_MasterFsm *****************
 14644 ;; Defined at:
 14645 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 14646 ;; Parameters:    Size  Location     Type
 14647 ;;		None
 14648 ;; Auto vars:     Size  Location     Type
 14649 ;;		None
 14650 ;; Return value:  Size  Location     Type
 14651 ;;                  1    wreg      void 
 14652 ;; Registers used:
 14653 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14654 ;; Tracked objects:
 14655 ;;		On entry : 0/0
 14656 ;;		On exit  : 0/0
 14657 ;;		Unchanged: 0/0
 14658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14661 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14662 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14663 ;;Total ram usage:        3 bytes
 14664 ;; Hardware stack levels used: 1
 14665 ;; Hardware stack levels required when called: 13
 14666 ;; This function calls:
 14667 ;;		_I2C_DO_ADDRESS_NACK
 14668 ;;		_I2C_DO_IDLE
 14669 ;;		_I2C_DO_RCEN
 14670 ;;		_I2C_DO_RESET
 14671 ;;		_I2C_DO_RX
 14672 ;;		_I2C_DO_RX_ACK
 14673 ;;		_I2C_DO_RX_NACK_RESTART
 14674 ;;		_I2C_DO_RX_NACK_STOP
 14675 ;;		_I2C_DO_SEND_ADR_READ
 14676 ;;		_I2C_DO_SEND_ADR_WRITE
 14677 ;;		_I2C_DO_SEND_RESTART
 14678 ;;		_I2C_DO_SEND_RESTART_READ
 14679 ;;		_I2C_DO_SEND_RESTART_WRITE
 14680 ;;		_I2C_DO_SEND_STOP
 14681 ;;		_I2C_DO_TX
 14682 ;;		_I2C_DO_TX_EMPTY
 14683 ;;		_I2C_MasterClearIrq
 14684 ;;		_I2C_MasterIsNack
 14685 ;; This function is called by:
 14686 ;;		_I2C_Poller
 14687 ;; This function uses a non-reentrant model
 14688 ;;
 14689                           
 14690                           	psect	text43
 14691   0049BC                     __ptext43:
 14692                           	callstack 0
 14693   0049BC                     _I2C_MasterFsm:
 14694                           	callstack 12
 14695   0049BC                     
 14696                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 14697   0049BC  EC0F  F02B         	call	_I2C_MasterClearIrq	;wreg free
 14698   0049C0                     
 14699                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 14700   0049C0  0100               	movlb	0	; () banked
 14701   0049C2  A17C               	btfss	(_I2C_Status+28)& (0+255),0,b
 14702   0049C4  EFE6  F024         	goto	u11201
 14703   0049C8  EFE8  F024         	goto	u11200
 14704   0049CC                     u11201:
 14705   0049CC  EFF5  F024         	goto	l13072
 14706   0049D0                     u11200:
 14707   0049D0                     
 14708                           ; BSR set to: 0
 14709   0049D0  EC69  F02A         	call	_I2C_MasterIsNack	;wreg free
 14710   0049D4  0900               	iorlw	0
 14711   0049D6  B4D8               	btfsc	status,2,c
 14712   0049D8  EFF0  F024         	goto	u11211
 14713   0049DC  EFF2  F024         	goto	u11210
 14714   0049E0                     u11211:
 14715   0049E0  EFF5  F024         	goto	l13072
 14716   0049E4                     u11210:
 14717   0049E4                     
 14718                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 14719   0049E4  0E0F               	movlw	15
 14720   0049E6  0100               	movlb	0	; () banked
 14721   0049E8  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
 14722   0049EA                     l13072:
 14723                           
 14724                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
 14725   0049EA  0100               	movlb	0	; () banked
 14726   0049EC  517A               	movf	(_I2C_Status+26)& (0+255),w,b
 14727   0049EE  0D02               	mullw	2
 14728   0049F0  50F3               	movf	243,w,c
 14729   0049F2  0F01               	addlw	low _i2c_fsmStateTable
 14730   0049F4  6FDF               	movwf	??_I2C_MasterFsm& (0+255),b
 14731   0049F6  C0DF  FFF6         	movff	??_I2C_MasterFsm,tblptrl
 14732   0049FA                     	if	1	;There is more than 1 active tblptr byte
 14733   0049FA  0E10               	movlw	high __smallconst
 14734   0049FC  6EF7               	movwf	tblptrh,c
 14735   0049FE                     	endif
 14736   0049FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14737   0049FE  6AF8               	clrf	tblptru,c
 14738   004A00                     	endif
 14739   004A00                     	if	0	;tblptru may be non-zero
 14740   004A00                     	endif
 14741   004A00  0009               	tblrd		*+
 14742   004A02  CFF5 F0E0          	movff	tablat,??_I2C_MasterFsm+1
 14743   004A06  0009               	tblrd		*+
 14744   004A08  CFF5 F0E1          	movff	tablat,??_I2C_MasterFsm+2
 14745   004A0C  D802               	call	u11228
 14746   004A0E  EF12  F025         	goto	u11229
 14747   004A12                     u11228:
 14748   004A12  0005               	push	
 14749   004A14  6EFA               	movwf	pclath,c
 14750   004A16  51E0               	movf	(??_I2C_MasterFsm+1)& (0+255),w,b
 14751   004A18  6EFD               	movwf	tosl,c
 14752   004A1A  51E1               	movf	(??_I2C_MasterFsm+2)& (0+255),w,b
 14753   004A1C  6EFE               	movwf	tosh,c
 14754   004A1E  6AFF               	clrf	tosu,c
 14755   004A20  50FA               	movf	pclath,w,c
 14756   004A22  0012               	return		;indir
 14757   004A24                     u11229:
 14758   004A24  0100               	movlb	0	; () banked
 14759   004A26  6F7A               	movwf	(_I2C_Status+26)& (0+255),b
 14760   004A28                     
 14761                           ; BSR set to: 0
 14762   004A28  0012               	return		;funcret
 14763   004A2A                     __end_of_I2C_MasterFsm:
 14764                           	callstack 0
 14765                           
 14766 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 14767 ;; Defined at:
 14768 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 14769 ;; Parameters:    Size  Location     Type
 14770 ;;		None
 14771 ;; Auto vars:     Size  Location     Type
 14772 ;;		None
 14773 ;; Return value:  Size  Location     Type
 14774 ;;                  1    wreg      enum E3128
 14775 ;; Registers used:
 14776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 14777 ;; Tracked objects:
 14778 ;;		On entry : 0/0
 14779 ;;		On exit  : 0/0
 14780 ;;		Unchanged: 0/0
 14781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14784 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14785 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14786 ;;Total ram usage:        2 bytes
 14787 ;; Hardware stack levels used: 1
 14788 ;; Hardware stack levels required when called: 12
 14789 ;; This function calls:
 14790 ;;		NULL
 14791 ;;		_I2C_CallbackReturnReset
 14792 ;;		_I2C_CallbackReturnStop
 14793 ;;		_I2C_DO_SEND_RESTART
 14794 ;;		_I2C_DO_SEND_STOP
 14795 ;;		_rd1RegCompleteHandler
 14796 ;;		_rd2RegCompleteHandler
 14797 ;;		_rdBlkRegCompleteHandler
 14798 ;;		_wr1RegCompleteHandler
 14799 ;;		_wr2RegCompleteHandler
 14800 ;; This function is called by:
 14801 ;;		_I2C_MasterFsm
 14802 ;; This function uses a non-reentrant model
 14803 ;;
 14804                           
 14805                           	psect	text44
 14806   004C34                     __ptext44:
 14807                           	callstack 0
 14808   004C34                     _I2C_DO_ADDRESS_NACK:
 14809                           	callstack 12
 14810   004C34                     
 14811                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 14812   004C34  0100               	movlb	0	; () banked
 14813   004C36  917C               	bcf	(_I2C_Status+28)& (0+255),0,b
 14814   004C38                     
 14815                           ; BSR set to: 0
 14816                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 14817   004C38  0E02               	movlw	2
 14818   004C3A  6F7B               	movwf	(_I2C_Status+27)& (0+255),b
 14819                           
 14820                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 14821   004C3C  EF28  F026         	goto	l13056
 14822   004C40                     l13046:
 14823                           
 14824                           ; BSR set to: 0
 14825                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 14826   004C40  ECE5  F02A         	call	_I2C_DO_SEND_RESTART	;wreg free
 14827   004C44  EF4B  F026         	goto	l2464
 14828   004C48                     l13050:
 14829                           
 14830                           ; BSR set to: 0
 14831                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 14832   004C48  ECE1  F02A         	call	_I2C_DO_SEND_STOP	;wreg free
 14833   004C4C  EF4B  F026         	goto	l2464
 14834   004C50                     l13056:
 14835                           
 14836                           ; BSR set to: 0
 14837   004C50  C06E  F0DC         	movff	_I2C_Status+14,I2C_CallbackReturnReset@funPtr
 14838   004C54  D802               	call	u11188
 14839   004C56  EF36  F026         	goto	u11189
 14840   004C5A                     u11188:
 14841   004C5A  0005               	push	
 14842   004C5C  6EFA               	movwf	pclath,c
 14843   004C5E  5164               	movf	(_I2C_Status+4)& (0+255),w,b
 14844   004C60  6EFD               	movwf	tosl,c
 14845   004C62  5165               	movf	(_I2C_Status+5)& (0+255),w,b
 14846   004C64  6EFE               	movwf	tosh,c
 14847   004C66  6AFF               	clrf	tosu,c
 14848   004C68  50FA               	movf	pclath,w,c
 14849   004C6A  0012               	return		;indir
 14850   004C6C                     u11189:
 14851   004C6C  0100               	movlb	0	; () banked
 14852   004C6E  6FDD               	movwf	??_I2C_DO_ADDRESS_NACK& (0+255),b
 14853   004C70  6BDE               	clrf	(??_I2C_DO_ADDRESS_NACK+1)& (0+255),b
 14854                           
 14855                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14856                           ; Switch size 1, requested type "simple"
 14857                           ; Number of cases is 1, Range of values is 0 to 0
 14858                           ; switch strategies available:
 14859                           ; Name         Instructions Cycles
 14860                           ; simple_byte            4     3 (average)
 14861                           ;	Chosen strategy is simple_byte
 14862   004C72  51DE               	movf	(??_I2C_DO_ADDRESS_NACK+1)& (0+255),w,b
 14863   004C74  0A00               	xorlw	0	; case 0
 14864   004C76  B4D8               	btfsc	status,2,c
 14865   004C78  EF40  F026         	goto	l15866
 14866   004C7C  EF24  F026         	goto	l13050
 14867   004C80                     l15866:
 14868                           
 14869                           ; BSR set to: 0
 14870                           ; Switch size 1, requested type "simple"
 14871                           ; Number of cases is 2, Range of values is 2 to 3
 14872                           ; switch strategies available:
 14873                           ; Name         Instructions Cycles
 14874                           ; simple_byte            7     4 (average)
 14875                           ;	Chosen strategy is simple_byte
 14876   004C80  51DD               	movf	??_I2C_DO_ADDRESS_NACK& (0+255),w,b
 14877   004C82  0A02               	xorlw	2	; case 2
 14878   004C84  B4D8               	btfsc	status,2,c
 14879   004C86  EF20  F026         	goto	l13046
 14880   004C8A  0A01               	xorlw	1	; case 3
 14881   004C8C  B4D8               	btfsc	status,2,c
 14882   004C8E  EF20  F026         	goto	l13046
 14883   004C92  EF24  F026         	goto	l13050
 14884   004C96                     l2464:
 14885   004C96  0012               	return		;funcret
 14886   004C98                     __end_of_I2C_DO_ADDRESS_NACK:
 14887                           	callstack 0
 14888                           
 14889 ;; *************** function _I2C_DO_RESET *****************
 14890 ;; Defined at:
 14891 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 14892 ;; Parameters:    Size  Location     Type
 14893 ;;		None
 14894 ;; Auto vars:     Size  Location     Type
 14895 ;;		None
 14896 ;; Return value:  Size  Location     Type
 14897 ;;                  1    wreg      enum E3128
 14898 ;; Registers used:
 14899 ;;		wreg
 14900 ;; Tracked objects:
 14901 ;;		On entry : 0/0
 14902 ;;		On exit  : 0/0
 14903 ;;		Unchanged: 0/0
 14904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14909 ;;Total ram usage:        0 bytes
 14910 ;; Hardware stack levels used: 1
 14911 ;; Hardware stack levels required when called: 9
 14912 ;; This function calls:
 14913 ;;		Nothing
 14914 ;; This function is called by:
 14915 ;;		_I2C_MasterFsm
 14916 ;; This function uses a non-reentrant model
 14917 ;;
 14918                           
 14919                           	psect	text45
 14920   00557C                     __ptext45:
 14921                           	callstack 0
 14922   00557C                     _I2C_DO_RESET:
 14923                           	callstack 15
 14924   00557C                     
 14925                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 14926   00557C  0100               	movlb	0	; () banked
 14927   00557E  937C               	bcf	(_I2C_Status+28)& (0+255),1,b
 14928                           
 14929                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 14930   005580  6B7B               	clrf	(_I2C_Status+27)& (0+255),b
 14931   005582                     
 14932                           ; BSR set to: 0
 14933                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 14934   005582  0E0E               	movlw	14
 14935   005584                     
 14936                           ; BSR set to: 0
 14937   005584  0012               	return		;funcret
 14938   005586                     __end_of_I2C_DO_RESET:
 14939                           	callstack 0
 14940                           
 14941 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 14942 ;; Defined at:
 14943 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 14944 ;; Parameters:    Size  Location     Type
 14945 ;;		None
 14946 ;; Auto vars:     Size  Location     Type
 14947 ;;		None
 14948 ;; Return value:  Size  Location     Type
 14949 ;;                  1    wreg      enum E3128
 14950 ;; Registers used:
 14951 ;;		wreg, cstack
 14952 ;; Tracked objects:
 14953 ;;		On entry : 0/0
 14954 ;;		On exit  : 0/0
 14955 ;;		Unchanged: 0/0
 14956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14961 ;;Total ram usage:        0 bytes
 14962 ;; Hardware stack levels used: 1
 14963 ;; Hardware stack levels required when called: 10
 14964 ;; This function calls:
 14965 ;;		_I2C_MasterSendNack
 14966 ;; This function is called by:
 14967 ;;		_I2C_DO_RX
 14968 ;;		_I2C_MasterFsm
 14969 ;; This function uses a non-reentrant model
 14970 ;;
 14971                           
 14972                           	psect	text46
 14973   0055AA                     __ptext46:
 14974                           	callstack 0
 14975   0055AA                     _I2C_DO_RX_NACK_RESTART:
 14976                           	callstack 14
 14977   0055AA                     
 14978                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 14979   0055AA  ECF8  F02A         	call	_I2C_MasterSendNack	;wreg free
 14980   0055AE                     
 14981                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 14982   0055AE  0E09               	movlw	9
 14983   0055B0  0012               	return		;funcret
 14984   0055B2                     __end_of_I2C_DO_RX_NACK_RESTART:
 14985                           	callstack 0
 14986                           
 14987 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 14988 ;; Defined at:
 14989 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 14990 ;; Parameters:    Size  Location     Type
 14991 ;;		None
 14992 ;; Auto vars:     Size  Location     Type
 14993 ;;		None
 14994 ;; Return value:  Size  Location     Type
 14995 ;;                  1    wreg      enum E3128
 14996 ;; Registers used:
 14997 ;;		wreg, cstack
 14998 ;; Tracked objects:
 14999 ;;		On entry : 0/0
 15000 ;;		On exit  : 0/0
 15001 ;;		Unchanged: 0/0
 15002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15007 ;;Total ram usage:        0 bytes
 15008 ;; Hardware stack levels used: 1
 15009 ;; Hardware stack levels required when called: 10
 15010 ;; This function calls:
 15011 ;;		_I2C_MasterSendNack
 15012 ;; This function is called by:
 15013 ;;		_I2C_DO_RX
 15014 ;;		_I2C_MasterFsm
 15015 ;; This function uses a non-reentrant model
 15016 ;;
 15017                           
 15018                           	psect	text47
 15019   0055B2                     __ptext47:
 15020                           	callstack 0
 15021   0055B2                     _I2C_DO_RX_NACK_STOP:
 15022                           	callstack 14
 15023   0055B2                     
 15024                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 15025   0055B2  ECF8  F02A         	call	_I2C_MasterSendNack	;wreg free
 15026   0055B6                     
 15027                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 15028   0055B6  0E0A               	movlw	10
 15029   0055B8  0012               	return		;funcret
 15030   0055BA                     __end_of_I2C_DO_RX_NACK_STOP:
 15031                           	callstack 0
 15032                           
 15033 ;; *************** function _I2C_DO_RX_ACK *****************
 15034 ;; Defined at:
 15035 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 15036 ;; Parameters:    Size  Location     Type
 15037 ;;		None
 15038 ;; Auto vars:     Size  Location     Type
 15039 ;;		None
 15040 ;; Return value:  Size  Location     Type
 15041 ;;                  1    wreg      enum E3128
 15042 ;; Registers used:
 15043 ;;		wreg, cstack
 15044 ;; Tracked objects:
 15045 ;;		On entry : 0/0
 15046 ;;		On exit  : 0/0
 15047 ;;		Unchanged: 0/0
 15048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15053 ;;Total ram usage:        0 bytes
 15054 ;; Hardware stack levels used: 1
 15055 ;; Hardware stack levels required when called: 10
 15056 ;; This function calls:
 15057 ;;		_I2C_MasterSendAck
 15058 ;; This function is called by:
 15059 ;;		_I2C_MasterFsm
 15060 ;; This function uses a non-reentrant model
 15061 ;;
 15062                           
 15063                           	psect	text48
 15064   0055BA                     __ptext48:
 15065                           	callstack 0
 15066   0055BA                     _I2C_DO_RX_ACK:
 15067                           	callstack 14
 15068   0055BA                     
 15069                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 15070   0055BA  ECF5  F02A         	call	_I2C_MasterSendAck	;wreg free
 15071   0055BE                     
 15072                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 15073   0055BE  0E05               	movlw	5
 15074   0055C0  0012               	return		;funcret
 15075   0055C2                     __end_of_I2C_DO_RX_ACK:
 15076                           	callstack 0
 15077                           
 15078 ;; *************** function _I2C_DO_SEND_STOP *****************
 15079 ;; Defined at:
 15080 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 15081 ;; Parameters:    Size  Location     Type
 15082 ;;		None
 15083 ;; Auto vars:     Size  Location     Type
 15084 ;;		None
 15085 ;; Return value:  Size  Location     Type
 15086 ;;                  1    wreg      enum E3128
 15087 ;; Registers used:
 15088 ;;		wreg, cstack
 15089 ;; Tracked objects:
 15090 ;;		On entry : 0/0
 15091 ;;		On exit  : 0/0
 15092 ;;		Unchanged: 0/0
 15093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15098 ;;Total ram usage:        0 bytes
 15099 ;; Hardware stack levels used: 1
 15100 ;; Hardware stack levels required when called: 10
 15101 ;; This function calls:
 15102 ;;		_I2C_MasterStop
 15103 ;; This function is called by:
 15104 ;;		_I2C_DO_TX
 15105 ;;		_I2C_DO_TX_EMPTY
 15106 ;;		_I2C_DO_ADDRESS_NACK
 15107 ;;		_I2C_MasterFsm
 15108 ;; This function uses a non-reentrant model
 15109 ;;
 15110                           
 15111                           	psect	text49
 15112   0055C2                     __ptext49:
 15113                           	callstack 0
 15114   0055C2                     _I2C_DO_SEND_STOP:
 15115                           	callstack 13
 15116   0055C2                     
 15117                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 15118   0055C2  EC05  F02B         	call	_I2C_MasterStop	;wreg free
 15119   0055C6                     
 15120                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 15121   0055C6  0E00               	movlw	0
 15122   0055C8  0012               	return		;funcret
 15123   0055CA                     __end_of_I2C_DO_SEND_STOP:
 15124                           	callstack 0
 15125                           
 15126 ;; *************** function _I2C_DO_SEND_RESTART *****************
 15127 ;; Defined at:
 15128 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 15129 ;; Parameters:    Size  Location     Type
 15130 ;;		None
 15131 ;; Auto vars:     Size  Location     Type
 15132 ;;		None
 15133 ;; Return value:  Size  Location     Type
 15134 ;;                  1    wreg      enum E3128
 15135 ;; Registers used:
 15136 ;;		wreg, cstack
 15137 ;; Tracked objects:
 15138 ;;		On entry : 0/0
 15139 ;;		On exit  : 0/0
 15140 ;;		Unchanged: 0/0
 15141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15146 ;;Total ram usage:        0 bytes
 15147 ;; Hardware stack levels used: 1
 15148 ;; Hardware stack levels required when called: 10
 15149 ;; This function calls:
 15150 ;;		_I2C_MasterEnableRestart
 15151 ;; This function is called by:
 15152 ;;		_I2C_DO_TX_EMPTY
 15153 ;;		_I2C_DO_ADDRESS_NACK
 15154 ;;		_I2C_MasterFsm
 15155 ;; This function uses a non-reentrant model
 15156 ;;
 15157                           
 15158                           	psect	text50
 15159   0055CA                     __ptext50:
 15160                           	callstack 0
 15161   0055CA                     _I2C_DO_SEND_RESTART:
 15162                           	callstack 13
 15163   0055CA                     
 15164                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 15165   0055CA  EC07  F02B         	call	_I2C_MasterEnableRestart	;wreg free
 15166   0055CE                     
 15167                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 15168   0055CE  0E01               	movlw	1
 15169   0055D0  0012               	return		;funcret
 15170   0055D2                     __end_of_I2C_DO_SEND_RESTART:
 15171                           	callstack 0
 15172                           
 15173 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 15174 ;; Defined at:
 15175 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 15176 ;; Parameters:    Size  Location     Type
 15177 ;;		None
 15178 ;; Auto vars:     Size  Location     Type
 15179 ;;		None
 15180 ;; Return value:  Size  Location     Type
 15181 ;;                  1    wreg      enum E3128
 15182 ;; Registers used:
 15183 ;;		wreg, cstack
 15184 ;; Tracked objects:
 15185 ;;		On entry : 0/0
 15186 ;;		On exit  : 0/0
 15187 ;;		Unchanged: 0/0
 15188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15193 ;;Total ram usage:        0 bytes
 15194 ;; Hardware stack levels used: 1
 15195 ;; Hardware stack levels required when called: 10
 15196 ;; This function calls:
 15197 ;;		_I2C_MasterEnableRestart
 15198 ;; This function is called by:
 15199 ;;		_I2C_DO_TX
 15200 ;;		_I2C_MasterFsm
 15201 ;; This function uses a non-reentrant model
 15202 ;;
 15203                           
 15204                           	psect	text51
 15205   0055D2                     __ptext51:
 15206                           	callstack 0
 15207   0055D2                     _I2C_DO_SEND_RESTART_WRITE:
 15208                           	callstack 13
 15209   0055D2                     
 15210                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 15211   0055D2  EC07  F02B         	call	_I2C_MasterEnableRestart	;wreg free
 15212   0055D6                     
 15213                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 15214   0055D6  0E02               	movlw	2
 15215   0055D8  0012               	return		;funcret
 15216   0055DA                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 15217                           	callstack 0
 15218                           
 15219 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 15220 ;; Defined at:
 15221 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 15222 ;; Parameters:    Size  Location     Type
 15223 ;;		None
 15224 ;; Auto vars:     Size  Location     Type
 15225 ;;		None
 15226 ;; Return value:  Size  Location     Type
 15227 ;;                  1    wreg      enum E3128
 15228 ;; Registers used:
 15229 ;;		wreg, cstack
 15230 ;; Tracked objects:
 15231 ;;		On entry : 0/0
 15232 ;;		On exit  : 0/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15239 ;;Total ram usage:        0 bytes
 15240 ;; Hardware stack levels used: 1
 15241 ;; Hardware stack levels required when called: 10
 15242 ;; This function calls:
 15243 ;;		_I2C_MasterEnableRestart
 15244 ;; This function is called by:
 15245 ;;		_I2C_DO_TX
 15246 ;;		_I2C_MasterFsm
 15247 ;; This function uses a non-reentrant model
 15248 ;;
 15249                           
 15250                           	psect	text52
 15251   0055DA                     __ptext52:
 15252                           	callstack 0
 15253   0055DA                     _I2C_DO_SEND_RESTART_READ:
 15254                           	callstack 13
 15255   0055DA                     
 15256                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 15257   0055DA  EC07  F02B         	call	_I2C_MasterEnableRestart	;wreg free
 15258   0055DE                     
 15259                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 15260   0055DE  0E01               	movlw	1
 15261   0055E0  0012               	return		;funcret
 15262   0055E2                     __end_of_I2C_DO_SEND_RESTART_READ:
 15263                           	callstack 0
 15264                           
 15265 ;; *************** function _I2C_DO_RCEN *****************
 15266 ;; Defined at:
 15267 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 15268 ;; Parameters:    Size  Location     Type
 15269 ;;		None
 15270 ;; Auto vars:     Size  Location     Type
 15271 ;;		None
 15272 ;; Return value:  Size  Location     Type
 15273 ;;                  1    wreg      enum E3128
 15274 ;; Registers used:
 15275 ;;		wreg, cstack
 15276 ;; Tracked objects:
 15277 ;;		On entry : 0/0
 15278 ;;		On exit  : 0/0
 15279 ;;		Unchanged: 0/0
 15280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15285 ;;Total ram usage:        0 bytes
 15286 ;; Hardware stack levels used: 1
 15287 ;; Hardware stack levels required when called: 10
 15288 ;; This function calls:
 15289 ;;		_I2C_MasterStartRx
 15290 ;; This function is called by:
 15291 ;;		_I2C_MasterFsm
 15292 ;; This function uses a non-reentrant model
 15293 ;;
 15294                           
 15295                           	psect	text53
 15296   005570                     __ptext53:
 15297                           	callstack 0
 15298   005570                     _I2C_DO_RCEN:
 15299                           	callstack 14
 15300   005570                     
 15301                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 15302   005570  0100               	movlb	0	; () banked
 15303   005572  917C               	bcf	(_I2C_Status+28)& (0+255),0,b
 15304   005574                     
 15305                           ; BSR set to: 0
 15306                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 15307   005574  ECFF  F02A         	call	_I2C_MasterStartRx	;wreg free
 15308   005578                     
 15309                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 15310   005578  0E04               	movlw	4
 15311   00557A  0012               	return		;funcret
 15312   00557C                     __end_of_I2C_DO_RCEN:
 15313                           	callstack 0
 15314                           
 15315 ;; *************** function _I2C_DO_RX *****************
 15316 ;; Defined at:
 15317 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 15318 ;; Parameters:    Size  Location     Type
 15319 ;;		None
 15320 ;; Auto vars:     Size  Location     Type
 15321 ;;		None
 15322 ;; Return value:  Size  Location     Type
 15323 ;;                  1    wreg      enum E3128
 15324 ;; Registers used:
 15325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 15326 ;; Tracked objects:
 15327 ;;		On entry : 0/0
 15328 ;;		On exit  : 0/0
 15329 ;;		Unchanged: 0/0
 15330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15333 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15334 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15335 ;;Total ram usage:        2 bytes
 15336 ;; Hardware stack levels used: 1
 15337 ;; Hardware stack levels required when called: 12
 15338 ;; This function calls:
 15339 ;;		NULL
 15340 ;;		_I2C_CallbackReturnReset
 15341 ;;		_I2C_CallbackReturnStop
 15342 ;;		_I2C_DO_RX_NACK_RESTART
 15343 ;;		_I2C_DO_RX_NACK_STOP
 15344 ;;		_I2C_MasterGetRxData
 15345 ;;		_I2C_MasterSendAck
 15346 ;;		_rd1RegCompleteHandler
 15347 ;;		_rd2RegCompleteHandler
 15348 ;;		_rdBlkRegCompleteHandler
 15349 ;;		_wr1RegCompleteHandler
 15350 ;;		_wr2RegCompleteHandler
 15351 ;; This function is called by:
 15352 ;;		_I2C_MasterFsm
 15353 ;; This function uses a non-reentrant model
 15354 ;;
 15355                           
 15356                           	psect	text54
 15357   0040BE                     __ptext54:
 15358                           	callstack 0
 15359   0040BE                     _I2C_DO_RX:
 15360                           	callstack 12
 15361   0040BE                     
 15362                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 15363   0040BE  0100               	movlb	0	; () banked
 15364   0040C0  5177               	movf	(_I2C_Status+23)& (0+255),w,b
 15365   0040C2  6ED9               	movwf	fsr2l,c
 15366   0040C4  6ADA               	clrf	fsr2h,c
 15367   0040C6  ECFD  F02A         	call	_I2C_MasterGetRxData	;wreg free
 15368   0040CA  6EDF               	movwf	indf2,c
 15369   0040CC  0100               	movlb	0	; () banked
 15370   0040CE  2B77               	incf	(_I2C_Status+23)& (0+255),f,b
 15371   0040D0                     
 15372                           ; BSR set to: 0
 15373                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 15374   0040D0  0778               	decf	(_I2C_Status+24)& (0+255),f,b
 15375   0040D2  A0D8               	btfss	status,0,c
 15376   0040D4  0779               	decf	(_I2C_Status+25)& (0+255),f,b
 15377   0040D6  5178               	movf	(_I2C_Status+24)& (0+255),w,b
 15378   0040D8  1179               	iorwf	(_I2C_Status+25)& (0+255),w,b
 15379   0040DA  B4D8               	btfsc	status,2,c
 15380   0040DC  EF72  F020         	goto	u11151
 15381   0040E0  EF74  F020         	goto	u11150
 15382   0040E4                     u11151:
 15383   0040E4  EF79  F020         	goto	l2401
 15384   0040E8                     u11150:
 15385   0040E8                     
 15386                           ; BSR set to: 0
 15387                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 15388   0040E8  ECF5  F02A         	call	_I2C_MasterSendAck	;wreg free
 15389   0040EC                     
 15390                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 15391   0040EC  0E05               	movlw	5
 15392   0040EE  EFAF  F020         	goto	l2402
 15393   0040F2                     l2401:
 15394                           
 15395                           ; BSR set to: 0
 15396                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 15397   0040F2  877C               	bsf	(_I2C_Status+28)& (0+255),3,b
 15398                           
 15399                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 15400   0040F4  EF84  F020         	goto	l12992
 15401   0040F8                     l12982:
 15402                           
 15403                           ; BSR set to: 0
 15404                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 15405   0040F8  ECD5  F02A         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 15406   0040FC  EFAF  F020         	goto	l2402
 15407   004100                     l12986:
 15408                           
 15409                           ; BSR set to: 0
 15410                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 15411   004100  ECD9  F02A         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 15412   004104  EFAF  F020         	goto	l2402
 15413   004108                     l12992:
 15414                           
 15415                           ; BSR set to: 0
 15416   004108  C06C  F0DC         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 15417   00410C  D802               	call	u11168
 15418   00410E  EF92  F020         	goto	u11169
 15419   004112                     u11168:
 15420   004112  0005               	push	
 15421   004114  6EFA               	movwf	pclath,c
 15422   004116  5160               	movf	_I2C_Status& (0+255),w,b
 15423   004118  6EFD               	movwf	tosl,c
 15424   00411A  5161               	movf	(_I2C_Status+1)& (0+255),w,b
 15425   00411C  6EFE               	movwf	tosh,c
 15426   00411E  6AFF               	clrf	tosu,c
 15427   004120  50FA               	movf	pclath,w,c
 15428   004122  0012               	return		;indir
 15429   004124                     u11169:
 15430   004124  0100               	movlb	0	; () banked
 15431   004126  6FDD               	movwf	??_I2C_DO_RX& (0+255),b
 15432   004128  6BDE               	clrf	(??_I2C_DO_RX+1)& (0+255),b
 15433                           
 15434                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15435                           ; Switch size 1, requested type "simple"
 15436                           ; Number of cases is 1, Range of values is 0 to 0
 15437                           ; switch strategies available:
 15438                           ; Name         Instructions Cycles
 15439                           ; simple_byte            4     3 (average)
 15440                           ;	Chosen strategy is simple_byte
 15441   00412A  51DE               	movf	(??_I2C_DO_RX+1)& (0+255),w,b
 15442   00412C  0A00               	xorlw	0	; case 0
 15443   00412E  B4D8               	btfsc	status,2,c
 15444   004130  EF9C  F020         	goto	l15868
 15445   004134  EF80  F020         	goto	l12986
 15446   004138                     l15868:
 15447                           
 15448                           ; BSR set to: 0
 15449                           ; Switch size 1, requested type "simple"
 15450                           ; Number of cases is 4, Range of values is 1 to 4
 15451                           ; switch strategies available:
 15452                           ; Name         Instructions Cycles
 15453                           ; simple_byte           13     7 (average)
 15454                           ;	Chosen strategy is simple_byte
 15455   004138  51DD               	movf	??_I2C_DO_RX& (0+255),w,b
 15456   00413A  0A01               	xorlw	1	; case 1
 15457   00413C  B4D8               	btfsc	status,2,c
 15458   00413E  EF80  F020         	goto	l12986
 15459   004142  0A03               	xorlw	3	; case 2
 15460   004144  B4D8               	btfsc	status,2,c
 15461   004146  EF7C  F020         	goto	l12982
 15462   00414A  0A01               	xorlw	1	; case 3
 15463   00414C  B4D8               	btfsc	status,2,c
 15464   00414E  EF7C  F020         	goto	l12982
 15465   004152  0A07               	xorlw	7	; case 4
 15466   004154  B4D8               	btfsc	status,2,c
 15467   004156  EF80  F020         	goto	l12986
 15468   00415A  EF80  F020         	goto	l12986
 15469   00415E                     l2402:
 15470   00415E  0012               	return		;funcret
 15471   004160                     __end_of_I2C_DO_RX:
 15472                           	callstack 0
 15473                           
 15474 ;; *************** function _I2C_DO_TX *****************
 15475 ;; Defined at:
 15476 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 15477 ;; Parameters:    Size  Location     Type
 15478 ;;		None
 15479 ;; Auto vars:     Size  Location     Type
 15480 ;;		None
 15481 ;; Return value:  Size  Location     Type
 15482 ;;                  1    wreg      enum E3128
 15483 ;; Registers used:
 15484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 15485 ;; Tracked objects:
 15486 ;;		On entry : 0/0
 15487 ;;		On exit  : 0/0
 15488 ;;		Unchanged: 0/0
 15489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15492 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15493 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15494 ;;Total ram usage:        2 bytes
 15495 ;; Hardware stack levels used: 1
 15496 ;; Hardware stack levels required when called: 12
 15497 ;; This function calls:
 15498 ;;		NULL
 15499 ;;		_I2C_CallbackReturnReset
 15500 ;;		_I2C_CallbackReturnStop
 15501 ;;		_I2C_DO_SEND_RESTART_READ
 15502 ;;		_I2C_DO_SEND_RESTART_WRITE
 15503 ;;		_I2C_DO_SEND_STOP
 15504 ;;		_I2C_MasterIsNack
 15505 ;;		_I2C_MasterSendTxData
 15506 ;;		_rd1RegCompleteHandler
 15507 ;;		_rd2RegCompleteHandler
 15508 ;;		_rdBlkRegCompleteHandler
 15509 ;;		_wr1RegCompleteHandler
 15510 ;;		_wr2RegCompleteHandler
 15511 ;; This function is called by:
 15512 ;;		_I2C_MasterFsm
 15513 ;; This function uses a non-reentrant model
 15514 ;;
 15515                           
 15516                           	psect	text55
 15517   003BBC                     __ptext55:
 15518                           	callstack 0
 15519   003BBC                     _I2C_DO_TX:
 15520                           	callstack 12
 15521   003BBC                     
 15522                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 15523   003BBC  EC69  F02A         	call	_I2C_MasterIsNack	;wreg free
 15524   003BC0  0900               	iorlw	0
 15525   003BC2  B4D8               	btfsc	status,2,c
 15526   003BC4  EFE6  F01D         	goto	u11121
 15527   003BC8  EFE8  F01D         	goto	u11120
 15528   003BCC                     u11121:
 15529   003BCC  EF22  F01E         	goto	l2385
 15530   003BD0                     u11120:
 15531   003BD0  EFF6  F01D         	goto	l12952
 15532   003BD4                     l12938:
 15533                           
 15534                           ; BSR set to: 0
 15535                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 15536   003BD4  ECED  F02A         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 15537   003BD8  EF3E  F01E         	goto	l2388
 15538   003BDC                     l12942:
 15539                           
 15540                           ; BSR set to: 0
 15541                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 15542   003BDC  ECE9  F02A         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 15543   003BE0  EF3E  F01E         	goto	l2388
 15544   003BE4                     l12946:
 15545                           
 15546                           ; BSR set to: 0
 15547                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 15548   003BE4  ECE1  F02A         	call	_I2C_DO_SEND_STOP	;wreg free
 15549   003BE8  EF3E  F01E         	goto	l2388
 15550   003BEC                     l12952:
 15551   003BEC  C06F  F0DC         	movff	_I2C_Status+15,I2C_CallbackReturnReset@funPtr
 15552   003BF0  D802               	call	u11138
 15553   003BF2  EF05  F01E         	goto	u11139
 15554   003BF6                     u11138:
 15555   003BF6  0005               	push	
 15556   003BF8  6EFA               	movwf	pclath,c
 15557   003BFA  0100               	movlb	0	; () banked
 15558   003BFC  5166               	movf	(_I2C_Status+6)& (0+255),w,b
 15559   003BFE  6EFD               	movwf	tosl,c
 15560   003C00  5167               	movf	(_I2C_Status+7)& (0+255),w,b
 15561   003C02  6EFE               	movwf	tosh,c
 15562   003C04  6AFF               	clrf	tosu,c
 15563   003C06  50FA               	movf	pclath,w,c
 15564   003C08  0012               	return		;indir
 15565   003C0A                     u11139:
 15566   003C0A  0100               	movlb	0	; () banked
 15567   003C0C  6FDD               	movwf	??_I2C_DO_TX& (0+255),b
 15568   003C0E  6BDE               	clrf	(??_I2C_DO_TX+1)& (0+255),b
 15569                           
 15570                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15571                           ; Switch size 1, requested type "simple"
 15572                           ; Number of cases is 1, Range of values is 0 to 0
 15573                           ; switch strategies available:
 15574                           ; Name         Instructions Cycles
 15575                           ; simple_byte            4     3 (average)
 15576                           ;	Chosen strategy is simple_byte
 15577   003C10  51DE               	movf	(??_I2C_DO_TX+1)& (0+255),w,b
 15578   003C12  0A00               	xorlw	0	; case 0
 15579   003C14  B4D8               	btfsc	status,2,c
 15580   003C16  EF0F  F01E         	goto	l15870
 15581   003C1A  EFF2  F01D         	goto	l12946
 15582   003C1E                     l15870:
 15583                           
 15584                           ; BSR set to: 0
 15585                           ; Switch size 1, requested type "simple"
 15586                           ; Number of cases is 4, Range of values is 1 to 4
 15587                           ; switch strategies available:
 15588                           ; Name         Instructions Cycles
 15589                           ; simple_byte           13     7 (average)
 15590                           ;	Chosen strategy is simple_byte
 15591   003C1E  51DD               	movf	??_I2C_DO_TX& (0+255),w,b
 15592   003C20  0A01               	xorlw	1	; case 1
 15593   003C22  B4D8               	btfsc	status,2,c
 15594   003C24  EFF2  F01D         	goto	l12946
 15595   003C28  0A03               	xorlw	3	; case 2
 15596   003C2A  B4D8               	btfsc	status,2,c
 15597   003C2C  EFEA  F01D         	goto	l12938
 15598   003C30  0A01               	xorlw	1	; case 3
 15599   003C32  B4D8               	btfsc	status,2,c
 15600   003C34  EFEE  F01D         	goto	l12942
 15601   003C38  0A07               	xorlw	7	; case 4
 15602   003C3A  B4D8               	btfsc	status,2,c
 15603   003C3C  EFF2  F01D         	goto	l12946
 15604   003C40  EFF2  F01D         	goto	l12946
 15605   003C44                     l2385:
 15606                           
 15607                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 15608   003C44  0100               	movlb	0	; () banked
 15609   003C46  917C               	bcf	(_I2C_Status+28)& (0+255),0,b
 15610   003C48                     
 15611                           ; BSR set to: 0
 15612                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 15613   003C48  EE20  F077         	lfsr	2,_I2C_Status+23
 15614   003C4C  50DF               	movf	indf2,w,c
 15615   003C4E  2ADF               	incf	indf2,f,c
 15616   003C50  6ED9               	movwf	fsr2l,c
 15617   003C52  6ADA               	clrf	fsr2h,c
 15618   003C54  50DF               	movf	indf2,w,c
 15619   003C56  ECC8  F02A         	call	_I2C_MasterSendTxData
 15620   003C5A                     
 15621                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 15622   003C5A  0100               	movlb	0	; () banked
 15623   003C5C  0778               	decf	(_I2C_Status+24)& (0+255),f,b
 15624   003C5E  A0D8               	btfss	status,0,c
 15625   003C60  0779               	decf	(_I2C_Status+25)& (0+255),f,b
 15626   003C62  5178               	movf	(_I2C_Status+24)& (0+255),w,b
 15627   003C64  1179               	iorwf	(_I2C_Status+25)& (0+255),w,b
 15628   003C66  A4D8               	btfss	status,2,c
 15629   003C68  EF38  F01E         	goto	u11141
 15630   003C6C  EF3A  F01E         	goto	u11140
 15631   003C70                     u11141:
 15632   003C70  EF3D  F01E         	goto	l12960
 15633   003C74                     u11140:
 15634   003C74                     
 15635                           ; BSR set to: 0
 15636   003C74  0E06               	movlw	6
 15637   003C76  EF3E  F01E         	goto	l2388
 15638   003C7A                     l12960:
 15639                           
 15640                           ; BSR set to: 0
 15641   003C7A  0E03               	movlw	3
 15642   003C7C                     l2388:
 15643   003C7C  0012               	return		;funcret
 15644   003C7E                     __end_of_I2C_DO_TX:
 15645                           	callstack 0
 15646                           
 15647 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 15648 ;; Defined at:
 15649 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 15650 ;; Parameters:    Size  Location     Type
 15651 ;;		None
 15652 ;; Auto vars:     Size  Location     Type
 15653 ;;		None
 15654 ;; Return value:  Size  Location     Type
 15655 ;;                  1    wreg      enum E3128
 15656 ;; Registers used:
 15657 ;;		wreg, status,2, cstack
 15658 ;; Tracked objects:
 15659 ;;		On entry : 0/0
 15660 ;;		On exit  : 0/0
 15661 ;;		Unchanged: 0/0
 15662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15667 ;;Total ram usage:        0 bytes
 15668 ;; Hardware stack levels used: 1
 15669 ;; Hardware stack levels required when called: 10
 15670 ;; This function calls:
 15671 ;;		_I2C_MasterSendTxData
 15672 ;; This function is called by:
 15673 ;;		_I2C_MasterFsm
 15674 ;; This function uses a non-reentrant model
 15675 ;;
 15676                           
 15677                           	psect	text56
 15678   00553A                     __ptext56:
 15679                           	callstack 0
 15680   00553A                     _I2C_DO_SEND_ADR_WRITE:
 15681                           	callstack 14
 15682   00553A                     
 15683                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 15684   00553A  0100               	movlb	0	; () banked
 15685   00553C  817C               	bsf	(_I2C_Status+28)& (0+255),0,b
 15686   00553E                     
 15687                           ; BSR set to: 0
 15688                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress));
 15689   00553E  5176               	movf	(_I2C_Status+22)& (0+255),w,b
 15690   005540  ECC8  F02A         	call	_I2C_MasterSendTxData
 15691   005544                     
 15692                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 15693   005544  0E03               	movlw	3
 15694   005546  0012               	return		;funcret
 15695   005548                     __end_of_I2C_DO_SEND_ADR_WRITE:
 15696                           	callstack 0
 15697                           
 15698 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 15699 ;; Defined at:
 15700 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 15701 ;; Parameters:    Size  Location     Type
 15702 ;;		None
 15703 ;; Auto vars:     Size  Location     Type
 15704 ;;		None
 15705 ;; Return value:  Size  Location     Type
 15706 ;;                  1    wreg      enum E3128
 15707 ;; Registers used:
 15708 ;;		wreg, status,2, status,0, cstack
 15709 ;; Tracked objects:
 15710 ;;		On entry : 0/0
 15711 ;;		On exit  : 0/0
 15712 ;;		Unchanged: 0/0
 15713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15718 ;;Total ram usage:        0 bytes
 15719 ;; Hardware stack levels used: 1
 15720 ;; Hardware stack levels required when called: 10
 15721 ;; This function calls:
 15722 ;;		_I2C_MasterSendTxData
 15723 ;; This function is called by:
 15724 ;;		_I2C_MasterFsm
 15725 ;; This function uses a non-reentrant model
 15726 ;;
 15727                           
 15728                           	psect	text57
 15729   00551C                     __ptext57:
 15730                           	callstack 0
 15731   00551C                     _I2C_DO_SEND_ADR_READ:
 15732                           	callstack 14
 15733   00551C                     
 15734                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 15735   00551C  0100               	movlb	0	; () banked
 15736   00551E  817C               	bsf	(_I2C_Status+28)& (0+255),0,b
 15737   005520                     
 15738                           ; BSR set to: 0
 15739                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress | 1));
 15740   005520  5176               	movf	(_I2C_Status+22)& (0+255),w,b
 15741   005522  0901               	iorlw	1
 15742   005524  ECC8  F02A         	call	_I2C_MasterSendTxData
 15743   005528                     
 15744                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 15745   005528  0E05               	movlw	5
 15746   00552A  0012               	return		;funcret
 15747   00552C                     __end_of_I2C_DO_SEND_ADR_READ:
 15748                           	callstack 0
 15749                           
 15750 ;; *************** function _I2C_DO_IDLE *****************
 15751 ;; Defined at:
 15752 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 15753 ;; Parameters:    Size  Location     Type
 15754 ;;		None
 15755 ;; Auto vars:     Size  Location     Type
 15756 ;;		None
 15757 ;; Return value:  Size  Location     Type
 15758 ;;                  1    wreg      enum E3128
 15759 ;; Registers used:
 15760 ;;		wreg
 15761 ;; Tracked objects:
 15762 ;;		On entry : 0/0
 15763 ;;		On exit  : 0/0
 15764 ;;		Unchanged: 0/0
 15765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15770 ;;Total ram usage:        0 bytes
 15771 ;; Hardware stack levels used: 1
 15772 ;; Hardware stack levels required when called: 9
 15773 ;; This function calls:
 15774 ;;		Nothing
 15775 ;; This function is called by:
 15776 ;;		_I2C_MasterFsm
 15777 ;; This function uses a non-reentrant model
 15778 ;;
 15779                           
 15780                           	psect	text58
 15781   005586                     __ptext58:
 15782                           	callstack 0
 15783   005586                     _I2C_DO_IDLE:
 15784                           	callstack 15
 15785   005586                     
 15786                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 15787   005586  0100               	movlb	0	; () banked
 15788   005588  937C               	bcf	(_I2C_Status+28)& (0+255),1,b
 15789                           
 15790                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 15791   00558A  6B7B               	clrf	(_I2C_Status+27)& (0+255),b
 15792   00558C                     
 15793                           ; BSR set to: 0
 15794                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 15795   00558C  0E0E               	movlw	14
 15796   00558E                     
 15797                           ; BSR set to: 0
 15798   00558E  0012               	return		;funcret
 15799   005590                     __end_of_I2C_DO_IDLE:
 15800                           	callstack 0
 15801                           
 15802 ;; *************** function _I2C_DO_TX_EMPTY *****************
 15803 ;; Defined at:
 15804 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 15805 ;; Parameters:    Size  Location     Type
 15806 ;;		None
 15807 ;; Auto vars:     Size  Location     Type
 15808 ;;		None
 15809 ;; Return value:  Size  Location     Type
 15810 ;;                  1    wreg      enum E3128
 15811 ;; Registers used:
 15812 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, prodl, prodh, cstack
 15813 ;; Tracked objects:
 15814 ;;		On entry : 0/0
 15815 ;;		On exit  : 0/0
 15816 ;;		Unchanged: 0/0
 15817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15819 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15820 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15821 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15822 ;;Total ram usage:        2 bytes
 15823 ;; Hardware stack levels used: 1
 15824 ;; Hardware stack levels required when called: 12
 15825 ;; This function calls:
 15826 ;;		NULL
 15827 ;;		_I2C_CallbackReturnReset
 15828 ;;		_I2C_CallbackReturnStop
 15829 ;;		_I2C_DO_SEND_RESTART
 15830 ;;		_I2C_DO_SEND_STOP
 15831 ;;		_I2C_MasterSetIrq
 15832 ;;		_rd1RegCompleteHandler
 15833 ;;		_rd2RegCompleteHandler
 15834 ;;		_rdBlkRegCompleteHandler
 15835 ;;		_wr1RegCompleteHandler
 15836 ;;		_wr2RegCompleteHandler
 15837 ;; This function is called by:
 15838 ;;		_I2C_MasterFsm
 15839 ;; This function uses a non-reentrant model
 15840 ;;
 15841                           
 15842                           	psect	text59
 15843   00477A                     __ptext59:
 15844                           	callstack 0
 15845   00477A                     _I2C_DO_TX_EMPTY:
 15846                           	callstack 12
 15847   00477A                     
 15848                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 15849   00477A  0100               	movlb	0	; () banked
 15850   00477C  877C               	bsf	(_I2C_Status+28)& (0+255),3,b
 15851                           
 15852                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 15853   00477E  EFCE  F023         	goto	l13024
 15854   004782                     l13008:
 15855                           
 15856                           ; BSR set to: 0
 15857                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 15858   004782  ECE5  F02A         	call	_I2C_DO_SEND_RESTART	;wreg free
 15859   004786  EFF9  F023         	goto	l2419
 15860   00478A                     l13012:
 15861                           
 15862                           ; BSR set to: 0
 15863                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 15864   00478A  ECFB  F02A         	call	_I2C_MasterSetIrq	;wreg free
 15865   00478E                     
 15866                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 15867   00478E  0E03               	movlw	3
 15868   004790  EFF9  F023         	goto	l2419
 15869   004794                     l13018:
 15870                           
 15871                           ; BSR set to: 0
 15872                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 15873   004794  ECE1  F02A         	call	_I2C_DO_SEND_STOP	;wreg free
 15874   004798  EFF9  F023         	goto	l2419
 15875   00479C                     l13024:
 15876                           
 15877                           ; BSR set to: 0
 15878   00479C  C06C  F0DC         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 15879   0047A0  D802               	call	u11178
 15880   0047A2  EFDC  F023         	goto	u11179
 15881   0047A6                     u11178:
 15882   0047A6  0005               	push	
 15883   0047A8  6EFA               	movwf	pclath,c
 15884   0047AA  5160               	movf	_I2C_Status& (0+255),w,b
 15885   0047AC  6EFD               	movwf	tosl,c
 15886   0047AE  5161               	movf	(_I2C_Status+1)& (0+255),w,b
 15887   0047B0  6EFE               	movwf	tosh,c
 15888   0047B2  6AFF               	clrf	tosu,c
 15889   0047B4  50FA               	movf	pclath,w,c
 15890   0047B6  0012               	return		;indir
 15891   0047B8                     u11179:
 15892   0047B8  0100               	movlb	0	; () banked
 15893   0047BA  6FDD               	movwf	??_I2C_DO_TX_EMPTY& (0+255),b
 15894   0047BC  6BDE               	clrf	(??_I2C_DO_TX_EMPTY+1)& (0+255),b
 15895                           
 15896                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15897                           ; Switch size 1, requested type "simple"
 15898                           ; Number of cases is 1, Range of values is 0 to 0
 15899                           ; switch strategies available:
 15900                           ; Name         Instructions Cycles
 15901                           ; simple_byte            4     3 (average)
 15902                           ;	Chosen strategy is simple_byte
 15903   0047BE  51DE               	movf	(??_I2C_DO_TX_EMPTY+1)& (0+255),w,b
 15904   0047C0  0A00               	xorlw	0	; case 0
 15905   0047C2  B4D8               	btfsc	status,2,c
 15906   0047C4  EFE6  F023         	goto	l15872
 15907   0047C8  EFCA  F023         	goto	l13018
 15908   0047CC                     l15872:
 15909                           
 15910                           ; BSR set to: 0
 15911                           ; Switch size 1, requested type "simple"
 15912                           ; Number of cases is 4, Range of values is 1 to 4
 15913                           ; switch strategies available:
 15914                           ; Name         Instructions Cycles
 15915                           ; simple_byte           13     7 (average)
 15916                           ;	Chosen strategy is simple_byte
 15917   0047CC  51DD               	movf	??_I2C_DO_TX_EMPTY& (0+255),w,b
 15918   0047CE  0A01               	xorlw	1	; case 1
 15919   0047D0  B4D8               	btfsc	status,2,c
 15920   0047D2  EFCA  F023         	goto	l13018
 15921   0047D6  0A03               	xorlw	3	; case 2
 15922   0047D8  B4D8               	btfsc	status,2,c
 15923   0047DA  EFC1  F023         	goto	l13008
 15924   0047DE  0A01               	xorlw	1	; case 3
 15925   0047E0  B4D8               	btfsc	status,2,c
 15926   0047E2  EFC1  F023         	goto	l13008
 15927   0047E6  0A07               	xorlw	7	; case 4
 15928   0047E8  B4D8               	btfsc	status,2,c
 15929   0047EA  EFC5  F023         	goto	l13012
 15930   0047EE  EFCA  F023         	goto	l13018
 15931   0047F2                     l2419:
 15932   0047F2  0012               	return		;funcret
 15933   0047F4                     __end_of_I2C_DO_TX_EMPTY:
 15934                           	callstack 0
 15935                           
 15936 ;; *************** function _I2C_MasterSetIrq *****************
 15937 ;; Defined at:
 15938 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 15939 ;; Parameters:    Size  Location     Type
 15940 ;;		None
 15941 ;; Auto vars:     Size  Location     Type
 15942 ;;		None
 15943 ;; Return value:  Size  Location     Type
 15944 ;;                  1    wreg      void 
 15945 ;; Registers used:
 15946 ;;		None
 15947 ;; Tracked objects:
 15948 ;;		On entry : 0/0
 15949 ;;		On exit  : 0/0
 15950 ;;		Unchanged: 0/0
 15951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15956 ;;Total ram usage:        0 bytes
 15957 ;; Hardware stack levels used: 1
 15958 ;; Hardware stack levels required when called: 9
 15959 ;; This function calls:
 15960 ;;		Nothing
 15961 ;; This function is called by:
 15962 ;;		_I2C_DO_TX_EMPTY
 15963 ;; This function uses a non-reentrant model
 15964 ;;
 15965                           
 15966                           	psect	text60
 15967   0055F6                     __ptext60:
 15968                           	callstack 0
 15969   0055F6                     _I2C_MasterSetIrq:
 15970                           	callstack 14
 15971   0055F6                     
 15972                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 15973   0055F6  869E               	bsf	158,3,c	;volatile
 15974   0055F8  0012               	return		;funcret
 15975   0055FA                     __end_of_I2C_MasterSetIrq:
 15976                           	callstack 0
 15977                           
 15978 ;; *************** function _I2C_MasterIsNack *****************
 15979 ;; Defined at:
 15980 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 15981 ;; Parameters:    Size  Location     Type
 15982 ;;		None
 15983 ;; Auto vars:     Size  Location     Type
 15984 ;;		None
 15985 ;; Return value:  Size  Location     Type
 15986 ;;                  1    wreg      _Bool 
 15987 ;; Registers used:
 15988 ;;		wreg
 15989 ;; Tracked objects:
 15990 ;;		On entry : 0/0
 15991 ;;		On exit  : 0/0
 15992 ;;		Unchanged: 0/0
 15993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15998 ;;Total ram usage:        0 bytes
 15999 ;; Hardware stack levels used: 1
 16000 ;; Hardware stack levels required when called: 9
 16001 ;; This function calls:
 16002 ;;		Nothing
 16003 ;; This function is called by:
 16004 ;;		_I2C_MasterFsm
 16005 ;;		_I2C_DO_TX
 16006 ;; This function uses a non-reentrant model
 16007 ;;
 16008                           
 16009                           	psect	text61
 16010   0054D2                     __ptext61:
 16011                           	callstack 0
 16012   0054D2                     _I2C_MasterIsNack:
 16013                           	callstack 15
 16014   0054D2                     
 16015                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 16016   0054D2  BCC5               	btfsc	197,6,c	;volatile
 16017   0054D4  EF6E  F02A         	goto	u11111
 16018   0054D8  EF71  F02A         	goto	u11110
 16019   0054DC                     u11111:
 16020   0054DC  0E01               	movlw	1
 16021   0054DE  EF72  F02A         	goto	u11116
 16022   0054E2                     u11110:
 16023   0054E2  0E00               	movlw	0
 16024   0054E4                     u11116:
 16025   0054E4  0012               	return		;funcret
 16026   0054E6                     __end_of_I2C_MasterIsNack:
 16027                           	callstack 0
 16028                           
 16029 ;; *************** function _I2C_MasterSendTxData *****************
 16030 ;; Defined at:
 16031 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 16032 ;; Parameters:    Size  Location     Type
 16033 ;;  data            1    wreg     unsigned char 
 16034 ;; Auto vars:     Size  Location     Type
 16035 ;;  data            1    0[BANK0 ] unsigned char 
 16036 ;; Return value:  Size  Location     Type
 16037 ;;                  1    wreg      void 
 16038 ;; Registers used:
 16039 ;;		wreg
 16040 ;; Tracked objects:
 16041 ;;		On entry : 0/0
 16042 ;;		On exit  : 0/0
 16043 ;;		Unchanged: 0/0
 16044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16046 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16048 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16049 ;;Total ram usage:        1 bytes
 16050 ;; Hardware stack levels used: 1
 16051 ;; Hardware stack levels required when called: 9
 16052 ;; This function calls:
 16053 ;;		Nothing
 16054 ;; This function is called by:
 16055 ;;		_I2C_DO_SEND_ADR_READ
 16056 ;;		_I2C_DO_SEND_ADR_WRITE
 16057 ;;		_I2C_DO_TX
 16058 ;; This function uses a non-reentrant model
 16059 ;;
 16060                           
 16061                           	psect	text62
 16062   005590                     __ptext62:
 16063                           	callstack 0
 16064   005590                     _I2C_MasterSendTxData:
 16065                           	callstack 14
 16066                           
 16067                           ;incstack = 0
 16068                           ;I2C_MasterSendTxData@data stored from wreg
 16069   005590  0100               	movlb	0	; () banked
 16070   005592  6FD5               	movwf	I2C_MasterSendTxData@data& (0+255),b
 16071   005594                     
 16072                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 16073   005594  C0D5  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 16074   005598  0012               	return		;funcret
 16075   00559A                     __end_of_I2C_MasterSendTxData:
 16076                           	callstack 0
 16077                           
 16078 ;; *************** function _I2C_MasterSendAck *****************
 16079 ;; Defined at:
 16080 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 16081 ;; Parameters:    Size  Location     Type
 16082 ;;		None
 16083 ;; Auto vars:     Size  Location     Type
 16084 ;;		None
 16085 ;; Return value:  Size  Location     Type
 16086 ;;                  1    wreg      void 
 16087 ;; Registers used:
 16088 ;;		None
 16089 ;; Tracked objects:
 16090 ;;		On entry : 0/0
 16091 ;;		On exit  : 0/0
 16092 ;;		Unchanged: 0/0
 16093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16098 ;;Total ram usage:        0 bytes
 16099 ;; Hardware stack levels used: 1
 16100 ;; Hardware stack levels required when called: 9
 16101 ;; This function calls:
 16102 ;;		Nothing
 16103 ;; This function is called by:
 16104 ;;		_I2C_DO_RX
 16105 ;;		_I2C_DO_RX_ACK
 16106 ;; This function uses a non-reentrant model
 16107 ;;
 16108                           
 16109                           	psect	text63
 16110   0055EA                     __ptext63:
 16111                           	callstack 0
 16112   0055EA                     _I2C_MasterSendAck:
 16113                           	callstack 14
 16114   0055EA                     
 16115                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 16116   0055EA  9AC5               	bcf	197,5,c	;volatile
 16117                           
 16118                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 16119   0055EC  88C5               	bsf	197,4,c	;volatile
 16120   0055EE  0012               	return		;funcret
 16121   0055F0                     __end_of_I2C_MasterSendAck:
 16122                           	callstack 0
 16123                           
 16124 ;; *************** function _I2C_MasterGetRxData *****************
 16125 ;; Defined at:
 16126 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 16127 ;; Parameters:    Size  Location     Type
 16128 ;;		None
 16129 ;; Auto vars:     Size  Location     Type
 16130 ;;		None
 16131 ;; Return value:  Size  Location     Type
 16132 ;;                  1    wreg      unsigned char 
 16133 ;; Registers used:
 16134 ;;		wreg, status,2
 16135 ;; Tracked objects:
 16136 ;;		On entry : 0/0
 16137 ;;		On exit  : 0/0
 16138 ;;		Unchanged: 0/0
 16139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16144 ;;Total ram usage:        0 bytes
 16145 ;; Hardware stack levels used: 1
 16146 ;; Hardware stack levels required when called: 9
 16147 ;; This function calls:
 16148 ;;		Nothing
 16149 ;; This function is called by:
 16150 ;;		_I2C_DO_RX
 16151 ;; This function uses a non-reentrant model
 16152 ;;
 16153                           
 16154                           	psect	text64
 16155   0055FA                     __ptext64:
 16156                           	callstack 0
 16157   0055FA                     _I2C_MasterGetRxData:
 16158                           	callstack 14
 16159   0055FA                     
 16160                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 16161   0055FA  50C9               	movf	201,w,c	;volatile
 16162   0055FC  0012               	return		;funcret
 16163   0055FE                     __end_of_I2C_MasterGetRxData:
 16164                           	callstack 0
 16165                           
 16166 ;; *************** function _I2C_MasterSendNack *****************
 16167 ;; Defined at:
 16168 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 16169 ;; Parameters:    Size  Location     Type
 16170 ;;		None
 16171 ;; Auto vars:     Size  Location     Type
 16172 ;;		None
 16173 ;; Return value:  Size  Location     Type
 16174 ;;                  1    wreg      void 
 16175 ;; Registers used:
 16176 ;;		None
 16177 ;; Tracked objects:
 16178 ;;		On entry : 0/0
 16179 ;;		On exit  : 0/0
 16180 ;;		Unchanged: 0/0
 16181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16184 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16185 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16186 ;;Total ram usage:        0 bytes
 16187 ;; Hardware stack levels used: 1
 16188 ;; Hardware stack levels required when called: 9
 16189 ;; This function calls:
 16190 ;;		Nothing
 16191 ;; This function is called by:
 16192 ;;		_I2C_DO_RX_NACK_STOP
 16193 ;;		_I2C_DO_RX_NACK_RESTART
 16194 ;; This function uses a non-reentrant model
 16195 ;;
 16196                           
 16197                           	psect	text65
 16198   0055F0                     __ptext65:
 16199                           	callstack 0
 16200   0055F0                     _I2C_MasterSendNack:
 16201                           	callstack 14
 16202   0055F0                     
 16203                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 16204   0055F0  8AC5               	bsf	197,5,c	;volatile
 16205                           
 16206                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 16207   0055F2  88C5               	bsf	197,4,c	;volatile
 16208   0055F4  0012               	return		;funcret
 16209   0055F6                     __end_of_I2C_MasterSendNack:
 16210                           	callstack 0
 16211                           
 16212 ;; *************** function _I2C_MasterStartRx *****************
 16213 ;; Defined at:
 16214 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 16215 ;; Parameters:    Size  Location     Type
 16216 ;;		None
 16217 ;; Auto vars:     Size  Location     Type
 16218 ;;		None
 16219 ;; Return value:  Size  Location     Type
 16220 ;;                  1    wreg      void 
 16221 ;; Registers used:
 16222 ;;		None
 16223 ;; Tracked objects:
 16224 ;;		On entry : 0/0
 16225 ;;		On exit  : 0/0
 16226 ;;		Unchanged: 0/0
 16227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16232 ;;Total ram usage:        0 bytes
 16233 ;; Hardware stack levels used: 1
 16234 ;; Hardware stack levels required when called: 9
 16235 ;; This function calls:
 16236 ;;		Nothing
 16237 ;; This function is called by:
 16238 ;;		_I2C_DO_RCEN
 16239 ;; This function uses a non-reentrant model
 16240 ;;
 16241                           
 16242                           	psect	text66
 16243   0055FE                     __ptext66:
 16244                           	callstack 0
 16245   0055FE                     _I2C_MasterStartRx:
 16246                           	callstack 14
 16247   0055FE                     
 16248                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 16249   0055FE  86C5               	bsf	197,3,c	;volatile
 16250   005600  0012               	return		;funcret
 16251   005602                     __end_of_I2C_MasterStartRx:
 16252                           	callstack 0
 16253                           
 16254 ;; *************** function _I2C_CallbackReturnReset *****************
 16255 ;; Defined at:
 16256 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 16257 ;; Parameters:    Size  Location     Type
 16258 ;;  funPtr          1    7[BANK0 ] PTR void 
 16259 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16260 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 16261 ;; Auto vars:     Size  Location     Type
 16262 ;;		None
 16263 ;; Return value:  Size  Location     Type
 16264 ;;                  1    wreg      enum E363
 16265 ;; Registers used:
 16266 ;;		wreg
 16267 ;; Tracked objects:
 16268 ;;		On entry : 0/0
 16269 ;;		On exit  : 0/0
 16270 ;;		Unchanged: 0/0
 16271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16272 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16275 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16276 ;;Total ram usage:        1 bytes
 16277 ;; Hardware stack levels used: 1
 16278 ;; Hardware stack levels required when called: 9
 16279 ;; This function calls:
 16280 ;;		Nothing
 16281 ;; This function is called by:
 16282 ;;		_I2C_Open
 16283 ;;		_I2C_DO_TX
 16284 ;;		_I2C_DO_RX
 16285 ;;		_I2C_DO_TX_EMPTY
 16286 ;;		_I2C_DO_ADDRESS_NACK
 16287 ;;		_I2C_DO_RX_EMPTY
 16288 ;; This function uses a non-reentrant model
 16289 ;;
 16290                           
 16291                           	psect	text67
 16292   005602                     __ptext67:
 16293                           	callstack 0
 16294   005602                     _I2C_CallbackReturnReset:
 16295                           	callstack 14
 16296   005602                     
 16297                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 16298   005602  0E05               	movlw	5
 16299   005604  0012               	return		;funcret
 16300   005606                     __end_of_I2C_CallbackReturnReset:
 16301                           	callstack 0
 16302                           
 16303 ;; *************** function _I2C_CallbackReturnStop *****************
 16304 ;; Defined at:
 16305 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 16306 ;; Parameters:    Size  Location     Type
 16307 ;;  funPtr          1    7[BANK0 ] PTR void 
 16308 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16309 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 16310 ;; Auto vars:     Size  Location     Type
 16311 ;;		None
 16312 ;; Return value:  Size  Location     Type
 16313 ;;                  1    wreg      enum E363
 16314 ;; Registers used:
 16315 ;;		wreg
 16316 ;; Tracked objects:
 16317 ;;		On entry : 0/0
 16318 ;;		On exit  : 0/0
 16319 ;;		Unchanged: 0/0
 16320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16321 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16324 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16325 ;;Total ram usage:        1 bytes
 16326 ;; Hardware stack levels used: 1
 16327 ;; Hardware stack levels required when called: 9
 16328 ;; This function calls:
 16329 ;;		Nothing
 16330 ;; This function is called by:
 16331 ;;		_I2C_Open
 16332 ;;		_I2C_SetCallback
 16333 ;;		_I2C_DO_TX
 16334 ;;		_I2C_DO_RX
 16335 ;;		_I2C_DO_TX_EMPTY
 16336 ;;		_I2C_DO_ADDRESS_NACK
 16337 ;;		_I2C_DO_RX_EMPTY
 16338 ;; This function uses a non-reentrant model
 16339 ;;
 16340                           
 16341                           	psect	text68
 16342   005606                     __ptext68:
 16343                           	callstack 0
 16344   005606                     _I2C_CallbackReturnStop:
 16345                           	callstack 14
 16346   005606                     
 16347                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 16348   005606  0E01               	movlw	1
 16349   005608  0012               	return		;funcret
 16350   00560A                     __end_of_I2C_CallbackReturnStop:
 16351                           	callstack 0
 16352                           
 16353 ;; *************** function _rdBlkRegCompleteHandler *****************
 16354 ;; Defined at:
 16355 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 16356 ;; Parameters:    Size  Location     Type
 16357 ;;  ptr             1    7[BANK0 ] PTR void 
 16358 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16359 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 16360 ;; Auto vars:     Size  Location     Type
 16361 ;;		None
 16362 ;; Return value:  Size  Location     Type
 16363 ;;                  1    wreg      enum E363
 16364 ;; Registers used:
 16365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16366 ;; Tracked objects:
 16367 ;;		On entry : 0/0
 16368 ;;		On exit  : 0/0
 16369 ;;		Unchanged: 0/0
 16370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16371 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16374 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16375 ;;Total ram usage:        1 bytes
 16376 ;; Hardware stack levels used: 1
 16377 ;; Hardware stack levels required when called: 11
 16378 ;; This function calls:
 16379 ;;		_I2C_SetBuffer
 16380 ;;		_I2C_SetDataCompleteCallback
 16381 ;; This function is called by:
 16382 ;;		_I2C_ReadDataBlock
 16383 ;;		_I2C_DO_TX
 16384 ;;		_I2C_DO_RX
 16385 ;;		_I2C_DO_TX_EMPTY
 16386 ;;		_I2C_DO_ADDRESS_NACK
 16387 ;;		_I2C_DO_RX_EMPTY
 16388 ;; This function uses a non-reentrant model
 16389 ;;
 16390                           
 16391                           	psect	text69
 16392   005164                     __ptext69:
 16393                           	callstack 0
 16394   005164                     _rdBlkRegCompleteHandler:
 16395                           	callstack 12
 16396   005164                     
 16397                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 16398   005164  0100               	movlb	0	; () banked
 16399   005166  51DC               	movf	rdBlkRegCompleteHandler@ptr& (0+255),w,b
 16400   005168  6ED9               	movwf	fsr2l,c
 16401   00516A  6ADA               	clrf	fsr2h,c
 16402   00516C  0E02               	movlw	2
 16403   00516E  26D9               	addwf	fsr2l,f,c
 16404   005170  50DF               	movf	indf2,w,c
 16405   005172  6FD5               	movwf	I2C_SetBuffer@buffer& (0+255),b
 16406   005174  51DC               	movf	rdBlkRegCompleteHandler@ptr& (0+255),w,b
 16407   005176  6ED9               	movwf	fsr2l,c
 16408   005178  6ADA               	clrf	fsr2h,c
 16409   00517A  CFDE F0D6          	movff	postinc2,I2C_SetBuffer@bufferSize
 16410   00517E  CFDD F0D7          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 16411   005182  ECC9  F029         	call	_I2C_SetBuffer	;wreg free
 16412   005186                     
 16413                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 16414   005186  0E00               	movlw	0
 16415   005188  0100               	movlb	0	; () banked
 16416   00518A  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 16417   00518C  0E00               	movlw	0
 16418   00518E  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 16419   005190  0E00               	movlw	0
 16420   005192  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 16421   005194  EC73  F02A         	call	_I2C_SetDataCompleteCallback	;wreg free
 16422   005198                     
 16423                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 16424   005198  0E02               	movlw	2
 16425   00519A  0012               	return		;funcret
 16426   00519C                     __end_of_rdBlkRegCompleteHandler:
 16427                           	callstack 0
 16428                           
 16429 ;; *************** function _wr1RegCompleteHandler *****************
 16430 ;; Defined at:
 16431 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 16432 ;; Parameters:    Size  Location     Type
 16433 ;;  ptr             1    7[BANK0 ] PTR void 
 16434 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16435 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 16436 ;; Auto vars:     Size  Location     Type
 16437 ;;		None
 16438 ;; Return value:  Size  Location     Type
 16439 ;;                  1    wreg      enum E363
 16440 ;; Registers used:
 16441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16442 ;; Tracked objects:
 16443 ;;		On entry : 0/0
 16444 ;;		On exit  : 0/0
 16445 ;;		Unchanged: 0/0
 16446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16447 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16450 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16451 ;;Total ram usage:        1 bytes
 16452 ;; Hardware stack levels used: 1
 16453 ;; Hardware stack levels required when called: 11
 16454 ;; This function calls:
 16455 ;;		_I2C_SetBuffer
 16456 ;;		_I2C_SetDataCompleteCallback
 16457 ;; This function is called by:
 16458 ;;		_I2C_Write1ByteRegister
 16459 ;;		_I2C_DO_TX
 16460 ;;		_I2C_DO_RX
 16461 ;;		_I2C_DO_TX_EMPTY
 16462 ;;		_I2C_DO_ADDRESS_NACK
 16463 ;;		_I2C_DO_RX_EMPTY
 16464 ;; This function uses a non-reentrant model
 16465 ;;
 16466                           
 16467                           	psect	text70
 16468   005264                     __ptext70:
 16469                           	callstack 0
 16470   005264                     _wr1RegCompleteHandler:
 16471                           	callstack 12
 16472   005264                     
 16473                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 16474   005264  C0DC  F0D5         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 16475   005268  0E00               	movlw	0
 16476   00526A  0100               	movlb	0	; () banked
 16477   00526C  6FD7               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
 16478   00526E  0E01               	movlw	1
 16479   005270  6FD6               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
 16480   005272  ECC9  F029         	call	_I2C_SetBuffer	;wreg free
 16481   005276                     
 16482                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 16483   005276  0E00               	movlw	0
 16484   005278  0100               	movlb	0	; () banked
 16485   00527A  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 16486   00527C  0E00               	movlw	0
 16487   00527E  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 16488   005280  0E00               	movlw	0
 16489   005282  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 16490   005284  EC73  F02A         	call	_I2C_SetDataCompleteCallback	;wreg free
 16491   005288                     
 16492                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 16493   005288  0E04               	movlw	4
 16494   00528A  0012               	return		;funcret
 16495   00528C                     __end_of_wr1RegCompleteHandler:
 16496                           	callstack 0
 16497                           
 16498 ;; *************** function _rd2RegCompleteHandler *****************
 16499 ;; Defined at:
 16500 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 16501 ;; Parameters:    Size  Location     Type
 16502 ;;  ptr             1    7[BANK0 ] PTR void 
 16503 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16504 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 16505 ;; Auto vars:     Size  Location     Type
 16506 ;;		None
 16507 ;; Return value:  Size  Location     Type
 16508 ;;                  1    wreg      enum E363
 16509 ;; Registers used:
 16510 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16511 ;; Tracked objects:
 16512 ;;		On entry : 0/0
 16513 ;;		On exit  : 0/0
 16514 ;;		Unchanged: 0/0
 16515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16516 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16519 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16520 ;;Total ram usage:        1 bytes
 16521 ;; Hardware stack levels used: 1
 16522 ;; Hardware stack levels required when called: 11
 16523 ;; This function calls:
 16524 ;;		_I2C_SetBuffer
 16525 ;;		_I2C_SetDataCompleteCallback
 16526 ;; This function is called by:
 16527 ;;		_I2C_Read2ByteRegister
 16528 ;;		_I2C_DO_TX
 16529 ;;		_I2C_DO_RX
 16530 ;;		_I2C_DO_TX_EMPTY
 16531 ;;		_I2C_DO_ADDRESS_NACK
 16532 ;;		_I2C_DO_RX_EMPTY
 16533 ;; This function uses a non-reentrant model
 16534 ;;
 16535                           
 16536                           	psect	text71
 16537   00528C                     __ptext71:
 16538                           	callstack 0
 16539   00528C                     _rd2RegCompleteHandler:
 16540                           	callstack 12
 16541   00528C                     
 16542                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 16543   00528C  C0DC  F0D5         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 16544   005290  0E00               	movlw	0
 16545   005292  0100               	movlb	0	; () banked
 16546   005294  6FD7               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
 16547   005296  0E02               	movlw	2
 16548   005298  6FD6               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
 16549   00529A  ECC9  F029         	call	_I2C_SetBuffer	;wreg free
 16550   00529E                     
 16551                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 16552   00529E  0E00               	movlw	0
 16553   0052A0  0100               	movlb	0	; () banked
 16554   0052A2  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 16555   0052A4  0E00               	movlw	0
 16556   0052A6  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 16557   0052A8  0E00               	movlw	0
 16558   0052AA  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 16559   0052AC  EC73  F02A         	call	_I2C_SetDataCompleteCallback	;wreg free
 16560   0052B0                     
 16561                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 16562   0052B0  0E02               	movlw	2
 16563   0052B2  0012               	return		;funcret
 16564   0052B4                     __end_of_rd2RegCompleteHandler:
 16565                           	callstack 0
 16566                           
 16567 ;; *************** function _rd1RegCompleteHandler *****************
 16568 ;; Defined at:
 16569 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 16570 ;; Parameters:    Size  Location     Type
 16571 ;;  ptr             1    7[BANK0 ] PTR void 
 16572 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16573 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 16574 ;; Auto vars:     Size  Location     Type
 16575 ;;		None
 16576 ;; Return value:  Size  Location     Type
 16577 ;;                  1    wreg      enum E363
 16578 ;; Registers used:
 16579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16580 ;; Tracked objects:
 16581 ;;		On entry : 0/0
 16582 ;;		On exit  : 0/0
 16583 ;;		Unchanged: 0/0
 16584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16585 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16588 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16589 ;;Total ram usage:        1 bytes
 16590 ;; Hardware stack levels used: 1
 16591 ;; Hardware stack levels required when called: 11
 16592 ;; This function calls:
 16593 ;;		_I2C_SetBuffer
 16594 ;;		_I2C_SetDataCompleteCallback
 16595 ;; This function is called by:
 16596 ;;		_I2C_Read1ByteRegister
 16597 ;;		_I2C_DO_TX
 16598 ;;		_I2C_DO_RX
 16599 ;;		_I2C_DO_TX_EMPTY
 16600 ;;		_I2C_DO_ADDRESS_NACK
 16601 ;;		_I2C_DO_RX_EMPTY
 16602 ;; This function uses a non-reentrant model
 16603 ;;
 16604                           
 16605                           	psect	text72
 16606   0052B4                     __ptext72:
 16607                           	callstack 0
 16608   0052B4                     _rd1RegCompleteHandler:
 16609                           	callstack 12
 16610   0052B4                     
 16611                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 16612   0052B4  C0DC  F0D5         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 16613   0052B8  0E00               	movlw	0
 16614   0052BA  0100               	movlb	0	; () banked
 16615   0052BC  6FD7               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
 16616   0052BE  0E01               	movlw	1
 16617   0052C0  6FD6               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
 16618   0052C2  ECC9  F029         	call	_I2C_SetBuffer	;wreg free
 16619   0052C6                     
 16620                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 16621   0052C6  0E00               	movlw	0
 16622   0052C8  0100               	movlb	0	; () banked
 16623   0052CA  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 16624   0052CC  0E00               	movlw	0
 16625   0052CE  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 16626   0052D0  0E00               	movlw	0
 16627   0052D2  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 16628   0052D4  EC73  F02A         	call	_I2C_SetDataCompleteCallback	;wreg free
 16629   0052D8                     
 16630                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 16631   0052D8  0E02               	movlw	2
 16632   0052DA  0012               	return		;funcret
 16633   0052DC                     __end_of_rd1RegCompleteHandler:
 16634                           	callstack 0
 16635                           
 16636 ;; *************** function _wr2RegCompleteHandler *****************
 16637 ;; Defined at:
 16638 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 16639 ;; Parameters:    Size  Location     Type
 16640 ;;  ptr             1    7[BANK0 ] PTR void 
 16641 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16642 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 16643 ;; Auto vars:     Size  Location     Type
 16644 ;;		None
 16645 ;; Return value:  Size  Location     Type
 16646 ;;                  1    wreg      enum E363
 16647 ;; Registers used:
 16648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16649 ;; Tracked objects:
 16650 ;;		On entry : 0/0
 16651 ;;		On exit  : 0/0
 16652 ;;		Unchanged: 0/0
 16653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16654 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16657 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16658 ;;Total ram usage:        1 bytes
 16659 ;; Hardware stack levels used: 1
 16660 ;; Hardware stack levels required when called: 11
 16661 ;; This function calls:
 16662 ;;		_I2C_SetBuffer
 16663 ;;		_I2C_SetDataCompleteCallback
 16664 ;; This function is called by:
 16665 ;;		_I2C_Write2ByteRegister
 16666 ;;		_I2C_DO_TX
 16667 ;;		_I2C_DO_RX
 16668 ;;		_I2C_DO_TX_EMPTY
 16669 ;;		_I2C_DO_ADDRESS_NACK
 16670 ;;		_I2C_DO_RX_EMPTY
 16671 ;; This function uses a non-reentrant model
 16672 ;;
 16673                           
 16674                           	psect	text73
 16675   0052DC                     __ptext73:
 16676                           	callstack 0
 16677   0052DC                     _wr2RegCompleteHandler:
 16678                           	callstack 12
 16679   0052DC                     
 16680                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 16681   0052DC  C0DC  F0D5         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 16682   0052E0  0E00               	movlw	0
 16683   0052E2  0100               	movlb	0	; () banked
 16684   0052E4  6FD7               	movwf	(I2C_SetBuffer@bufferSize+1)& (0+255),b
 16685   0052E6  0E02               	movlw	2
 16686   0052E8  6FD6               	movwf	I2C_SetBuffer@bufferSize& (0+255),b
 16687   0052EA  ECC9  F029         	call	_I2C_SetBuffer	;wreg free
 16688   0052EE                     
 16689                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 16690   0052EE  0E00               	movlw	0
 16691   0052F0  0100               	movlb	0	; () banked
 16692   0052F2  6FD9               	movwf	I2C_SetDataCompleteCallback@cb& (0+255),b
 16693   0052F4  0E00               	movlw	0
 16694   0052F6  6FDA               	movwf	(I2C_SetDataCompleteCallback@cb+1)& (0+255),b
 16695   0052F8  0E00               	movlw	0
 16696   0052FA  6FDB               	movwf	I2C_SetDataCompleteCallback@ptr& (0+255),b
 16697   0052FC  EC73  F02A         	call	_I2C_SetDataCompleteCallback	;wreg free
 16698   005300                     
 16699                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 16700   005300  0E04               	movlw	4
 16701   005302  0012               	return		;funcret
 16702   005304                     __end_of_wr2RegCompleteHandler:
 16703                           	callstack 0
 16704                           
 16705 ;; *************** function _I2C_SetDataCompleteCallback *****************
 16706 ;; Defined at:
 16707 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 16708 ;; Parameters:    Size  Location     Type
 16709 ;;  cb              2    4[BANK0 ] PTR FTN(PTR void ,)enum 
 16710 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
 16711 ;;		 -> rd1RegCompleteHandler(1), NULL(1), 
 16712 ;;  ptr             1    6[BANK0 ] PTR void 
 16713 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16714 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 16715 ;; Auto vars:     Size  Location     Type
 16716 ;;		None
 16717 ;; Return value:  Size  Location     Type
 16718 ;;                  1    wreg      void 
 16719 ;; Registers used:
 16720 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16721 ;; Tracked objects:
 16722 ;;		On entry : 0/0
 16723 ;;		On exit  : 0/0
 16724 ;;		Unchanged: 0/0
 16725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16726 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16729 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16730 ;;Total ram usage:        3 bytes
 16731 ;; Hardware stack levels used: 1
 16732 ;; Hardware stack levels required when called: 10
 16733 ;; This function calls:
 16734 ;;		_I2C_SetCallback
 16735 ;; This function is called by:
 16736 ;;		_I2C_Read1ByteRegister
 16737 ;;		_I2C_Write1ByteRegister
 16738 ;;		_rd1RegCompleteHandler
 16739 ;;		_rd2RegCompleteHandler
 16740 ;;		_wr1RegCompleteHandler
 16741 ;;		_wr2RegCompleteHandler
 16742 ;;		_rdBlkRegCompleteHandler
 16743 ;;		_I2C_Read2ByteRegister
 16744 ;;		_I2C_Write2ByteRegister
 16745 ;;		_I2C_ReadDataBlock
 16746 ;; This function uses a non-reentrant model
 16747 ;;
 16748                           
 16749                           	psect	text74
 16750   0054E6                     __ptext74:
 16751                           	callstack 0
 16752   0054E6                     _I2C_SetDataCompleteCallback:
 16753                           	callstack 18
 16754   0054E6                     
 16755                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 16756   0054E6  C0D9  F0D5         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 16757   0054EA  C0DA  F0D6         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 16758   0054EE  C0DB  F0D7         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 16759   0054F2  0E00               	movlw	0
 16760   0054F4  ECDA  F026         	call	_I2C_SetCallback
 16761   0054F8  0012               	return		;funcret
 16762   0054FA                     __end_of_I2C_SetDataCompleteCallback:
 16763                           	callstack 0
 16764                           
 16765 ;; *************** function _I2C_SetCallback *****************
 16766 ;; Defined at:
 16767 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 16768 ;; Parameters:    Size  Location     Type
 16769 ;;  idx             1    wreg     enum E3146
 16770 ;;  cb              2    0[BANK0 ] PTR FTN(PTR void ,)enum 
 16771 ;;		 -> rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), rd2RegCompleteHandler(1), 
 16772 ;;		 -> rd1RegCompleteHandler(1), NULL(1), 
 16773 ;;  ptr             1    2[BANK0 ] PTR void 
 16774 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 16775 ;;		 -> I2C_Read1ByteRegister@returnValue(1), NULL(0), 
 16776 ;; Auto vars:     Size  Location     Type
 16777 ;;  idx             1    3[BANK0 ] enum E3146
 16778 ;; Return value:  Size  Location     Type
 16779 ;;                  1    wreg      void 
 16780 ;; Registers used:
 16781 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16782 ;; Tracked objects:
 16783 ;;		On entry : 0/0
 16784 ;;		On exit  : 0/0
 16785 ;;		Unchanged: 0/0
 16786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16787 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16788 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16790 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16791 ;;Total ram usage:        4 bytes
 16792 ;; Hardware stack levels used: 1
 16793 ;; Hardware stack levels required when called: 9
 16794 ;; This function calls:
 16795 ;;		Nothing
 16796 ;; This function is called by:
 16797 ;;		_I2C_SetDataCompleteCallback
 16798 ;;		_I2C_SetAddressNackCallback
 16799 ;;		_I2C_SetWriteCollisionCallback
 16800 ;;		_I2C_SetDataNackCallback
 16801 ;;		_I2C_SetTimeoutCallback
 16802 ;; This function uses a non-reentrant model
 16803 ;;
 16804                           
 16805                           	psect	text75
 16806   004DB4                     __ptext75:
 16807                           	callstack 0
 16808   004DB4                     _I2C_SetCallback:
 16809                           	callstack 18
 16810                           
 16811                           ;incstack = 0
 16812                           ;I2C_SetCallback@idx stored from wreg
 16813   004DB4  0100               	movlb	0	; () banked
 16814   004DB6  6FD8               	movwf	I2C_SetCallback@idx& (0+255),b
 16815   004DB8                     
 16816                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 16817   004DB8  0100               	movlb	0	; () banked
 16818   004DBA  51D5               	movf	I2C_SetCallback@cb& (0+255),w,b
 16819   004DBC  11D6               	iorwf	(I2C_SetCallback@cb+1)& (0+255),w,b
 16820   004DBE  B4D8               	btfsc	status,2,c
 16821   004DC0  EFE4  F026         	goto	u11091
 16822   004DC4  EFE6  F026         	goto	u11090
 16823   004DC8                     u11091:
 16824   004DC8  EFF8  F026         	goto	l12790
 16825   004DCC                     u11090:
 16826   004DCC                     
 16827                           ; BSR set to: 0
 16828                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 16829   004DCC  51D8               	movf	I2C_SetCallback@idx& (0+255),w,b
 16830   004DCE  0D02               	mullw	2
 16831   004DD0  50F3               	movf	243,w,c
 16832   004DD2  0F60               	addlw	low _I2C_Status
 16833   004DD4  6ED9               	movwf	fsr2l,c
 16834   004DD6  6ADA               	clrf	fsr2h,c
 16835   004DD8  C0D5  FFDE         	movff	I2C_SetCallback@cb,postinc2
 16836   004DDC  C0D6  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 16837   004DE0                     
 16838                           ; BSR set to: 0
 16839                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 16840   004DE0  51D8               	movf	I2C_SetCallback@idx& (0+255),w,b
 16841   004DE2  0F6C               	addlw	low (_I2C_Status+12)
 16842   004DE4  6ED9               	movwf	fsr2l,c
 16843   004DE6  6ADA               	clrf	fsr2h,c
 16844   004DE8  C0D7  FFDF         	movff	I2C_SetCallback@ptr,indf2
 16845                           
 16846                           ;mcc_generated_files/i2c_master.c: 304:     }
 16847   004DEC  EF07  F027         	goto	l2363
 16848   004DF0                     l12790:
 16849                           
 16850                           ; BSR set to: 0
 16851                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 16852   004DF0  51D8               	movf	I2C_SetCallback@idx& (0+255),w,b
 16853   004DF2  0D02               	mullw	2
 16854   004DF4  50F3               	movf	243,w,c
 16855   004DF6  0F60               	addlw	low _I2C_Status
 16856   004DF8  6ED9               	movwf	fsr2l,c
 16857   004DFA  6ADA               	clrf	fsr2h,c
 16858   004DFC  0E06               	movlw	low _I2C_CallbackReturnStop
 16859   004DFE  6EDE               	movwf	postinc2,c
 16860   004E00  0E56               	movlw	high _I2C_CallbackReturnStop
 16861   004E02  6EDD               	movwf	postdec2,c
 16862   004E04                     
 16863                           ; BSR set to: 0
 16864                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 16865   004E04  51D8               	movf	I2C_SetCallback@idx& (0+255),w,b
 16866   004E06  0F6C               	addlw	low (_I2C_Status+12)
 16867   004E08  6ED9               	movwf	fsr2l,c
 16868   004E0A  6ADA               	clrf	fsr2h,c
 16869   004E0C  6ADF               	clrf	indf2,c
 16870   004E0E                     l2363:
 16871                           
 16872                           ; BSR set to: 0
 16873   004E0E  0012               	return		;funcret
 16874   004E10                     __end_of_I2C_SetCallback:
 16875                           	callstack 0
 16876                           
 16877 ;; *************** function _I2C_SetBuffer *****************
 16878 ;; Defined at:
 16879 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 16880 ;; Parameters:    Size  Location     Type
 16881 ;;  buffer          1    0[BANK0 ] PTR void 
 16882 ;;		 -> I2C_Read1ByteRegister@returnValue$data(2), I2C_Read2ByteRegister@returnValue$data(2), I2C_Write1ByteRegister@dat
      +a$data(2), I2C_Write2ByteRegister@data$data(2), 
 16883 ;;		 -> I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), bufferBlock$data(2), I2C_Write2ByteRegister@reg(1), 
 16884 ;;		 -> I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegister@data(1), I2C_Read2ByteRegi
      +ster@reg(1), 
 16885 ;;		 -> I2C_Read2ByteRegister@returnValue(2), I2C_Read1ByteRegister@reg(1), I2C_Read1ByteRegister@returnValue(1), NULL(0
      +), 
 16886 ;;  bufferSize      2    1[BANK0 ] unsigned int 
 16887 ;; Auto vars:     Size  Location     Type
 16888 ;;		None
 16889 ;; Return value:  Size  Location     Type
 16890 ;;                  1    wreg      void 
 16891 ;; Registers used:
 16892 ;;		wreg, status,2, status,0
 16893 ;; Tracked objects:
 16894 ;;		On entry : 0/0
 16895 ;;		On exit  : 0/0
 16896 ;;		Unchanged: 0/0
 16897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16898 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16901 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16902 ;;Total ram usage:        3 bytes
 16903 ;; Hardware stack levels used: 1
 16904 ;; Hardware stack levels required when called: 9
 16905 ;; This function calls:
 16906 ;;		Nothing
 16907 ;; This function is called by:
 16908 ;;		_I2C_Read1ByteRegister
 16909 ;;		_I2C_Write1ByteRegister
 16910 ;;		_rd1RegCompleteHandler
 16911 ;;		_rd2RegCompleteHandler
 16912 ;;		_wr1RegCompleteHandler
 16913 ;;		_wr2RegCompleteHandler
 16914 ;;		_rdBlkRegCompleteHandler
 16915 ;;		_I2C_Read2ByteRegister
 16916 ;;		_I2C_Write2ByteRegister
 16917 ;;		_I2C_WriteNBytes
 16918 ;;		_I2C_ReadNBytes
 16919 ;;		_I2C_ReadDataBlock
 16920 ;; This function uses a non-reentrant model
 16921 ;;
 16922                           
 16923                           	psect	text76
 16924   005392                     __ptext76:
 16925                           	callstack 0
 16926   005392                     _I2C_SetBuffer:
 16927                           	callstack 19
 16928   005392                     
 16929                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 16930   005392  0100               	movlb	0	; () banked
 16931   005394  A77C               	btfss	(_I2C_Status+28)& (0+255),3,b
 16932   005396  EFCF  F029         	goto	u11101
 16933   00539A  EFD1  F029         	goto	u11100
 16934   00539E                     u11101:
 16935   00539E  EFD8  F029         	goto	l2343
 16936   0053A2                     u11100:
 16937   0053A2                     
 16938                           ; BSR set to: 0
 16939                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 16940   0053A2  C0D5  F077         	movff	I2C_SetBuffer@buffer,_I2C_Status+23
 16941   0053A6                     
 16942                           ; BSR set to: 0
 16943                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 16944   0053A6  C0D6  F078         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+24
 16945   0053AA  C0D7  F079         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+25
 16946   0053AE                     
 16947                           ; BSR set to: 0
 16948                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 16949   0053AE  977C               	bcf	(_I2C_Status+28)& (0+255),3,b
 16950   0053B0                     l2343:
 16951                           
 16952                           ; BSR set to: 0
 16953   0053B0  0012               	return		;funcret
 16954   0053B2                     __end_of_I2C_SetBuffer:
 16955                           	callstack 0
 16956                           
 16957 ;; *************** function _I2C_MasterStop *****************
 16958 ;; Defined at:
 16959 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 16960 ;; Parameters:    Size  Location     Type
 16961 ;;		None
 16962 ;; Auto vars:     Size  Location     Type
 16963 ;;		None
 16964 ;; Return value:  Size  Location     Type
 16965 ;;                  1    wreg      void 
 16966 ;; Registers used:
 16967 ;;		None
 16968 ;; Tracked objects:
 16969 ;;		On entry : 0/0
 16970 ;;		On exit  : 0/0
 16971 ;;		Unchanged: 0/0
 16972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16977 ;;Total ram usage:        0 bytes
 16978 ;; Hardware stack levels used: 1
 16979 ;; Hardware stack levels required when called: 9
 16980 ;; This function calls:
 16981 ;;		Nothing
 16982 ;; This function is called by:
 16983 ;;		_I2C_DO_SEND_STOP
 16984 ;; This function uses a non-reentrant model
 16985 ;;
 16986                           
 16987                           	psect	text77
 16988   00560A                     __ptext77:
 16989                           	callstack 0
 16990   00560A                     _I2C_MasterStop:
 16991                           	callstack 13
 16992   00560A                     
 16993                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 16994   00560A  84C5               	bsf	197,2,c	;volatile
 16995   00560C  0012               	return		;funcret
 16996   00560E                     __end_of_I2C_MasterStop:
 16997                           	callstack 0
 16998                           
 16999 ;; *************** function _I2C_MasterEnableRestart *****************
 17000 ;; Defined at:
 17001 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 17002 ;; Parameters:    Size  Location     Type
 17003 ;;		None
 17004 ;; Auto vars:     Size  Location     Type
 17005 ;;		None
 17006 ;; Return value:  Size  Location     Type
 17007 ;;                  1    wreg      void 
 17008 ;; Registers used:
 17009 ;;		None
 17010 ;; Tracked objects:
 17011 ;;		On entry : 0/0
 17012 ;;		On exit  : 0/0
 17013 ;;		Unchanged: 0/0
 17014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17019 ;;Total ram usage:        0 bytes
 17020 ;; Hardware stack levels used: 1
 17021 ;; Hardware stack levels required when called: 9
 17022 ;; This function calls:
 17023 ;;		Nothing
 17024 ;; This function is called by:
 17025 ;;		_I2C_DO_SEND_RESTART_READ
 17026 ;;		_I2C_DO_SEND_RESTART_WRITE
 17027 ;;		_I2C_DO_SEND_RESTART
 17028 ;;		_I2C_DO_RX_EMPTY
 17029 ;; This function uses a non-reentrant model
 17030 ;;
 17031                           
 17032                           	psect	text78
 17033   00560E                     __ptext78:
 17034                           	callstack 0
 17035   00560E                     _I2C_MasterEnableRestart:
 17036                           	callstack 13
 17037   00560E                     
 17038                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 17039   00560E  82C5               	bsf	197,1,c	;volatile
 17040   005610  0012               	return		;funcret
 17041   005612                     __end_of_I2C_MasterEnableRestart:
 17042                           	callstack 0
 17043                           
 17044 ;; *************** function _I2C_MasterStart *****************
 17045 ;; Defined at:
 17046 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 17047 ;; Parameters:    Size  Location     Type
 17048 ;;		None
 17049 ;; Auto vars:     Size  Location     Type
 17050 ;;		None
 17051 ;; Return value:  Size  Location     Type
 17052 ;;                  1    wreg      void 
 17053 ;; Registers used:
 17054 ;;		None
 17055 ;; Tracked objects:
 17056 ;;		On entry : 0/0
 17057 ;;		On exit  : 0/0
 17058 ;;		Unchanged: 0/0
 17059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17064 ;;Total ram usage:        0 bytes
 17065 ;; Hardware stack levels used: 1
 17066 ;; Hardware stack levels required when called: 9
 17067 ;; This function calls:
 17068 ;;		Nothing
 17069 ;; This function is called by:
 17070 ;;		_I2C_MasterOperation
 17071 ;; This function uses a non-reentrant model
 17072 ;;
 17073                           
 17074                           	psect	text79
 17075   005612                     __ptext79:
 17076                           	callstack 0
 17077   005612                     _I2C_MasterStart:
 17078                           	callstack 17
 17079   005612                     
 17080                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 17081   005612  80C5               	bsf	197,0,c	;volatile
 17082   005614  0012               	return		;funcret
 17083   005616                     __end_of_I2C_MasterStart:
 17084                           	callstack 0
 17085                           
 17086 ;; *************** function _I2C_Close *****************
 17087 ;; Defined at:
 17088 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 17089 ;; Parameters:    Size  Location     Type
 17090 ;;		None
 17091 ;; Auto vars:     Size  Location     Type
 17092 ;;  returnValue     1    0[BANK0 ] enum E358
 17093 ;; Return value:  Size  Location     Type
 17094 ;;                  1    wreg      enum E358
 17095 ;; Registers used:
 17096 ;;		wreg, status,2, cstack
 17097 ;; Tracked objects:
 17098 ;;		On entry : 0/0
 17099 ;;		On exit  : 0/0
 17100 ;;		Unchanged: 0/0
 17101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17103 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17105 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17106 ;;Total ram usage:        1 bytes
 17107 ;; Hardware stack levels used: 1
 17108 ;; Hardware stack levels required when called: 10
 17109 ;; This function calls:
 17110 ;;		_I2C_MasterClearIrq
 17111 ;;		_I2C_MasterClose
 17112 ;;		_I2C_MasterDisableIrq
 17113 ;; This function is called by:
 17114 ;;		_I2C_Read1ByteRegister
 17115 ;;		_I2C_Write1ByteRegister
 17116 ;;		_I2C_Read2ByteRegister
 17117 ;;		_I2C_Write2ByteRegister
 17118 ;;		_I2C_WriteNBytes
 17119 ;;		_I2C_ReadNBytes
 17120 ;;		_I2C_ReadDataBlock
 17121 ;; This function uses a non-reentrant model
 17122 ;;
 17123                           
 17124                           	psect	text80
 17125   005236                     __ptext80:
 17126                           	callstack 0
 17127   005236                     _I2C_Close:
 17128                           	callstack 18
 17129   005236                     
 17130                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 17131   005236  0E01               	movlw	1
 17132   005238  0100               	movlb	0	; () banked
 17133   00523A  6FD5               	movwf	I2C_Close@returnValue& (0+255),b
 17134   00523C                     
 17135                           ; BSR set to: 0
 17136                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 17137   00523C  B37C               	btfsc	(_I2C_Status+28)& (0+255),1,b
 17138   00523E  EF23  F029         	goto	u11581
 17139   005242  EF25  F029         	goto	u11580
 17140   005246                     u11581:
 17141   005246  EF2F  F029         	goto	l13346
 17142   00524A                     u11580:
 17143   00524A                     
 17144                           ; BSR set to: 0
 17145                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 17146   00524A  957C               	bcf	(_I2C_Status+28)& (0+255),2,b
 17147                           
 17148                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 17149   00524C  6976               	setf	(_I2C_Status+22)& (0+255),b
 17150   00524E                     
 17151                           ; BSR set to: 0
 17152                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 17153   00524E  EC0F  F02B         	call	_I2C_MasterClearIrq	;wreg free
 17154                           
 17155                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 17156   005252  EC0B  F02B         	call	_I2C_MasterDisableIrq	;wreg free
 17157                           
 17158                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 17159   005256  EC0D  F02B         	call	_I2C_MasterClose	;wreg free
 17160   00525A                     
 17161                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 17162   00525A  C07B  F0D5         	movff	_I2C_Status+27,I2C_Close@returnValue
 17163   00525E                     l13346:
 17164                           
 17165                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 17166   00525E  0100               	movlb	0	; () banked
 17167   005260  51D5               	movf	I2C_Close@returnValue& (0+255),w,b
 17168   005262                     
 17169                           ; BSR set to: 0
 17170   005262  0012               	return		;funcret
 17171   005264                     __end_of_I2C_Close:
 17172                           	callstack 0
 17173                           
 17174 ;; *************** function _I2C_MasterDisableIrq *****************
 17175 ;; Defined at:
 17176 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 17177 ;; Parameters:    Size  Location     Type
 17178 ;;		None
 17179 ;; Auto vars:     Size  Location     Type
 17180 ;;		None
 17181 ;; Return value:  Size  Location     Type
 17182 ;;                  1    wreg      void 
 17183 ;; Registers used:
 17184 ;;		None
 17185 ;; Tracked objects:
 17186 ;;		On entry : 0/0
 17187 ;;		On exit  : 0/0
 17188 ;;		Unchanged: 0/0
 17189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17194 ;;Total ram usage:        0 bytes
 17195 ;; Hardware stack levels used: 1
 17196 ;; Hardware stack levels required when called: 9
 17197 ;; This function calls:
 17198 ;;		Nothing
 17199 ;; This function is called by:
 17200 ;;		_I2C_Close
 17201 ;;		_I2C_SetTimeOut
 17202 ;; This function uses a non-reentrant model
 17203 ;;
 17204                           
 17205                           	psect	text81
 17206   005616                     __ptext81:
 17207                           	callstack 0
 17208   005616                     _I2C_MasterDisableIrq:
 17209                           	callstack 18
 17210   005616                     
 17211                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 17212   005616  969D               	bcf	157,3,c	;volatile
 17213   005618  0012               	return		;funcret
 17214   00561A                     __end_of_I2C_MasterDisableIrq:
 17215                           	callstack 0
 17216                           
 17217 ;; *************** function _I2C_MasterClose *****************
 17218 ;; Defined at:
 17219 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 17220 ;; Parameters:    Size  Location     Type
 17221 ;;		None
 17222 ;; Auto vars:     Size  Location     Type
 17223 ;;		None
 17224 ;; Return value:  Size  Location     Type
 17225 ;;                  1    wreg      void 
 17226 ;; Registers used:
 17227 ;;		None
 17228 ;; Tracked objects:
 17229 ;;		On entry : 0/0
 17230 ;;		On exit  : 0/0
 17231 ;;		Unchanged: 0/0
 17232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17237 ;;Total ram usage:        0 bytes
 17238 ;; Hardware stack levels used: 1
 17239 ;; Hardware stack levels required when called: 9
 17240 ;; This function calls:
 17241 ;;		Nothing
 17242 ;; This function is called by:
 17243 ;;		_I2C_Close
 17244 ;; This function uses a non-reentrant model
 17245 ;;
 17246                           
 17247                           	psect	text82
 17248   00561A                     __ptext82:
 17249                           	callstack 0
 17250   00561A                     _I2C_MasterClose:
 17251                           	callstack 18
 17252   00561A                     
 17253                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 17254   00561A  9AC6               	bcf	198,5,c	;volatile
 17255   00561C  0012               	return		;funcret
 17256   00561E                     __end_of_I2C_MasterClose:
 17257                           	callstack 0
 17258                           
 17259 ;; *************** function _I2C_MasterClearIrq *****************
 17260 ;; Defined at:
 17261 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 17262 ;; Parameters:    Size  Location     Type
 17263 ;;		None
 17264 ;; Auto vars:     Size  Location     Type
 17265 ;;		None
 17266 ;; Return value:  Size  Location     Type
 17267 ;;                  1    wreg      void 
 17268 ;; Registers used:
 17269 ;;		None
 17270 ;; Tracked objects:
 17271 ;;		On entry : 0/0
 17272 ;;		On exit  : 0/0
 17273 ;;		Unchanged: 0/0
 17274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17279 ;;Total ram usage:        0 bytes
 17280 ;; Hardware stack levels used: 1
 17281 ;; Hardware stack levels required when called: 9
 17282 ;; This function calls:
 17283 ;;		Nothing
 17284 ;; This function is called by:
 17285 ;;		_I2C_Open
 17286 ;;		_I2C_Close
 17287 ;;		_I2C_MasterFsm
 17288 ;; This function uses a non-reentrant model
 17289 ;;
 17290                           
 17291                           	psect	text83
 17292   00561E                     __ptext83:
 17293                           	callstack 0
 17294   00561E                     _I2C_MasterClearIrq:
 17295                           	callstack 18
 17296   00561E                     
 17297                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 17298   00561E  969E               	bcf	158,3,c	;volatile
 17299   005620  0012               	return		;funcret
 17300   005622                     __end_of_I2C_MasterClearIrq:
 17301                           	callstack 0
 17302                           
 17303 ;; *************** function _ECU_LCD_4Bit_Send_String_Data_Postition *****************
 17304 ;; Defined at:
 17305 ;;		line 123 in file "ECU_layer/LCD/LCD.c"
 17306 ;; Parameters:    Size  Location     Type
 17307 ;;  _LCD            1   28[BANK1 ] PTR const struct .
 17308 ;;		 -> LCD_1(6), 
 17309 ;;  _Row            1   29[BANK1 ] unsigned char 
 17310 ;;  _Coloumn        1   30[BANK1 ] unsigned char 
 17311 ;;  _Str            2   31[BANK1 ] PTR unsigned char 
 17312 ;;		 -> STR_9(9), STR_8(9), STR_7(8), STR_6(8), 
 17313 ;;		 -> STR_5(11), REALTIMECLOCK_DS1307_Data(18), 
 17314 ;; Auto vars:     Size  Location     Type
 17315 ;;  rt              1   33[BANK1 ] unsigned char 
 17316 ;; Return value:  Size  Location     Type
 17317 ;;                  1    wreg      unsigned char 
 17318 ;; Registers used:
 17319 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17320 ;; Tracked objects:
 17321 ;;		On entry : 0/0
 17322 ;;		On exit  : 0/0
 17323 ;;		Unchanged: 0/0
 17324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17325 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17326 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17328 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17329 ;;Total ram usage:        6 bytes
 17330 ;; Hardware stack levels used: 1
 17331 ;; Hardware stack levels required when called: 13
 17332 ;; This function calls:
 17333 ;;		_ECU_LCD_4Bit_Send_char_Data
 17334 ;;		_LCD_4Bits_Set_Curser
 17335 ;; This function is called by:
 17336 ;;		_update_display
 17337 ;;		_main
 17338 ;;		_Dashboard
 17339 ;; This function uses a non-reentrant model
 17340 ;;
 17341                           
 17342                           	psect	text84
 17343   0041FE                     __ptext84:
 17344                           	callstack 0
 17345   0041FE                     _ECU_LCD_4Bit_Send_String_Data_Postition:
 17346                           	callstack 16
 17347   0041FE                     
 17348                           ;ECU_layer/LCD/LCD.c: 124:     STD_ReturnType rt = (STD_ReturnType)0x00;
 17349   0041FE  0101               	movlb	1	; () banked
 17350   004200  6B91               	clrf	ECU_LCD_4Bit_Send_String_Data_Postition@rt& (0+255),b
 17351   004202                     
 17352                           ; BSR set to: 1
 17353                           ;ECU_layer/LCD/LCD.c: 125:      if(((void*)0) == _LCD){
 17354   004202  518C               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD& (0+255),w,b
 17355   004204  A4D8               	btfss	status,2,c
 17356   004206  EF07  F021         	goto	u12691
 17357   00420A  EF09  F021         	goto	u12690
 17358   00420E                     u12691:
 17359   00420E  EF0C  F021         	goto	l14022
 17360   004212                     u12690:
 17361   004212                     
 17362                           ; BSR set to: 1
 17363                           ;ECU_layer/LCD/LCD.c: 126:         rt = (STD_ReturnType)0x00;
 17364   004212  6B91               	clrf	ECU_LCD_4Bit_Send_String_Data_Postition@rt& (0+255),b
 17365                           
 17366                           ;ECU_layer/LCD/LCD.c: 127:     }
 17367   004214  EF4A  F021         	goto	l14030
 17368   004218                     l14022:
 17369                           
 17370                           ; BSR set to: 1
 17371                           ;ECU_layer/LCD/LCD.c: 129:         LCD_4Bits_Set_Curser(_LCD, _Row, _Coloumn);
 17372   004218  C18C  F0E2         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD,LCD_4Bits_Set_Curser@_LCD
 17373   00421C  C18D  F0E3         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Row,LCD_4Bits_Set_Curser@row
 17374   004220  C18E  F0E4         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn,LCD_4Bits_Set_Curser@coloumn
 17375   004224  ECB0  F020         	call	_LCD_4Bits_Set_Curser	;wreg free
 17376                           
 17377                           ;ECU_layer/LCD/LCD.c: 130:         while(*_Str){
 17378   004228  EF31  F021         	goto	l14028
 17379   00422C                     l14024:
 17380                           
 17381                           ;ECU_layer/LCD/LCD.c: 131:              rt = ECU_LCD_4Bit_Send_char_Data (_LCD, *_Str++)
      +                          ;
 17382   00422C  C18C  F0DF         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_LCD,ECU_LCD_4Bit_Send_char_Data@_LCD
 17383   004230  C18F  FFF6         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Str,tblptrl
 17384   004234  C190  FFF7         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1,tblptrh
 17385   004238  0E00               	movlw	low (__smallconst shr (0+16))
 17386   00423A  6EF8               	movwf	tblptru,c
 17387   00423C  0E0F               	movlw	(high __ramtop+-1)
 17388   00423E  64F7               	cpfsgt	tblptrh,c
 17389   004240  D003               	bra	u12707
 17390   004242  0008               	tblrd		*
 17391   004244  50F5               	movf	tablat,w,c
 17392   004246  D005               	bra	u12700
 17393   004248                     u12707:
 17394   004248  CFF6 FFE9          	movff	tblptrl,fsr0l
 17395   00424C  CFF7 FFEA          	movff	tblptrh,fsr0h
 17396   004250  50EF               	movf	indf0,w,c
 17397   004252                     u12700:
 17398   004252  0100               	movlb	0	; () banked
 17399   004254  6FE0               	movwf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),b
 17400   004256  ECB4  F025         	call	_ECU_LCD_4Bit_Send_char_Data	;wreg free
 17401   00425A  0101               	movlb	1	; () banked
 17402   00425C  6F91               	movwf	ECU_LCD_4Bit_Send_String_Data_Postition@rt& (0+255),b
 17403   00425E                     
 17404                           ; BSR set to: 1
 17405   00425E  4B8F               	infsnz	ECU_LCD_4Bit_Send_String_Data_Postition@_Str& (0+255),f,b
 17406   004260  2B90               	incf	(ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)& (0+255),f,b
 17407   004262                     l14028:
 17408                           
 17409                           ;ECU_layer/LCD/LCD.c: 130:         while(*_Str){
 17410   004262  C18F  FFF6         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Str,tblptrl
 17411   004266  C190  FFF7         	movff	ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1,tblptrh
 17412   00426A  0E00               	movlw	low (__smallconst shr (0+16))
 17413   00426C  6EF8               	movwf	tblptru,c
 17414   00426E  0E0F               	movlw	(high __ramtop+-1)
 17415   004270  64F7               	cpfsgt	tblptrh,c
 17416   004272  D003               	bra	u12717
 17417   004274  0008               	tblrd		*
 17418   004276  50F5               	movf	tablat,w,c
 17419   004278  D005               	bra	u12710
 17420   00427A                     u12717:
 17421   00427A  CFF6 FFE9          	movff	tblptrl,fsr0l
 17422   00427E  CFF7 FFEA          	movff	tblptrh,fsr0h
 17423   004282  50EF               	movf	indf0,w,c
 17424   004284                     u12710:
 17425   004284  0900               	iorlw	0
 17426   004286  A4D8               	btfss	status,2,c
 17427   004288  EF48  F021         	goto	u12721
 17428   00428C  EF4A  F021         	goto	u12720
 17429   004290                     u12721:
 17430   004290  EF16  F021         	goto	l14024
 17431   004294                     u12720:
 17432   004294                     l14030:
 17433                           
 17434                           ;ECU_layer/LCD/LCD.c: 136:     return rt;
 17435   004294  0101               	movlb	1	; () banked
 17436   004296  5191               	movf	ECU_LCD_4Bit_Send_String_Data_Postition@rt& (0+255),w,b
 17437   004298                     
 17438                           ; BSR set to: 1
 17439   004298  0012               	return		;funcret
 17440   00429A                     __end_of_ECU_LCD_4Bit_Send_String_Data_Postition:
 17441                           	callstack 0
 17442                           
 17443 ;; *************** function _LCD_4Bits_Set_Curser *****************
 17444 ;; Defined at:
 17445 ;;		line 383 in file "ECU_layer/LCD/LCD.c"
 17446 ;; Parameters:    Size  Location     Type
 17447 ;;  _LCD            1   13[BANK0 ] PTR const struct .
 17448 ;;		 -> LCD_1(6), 
 17449 ;;  row             1   14[BANK0 ] unsigned char 
 17450 ;;  coloumn         1   15[BANK0 ] unsigned char 
 17451 ;; Auto vars:     Size  Location     Type
 17452 ;;  rt              1   16[BANK0 ] unsigned char 
 17453 ;; Return value:  Size  Location     Type
 17454 ;;                  1    wreg      unsigned char 
 17455 ;; Registers used:
 17456 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17457 ;; Tracked objects:
 17458 ;;		On entry : 0/0
 17459 ;;		On exit  : 0/0
 17460 ;;		Unchanged: 0/0
 17461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17462 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17463 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17465 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17466 ;;Total ram usage:        4 bytes
 17467 ;; Hardware stack levels used: 1
 17468 ;; Hardware stack levels required when called: 12
 17469 ;; This function calls:
 17470 ;;		_ECU_LCD_4Bit_Send_Command
 17471 ;; This function is called by:
 17472 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
 17473 ;;		_update_display
 17474 ;;		_main
 17475 ;;		_ECU_LCD_4Bit_Send_char_Data_Position
 17476 ;; This function uses a non-reentrant model
 17477 ;;
 17478                           
 17479                           	psect	text85
 17480   004160                     __ptext85:
 17481                           	callstack 0
 17482   004160                     _LCD_4Bits_Set_Curser:
 17483                           	callstack 17
 17484   004160                     
 17485                           ;ECU_layer/LCD/LCD.c: 384:      STD_ReturnType rt = (STD_ReturnType)0x00;
 17486   004160  0100               	movlb	0	; () banked
 17487   004162  6BE5               	clrf	LCD_4Bits_Set_Curser@rt& (0+255),b
 17488   004164                     
 17489                           ; BSR set to: 0
 17490                           ;ECU_layer/LCD/LCD.c: 385:      coloumn-- ;
 17491   004164  07E4               	decf	LCD_4Bits_Set_Curser@coloumn& (0+255),f,b
 17492   004166                     
 17493                           ; BSR set to: 0
 17494                           ;ECU_layer/LCD/LCD.c: 386:      if(((void*)0) == _LCD ){
 17495   004166  51E2               	movf	LCD_4Bits_Set_Curser@_LCD& (0+255),w,b
 17496   004168  A4D8               	btfss	status,2,c
 17497   00416A  EFB9  F020         	goto	u12411
 17498   00416E  EFBB  F020         	goto	u12410
 17499   004172                     u12411:
 17500   004172  EFEA  F020         	goto	l13818
 17501   004176                     u12410:
 17502   004176                     
 17503                           ; BSR set to: 0
 17504                           ;ECU_layer/LCD/LCD.c: 387:         rt = (STD_ReturnType)0x00;
 17505   004176  6BE5               	clrf	LCD_4Bits_Set_Curser@rt& (0+255),b
 17506                           
 17507                           ;ECU_layer/LCD/LCD.c: 388:     }
 17508   004178  EFFD  F020         	goto	l13820
 17509   00417C                     l13808:
 17510                           
 17511                           ; BSR set to: 0
 17512                           ;ECU_layer/LCD/LCD.c: 392:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0x80 
      +                          + coloumn ));break;
 17513   00417C  C0E2  F0DF         	movff	LCD_4Bits_Set_Curser@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 17514   004180  51E4               	movf	LCD_4Bits_Set_Curser@coloumn& (0+255),w,b
 17515   004182  0F80               	addlw	128
 17516   004184  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 17517   004186  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 17518   00418A  0100               	movlb	0	; () banked
 17519   00418C  6FE5               	movwf	LCD_4Bits_Set_Curser@rt& (0+255),b
 17520   00418E  EFFD  F020         	goto	l13820
 17521   004192                     l13810:
 17522                           
 17523                           ; BSR set to: 0
 17524                           ;ECU_layer/LCD/LCD.c: 394:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0xc0 
      +                          + coloumn ));break;
 17525   004192  C0E2  F0DF         	movff	LCD_4Bits_Set_Curser@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 17526   004196  51E4               	movf	LCD_4Bits_Set_Curser@coloumn& (0+255),w,b
 17527   004198  0FC0               	addlw	192
 17528   00419A  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 17529   00419C  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 17530   0041A0  0100               	movlb	0	; () banked
 17531   0041A2  6FE5               	movwf	LCD_4Bits_Set_Curser@rt& (0+255),b
 17532   0041A4  EFFD  F020         	goto	l13820
 17533   0041A8                     l13812:
 17534                           
 17535                           ; BSR set to: 0
 17536                           ;ECU_layer/LCD/LCD.c: 396:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0x94 
      +                          + coloumn ));break;
 17537   0041A8  C0E2  F0DF         	movff	LCD_4Bits_Set_Curser@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 17538   0041AC  51E4               	movf	LCD_4Bits_Set_Curser@coloumn& (0+255),w,b
 17539   0041AE  0F94               	addlw	148
 17540   0041B0  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 17541   0041B2  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 17542   0041B6  0100               	movlb	0	; () banked
 17543   0041B8  6FE5               	movwf	LCD_4Bits_Set_Curser@rt& (0+255),b
 17544   0041BA  EFFD  F020         	goto	l13820
 17545   0041BE                     l13814:
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;ECU_layer/LCD/LCD.c: 398:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0xd4 
      +                          + coloumn ));break;
 17549   0041BE  C0E2  F0DF         	movff	LCD_4Bits_Set_Curser@_LCD,ECU_LCD_4Bit_Send_Command@_LCD
 17550   0041C2  51E4               	movf	LCD_4Bits_Set_Curser@coloumn& (0+255),w,b
 17551   0041C4  0FD4               	addlw	212
 17552   0041C6  6FE0               	movwf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),b
 17553   0041C8  EC80  F025         	call	_ECU_LCD_4Bit_Send_Command	;wreg free
 17554   0041CC  0100               	movlb	0	; () banked
 17555   0041CE  6FE5               	movwf	LCD_4Bits_Set_Curser@rt& (0+255),b
 17556   0041D0  EFFD  F020         	goto	l13820
 17557   0041D4                     l13818:
 17558                           
 17559                           ; BSR set to: 0
 17560   0041D4  51E3               	movf	LCD_4Bits_Set_Curser@row& (0+255),w,b
 17561                           
 17562                           ; Switch size 1, requested type "simple"
 17563                           ; Number of cases is 4, Range of values is 1 to 4
 17564                           ; switch strategies available:
 17565                           ; Name         Instructions Cycles
 17566                           ; simple_byte           13     7 (average)
 17567                           ;	Chosen strategy is simple_byte
 17568   0041D6  0A01               	xorlw	1	; case 1
 17569   0041D8  B4D8               	btfsc	status,2,c
 17570   0041DA  EFBE  F020         	goto	l13808
 17571   0041DE  0A03               	xorlw	3	; case 2
 17572   0041E0  B4D8               	btfsc	status,2,c
 17573   0041E2  EFC9  F020         	goto	l13810
 17574   0041E6  0A01               	xorlw	1	; case 3
 17575   0041E8  B4D8               	btfsc	status,2,c
 17576   0041EA  EFD4  F020         	goto	l13812
 17577   0041EE  0A07               	xorlw	7	; case 4
 17578   0041F0  B4D8               	btfsc	status,2,c
 17579   0041F2  EFDF  F020         	goto	l13814
 17580   0041F6  EFFD  F020         	goto	l13820
 17581   0041FA                     l13820:
 17582                           
 17583                           ; BSR set to: 0
 17584                           ;ECU_layer/LCD/LCD.c: 401:      return rt;
 17585   0041FA  51E5               	movf	LCD_4Bits_Set_Curser@rt& (0+255),w,b
 17586   0041FC                     
 17587                           ; BSR set to: 0
 17588   0041FC  0012               	return		;funcret
 17589   0041FE                     __end_of_LCD_4Bits_Set_Curser:
 17590                           	callstack 0
 17591                           
 17592 ;; *************** function _ECU_LCD_4Bit_Send_Command *****************
 17593 ;; Defined at:
 17594 ;;		line 50 in file "ECU_layer/LCD/LCD.c"
 17595 ;; Parameters:    Size  Location     Type
 17596 ;;  _LCD            1   10[BANK0 ] PTR const struct .
 17597 ;;		 -> LCD_1(6), 
 17598 ;;  _Command        1   11[BANK0 ] unsigned char 
 17599 ;; Auto vars:     Size  Location     Type
 17600 ;;  rt              1   12[BANK0 ] unsigned char 
 17601 ;; Return value:  Size  Location     Type
 17602 ;;                  1    wreg      unsigned char 
 17603 ;; Registers used:
 17604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17605 ;; Tracked objects:
 17606 ;;		On entry : 0/0
 17607 ;;		On exit  : 0/0
 17608 ;;		Unchanged: 0/0
 17609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17610 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17611 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17613 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17614 ;;Total ram usage:        3 bytes
 17615 ;; Hardware stack levels used: 1
 17616 ;; Hardware stack levels required when called: 11
 17617 ;; This function calls:
 17618 ;;		_LCD_4Bits_Send_Enable_Signal
 17619 ;;		_LCD_Send_4Bits
 17620 ;;		_gpio_pin_write_logic
 17621 ;; This function is called by:
 17622 ;;		_ECU_LCD_4Bit_Initialize
 17623 ;;		_LCD_4Bits_Set_Curser
 17624 ;;		_update_display
 17625 ;;		_main
 17626 ;;		_ECU_LCD_4Bit_Send_Custom_Char
 17627 ;; This function uses a non-reentrant model
 17628 ;;
 17629                           
 17630                           	psect	text86
 17631   004B00                     __ptext86:
 17632                           	callstack 0
 17633   004B00                     _ECU_LCD_4Bit_Send_Command:
 17634                           	callstack 17
 17635   004B00                     
 17636                           ;ECU_layer/LCD/LCD.c: 52:     if(((void*)0) == _LCD){
 17637   004B00  0100               	movlb	0	; () banked
 17638   004B02  51DF               	movf	ECU_LCD_4Bit_Send_Command@_LCD& (0+255),w,b
 17639   004B04  A4D8               	btfss	status,2,c
 17640   004B06  EF87  F025         	goto	u11561
 17641   004B0A  EF89  F025         	goto	u11560
 17642   004B0E                     u11561:
 17643   004B0E  EF8C  F025         	goto	l13242
 17644   004B12                     u11560:
 17645   004B12                     
 17646                           ; BSR set to: 0
 17647                           ;ECU_layer/LCD/LCD.c: 53:        rt = (STD_ReturnType)0x00;
 17648   004B12  6BE1               	clrf	ECU_LCD_4Bit_Send_Command@rt& (0+255),b
 17649                           
 17650                           ;ECU_layer/LCD/LCD.c: 54:     }
 17651   004B14  EFB2  F025         	goto	l13244
 17652   004B18                     l13242:
 17653                           
 17654                           ; BSR set to: 0
 17655                           ;ECU_layer/LCD/LCD.c: 57:         rt = gpio_pin_write_logic(&(_LCD->LCD_RS), GPIO_Pin_Lo
      +                          gic_LOW);
 17656   004B18  C0DF  F0D5         	movff	ECU_LCD_4Bit_Send_Command@_LCD,gpio_pin_write_logic@pinConfig
 17657   004B1C  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 17658   004B1E  0E00               	movlw	0
 17659   004B20  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 17660   004B22  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
 17661   004B26  0100               	movlb	0	; () banked
 17662   004B28  6FE1               	movwf	ECU_LCD_4Bit_Send_Command@rt& (0+255),b
 17663                           
 17664                           ;ECU_layer/LCD/LCD.c: 59:         rt = LCD_Send_4Bits(_LCD, _Command >> 4);
 17665   004B2A  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_Command@_LCD,LCD_Send_4Bits@_LCD
 17666   004B2E  39E0               	swapf	ECU_LCD_4Bit_Send_Command@_Command& (0+255),w,b
 17667   004B30  0B0F               	andlw	15
 17668   004B32  6FDC               	movwf	LCD_Send_4Bits@_Data& (0+255),b
 17669   004B34  EC4D  F021         	call	_LCD_Send_4Bits	;wreg free
 17670   004B38  0100               	movlb	0	; () banked
 17671   004B3A  6FE1               	movwf	ECU_LCD_4Bit_Send_Command@rt& (0+255),b
 17672                           
 17673                           ;ECU_layer/LCD/LCD.c: 61:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 17674   004B3C  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_Command@_LCD,LCD_4Bits_Send_Enable_Signal@_LCD
 17675   004B40  EC64  F027         	call	_LCD_4Bits_Send_Enable_Signal	;wreg free
 17676   004B44  0100               	movlb	0	; () banked
 17677   004B46  6FE1               	movwf	ECU_LCD_4Bit_Send_Command@rt& (0+255),b
 17678                           
 17679                           ;ECU_layer/LCD/LCD.c: 63:         rt = LCD_Send_4Bits(_LCD, _Command);
 17680   004B48  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_Command@_LCD,LCD_Send_4Bits@_LCD
 17681   004B4C  C0E0  F0DC         	movff	ECU_LCD_4Bit_Send_Command@_Command,LCD_Send_4Bits@_Data
 17682   004B50  EC4D  F021         	call	_LCD_Send_4Bits	;wreg free
 17683   004B54  0100               	movlb	0	; () banked
 17684   004B56  6FE1               	movwf	ECU_LCD_4Bit_Send_Command@rt& (0+255),b
 17685                           
 17686                           ;ECU_layer/LCD/LCD.c: 65:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 17687   004B58  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_Command@_LCD,LCD_4Bits_Send_Enable_Signal@_LCD
 17688   004B5C  EC64  F027         	call	_LCD_4Bits_Send_Enable_Signal	;wreg free
 17689   004B60  0100               	movlb	0	; () banked
 17690   004B62  6FE1               	movwf	ECU_LCD_4Bit_Send_Command@rt& (0+255),b
 17691   004B64                     l13244:
 17692                           
 17693                           ; BSR set to: 0
 17694                           ;ECU_layer/LCD/LCD.c: 68:     return rt;
 17695   004B64  51E1               	movf	ECU_LCD_4Bit_Send_Command@rt& (0+255),w,b
 17696   004B66                     
 17697                           ; BSR set to: 0
 17698   004B66  0012               	return		;funcret
 17699   004B68                     __end_of_ECU_LCD_4Bit_Send_Command:
 17700                           	callstack 0
 17701                           
 17702 ;; *************** function _ECU_LCD_4Bit_Send_char_Data *****************
 17703 ;; Defined at:
 17704 ;;		line 72 in file "ECU_layer/LCD/LCD.c"
 17705 ;; Parameters:    Size  Location     Type
 17706 ;;  _LCD            1   10[BANK0 ] PTR const struct .
 17707 ;;		 -> LCD_1(6), 
 17708 ;;  _Data           1   11[BANK0 ] unsigned char 
 17709 ;; Auto vars:     Size  Location     Type
 17710 ;;  rt              1   12[BANK0 ] unsigned char 
 17711 ;; Return value:  Size  Location     Type
 17712 ;;                  1    wreg      unsigned char 
 17713 ;; Registers used:
 17714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17715 ;; Tracked objects:
 17716 ;;		On entry : 0/0
 17717 ;;		On exit  : 0/0
 17718 ;;		Unchanged: 0/0
 17719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17720 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17721 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17723 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17724 ;;Total ram usage:        3 bytes
 17725 ;; Hardware stack levels used: 1
 17726 ;; Hardware stack levels required when called: 11
 17727 ;; This function calls:
 17728 ;;		_LCD_4Bits_Send_Enable_Signal
 17729 ;;		_LCD_Send_4Bits
 17730 ;;		_gpio_pin_write_logic
 17731 ;; This function is called by:
 17732 ;;		_ECU_LCD_4Bit_Send_String_Data_Postition
 17733 ;;		_update_display
 17734 ;;		_ECU_LCD_4Bit_Send_char_Data_Position
 17735 ;;		_ECU_LCD_4Bit_Send_String_Data
 17736 ;;		_ECU_LCD_4Bit_Send_Custom_Char
 17737 ;; This function uses a non-reentrant model
 17738 ;;
 17739                           
 17740                           	psect	text87
 17741   004B68                     __ptext87:
 17742                           	callstack 0
 17743   004B68                     _ECU_LCD_4Bit_Send_char_Data:
 17744                           	callstack 18
 17745   004B68                     
 17746                           ;ECU_layer/LCD/LCD.c: 74:     if(((void*)0) == _LCD){
 17747   004B68  0100               	movlb	0	; () banked
 17748   004B6A  51DF               	movf	ECU_LCD_4Bit_Send_char_Data@_LCD& (0+255),w,b
 17749   004B6C  A4D8               	btfss	status,2,c
 17750   004B6E  EFBB  F025         	goto	u12401
 17751   004B72  EFBD  F025         	goto	u12400
 17752   004B76                     u12401:
 17753   004B76  EFC0  F025         	goto	l13794
 17754   004B7A                     u12400:
 17755   004B7A                     
 17756                           ; BSR set to: 0
 17757                           ;ECU_layer/LCD/LCD.c: 75:         rt = (STD_ReturnType)0x00;
 17758   004B7A  6BE1               	clrf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),b
 17759                           
 17760                           ;ECU_layer/LCD/LCD.c: 76:     }
 17761   004B7C  EFE6  F025         	goto	l13796
 17762   004B80                     l13794:
 17763                           
 17764                           ; BSR set to: 0
 17765                           ;ECU_layer/LCD/LCD.c: 78:         rt = gpio_pin_write_logic(&(_LCD->LCD_RS), GPIO_Pin_Lo
      +                          gic_HIGH);
 17766   004B80  C0DF  F0D5         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,gpio_pin_write_logic@pinConfig
 17767   004B84  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 17768   004B86  0E01               	movlw	1
 17769   004B88  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 17770   004B8A  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
 17771   004B8E  0100               	movlb	0	; () banked
 17772   004B90  6FE1               	movwf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),b
 17773                           
 17774                           ;ECU_layer/LCD/LCD.c: 80:         rt = LCD_Send_4Bits(_LCD, _Data >> 4);
 17775   004B92  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,LCD_Send_4Bits@_LCD
 17776   004B96  39E0               	swapf	ECU_LCD_4Bit_Send_char_Data@_Data& (0+255),w,b
 17777   004B98  0B0F               	andlw	15
 17778   004B9A  6FDC               	movwf	LCD_Send_4Bits@_Data& (0+255),b
 17779   004B9C  EC4D  F021         	call	_LCD_Send_4Bits	;wreg free
 17780   004BA0  0100               	movlb	0	; () banked
 17781   004BA2  6FE1               	movwf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),b
 17782                           
 17783                           ;ECU_layer/LCD/LCD.c: 82:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 17784   004BA4  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,LCD_4Bits_Send_Enable_Signal@_LCD
 17785   004BA8  EC64  F027         	call	_LCD_4Bits_Send_Enable_Signal	;wreg free
 17786   004BAC  0100               	movlb	0	; () banked
 17787   004BAE  6FE1               	movwf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),b
 17788                           
 17789                           ;ECU_layer/LCD/LCD.c: 84:         rt = LCD_Send_4Bits(_LCD, _Data);
 17790   004BB0  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,LCD_Send_4Bits@_LCD
 17791   004BB4  C0E0  F0DC         	movff	ECU_LCD_4Bit_Send_char_Data@_Data,LCD_Send_4Bits@_Data
 17792   004BB8  EC4D  F021         	call	_LCD_Send_4Bits	;wreg free
 17793   004BBC  0100               	movlb	0	; () banked
 17794   004BBE  6FE1               	movwf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),b
 17795                           
 17796                           ;ECU_layer/LCD/LCD.c: 86:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 17797   004BC0  C0DF  F0DB         	movff	ECU_LCD_4Bit_Send_char_Data@_LCD,LCD_4Bits_Send_Enable_Signal@_LCD
 17798   004BC4  EC64  F027         	call	_LCD_4Bits_Send_Enable_Signal	;wreg free
 17799   004BC8  0100               	movlb	0	; () banked
 17800   004BCA  6FE1               	movwf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),b
 17801   004BCC                     l13796:
 17802                           
 17803                           ; BSR set to: 0
 17804                           ;ECU_layer/LCD/LCD.c: 89:     return rt;
 17805   004BCC  51E1               	movf	ECU_LCD_4Bit_Send_char_Data@rt& (0+255),w,b
 17806   004BCE                     
 17807                           ; BSR set to: 0
 17808   004BCE  0012               	return		;funcret
 17809   004BD0                     __end_of_ECU_LCD_4Bit_Send_char_Data:
 17810                           	callstack 0
 17811                           
 17812 ;; *************** function _LCD_Send_4Bits *****************
 17813 ;; Defined at:
 17814 ;;		line 341 in file "ECU_layer/LCD/LCD.c"
 17815 ;; Parameters:    Size  Location     Type
 17816 ;;  _LCD            1    6[BANK0 ] PTR const struct .
 17817 ;;		 -> LCD_1(6), 
 17818 ;;  _Data           1    7[BANK0 ] unsigned char 
 17819 ;; Auto vars:     Size  Location     Type
 17820 ;;  rt              1    9[BANK0 ] unsigned char 
 17821 ;; Return value:  Size  Location     Type
 17822 ;;                  1    wreg      unsigned char 
 17823 ;; Registers used:
 17824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17825 ;; Tracked objects:
 17826 ;;		On entry : 0/0
 17827 ;;		On exit  : 0/0
 17828 ;;		Unchanged: 0/0
 17829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17830 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17831 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17832 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17833 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17834 ;;Total ram usage:        4 bytes
 17835 ;; Hardware stack levels used: 1
 17836 ;; Hardware stack levels required when called: 10
 17837 ;; This function calls:
 17838 ;;		_gpio_pin_write_logic
 17839 ;; This function is called by:
 17840 ;;		_ECU_LCD_4Bit_Send_Command
 17841 ;;		_ECU_LCD_4Bit_Send_char_Data
 17842 ;; This function uses a non-reentrant model
 17843 ;;
 17844                           
 17845                           	psect	text88
 17846   00429A                     __ptext88:
 17847                           	callstack 0
 17848   00429A                     _LCD_Send_4Bits:
 17849                           	callstack 17
 17850   00429A                     
 17851                           ;ECU_layer/LCD/LCD.c: 343:      if(((void*)0) == _LCD ){
 17852   00429A  0100               	movlb	0	; () banked
 17853   00429C  51DB               	movf	LCD_Send_4Bits@_LCD& (0+255),w,b
 17854   00429E  A4D8               	btfss	status,2,c
 17855   0042A0  EF54  F021         	goto	u11491
 17856   0042A4  EF56  F021         	goto	u11490
 17857   0042A8                     u11491:
 17858   0042A8  EF59  F021         	goto	l13168
 17859   0042AC                     u11490:
 17860   0042AC                     
 17861                           ; BSR set to: 0
 17862                           ;ECU_layer/LCD/LCD.c: 344:         rt = (STD_ReturnType)0x00;
 17863   0042AC  6BDE               	clrf	LCD_Send_4Bits@rt& (0+255),b
 17864                           
 17865                           ;ECU_layer/LCD/LCD.c: 345:     }
 17866   0042AE  EF96  F021         	goto	l13170
 17867   0042B2                     l13168:
 17868                           
 17869                           ; BSR set to: 0
 17870                           ;ECU_layer/LCD/LCD.c: 347:         rt = gpio_pin_write_logic(&(_LCD->DataPins[0]), (_Dat
      +                          a >> 0) & (uint8)0x01);
 17871   0042B2  C0DB  F0DD         	movff	LCD_Send_4Bits@_LCD,??_LCD_Send_4Bits
 17872   0042B6  0E02               	movlw	2
 17873   0042B8  27DD               	addwf	??_LCD_Send_4Bits& (0+255),f,b
 17874   0042BA  C0DD  F0D5         	movff	??_LCD_Send_4Bits,gpio_pin_write_logic@pinConfig
 17875   0042BE  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 17876   0042C0  51DC               	movf	LCD_Send_4Bits@_Data& (0+255),w,b
 17877   0042C2  0B01               	andlw	1
 17878   0042C4  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 17879   0042C6  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
 17880   0042CA  0100               	movlb	0	; () banked
 17881   0042CC  6FDE               	movwf	LCD_Send_4Bits@rt& (0+255),b
 17882                           
 17883                           ;ECU_layer/LCD/LCD.c: 348:         rt = gpio_pin_write_logic(&(_LCD->DataPins[1]), (_Dat
      +                          a >> 1) & (uint8)0x01);
 17884   0042CE  C0DB  F0DD         	movff	LCD_Send_4Bits@_LCD,??_LCD_Send_4Bits
 17885   0042D2  0E03               	movlw	3
 17886   0042D4  27DD               	addwf	??_LCD_Send_4Bits& (0+255),f,b
 17887   0042D6  C0DD  F0D5         	movff	??_LCD_Send_4Bits,gpio_pin_write_logic@pinConfig
 17888   0042DA  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 17889   0042DC  90D8               	bcf	status,0,c
 17890   0042DE  31DC               	rrcf	LCD_Send_4Bits@_Data& (0+255),w,b
 17891   0042E0  0B01               	andlw	1
 17892   0042E2  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 17893   0042E4  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
 17894   0042E8  0100               	movlb	0	; () banked
 17895   0042EA  6FDE               	movwf	LCD_Send_4Bits@rt& (0+255),b
 17896                           
 17897                           ;ECU_layer/LCD/LCD.c: 349:         rt = gpio_pin_write_logic(&(_LCD->DataPins[2]), (_Dat
      +                          a >> 2) & (uint8)0x01);
 17898   0042EC  C0DB  F0DD         	movff	LCD_Send_4Bits@_LCD,??_LCD_Send_4Bits
 17899   0042F0  0E04               	movlw	4
 17900   0042F2  27DD               	addwf	??_LCD_Send_4Bits& (0+255),f,b
 17901   0042F4  C0DD  F0D5         	movff	??_LCD_Send_4Bits,gpio_pin_write_logic@pinConfig
 17902   0042F8  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 17903   0042FA  41DC               	rrncf	LCD_Send_4Bits@_Data& (0+255),w,b
 17904   0042FC  42E8               	rrncf	wreg,f,c
 17905   0042FE  0B3F               	andlw	63
 17906   004300  0B01               	andlw	1
 17907   004302  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 17908   004304  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
 17909   004308  0100               	movlb	0	; () banked
 17910   00430A  6FDE               	movwf	LCD_Send_4Bits@rt& (0+255),b
 17911                           
 17912                           ;ECU_layer/LCD/LCD.c: 350:         rt = gpio_pin_write_logic(&(_LCD->DataPins[3]), (_Dat
      +                          a >> 3) & (uint8)0x01);
 17913   00430C  C0DB  F0DD         	movff	LCD_Send_4Bits@_LCD,??_LCD_Send_4Bits
 17914   004310  0E05               	movlw	5
 17915   004312  27DD               	addwf	??_LCD_Send_4Bits& (0+255),f,b
 17916   004314  C0DD  F0D5         	movff	??_LCD_Send_4Bits,gpio_pin_write_logic@pinConfig
 17917   004318  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 17918   00431A  39DC               	swapf	LCD_Send_4Bits@_Data& (0+255),w,b
 17919   00431C  46E8               	rlncf	wreg,f,c
 17920   00431E  0B1F               	andlw	31
 17921   004320  0B01               	andlw	1
 17922   004322  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 17923   004324  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
 17924   004328  0100               	movlb	0	; () banked
 17925   00432A  6FDE               	movwf	LCD_Send_4Bits@rt& (0+255),b
 17926   00432C                     l13170:
 17927                           
 17928                           ; BSR set to: 0
 17929                           ;ECU_layer/LCD/LCD.c: 352:      return rt;
 17930   00432C  51DE               	movf	LCD_Send_4Bits@rt& (0+255),w,b
 17931   00432E                     
 17932                           ; BSR set to: 0
 17933   00432E  0012               	return		;funcret
 17934   004330                     __end_of_LCD_Send_4Bits:
 17935                           	callstack 0
 17936                           
 17937 ;; *************** function _LCD_4Bits_Send_Enable_Signal *****************
 17938 ;; Defined at:
 17939 ;;		line 356 in file "ECU_layer/LCD/LCD.c"
 17940 ;; Parameters:    Size  Location     Type
 17941 ;;  _LCD            1    6[BANK0 ] PTR const struct .
 17942 ;;		 -> LCD_1(6), 
 17943 ;; Auto vars:     Size  Location     Type
 17944 ;;  rt              1    8[BANK0 ] unsigned char 
 17945 ;; Return value:  Size  Location     Type
 17946 ;;                  1    wreg      unsigned char 
 17947 ;; Registers used:
 17948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17949 ;; Tracked objects:
 17950 ;;		On entry : 0/0
 17951 ;;		On exit  : 0/0
 17952 ;;		Unchanged: 0/0
 17953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17954 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17955 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17956 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17957 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17958 ;;Total ram usage:        3 bytes
 17959 ;; Hardware stack levels used: 1
 17960 ;; Hardware stack levels required when called: 10
 17961 ;; This function calls:
 17962 ;;		_gpio_pin_write_logic
 17963 ;; This function is called by:
 17964 ;;		_ECU_LCD_4Bit_Send_Command
 17965 ;;		_ECU_LCD_4Bit_Send_char_Data
 17966 ;; This function uses a non-reentrant model
 17967 ;;
 17968                           
 17969                           	psect	text89
 17970   004EC8                     __ptext89:
 17971                           	callstack 0
 17972   004EC8                     _LCD_4Bits_Send_Enable_Signal:
 17973                           	callstack 17
 17974   004EC8                     
 17975                           ;ECU_layer/LCD/LCD.c: 358:      if(((void*)0) == _LCD ){
 17976   004EC8  0100               	movlb	0	; () banked
 17977   004ECA  51DB               	movf	LCD_4Bits_Send_Enable_Signal@_LCD& (0+255),w,b
 17978   004ECC  A4D8               	btfss	status,2,c
 17979   004ECE  EF6B  F027         	goto	u11501
 17980   004ED2  EF6D  F027         	goto	u11500
 17981   004ED6                     u11501:
 17982   004ED6  EF70  F027         	goto	l13180
 17983   004EDA                     u11500:
 17984   004EDA                     
 17985                           ; BSR set to: 0
 17986                           ;ECU_layer/LCD/LCD.c: 359:         rt = (STD_ReturnType)0x00;
 17987   004EDA  6BDD               	clrf	LCD_4Bits_Send_Enable_Signal@rt& (0+255),b
 17988                           
 17989                           ;ECU_layer/LCD/LCD.c: 360:     }
 17990   004EDC  EF8D  F027         	goto	l13186
 17991   004EE0                     l13180:
 17992                           
 17993                           ; BSR set to: 0
 17994   004EE0  C0DB  F0DC         	movff	LCD_4Bits_Send_Enable_Signal@_LCD,??_LCD_4Bits_Send_Enable_Signal
 17995   004EE4  0E01               	movlw	1
 17996   004EE6  27DC               	addwf	??_LCD_4Bits_Send_Enable_Signal& (0+255),f,b
 17997   004EE8  C0DC  F0D5         	movff	??_LCD_4Bits_Send_Enable_Signal,gpio_pin_write_logic@pinConfig
 17998   004EEC  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 17999   004EEE  0E01               	movlw	1
 18000   004EF0  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 18001   004EF2  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
 18002   004EF6                     
 18003                           ;ECU_layer/LCD/LCD.c: 363:         _delay((unsigned long)((5)*(8000000UL/4000000.0)));
 18004   004EF6  0E03               	movlw	3
 18005   004EF8                     u14617:
 18006   004EF8  2EE8               	decfsz	wreg,f,c
 18007   004EFA  D7FE               	bra	u14617
 18008   004EFC  0000               	nop	
 18009   004EFE                     
 18010                           ;ECU_layer/LCD/LCD.c: 364:         rt = gpio_pin_write_logic(&(_LCD->LCD_E), GPIO_Pin_Lo
      +                          gic_LOW);;
 18011   004EFE  C0DB  F0DC         	movff	LCD_4Bits_Send_Enable_Signal@_LCD,??_LCD_4Bits_Send_Enable_Signal
 18012   004F02  0E01               	movlw	1
 18013   004F04  0100               	movlb	0	; () banked
 18014   004F06  27DC               	addwf	??_LCD_4Bits_Send_Enable_Signal& (0+255),f,b
 18015   004F08  C0DC  F0D5         	movff	??_LCD_4Bits_Send_Enable_Signal,gpio_pin_write_logic@pinConfig
 18016   004F0C  6BD6               	clrf	(gpio_pin_write_logic@pinConfig+1)& (0+255),b
 18017   004F0E  0E00               	movlw	0
 18018   004F10  6FD7               	movwf	gpio_pin_write_logic@logic& (0+255),b
 18019   004F12  EC39  F015         	call	_gpio_pin_write_logic	;wreg free
 18020   004F16  0100               	movlb	0	; () banked
 18021   004F18  6FDD               	movwf	LCD_4Bits_Send_Enable_Signal@rt& (0+255),b
 18022   004F1A                     l13186:
 18023                           
 18024                           ; BSR set to: 0
 18025                           ;ECU_layer/LCD/LCD.c: 366:      return rt;
 18026   004F1A  51DD               	movf	LCD_4Bits_Send_Enable_Signal@rt& (0+255),w,b
 18027   004F1C                     
 18028                           ; BSR set to: 0
 18029   004F1C  0012               	return		;funcret
 18030   004F1E                     __end_of_LCD_4Bits_Send_Enable_Signal:
 18031                           	callstack 0
 18032                           
 18033 ;; *************** function _gpio_pin_write_logic *****************
 18034 ;; Defined at:
 18035 ;;		line 93 in file "MCAL_layer/GPIO/hal_gpio.c"
 18036 ;; Parameters:    Size  Location     Type
 18037 ;;  pinConfig       2    0[BANK0 ] PTR const struct .
 18038 ;;		 -> Buzz(1), keypad_1$KeypadRowsConfig(4), keypad_1(8), LCD_1$DataPins(4), 
 18039 ;;		 -> LCD_1(6), pinRC7(1), pinRC6(1), CCP1_obj$CCPx_PIN$port(1), 
 18040 ;;		 -> ECU_Relay_turnOFF@relay_t(1), ECU_Relay_turnON@relay_t(1), ECU_Relay_Initialize@relay_t(1), LED_turnOFF@LED(1), 
 18041 ;;		 -> LED_turnON@LED(1), 
 18042 ;;  logic           1    2[BANK0 ] enum E3381
 18043 ;; Auto vars:     Size  Location     Type
 18044 ;;  rt              1    5[BANK0 ] unsigned char 
 18045 ;; Return value:  Size  Location     Type
 18046 ;;                  1    wreg      unsigned char 
 18047 ;; Registers used:
 18048 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18049 ;; Tracked objects:
 18050 ;;		On entry : 0/0
 18051 ;;		On exit  : 0/0
 18052 ;;		Unchanged: 0/0
 18053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18054 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18055 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18056 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18057 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18058 ;;Total ram usage:        6 bytes
 18059 ;; Hardware stack levels used: 1
 18060 ;; Hardware stack levels required when called: 9
 18061 ;; This function calls:
 18062 ;;		Nothing
 18063 ;; This function is called by:
 18064 ;;		_keyPad_Read
 18065 ;;		_ECU_LCD_4Bit_Send_Command
 18066 ;;		_ECU_LCD_4Bit_Send_char_Data
 18067 ;;		_LCD_Send_4Bits
 18068 ;;		_LCD_4Bits_Send_Enable_Signal
 18069 ;;		_gpio_pin_initialize
 18070 ;;		_main
 18071 ;;		_ECU_DC_Motor_move_right
 18072 ;;		_ECU_DC_Motor_move_left
 18073 ;;		_ECU_DC_Motor_stop
 18074 ;;		_ECU_LCD_8Bit_Send_Command
 18075 ;;		_ECU_LCD_8Bit_Send_char_Data
 18076 ;;		_LCD_8Bits_Send_Enable_Signal
 18077 ;;		_LED_turnON
 18078 ;;		_LED_turnOFF
 18079 ;;		_ECU_Relay_turnON
 18080 ;;		_ECU_Relay_turnOFF
 18081 ;;		_ECU_Segment_write
 18082 ;;		_ECU_STEPPER_Motor_move_left
 18083 ;;		_ECU_STEPPER_Motor_move_right
 18084 ;;		_ECU_STEPPER_Motor_stop
 18085 ;; This function uses a non-reentrant model
 18086 ;;
 18087                           
 18088                           	psect	text90
 18089   002A72                     __ptext90:
 18090                           	callstack 0
 18091   002A72                     _gpio_pin_write_logic:
 18092                           	callstack 18
 18093   002A72                     
 18094                           ;MCAL_layer/GPIO/hal_gpio.c: 94:     STD_ReturnType rt = (STD_ReturnType)0x01;
 18095   002A72  0E01               	movlw	1
 18096   002A74  0100               	movlb	0	; () banked
 18097   002A76  6FDA               	movwf	gpio_pin_write_logic@rt& (0+255),b
 18098   002A78                     
 18099                           ; BSR set to: 0
 18100                           ;MCAL_layer/GPIO/hal_gpio.c: 95:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 -
      +                          1 ){
 18101   002A78  51D5               	movf	gpio_pin_write_logic@pinConfig& (0+255),w,b
 18102   002A7A  11D6               	iorwf	(gpio_pin_write_logic@pinConfig+1)& (0+255),w,b
 18103   002A7C  B4D8               	btfsc	status,2,c
 18104   002A7E  EF43  F015         	goto	u11231
 18105   002A82  EF45  F015         	goto	u11230
 18106   002A86                     u11231:
 18107   002A86  EF56  F015         	goto	l811
 18108   002A8A                     u11230:
 18109   002A8A                     
 18110                           ; BSR set to: 0
 18111   002A8A  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18112   002A8E  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18113   002A92  30DF               	rrcf	223,w,c
 18114   002A94  32E8               	rrcf	wreg,f,c
 18115   002A96  32E8               	rrcf	wreg,f,c
 18116   002A98  0B07               	andlw	7
 18117   002A9A  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 18118   002A9C  0E07               	movlw	7
 18119   002A9E  65D8               	cpfsgt	??_gpio_pin_write_logic& (0+255),b
 18120   002AA0  EF54  F015         	goto	u11241
 18121   002AA4  EF56  F015         	goto	u11240
 18122   002AA8                     u11241:
 18123   002AA8  EF86  F016         	goto	l13104
 18124   002AAC                     u11240:
 18125   002AAC                     l811:
 18126                           
 18127                           ; BSR set to: 0
 18128                           ;MCAL_layer/GPIO/hal_gpio.c: 96:         rt = (STD_ReturnType)0x00;
 18129   002AAC  6BDA               	clrf	gpio_pin_write_logic@rt& (0+255),b
 18130                           
 18131                           ;MCAL_layer/GPIO/hal_gpio.c: 97:     }
 18132   002AAE  EF9B  F016         	goto	l13106
 18133   002AB2                     l13080:
 18134                           
 18135                           ; BSR set to: 0
 18136                           ;MCAL_layer/GPIO/hal_gpio.c: 103:                         LATA &= ~(1 << pinConfig ->pin
      +                          );break;
 18137   002AB2  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18138   002AB6  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18139   002ABA  30DF               	rrcf	223,w,c
 18140   002ABC  32E8               	rrcf	wreg,f,c
 18141   002ABE  32E8               	rrcf	wreg,f,c
 18142   002AC0  0B07               	andlw	7
 18143   002AC2  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 18144   002AC4  0E01               	movlw	1
 18145   002AC6  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 18146   002AC8  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 18147   002ACA  EF69  F015         	goto	u11254
 18148   002ACE                     u11255:
 18149   002ACE  90D8               	bcf	status,0,c
 18150   002AD0  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 18151   002AD2                     u11254:
 18152   002AD2  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 18153   002AD4  EF67  F015         	goto	u11255
 18154   002AD8  0100               	movlb	0	; () banked
 18155   002ADA  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 18156   002ADC  0AFF               	xorlw	255
 18157   002ADE  1689               	andwf	137,f,c	;volatile
 18158   002AE0  EF9B  F016         	goto	l13106
 18159   002AE4                     l13082:
 18160                           
 18161                           ; BSR set to: 0
 18162                           ;MCAL_layer/GPIO/hal_gpio.c: 105:                         LATB &= ~(1 << pinConfig ->pin
      +                          );break;
 18163   002AE4  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18164   002AE8  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18165   002AEC  30DF               	rrcf	223,w,c
 18166   002AEE  32E8               	rrcf	wreg,f,c
 18167   002AF0  32E8               	rrcf	wreg,f,c
 18168   002AF2  0B07               	andlw	7
 18169   002AF4  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 18170   002AF6  0E01               	movlw	1
 18171   002AF8  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 18172   002AFA  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 18173   002AFC  EF82  F015         	goto	u11264
 18174   002B00                     u11265:
 18175   002B00  90D8               	bcf	status,0,c
 18176   002B02  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 18177   002B04                     u11264:
 18178   002B04  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 18179   002B06  EF80  F015         	goto	u11265
 18180   002B0A  0100               	movlb	0	; () banked
 18181   002B0C  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 18182   002B0E  0AFF               	xorlw	255
 18183   002B10  168A               	andwf	138,f,c	;volatile
 18184   002B12  EF9B  F016         	goto	l13106
 18185   002B16                     l13084:
 18186                           
 18187                           ; BSR set to: 0
 18188                           ;MCAL_layer/GPIO/hal_gpio.c: 107:                         LATC &= ~(1 << pinConfig ->pin
      +                          );break;
 18189   002B16  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18190   002B1A  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18191   002B1E  30DF               	rrcf	223,w,c
 18192   002B20  32E8               	rrcf	wreg,f,c
 18193   002B22  32E8               	rrcf	wreg,f,c
 18194   002B24  0B07               	andlw	7
 18195   002B26  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 18196   002B28  0E01               	movlw	1
 18197   002B2A  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 18198   002B2C  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 18199   002B2E  EF9B  F015         	goto	u11274
 18200   002B32                     u11275:
 18201   002B32  90D8               	bcf	status,0,c
 18202   002B34  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 18203   002B36                     u11274:
 18204   002B36  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 18205   002B38  EF99  F015         	goto	u11275
 18206   002B3C  0100               	movlb	0	; () banked
 18207   002B3E  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 18208   002B40  0AFF               	xorlw	255
 18209   002B42  168B               	andwf	139,f,c	;volatile
 18210   002B44  EF9B  F016         	goto	l13106
 18211   002B48                     l13086:
 18212                           
 18213                           ; BSR set to: 0
 18214                           ;MCAL_layer/GPIO/hal_gpio.c: 109:                         LATD &= ~(1 << pinConfig ->pin
      +                          );break;
 18215   002B48  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18216   002B4C  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18217   002B50  30DF               	rrcf	223,w,c
 18218   002B52  32E8               	rrcf	wreg,f,c
 18219   002B54  32E8               	rrcf	wreg,f,c
 18220   002B56  0B07               	andlw	7
 18221   002B58  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 18222   002B5A  0E01               	movlw	1
 18223   002B5C  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 18224   002B5E  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 18225   002B60  EFB4  F015         	goto	u11284
 18226   002B64                     u11285:
 18227   002B64  90D8               	bcf	status,0,c
 18228   002B66  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 18229   002B68                     u11284:
 18230   002B68  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 18231   002B6A  EFB2  F015         	goto	u11285
 18232   002B6E  0100               	movlb	0	; () banked
 18233   002B70  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 18234   002B72  0AFF               	xorlw	255
 18235   002B74  168C               	andwf	140,f,c	;volatile
 18236   002B76  EF9B  F016         	goto	l13106
 18237   002B7A                     l13088:
 18238                           
 18239                           ; BSR set to: 0
 18240                           ;MCAL_layer/GPIO/hal_gpio.c: 111:                         LATE &= ~(1 << pinConfig ->pin
      +                          );break;
 18241   002B7A  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18242   002B7E  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18243   002B82  30DF               	rrcf	223,w,c
 18244   002B84  32E8               	rrcf	wreg,f,c
 18245   002B86  32E8               	rrcf	wreg,f,c
 18246   002B88  0B07               	andlw	7
 18247   002B8A  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 18248   002B8C  0E01               	movlw	1
 18249   002B8E  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 18250   002B90  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 18251   002B92  EFCD  F015         	goto	u11294
 18252   002B96                     u11295:
 18253   002B96  90D8               	bcf	status,0,c
 18254   002B98  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 18255   002B9A                     u11294:
 18256   002B9A  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 18257   002B9C  EFCB  F015         	goto	u11295
 18258   002BA0  0100               	movlb	0	; () banked
 18259   002BA2  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 18260   002BA4  0AFF               	xorlw	255
 18261   002BA6  168D               	andwf	141,f,c	;volatile
 18262   002BA8  EF9B  F016         	goto	l13106
 18263   002BAC                     l13090:
 18264                           
 18265                           ; BSR set to: 0
 18266   002BAC  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18267   002BB0  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18268   002BB4  50DF               	movf	223,w,c
 18269   002BB6  0B07               	andlw	7
 18270                           
 18271                           ; Switch size 1, requested type "simple"
 18272                           ; Number of cases is 5, Range of values is 0 to 4
 18273                           ; switch strategies available:
 18274                           ; Name         Instructions Cycles
 18275                           ; simple_byte           16     9 (average)
 18276                           ;	Chosen strategy is simple_byte
 18277   002BB8  0A00               	xorlw	0	; case 0
 18278   002BBA  B4D8               	btfsc	status,2,c
 18279   002BBC  EF59  F015         	goto	l13080
 18280   002BC0  0A01               	xorlw	1	; case 1
 18281   002BC2  B4D8               	btfsc	status,2,c
 18282   002BC4  EF72  F015         	goto	l13082
 18283   002BC8  0A03               	xorlw	3	; case 2
 18284   002BCA  B4D8               	btfsc	status,2,c
 18285   002BCC  EF8B  F015         	goto	l13084
 18286   002BD0  0A01               	xorlw	1	; case 3
 18287   002BD2  B4D8               	btfsc	status,2,c
 18288   002BD4  EFA4  F015         	goto	l13086
 18289   002BD8  0A07               	xorlw	7	; case 4
 18290   002BDA  B4D8               	btfsc	status,2,c
 18291   002BDC  EFBD  F015         	goto	l13088
 18292   002BE0  EF56  F015         	goto	l811
 18293   002BE4                     l13092:
 18294                           
 18295                           ; BSR set to: 0
 18296                           ;MCAL_layer/GPIO/hal_gpio.c: 118:                         LATA |= (1 << pinConfig ->pin)
      +                          ;break;
 18297   002BE4  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18298   002BE8  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18299   002BEC  30DF               	rrcf	223,w,c
 18300   002BEE  32E8               	rrcf	wreg,f,c
 18301   002BF0  32E8               	rrcf	wreg,f,c
 18302   002BF2  0B07               	andlw	7
 18303   002BF4  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 18304   002BF6  0E01               	movlw	1
 18305   002BF8  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 18306   002BFA  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 18307   002BFC  EF02  F016         	goto	u11304
 18308   002C00                     u11305:
 18309   002C00  90D8               	bcf	status,0,c
 18310   002C02  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 18311   002C04                     u11304:
 18312   002C04  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 18313   002C06  EF00  F016         	goto	u11305
 18314   002C0A  0100               	movlb	0	; () banked
 18315   002C0C  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 18316   002C0E  1289               	iorwf	137,f,c	;volatile
 18317   002C10  EF9B  F016         	goto	l13106
 18318   002C14                     l13094:
 18319                           
 18320                           ; BSR set to: 0
 18321                           ;MCAL_layer/GPIO/hal_gpio.c: 120:                         LATB |= (1 << pinConfig ->pin)
      +                          ;break;
 18322   002C14  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18323   002C18  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18324   002C1C  30DF               	rrcf	223,w,c
 18325   002C1E  32E8               	rrcf	wreg,f,c
 18326   002C20  32E8               	rrcf	wreg,f,c
 18327   002C22  0B07               	andlw	7
 18328   002C24  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 18329   002C26  0E01               	movlw	1
 18330   002C28  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 18331   002C2A  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 18332   002C2C  EF1A  F016         	goto	u11314
 18333   002C30                     u11315:
 18334   002C30  90D8               	bcf	status,0,c
 18335   002C32  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 18336   002C34                     u11314:
 18337   002C34  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 18338   002C36  EF18  F016         	goto	u11315
 18339   002C3A  0100               	movlb	0	; () banked
 18340   002C3C  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 18341   002C3E  128A               	iorwf	138,f,c	;volatile
 18342   002C40  EF9B  F016         	goto	l13106
 18343   002C44                     l13096:
 18344                           
 18345                           ; BSR set to: 0
 18346                           ;MCAL_layer/GPIO/hal_gpio.c: 122:                         LATC |= (1 << pinConfig ->pin)
      +                          ;break;
 18347   002C44  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18348   002C48  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18349   002C4C  30DF               	rrcf	223,w,c
 18350   002C4E  32E8               	rrcf	wreg,f,c
 18351   002C50  32E8               	rrcf	wreg,f,c
 18352   002C52  0B07               	andlw	7
 18353   002C54  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 18354   002C56  0E01               	movlw	1
 18355   002C58  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 18356   002C5A  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 18357   002C5C  EF32  F016         	goto	u11324
 18358   002C60                     u11325:
 18359   002C60  90D8               	bcf	status,0,c
 18360   002C62  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 18361   002C64                     u11324:
 18362   002C64  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 18363   002C66  EF30  F016         	goto	u11325
 18364   002C6A  0100               	movlb	0	; () banked
 18365   002C6C  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 18366   002C6E  128B               	iorwf	139,f,c	;volatile
 18367   002C70  EF9B  F016         	goto	l13106
 18368   002C74                     l13098:
 18369                           
 18370                           ; BSR set to: 0
 18371                           ;MCAL_layer/GPIO/hal_gpio.c: 124:                         LATD |= (1 << pinConfig ->pin)
      +                          ;break;
 18372   002C74  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18373   002C78  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18374   002C7C  30DF               	rrcf	223,w,c
 18375   002C7E  32E8               	rrcf	wreg,f,c
 18376   002C80  32E8               	rrcf	wreg,f,c
 18377   002C82  0B07               	andlw	7
 18378   002C84  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 18379   002C86  0E01               	movlw	1
 18380   002C88  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 18381   002C8A  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 18382   002C8C  EF4A  F016         	goto	u11334
 18383   002C90                     u11335:
 18384   002C90  90D8               	bcf	status,0,c
 18385   002C92  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 18386   002C94                     u11334:
 18387   002C94  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 18388   002C96  EF48  F016         	goto	u11335
 18389   002C9A  0100               	movlb	0	; () banked
 18390   002C9C  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 18391   002C9E  128C               	iorwf	140,f,c	;volatile
 18392   002CA0  EF9B  F016         	goto	l13106
 18393   002CA4                     l13100:
 18394                           
 18395                           ; BSR set to: 0
 18396                           ;MCAL_layer/GPIO/hal_gpio.c: 126:                         LATE |= (1 << pinConfig ->pin)
      +                          ;break;
 18397   002CA4  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18398   002CA8  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18399   002CAC  30DF               	rrcf	223,w,c
 18400   002CAE  32E8               	rrcf	wreg,f,c
 18401   002CB0  32E8               	rrcf	wreg,f,c
 18402   002CB2  0B07               	andlw	7
 18403   002CB4  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 18404   002CB6  0E01               	movlw	1
 18405   002CB8  6FD9               	movwf	(??_gpio_pin_write_logic+1)& (0+255),b
 18406   002CBA  2BD8               	incf	??_gpio_pin_write_logic& (0+255),f,b
 18407   002CBC  EF62  F016         	goto	u11344
 18408   002CC0                     u11345:
 18409   002CC0  90D8               	bcf	status,0,c
 18410   002CC2  37D9               	rlcf	(??_gpio_pin_write_logic+1)& (0+255),f,b
 18411   002CC4                     u11344:
 18412   002CC4  2FD8               	decfsz	??_gpio_pin_write_logic& (0+255),f,b
 18413   002CC6  EF60  F016         	goto	u11345
 18414   002CCA  0100               	movlb	0	; () banked
 18415   002CCC  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 18416   002CCE  128D               	iorwf	141,f,c	;volatile
 18417   002CD0  EF9B  F016         	goto	l13106
 18418   002CD4                     l13102:
 18419                           
 18420                           ; BSR set to: 0
 18421   002CD4  C0D5  FFD9         	movff	gpio_pin_write_logic@pinConfig,fsr2l
 18422   002CD8  C0D6  FFDA         	movff	gpio_pin_write_logic@pinConfig+1,fsr2h
 18423   002CDC  50DF               	movf	223,w,c
 18424   002CDE  0B07               	andlw	7
 18425                           
 18426                           ; Switch size 1, requested type "simple"
 18427                           ; Number of cases is 5, Range of values is 0 to 4
 18428                           ; switch strategies available:
 18429                           ; Name         Instructions Cycles
 18430                           ; simple_byte           16     9 (average)
 18431                           ;	Chosen strategy is simple_byte
 18432   002CE0  0A00               	xorlw	0	; case 0
 18433   002CE2  B4D8               	btfsc	status,2,c
 18434   002CE4  EFF2  F015         	goto	l13092
 18435   002CE8  0A01               	xorlw	1	; case 1
 18436   002CEA  B4D8               	btfsc	status,2,c
 18437   002CEC  EF0A  F016         	goto	l13094
 18438   002CF0  0A03               	xorlw	3	; case 2
 18439   002CF2  B4D8               	btfsc	status,2,c
 18440   002CF4  EF22  F016         	goto	l13096
 18441   002CF8  0A01               	xorlw	1	; case 3
 18442   002CFA  B4D8               	btfsc	status,2,c
 18443   002CFC  EF3A  F016         	goto	l13098
 18444   002D00  0A07               	xorlw	7	; case 4
 18445   002D02  B4D8               	btfsc	status,2,c
 18446   002D04  EF52  F016         	goto	l13100
 18447   002D08  EF56  F015         	goto	l811
 18448   002D0C                     l13104:
 18449                           
 18450                           ; BSR set to: 0
 18451   002D0C  51D7               	movf	gpio_pin_write_logic@logic& (0+255),w,b
 18452   002D0E  6FD8               	movwf	??_gpio_pin_write_logic& (0+255),b
 18453   002D10  6BD9               	clrf	(??_gpio_pin_write_logic+1)& (0+255),b
 18454                           
 18455                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18456                           ; Switch size 1, requested type "simple"
 18457                           ; Number of cases is 1, Range of values is 0 to 0
 18458                           ; switch strategies available:
 18459                           ; Name         Instructions Cycles
 18460                           ; simple_byte            4     3 (average)
 18461                           ;	Chosen strategy is simple_byte
 18462   002D12  51D9               	movf	(??_gpio_pin_write_logic+1)& (0+255),w,b
 18463   002D14  0A00               	xorlw	0	; case 0
 18464   002D16  B4D8               	btfsc	status,2,c
 18465   002D18  EF90  F016         	goto	l15874
 18466   002D1C  EF56  F015         	goto	l811
 18467   002D20                     l15874:
 18468                           
 18469                           ; BSR set to: 0
 18470                           ; Switch size 1, requested type "simple"
 18471                           ; Number of cases is 2, Range of values is 0 to 1
 18472                           ; switch strategies available:
 18473                           ; Name         Instructions Cycles
 18474                           ; simple_byte            7     4 (average)
 18475                           ;	Chosen strategy is simple_byte
 18476   002D20  51D8               	movf	??_gpio_pin_write_logic& (0+255),w,b
 18477   002D22  0A00               	xorlw	0	; case 0
 18478   002D24  B4D8               	btfsc	status,2,c
 18479   002D26  EFD6  F015         	goto	l13090
 18480   002D2A  0A01               	xorlw	1	; case 1
 18481   002D2C  B4D8               	btfsc	status,2,c
 18482   002D2E  EF6A  F016         	goto	l13102
 18483   002D32  EF56  F015         	goto	l811
 18484   002D36                     l13106:
 18485                           
 18486                           ; BSR set to: 0
 18487                           ;MCAL_layer/GPIO/hal_gpio.c: 133:     return rt;
 18488   002D36  51DA               	movf	gpio_pin_write_logic@rt& (0+255),w,b
 18489   002D38                     
 18490                           ; BSR set to: 0
 18491   002D38  0012               	return		;funcret
 18492   002D3A                     __end_of_gpio_pin_write_logic:
 18493                           	callstack 0
 18494                           
 18495 ;; *************** function _ADC_Get_Conversion_Result_Block *****************
 18496 ;; Defined at:
 18497 ;;		line 135 in file "MCAL_layer/ADC/hal_adc.c"
 18498 ;; Parameters:    Size  Location     Type
 18499 ;;  _ADC_config     2    7[BANK0 ] PTR const struct .
 18500 ;;		 -> ADC_LDR(8), 
 18501 ;;  _ADC_Channel    1    9[BANK0 ] enum E3445
 18502 ;;  _ADC_Result     1   10[BANK0 ] PTR unsigned short 
 18503 ;;		 -> LDR_Read_Value(1), 
 18504 ;; Auto vars:     Size  Location     Type
 18505 ;;  ret             1   11[BANK0 ] unsigned char 
 18506 ;; Return value:  Size  Location     Type
 18507 ;;                  1    wreg      unsigned char 
 18508 ;; Registers used:
 18509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18510 ;; Tracked objects:
 18511 ;;		On entry : 0/0
 18512 ;;		On exit  : 0/0
 18513 ;;		Unchanged: 0/0
 18514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18515 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18516 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18518 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18519 ;;Total ram usage:        5 bytes
 18520 ;; Hardware stack levels used: 1
 18521 ;; Hardware stack levels required when called: 11
 18522 ;; This function calls:
 18523 ;;		_ADC_Conversion_Result
 18524 ;;		_ADC_Select_Channel
 18525 ;;		_ADC_Start_Conversion
 18526 ;; This function is called by:
 18527 ;;		_main
 18528 ;;		_Dashboard
 18529 ;; This function uses a non-reentrant model
 18530 ;;
 18531                           
 18532                           	psect	text91
 18533   004D56                     __ptext91:
 18534                           	callstack 0
 18535   004D56                     _ADC_Get_Conversion_Result_Block:
 18536                           	callstack 18
 18537   004D56                     
 18538                           ;MCAL_layer/ADC/hal_adc.c: 138:     if(((void*)0) == _ADC_config){
 18539   004D56  0100               	movlb	0	; () banked
 18540   004D58  51DC               	movf	ADC_Get_Conversion_Result_Block@_ADC_config& (0+255),w,b
 18541   004D5A  11DD               	iorwf	(ADC_Get_Conversion_Result_Block@_ADC_config+1)& (0+255),w,b
 18542   004D5C  A4D8               	btfss	status,2,c
 18543   004D5E  EFB3  F026         	goto	u12811
 18544   004D62  EFB5  F026         	goto	u12810
 18545   004D66                     u12811:
 18546   004D66  EFB8  F026         	goto	l14150
 18547   004D6A                     u12810:
 18548   004D6A                     
 18549                           ; BSR set to: 0
 18550                           ;MCAL_layer/ADC/hal_adc.c: 139:         ret = (STD_ReturnType)0x00;
 18551   004D6A  6BE0               	clrf	ADC_Get_Conversion_Result_Block@ret& (0+255),b
 18552                           
 18553                           ;MCAL_layer/ADC/hal_adc.c: 140:     }
 18554   004D6C  EFD8  F026         	goto	l14156
 18555   004D70                     l14150:
 18556                           
 18557                           ; BSR set to: 0
 18558                           ;MCAL_layer/ADC/hal_adc.c: 143:         ADC_Select_Channel (_ADC_config, _ADC_Channel);
 18559   004D70  C0DC  F0D8         	movff	ADC_Get_Conversion_Result_Block@_ADC_config,ADC_Select_Channel@_ADC_config
 18560   004D74  C0DD  F0D9         	movff	ADC_Get_Conversion_Result_Block@_ADC_config+1,ADC_Select_Channel@_ADC_config+1
 18561   004D78  C0DE  F0DA         	movff	ADC_Get_Conversion_Result_Block@_ADC_Channel,ADC_Select_Channel@_ADC_Channel
 18562   004D7C  ECEA  F028         	call	_ADC_Select_Channel	;wreg free
 18563                           
 18564                           ;MCAL_layer/ADC/hal_adc.c: 145:         ADC_Start_Conversion (_ADC_config);
 18565   004D80  C0DC  F0D5         	movff	ADC_Get_Conversion_Result_Block@_ADC_config,ADC_Start_Conversion@_ADC_config
 18566   004D84  C0DD  F0D6         	movff	ADC_Get_Conversion_Result_Block@_ADC_config+1,ADC_Start_Conversion@_ADC_config+1
 18567   004D88  ECF6  F029         	call	_ADC_Start_Conversion	;wreg free
 18568   004D8C                     l519:
 18569   004D8C  B2C2               	btfsc	194,1,c	;volatile
 18570   004D8E  EFCB  F026         	goto	u12821
 18571   004D92  EFCD  F026         	goto	u12820
 18572   004D96                     u12821:
 18573   004D96  EFC6  F026         	goto	l519
 18574   004D9A                     u12820:
 18575   004D9A                     
 18576                           ;MCAL_layer/ADC/hal_adc.c: 149:         ADC_Conversion_Result (_ADC_config, _ADC_Result)
      +                          ;
 18577   004D9A  C0DC  F0D5         	movff	ADC_Get_Conversion_Result_Block@_ADC_config,ADC_Conversion_Result@_ADC_config
 18578   004D9E  C0DD  F0D6         	movff	ADC_Get_Conversion_Result_Block@_ADC_config+1,ADC_Conversion_Result@_ADC_config+1
 18579   004DA2  C0DF  F0D7         	movff	ADC_Get_Conversion_Result_Block@_ADC_Result,ADC_Conversion_Result@_ADC_Result
 18580   004DA6  EC0A  F020         	call	_ADC_Conversion_Result	;wreg free
 18581   004DAA                     
 18582                           ;MCAL_layer/ADC/hal_adc.c: 150:         ret = (STD_ReturnType)0x01;
 18583   004DAA  0E01               	movlw	1
 18584   004DAC  0100               	movlb	0	; () banked
 18585   004DAE  6FE0               	movwf	ADC_Get_Conversion_Result_Block@ret& (0+255),b
 18586   004DB0                     l14156:
 18587                           
 18588                           ; BSR set to: 0
 18589                           ;MCAL_layer/ADC/hal_adc.c: 152:     return ret;
 18590   004DB0  51E0               	movf	ADC_Get_Conversion_Result_Block@ret& (0+255),w,b
 18591   004DB2                     
 18592                           ; BSR set to: 0
 18593   004DB2  0012               	return		;funcret
 18594   004DB4                     __end_of_ADC_Get_Conversion_Result_Block:
 18595                           	callstack 0
 18596                           
 18597 ;; *************** function _ADC_Start_Conversion *****************
 18598 ;; Defined at:
 18599 ;;		line 88 in file "MCAL_layer/ADC/hal_adc.c"
 18600 ;; Parameters:    Size  Location     Type
 18601 ;;  _ADC_config     2    0[BANK0 ] PTR const struct .
 18602 ;;		 -> ADC_LDR(8), 
 18603 ;; Auto vars:     Size  Location     Type
 18604 ;;  ret             1    0        unsigned char 
 18605 ;; Return value:  Size  Location     Type
 18606 ;;                  1    wreg      unsigned char 
 18607 ;; Registers used:
 18608 ;;		wreg, status,2, status,0
 18609 ;; Tracked objects:
 18610 ;;		On entry : 0/0
 18611 ;;		On exit  : 0/0
 18612 ;;		Unchanged: 0/0
 18613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18614 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18617 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18618 ;;Total ram usage:        2 bytes
 18619 ;; Hardware stack levels used: 1
 18620 ;; Hardware stack levels required when called: 9
 18621 ;; This function calls:
 18622 ;;		Nothing
 18623 ;; This function is called by:
 18624 ;;		_ADC_Get_Conversion_Result_Block
 18625 ;;		_ADC_Start_Interrupt
 18626 ;; This function uses a non-reentrant model
 18627 ;;
 18628                           
 18629                           	psect	text92
 18630   0053EC                     __ptext92:
 18631                           	callstack 0
 18632   0053EC                     _ADC_Start_Conversion:
 18633                           	callstack 19
 18634   0053EC                     
 18635                           ;MCAL_layer/ADC/hal_adc.c: 90:     if(((void*)0) == _ADC_config){
 18636   0053EC  0100               	movlb	0	; () banked
 18637   0053EE  51D5               	movf	ADC_Start_Conversion@_ADC_config& (0+255),w,b
 18638   0053F0  11D6               	iorwf	(ADC_Start_Conversion@_ADC_config+1)& (0+255),w,b
 18639   0053F2  A4D8               	btfss	status,2,c
 18640   0053F4  EFFE  F029         	goto	u12431
 18641   0053F8  EF00  F02A         	goto	u12430
 18642   0053FC                     u12431:
 18643   0053FC  EF02  F02A         	goto	l498
 18644   005400                     u12430:
 18645   005400                     
 18646                           ; BSR set to: 0
 18647                           ;MCAL_layer/ADC/hal_adc.c: 92:     }
 18648   005400  EF03  F02A         	goto	l500
 18649   005404                     l498:
 18650                           
 18651                           ; BSR set to: 0
 18652                           ;MCAL_layer/ADC/hal_adc.c: 94:         (ADCON0bits.GODONE = 1);
 18653   005404  82C2               	bsf	194,1,c	;volatile
 18654   005406                     l500:
 18655                           
 18656                           ; BSR set to: 0
 18657   005406  0012               	return		;funcret
 18658   005408                     __end_of_ADC_Start_Conversion:
 18659                           	callstack 0
 18660                           
 18661 ;; *************** function _ADC_Select_Channel *****************
 18662 ;; Defined at:
 18663 ;;		line 73 in file "MCAL_layer/ADC/hal_adc.c"
 18664 ;; Parameters:    Size  Location     Type
 18665 ;;  _ADC_config     2    3[BANK0 ] PTR const struct .
 18666 ;;		 -> ADC_LDR(8), 
 18667 ;;  _ADC_Channel    1    5[BANK0 ] enum E3445
 18668 ;; Auto vars:     Size  Location     Type
 18669 ;;  ret             1    0        unsigned char 
 18670 ;; Return value:  Size  Location     Type
 18671 ;;                  1    wreg      unsigned char 
 18672 ;; Registers used:
 18673 ;;		wreg, status,2, status,0, cstack
 18674 ;; Tracked objects:
 18675 ;;		On entry : 0/0
 18676 ;;		On exit  : 0/0
 18677 ;;		Unchanged: 0/0
 18678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18679 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18681 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18682 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18683 ;;Total ram usage:        4 bytes
 18684 ;; Hardware stack levels used: 1
 18685 ;; Hardware stack levels required when called: 10
 18686 ;; This function calls:
 18687 ;;		_ADC_Select_Specific_Channel
 18688 ;; This function is called by:
 18689 ;;		_ADC_Get_Conversion_Result_Block
 18690 ;;		_ADC_Start_Interrupt
 18691 ;; This function uses a non-reentrant model
 18692 ;;
 18693                           
 18694                           	psect	text93
 18695   0051D4                     __ptext93:
 18696                           	callstack 0
 18697   0051D4                     _ADC_Select_Channel:
 18698                           	callstack 18
 18699   0051D4                     
 18700                           ;MCAL_layer/ADC/hal_adc.c: 75:     if(((void*)0) == _ADC_config){
 18701   0051D4  0100               	movlb	0	; () banked
 18702   0051D6  51D8               	movf	ADC_Select_Channel@_ADC_config& (0+255),w,b
 18703   0051D8  11D9               	iorwf	(ADC_Select_Channel@_ADC_config+1)& (0+255),w,b
 18704   0051DA  A4D8               	btfss	status,2,c
 18705   0051DC  EFF2  F028         	goto	u12421
 18706   0051E0  EFF4  F028         	goto	u12420
 18707   0051E4                     u12421:
 18708   0051E4  EFF6  F028         	goto	l13830
 18709   0051E8                     u12420:
 18710   0051E8                     
 18711                           ; BSR set to: 0
 18712                           ;MCAL_layer/ADC/hal_adc.c: 77:     }
 18713   0051E8  EF02  F029         	goto	l495
 18714   0051EC                     l13830:
 18715                           
 18716                           ; BSR set to: 0
 18717                           ;MCAL_layer/ADC/hal_adc.c: 79:         ADCON0bits.CHS = _ADC_Channel;
 18718   0051EC  C0DA  F0DB         	movff	ADC_Select_Channel@_ADC_Channel,??_ADC_Select_Channel
 18719   0051F0  47DB               	rlncf	??_ADC_Select_Channel& (0+255),f,b
 18720   0051F2  47DB               	rlncf	??_ADC_Select_Channel& (0+255),f,b
 18721   0051F4  50C2               	movf	194,w,c	;volatile
 18722   0051F6  19DB               	xorwf	??_ADC_Select_Channel& (0+255),w,b
 18723   0051F8  0BC3               	andlw	-61
 18724   0051FA  19DB               	xorwf	??_ADC_Select_Channel& (0+255),w,b
 18725   0051FC  6EC2               	movwf	194,c	;volatile
 18726   0051FE                     
 18727                           ; BSR set to: 0
 18728                           ;MCAL_layer/ADC/hal_adc.c: 80:         ADC_Select_Specific_Channel(_ADC_Channel);
 18729   0051FE  51DA               	movf	ADC_Select_Channel@_ADC_Channel& (0+255),w,b
 18730   005200  EC0E  F01D         	call	_ADC_Select_Specific_Channel
 18731   005204                     l495:
 18732   005204  0012               	return		;funcret
 18733   005206                     __end_of_ADC_Select_Channel:
 18734                           	callstack 0
 18735                           
 18736 ;; *************** function _ADC_Conversion_Result *****************
 18737 ;; Defined at:
 18738 ;;		line 115 in file "MCAL_layer/ADC/hal_adc.c"
 18739 ;; Parameters:    Size  Location     Type
 18740 ;;  _ADC_config     2    0[BANK0 ] PTR const struct .
 18741 ;;		 -> ADC_LDR(8), 
 18742 ;;  _ADC_Result     1    2[BANK0 ] PTR unsigned short 
 18743 ;;		 -> LDR_Read_Value(1), 
 18744 ;; Auto vars:     Size  Location     Type
 18745 ;;  ret             1    0        unsigned char 
 18746 ;; Return value:  Size  Location     Type
 18747 ;;                  1    wreg      unsigned char 
 18748 ;; Registers used:
 18749 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18750 ;; Tracked objects:
 18751 ;;		On entry : 0/0
 18752 ;;		On exit  : 0/0
 18753 ;;		Unchanged: 0/0
 18754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18755 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18757 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18758 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18759 ;;Total ram usage:        6 bytes
 18760 ;; Hardware stack levels used: 1
 18761 ;; Hardware stack levels required when called: 9
 18762 ;; This function calls:
 18763 ;;		Nothing
 18764 ;; This function is called by:
 18765 ;;		_ADC_Get_Conversion_Result_Block
 18766 ;; This function uses a non-reentrant model
 18767 ;;
 18768                           
 18769                           	psect	text94
 18770   004014                     __ptext94:
 18771                           	callstack 0
 18772   004014                     _ADC_Conversion_Result:
 18773                           	callstack 19
 18774   004014                     
 18775                           ;MCAL_layer/ADC/hal_adc.c: 117:     if(((void*)0) == _ADC_config){
 18776   004014  0100               	movlb	0	; () banked
 18777   004016  51D5               	movf	ADC_Conversion_Result@_ADC_config& (0+255),w,b
 18778   004018  11D6               	iorwf	(ADC_Conversion_Result@_ADC_config+1)& (0+255),w,b
 18779   00401A  A4D8               	btfss	status,2,c
 18780   00401C  EF12  F020         	goto	u12441
 18781   004020  EF14  F020         	goto	u12440
 18782   004024                     u12441:
 18783   004024  EF16  F020         	goto	l13854
 18784   004028                     u12440:
 18785   004028                     
 18786                           ; BSR set to: 0
 18787                           ;MCAL_layer/ADC/hal_adc.c: 119:     }
 18788   004028  EF5E  F020         	goto	l514
 18789   00402C                     l13854:
 18790                           
 18791                           ; BSR set to: 0
 18792                           ;MCAL_layer/ADC/hal_adc.c: 121:         if(ADC_RESULT_FORMAT_RIGHT == _ADC_config->Resul
      +                          t_Format){
 18793   00402C  EE20 F007          	lfsr	2,7
 18794   004030  51D5               	movf	ADC_Conversion_Result@_ADC_config& (0+255),w,b
 18795   004032  26D9               	addwf	fsr2l,f,c
 18796   004034  51D6               	movf	(ADC_Conversion_Result@_ADC_config+1)& (0+255),w,b
 18797   004036  22DA               	addwfc	fsr2h,f,c
 18798   004038  04DE               	decf	postinc2,w,c
 18799   00403A  A4D8               	btfss	status,2,c
 18800   00403C  EF22  F020         	goto	u12451
 18801   004040  EF24  F020         	goto	u12450
 18802   004044                     u12451:
 18803   004044  EF37  F020         	goto	l13858
 18804   004048                     u12450:
 18805   004048                     l13856:
 18806                           
 18807                           ; BSR set to: 0
 18808                           ;MCAL_layer/ADC/hal_adc.c: 122:             *_ADC_Result = (ADC_Result_t)((ADRESH << 8) 
      +                          + ADRESL);
 18809   004048  50C3               	movf	195,w,c	;volatile
 18810   00404A  CFC4 F0D8          	movff	4036,??_ADC_Conversion_Result	;volatile
 18811   00404E  6BD9               	clrf	(??_ADC_Conversion_Result+1)& (0+255),b
 18812   004050  C0D8  F0D9         	movff	??_ADC_Conversion_Result,??_ADC_Conversion_Result+1
 18813   004054  6BD8               	clrf	??_ADC_Conversion_Result& (0+255),b
 18814   004056  27D8               	addwf	??_ADC_Conversion_Result& (0+255),f,b
 18815   004058  0E00               	movlw	0
 18816   00405A  23D9               	addwfc	(??_ADC_Conversion_Result+1)& (0+255),f,b
 18817   00405C  51D7               	movf	ADC_Conversion_Result@_ADC_Result& (0+255),w,b
 18818   00405E  6ED9               	movwf	fsr2l,c
 18819   004060  6ADA               	clrf	fsr2h,c
 18820   004062  C0D8  FFDE         	movff	??_ADC_Conversion_Result,postinc2
 18821   004066  C0D9  FFDD         	movff	??_ADC_Conversion_Result+1,postdec2
 18822                           
 18823                           ;MCAL_layer/ADC/hal_adc.c: 123:         }
 18824   00406A  EF5E  F020         	goto	l13864
 18825   00406E                     l13858:
 18826                           
 18827                           ; BSR set to: 0
 18828   00406E  EE20 F007          	lfsr	2,7
 18829   004072  51D5               	movf	ADC_Conversion_Result@_ADC_config& (0+255),w,b
 18830   004074  26D9               	addwf	fsr2l,f,c
 18831   004076  51D6               	movf	(ADC_Conversion_Result@_ADC_config+1)& (0+255),w,b
 18832   004078  22DA               	addwfc	fsr2h,f,c
 18833   00407A  50DF               	movf	indf2,w,c
 18834   00407C  A4D8               	btfss	status,2,c
 18835   00407E  EF43  F020         	goto	u12461
 18836   004082  EF45  F020         	goto	u12460
 18837   004086                     u12461:
 18838   004086  EF24  F020         	goto	l13856
 18839   00408A                     u12460:
 18840   00408A                     
 18841                           ; BSR set to: 0
 18842                           ;MCAL_layer/ADC/hal_adc.c: 125:             *_ADC_Result = (ADC_Result_t)(((ADRESH << 8)
      +                           + ADRESL) >> 6);
 18843   00408A  50C3               	movf	195,w,c	;volatile
 18844   00408C  CFC4 F0D8          	movff	4036,??_ADC_Conversion_Result	;volatile
 18845   004090  6BD9               	clrf	(??_ADC_Conversion_Result+1)& (0+255),b
 18846   004092  C0D8  F0D9         	movff	??_ADC_Conversion_Result,??_ADC_Conversion_Result+1
 18847   004096  6BD8               	clrf	??_ADC_Conversion_Result& (0+255),b
 18848   004098  27D8               	addwf	??_ADC_Conversion_Result& (0+255),f,b
 18849   00409A  0E00               	movlw	0
 18850   00409C  23D9               	addwfc	(??_ADC_Conversion_Result+1)& (0+255),f,b
 18851   00409E  0E06               	movlw	6
 18852   0040A0  6FDA               	movwf	(??_ADC_Conversion_Result+2)& (0+255),b
 18853   0040A2                     u12475:
 18854   0040A2  35D9               	rlcf	(??_ADC_Conversion_Result+1)& (0+255),w,b
 18855   0040A4  33D9               	rrcf	(??_ADC_Conversion_Result+1)& (0+255),f,b
 18856   0040A6  33D8               	rrcf	??_ADC_Conversion_Result& (0+255),f,b
 18857   0040A8  2FDA               	decfsz	(??_ADC_Conversion_Result+2)& (0+255),f,b
 18858   0040AA  EF51  F020         	goto	u12475
 18859   0040AE  51D7               	movf	ADC_Conversion_Result@_ADC_Result& (0+255),w,b
 18860   0040B0  6ED9               	movwf	fsr2l,c
 18861   0040B2  6ADA               	clrf	fsr2h,c
 18862   0040B4  C0D8  FFDE         	movff	??_ADC_Conversion_Result,postinc2
 18863   0040B8  C0D9  FFDD         	movff	??_ADC_Conversion_Result+1,postdec2
 18864   0040BC                     l13864:
 18865   0040BC                     l514:
 18866                           
 18867                           ; BSR set to: 0
 18868   0040BC  0012               	return		;funcret
 18869   0040BE                     __end_of_ADC_Conversion_Result:
 18870                           	callstack 0
 18871                           
 18872 ;; *************** function _ADC_Init *****************
 18873 ;; Defined at:
 18874 ;;		line 22 in file "MCAL_layer/ADC/hal_adc.c"
 18875 ;; Parameters:    Size  Location     Type
 18876 ;;  _ADC_config     2    4[BANK0 ] PTR const struct .
 18877 ;;		 -> ADC_LDR(8), 
 18878 ;; Auto vars:     Size  Location     Type
 18879 ;;  ret             1    7[BANK0 ] unsigned char 
 18880 ;; Return value:  Size  Location     Type
 18881 ;;                  1    wreg      unsigned char 
 18882 ;; Registers used:
 18883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 18884 ;; Tracked objects:
 18885 ;;		On entry : 0/0
 18886 ;;		On exit  : 0/0
 18887 ;;		Unchanged: 0/0
 18888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18889 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18890 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18891 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18892 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18893 ;;Total ram usage:        4 bytes
 18894 ;; Hardware stack levels used: 1
 18895 ;; Hardware stack levels required when called: 10
 18896 ;; This function calls:
 18897 ;;		_ADC_Interrupt_Configuration
 18898 ;;		_ADC_Result_Format_Control
 18899 ;;		_ADC_Select_Specific_Channel
 18900 ;;		_ADC_Voltage_Reference_Control
 18901 ;; This function is called by:
 18902 ;;		_main
 18903 ;; This function uses a non-reentrant model
 18904 ;;
 18905                           
 18906                           	psect	text95
 18907   003EB0                     __ptext95:
 18908                           	callstack 0
 18909   003EB0                     _ADC_Init:
 18910                           	callstack 20
 18911   003EB0                     
 18912                           ;MCAL_layer/ADC/hal_adc.c: 24:     if(((void*)0) == _ADC_config){
 18913   003EB0  0100               	movlb	0	; () banked
 18914   003EB2  51D9               	movf	ADC_Init@_ADC_config& (0+255),w,b
 18915   003EB4  11DA               	iorwf	(ADC_Init@_ADC_config+1)& (0+255),w,b
 18916   003EB6  A4D8               	btfss	status,2,c
 18917   003EB8  EF60  F01F         	goto	u13091
 18918   003EBC  EF62  F01F         	goto	u13090
 18919   003EC0                     u13091:
 18920   003EC0  EF65  F01F         	goto	l483
 18921   003EC4                     u13090:
 18922   003EC4                     
 18923                           ; BSR set to: 0
 18924                           ;MCAL_layer/ADC/hal_adc.c: 25:         ret = (STD_ReturnType)0x00;
 18925   003EC4  6BDC               	clrf	ADC_Init@ret& (0+255),b
 18926                           
 18927                           ;MCAL_layer/ADC/hal_adc.c: 26:     }
 18928   003EC6  EFB1  F01F         	goto	l14476
 18929   003ECA                     l483:
 18930                           
 18931                           ; BSR set to: 0
 18932                           ;MCAL_layer/ADC/hal_adc.c: 29:         (ADCON0bits.ADON = 0);
 18933   003ECA  90C2               	bcf	194,0,c	;volatile
 18934   003ECC                     
 18935                           ; BSR set to: 0
 18936                           ;MCAL_layer/ADC/hal_adc.c: 31:         ADCON2bits.ACQT = _ADC_config->Acquisition_Time;
 18937   003ECC  EE20 F004          	lfsr	2,4
 18938   003ED0  51D9               	movf	ADC_Init@_ADC_config& (0+255),w,b
 18939   003ED2  26D9               	addwf	fsr2l,f,c
 18940   003ED4  51DA               	movf	(ADC_Init@_ADC_config+1)& (0+255),w,b
 18941   003ED6  22DA               	addwfc	fsr2h,f,c
 18942   003ED8  50DF               	movf	indf2,w,c
 18943   003EDA  6FDB               	movwf	??_ADC_Init& (0+255),b
 18944   003EDC  47DB               	rlncf	??_ADC_Init& (0+255),f,b
 18945   003EDE  47DB               	rlncf	??_ADC_Init& (0+255),f,b
 18946   003EE0  47DB               	rlncf	??_ADC_Init& (0+255),f,b
 18947   003EE2  50C0               	movf	192,w,c	;volatile
 18948   003EE4  19DB               	xorwf	??_ADC_Init& (0+255),w,b
 18949   003EE6  0BC7               	andlw	-57
 18950   003EE8  19DB               	xorwf	??_ADC_Init& (0+255),w,b
 18951   003EEA  6EC0               	movwf	192,c	;volatile
 18952                           
 18953                           ;MCAL_layer/ADC/hal_adc.c: 33:         ADCON2bits.ADCS = _ADC_config->Conversion_Clock;
 18954   003EEC  EE20 F005          	lfsr	2,5
 18955   003EF0  51D9               	movf	ADC_Init@_ADC_config& (0+255),w,b
 18956   003EF2  26D9               	addwf	fsr2l,f,c
 18957   003EF4  51DA               	movf	(ADC_Init@_ADC_config+1)& (0+255),w,b
 18958   003EF6  22DA               	addwfc	fsr2h,f,c
 18959   003EF8  50DF               	movf	indf2,w,c
 18960   003EFA  6FDB               	movwf	??_ADC_Init& (0+255),b
 18961   003EFC  50C0               	movf	192,w,c	;volatile
 18962   003EFE  19DB               	xorwf	??_ADC_Init& (0+255),w,b
 18963   003F00  0BF8               	andlw	-8
 18964   003F02  19DB               	xorwf	??_ADC_Init& (0+255),w,b
 18965   003F04  6EC0               	movwf	192,c	;volatile
 18966                           
 18967                           ;MCAL_layer/ADC/hal_adc.c: 35:         ADCON0bits.CHS = _ADC_config->Channel;
 18968   003F06  EE20 F003          	lfsr	2,3
 18969   003F0A  51D9               	movf	ADC_Init@_ADC_config& (0+255),w,b
 18970   003F0C  26D9               	addwf	fsr2l,f,c
 18971   003F0E  51DA               	movf	(ADC_Init@_ADC_config+1)& (0+255),w,b
 18972   003F10  22DA               	addwfc	fsr2h,f,c
 18973   003F12  50DF               	movf	indf2,w,c
 18974   003F14  6FDB               	movwf	??_ADC_Init& (0+255),b
 18975   003F16  47DB               	rlncf	??_ADC_Init& (0+255),f,b
 18976   003F18  47DB               	rlncf	??_ADC_Init& (0+255),f,b
 18977   003F1A  50C2               	movf	194,w,c	;volatile
 18978   003F1C  19DB               	xorwf	??_ADC_Init& (0+255),w,b
 18979   003F1E  0BC3               	andlw	-61
 18980   003F20  19DB               	xorwf	??_ADC_Init& (0+255),w,b
 18981   003F22  6EC2               	movwf	194,c	;volatile
 18982   003F24                     
 18983                           ; BSR set to: 0
 18984                           ;MCAL_layer/ADC/hal_adc.c: 36:         ADC_Select_Specific_Channel(_ADC_config->Channel)
      +                          ;
 18985   003F24  EE20 F003          	lfsr	2,3
 18986   003F28  51D9               	movf	ADC_Init@_ADC_config& (0+255),w,b
 18987   003F2A  26D9               	addwf	fsr2l,f,c
 18988   003F2C  51DA               	movf	(ADC_Init@_ADC_config+1)& (0+255),w,b
 18989   003F2E  22DA               	addwfc	fsr2h,f,c
 18990   003F30  50DF               	movf	indf2,w,c
 18991   003F32  EC0E  F01D         	call	_ADC_Select_Specific_Channel
 18992   003F36                     
 18993                           ;MCAL_layer/ADC/hal_adc.c: 39:         ADC_Interrupt_Configuration(_ADC_config);
 18994   003F36  C0D9  F0D5         	movff	ADC_Init@_ADC_config,ADC_Interrupt_Configuration@_ADC_config
 18995   003F3A  C0DA  F0D6         	movff	ADC_Init@_ADC_config+1,ADC_Interrupt_Configuration@_ADC_config+1
 18996   003F3E  EC04  F02A         	call	_ADC_Interrupt_Configuration	;wreg free
 18997   003F42                     
 18998                           ;MCAL_layer/ADC/hal_adc.c: 42:         ADC_Result_Format_Control(_ADC_config);
 18999   003F42  C0D9  F0D5         	movff	ADC_Init@_ADC_config,ADC_Result_Format_Control@_ADC_config
 19000   003F46  C0DA  F0D6         	movff	ADC_Init@_ADC_config+1,ADC_Result_Format_Control@_ADC_config+1
 19001   003F4A  ECDE  F027         	call	_ADC_Result_Format_Control	;wreg free
 19002   003F4E                     
 19003                           ;MCAL_layer/ADC/hal_adc.c: 44:         ADC_Voltage_Reference_Control(_ADC_config);
 19004   003F4E  C0D9  F0D5         	movff	ADC_Init@_ADC_config,ADC_Voltage_Reference_Control@_ADC_config
 19005   003F52  C0DA  F0D6         	movff	ADC_Init@_ADC_config+1,ADC_Voltage_Reference_Control@_ADC_config+1
 19006   003F56  ECB7  F027         	call	_ADC_Voltage_Reference_Control	;wreg free
 19007   003F5A                     
 19008                           ;MCAL_layer/ADC/hal_adc.c: 46:         (ADCON0bits.ADON = 1);
 19009   003F5A  80C2               	bsf	194,0,c	;volatile
 19010   003F5C                     
 19011                           ;MCAL_layer/ADC/hal_adc.c: 48:         ret = (STD_ReturnType)0x01;
 19012   003F5C  0E01               	movlw	1
 19013   003F5E  0100               	movlb	0	; () banked
 19014   003F60  6FDC               	movwf	ADC_Init@ret& (0+255),b
 19015   003F62                     l14476:
 19016                           
 19017                           ; BSR set to: 0
 19018                           ;MCAL_layer/ADC/hal_adc.c: 50:     return ret;
 19019   003F62  51DC               	movf	ADC_Init@ret& (0+255),w,b
 19020   003F64                     
 19021                           ; BSR set to: 0
 19022   003F64  0012               	return		;funcret
 19023   003F66                     __end_of_ADC_Init:
 19024                           	callstack 0
 19025                           
 19026 ;; *************** function _ADC_Voltage_Reference_Control *****************
 19027 ;; Defined at:
 19028 ;;		line 196 in file "MCAL_layer/ADC/hal_adc.c"
 19029 ;; Parameters:    Size  Location     Type
 19030 ;;  _ADC_config     2    0[BANK0 ] PTR const struct .
 19031 ;;		 -> ADC_LDR(8), 
 19032 ;; Auto vars:     Size  Location     Type
 19033 ;;		None
 19034 ;; Return value:  Size  Location     Type
 19035 ;;                  1    wreg      void 
 19036 ;; Registers used:
 19037 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19038 ;; Tracked objects:
 19039 ;;		On entry : 0/0
 19040 ;;		On exit  : 0/0
 19041 ;;		Unchanged: 0/0
 19042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19043 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19045 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19046 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19047 ;;Total ram usage:        4 bytes
 19048 ;; Hardware stack levels used: 1
 19049 ;; Hardware stack levels required when called: 9
 19050 ;; This function calls:
 19051 ;;		Nothing
 19052 ;; This function is called by:
 19053 ;;		_ADC_Init
 19054 ;; This function uses a non-reentrant model
 19055 ;;
 19056                           
 19057                           	psect	text96
 19058   004F6E                     __ptext96:
 19059                           	callstack 0
 19060   004F6E                     _ADC_Voltage_Reference_Control:
 19061                           	callstack 20
 19062   004F6E                     
 19063                           ;MCAL_layer/ADC/hal_adc.c: 197:     switch(_ADC_config->Voltage_Reference){
 19064   004F6E  EFC1  F027         	goto	l14136
 19065   004F72                     l551:
 19066                           
 19067                           ; BSR set to: 0
 19068   004F72  98C1               	bcf	193,4,c	;volatile
 19069   004F74  9AC1               	bcf	193,5,c	;volatile
 19070   004F76  EFDD  F027         	goto	l558
 19071   004F7A                     l555:
 19072                           
 19073                           ; BSR set to: 0
 19074   004F7A  88C1               	bsf	193,4,c	;volatile
 19075   004F7C  8AC1               	bsf	193,5,c	;volatile
 19076   004F7E  EFDD  F027         	goto	l558
 19077   004F82                     l14136:
 19078   004F82  0100               	movlb	0	; () banked
 19079   004F84  EE20 F006          	lfsr	2,6
 19080   004F88  51D5               	movf	ADC_Voltage_Reference_Control@_ADC_config& (0+255),w,b
 19081   004F8A  26D9               	addwf	fsr2l,f,c
 19082   004F8C  51D6               	movf	(ADC_Voltage_Reference_Control@_ADC_config+1)& (0+255),w,b
 19083   004F8E  22DA               	addwfc	fsr2h,f,c
 19084   004F90  50DF               	movf	indf2,w,c
 19085   004F92  6FD7               	movwf	??_ADC_Voltage_Reference_Control& (0+255),b
 19086   004F94  6BD8               	clrf	(??_ADC_Voltage_Reference_Control+1)& (0+255),b
 19087                           
 19088                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19089                           ; Switch size 1, requested type "simple"
 19090                           ; Number of cases is 1, Range of values is 0 to 0
 19091                           ; switch strategies available:
 19092                           ; Name         Instructions Cycles
 19093                           ; simple_byte            4     3 (average)
 19094                           ;	Chosen strategy is simple_byte
 19095   004F96  51D8               	movf	(??_ADC_Voltage_Reference_Control+1)& (0+255),w,b
 19096   004F98  0A00               	xorlw	0	; case 0
 19097   004F9A  B4D8               	btfsc	status,2,c
 19098   004F9C  EFD2  F027         	goto	l15876
 19099   004FA0  EFDD  F027         	goto	l558
 19100   004FA4                     l15876:
 19101                           
 19102                           ; BSR set to: 0
 19103                           ; Switch size 1, requested type "simple"
 19104                           ; Number of cases is 2, Range of values is 0 to 1
 19105                           ; switch strategies available:
 19106                           ; Name         Instructions Cycles
 19107                           ; simple_byte            7     4 (average)
 19108                           ;	Chosen strategy is simple_byte
 19109   004FA4  51D7               	movf	??_ADC_Voltage_Reference_Control& (0+255),w,b
 19110   004FA6  0A00               	xorlw	0	; case 0
 19111   004FA8  B4D8               	btfsc	status,2,c
 19112   004FAA  EFB9  F027         	goto	l551
 19113   004FAE  0A01               	xorlw	1	; case 1
 19114   004FB0  B4D8               	btfsc	status,2,c
 19115   004FB2  EFBD  F027         	goto	l555
 19116   004FB6  EFDD  F027         	goto	l558
 19117   004FBA                     l558:
 19118                           
 19119                           ; BSR set to: 0
 19120   004FBA  0012               	return		;funcret
 19121   004FBC                     __end_of_ADC_Voltage_Reference_Control:
 19122                           	callstack 0
 19123                           
 19124 ;; *************** function _ADC_Select_Specific_Channel *****************
 19125 ;; Defined at:
 19126 ;;		line 177 in file "MCAL_layer/ADC/hal_adc.c"
 19127 ;; Parameters:    Size  Location     Type
 19128 ;;  _ADC_Channel    1    wreg     enum E3445
 19129 ;; Auto vars:     Size  Location     Type
 19130 ;;  _ADC_Channel    1    2[BANK0 ] enum E3445
 19131 ;; Return value:  Size  Location     Type
 19132 ;;                  1    wreg      void 
 19133 ;; Registers used:
 19134 ;;		wreg, status,2, status,0
 19135 ;; Tracked objects:
 19136 ;;		On entry : 0/0
 19137 ;;		On exit  : 0/0
 19138 ;;		Unchanged: 0/0
 19139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19141 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19142 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19143 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19144 ;;Total ram usage:        3 bytes
 19145 ;; Hardware stack levels used: 1
 19146 ;; Hardware stack levels required when called: 9
 19147 ;; This function calls:
 19148 ;;		Nothing
 19149 ;; This function is called by:
 19150 ;;		_ADC_Init
 19151 ;;		_ADC_Select_Channel
 19152 ;; This function uses a non-reentrant model
 19153 ;;
 19154                           
 19155                           	psect	text97
 19156   003A1C                     __ptext97:
 19157                           	callstack 0
 19158   003A1C                     _ADC_Select_Specific_Channel:
 19159                           	callstack 18
 19160                           
 19161                           ; BSR set to: 0
 19162                           ;incstack = 0
 19163                           ;ADC_Select_Specific_Channel@_ADC_Channel stored from wreg
 19164   003A1C  0100               	movlb	0	; () banked
 19165   003A1E  6FD7               	movwf	ADC_Select_Specific_Channel@_ADC_Channel& (0+255),b
 19166   003A20                     
 19167                           ;MCAL_layer/ADC/hal_adc.c: 178:     switch(_ADC_Channel){
 19168   003A20  EF39  F01D         	goto	l13276
 19169   003A24                     l13250:
 19170                           
 19171                           ; BSR set to: 0
 19172   003A24  8092               	bsf	146,0,c	;volatile
 19173   003A26  EF7B  F01D         	goto	l546
 19174   003A2A                     l13252:
 19175                           
 19176                           ; BSR set to: 0
 19177   003A2A  8292               	bsf	146,1,c	;volatile
 19178   003A2C  EF7B  F01D         	goto	l546
 19179   003A30                     l13254:
 19180                           
 19181                           ; BSR set to: 0
 19182   003A30  8492               	bsf	146,2,c	;volatile
 19183   003A32  EF7B  F01D         	goto	l546
 19184   003A36                     l13256:
 19185                           
 19186                           ; BSR set to: 0
 19187   003A36  8692               	bsf	146,3,c	;volatile
 19188   003A38  EF7B  F01D         	goto	l546
 19189   003A3C                     l13258:
 19190                           
 19191                           ; BSR set to: 0
 19192   003A3C  8A92               	bsf	146,5,c	;volatile
 19193   003A3E  EF7B  F01D         	goto	l546
 19194   003A42                     l13260:
 19195                           
 19196                           ; BSR set to: 0
 19197   003A42  8096               	bsf	150,0,c	;volatile
 19198   003A44  EF7B  F01D         	goto	l546
 19199   003A48                     l13262:
 19200                           
 19201                           ; BSR set to: 0
 19202   003A48  8296               	bsf	150,1,c	;volatile
 19203   003A4A  EF7B  F01D         	goto	l546
 19204   003A4E                     l13264:
 19205                           
 19206                           ; BSR set to: 0
 19207   003A4E  8496               	bsf	150,2,c	;volatile
 19208   003A50  EF7B  F01D         	goto	l546
 19209   003A54                     l13266:
 19210                           
 19211                           ; BSR set to: 0
 19212   003A54  8493               	bsf	147,2,c	;volatile
 19213   003A56  EF7B  F01D         	goto	l546
 19214   003A5A                     l13268:
 19215                           
 19216                           ; BSR set to: 0
 19217   003A5A  8693               	bsf	147,3,c	;volatile
 19218   003A5C  EF7B  F01D         	goto	l546
 19219   003A60                     l13270:
 19220                           
 19221                           ; BSR set to: 0
 19222   003A60  8293               	bsf	147,1,c	;volatile
 19223   003A62  EF7B  F01D         	goto	l546
 19224   003A66                     l13272:
 19225                           
 19226                           ; BSR set to: 0
 19227   003A66  8893               	bsf	147,4,c	;volatile
 19228   003A68  EF7B  F01D         	goto	l546
 19229   003A6C                     l13274:
 19230                           
 19231                           ; BSR set to: 0
 19232   003A6C  8093               	bsf	147,0,c	;volatile
 19233   003A6E  EF7B  F01D         	goto	l546
 19234   003A72                     l13276:
 19235   003A72  0100               	movlb	0	; () banked
 19236   003A74  51D7               	movf	ADC_Select_Specific_Channel@_ADC_Channel& (0+255),w,b
 19237   003A76  6FD5               	movwf	??_ADC_Select_Specific_Channel& (0+255),b
 19238   003A78  6BD6               	clrf	(??_ADC_Select_Specific_Channel+1)& (0+255),b
 19239                           
 19240                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19241                           ; Switch size 1, requested type "simple"
 19242                           ; Number of cases is 1, Range of values is 0 to 0
 19243                           ; switch strategies available:
 19244                           ; Name         Instructions Cycles
 19245                           ; simple_byte            4     3 (average)
 19246                           ;	Chosen strategy is simple_byte
 19247   003A7A  51D6               	movf	(??_ADC_Select_Specific_Channel+1)& (0+255),w,b
 19248   003A7C  0A00               	xorlw	0	; case 0
 19249   003A7E  B4D8               	btfsc	status,2,c
 19250   003A80  EF44  F01D         	goto	l15878
 19251   003A84  EF7B  F01D         	goto	l546
 19252   003A88                     l15878:
 19253                           
 19254                           ; BSR set to: 0
 19255                           ; Switch size 1, requested type "simple"
 19256                           ; Number of cases is 13, Range of values is 0 to 12
 19257                           ; switch strategies available:
 19258                           ; Name         Instructions Cycles
 19259                           ; simple_byte           40    21 (average)
 19260                           ;	Chosen strategy is simple_byte
 19261   003A88  51D5               	movf	??_ADC_Select_Specific_Channel& (0+255),w,b
 19262   003A8A  0A00               	xorlw	0	; case 0
 19263   003A8C  B4D8               	btfsc	status,2,c
 19264   003A8E  EF12  F01D         	goto	l13250
 19265   003A92  0A01               	xorlw	1	; case 1
 19266   003A94  B4D8               	btfsc	status,2,c
 19267   003A96  EF15  F01D         	goto	l13252
 19268   003A9A  0A03               	xorlw	3	; case 2
 19269   003A9C  B4D8               	btfsc	status,2,c
 19270   003A9E  EF18  F01D         	goto	l13254
 19271   003AA2  0A01               	xorlw	1	; case 3
 19272   003AA4  B4D8               	btfsc	status,2,c
 19273   003AA6  EF1B  F01D         	goto	l13256
 19274   003AAA  0A07               	xorlw	7	; case 4
 19275   003AAC  B4D8               	btfsc	status,2,c
 19276   003AAE  EF1E  F01D         	goto	l13258
 19277   003AB2  0A01               	xorlw	1	; case 5
 19278   003AB4  B4D8               	btfsc	status,2,c
 19279   003AB6  EF21  F01D         	goto	l13260
 19280   003ABA  0A03               	xorlw	3	; case 6
 19281   003ABC  B4D8               	btfsc	status,2,c
 19282   003ABE  EF24  F01D         	goto	l13262
 19283   003AC2  0A01               	xorlw	1	; case 7
 19284   003AC4  B4D8               	btfsc	status,2,c
 19285   003AC6  EF27  F01D         	goto	l13264
 19286   003ACA  0A0F               	xorlw	15	; case 8
 19287   003ACC  B4D8               	btfsc	status,2,c
 19288   003ACE  EF2A  F01D         	goto	l13266
 19289   003AD2  0A01               	xorlw	1	; case 9
 19290   003AD4  B4D8               	btfsc	status,2,c
 19291   003AD6  EF2D  F01D         	goto	l13268
 19292   003ADA  0A03               	xorlw	3	; case 10
 19293   003ADC  B4D8               	btfsc	status,2,c
 19294   003ADE  EF30  F01D         	goto	l13270
 19295   003AE2  0A01               	xorlw	1	; case 11
 19296   003AE4  B4D8               	btfsc	status,2,c
 19297   003AE6  EF33  F01D         	goto	l13272
 19298   003AEA  0A07               	xorlw	7	; case 12
 19299   003AEC  B4D8               	btfsc	status,2,c
 19300   003AEE  EF36  F01D         	goto	l13274
 19301   003AF2  EF7B  F01D         	goto	l546
 19302   003AF6                     l546:
 19303                           
 19304                           ; BSR set to: 0
 19305   003AF6  0012               	return		;funcret
 19306   003AF8                     __end_of_ADC_Select_Specific_Channel:
 19307                           	callstack 0
 19308                           
 19309 ;; *************** function _ADC_Result_Format_Control *****************
 19310 ;; Defined at:
 19311 ;;		line 204 in file "MCAL_layer/ADC/hal_adc.c"
 19312 ;; Parameters:    Size  Location     Type
 19313 ;;  _ADC_config     2    0[BANK0 ] PTR const struct .
 19314 ;;		 -> ADC_LDR(8), 
 19315 ;; Auto vars:     Size  Location     Type
 19316 ;;		None
 19317 ;; Return value:  Size  Location     Type
 19318 ;;                  1    wreg      void 
 19319 ;; Registers used:
 19320 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19321 ;; Tracked objects:
 19322 ;;		On entry : 0/0
 19323 ;;		On exit  : 0/0
 19324 ;;		Unchanged: 0/0
 19325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19326 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19328 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19329 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19330 ;;Total ram usage:        4 bytes
 19331 ;; Hardware stack levels used: 1
 19332 ;; Hardware stack levels required when called: 9
 19333 ;; This function calls:
 19334 ;;		Nothing
 19335 ;; This function is called by:
 19336 ;;		_ADC_Init
 19337 ;; This function uses a non-reentrant model
 19338 ;;
 19339                           
 19340                           	psect	text98
 19341   004FBC                     __ptext98:
 19342                           	callstack 0
 19343   004FBC                     _ADC_Result_Format_Control:
 19344                           	callstack 20
 19345   004FBC                     
 19346                           ;MCAL_layer/ADC/hal_adc.c: 205:     switch(_ADC_config->Result_Format){
 19347   004FBC  EFE6  F027         	goto	l14126
 19348   004FC0                     l562:
 19349                           
 19350                           ; BSR set to: 0
 19351   004FC0  9EC0               	bcf	192,7,c	;volatile
 19352   004FC2  EF02  F028         	goto	l566
 19353   004FC6                     l564:
 19354                           
 19355                           ; BSR set to: 0
 19356   004FC6  8EC0               	bsf	192,7,c	;volatile
 19357   004FC8  EF02  F028         	goto	l566
 19358   004FCC                     l14126:
 19359   004FCC  0100               	movlb	0	; () banked
 19360   004FCE  EE20 F007          	lfsr	2,7
 19361   004FD2  51D5               	movf	ADC_Result_Format_Control@_ADC_config& (0+255),w,b
 19362   004FD4  26D9               	addwf	fsr2l,f,c
 19363   004FD6  51D6               	movf	(ADC_Result_Format_Control@_ADC_config+1)& (0+255),w,b
 19364   004FD8  22DA               	addwfc	fsr2h,f,c
 19365   004FDA  50DF               	movf	indf2,w,c
 19366   004FDC  6FD7               	movwf	??_ADC_Result_Format_Control& (0+255),b
 19367   004FDE  6BD8               	clrf	(??_ADC_Result_Format_Control+1)& (0+255),b
 19368                           
 19369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 19370                           ; Switch size 1, requested type "simple"
 19371                           ; Number of cases is 1, Range of values is 0 to 0
 19372                           ; switch strategies available:
 19373                           ; Name         Instructions Cycles
 19374                           ; simple_byte            4     3 (average)
 19375                           ;	Chosen strategy is simple_byte
 19376   004FE0  51D8               	movf	(??_ADC_Result_Format_Control+1)& (0+255),w,b
 19377   004FE2  0A00               	xorlw	0	; case 0
 19378   004FE4  B4D8               	btfsc	status,2,c
 19379   004FE6  EFF7  F027         	goto	l15880
 19380   004FEA  EF02  F028         	goto	l566
 19381   004FEE                     l15880:
 19382                           
 19383                           ; BSR set to: 0
 19384                           ; Switch size 1, requested type "simple"
 19385                           ; Number of cases is 2, Range of values is 0 to 1
 19386                           ; switch strategies available:
 19387                           ; Name         Instructions Cycles
 19388                           ; simple_byte            7     4 (average)
 19389                           ;	Chosen strategy is simple_byte
 19390   004FEE  51D7               	movf	??_ADC_Result_Format_Control& (0+255),w,b
 19391   004FF0  0A00               	xorlw	0	; case 0
 19392   004FF2  B4D8               	btfsc	status,2,c
 19393   004FF4  EFE0  F027         	goto	l562
 19394   004FF8  0A01               	xorlw	1	; case 1
 19395   004FFA  B4D8               	btfsc	status,2,c
 19396   004FFC  EFE3  F027         	goto	l564
 19397   005000  EF02  F028         	goto	l566
 19398   005004                     l566:
 19399                           
 19400                           ; BSR set to: 0
 19401   005004  0012               	return		;funcret
 19402   005006                     __end_of_ADC_Result_Format_Control:
 19403                           	callstack 0
 19404                           
 19405 ;; *************** function _ADC_Interrupt_Configuration *****************
 19406 ;; Defined at:
 19407 ;;		line 213 in file "MCAL_layer/ADC/hal_adc.c"
 19408 ;; Parameters:    Size  Location     Type
 19409 ;;  _ADC_config     2    0[BANK0 ] PTR const struct .
 19410 ;;		 -> ADC_LDR(8), 
 19411 ;; Auto vars:     Size  Location     Type
 19412 ;;		None
 19413 ;; Return value:  Size  Location     Type
 19414 ;;                  1    wreg      void 
 19415 ;; Registers used:
 19416 ;;		fsr2l, fsr2h
 19417 ;; Tracked objects:
 19418 ;;		On entry : 0/0
 19419 ;;		On exit  : 0/0
 19420 ;;		Unchanged: 0/0
 19421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19422 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19425 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19426 ;;Total ram usage:        2 bytes
 19427 ;; Hardware stack levels used: 1
 19428 ;; Hardware stack levels required when called: 9
 19429 ;; This function calls:
 19430 ;;		Nothing
 19431 ;; This function is called by:
 19432 ;;		_ADC_Init
 19433 ;; This function uses a non-reentrant model
 19434 ;;
 19435                           
 19436                           	psect	text99
 19437   005408                     __ptext99:
 19438                           	callstack 0
 19439   005408                     _ADC_Interrupt_Configuration:
 19440                           	callstack 20
 19441   005408                     
 19442                           ;MCAL_layer/ADC/hal_adc.c: 215:         (PIE1bits.ADIE = 0);
 19443   005408  9C9D               	bcf	157,6,c	;volatile
 19444                           
 19445                           ;MCAL_layer/ADC/hal_adc.c: 217:         (PIR1bits.ADIF = 0);
 19446   00540A  9C9E               	bcf	158,6,c	;volatile
 19447                           
 19448                           ;MCAL_layer/ADC/hal_adc.c: 241:         (INTCONbits.GIE = 1);
 19449   00540C  8EF2               	bsf	242,7,c	;volatile
 19450                           
 19451                           ;MCAL_layer/ADC/hal_adc.c: 243:         (INTCONbits.PEIE = 1);
 19452   00540E  8CF2               	bsf	242,6,c	;volatile
 19453   005410                     
 19454                           ;MCAL_layer/ADC/hal_adc.c: 245:         ADC_InterruptHandler = _ADC_config->ADC_Interrup
      +                          tHandler;
 19455   005410  C0D5  FFD9         	movff	ADC_Interrupt_Configuration@_ADC_config,fsr2l
 19456   005414  C0D6  FFDA         	movff	ADC_Interrupt_Configuration@_ADC_config+1,fsr2h
 19457   005418  CFDE F0C1          	movff	postinc2,_ADC_InterruptHandler
 19458   00541C  CFDD F0C2          	movff	postdec2,_ADC_InterruptHandler+1
 19459   005420                     
 19460                           ;MCAL_layer/ADC/hal_adc.c: 247:         (PIE1bits.ADIE = 1);
 19461   005420  8C9D               	bsf	157,6,c	;volatile
 19462   005422  0012               	return		;funcret
 19463   005424                     __end_of_ADC_Interrupt_Configuration:
 19464                           	callstack 0
 19465                           
 19466 ;; *************** function _InterruptManager *****************
 19467 ;; Defined at:
 19468 ;;		line 116 in file "MCAL_layer/Interrupts/mcal_interrupts_manager.c"
 19469 ;; Parameters:    Size  Location     Type
 19470 ;;		None
 19471 ;; Auto vars:     Size  Location     Type
 19472 ;;		None
 19473 ;; Return value:  Size  Location     Type
 19474 ;;                  1    wreg      void 
 19475 ;; Registers used:
 19476 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
 19477 ;; Tracked objects:
 19478 ;;		On entry : 0/0
 19479 ;;		On exit  : 0/0
 19480 ;;		Unchanged: 0/0
 19481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19484 ;;      Temps:         10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19485 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19486 ;;Total ram usage:       10 bytes
 19487 ;; Hardware stack levels used: 1
 19488 ;; Hardware stack levels required when called: 8
 19489 ;; This function calls:
 19490 ;;		_ADC_ISR
 19491 ;;		_CCP1_ISR
 19492 ;;		_CCP2_ISR
 19493 ;;		_EUSART_RX_ISR
 19494 ;;		_EUSART_TX_ISR
 19495 ;;		_INT0_ISR
 19496 ;;		_INT1_ISR
 19497 ;;		_INT2_ISR
 19498 ;;		_MSSP_I2C_BC_ISR
 19499 ;;		_MSSP_I2C_ISR
 19500 ;;		_MSSP_SPI_ISR
 19501 ;;		_RB4_ISR
 19502 ;;		_RB5_ISR
 19503 ;;		_RB6_ISR
 19504 ;;		_RB7_ISR
 19505 ;;		_TMR0_ISR
 19506 ;;		_TMR1_ISR
 19507 ;;		_TMR2_ISR
 19508 ;;		_TMR3_ISR
 19509 ;; This function is called by:
 19510 ;;		Interrupt level 2
 19511 ;; This function uses a non-reentrant model
 19512 ;;
 19513                           
 19514                           	psect	intcode
 19515   000008                     __pintcode:
 19516                           	callstack 0
 19517   000008                     _InterruptManager:
 19518                           	callstack 11
 19519                           
 19520                           ;incstack = 0
 19521   000008  823F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 19522   00000A  CFFA F018          	movff	pclath,??_InterruptManager
 19523   00000E  CFFB F019          	movff	pclatu,??_InterruptManager+1
 19524   000012  CFE9 F01A          	movff	fsr0l,??_InterruptManager+2
 19525   000016  CFEA F01B          	movff	fsr0h,??_InterruptManager+3
 19526   00001A  CFD9 F01C          	movff	fsr2l,??_InterruptManager+4
 19527   00001E  CFDA F01D          	movff	fsr2h,??_InterruptManager+5
 19528   000022  CFF6 F01E          	movff	tblptrl,??_InterruptManager+6
 19529   000026  CFF7 F01F          	movff	tblptrh,??_InterruptManager+7
 19530   00002A  CFF8 F020          	movff	tblptru,??_InterruptManager+8
 19531   00002E  CFF5 F021          	movff	tablat,??_InterruptManager+9
 19532   000032                     
 19533                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 118:     if((1 == INTCONbits.INT0IE) &
      +                          & (1 == INTCONbits.INT0IF)){
 19534   000032  A8F2               	btfss	242,4,c	;volatile
 19535   000034  EF1E  F000         	goto	i2u964_41
 19536   000038  EF20  F000         	goto	i2u964_40
 19537   00003C                     i2u964_41:
 19538   00003C  EF29  F000         	goto	i2l1446
 19539   000040                     i2u964_40:
 19540   000040  A2F2               	btfss	242,1,c	;volatile
 19541   000042  EF25  F000         	goto	i2u965_41
 19542   000046  EF27  F000         	goto	i2u965_40
 19543   00004A                     i2u965_41:
 19544   00004A  EF29  F000         	goto	i2l1446
 19545   00004E                     i2u965_40:
 19546   00004E                     
 19547                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 119:         INT0_ISR();
 19548   00004E  EC1B  F02B         	call	_INT0_ISR	;wreg free
 19549   000052                     i2l1446:
 19550                           
 19551                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 122:     if((1 == INTCON3bits.INT1E) &
      +                          & (1 == INTCON3bits.INT1F)){
 19552   000052  A6F0               	btfss	240,3,c	;volatile
 19553   000054  EF2E  F000         	goto	i2u966_41
 19554   000058  EF30  F000         	goto	i2u966_40
 19555   00005C                     i2u966_41:
 19556   00005C  EF39  F000         	goto	i2l1448
 19557   000060                     i2u966_40:
 19558   000060  A0F0               	btfss	240,0,c	;volatile
 19559   000062  EF35  F000         	goto	i2u967_41
 19560   000066  EF37  F000         	goto	i2u967_40
 19561   00006A                     i2u967_41:
 19562   00006A  EF39  F000         	goto	i2l1448
 19563   00006E                     i2u967_40:
 19564   00006E                     
 19565                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 123:         INT1_ISR();
 19566   00006E  EC19  F02B         	call	_INT1_ISR	;wreg free
 19567   000072                     i2l1448:
 19568                           
 19569                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 126:     if((1 == INTCON3bits.INT2IE) 
      +                          && (1 == INTCON3bits.INT2IF)){
 19570   000072  A8F0               	btfss	240,4,c	;volatile
 19571   000074  EF3E  F000         	goto	i2u968_41
 19572   000078  EF40  F000         	goto	i2u968_40
 19573   00007C                     i2u968_41:
 19574   00007C  EF49  F000         	goto	i2l1450
 19575   000080                     i2u968_40:
 19576   000080  A2F0               	btfss	240,1,c	;volatile
 19577   000082  EF45  F000         	goto	i2u969_41
 19578   000086  EF47  F000         	goto	i2u969_40
 19579   00008A                     i2u969_41:
 19580   00008A  EF49  F000         	goto	i2l1450
 19581   00008E                     i2u969_40:
 19582   00008E                     
 19583                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 127:         INT2_ISR();
 19584   00008E  EC17  F02B         	call	_INT2_ISR	;wreg free
 19585   000092                     i2l1450:
 19586                           
 19587                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 133:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 19588   000092  A6F2               	btfss	242,3,c	;volatile
 19589   000094  EF4E  F000         	goto	i2u970_41
 19590   000098  EF50  F000         	goto	i2u970_40
 19591   00009C                     i2u970_41:
 19592   00009C  EF6A  F000         	goto	i2l1452
 19593   0000A0                     i2u970_40:
 19594   0000A0  A0F2               	btfss	242,0,c	;volatile
 19595   0000A2  EF55  F000         	goto	i2u971_41
 19596   0000A6  EF57  F000         	goto	i2u971_40
 19597   0000AA                     i2u971_41:
 19598   0000AA  EF6A  F000         	goto	i2l1452
 19599   0000AE                     i2u971_40:
 19600   0000AE  A881               	btfss	129,4,c	;volatile
 19601   0000B0  EF5C  F000         	goto	i2u972_41
 19602   0000B4  EF5E  F000         	goto	i2u972_40
 19603   0000B8                     i2u972_41:
 19604   0000B8  EF6A  F000         	goto	i2l1452
 19605   0000BC                     i2u972_40:
 19606   0000BC  0436               	decf	_RB4_Flag^0,w,c	;volatile
 19607   0000BE  A4D8               	btfss	status,2,c
 19608   0000C0  EF64  F000         	goto	i2u973_41
 19609   0000C4  EF66  F000         	goto	i2u973_40
 19610   0000C8                     i2u973_41:
 19611   0000C8  EF6A  F000         	goto	i2l1452
 19612   0000CC                     i2u973_40:
 19613   0000CC                     
 19614                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 134:        (PORTBbits.RB4 == GPIO_Pin
      +                          _Logic_HIGH) && (RB4_Flag == 1)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 135: 
      +                                  RB4_Flag = 0;
 19615   0000CC  6A36               	clrf	_RB4_Flag^0,c	;volatile
 19616   0000CE                     
 19617                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 136:         RB4_ISR(0);
 19618   0000CE  0E00               	movlw	0
 19619   0000D0  EC46  F02A         	call	_RB4_ISR
 19620   0000D4                     i2l1452:
 19621                           
 19622                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 139:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 19623   0000D4  A6F2               	btfss	242,3,c	;volatile
 19624   0000D6  EF6F  F000         	goto	i2u974_41
 19625   0000DA  EF71  F000         	goto	i2u974_40
 19626   0000DE                     i2u974_41:
 19627   0000DE  EF8C  F000         	goto	i2l1454
 19628   0000E2                     i2u974_40:
 19629   0000E2  A0F2               	btfss	242,0,c	;volatile
 19630   0000E4  EF76  F000         	goto	i2u975_41
 19631   0000E8  EF78  F000         	goto	i2u975_40
 19632   0000EC                     i2u975_41:
 19633   0000EC  EF8C  F000         	goto	i2l1454
 19634   0000F0                     i2u975_40:
 19635   0000F0  B881               	btfsc	129,4,c	;volatile
 19636   0000F2  EF7D  F000         	goto	i2u976_41
 19637   0000F6  EF7F  F000         	goto	i2u976_40
 19638   0000FA                     i2u976_41:
 19639   0000FA  EF8C  F000         	goto	i2l1454
 19640   0000FE                     i2u976_40:
 19641   0000FE  5036               	movf	_RB4_Flag^0,w,c	;volatile
 19642   000100  A4D8               	btfss	status,2,c
 19643   000102  EF85  F000         	goto	i2u977_41
 19644   000106  EF87  F000         	goto	i2u977_40
 19645   00010A                     i2u977_41:
 19646   00010A  EF8C  F000         	goto	i2l1454
 19647   00010E                     i2u977_40:
 19648   00010E                     
 19649                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 140:        (PORTBbits.RB4 == GPIO_Pin
      +                          _Logic_LOW) && (RB4_Flag == 0)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 141:  
      +                                 RB4_Flag = 1;
 19650   00010E  0E01               	movlw	1
 19651   000110  6E36               	movwf	_RB4_Flag^0,c	;volatile
 19652   000112                     
 19653                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 142:         RB4_ISR(1);
 19654   000112  0E01               	movlw	1
 19655   000114  EC46  F02A         	call	_RB4_ISR
 19656   000118                     i2l1454:
 19657                           
 19658                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 145:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 19659   000118  A6F2               	btfss	242,3,c	;volatile
 19660   00011A  EF91  F000         	goto	i2u978_41
 19661   00011E  EF93  F000         	goto	i2u978_40
 19662   000122                     i2u978_41:
 19663   000122  EFAD  F000         	goto	i2l1456
 19664   000126                     i2u978_40:
 19665   000126  A0F2               	btfss	242,0,c	;volatile
 19666   000128  EF98  F000         	goto	i2u979_41
 19667   00012C  EF9A  F000         	goto	i2u979_40
 19668   000130                     i2u979_41:
 19669   000130  EFAD  F000         	goto	i2l1456
 19670   000134                     i2u979_40:
 19671   000134  AA81               	btfss	129,5,c	;volatile
 19672   000136  EF9F  F000         	goto	i2u980_41
 19673   00013A  EFA1  F000         	goto	i2u980_40
 19674   00013E                     i2u980_41:
 19675   00013E  EFAD  F000         	goto	i2l1456
 19676   000142                     i2u980_40:
 19677   000142  0435               	decf	_RB5_Flag^0,w,c	;volatile
 19678   000144  A4D8               	btfss	status,2,c
 19679   000146  EFA7  F000         	goto	i2u981_41
 19680   00014A  EFA9  F000         	goto	i2u981_40
 19681   00014E                     i2u981_41:
 19682   00014E  EFAD  F000         	goto	i2l1456
 19683   000152                     i2u981_40:
 19684   000152                     
 19685                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 146:        (PORTBbits.RB5 == GPIO_Pin
      +                          _Logic_HIGH) && (RB5_Flag == 1)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 147: 
      +                                  RB5_Flag = 0;
 19686   000152  6A35               	clrf	_RB5_Flag^0,c	;volatile
 19687   000154                     
 19688                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 148:         RB5_ISR(0);
 19689   000154  0E00               	movlw	0
 19690   000156  EC39  F02A         	call	_RB5_ISR
 19691   00015A                     i2l1456:
 19692                           
 19693                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 151:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 19694   00015A  A6F2               	btfss	242,3,c	;volatile
 19695   00015C  EFB2  F000         	goto	i2u982_41
 19696   000160  EFB4  F000         	goto	i2u982_40
 19697   000164                     i2u982_41:
 19698   000164  EFCF  F000         	goto	i2l1458
 19699   000168                     i2u982_40:
 19700   000168  A0F2               	btfss	242,0,c	;volatile
 19701   00016A  EFB9  F000         	goto	i2u983_41
 19702   00016E  EFBB  F000         	goto	i2u983_40
 19703   000172                     i2u983_41:
 19704   000172  EFCF  F000         	goto	i2l1458
 19705   000176                     i2u983_40:
 19706   000176  BA81               	btfsc	129,5,c	;volatile
 19707   000178  EFC0  F000         	goto	i2u984_41
 19708   00017C  EFC2  F000         	goto	i2u984_40
 19709   000180                     i2u984_41:
 19710   000180  EFCF  F000         	goto	i2l1458
 19711   000184                     i2u984_40:
 19712   000184  5035               	movf	_RB5_Flag^0,w,c	;volatile
 19713   000186  A4D8               	btfss	status,2,c
 19714   000188  EFC8  F000         	goto	i2u985_41
 19715   00018C  EFCA  F000         	goto	i2u985_40
 19716   000190                     i2u985_41:
 19717   000190  EFCF  F000         	goto	i2l1458
 19718   000194                     i2u985_40:
 19719   000194                     
 19720                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 152:        (PORTBbits.RB5 == GPIO_Pin
      +                          _Logic_LOW) && (RB5_Flag == 0)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 153:  
      +                                 RB5_Flag = 1;
 19721   000194  0E01               	movlw	1
 19722   000196  6E35               	movwf	_RB5_Flag^0,c	;volatile
 19723   000198                     
 19724                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 154:         RB5_ISR(1);
 19725   000198  0E01               	movlw	1
 19726   00019A  EC39  F02A         	call	_RB5_ISR
 19727   00019E                     i2l1458:
 19728                           
 19729                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 157:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 19730   00019E  A6F2               	btfss	242,3,c	;volatile
 19731   0001A0  EFD4  F000         	goto	i2u986_41
 19732   0001A4  EFD6  F000         	goto	i2u986_40
 19733   0001A8                     i2u986_41:
 19734   0001A8  EFF0  F000         	goto	i2l1460
 19735   0001AC                     i2u986_40:
 19736   0001AC  A0F2               	btfss	242,0,c	;volatile
 19737   0001AE  EFDB  F000         	goto	i2u987_41
 19738   0001B2  EFDD  F000         	goto	i2u987_40
 19739   0001B6                     i2u987_41:
 19740   0001B6  EFF0  F000         	goto	i2l1460
 19741   0001BA                     i2u987_40:
 19742   0001BA  AC81               	btfss	129,6,c	;volatile
 19743   0001BC  EFE2  F000         	goto	i2u988_41
 19744   0001C0  EFE4  F000         	goto	i2u988_40
 19745   0001C4                     i2u988_41:
 19746   0001C4  EFF0  F000         	goto	i2l1460
 19747   0001C8                     i2u988_40:
 19748   0001C8  0434               	decf	_RB6_Flag^0,w,c	;volatile
 19749   0001CA  A4D8               	btfss	status,2,c
 19750   0001CC  EFEA  F000         	goto	i2u989_41
 19751   0001D0  EFEC  F000         	goto	i2u989_40
 19752   0001D4                     i2u989_41:
 19753   0001D4  EFF0  F000         	goto	i2l1460
 19754   0001D8                     i2u989_40:
 19755   0001D8                     
 19756                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 158:        (PORTBbits.RB6 == GPIO_Pin
      +                          _Logic_HIGH) && (RB6_Flag == 1)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 159: 
      +                                  RB6_Flag = 0;
 19757   0001D8  6A34               	clrf	_RB6_Flag^0,c	;volatile
 19758   0001DA                     
 19759                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 160:         RB6_ISR(0);
 19760   0001DA  0E00               	movlw	0
 19761   0001DC  EC2C  F02A         	call	_RB6_ISR
 19762   0001E0                     i2l1460:
 19763                           
 19764                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 163:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 19765   0001E0  A6F2               	btfss	242,3,c	;volatile
 19766   0001E2  EFF5  F000         	goto	i2u990_41
 19767   0001E6  EFF7  F000         	goto	i2u990_40
 19768   0001EA                     i2u990_41:
 19769   0001EA  EF12  F001         	goto	i2l1462
 19770   0001EE                     i2u990_40:
 19771   0001EE  A0F2               	btfss	242,0,c	;volatile
 19772   0001F0  EFFC  F000         	goto	i2u991_41
 19773   0001F4  EFFE  F000         	goto	i2u991_40
 19774   0001F8                     i2u991_41:
 19775   0001F8  EF12  F001         	goto	i2l1462
 19776   0001FC                     i2u991_40:
 19777   0001FC  BC81               	btfsc	129,6,c	;volatile
 19778   0001FE  EF03  F001         	goto	i2u992_41
 19779   000202  EF05  F001         	goto	i2u992_40
 19780   000206                     i2u992_41:
 19781   000206  EF12  F001         	goto	i2l1462
 19782   00020A                     i2u992_40:
 19783   00020A  5034               	movf	_RB6_Flag^0,w,c	;volatile
 19784   00020C  A4D8               	btfss	status,2,c
 19785   00020E  EF0B  F001         	goto	i2u993_41
 19786   000212  EF0D  F001         	goto	i2u993_40
 19787   000216                     i2u993_41:
 19788   000216  EF12  F001         	goto	i2l1462
 19789   00021A                     i2u993_40:
 19790   00021A                     
 19791                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 164:        (PORTBbits.RB6 == GPIO_Pin
      +                          _Logic_LOW) && (RB6_Flag == 0)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 165:  
      +                                 RB6_Flag = 1;
 19792   00021A  0E01               	movlw	1
 19793   00021C  6E34               	movwf	_RB6_Flag^0,c	;volatile
 19794   00021E                     
 19795                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 166:         RB6_ISR(1);
 19796   00021E  0E01               	movlw	1
 19797   000220  EC2C  F02A         	call	_RB6_ISR
 19798   000224                     i2l1462:
 19799                           
 19800                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 169:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 19801   000224  A6F2               	btfss	242,3,c	;volatile
 19802   000226  EF17  F001         	goto	i2u994_41
 19803   00022A  EF19  F001         	goto	i2u994_40
 19804   00022E                     i2u994_41:
 19805   00022E  EF33  F001         	goto	i2l1464
 19806   000232                     i2u994_40:
 19807   000232  A0F2               	btfss	242,0,c	;volatile
 19808   000234  EF1E  F001         	goto	i2u995_41
 19809   000238  EF20  F001         	goto	i2u995_40
 19810   00023C                     i2u995_41:
 19811   00023C  EF33  F001         	goto	i2l1464
 19812   000240                     i2u995_40:
 19813   000240  AE81               	btfss	129,7,c	;volatile
 19814   000242  EF25  F001         	goto	i2u996_41
 19815   000246  EF27  F001         	goto	i2u996_40
 19816   00024A                     i2u996_41:
 19817   00024A  EF33  F001         	goto	i2l1464
 19818   00024E                     i2u996_40:
 19819   00024E  0433               	decf	_RB7_Flag^0,w,c	;volatile
 19820   000250  A4D8               	btfss	status,2,c
 19821   000252  EF2D  F001         	goto	i2u997_41
 19822   000256  EF2F  F001         	goto	i2u997_40
 19823   00025A                     i2u997_41:
 19824   00025A  EF33  F001         	goto	i2l1464
 19825   00025E                     i2u997_40:
 19826   00025E                     
 19827                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 170:        (PORTBbits.RB7 == GPIO_Pin
      +                          _Logic_HIGH) && (RB7_Flag == 1)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 171: 
      +                                  RB7_Flag = 0;
 19828   00025E  6A33               	clrf	_RB7_Flag^0,c	;volatile
 19829   000260                     
 19830                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 172:         RB7_ISR(0);
 19831   000260  0E00               	movlw	0
 19832   000262  EC1F  F02A         	call	_RB7_ISR
 19833   000266                     i2l1464:
 19834                           
 19835                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 175:     if((1 == INTCONbits.RBIE) && 
      +                          (1 == INTCONbits.RBIF) &&
 19836   000266  A6F2               	btfss	242,3,c	;volatile
 19837   000268  EF38  F001         	goto	i2u998_41
 19838   00026C  EF3A  F001         	goto	i2u998_40
 19839   000270                     i2u998_41:
 19840   000270  EF55  F001         	goto	i2l1466
 19841   000274                     i2u998_40:
 19842   000274  A0F2               	btfss	242,0,c	;volatile
 19843   000276  EF3F  F001         	goto	i2u999_41
 19844   00027A  EF41  F001         	goto	i2u999_40
 19845   00027E                     i2u999_41:
 19846   00027E  EF55  F001         	goto	i2l1466
 19847   000282                     i2u999_40:
 19848   000282  BE81               	btfsc	129,7,c	;volatile
 19849   000284  EF46  F001         	goto	i2u1000_41
 19850   000288  EF48  F001         	goto	i2u1000_40
 19851   00028C                     i2u1000_41:
 19852   00028C  EF55  F001         	goto	i2l1466
 19853   000290                     i2u1000_40:
 19854   000290  5033               	movf	_RB7_Flag^0,w,c	;volatile
 19855   000292  A4D8               	btfss	status,2,c
 19856   000294  EF4E  F001         	goto	i2u1001_41
 19857   000298  EF50  F001         	goto	i2u1001_40
 19858   00029C                     i2u1001_41:
 19859   00029C  EF55  F001         	goto	i2l1466
 19860   0002A0                     i2u1001_40:
 19861   0002A0                     
 19862                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 176:        (PORTBbits.RB7 == GPIO_Pin
      +                          _Logic_LOW) && (RB7_Flag == 0)){;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 177:  
      +                                 RB7_Flag = 1;
 19863   0002A0  0E01               	movlw	1
 19864   0002A2  6E33               	movwf	_RB7_Flag^0,c	;volatile
 19865   0002A4                     
 19866                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 178:         RB7_ISR(1);
 19867   0002A4  0E01               	movlw	1
 19868   0002A6  EC1F  F02A         	call	_RB7_ISR
 19869   0002AA                     i2l1466:
 19870                           
 19871                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 183:     if((1 == PIE1bits.ADIE) && (1
      +                           == PIR1bits.ADIF)){
 19872   0002AA  AC9D               	btfss	157,6,c	;volatile
 19873   0002AC  EF5A  F001         	goto	i2u1002_41
 19874   0002B0  EF5C  F001         	goto	i2u1002_40
 19875   0002B4                     i2u1002_41:
 19876   0002B4  EF65  F001         	goto	i2l1468
 19877   0002B8                     i2u1002_40:
 19878   0002B8  AC9E               	btfss	158,6,c	;volatile
 19879   0002BA  EF61  F001         	goto	i2u1003_41
 19880   0002BE  EF63  F001         	goto	i2u1003_40
 19881   0002C2                     i2u1003_41:
 19882   0002C2  EF65  F001         	goto	i2l1468
 19883   0002C6                     i2u1003_40:
 19884   0002C6                     
 19885                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 184:         ADC_ISR();
 19886   0002C6  EC21  F02B         	call	_ADC_ISR	;wreg free
 19887   0002CA                     i2l1468:
 19888                           
 19889                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 188:     if((1 == INTCONbits.TMR0IE) &
      +                          & (1 == INTCONbits.TMR0IF)){
 19890   0002CA  AAF2               	btfss	242,5,c	;volatile
 19891   0002CC  EF6A  F001         	goto	i2u1004_41
 19892   0002D0  EF6C  F001         	goto	i2u1004_40
 19893   0002D4                     i2u1004_41:
 19894   0002D4  EF75  F001         	goto	i2l1470
 19895   0002D8                     i2u1004_40:
 19896   0002D8  A4F2               	btfss	242,2,c	;volatile
 19897   0002DA  EF71  F001         	goto	i2u1005_41
 19898   0002DE  EF73  F001         	goto	i2u1005_40
 19899   0002E2                     i2u1005_41:
 19900   0002E2  EF75  F001         	goto	i2l1470
 19901   0002E6                     i2u1005_40:
 19902   0002E6                     
 19903                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 189:         TMR0_ISR();
 19904   0002E6  ECCE  F028         	call	_TMR0_ISR	;wreg free
 19905   0002EA                     i2l1470:
 19906                           
 19907                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 192:     if((1 == PIE1bits.TMR1IE) && 
      +                          (1 == PIR1bits.TMR1IF)){
 19908   0002EA  A09D               	btfss	157,0,c	;volatile
 19909   0002EC  EF7A  F001         	goto	i2u1006_41
 19910   0002F0  EF7C  F001         	goto	i2u1006_40
 19911   0002F4                     i2u1006_41:
 19912   0002F4  EF85  F001         	goto	i2l1472
 19913   0002F8                     i2u1006_40:
 19914   0002F8  A09E               	btfss	158,0,c	;volatile
 19915   0002FA  EF81  F001         	goto	i2u1007_41
 19916   0002FE  EF83  F001         	goto	i2u1007_40
 19917   000302                     i2u1007_41:
 19918   000302  EF85  F001         	goto	i2l1472
 19919   000306                     i2u1007_40:
 19920   000306                     
 19921                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 193:         TMR1_ISR();
 19922   000306  ECAB  F02A         	call	_TMR1_ISR	;wreg free
 19923   00030A                     i2l1472:
 19924                           
 19925                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 196:     if((1 == PIE1bits.TMR2IE) && 
      +                          (1 == PIR1bits.TMR2IF)){
 19926   00030A  A29D               	btfss	157,1,c	;volatile
 19927   00030C  EF8A  F001         	goto	i2u1008_41
 19928   000310  EF8C  F001         	goto	i2u1008_40
 19929   000314                     i2u1008_41:
 19930   000314  EF95  F001         	goto	i2l1474
 19931   000318                     i2u1008_40:
 19932   000318  A29E               	btfss	158,1,c	;volatile
 19933   00031A  EF91  F001         	goto	i2u1009_41
 19934   00031E  EF93  F001         	goto	i2u1009_40
 19935   000322                     i2u1009_41:
 19936   000322  EF95  F001         	goto	i2l1474
 19937   000326                     i2u1009_40:
 19938   000326                     
 19939                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 197:         TMR2_ISR();
 19940   000326  ECF1  F02A         	call	_TMR2_ISR	;wreg free
 19941   00032A                     i2l1474:
 19942                           
 19943                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 200:     if((1 == PIE2bits.TMR3IE) && 
      +                          (1 == PIR2bits.TMR3IF)){
 19944   00032A  A2A0               	btfss	160,1,c	;volatile
 19945   00032C  EF9A  F001         	goto	i2u1010_41
 19946   000330  EF9C  F001         	goto	i2u1010_40
 19947   000334                     i2u1010_41:
 19948   000334  EFA5  F001         	goto	i2l1476
 19949   000338                     i2u1010_40:
 19950   000338  A2A1               	btfss	161,1,c	;volatile
 19951   00033A  EFA1  F001         	goto	i2u1011_41
 19952   00033E  EFA3  F001         	goto	i2u1011_40
 19953   000342                     i2u1011_41:
 19954   000342  EFA5  F001         	goto	i2l1476
 19955   000346                     i2u1011_40:
 19956   000346                     
 19957                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 201:         TMR3_ISR();
 19958   000346  ECA4  F02A         	call	_TMR3_ISR	;wreg free
 19959   00034A                     i2l1476:
 19960                           
 19961                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 205:     if((1 == PIE1bits.TXIE) && (1
      +                           == PIR1bits.TXIF)){
 19962   00034A  A89D               	btfss	157,4,c	;volatile
 19963   00034C  EFAA  F001         	goto	i2u1012_41
 19964   000350  EFAC  F001         	goto	i2u1012_40
 19965   000354                     i2u1012_41:
 19966   000354  EFB5  F001         	goto	i2l1478
 19967   000358                     i2u1012_40:
 19968   000358  A89E               	btfss	158,4,c	;volatile
 19969   00035A  EFB1  F001         	goto	i2u1013_41
 19970   00035E  EFB3  F001         	goto	i2u1013_40
 19971   000362                     i2u1013_41:
 19972   000362  EFB5  F001         	goto	i2l1478
 19973   000366                     i2u1013_40:
 19974   000366                     
 19975                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 206:         EUSART_TX_ISR();
 19976   000366  EC1D  F02B         	call	_EUSART_TX_ISR	;wreg free
 19977   00036A                     i2l1478:
 19978                           
 19979                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 209:     if((1 == PIE1bits.RCIE) && (1
      +                           == PIR1bits.RCIF)){
 19980   00036A  AA9D               	btfss	157,5,c	;volatile
 19981   00036C  EFBA  F001         	goto	i2u1014_41
 19982   000370  EFBC  F001         	goto	i2u1014_40
 19983   000374                     i2u1014_41:
 19984   000374  EFC5  F001         	goto	i2l1480
 19985   000378                     i2u1014_40:
 19986   000378  AA9E               	btfss	158,5,c	;volatile
 19987   00037A  EFC1  F001         	goto	i2u1015_41
 19988   00037E  EFC3  F001         	goto	i2u1015_40
 19989   000382                     i2u1015_41:
 19990   000382  EFC5  F001         	goto	i2l1480
 19991   000386                     i2u1015_40:
 19992   000386                     
 19993                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 210:         EUSART_RX_ISR();
 19994   000386  EC23  F02B         	call	_EUSART_RX_ISR	;wreg free
 19995   00038A                     i2l1480:
 19996                           
 19997                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 215:     if((1 == PIE1bits.SSPIE) && (
      +                          1 == PIR1bits.SSPIF)){
 19998   00038A  A69D               	btfss	157,3,c	;volatile
 19999   00038C  EFCA  F001         	goto	i2u1016_41
 20000   000390  EFCC  F001         	goto	i2u1016_40
 20001   000394                     i2u1016_41:
 20002   000394  EFD5  F001         	goto	i2l1482
 20003   000398                     i2u1016_40:
 20004   000398  A69E               	btfss	158,3,c	;volatile
 20005   00039A  EFD1  F001         	goto	i2u1017_41
 20006   00039E  EFD3  F001         	goto	i2u1017_40
 20007   0003A2                     i2u1017_41:
 20008   0003A2  EFD5  F001         	goto	i2l1482
 20009   0003A6                     i2u1017_40:
 20010   0003A6                     
 20011                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 216:         MSSP_I2C_ISR();
 20012   0003A6  EC13  F02B         	call	_MSSP_I2C_ISR	;wreg free
 20013   0003AA                     i2l1482:
 20014                           
 20015                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 219:     if((1 == PIE2bits.BCLIE) && (
      +                          1 == PIR2bits.BCLIF)){
 20016   0003AA  A6A0               	btfss	160,3,c	;volatile
 20017   0003AC  EFDA  F001         	goto	i2u1018_41
 20018   0003B0  EFDC  F001         	goto	i2u1018_40
 20019   0003B4                     i2u1018_41:
 20020   0003B4  EFE5  F001         	goto	i2l1484
 20021   0003B8                     i2u1018_40:
 20022   0003B8  A6A1               	btfss	161,3,c	;volatile
 20023   0003BA  EFE1  F001         	goto	i2u1019_41
 20024   0003BE  EFE3  F001         	goto	i2u1019_40
 20025   0003C2                     i2u1019_41:
 20026   0003C2  EFE5  F001         	goto	i2l1484
 20027   0003C6                     i2u1019_40:
 20028   0003C6                     
 20029                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 220:         MSSP_I2C_BC_ISR();
 20030   0003C6  EC15  F02B         	call	_MSSP_I2C_BC_ISR	;wreg free
 20031   0003CA                     i2l1484:
 20032                           
 20033                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 223:     if((1 == PIE1bits.SSPIE) && (
      +                          1 == PIR1bits.SSPIF)){
 20034   0003CA  A69D               	btfss	157,3,c	;volatile
 20035   0003CC  EFEA  F001         	goto	i2u1020_41
 20036   0003D0  EFEC  F001         	goto	i2u1020_40
 20037   0003D4                     i2u1020_41:
 20038   0003D4  EFF5  F001         	goto	i2l1486
 20039   0003D8                     i2u1020_40:
 20040   0003D8  A69E               	btfss	158,3,c	;volatile
 20041   0003DA  EFF1  F001         	goto	i2u1021_41
 20042   0003DE  EFF3  F001         	goto	i2u1021_40
 20043   0003E2                     i2u1021_41:
 20044   0003E2  EFF5  F001         	goto	i2l1486
 20045   0003E6                     i2u1021_40:
 20046   0003E6                     
 20047                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 224:         MSSP_SPI_ISR();
 20048   0003E6  EC11  F02B         	call	_MSSP_SPI_ISR	;wreg free
 20049   0003EA                     i2l1486:
 20050                           
 20051                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 229:     if((1 == PIE1bits.CCP1IE) && 
      +                          (1 == PIR1bits.CCP1IF)){
 20052   0003EA  A49D               	btfss	157,2,c	;volatile
 20053   0003EC  EFFA  F001         	goto	i2u1022_41
 20054   0003F0  EFFC  F001         	goto	i2u1022_40
 20055   0003F4                     i2u1022_41:
 20056   0003F4  EF05  F002         	goto	i2l1488
 20057   0003F8                     i2u1022_40:
 20058   0003F8  A49E               	btfss	158,2,c	;volatile
 20059   0003FA  EF01  F002         	goto	i2u1023_41
 20060   0003FE  EF03  F002         	goto	i2u1023_40
 20061   000402                     i2u1023_41:
 20062   000402  EF05  F002         	goto	i2l1488
 20063   000406                     i2u1023_40:
 20064   000406                     
 20065                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 230:         CCP1_ISR();
 20066   000406  EC03  F029         	call	_CCP1_ISR	;wreg free
 20067   00040A                     i2l1488:
 20068                           
 20069                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 233:     if((1 == PIE2bits.CCP2IE) && 
      +                          (1 == PIR2bits.CCP2IF)){
 20070   00040A  A0A0               	btfss	160,0,c	;volatile
 20071   00040C  EF0A  F002         	goto	i2u1024_41
 20072   000410  EF0C  F002         	goto	i2u1024_40
 20073   000414                     i2u1024_41:
 20074   000414  EF15  F002         	goto	i2l1491
 20075   000418                     i2u1024_40:
 20076   000418  A0A1               	btfss	161,0,c	;volatile
 20077   00041A  EF11  F002         	goto	i2u1025_41
 20078   00041E  EF13  F002         	goto	i2u1025_40
 20079   000422                     i2u1025_41:
 20080   000422  EF15  F002         	goto	i2l1491
 20081   000426                     i2u1025_40:
 20082   000426                     
 20083                           ;MCAL_layer/Interrupts/mcal_interrupts_manager.c: 234:         CCP2_ISR();
 20084   000426  EC1F  F02B         	call	_CCP2_ISR	;wreg free
 20085   00042A                     i2l1491:
 20086   00042A  C021  FFF5         	movff	??_InterruptManager+9,tablat
 20087   00042E  C020  FFF8         	movff	??_InterruptManager+8,tblptru
 20088   000432  C01F  FFF7         	movff	??_InterruptManager+7,tblptrh
 20089   000436  C01E  FFF6         	movff	??_InterruptManager+6,tblptrl
 20090   00043A  C01D  FFDA         	movff	??_InterruptManager+5,fsr2h
 20091   00043E  C01C  FFD9         	movff	??_InterruptManager+4,fsr2l
 20092   000442  C01B  FFEA         	movff	??_InterruptManager+3,fsr0h
 20093   000446  C01A  FFE9         	movff	??_InterruptManager+2,fsr0l
 20094   00044A  C019  FFFB         	movff	??_InterruptManager+1,pclatu
 20095   00044E  C018  FFFA         	movff	??_InterruptManager,pclath
 20096   000452  923F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 20097   000454  0011               	retfie		f
 20098   000456                     __end_of_InterruptManager:
 20099                           	callstack 0
 20100                           
 20101 ;; *************** function _TMR3_ISR *****************
 20102 ;; Defined at:
 20103 ;;		line 170 in file "MCAL_layer/Timer3/hal_timer3.c"
 20104 ;; Parameters:    Size  Location     Type
 20105 ;;		None
 20106 ;; Auto vars:     Size  Location     Type
 20107 ;;		None
 20108 ;; Return value:  Size  Location     Type
 20109 ;;                  1    wreg      void 
 20110 ;; Registers used:
 20111 ;;		wreg, status,2
 20112 ;; Tracked objects:
 20113 ;;		On entry : 0/0
 20114 ;;		On exit  : 0/0
 20115 ;;		Unchanged: 0/0
 20116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20121 ;;Total ram usage:        0 bytes
 20122 ;; Hardware stack levels used: 1
 20123 ;; This function calls:
 20124 ;;		Nothing
 20125 ;; This function is called by:
 20126 ;;		_InterruptManager
 20127 ;; This function uses a non-reentrant model
 20128 ;;
 20129                           
 20130                           	psect	text101
 20131   005548                     __ptext101:
 20132                           	callstack 0
 20133   005548                     _TMR3_ISR:
 20134                           	callstack 18
 20135   005548                     
 20136                           ;MCAL_layer/Timer3/hal_timer3.c: 172:         (PIR2bits.TMR3IF = 0);
 20137   005548  92A1               	bcf	161,1,c	;volatile
 20138   00554A                     
 20139                           ;MCAL_layer/Timer3/hal_timer3.c: 174:         TMR3H = (uint8)(timer3_preload >> 8);
 20140   00554A  0100               	movlb	0	; () banked
 20141   00554C  5192               	movf	(_timer3_preload+1)& (0+255),w,b
 20142   00554E  6EB3               	movwf	179,c	;volatile
 20143   005550                     
 20144                           ; BSR set to: 0
 20145                           ;MCAL_layer/Timer3/hal_timer3.c: 175:         TMR3L = (uint8)(timer3_preload);
 20146   005550  C091  FFB2         	movff	_timer3_preload,4018	;volatile
 20147   005554                     
 20148                           ; BSR set to: 0
 20149   005554  0012               	return		;funcret
 20150   005556                     __end_of_TMR3_ISR:
 20151                           	callstack 0
 20152                           
 20153 ;; *************** function _TMR2_ISR *****************
 20154 ;; Defined at:
 20155 ;;		line 134 in file "MCAL_layer/Timer2/hal_timer2.c"
 20156 ;; Parameters:    Size  Location     Type
 20157 ;;		None
 20158 ;; Auto vars:     Size  Location     Type
 20159 ;;		None
 20160 ;; Return value:  Size  Location     Type
 20161 ;;                  1    wreg      void 
 20162 ;; Registers used:
 20163 ;;		None
 20164 ;; Tracked objects:
 20165 ;;		On entry : 0/0
 20166 ;;		On exit  : 0/0
 20167 ;;		Unchanged: 0/0
 20168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20173 ;;Total ram usage:        0 bytes
 20174 ;; Hardware stack levels used: 1
 20175 ;; This function calls:
 20176 ;;		Nothing
 20177 ;; This function is called by:
 20178 ;;		_InterruptManager
 20179 ;; This function uses a non-reentrant model
 20180 ;;
 20181                           
 20182                           	psect	text102
 20183   0055E2                     __ptext102:
 20184                           	callstack 0
 20185   0055E2                     _TMR2_ISR:
 20186                           	callstack 18
 20187   0055E2                     
 20188                           ;MCAL_layer/Timer2/hal_timer2.c: 136:         (PIR1bits.TMR2IF = 0);
 20189   0055E2  929E               	bcf	158,1,c	;volatile
 20190                           
 20191                           ;MCAL_layer/Timer2/hal_timer2.c: 138:         TMR2 = (uint8)(timer2_preload);
 20192   0055E4  C0C3  FFCC         	movff	_timer2_preload,4044	;volatile
 20193   0055E8  0012               	return		;funcret
 20194   0055EA                     __end_of_TMR2_ISR:
 20195                           	callstack 0
 20196                           
 20197 ;; *************** function _TMR1_ISR *****************
 20198 ;; Defined at:
 20199 ;;		line 180 in file "MCAL_layer/Timer1/hal_timer1.c"
 20200 ;; Parameters:    Size  Location     Type
 20201 ;;		None
 20202 ;; Auto vars:     Size  Location     Type
 20203 ;;		None
 20204 ;; Return value:  Size  Location     Type
 20205 ;;                  1    wreg      void 
 20206 ;; Registers used:
 20207 ;;		wreg, status,2
 20208 ;; Tracked objects:
 20209 ;;		On entry : 0/0
 20210 ;;		On exit  : 0/0
 20211 ;;		Unchanged: 0/0
 20212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20214 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20215 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20216 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20217 ;;Total ram usage:        0 bytes
 20218 ;; Hardware stack levels used: 1
 20219 ;; This function calls:
 20220 ;;		Nothing
 20221 ;; This function is called by:
 20222 ;;		_InterruptManager
 20223 ;; This function uses a non-reentrant model
 20224 ;;
 20225                           
 20226                           	psect	text103
 20227   005556                     __ptext103:
 20228                           	callstack 0
 20229   005556                     _TMR1_ISR:
 20230                           	callstack 18
 20231   005556                     
 20232                           ;MCAL_layer/Timer1/hal_timer1.c: 182:         (PIR1bits.TMR1IF = 0);
 20233   005556  909E               	bcf	158,0,c	;volatile
 20234   005558                     
 20235                           ;MCAL_layer/Timer1/hal_timer1.c: 184:         TMR1H = (uint8)(timer1_preload >> 8);
 20236   005558  0100               	movlb	0	; () banked
 20237   00555A  5198               	movf	(_timer1_preload+1)& (0+255),w,b
 20238   00555C  6ECF               	movwf	207,c	;volatile
 20239   00555E                     
 20240                           ; BSR set to: 0
 20241                           ;MCAL_layer/Timer1/hal_timer1.c: 185:         TMR1L = (uint8)(timer1_preload);
 20242   00555E  C097  FFCE         	movff	_timer1_preload,4046	;volatile
 20243   005562                     
 20244                           ; BSR set to: 0
 20245   005562  0012               	return		;funcret
 20246   005564                     __end_of_TMR1_ISR:
 20247                           	callstack 0
 20248                           
 20249 ;; *************** function _TMR0_ISR *****************
 20250 ;; Defined at:
 20251 ;;		line 202 in file "MCAL_layer/Timer0/hal_timer0.c"
 20252 ;; Parameters:    Size  Location     Type
 20253 ;;		None
 20254 ;; Auto vars:     Size  Location     Type
 20255 ;;		None
 20256 ;; Return value:  Size  Location     Type
 20257 ;;                  1    wreg      void 
 20258 ;; Registers used:
 20259 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, tblptrl, tblptrh, tblptru, cstack
 20260 ;; Tracked objects:
 20261 ;;		On entry : 0/0
 20262 ;;		On exit  : 0/0
 20263 ;;		Unchanged: 0/0
 20264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20269 ;;Total ram usage:        0 bytes
 20270 ;; Hardware stack levels used: 1
 20271 ;; Hardware stack levels required when called: 7
 20272 ;; This function calls:
 20273 ;;		NULL
 20274 ;;		_Timer0_DefaultInterruptHandler
 20275 ;; This function is called by:
 20276 ;;		_InterruptManager
 20277 ;; This function uses a non-reentrant model
 20278 ;;
 20279                           
 20280                           	psect	text104
 20281   00519C                     __ptext104:
 20282                           	callstack 0
 20283   00519C                     _TMR0_ISR:
 20284                           	callstack 11
 20285   00519C                     
 20286                           ;MCAL_layer/Timer0/hal_timer0.c: 204:         (INTCONbits.TMR0IF = 0);
 20287   00519C  94F2               	bcf	242,2,c	;volatile
 20288   00519E                     
 20289                           ;MCAL_layer/Timer0/hal_timer0.c: 206:         TMR0H = (timer0_preload) >> 8;
 20290   00519E  0100               	movlb	0	; () banked
 20291   0051A0  519C               	movf	(_timer0_preload+1)& (0+255),w,b
 20292   0051A2  6ED7               	movwf	215,c	;volatile
 20293   0051A4                     
 20294                           ; BSR set to: 0
 20295                           ;MCAL_layer/Timer0/hal_timer0.c: 207:         TMR0L = (uint8)(timer0_preload);
 20296   0051A4  C09B  FFD6         	movff	_timer0_preload,4054	;volatile
 20297   0051A8                     
 20298                           ; BSR set to: 0
 20299                           ;MCAL_layer/Timer0/hal_timer0.c: 209:         if(Timer0_InterruptHandler) Timer0_Interru
      +                          ptHandler();
 20300   0051A8  519D               	movf	_Timer0_InterruptHandler& (0+255),w,b
 20301   0051AA  119E               	iorwf	(_Timer0_InterruptHandler+1)& (0+255),w,b
 20302   0051AC  B4D8               	btfsc	status,2,c
 20303   0051AE  EFDB  F028         	goto	i2u845_41
 20304   0051B2  EFDD  F028         	goto	i2u845_40
 20305   0051B6                     i2u845_41:
 20306   0051B6  EFE9  F028         	goto	i2l1744
 20307   0051BA                     i2u845_40:
 20308   0051BA                     
 20309                           ; BSR set to: 0
 20310   0051BA  D802               	call	i2u846_48
 20311   0051BC  EFE9  F028         	goto	i2u846_49
 20312   0051C0                     i2u846_48:
 20313   0051C0  0005               	push	
 20314   0051C2  6EFA               	movwf	pclath,c
 20315   0051C4  519D               	movf	_Timer0_InterruptHandler& (0+255),w,b
 20316   0051C6  6EFD               	movwf	tosl,c
 20317   0051C8  519E               	movf	(_Timer0_InterruptHandler+1)& (0+255),w,b
 20318   0051CA  6EFE               	movwf	tosh,c
 20319   0051CC  6AFF               	clrf	tosu,c
 20320   0051CE  50FA               	movf	pclath,w,c
 20321   0051D0  0012               	return		;indir
 20322   0051D2                     i2u846_49:
 20323   0051D2                     i2l1744:
 20324   0051D2  0012               	return		;funcret
 20325   0051D4                     __end_of_TMR0_ISR:
 20326                           	callstack 0
 20327                           
 20328 ;; *************** function _Timer0_DefaultInterruptHandler *****************
 20329 ;; Defined at:
 20330 ;;		line 454 in file "main.c"
 20331 ;; Parameters:    Size  Location     Type
 20332 ;;		None
 20333 ;; Auto vars:     Size  Location     Type
 20334 ;;		None
 20335 ;; Return value:  Size  Location     Type
 20336 ;;                  1    wreg      void 
 20337 ;; Registers used:
 20338 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20339 ;; Tracked objects:
 20340 ;;		On entry : 0/0
 20341 ;;		On exit  : 0/0
 20342 ;;		Unchanged: 0/0
 20343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20345 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20347 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20348 ;;Total ram usage:        0 bytes
 20349 ;; Hardware stack levels used: 1
 20350 ;; Hardware stack levels required when called: 6
 20351 ;; This function calls:
 20352 ;;		___awdiv
 20353 ;;		___awmod
 20354 ;;		i2_update_display
 20355 ;; This function is called by:
 20356 ;;		_TMR0_ISR
 20357 ;; This function uses a non-reentrant model
 20358 ;;
 20359                           
 20360                           	psect	text105
 20361   003AF8                     __ptext105:
 20362                           	callstack 0
 20363   003AF8                     _Timer0_DefaultInterruptHandler:
 20364                           	callstack 11
 20365   003AF8                     
 20366                           ;main.c: 455:     if(seconds ==0){
 20367   003AF8  5026               	movf	_seconds^0,w,c
 20368   003AFA  A4D8               	btfss	status,2,c
 20369   003AFC  EF82  F01D         	goto	i2u817_41
 20370   003B00  EF84  F01D         	goto	i2u817_40
 20371   003B04                     i2u817_41:
 20372   003B04  EF92  F01D         	goto	i2l10132
 20373   003B08                     i2u817_40:
 20374   003B08                     
 20375                           ;main.c: 456:         seconds = 60 ;
 20376   003B08  0E3C               	movlw	60
 20377   003B0A  6E26               	movwf	_seconds^0,c
 20378                           
 20379                           ;main.c: 457:         if(minutes ==0){
 20380   003B0C  5025               	movf	_minutes^0,w,c
 20381   003B0E  A4D8               	btfss	status,2,c
 20382   003B10  EF8C  F01D         	goto	i2u818_41
 20383   003B14  EF8E  F01D         	goto	i2u818_40
 20384   003B18                     i2u818_41:
 20385   003B18  EF91  F01D         	goto	i2l10130
 20386   003B1C                     i2u818_40:
 20387   003B1C                     
 20388                           ;main.c: 458:             minutes = 60 ;
 20389   003B1C  0E3C               	movlw	60
 20390   003B1E  6E25               	movwf	_minutes^0,c
 20391   003B20                     
 20392                           ;main.c: 459:             hours--;
 20393   003B20  0624               	decf	_hours^0,f,c
 20394   003B22                     i2l10130:
 20395                           
 20396                           ;main.c: 461:         minutes--;
 20397   003B22  0625               	decf	_minutes^0,f,c
 20398   003B24                     i2l10132:
 20399                           
 20400                           ;main.c: 463:     seconds--;
 20401   003B24  0626               	decf	_seconds^0,f,c
 20402   003B26                     
 20403                           ;main.c: 464:     time_array[4] = seconds /10;
 20404   003B26  C026  F001         	movff	_seconds,___awdiv@dividend
 20405   003B2A  6A02               	clrf	(___awdiv@dividend+1)^0,c
 20406   003B2C  0E00               	movlw	0
 20407   003B2E  6E04               	movwf	(___awdiv@divisor+1)^0,c
 20408   003B30  0E0A               	movlw	10
 20409   003B32  6E03               	movwf	___awdiv@divisor^0,c
 20410   003B34  EC3F  F01E         	call	___awdiv	;wreg free
 20411   003B38  5001               	movf	?___awdiv^0,w,c
 20412   003B3A  0100               	movlb	0	; () banked
 20413   003B3C  6F81               	movwf	(_time_array+4)& (0+255),b
 20414   003B3E                     
 20415                           ; BSR set to: 0
 20416                           ;main.c: 465:     time_array[5] = seconds % 10;
 20417   003B3E  C026  F001         	movff	_seconds,___awmod@dividend
 20418   003B42  6A02               	clrf	(___awmod@dividend+1)^0,c
 20419   003B44  0E00               	movlw	0
 20420   003B46  6E04               	movwf	(___awmod@divisor+1)^0,c
 20421   003B48  0E0A               	movlw	10
 20422   003B4A  6E03               	movwf	___awmod@divisor^0,c
 20423   003B4C  ECB3  F01F         	call	___awmod	;wreg free
 20424   003B50  5001               	movf	?___awmod^0,w,c
 20425   003B52  0100               	movlb	0	; () banked
 20426   003B54  6F82               	movwf	(_time_array+5)& (0+255),b
 20427   003B56                     
 20428                           ; BSR set to: 0
 20429                           ;main.c: 466:     time_array[2] = minutes /10;
 20430   003B56  C025  F001         	movff	_minutes,___awdiv@dividend
 20431   003B5A  6A02               	clrf	(___awdiv@dividend+1)^0,c
 20432   003B5C  0E00               	movlw	0
 20433   003B5E  6E04               	movwf	(___awdiv@divisor+1)^0,c
 20434   003B60  0E0A               	movlw	10
 20435   003B62  6E03               	movwf	___awdiv@divisor^0,c
 20436   003B64  EC3F  F01E         	call	___awdiv	;wreg free
 20437   003B68  5001               	movf	?___awdiv^0,w,c
 20438   003B6A  0100               	movlb	0	; () banked
 20439   003B6C  6F7F               	movwf	(_time_array+2)& (0+255),b
 20440   003B6E                     
 20441                           ; BSR set to: 0
 20442                           ;main.c: 467:     time_array[3] = minutes % 10;
 20443   003B6E  C025  F001         	movff	_minutes,___awmod@dividend
 20444   003B72  6A02               	clrf	(___awmod@dividend+1)^0,c
 20445   003B74  0E00               	movlw	0
 20446   003B76  6E04               	movwf	(___awmod@divisor+1)^0,c
 20447   003B78  0E0A               	movlw	10
 20448   003B7A  6E03               	movwf	___awmod@divisor^0,c
 20449   003B7C  ECB3  F01F         	call	___awmod	;wreg free
 20450   003B80  5001               	movf	?___awmod^0,w,c
 20451   003B82  0100               	movlb	0	; () banked
 20452   003B84  6F80               	movwf	(_time_array+3)& (0+255),b
 20453   003B86                     
 20454                           ; BSR set to: 0
 20455                           ;main.c: 468:     time_array[0] = hours /10;
 20456   003B86  C024  F001         	movff	_hours,___awdiv@dividend
 20457   003B8A  6A02               	clrf	(___awdiv@dividend+1)^0,c
 20458   003B8C  0E00               	movlw	0
 20459   003B8E  6E04               	movwf	(___awdiv@divisor+1)^0,c
 20460   003B90  0E0A               	movlw	10
 20461   003B92  6E03               	movwf	___awdiv@divisor^0,c
 20462   003B94  EC3F  F01E         	call	___awdiv	;wreg free
 20463   003B98  5001               	movf	?___awdiv^0,w,c
 20464   003B9A  0100               	movlb	0	; () banked
 20465   003B9C  6F7D               	movwf	_time_array& (0+255),b
 20466   003B9E                     
 20467                           ; BSR set to: 0
 20468                           ;main.c: 469:     time_array[1] = hours %10;
 20469   003B9E  C024  F001         	movff	_hours,___awmod@dividend
 20470   003BA2  6A02               	clrf	(___awmod@dividend+1)^0,c
 20471   003BA4  0E00               	movlw	0
 20472   003BA6  6E04               	movwf	(___awmod@divisor+1)^0,c
 20473   003BA8  0E0A               	movlw	10
 20474   003BAA  6E03               	movwf	___awmod@divisor^0,c
 20475   003BAC  ECB3  F01F         	call	___awmod	;wreg free
 20476   003BB0  5001               	movf	?___awmod^0,w,c
 20477   003BB2  0100               	movlb	0	; () banked
 20478   003BB4  6F7E               	movwf	(_time_array+1)& (0+255),b
 20479   003BB6                     
 20480                           ; BSR set to: 0
 20481                           ;main.c: 471:     update_display();
 20482   003BB6  ECAE  F01B         	call	i2_update_display	;wreg free
 20483   003BBA  0012               	return		;funcret
 20484   003BBC                     __end_of_Timer0_DefaultInterruptHandler:
 20485                           	callstack 0
 20486                           
 20487 ;; *************** function i2_update_display *****************
 20488 ;; Defined at:
 20489 ;;		line 166 in file "main.c"
 20490 ;; Parameters:    Size  Location     Type
 20491 ;;		None
 20492 ;; Auto vars:     Size  Location     Type
 20493 ;;		None
 20494 ;; Return value:  Size  Location     Type
 20495 ;;                  1    wreg      void 
 20496 ;; Registers used:
 20497 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20498 ;; Tracked objects:
 20499 ;;		On entry : 0/0
 20500 ;;		On exit  : 0/0
 20501 ;;		Unchanged: 0/0
 20502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20507 ;;Total ram usage:        0 bytes
 20508 ;; Hardware stack levels used: 1
 20509 ;; Hardware stack levels required when called: 5
 20510 ;; This function calls:
 20511 ;;		i2_ECU_LCD_4Bit_Send_Command
 20512 ;;		i2_ECU_LCD_4Bit_Send_String_Data_Postition
 20513 ;;		i2_ECU_LCD_4Bit_Send_char_Data
 20514 ;;		i2_LCD_4Bits_Set_Curser
 20515 ;; This function is called by:
 20516 ;;		_Timer0_DefaultInterruptHandler
 20517 ;; This function uses a non-reentrant model
 20518 ;;
 20519                           
 20520                           	psect	text106
 20521   00375C                     __ptext106:
 20522                           	callstack 0
 20523   00375C                     i2_update_display:
 20524                           	callstack 11
 20525   00375C                     
 20526                           ;main.c: 167:     ret = ECU_LCD_4Bit_Send_Command(&LCD_1, 0x0D);
 20527   00375C  0E37               	movlw	low _LCD_1
 20528   00375E  6E0B               	movwf	i2ECU_LCD_4Bit_Send_Command@_LCD^0,c
 20529   003760  0E0D               	movlw	13
 20530   003762  6E0C               	movwf	i2ECU_LCD_4Bit_Send_Command@_Command^0,c
 20531   003764  EC08  F027         	call	i2_ECU_LCD_4Bit_Send_Command	;wreg free
 20532   003768  0101               	movlb	1	; () banked
 20533   00376A  6F96               	movwf	_ret& (0+255),b
 20534                           
 20535                           ;main.c: 168:     ret = LCD_4Bits_Set_Curser(&LCD_1, 1,1);
 20536   00376C  0E37               	movlw	low _LCD_1
 20537   00376E  6E0E               	movwf	i2LCD_4Bits_Set_Curser@_LCD^0,c
 20538   003770  0E01               	movlw	1
 20539   003772  6E0F               	movwf	i2LCD_4Bits_Set_Curser@row^0,c
 20540   003774  0E01               	movlw	1
 20541   003776  6E10               	movwf	i2LCD_4Bits_Set_Curser@coloumn^0,c
 20542   003778  ECE2  F021         	call	i2_LCD_4Bits_Set_Curser	;wreg free
 20543   00377C  0101               	movlb	1	; () banked
 20544   00377E  6F96               	movwf	_ret& (0+255),b
 20545                           
 20546                           ;main.c: 170:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[0] + '0');
 20547   003780  0E37               	movlw	low _LCD_1
 20548   003782  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 20549   003784  0100               	movlb	0	; () banked
 20550   003786  517D               	movf	_time_array& (0+255),w,b
 20551   003788  0F30               	addlw	48
 20552   00378A  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 20553   00378C  EC36  F027         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 20554   003790  0101               	movlb	1	; () banked
 20555   003792  6F96               	movwf	_ret& (0+255),b
 20556                           
 20557                           ;main.c: 171:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[1] + '0');
 20558   003794  0E37               	movlw	low _LCD_1
 20559   003796  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 20560   003798  0100               	movlb	0	; () banked
 20561   00379A  517E               	movf	(_time_array+1)& (0+255),w,b
 20562   00379C  0F30               	addlw	48
 20563   00379E  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 20564   0037A0  EC36  F027         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 20565   0037A4  0101               	movlb	1	; () banked
 20566   0037A6  6F96               	movwf	_ret& (0+255),b
 20567                           
 20568                           ;main.c: 172:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, ':');
 20569   0037A8  0E37               	movlw	low _LCD_1
 20570   0037AA  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 20571   0037AC  0E3A               	movlw	58
 20572   0037AE  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 20573   0037B0  EC36  F027         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 20574   0037B4  0101               	movlb	1	; () banked
 20575   0037B6  6F96               	movwf	_ret& (0+255),b
 20576                           
 20577                           ;main.c: 173:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[2] + '0');
 20578   0037B8  0E37               	movlw	low _LCD_1
 20579   0037BA  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 20580   0037BC  0100               	movlb	0	; () banked
 20581   0037BE  517F               	movf	(_time_array+2)& (0+255),w,b
 20582   0037C0  0F30               	addlw	48
 20583   0037C2  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 20584   0037C4  EC36  F027         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 20585   0037C8  0101               	movlb	1	; () banked
 20586   0037CA  6F96               	movwf	_ret& (0+255),b
 20587                           
 20588                           ;main.c: 174:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[3] + '0');
 20589   0037CC  0E37               	movlw	low _LCD_1
 20590   0037CE  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 20591   0037D0  0100               	movlb	0	; () banked
 20592   0037D2  5180               	movf	(_time_array+3)& (0+255),w,b
 20593   0037D4  0F30               	addlw	48
 20594   0037D6  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 20595   0037D8  EC36  F027         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 20596   0037DC  0101               	movlb	1	; () banked
 20597   0037DE  6F96               	movwf	_ret& (0+255),b
 20598                           
 20599                           ;main.c: 175:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, ':');
 20600   0037E0  0E37               	movlw	low _LCD_1
 20601   0037E2  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 20602   0037E4  0E3A               	movlw	58
 20603   0037E6  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 20604   0037E8  EC36  F027         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 20605   0037EC  0101               	movlb	1	; () banked
 20606   0037EE  6F96               	movwf	_ret& (0+255),b
 20607                           
 20608                           ;main.c: 176:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[4] + '0');
 20609   0037F0  0E37               	movlw	low _LCD_1
 20610   0037F2  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 20611   0037F4  0100               	movlb	0	; () banked
 20612   0037F6  5181               	movf	(_time_array+4)& (0+255),w,b
 20613   0037F8  0F30               	addlw	48
 20614   0037FA  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 20615   0037FC  EC36  F027         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 20616   003800  0101               	movlb	1	; () banked
 20617   003802  6F96               	movwf	_ret& (0+255),b
 20618                           
 20619                           ;main.c: 177:     ret = ECU_LCD_4Bit_Send_char_Data(&LCD_1, time_array[5] + '0');
 20620   003804  0E37               	movlw	low _LCD_1
 20621   003806  6E0B               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,c
 20622   003808  0100               	movlb	0	; () banked
 20623   00380A  5182               	movf	(_time_array+5)& (0+255),w,b
 20624   00380C  0F30               	addlw	48
 20625   00380E  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 20626   003810  EC36  F027         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 20627   003814  0101               	movlb	1	; () banked
 20628   003816  6F96               	movwf	_ret& (0+255),b
 20629   003818                     
 20630                           ; BSR set to: 1
 20631                           ;main.c: 179:     ret = ECU_LCD_4Bit_Send_String_Data_Postition(&LCD_1,2,6, "Stop Watch"
      +                          );
 20632   003818  0E37               	movlw	low _LCD_1
 20633   00381A  6E12               	movwf	i2ECU_LCD_4Bit_Send_String_Data_Postition@_LCD^0,c
 20634   00381C  0E02               	movlw	2
 20635   00381E  6E13               	movwf	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Row^0,c
 20636   003820  0E06               	movlw	6
 20637   003822  6E14               	movwf	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn^0,c
 20638   003824  0E21               	movlw	low STR_5
 20639   003826  6E15               	movwf	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str^0,c
 20640   003828  5015               	movf	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str^0,w,c
 20641   00382A  A4D8               	btfss	status,2,c
 20642   00382C  0E10               	movlw	high __smallconst
 20643   00382E  6E16               	movwf	(i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)^0,c
 20644   003830  EC98  F021         	call	i2_ECU_LCD_4Bit_Send_String_Data_Postition	;wreg free
 20645   003834  0101               	movlb	1	; () banked
 20646   003836  6F96               	movwf	_ret& (0+255),b
 20647   003838                     
 20648                           ; BSR set to: 1
 20649                           ;main.c: 180:     ret = LCD_4Bits_Set_Curser (&LCD_1, 1,9);
 20650   003838  0E37               	movlw	low _LCD_1
 20651   00383A  6E0E               	movwf	i2LCD_4Bits_Set_Curser@_LCD^0,c
 20652   00383C  0E01               	movlw	1
 20653   00383E  6E0F               	movwf	i2LCD_4Bits_Set_Curser@row^0,c
 20654   003840  0E09               	movlw	9
 20655   003842  6E10               	movwf	i2LCD_4Bits_Set_Curser@coloumn^0,c
 20656   003844  ECE2  F021         	call	i2_LCD_4Bits_Set_Curser	;wreg free
 20657   003848  0101               	movlb	1	; () banked
 20658   00384A  6F96               	movwf	_ret& (0+255),b
 20659   00384C                     
 20660                           ; BSR set to: 1
 20661   00384C  0012               	return		;funcret
 20662   00384E                     __end_ofi2_update_display:
 20663                           	callstack 0
 20664                           
 20665 ;; *************** function i2_ECU_LCD_4Bit_Send_String_Data_Postition *****************
 20666 ;; Defined at:
 20667 ;;		line 123 in file "ECU_layer/LCD/LCD.c"
 20668 ;; Parameters:    Size  Location     Type
 20669 ;;  _LCD            1   17[COMRAM] PTR const struct .
 20670 ;;		 -> LCD_1(6), 
 20671 ;;  _Row            1   18[COMRAM] unsigned char 
 20672 ;;  _Coloumn        1   19[COMRAM] unsigned char 
 20673 ;;  _Str            2   20[COMRAM] PTR unsigned char 
 20674 ;;		 -> STR_9(9), STR_8(9), STR_7(8), STR_6(8), 
 20675 ;;		 -> STR_5(11), REALTIMECLOCK_DS1307_Data(18), 
 20676 ;; Auto vars:     Size  Location     Type
 20677 ;;  rt              1   22[COMRAM] unsigned char 
 20678 ;; Return value:  Size  Location     Type
 20679 ;;                  1    wreg      unsigned char 
 20680 ;; Registers used:
 20681 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20682 ;; Tracked objects:
 20683 ;;		On entry : 0/0
 20684 ;;		On exit  : 0/0
 20685 ;;		Unchanged: 0/0
 20686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20687 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20688 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20690 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20691 ;;Total ram usage:        6 bytes
 20692 ;; Hardware stack levels used: 1
 20693 ;; Hardware stack levels required when called: 4
 20694 ;; This function calls:
 20695 ;;		i2_ECU_LCD_4Bit_Send_char_Data
 20696 ;;		i2_LCD_4Bits_Set_Curser
 20697 ;; This function is called by:
 20698 ;;		i2_update_display
 20699 ;; This function uses a non-reentrant model
 20700 ;;
 20701                           
 20702                           	psect	text107
 20703   004330                     __ptext107:
 20704                           	callstack 0
 20705   004330                     i2_ECU_LCD_4Bit_Send_String_Data_Postition:
 20706                           	callstack 11
 20707   004330                     
 20708                           ;ECU_layer/LCD/LCD.c: 124:     STD_ReturnType rt = (STD_ReturnType)0x00;
 20709   004330  6A17               	clrf	i2ECU_LCD_4Bit_Send_String_Data_Postition@rt^0,c
 20710   004332                     
 20711                           ;ECU_layer/LCD/LCD.c: 125:      if(((void*)0) == _LCD){
 20712   004332  5012               	movf	i2ECU_LCD_4Bit_Send_String_Data_Postition@_LCD^0,w,c
 20713   004334  A4D8               	btfss	status,2,c
 20714   004336  EF9F  F021         	goto	i2u743_41
 20715   00433A  EFA1  F021         	goto	i2u743_40
 20716   00433E                     i2u743_41:
 20717   00433E  EFA4  F021         	goto	i2l9520
 20718   004342                     i2u743_40:
 20719   004342                     
 20720                           ;ECU_layer/LCD/LCD.c: 126:         rt = (STD_ReturnType)0x00;
 20721   004342  6A17               	clrf	i2ECU_LCD_4Bit_Send_String_Data_Postition@rt^0,c
 20722                           
 20723                           ;ECU_layer/LCD/LCD.c: 127:     }
 20724   004344  EFE0  F021         	goto	i2l9528
 20725   004348                     i2l9520:
 20726                           
 20727                           ;ECU_layer/LCD/LCD.c: 129:         LCD_4Bits_Set_Curser(_LCD, _Row, _Coloumn);
 20728   004348  C012  F00E         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_LCD,i2LCD_4Bits_Set_Curser@_LCD
 20729   00434C  C013  F00F         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Row,i2LCD_4Bits_Set_Curser@row
 20730   004350  C014  F010         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn,i2LCD_4Bits_Set_Curser@coloumn
 20731   004354  ECE2  F021         	call	i2_LCD_4Bits_Set_Curser	;wreg free
 20732                           
 20733                           ;ECU_layer/LCD/LCD.c: 130:         while(*_Str){
 20734   004358  EFC7  F021         	goto	i2l9526
 20735   00435C                     i2l9522:
 20736                           
 20737                           ;ECU_layer/LCD/LCD.c: 131:              rt = ECU_LCD_4Bit_Send_char_Data (_LCD, *_Str++)
      +                          ;
 20738   00435C  C012  F00B         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_LCD,i2ECU_LCD_4Bit_Send_char_Data@_LCD
 20739   004360  C015  FFF6         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str,tblptrl
 20740   004364  C016  FFF7         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1,tblptrh
 20741   004368  0E00               	movlw	low (__smallconst shr (0+16))
 20742   00436A  6EF8               	movwf	tblptru,c
 20743   00436C  0E0F               	movlw	(high __ramtop+-1)
 20744   00436E  64F7               	cpfsgt	tblptrh,c
 20745   004370  D003               	bra	i2u744_47
 20746   004372  0008               	tblrd		*
 20747   004374  50F5               	movf	tablat,w,c
 20748   004376  D005               	bra	i2u744_40
 20749   004378                     i2u744_47:
 20750   004378  CFF6 FFE9          	movff	tblptrl,fsr0l
 20751   00437C  CFF7 FFEA          	movff	tblptrh,fsr0h
 20752   004380  50EF               	movf	indf0,w,c
 20753   004382                     i2u744_40:
 20754   004382  6E0C               	movwf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,c
 20755   004384  EC36  F027         	call	i2_ECU_LCD_4Bit_Send_char_Data	;wreg free
 20756   004388  6E17               	movwf	i2ECU_LCD_4Bit_Send_String_Data_Postition@rt^0,c
 20757   00438A  4A15               	infsnz	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str^0,f,c
 20758   00438C  2A16               	incf	(i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1)^0,f,c
 20759   00438E                     i2l9526:
 20760                           
 20761                           ;ECU_layer/LCD/LCD.c: 130:         while(*_Str){
 20762   00438E  C015  FFF6         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str,tblptrl
 20763   004392  C016  FFF7         	movff	i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str+1,tblptrh
 20764   004396  0E00               	movlw	low (__smallconst shr (0+16))
 20765   004398  6EF8               	movwf	tblptru,c
 20766   00439A  0E0F               	movlw	(high __ramtop+-1)
 20767   00439C  64F7               	cpfsgt	tblptrh,c
 20768   00439E  D003               	bra	i2u745_47
 20769   0043A0  0008               	tblrd		*
 20770   0043A2  50F5               	movf	tablat,w,c
 20771   0043A4  D005               	bra	i2u745_40
 20772   0043A6                     i2u745_47:
 20773   0043A6  CFF6 FFE9          	movff	tblptrl,fsr0l
 20774   0043AA  CFF7 FFEA          	movff	tblptrh,fsr0h
 20775   0043AE  50EF               	movf	indf0,w,c
 20776   0043B0                     i2u745_40:
 20777   0043B0  0900               	iorlw	0
 20778   0043B2  A4D8               	btfss	status,2,c
 20779   0043B4  EFDE  F021         	goto	i2u746_41
 20780   0043B8  EFE0  F021         	goto	i2u746_40
 20781   0043BC                     i2u746_41:
 20782   0043BC  EFAE  F021         	goto	i2l9522
 20783   0043C0                     i2u746_40:
 20784   0043C0                     i2l9528:
 20785                           
 20786                           ;ECU_layer/LCD/LCD.c: 136:     return rt;
 20787   0043C0  5017               	movf	i2ECU_LCD_4Bit_Send_String_Data_Postition@rt^0,w,c
 20788   0043C2  0012               	return		;funcret
 20789   0043C4                     __end_ofi2_ECU_LCD_4Bit_Send_String_Data_Postition:
 20790                           	callstack 0
 20791                           
 20792 ;; *************** function i2_LCD_4Bits_Set_Curser *****************
 20793 ;; Defined at:
 20794 ;;		line 383 in file "ECU_layer/LCD/LCD.c"
 20795 ;; Parameters:    Size  Location     Type
 20796 ;;  _LCD            1   13[COMRAM] PTR const struct .
 20797 ;;		 -> LCD_1(6), 
 20798 ;;  row             1   14[COMRAM] unsigned char 
 20799 ;;  coloumn         1   15[COMRAM] unsigned char 
 20800 ;; Auto vars:     Size  Location     Type
 20801 ;;  rt              1   16[COMRAM] unsigned char 
 20802 ;; Return value:  Size  Location     Type
 20803 ;;                  1    wreg      unsigned char 
 20804 ;; Registers used:
 20805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20806 ;; Tracked objects:
 20807 ;;		On entry : 0/0
 20808 ;;		On exit  : 0/0
 20809 ;;		Unchanged: 0/0
 20810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20811 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20815 ;;Total ram usage:        4 bytes
 20816 ;; Hardware stack levels used: 1
 20817 ;; Hardware stack levels required when called: 3
 20818 ;; This function calls:
 20819 ;;		i2_ECU_LCD_4Bit_Send_Command
 20820 ;; This function is called by:
 20821 ;;		i2_ECU_LCD_4Bit_Send_String_Data_Postition
 20822 ;;		i2_update_display
 20823 ;; This function uses a non-reentrant model
 20824 ;;
 20825                           
 20826                           	psect	text108
 20827   0043C4                     __ptext108:
 20828                           	callstack 0
 20829   0043C4                     i2_LCD_4Bits_Set_Curser:
 20830                           	callstack 12
 20831   0043C4                     
 20832                           ;ECU_layer/LCD/LCD.c: 384:      STD_ReturnType rt = (STD_ReturnType)0x00;
 20833   0043C4  6A11               	clrf	i2LCD_4Bits_Set_Curser@rt^0,c
 20834   0043C6                     
 20835                           ;ECU_layer/LCD/LCD.c: 385:      coloumn-- ;
 20836   0043C6  0610               	decf	i2LCD_4Bits_Set_Curser@coloumn^0,f,c
 20837   0043C8                     
 20838                           ;ECU_layer/LCD/LCD.c: 386:      if(((void*)0) == _LCD ){
 20839   0043C8  500E               	movf	i2LCD_4Bits_Set_Curser@_LCD^0,w,c
 20840   0043CA  A4D8               	btfss	status,2,c
 20841   0043CC  EFEA  F021         	goto	i2u658_41
 20842   0043D0  EFEC  F021         	goto	i2u658_40
 20843   0043D4                     i2u658_41:
 20844   0043D4  EF17  F022         	goto	i2l8964
 20845   0043D8                     i2u658_40:
 20846   0043D8                     
 20847                           ;ECU_layer/LCD/LCD.c: 387:         rt = (STD_ReturnType)0x00;
 20848   0043D8  6A11               	clrf	i2LCD_4Bits_Set_Curser@rt^0,c
 20849                           
 20850                           ;ECU_layer/LCD/LCD.c: 388:     }
 20851   0043DA  EF2A  F022         	goto	i2l8966
 20852   0043DE                     i2l8954:
 20853                           
 20854                           ;ECU_layer/LCD/LCD.c: 392:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0x80 
      +                          + coloumn ));break;
 20855   0043DE  C00E  F00B         	movff	i2LCD_4Bits_Set_Curser@_LCD,i2ECU_LCD_4Bit_Send_Command@_LCD
 20856   0043E2  5010               	movf	i2LCD_4Bits_Set_Curser@coloumn^0,w,c
 20857   0043E4  0F80               	addlw	128
 20858   0043E6  6E0C               	movwf	i2ECU_LCD_4Bit_Send_Command@_Command^0,c
 20859   0043E8  EC08  F027         	call	i2_ECU_LCD_4Bit_Send_Command	;wreg free
 20860   0043EC  6E11               	movwf	i2LCD_4Bits_Set_Curser@rt^0,c
 20861   0043EE  EF2A  F022         	goto	i2l8966
 20862   0043F2                     i2l8956:
 20863                           
 20864                           ;ECU_layer/LCD/LCD.c: 394:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0xc0 
      +                          + coloumn ));break;
 20865   0043F2  C00E  F00B         	movff	i2LCD_4Bits_Set_Curser@_LCD,i2ECU_LCD_4Bit_Send_Command@_LCD
 20866   0043F6  5010               	movf	i2LCD_4Bits_Set_Curser@coloumn^0,w,c
 20867   0043F8  0FC0               	addlw	192
 20868   0043FA  6E0C               	movwf	i2ECU_LCD_4Bit_Send_Command@_Command^0,c
 20869   0043FC  EC08  F027         	call	i2_ECU_LCD_4Bit_Send_Command	;wreg free
 20870   004400  6E11               	movwf	i2LCD_4Bits_Set_Curser@rt^0,c
 20871   004402  EF2A  F022         	goto	i2l8966
 20872   004406                     i2l8958:
 20873                           
 20874                           ;ECU_layer/LCD/LCD.c: 396:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0x94 
      +                          + coloumn ));break;
 20875   004406  C00E  F00B         	movff	i2LCD_4Bits_Set_Curser@_LCD,i2ECU_LCD_4Bit_Send_Command@_LCD
 20876   00440A  5010               	movf	i2LCD_4Bits_Set_Curser@coloumn^0,w,c
 20877   00440C  0F94               	addlw	148
 20878   00440E  6E0C               	movwf	i2ECU_LCD_4Bit_Send_Command@_Command^0,c
 20879   004410  EC08  F027         	call	i2_ECU_LCD_4Bit_Send_Command	;wreg free
 20880   004414  6E11               	movwf	i2LCD_4Bits_Set_Curser@rt^0,c
 20881   004416  EF2A  F022         	goto	i2l8966
 20882   00441A                     i2l8960:
 20883                           
 20884                           ;ECU_layer/LCD/LCD.c: 398:                  rt = ECU_LCD_4Bit_Send_Command(_LCD , (0xd4 
      +                          + coloumn ));break;
 20885   00441A  C00E  F00B         	movff	i2LCD_4Bits_Set_Curser@_LCD,i2ECU_LCD_4Bit_Send_Command@_LCD
 20886   00441E  5010               	movf	i2LCD_4Bits_Set_Curser@coloumn^0,w,c
 20887   004420  0FD4               	addlw	212
 20888   004422  6E0C               	movwf	i2ECU_LCD_4Bit_Send_Command@_Command^0,c
 20889   004424  EC08  F027         	call	i2_ECU_LCD_4Bit_Send_Command	;wreg free
 20890   004428  6E11               	movwf	i2LCD_4Bits_Set_Curser@rt^0,c
 20891   00442A  EF2A  F022         	goto	i2l8966
 20892   00442E                     i2l8964:
 20893   00442E  500F               	movf	i2LCD_4Bits_Set_Curser@row^0,w,c
 20894                           
 20895                           ; Switch size 1, requested type "simple"
 20896                           ; Number of cases is 4, Range of values is 1 to 4
 20897                           ; switch strategies available:
 20898                           ; Name         Instructions Cycles
 20899                           ; simple_byte           13     7 (average)
 20900                           ;	Chosen strategy is simple_byte
 20901   004430  0A01               	xorlw	1	; case 1
 20902   004432  B4D8               	btfsc	status,2,c
 20903   004434  EFEF  F021         	goto	i2l8954
 20904   004438  0A03               	xorlw	3	; case 2
 20905   00443A  B4D8               	btfsc	status,2,c
 20906   00443C  EFF9  F021         	goto	i2l8956
 20907   004440  0A01               	xorlw	1	; case 3
 20908   004442  B4D8               	btfsc	status,2,c
 20909   004444  EF03  F022         	goto	i2l8958
 20910   004448  0A07               	xorlw	7	; case 4
 20911   00444A  B4D8               	btfsc	status,2,c
 20912   00444C  EF0D  F022         	goto	i2l8960
 20913   004450  EF2A  F022         	goto	i2l8966
 20914   004454                     i2l8966:
 20915                           
 20916                           ;ECU_layer/LCD/LCD.c: 401:      return rt;
 20917   004454  5011               	movf	i2LCD_4Bits_Set_Curser@rt^0,w,c
 20918   004456  0012               	return		;funcret
 20919   004458                     __end_ofi2_LCD_4Bits_Set_Curser:
 20920                           	callstack 0
 20921                           
 20922 ;; *************** function i2_ECU_LCD_4Bit_Send_Command *****************
 20923 ;; Defined at:
 20924 ;;		line 50 in file "ECU_layer/LCD/LCD.c"
 20925 ;; Parameters:    Size  Location     Type
 20926 ;;  _LCD            1   10[COMRAM] PTR const struct .
 20927 ;;		 -> LCD_1(6), 
 20928 ;;  _Command        1   11[COMRAM] unsigned char 
 20929 ;; Auto vars:     Size  Location     Type
 20930 ;;  rt              1   12[COMRAM] unsigned char 
 20931 ;; Return value:  Size  Location     Type
 20932 ;;                  1    wreg      unsigned char 
 20933 ;; Registers used:
 20934 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 20935 ;; Tracked objects:
 20936 ;;		On entry : 0/0
 20937 ;;		On exit  : 0/0
 20938 ;;		Unchanged: 0/0
 20939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20940 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20941 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20943 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20944 ;;Total ram usage:        3 bytes
 20945 ;; Hardware stack levels used: 1
 20946 ;; Hardware stack levels required when called: 2
 20947 ;; This function calls:
 20948 ;;		i2_LCD_4Bits_Send_Enable_Signal
 20949 ;;		i2_LCD_Send_4Bits
 20950 ;;		i2_gpio_pin_write_logic
 20951 ;; This function is called by:
 20952 ;;		i2_LCD_4Bits_Set_Curser
 20953 ;;		i2_update_display
 20954 ;; This function uses a non-reentrant model
 20955 ;;
 20956                           
 20957                           	psect	text109
 20958   004E10                     __ptext109:
 20959                           	callstack 0
 20960   004E10                     i2_ECU_LCD_4Bit_Send_Command:
 20961                           	callstack 12
 20962   004E10                     
 20963                           ;ECU_layer/LCD/LCD.c: 52:     if(((void*)0) == _LCD){
 20964   004E10  500B               	movf	i2ECU_LCD_4Bit_Send_Command@_LCD^0,w,c
 20965   004E12  A4D8               	btfss	status,2,c
 20966   004E14  EF0E  F027         	goto	i2u638_41
 20967   004E18  EF10  F027         	goto	i2u638_40
 20968   004E1C                     i2u638_41:
 20969   004E1C  EF13  F027         	goto	i2l8830
 20970   004E20                     i2u638_40:
 20971   004E20                     
 20972                           ;ECU_layer/LCD/LCD.c: 53:        rt = (STD_ReturnType)0x00;
 20973   004E20  6A0D               	clrf	i2ECU_LCD_4Bit_Send_Command@rt^0,c
 20974                           
 20975                           ;ECU_layer/LCD/LCD.c: 54:     }
 20976   004E22  EF34  F027         	goto	i2l8832
 20977   004E26                     i2l8830:
 20978                           
 20979                           ;ECU_layer/LCD/LCD.c: 57:         rt = gpio_pin_write_logic(&(_LCD->LCD_RS), GPIO_Pin_Lo
      +                          gic_LOW);
 20980   004E26  C00B  F001         	movff	i2ECU_LCD_4Bit_Send_Command@_LCD,i2gpio_pin_write_logic@pinConfig
 20981   004E2A  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 20982   004E2C  0E00               	movlw	0
 20983   004E2E  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 20984   004E30  EC9D  F016         	call	i2_gpio_pin_write_logic	;wreg free
 20985   004E34  6E0D               	movwf	i2ECU_LCD_4Bit_Send_Command@rt^0,c
 20986                           
 20987                           ;ECU_layer/LCD/LCD.c: 59:         rt = LCD_Send_4Bits(_LCD, _Command >> 4);
 20988   004E36  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_Command@_LCD,i2LCD_Send_4Bits@_LCD
 20989   004E3A  380C               	swapf	i2ECU_LCD_4Bit_Send_Command@_Command^0,w,c
 20990   004E3C  0B0F               	andlw	15
 20991   004E3E  6E08               	movwf	i2LCD_Send_4Bits@_Data^0,c
 20992   004E40  EC74  F022         	call	i2_LCD_Send_4Bits	;wreg free
 20993   004E44  6E0D               	movwf	i2ECU_LCD_4Bit_Send_Command@rt^0,c
 20994                           
 20995                           ;ECU_layer/LCD/LCD.c: 61:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 20996   004E46  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_Command@_LCD,i2LCD_4Bits_Send_Enable_Signal@_LCD
 20997   004E4A  EC8F  F027         	call	i2_LCD_4Bits_Send_Enable_Signal	;wreg free
 20998   004E4E  6E0D               	movwf	i2ECU_LCD_4Bit_Send_Command@rt^0,c
 20999                           
 21000                           ;ECU_layer/LCD/LCD.c: 63:         rt = LCD_Send_4Bits(_LCD, _Command);
 21001   004E50  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_Command@_LCD,i2LCD_Send_4Bits@_LCD
 21002   004E54  C00C  F008         	movff	i2ECU_LCD_4Bit_Send_Command@_Command,i2LCD_Send_4Bits@_Data
 21003   004E58  EC74  F022         	call	i2_LCD_Send_4Bits	;wreg free
 21004   004E5C  6E0D               	movwf	i2ECU_LCD_4Bit_Send_Command@rt^0,c
 21005                           
 21006                           ;ECU_layer/LCD/LCD.c: 65:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 21007   004E5E  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_Command@_LCD,i2LCD_4Bits_Send_Enable_Signal@_LCD
 21008   004E62  EC8F  F027         	call	i2_LCD_4Bits_Send_Enable_Signal	;wreg free
 21009   004E66  6E0D               	movwf	i2ECU_LCD_4Bit_Send_Command@rt^0,c
 21010   004E68                     i2l8832:
 21011                           
 21012                           ;ECU_layer/LCD/LCD.c: 68:     return rt;
 21013   004E68  500D               	movf	i2ECU_LCD_4Bit_Send_Command@rt^0,w,c
 21014   004E6A  0012               	return		;funcret
 21015   004E6C                     __end_ofi2_ECU_LCD_4Bit_Send_Command:
 21016                           	callstack 0
 21017                           
 21018 ;; *************** function i2_ECU_LCD_4Bit_Send_char_Data *****************
 21019 ;; Defined at:
 21020 ;;		line 72 in file "ECU_layer/LCD/LCD.c"
 21021 ;; Parameters:    Size  Location     Type
 21022 ;;  _LCD            1   10[COMRAM] PTR const struct .
 21023 ;;		 -> LCD_1(6), 
 21024 ;;  _Data           1   11[COMRAM] unsigned char 
 21025 ;; Auto vars:     Size  Location     Type
 21026 ;;  rt              1   12[COMRAM] unsigned char 
 21027 ;; Return value:  Size  Location     Type
 21028 ;;                  1    wreg      unsigned char 
 21029 ;; Registers used:
 21030 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21031 ;; Tracked objects:
 21032 ;;		On entry : 0/0
 21033 ;;		On exit  : 0/0
 21034 ;;		Unchanged: 0/0
 21035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21036 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21037 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21039 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21040 ;;Total ram usage:        3 bytes
 21041 ;; Hardware stack levels used: 1
 21042 ;; Hardware stack levels required when called: 2
 21043 ;; This function calls:
 21044 ;;		i2_LCD_4Bits_Send_Enable_Signal
 21045 ;;		i2_LCD_Send_4Bits
 21046 ;;		i2_gpio_pin_write_logic
 21047 ;; This function is called by:
 21048 ;;		i2_ECU_LCD_4Bit_Send_String_Data_Postition
 21049 ;;		i2_update_display
 21050 ;; This function uses a non-reentrant model
 21051 ;;
 21052                           
 21053                           	psect	text110
 21054   004E6C                     __ptext110:
 21055                           	callstack 0
 21056   004E6C                     i2_ECU_LCD_4Bit_Send_char_Data:
 21057                           	callstack 13
 21058   004E6C                     
 21059                           ;ECU_layer/LCD/LCD.c: 74:     if(((void*)0) == _LCD){
 21060   004E6C  500B               	movf	i2ECU_LCD_4Bit_Send_char_Data@_LCD^0,w,c
 21061   004E6E  A4D8               	btfss	status,2,c
 21062   004E70  EF3C  F027         	goto	i2u657_41
 21063   004E74  EF3E  F027         	goto	i2u657_40
 21064   004E78                     i2u657_41:
 21065   004E78  EF41  F027         	goto	i2l8940
 21066   004E7C                     i2u657_40:
 21067   004E7C                     
 21068                           ;ECU_layer/LCD/LCD.c: 75:         rt = (STD_ReturnType)0x00;
 21069   004E7C  6A0D               	clrf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,c
 21070                           
 21071                           ;ECU_layer/LCD/LCD.c: 76:     }
 21072   004E7E  EF62  F027         	goto	i2l8942
 21073   004E82                     i2l8940:
 21074                           
 21075                           ;ECU_layer/LCD/LCD.c: 78:         rt = gpio_pin_write_logic(&(_LCD->LCD_RS), GPIO_Pin_Lo
      +                          gic_HIGH);
 21076   004E82  C00B  F001         	movff	i2ECU_LCD_4Bit_Send_char_Data@_LCD,i2gpio_pin_write_logic@pinConfig
 21077   004E86  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 21078   004E88  0E01               	movlw	1
 21079   004E8A  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 21080   004E8C  EC9D  F016         	call	i2_gpio_pin_write_logic	;wreg free
 21081   004E90  6E0D               	movwf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,c
 21082                           
 21083                           ;ECU_layer/LCD/LCD.c: 80:         rt = LCD_Send_4Bits(_LCD, _Data >> 4);
 21084   004E92  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_char_Data@_LCD,i2LCD_Send_4Bits@_LCD
 21085   004E96  380C               	swapf	i2ECU_LCD_4Bit_Send_char_Data@_Data^0,w,c
 21086   004E98  0B0F               	andlw	15
 21087   004E9A  6E08               	movwf	i2LCD_Send_4Bits@_Data^0,c
 21088   004E9C  EC74  F022         	call	i2_LCD_Send_4Bits	;wreg free
 21089   004EA0  6E0D               	movwf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,c
 21090                           
 21091                           ;ECU_layer/LCD/LCD.c: 82:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 21092   004EA2  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_char_Data@_LCD,i2LCD_4Bits_Send_Enable_Signal@_LCD
 21093   004EA6  EC8F  F027         	call	i2_LCD_4Bits_Send_Enable_Signal	;wreg free
 21094   004EAA  6E0D               	movwf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,c
 21095                           
 21096                           ;ECU_layer/LCD/LCD.c: 84:         rt = LCD_Send_4Bits(_LCD, _Data);
 21097   004EAC  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_char_Data@_LCD,i2LCD_Send_4Bits@_LCD
 21098   004EB0  C00C  F008         	movff	i2ECU_LCD_4Bit_Send_char_Data@_Data,i2LCD_Send_4Bits@_Data
 21099   004EB4  EC74  F022         	call	i2_LCD_Send_4Bits	;wreg free
 21100   004EB8  6E0D               	movwf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,c
 21101                           
 21102                           ;ECU_layer/LCD/LCD.c: 86:         rt = LCD_4Bits_Send_Enable_Signal(_LCD);
 21103   004EBA  C00B  F007         	movff	i2ECU_LCD_4Bit_Send_char_Data@_LCD,i2LCD_4Bits_Send_Enable_Signal@_LCD
 21104   004EBE  EC8F  F027         	call	i2_LCD_4Bits_Send_Enable_Signal	;wreg free
 21105   004EC2  6E0D               	movwf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,c
 21106   004EC4                     i2l8942:
 21107                           
 21108                           ;ECU_layer/LCD/LCD.c: 89:     return rt;
 21109   004EC4  500D               	movf	i2ECU_LCD_4Bit_Send_char_Data@rt^0,w,c
 21110   004EC6  0012               	return		;funcret
 21111   004EC8                     __end_ofi2_ECU_LCD_4Bit_Send_char_Data:
 21112                           	callstack 0
 21113                           
 21114 ;; *************** function i2_LCD_Send_4Bits *****************
 21115 ;; Defined at:
 21116 ;;		line 341 in file "ECU_layer/LCD/LCD.c"
 21117 ;; Parameters:    Size  Location     Type
 21118 ;;  _LCD            1    6[COMRAM] PTR const struct .
 21119 ;;		 -> LCD_1(6), 
 21120 ;;  _Data           1    7[COMRAM] unsigned char 
 21121 ;; Auto vars:     Size  Location     Type
 21122 ;;  rt              1    9[COMRAM] unsigned char 
 21123 ;; Return value:  Size  Location     Type
 21124 ;;                  1    wreg      unsigned char 
 21125 ;; Registers used:
 21126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21127 ;; Tracked objects:
 21128 ;;		On entry : 0/0
 21129 ;;		On exit  : 0/0
 21130 ;;		Unchanged: 0/0
 21131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21132 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21133 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21134 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21135 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21136 ;;Total ram usage:        4 bytes
 21137 ;; Hardware stack levels used: 1
 21138 ;; Hardware stack levels required when called: 1
 21139 ;; This function calls:
 21140 ;;		i2_gpio_pin_write_logic
 21141 ;; This function is called by:
 21142 ;;		i2_ECU_LCD_4Bit_Send_Command
 21143 ;;		i2_ECU_LCD_4Bit_Send_char_Data
 21144 ;; This function uses a non-reentrant model
 21145 ;;
 21146                           
 21147                           	psect	text111
 21148   0044E8                     __ptext111:
 21149                           	callstack 0
 21150   0044E8                     i2_LCD_Send_4Bits:
 21151                           	callstack 12
 21152   0044E8                     
 21153                           ;ECU_layer/LCD/LCD.c: 343:      if(((void*)0) == _LCD ){
 21154   0044E8  5007               	movf	i2LCD_Send_4Bits@_LCD^0,w,c
 21155   0044EA  A4D8               	btfss	status,2,c
 21156   0044EC  EF7A  F022         	goto	i2u623_41
 21157   0044F0  EF7C  F022         	goto	i2u623_40
 21158   0044F4                     i2u623_41:
 21159   0044F4  EF7F  F022         	goto	i2l8752
 21160   0044F8                     i2u623_40:
 21161   0044F8                     
 21162                           ;ECU_layer/LCD/LCD.c: 344:         rt = (STD_ReturnType)0x00;
 21163   0044F8  6A0A               	clrf	i2LCD_Send_4Bits@rt^0,c
 21164                           
 21165                           ;ECU_layer/LCD/LCD.c: 345:     }
 21166   0044FA  EFB8  F022         	goto	i2l8754
 21167   0044FE                     i2l8752:
 21168                           
 21169                           ;ECU_layer/LCD/LCD.c: 347:         rt = gpio_pin_write_logic(&(_LCD->DataPins[0]), (_Dat
      +                          a >> 0) & (uint8)0x01);
 21170   0044FE  C007  F009         	movff	i2LCD_Send_4Bits@_LCD,??i2_LCD_Send_4Bits
 21171   004502  0E02               	movlw	2
 21172   004504  2609               	addwf	??i2_LCD_Send_4Bits^0,f,c
 21173   004506  C009  F001         	movff	??i2_LCD_Send_4Bits,i2gpio_pin_write_logic@pinConfig
 21174   00450A  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 21175   00450C  5008               	movf	i2LCD_Send_4Bits@_Data^0,w,c
 21176   00450E  0B01               	andlw	1
 21177   004510  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 21178   004512  EC9D  F016         	call	i2_gpio_pin_write_logic	;wreg free
 21179   004516  6E0A               	movwf	i2LCD_Send_4Bits@rt^0,c
 21180                           
 21181                           ;ECU_layer/LCD/LCD.c: 348:         rt = gpio_pin_write_logic(&(_LCD->DataPins[1]), (_Dat
      +                          a >> 1) & (uint8)0x01);
 21182   004518  C007  F009         	movff	i2LCD_Send_4Bits@_LCD,??i2_LCD_Send_4Bits
 21183   00451C  0E03               	movlw	3
 21184   00451E  2609               	addwf	??i2_LCD_Send_4Bits^0,f,c
 21185   004520  C009  F001         	movff	??i2_LCD_Send_4Bits,i2gpio_pin_write_logic@pinConfig
 21186   004524  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 21187   004526  90D8               	bcf	status,0,c
 21188   004528  3008               	rrcf	i2LCD_Send_4Bits@_Data^0,w,c
 21189   00452A  0B01               	andlw	1
 21190   00452C  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 21191   00452E  EC9D  F016         	call	i2_gpio_pin_write_logic	;wreg free
 21192   004532  6E0A               	movwf	i2LCD_Send_4Bits@rt^0,c
 21193                           
 21194                           ;ECU_layer/LCD/LCD.c: 349:         rt = gpio_pin_write_logic(&(_LCD->DataPins[2]), (_Dat
      +                          a >> 2) & (uint8)0x01);
 21195   004534  C007  F009         	movff	i2LCD_Send_4Bits@_LCD,??i2_LCD_Send_4Bits
 21196   004538  0E04               	movlw	4
 21197   00453A  2609               	addwf	??i2_LCD_Send_4Bits^0,f,c
 21198   00453C  C009  F001         	movff	??i2_LCD_Send_4Bits,i2gpio_pin_write_logic@pinConfig
 21199   004540  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 21200   004542  4008               	rrncf	i2LCD_Send_4Bits@_Data^0,w,c
 21201   004544  42E8               	rrncf	wreg,f,c
 21202   004546  0B3F               	andlw	63
 21203   004548  0B01               	andlw	1
 21204   00454A  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 21205   00454C  EC9D  F016         	call	i2_gpio_pin_write_logic	;wreg free
 21206   004550  6E0A               	movwf	i2LCD_Send_4Bits@rt^0,c
 21207                           
 21208                           ;ECU_layer/LCD/LCD.c: 350:         rt = gpio_pin_write_logic(&(_LCD->DataPins[3]), (_Dat
      +                          a >> 3) & (uint8)0x01);
 21209   004552  C007  F009         	movff	i2LCD_Send_4Bits@_LCD,??i2_LCD_Send_4Bits
 21210   004556  0E05               	movlw	5
 21211   004558  2609               	addwf	??i2_LCD_Send_4Bits^0,f,c
 21212   00455A  C009  F001         	movff	??i2_LCD_Send_4Bits,i2gpio_pin_write_logic@pinConfig
 21213   00455E  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 21214   004560  3808               	swapf	i2LCD_Send_4Bits@_Data^0,w,c
 21215   004562  46E8               	rlncf	wreg,f,c
 21216   004564  0B1F               	andlw	31
 21217   004566  0B01               	andlw	1
 21218   004568  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 21219   00456A  EC9D  F016         	call	i2_gpio_pin_write_logic	;wreg free
 21220   00456E  6E0A               	movwf	i2LCD_Send_4Bits@rt^0,c
 21221   004570                     i2l8754:
 21222                           
 21223                           ;ECU_layer/LCD/LCD.c: 352:      return rt;
 21224   004570  500A               	movf	i2LCD_Send_4Bits@rt^0,w,c
 21225   004572  0012               	return		;funcret
 21226   004574                     __end_ofi2_LCD_Send_4Bits:
 21227                           	callstack 0
 21228                           
 21229 ;; *************** function i2_LCD_4Bits_Send_Enable_Signal *****************
 21230 ;; Defined at:
 21231 ;;		line 356 in file "ECU_layer/LCD/LCD.c"
 21232 ;; Parameters:    Size  Location     Type
 21233 ;;  _LCD            1    6[COMRAM] PTR const struct .
 21234 ;;		 -> LCD_1(6), 
 21235 ;; Auto vars:     Size  Location     Type
 21236 ;;  rt              1    8[COMRAM] unsigned char 
 21237 ;; Return value:  Size  Location     Type
 21238 ;;                  1    wreg      unsigned char 
 21239 ;; Registers used:
 21240 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 21241 ;; Tracked objects:
 21242 ;;		On entry : 0/0
 21243 ;;		On exit  : 0/0
 21244 ;;		Unchanged: 0/0
 21245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21246 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21247 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21248 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21249 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21250 ;;Total ram usage:        3 bytes
 21251 ;; Hardware stack levels used: 1
 21252 ;; Hardware stack levels required when called: 1
 21253 ;; This function calls:
 21254 ;;		i2_gpio_pin_write_logic
 21255 ;; This function is called by:
 21256 ;;		i2_ECU_LCD_4Bit_Send_Command
 21257 ;;		i2_ECU_LCD_4Bit_Send_char_Data
 21258 ;; This function uses a non-reentrant model
 21259 ;;
 21260                           
 21261                           	psect	text112
 21262   004F1E                     __ptext112:
 21263                           	callstack 0
 21264   004F1E                     i2_LCD_4Bits_Send_Enable_Signal:
 21265                           	callstack 12
 21266   004F1E                     
 21267                           ;ECU_layer/LCD/LCD.c: 358:      if(((void*)0) == _LCD ){
 21268   004F1E  5007               	movf	i2LCD_4Bits_Send_Enable_Signal@_LCD^0,w,c
 21269   004F20  A4D8               	btfss	status,2,c
 21270   004F22  EF95  F027         	goto	i2u624_41
 21271   004F26  EF97  F027         	goto	i2u624_40
 21272   004F2A                     i2u624_41:
 21273   004F2A  EF9A  F027         	goto	i2l8764
 21274   004F2E                     i2u624_40:
 21275   004F2E                     
 21276                           ;ECU_layer/LCD/LCD.c: 359:         rt = (STD_ReturnType)0x00;
 21277   004F2E  6A09               	clrf	i2LCD_4Bits_Send_Enable_Signal@rt^0,c
 21278                           
 21279                           ;ECU_layer/LCD/LCD.c: 360:     }
 21280   004F30  EFB5  F027         	goto	i2l8770
 21281   004F34                     i2l8764:
 21282   004F34  C007  F008         	movff	i2LCD_4Bits_Send_Enable_Signal@_LCD,??i2_LCD_4Bits_Send_Enable_Signal
 21283   004F38  0E01               	movlw	1
 21284   004F3A  2608               	addwf	??i2_LCD_4Bits_Send_Enable_Signal^0,f,c
 21285   004F3C  C008  F001         	movff	??i2_LCD_4Bits_Send_Enable_Signal,i2gpio_pin_write_logic@pinConfig
 21286   004F40  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 21287   004F42  0E01               	movlw	1
 21288   004F44  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 21289   004F46  EC9D  F016         	call	i2_gpio_pin_write_logic	;wreg free
 21290   004F4A                     
 21291                           ;ECU_layer/LCD/LCD.c: 363:         _delay((unsigned long)((5)*(8000000UL/4000000.0)));
 21292   004F4A  0E03               	movlw	3
 21293   004F4C                     i2u1462_47:
 21294   004F4C  2EE8               	decfsz	wreg,f,c
 21295   004F4E  D7FE               	bra	i2u1462_47
 21296   004F50  0000               	nop	
 21297   004F52                     
 21298                           ;ECU_layer/LCD/LCD.c: 364:         rt = gpio_pin_write_logic(&(_LCD->LCD_E), GPIO_Pin_Lo
      +                          gic_LOW);;
 21299   004F52  C007  F008         	movff	i2LCD_4Bits_Send_Enable_Signal@_LCD,??i2_LCD_4Bits_Send_Enable_Signal
 21300   004F56  0E01               	movlw	1
 21301   004F58  2608               	addwf	??i2_LCD_4Bits_Send_Enable_Signal^0,f,c
 21302   004F5A  C008  F001         	movff	??i2_LCD_4Bits_Send_Enable_Signal,i2gpio_pin_write_logic@pinConfig
 21303   004F5E  6A02               	clrf	(i2gpio_pin_write_logic@pinConfig+1)^0,c
 21304   004F60  0E00               	movlw	0
 21305   004F62  6E03               	movwf	i2gpio_pin_write_logic@logic^0,c
 21306   004F64  EC9D  F016         	call	i2_gpio_pin_write_logic	;wreg free
 21307   004F68  6E09               	movwf	i2LCD_4Bits_Send_Enable_Signal@rt^0,c
 21308   004F6A                     i2l8770:
 21309                           
 21310                           ;ECU_layer/LCD/LCD.c: 366:      return rt;
 21311   004F6A  5009               	movf	i2LCD_4Bits_Send_Enable_Signal@rt^0,w,c
 21312   004F6C  0012               	return		;funcret
 21313   004F6E                     __end_ofi2_LCD_4Bits_Send_Enable_Signal:
 21314                           	callstack 0
 21315                           
 21316 ;; *************** function i2_gpio_pin_write_logic *****************
 21317 ;; Defined at:
 21318 ;;		line 93 in file "MCAL_layer/GPIO/hal_gpio.c"
 21319 ;; Parameters:    Size  Location     Type
 21320 ;;  pinConfig       2    0[COMRAM] PTR const struct .
 21321 ;;		 -> Buzz(1), keypad_1(8), LCD_1$DataPins(4), LCD_1(6), 
 21322 ;;		 -> pinRC7(1), pinRC6(1), ECU_Relay_turnOFF@relay_t(1), ECU_Relay_turnON@relay_t(1), 
 21323 ;;		 -> ECU_Relay_Initialize@relay_t(1), LED_turnOFF@LED(1), LED_turnON@LED(1), 
 21324 ;;  logic           1    2[COMRAM] enum E3381
 21325 ;; Auto vars:     Size  Location     Type
 21326 ;;  rt              1    5[COMRAM] unsigned char 
 21327 ;; Return value:  Size  Location     Type
 21328 ;;                  1    wreg      unsigned char 
 21329 ;; Registers used:
 21330 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21331 ;; Tracked objects:
 21332 ;;		On entry : 0/0
 21333 ;;		On exit  : 0/0
 21334 ;;		Unchanged: 0/0
 21335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21336 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21338 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21339 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21340 ;;Total ram usage:        6 bytes
 21341 ;; Hardware stack levels used: 1
 21342 ;; This function calls:
 21343 ;;		Nothing
 21344 ;; This function is called by:
 21345 ;;		i2_ECU_LCD_4Bit_Send_Command
 21346 ;;		i2_ECU_LCD_4Bit_Send_char_Data
 21347 ;;		i2_LCD_Send_4Bits
 21348 ;;		i2_LCD_4Bits_Send_Enable_Signal
 21349 ;; This function uses a non-reentrant model
 21350 ;;
 21351                           
 21352                           	psect	text113
 21353   002D3A                     __ptext113:
 21354                           	callstack 0
 21355   002D3A                     i2_gpio_pin_write_logic:
 21356                           	callstack 13
 21357   002D3A                     
 21358                           ;MCAL_layer/GPIO/hal_gpio.c: 94:     STD_ReturnType rt = (STD_ReturnType)0x01;
 21359   002D3A  0E01               	movlw	1
 21360   002D3C  6E06               	movwf	i2gpio_pin_write_logic@rt^0,c
 21361   002D3E                     
 21362                           ;MCAL_layer/GPIO/hal_gpio.c: 95:     if(((void*)0) == pinConfig || pinConfig ->pin > 8 -
      +                          1 ){
 21363   002D3E  5001               	movf	i2gpio_pin_write_logic@pinConfig^0,w,c
 21364   002D40  1002               	iorwf	(i2gpio_pin_write_logic@pinConfig+1)^0,w,c
 21365   002D42  B4D8               	btfsc	status,2,c
 21366   002D44  EFA6  F016         	goto	i2u607_41
 21367   002D48  EFA8  F016         	goto	i2u607_40
 21368   002D4C                     i2u607_41:
 21369   002D4C  EFB9  F016         	goto	i2l811
 21370   002D50                     i2u607_40:
 21371   002D50  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21372   002D54  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21373   002D58  30DF               	rrcf	223,w,c
 21374   002D5A  32E8               	rrcf	wreg,f,c
 21375   002D5C  32E8               	rrcf	wreg,f,c
 21376   002D5E  0B07               	andlw	7
 21377   002D60  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 21378   002D62  0E07               	movlw	7
 21379   002D64  6404               	cpfsgt	??i2_gpio_pin_write_logic^0,c
 21380   002D66  EFB7  F016         	goto	i2u608_41
 21381   002D6A  EFB9  F016         	goto	i2u608_40
 21382   002D6E                     i2u608_41:
 21383   002D6E  EFDF  F017         	goto	i2l8724
 21384   002D72                     i2u608_40:
 21385   002D72                     i2l811:
 21386                           
 21387                           ;MCAL_layer/GPIO/hal_gpio.c: 96:         rt = (STD_ReturnType)0x00;
 21388   002D72  6A06               	clrf	i2gpio_pin_write_logic@rt^0,c
 21389                           
 21390                           ;MCAL_layer/GPIO/hal_gpio.c: 97:     }
 21391   002D74  EFF4  F017         	goto	i2l8726
 21392   002D78                     i2l8700:
 21393                           
 21394                           ;MCAL_layer/GPIO/hal_gpio.c: 103:                         LATA &= ~(1 << pinConfig ->pin
      +                          );break;
 21395   002D78  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21396   002D7C  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21397   002D80  30DF               	rrcf	223,w,c
 21398   002D82  32E8               	rrcf	wreg,f,c
 21399   002D84  32E8               	rrcf	wreg,f,c
 21400   002D86  0B07               	andlw	7
 21401   002D88  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 21402   002D8A  0E01               	movlw	1
 21403   002D8C  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 21404   002D8E  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 21405   002D90  EFCC  F016         	goto	i2u609_44
 21406   002D94                     i2u609_45:
 21407   002D94  90D8               	bcf	status,0,c
 21408   002D96  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 21409   002D98                     i2u609_44:
 21410   002D98  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 21411   002D9A  EFCA  F016         	goto	i2u609_45
 21412   002D9E  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 21413   002DA0  0AFF               	xorlw	255
 21414   002DA2  1689               	andwf	137,f,c	;volatile
 21415   002DA4  EFF4  F017         	goto	i2l8726
 21416   002DA8                     i2l8702:
 21417                           
 21418                           ;MCAL_layer/GPIO/hal_gpio.c: 105:                         LATB &= ~(1 << pinConfig ->pin
      +                          );break;
 21419   002DA8  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21420   002DAC  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21421   002DB0  30DF               	rrcf	223,w,c
 21422   002DB2  32E8               	rrcf	wreg,f,c
 21423   002DB4  32E8               	rrcf	wreg,f,c
 21424   002DB6  0B07               	andlw	7
 21425   002DB8  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 21426   002DBA  0E01               	movlw	1
 21427   002DBC  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 21428   002DBE  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 21429   002DC0  EFE4  F016         	goto	i2u610_44
 21430   002DC4                     i2u610_45:
 21431   002DC4  90D8               	bcf	status,0,c
 21432   002DC6  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 21433   002DC8                     i2u610_44:
 21434   002DC8  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 21435   002DCA  EFE2  F016         	goto	i2u610_45
 21436   002DCE  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 21437   002DD0  0AFF               	xorlw	255
 21438   002DD2  168A               	andwf	138,f,c	;volatile
 21439   002DD4  EFF4  F017         	goto	i2l8726
 21440   002DD8                     i2l8704:
 21441                           
 21442                           ;MCAL_layer/GPIO/hal_gpio.c: 107:                         LATC &= ~(1 << pinConfig ->pin
      +                          );break;
 21443   002DD8  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21444   002DDC  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21445   002DE0  30DF               	rrcf	223,w,c
 21446   002DE2  32E8               	rrcf	wreg,f,c
 21447   002DE4  32E8               	rrcf	wreg,f,c
 21448   002DE6  0B07               	andlw	7
 21449   002DE8  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 21450   002DEA  0E01               	movlw	1
 21451   002DEC  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 21452   002DEE  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 21453   002DF0  EFFC  F016         	goto	i2u611_44
 21454   002DF4                     i2u611_45:
 21455   002DF4  90D8               	bcf	status,0,c
 21456   002DF6  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 21457   002DF8                     i2u611_44:
 21458   002DF8  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 21459   002DFA  EFFA  F016         	goto	i2u611_45
 21460   002DFE  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 21461   002E00  0AFF               	xorlw	255
 21462   002E02  168B               	andwf	139,f,c	;volatile
 21463   002E04  EFF4  F017         	goto	i2l8726
 21464   002E08                     i2l8706:
 21465                           
 21466                           ;MCAL_layer/GPIO/hal_gpio.c: 109:                         LATD &= ~(1 << pinConfig ->pin
      +                          );break;
 21467   002E08  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21468   002E0C  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21469   002E10  30DF               	rrcf	223,w,c
 21470   002E12  32E8               	rrcf	wreg,f,c
 21471   002E14  32E8               	rrcf	wreg,f,c
 21472   002E16  0B07               	andlw	7
 21473   002E18  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 21474   002E1A  0E01               	movlw	1
 21475   002E1C  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 21476   002E1E  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 21477   002E20  EF14  F017         	goto	i2u612_44
 21478   002E24                     i2u612_45:
 21479   002E24  90D8               	bcf	status,0,c
 21480   002E26  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 21481   002E28                     i2u612_44:
 21482   002E28  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 21483   002E2A  EF12  F017         	goto	i2u612_45
 21484   002E2E  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 21485   002E30  0AFF               	xorlw	255
 21486   002E32  168C               	andwf	140,f,c	;volatile
 21487   002E34  EFF4  F017         	goto	i2l8726
 21488   002E38                     i2l8708:
 21489                           
 21490                           ;MCAL_layer/GPIO/hal_gpio.c: 111:                         LATE &= ~(1 << pinConfig ->pin
      +                          );break;
 21491   002E38  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21492   002E3C  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21493   002E40  30DF               	rrcf	223,w,c
 21494   002E42  32E8               	rrcf	wreg,f,c
 21495   002E44  32E8               	rrcf	wreg,f,c
 21496   002E46  0B07               	andlw	7
 21497   002E48  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 21498   002E4A  0E01               	movlw	1
 21499   002E4C  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 21500   002E4E  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 21501   002E50  EF2C  F017         	goto	i2u613_44
 21502   002E54                     i2u613_45:
 21503   002E54  90D8               	bcf	status,0,c
 21504   002E56  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 21505   002E58                     i2u613_44:
 21506   002E58  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 21507   002E5A  EF2A  F017         	goto	i2u613_45
 21508   002E5E  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 21509   002E60  0AFF               	xorlw	255
 21510   002E62  168D               	andwf	141,f,c	;volatile
 21511   002E64  EFF4  F017         	goto	i2l8726
 21512   002E68                     i2l8710:
 21513   002E68  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21514   002E6C  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21515   002E70  50DF               	movf	223,w,c
 21516   002E72  0B07               	andlw	7
 21517                           
 21518                           ; Switch size 1, requested type "simple"
 21519                           ; Number of cases is 5, Range of values is 0 to 4
 21520                           ; switch strategies available:
 21521                           ; Name         Instructions Cycles
 21522                           ; simple_byte           16     9 (average)
 21523                           ;	Chosen strategy is simple_byte
 21524   002E74  0A00               	xorlw	0	; case 0
 21525   002E76  B4D8               	btfsc	status,2,c
 21526   002E78  EFBC  F016         	goto	i2l8700
 21527   002E7C  0A01               	xorlw	1	; case 1
 21528   002E7E  B4D8               	btfsc	status,2,c
 21529   002E80  EFD4  F016         	goto	i2l8702
 21530   002E84  0A03               	xorlw	3	; case 2
 21531   002E86  B4D8               	btfsc	status,2,c
 21532   002E88  EFEC  F016         	goto	i2l8704
 21533   002E8C  0A01               	xorlw	1	; case 3
 21534   002E8E  B4D8               	btfsc	status,2,c
 21535   002E90  EF04  F017         	goto	i2l8706
 21536   002E94  0A07               	xorlw	7	; case 4
 21537   002E96  B4D8               	btfsc	status,2,c
 21538   002E98  EF1C  F017         	goto	i2l8708
 21539   002E9C  EFB9  F016         	goto	i2l811
 21540   002EA0                     i2l8712:
 21541                           
 21542                           ;MCAL_layer/GPIO/hal_gpio.c: 118:                         LATA |= (1 << pinConfig ->pin)
      +                          ;break;
 21543   002EA0  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21544   002EA4  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21545   002EA8  30DF               	rrcf	223,w,c
 21546   002EAA  32E8               	rrcf	wreg,f,c
 21547   002EAC  32E8               	rrcf	wreg,f,c
 21548   002EAE  0B07               	andlw	7
 21549   002EB0  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 21550   002EB2  0E01               	movlw	1
 21551   002EB4  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 21552   002EB6  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 21553   002EB8  EF60  F017         	goto	i2u614_44
 21554   002EBC                     i2u614_45:
 21555   002EBC  90D8               	bcf	status,0,c
 21556   002EBE  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 21557   002EC0                     i2u614_44:
 21558   002EC0  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 21559   002EC2  EF5E  F017         	goto	i2u614_45
 21560   002EC6  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 21561   002EC8  1289               	iorwf	137,f,c	;volatile
 21562   002ECA  EFF4  F017         	goto	i2l8726
 21563   002ECE                     i2l8714:
 21564                           
 21565                           ;MCAL_layer/GPIO/hal_gpio.c: 120:                         LATB |= (1 << pinConfig ->pin)
      +                          ;break;
 21566   002ECE  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21567   002ED2  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21568   002ED6  30DF               	rrcf	223,w,c
 21569   002ED8  32E8               	rrcf	wreg,f,c
 21570   002EDA  32E8               	rrcf	wreg,f,c
 21571   002EDC  0B07               	andlw	7
 21572   002EDE  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 21573   002EE0  0E01               	movlw	1
 21574   002EE2  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 21575   002EE4  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 21576   002EE6  EF77  F017         	goto	i2u615_44
 21577   002EEA                     i2u615_45:
 21578   002EEA  90D8               	bcf	status,0,c
 21579   002EEC  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 21580   002EEE                     i2u615_44:
 21581   002EEE  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 21582   002EF0  EF75  F017         	goto	i2u615_45
 21583   002EF4  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 21584   002EF6  128A               	iorwf	138,f,c	;volatile
 21585   002EF8  EFF4  F017         	goto	i2l8726
 21586   002EFC                     i2l8716:
 21587                           
 21588                           ;MCAL_layer/GPIO/hal_gpio.c: 122:                         LATC |= (1 << pinConfig ->pin)
      +                          ;break;
 21589   002EFC  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21590   002F00  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21591   002F04  30DF               	rrcf	223,w,c
 21592   002F06  32E8               	rrcf	wreg,f,c
 21593   002F08  32E8               	rrcf	wreg,f,c
 21594   002F0A  0B07               	andlw	7
 21595   002F0C  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 21596   002F0E  0E01               	movlw	1
 21597   002F10  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 21598   002F12  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 21599   002F14  EF8E  F017         	goto	i2u616_44
 21600   002F18                     i2u616_45:
 21601   002F18  90D8               	bcf	status,0,c
 21602   002F1A  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 21603   002F1C                     i2u616_44:
 21604   002F1C  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 21605   002F1E  EF8C  F017         	goto	i2u616_45
 21606   002F22  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 21607   002F24  128B               	iorwf	139,f,c	;volatile
 21608   002F26  EFF4  F017         	goto	i2l8726
 21609   002F2A                     i2l8718:
 21610                           
 21611                           ;MCAL_layer/GPIO/hal_gpio.c: 124:                         LATD |= (1 << pinConfig ->pin)
      +                          ;break;
 21612   002F2A  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21613   002F2E  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21614   002F32  30DF               	rrcf	223,w,c
 21615   002F34  32E8               	rrcf	wreg,f,c
 21616   002F36  32E8               	rrcf	wreg,f,c
 21617   002F38  0B07               	andlw	7
 21618   002F3A  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 21619   002F3C  0E01               	movlw	1
 21620   002F3E  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 21621   002F40  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 21622   002F42  EFA5  F017         	goto	i2u617_44
 21623   002F46                     i2u617_45:
 21624   002F46  90D8               	bcf	status,0,c
 21625   002F48  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 21626   002F4A                     i2u617_44:
 21627   002F4A  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 21628   002F4C  EFA3  F017         	goto	i2u617_45
 21629   002F50  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 21630   002F52  128C               	iorwf	140,f,c	;volatile
 21631   002F54  EFF4  F017         	goto	i2l8726
 21632   002F58                     i2l8720:
 21633                           
 21634                           ;MCAL_layer/GPIO/hal_gpio.c: 126:                         LATE |= (1 << pinConfig ->pin)
      +                          ;break;
 21635   002F58  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21636   002F5C  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21637   002F60  30DF               	rrcf	223,w,c
 21638   002F62  32E8               	rrcf	wreg,f,c
 21639   002F64  32E8               	rrcf	wreg,f,c
 21640   002F66  0B07               	andlw	7
 21641   002F68  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 21642   002F6A  0E01               	movlw	1
 21643   002F6C  6E05               	movwf	(??i2_gpio_pin_write_logic+1)^0,c
 21644   002F6E  2A04               	incf	??i2_gpio_pin_write_logic^0,f,c
 21645   002F70  EFBC  F017         	goto	i2u618_44
 21646   002F74                     i2u618_45:
 21647   002F74  90D8               	bcf	status,0,c
 21648   002F76  3605               	rlcf	(??i2_gpio_pin_write_logic+1)^0,f,c
 21649   002F78                     i2u618_44:
 21650   002F78  2E04               	decfsz	??i2_gpio_pin_write_logic^0,f,c
 21651   002F7A  EFBA  F017         	goto	i2u618_45
 21652   002F7E  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 21653   002F80  128D               	iorwf	141,f,c	;volatile
 21654   002F82  EFF4  F017         	goto	i2l8726
 21655   002F86                     i2l8722:
 21656   002F86  C001  FFD9         	movff	i2gpio_pin_write_logic@pinConfig,fsr2l
 21657   002F8A  C002  FFDA         	movff	i2gpio_pin_write_logic@pinConfig+1,fsr2h
 21658   002F8E  50DF               	movf	223,w,c
 21659   002F90  0B07               	andlw	7
 21660                           
 21661                           ; Switch size 1, requested type "simple"
 21662                           ; Number of cases is 5, Range of values is 0 to 4
 21663                           ; switch strategies available:
 21664                           ; Name         Instructions Cycles
 21665                           ; simple_byte           16     9 (average)
 21666                           ;	Chosen strategy is simple_byte
 21667   002F92  0A00               	xorlw	0	; case 0
 21668   002F94  B4D8               	btfsc	status,2,c
 21669   002F96  EF50  F017         	goto	i2l8712
 21670   002F9A  0A01               	xorlw	1	; case 1
 21671   002F9C  B4D8               	btfsc	status,2,c
 21672   002F9E  EF67  F017         	goto	i2l8714
 21673   002FA2  0A03               	xorlw	3	; case 2
 21674   002FA4  B4D8               	btfsc	status,2,c
 21675   002FA6  EF7E  F017         	goto	i2l8716
 21676   002FAA  0A01               	xorlw	1	; case 3
 21677   002FAC  B4D8               	btfsc	status,2,c
 21678   002FAE  EF95  F017         	goto	i2l8718
 21679   002FB2  0A07               	xorlw	7	; case 4
 21680   002FB4  B4D8               	btfsc	status,2,c
 21681   002FB6  EFAC  F017         	goto	i2l8720
 21682   002FBA  EFB9  F016         	goto	i2l811
 21683   002FBE                     i2l8724:
 21684   002FBE  5003               	movf	i2gpio_pin_write_logic@logic^0,w,c
 21685   002FC0  6E04               	movwf	??i2_gpio_pin_write_logic^0,c
 21686   002FC2  6A05               	clrf	(??i2_gpio_pin_write_logic+1)^0,c
 21687                           
 21688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21689                           ; Switch size 1, requested type "simple"
 21690                           ; Number of cases is 1, Range of values is 0 to 0
 21691                           ; switch strategies available:
 21692                           ; Name         Instructions Cycles
 21693                           ; simple_byte            4     3 (average)
 21694                           ;	Chosen strategy is simple_byte
 21695   002FC4  5005               	movf	(??i2_gpio_pin_write_logic+1)^0,w,c
 21696   002FC6  0A00               	xorlw	0	; case 0
 21697   002FC8  B4D8               	btfsc	status,2,c
 21698   002FCA  EFE9  F017         	goto	i2l15882
 21699   002FCE  EFB9  F016         	goto	i2l811
 21700   002FD2                     i2l15882:
 21701                           
 21702                           ; Switch size 1, requested type "simple"
 21703                           ; Number of cases is 2, Range of values is 0 to 1
 21704                           ; switch strategies available:
 21705                           ; Name         Instructions Cycles
 21706                           ; simple_byte            7     4 (average)
 21707                           ;	Chosen strategy is simple_byte
 21708   002FD2  5004               	movf	??i2_gpio_pin_write_logic^0,w,c
 21709   002FD4  0A00               	xorlw	0	; case 0
 21710   002FD6  B4D8               	btfsc	status,2,c
 21711   002FD8  EF34  F017         	goto	i2l8710
 21712   002FDC  0A01               	xorlw	1	; case 1
 21713   002FDE  B4D8               	btfsc	status,2,c
 21714   002FE0  EFC3  F017         	goto	i2l8722
 21715   002FE4  EFB9  F016         	goto	i2l811
 21716   002FE8                     i2l8726:
 21717                           
 21718                           ;MCAL_layer/GPIO/hal_gpio.c: 133:     return rt;
 21719   002FE8  5006               	movf	i2gpio_pin_write_logic@rt^0,w,c
 21720   002FEA  0012               	return		;funcret
 21721   002FEC                     __end_ofi2_gpio_pin_write_logic:
 21722                           	callstack 0
 21723                           
 21724 ;; *************** function ___awmod *****************
 21725 ;; Defined at:
 21726 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awmod.c"
 21727 ;; Parameters:    Size  Location     Type
 21728 ;;  dividend        2    0[COMRAM] int 
 21729 ;;  divisor         2    2[COMRAM] int 
 21730 ;; Auto vars:     Size  Location     Type
 21731 ;;  sign            1    5[COMRAM] unsigned char 
 21732 ;;  counter         1    4[COMRAM] unsigned char 
 21733 ;; Return value:  Size  Location     Type
 21734 ;;                  2    0[COMRAM] int 
 21735 ;; Registers used:
 21736 ;;		wreg, status,2, status,0
 21737 ;; Tracked objects:
 21738 ;;		On entry : 0/0
 21739 ;;		On exit  : 0/0
 21740 ;;		Unchanged: 0/0
 21741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21742 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21743 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21745 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21746 ;;Total ram usage:        6 bytes
 21747 ;; Hardware stack levels used: 1
 21748 ;; This function calls:
 21749 ;;		Nothing
 21750 ;; This function is called by:
 21751 ;;		_Timer0_DefaultInterruptHandler
 21752 ;; This function uses a non-reentrant model
 21753 ;;
 21754                           
 21755                           	psect	text114
 21756   003F66                     __ptext114:
 21757                           	callstack 0
 21758   003F66                     ___awmod:
 21759                           	callstack 16
 21760   003F66  6A06               	clrf	___awmod@sign^0,c
 21761   003F68  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 21762   003F6A  EFBB  F01F         	goto	i2u778_40
 21763   003F6E  EFB9  F01F         	goto	i2u778_41
 21764   003F72                     i2u778_41:
 21765   003F72  EFC1  F01F         	goto	i2l9822
 21766   003F76                     i2u778_40:
 21767   003F76  6C01               	negf	___awmod@dividend^0,c
 21768   003F78  1E02               	comf	(___awmod@dividend+1)^0,f,c
 21769   003F7A  B0D8               	btfsc	status,0,c
 21770   003F7C  2A02               	incf	(___awmod@dividend+1)^0,f,c
 21771   003F7E  0E01               	movlw	1
 21772   003F80  6E06               	movwf	___awmod@sign^0,c
 21773   003F82                     i2l9822:
 21774   003F82  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 21775   003F84  EFC8  F01F         	goto	i2u779_40
 21776   003F88  EFC6  F01F         	goto	i2u779_41
 21777   003F8C                     i2u779_41:
 21778   003F8C  EFCC  F01F         	goto	i2l9826
 21779   003F90                     i2u779_40:
 21780   003F90  6C03               	negf	___awmod@divisor^0,c
 21781   003F92  1E04               	comf	(___awmod@divisor+1)^0,f,c
 21782   003F94  B0D8               	btfsc	status,0,c
 21783   003F96  2A04               	incf	(___awmod@divisor+1)^0,f,c
 21784   003F98                     i2l9826:
 21785   003F98  5003               	movf	___awmod@divisor^0,w,c
 21786   003F9A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 21787   003F9C  B4D8               	btfsc	status,2,c
 21788   003F9E  EFD3  F01F         	goto	i2u780_41
 21789   003FA2  EFD5  F01F         	goto	i2u780_40
 21790   003FA6                     i2u780_41:
 21791   003FA6  EFF9  F01F         	goto	i2l9842
 21792   003FAA                     i2u780_40:
 21793   003FAA  0E01               	movlw	1
 21794   003FAC  6E05               	movwf	___awmod@counter^0,c
 21795   003FAE  EFDD  F01F         	goto	i2l9832
 21796   003FB2                     i2l9830:
 21797   003FB2  90D8               	bcf	status,0,c
 21798   003FB4  3603               	rlcf	___awmod@divisor^0,f,c
 21799   003FB6  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 21800   003FB8  2A05               	incf	___awmod@counter^0,f,c
 21801   003FBA                     i2l9832:
 21802   003FBA  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 21803   003FBC  EFE2  F01F         	goto	i2u781_41
 21804   003FC0  EFE4  F01F         	goto	i2u781_40
 21805   003FC4                     i2u781_41:
 21806   003FC4  EFD9  F01F         	goto	i2l9830
 21807   003FC8                     i2u781_40:
 21808   003FC8                     i2l9834:
 21809   003FC8  5003               	movf	___awmod@divisor^0,w,c
 21810   003FCA  5C01               	subwf	___awmod@dividend^0,w,c
 21811   003FCC  5004               	movf	(___awmod@divisor+1)^0,w,c
 21812   003FCE  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 21813   003FD0  A0D8               	btfss	status,0,c
 21814   003FD2  EFED  F01F         	goto	i2u782_41
 21815   003FD6  EFEF  F01F         	goto	i2u782_40
 21816   003FDA                     i2u782_41:
 21817   003FDA  EFF3  F01F         	goto	i2l9838
 21818   003FDE                     i2u782_40:
 21819   003FDE  5003               	movf	___awmod@divisor^0,w,c
 21820   003FE0  5E01               	subwf	___awmod@dividend^0,f,c
 21821   003FE2  5004               	movf	(___awmod@divisor+1)^0,w,c
 21822   003FE4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 21823   003FE6                     i2l9838:
 21824   003FE6  90D8               	bcf	status,0,c
 21825   003FE8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 21826   003FEA  3203               	rrcf	___awmod@divisor^0,f,c
 21827   003FEC  2E05               	decfsz	___awmod@counter^0,f,c
 21828   003FEE  EFE4  F01F         	goto	i2l9834
 21829   003FF2                     i2l9842:
 21830   003FF2  5006               	movf	___awmod@sign^0,w,c
 21831   003FF4  B4D8               	btfsc	status,2,c
 21832   003FF6  EFFF  F01F         	goto	i2u783_41
 21833   003FFA  EF01  F020         	goto	i2u783_40
 21834   003FFE                     i2u783_41:
 21835   003FFE  EF05  F020         	goto	i2l9846
 21836   004002                     i2u783_40:
 21837   004002  6C01               	negf	___awmod@dividend^0,c
 21838   004004  1E02               	comf	(___awmod@dividend+1)^0,f,c
 21839   004006  B0D8               	btfsc	status,0,c
 21840   004008  2A02               	incf	(___awmod@dividend+1)^0,f,c
 21841   00400A                     i2l9846:
 21842   00400A  C001  F001         	movff	___awmod@dividend,?___awmod
 21843   00400E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 21844   004012  0012               	return		;funcret
 21845   004014                     __end_of___awmod:
 21846                           	callstack 0
 21847                           
 21848 ;; *************** function ___awdiv *****************
 21849 ;; Defined at:
 21850 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\awdiv.c"
 21851 ;; Parameters:    Size  Location     Type
 21852 ;;  dividend        2    0[COMRAM] int 
 21853 ;;  divisor         2    2[COMRAM] int 
 21854 ;; Auto vars:     Size  Location     Type
 21855 ;;  quotient        2    6[COMRAM] int 
 21856 ;;  sign            1    5[COMRAM] unsigned char 
 21857 ;;  counter         1    4[COMRAM] unsigned char 
 21858 ;; Return value:  Size  Location     Type
 21859 ;;                  2    0[COMRAM] int 
 21860 ;; Registers used:
 21861 ;;		wreg, status,2, status,0
 21862 ;; Tracked objects:
 21863 ;;		On entry : 0/0
 21864 ;;		On exit  : 0/0
 21865 ;;		Unchanged: 0/0
 21866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21867 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21868 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21870 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21871 ;;Total ram usage:        8 bytes
 21872 ;; Hardware stack levels used: 1
 21873 ;; This function calls:
 21874 ;;		Nothing
 21875 ;; This function is called by:
 21876 ;;		_Timer0_DefaultInterruptHandler
 21877 ;; This function uses a non-reentrant model
 21878 ;;
 21879                           
 21880                           	psect	text115
 21881   003C7E                     __ptext115:
 21882                           	callstack 0
 21883   003C7E                     ___awdiv:
 21884                           	callstack 16
 21885   003C7E  6A06               	clrf	___awdiv@sign^0,c
 21886   003C80  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 21887   003C82  EF47  F01E         	goto	i2u772_40
 21888   003C86  EF45  F01E         	goto	i2u772_41
 21889   003C8A                     i2u772_41:
 21890   003C8A  EF4D  F01E         	goto	i2l9778
 21891   003C8E                     i2u772_40:
 21892   003C8E  6C03               	negf	___awdiv@divisor^0,c
 21893   003C90  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 21894   003C92  B0D8               	btfsc	status,0,c
 21895   003C94  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 21896   003C96  0E01               	movlw	1
 21897   003C98  6E06               	movwf	___awdiv@sign^0,c
 21898   003C9A                     i2l9778:
 21899   003C9A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 21900   003C9C  EF54  F01E         	goto	i2u773_40
 21901   003CA0  EF52  F01E         	goto	i2u773_41
 21902   003CA4                     i2u773_41:
 21903   003CA4  EF5A  F01E         	goto	i2l9784
 21904   003CA8                     i2u773_40:
 21905   003CA8  6C01               	negf	___awdiv@dividend^0,c
 21906   003CAA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 21907   003CAC  B0D8               	btfsc	status,0,c
 21908   003CAE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 21909   003CB0  0E01               	movlw	1
 21910   003CB2  1A06               	xorwf	___awdiv@sign^0,f,c
 21911   003CB4                     i2l9784:
 21912   003CB4  0E00               	movlw	0
 21913   003CB6  6E08               	movwf	(___awdiv@quotient+1)^0,c
 21914   003CB8  0E00               	movlw	0
 21915   003CBA  6E07               	movwf	___awdiv@quotient^0,c
 21916   003CBC  5003               	movf	___awdiv@divisor^0,w,c
 21917   003CBE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 21918   003CC0  B4D8               	btfsc	status,2,c
 21919   003CC2  EF65  F01E         	goto	i2u774_41
 21920   003CC6  EF67  F01E         	goto	i2u774_40
 21921   003CCA                     i2u774_41:
 21922   003CCA  EF8F  F01E         	goto	i2l9806
 21923   003CCE                     i2u774_40:
 21924   003CCE  0E01               	movlw	1
 21925   003CD0  6E05               	movwf	___awdiv@counter^0,c
 21926   003CD2  EF6F  F01E         	goto	i2l9792
 21927   003CD6                     i2l9790:
 21928   003CD6  90D8               	bcf	status,0,c
 21929   003CD8  3603               	rlcf	___awdiv@divisor^0,f,c
 21930   003CDA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 21931   003CDC  2A05               	incf	___awdiv@counter^0,f,c
 21932   003CDE                     i2l9792:
 21933   003CDE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 21934   003CE0  EF74  F01E         	goto	i2u775_41
 21935   003CE4  EF76  F01E         	goto	i2u775_40
 21936   003CE8                     i2u775_41:
 21937   003CE8  EF6B  F01E         	goto	i2l9790
 21938   003CEC                     i2u775_40:
 21939   003CEC                     i2l9794:
 21940   003CEC  90D8               	bcf	status,0,c
 21941   003CEE  3607               	rlcf	___awdiv@quotient^0,f,c
 21942   003CF0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 21943   003CF2  5003               	movf	___awdiv@divisor^0,w,c
 21944   003CF4  5C01               	subwf	___awdiv@dividend^0,w,c
 21945   003CF6  5004               	movf	(___awdiv@divisor+1)^0,w,c
 21946   003CF8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 21947   003CFA  A0D8               	btfss	status,0,c
 21948   003CFC  EF82  F01E         	goto	i2u776_41
 21949   003D00  EF84  F01E         	goto	i2u776_40
 21950   003D04                     i2u776_41:
 21951   003D04  EF89  F01E         	goto	i2l9802
 21952   003D08                     i2u776_40:
 21953   003D08  5003               	movf	___awdiv@divisor^0,w,c
 21954   003D0A  5E01               	subwf	___awdiv@dividend^0,f,c
 21955   003D0C  5004               	movf	(___awdiv@divisor+1)^0,w,c
 21956   003D0E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 21957   003D10  8007               	bsf	___awdiv@quotient^0,0,c
 21958   003D12                     i2l9802:
 21959   003D12  90D8               	bcf	status,0,c
 21960   003D14  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 21961   003D16  3203               	rrcf	___awdiv@divisor^0,f,c
 21962   003D18  2E05               	decfsz	___awdiv@counter^0,f,c
 21963   003D1A  EF76  F01E         	goto	i2l9794
 21964   003D1E                     i2l9806:
 21965   003D1E  5006               	movf	___awdiv@sign^0,w,c
 21966   003D20  B4D8               	btfsc	status,2,c
 21967   003D22  EF95  F01E         	goto	i2u777_41
 21968   003D26  EF97  F01E         	goto	i2u777_40
 21969   003D2A                     i2u777_41:
 21970   003D2A  EF9B  F01E         	goto	i2l9810
 21971   003D2E                     i2u777_40:
 21972   003D2E  6C07               	negf	___awdiv@quotient^0,c
 21973   003D30  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 21974   003D32  B0D8               	btfsc	status,0,c
 21975   003D34  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 21976   003D36                     i2l9810:
 21977   003D36  C007  F001         	movff	___awdiv@quotient,?___awdiv
 21978   003D3A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 21979   003D3E  0012               	return		;funcret
 21980   003D40                     __end_of___awdiv:
 21981                           	callstack 0
 21982                           
 21983 ;; *************** function _RB7_ISR *****************
 21984 ;; Defined at:
 21985 ;;		line 709 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 21986 ;; Parameters:    Size  Location     Type
 21987 ;;  RB7_Source      1    wreg     unsigned char 
 21988 ;; Auto vars:     Size  Location     Type
 21989 ;;  RB7_Source      1    0[COMRAM] unsigned char 
 21990 ;; Return value:  Size  Location     Type
 21991 ;;                  1    wreg      void 
 21992 ;; Registers used:
 21993 ;;		wreg, status,2, status,0
 21994 ;; Tracked objects:
 21995 ;;		On entry : 0/0
 21996 ;;		On exit  : 0/0
 21997 ;;		Unchanged: 0/0
 21998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22003 ;;Total ram usage:        1 bytes
 22004 ;; Hardware stack levels used: 1
 22005 ;; This function calls:
 22006 ;;		Nothing
 22007 ;; This function is called by:
 22008 ;;		_InterruptManager
 22009 ;; This function uses a non-reentrant model
 22010 ;;
 22011                           
 22012                           	psect	text116
 22013   00543E                     __ptext116:
 22014                           	callstack 0
 22015   00543E                     _RB7_ISR:
 22016                           	callstack 18
 22017                           
 22018                           ;incstack = 0
 22019                           ;RB7_ISR@RB7_Source stored from wreg
 22020   00543E  6E01               	movwf	RB7_ISR@RB7_Source^0,c
 22021   005440                     
 22022                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 711:     (INTCONbits.RBIF = 0);
 22023   005440  90F2               	bcf	242,0,c	;volatile
 22024   005442                     
 22025                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 713:     if(0 == RB7_Source){
 22026   005442  5001               	movf	RB7_ISR@RB7_Source^0,w,c
 22027   005444  A4D8               	btfss	status,2,c
 22028   005446  EF27  F02A         	goto	i2u844_41
 22029   00544A  EF29  F02A         	goto	i2u844_40
 22030   00544E                     i2u844_41:
 22031   00544E  EF2B  F02A         	goto	i2l10488
 22032   005452                     i2u844_40:
 22033   005452  EF2B  F02A         	goto	i2l1380
 22034   005456                     i2l10488:
 22035   005456                     i2l1380:
 22036   005456  0012               	return		;funcret
 22037   005458                     __end_of_RB7_ISR:
 22038                           	callstack 0
 22039                           
 22040 ;; *************** function _RB6_ISR *****************
 22041 ;; Defined at:
 22042 ;;		line 693 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 22043 ;; Parameters:    Size  Location     Type
 22044 ;;  RB6_Source      1    wreg     unsigned char 
 22045 ;; Auto vars:     Size  Location     Type
 22046 ;;  RB6_Source      1    0[COMRAM] unsigned char 
 22047 ;; Return value:  Size  Location     Type
 22048 ;;                  1    wreg      void 
 22049 ;; Registers used:
 22050 ;;		wreg, status,2, status,0
 22051 ;; Tracked objects:
 22052 ;;		On entry : 0/0
 22053 ;;		On exit  : 0/0
 22054 ;;		Unchanged: 0/0
 22055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22056 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22057 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22058 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22059 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22060 ;;Total ram usage:        1 bytes
 22061 ;; Hardware stack levels used: 1
 22062 ;; This function calls:
 22063 ;;		Nothing
 22064 ;; This function is called by:
 22065 ;;		_InterruptManager
 22066 ;; This function uses a non-reentrant model
 22067 ;;
 22068                           
 22069                           	psect	text117
 22070   005458                     __ptext117:
 22071                           	callstack 0
 22072   005458                     _RB6_ISR:
 22073                           	callstack 18
 22074                           
 22075                           ;incstack = 0
 22076                           ;RB6_ISR@RB6_Source stored from wreg
 22077   005458  6E01               	movwf	RB6_ISR@RB6_Source^0,c
 22078   00545A                     
 22079                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 695:     (INTCONbits.RBIF = 0);
 22080   00545A  90F2               	bcf	242,0,c	;volatile
 22081   00545C                     
 22082                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 697:     if(0 == RB6_Source){
 22083   00545C  5001               	movf	RB6_ISR@RB6_Source^0,w,c
 22084   00545E  A4D8               	btfss	status,2,c
 22085   005460  EF34  F02A         	goto	i2u843_41
 22086   005464  EF36  F02A         	goto	i2u843_40
 22087   005468                     i2u843_41:
 22088   005468  EF38  F02A         	goto	i2l10474
 22089   00546C                     i2u843_40:
 22090   00546C  EF38  F02A         	goto	i2l1369
 22091   005470                     i2l10474:
 22092   005470                     i2l1369:
 22093   005470  0012               	return		;funcret
 22094   005472                     __end_of_RB6_ISR:
 22095                           	callstack 0
 22096                           
 22097 ;; *************** function _RB5_ISR *****************
 22098 ;; Defined at:
 22099 ;;		line 677 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 22100 ;; Parameters:    Size  Location     Type
 22101 ;;  RB5_Source      1    wreg     unsigned char 
 22102 ;; Auto vars:     Size  Location     Type
 22103 ;;  RB5_Source      1    0[COMRAM] unsigned char 
 22104 ;; Return value:  Size  Location     Type
 22105 ;;                  1    wreg      void 
 22106 ;; Registers used:
 22107 ;;		wreg, status,2, status,0
 22108 ;; Tracked objects:
 22109 ;;		On entry : 0/0
 22110 ;;		On exit  : 0/0
 22111 ;;		Unchanged: 0/0
 22112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22114 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22116 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22117 ;;Total ram usage:        1 bytes
 22118 ;; Hardware stack levels used: 1
 22119 ;; This function calls:
 22120 ;;		Nothing
 22121 ;; This function is called by:
 22122 ;;		_InterruptManager
 22123 ;; This function uses a non-reentrant model
 22124 ;;
 22125                           
 22126                           	psect	text118
 22127   005472                     __ptext118:
 22128                           	callstack 0
 22129   005472                     _RB5_ISR:
 22130                           	callstack 18
 22131                           
 22132                           ;incstack = 0
 22133                           ;RB5_ISR@RB5_Source stored from wreg
 22134   005472  6E01               	movwf	RB5_ISR@RB5_Source^0,c
 22135   005474                     
 22136                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 679:     (INTCONbits.RBIF = 0);
 22137   005474  90F2               	bcf	242,0,c	;volatile
 22138   005476                     
 22139                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 681:     if(0 == RB5_Source){
 22140   005476  5001               	movf	RB5_ISR@RB5_Source^0,w,c
 22141   005478  A4D8               	btfss	status,2,c
 22142   00547A  EF41  F02A         	goto	i2u842_41
 22143   00547E  EF43  F02A         	goto	i2u842_40
 22144   005482                     i2u842_41:
 22145   005482  EF45  F02A         	goto	i2l10460
 22146   005486                     i2u842_40:
 22147   005486  EF45  F02A         	goto	i2l1358
 22148   00548A                     i2l10460:
 22149   00548A                     i2l1358:
 22150   00548A  0012               	return		;funcret
 22151   00548C                     __end_of_RB5_ISR:
 22152                           	callstack 0
 22153                           
 22154 ;; *************** function _RB4_ISR *****************
 22155 ;; Defined at:
 22156 ;;		line 661 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 22157 ;; Parameters:    Size  Location     Type
 22158 ;;  RB4_Source      1    wreg     unsigned char 
 22159 ;; Auto vars:     Size  Location     Type
 22160 ;;  RB4_Source      1    0[COMRAM] unsigned char 
 22161 ;; Return value:  Size  Location     Type
 22162 ;;                  1    wreg      void 
 22163 ;; Registers used:
 22164 ;;		wreg, status,2, status,0
 22165 ;; Tracked objects:
 22166 ;;		On entry : 0/0
 22167 ;;		On exit  : 0/0
 22168 ;;		Unchanged: 0/0
 22169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22173 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22174 ;;Total ram usage:        1 bytes
 22175 ;; Hardware stack levels used: 1
 22176 ;; This function calls:
 22177 ;;		Nothing
 22178 ;; This function is called by:
 22179 ;;		_InterruptManager
 22180 ;; This function uses a non-reentrant model
 22181 ;;
 22182                           
 22183                           	psect	text119
 22184   00548C                     __ptext119:
 22185                           	callstack 0
 22186   00548C                     _RB4_ISR:
 22187                           	callstack 18
 22188                           
 22189                           ;incstack = 0
 22190                           ;RB4_ISR@RB4_Source stored from wreg
 22191   00548C  6E01               	movwf	RB4_ISR@RB4_Source^0,c
 22192   00548E                     
 22193                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 663:     (INTCONbits.RBIF = 0);
 22194   00548E  90F2               	bcf	242,0,c	;volatile
 22195   005490                     
 22196                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 665:     if(0 == RB4_Source){
 22197   005490  5001               	movf	RB4_ISR@RB4_Source^0,w,c
 22198   005492  A4D8               	btfss	status,2,c
 22199   005494  EF4E  F02A         	goto	i2u841_41
 22200   005498  EF50  F02A         	goto	i2u841_40
 22201   00549C                     i2u841_41:
 22202   00549C  EF52  F02A         	goto	i2l10446
 22203   0054A0                     i2u841_40:
 22204   0054A0  EF52  F02A         	goto	i2l1347
 22205   0054A4                     i2l10446:
 22206   0054A4                     i2l1347:
 22207   0054A4  0012               	return		;funcret
 22208   0054A6                     __end_of_RB4_ISR:
 22209                           	callstack 0
 22210                           
 22211 ;; *************** function _MSSP_SPI_ISR *****************
 22212 ;; Defined at:
 22213 ;;		line 326 in file "MCAL_layer/SPI/hal_spi.c"
 22214 ;; Parameters:    Size  Location     Type
 22215 ;;		None
 22216 ;; Auto vars:     Size  Location     Type
 22217 ;;		None
 22218 ;; Return value:  Size  Location     Type
 22219 ;;                  1    wreg      void 
 22220 ;; Registers used:
 22221 ;;		None
 22222 ;; Tracked objects:
 22223 ;;		On entry : 0/0
 22224 ;;		On exit  : 0/0
 22225 ;;		Unchanged: 0/0
 22226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22231 ;;Total ram usage:        0 bytes
 22232 ;; Hardware stack levels used: 1
 22233 ;; This function calls:
 22234 ;;		Nothing
 22235 ;; This function is called by:
 22236 ;;		_InterruptManager
 22237 ;; This function uses a non-reentrant model
 22238 ;;
 22239                           
 22240                           	psect	text120
 22241   005622                     __ptext120:
 22242                           	callstack 0
 22243   005622                     _MSSP_SPI_ISR:
 22244                           	callstack 18
 22245   005622                     
 22246                           ;MCAL_layer/SPI/hal_spi.c: 328:     (PIR1bits.SSPIF = 0);
 22247   005622  969E               	bcf	158,3,c	;volatile
 22248   005624  0012               	return		;funcret
 22249   005626                     __end_of_MSSP_SPI_ISR:
 22250                           	callstack 0
 22251                           
 22252 ;; *************** function _MSSP_I2C_ISR *****************
 22253 ;; Defined at:
 22254 ;;		line 332 in file "MCAL_layer/I2C/hal_i2c.c"
 22255 ;; Parameters:    Size  Location     Type
 22256 ;;		None
 22257 ;; Auto vars:     Size  Location     Type
 22258 ;;		None
 22259 ;; Return value:  Size  Location     Type
 22260 ;;                  1    wreg      void 
 22261 ;; Registers used:
 22262 ;;		None
 22263 ;; Tracked objects:
 22264 ;;		On entry : 0/0
 22265 ;;		On exit  : 0/0
 22266 ;;		Unchanged: 0/0
 22267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22272 ;;Total ram usage:        0 bytes
 22273 ;; Hardware stack levels used: 1
 22274 ;; This function calls:
 22275 ;;		Nothing
 22276 ;; This function is called by:
 22277 ;;		_InterruptManager
 22278 ;; This function uses a non-reentrant model
 22279 ;;
 22280                           
 22281                           	psect	text121
 22282   005626                     __ptext121:
 22283                           	callstack 0
 22284   005626                     _MSSP_I2C_ISR:
 22285                           	callstack 18
 22286   005626                     
 22287                           ;MCAL_layer/I2C/hal_i2c.c: 333:     (PIR1bits.SSPIF = 0);
 22288   005626  969E               	bcf	158,3,c	;volatile
 22289   005628  0012               	return		;funcret
 22290   00562A                     __end_of_MSSP_I2C_ISR:
 22291                           	callstack 0
 22292                           
 22293 ;; *************** function _MSSP_I2C_BC_ISR *****************
 22294 ;; Defined at:
 22295 ;;		line 339 in file "MCAL_layer/I2C/hal_i2c.c"
 22296 ;; Parameters:    Size  Location     Type
 22297 ;;		None
 22298 ;; Auto vars:     Size  Location     Type
 22299 ;;		None
 22300 ;; Return value:  Size  Location     Type
 22301 ;;                  1    wreg      void 
 22302 ;; Registers used:
 22303 ;;		None
 22304 ;; Tracked objects:
 22305 ;;		On entry : 0/0
 22306 ;;		On exit  : 0/0
 22307 ;;		Unchanged: 0/0
 22308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22313 ;;Total ram usage:        0 bytes
 22314 ;; Hardware stack levels used: 1
 22315 ;; This function calls:
 22316 ;;		Nothing
 22317 ;; This function is called by:
 22318 ;;		_InterruptManager
 22319 ;; This function uses a non-reentrant model
 22320 ;;
 22321                           
 22322                           	psect	text122
 22323   00562A                     __ptext122:
 22324                           	callstack 0
 22325   00562A                     _MSSP_I2C_BC_ISR:
 22326                           	callstack 18
 22327   00562A                     
 22328                           ;MCAL_layer/I2C/hal_i2c.c: 340:     (PIR2bits.BCLIF = 0);
 22329   00562A  96A1               	bcf	161,3,c	;volatile
 22330   00562C  0012               	return		;funcret
 22331   00562E                     __end_of_MSSP_I2C_BC_ISR:
 22332                           	callstack 0
 22333                           
 22334 ;; *************** function _INT2_ISR *****************
 22335 ;; Defined at:
 22336 ;;		line 436 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 22337 ;; Parameters:    Size  Location     Type
 22338 ;;		None
 22339 ;; Auto vars:     Size  Location     Type
 22340 ;;		None
 22341 ;; Return value:  Size  Location     Type
 22342 ;;                  1    wreg      void 
 22343 ;; Registers used:
 22344 ;;		None
 22345 ;; Tracked objects:
 22346 ;;		On entry : 0/0
 22347 ;;		On exit  : 0/0
 22348 ;;		Unchanged: 0/0
 22349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22354 ;;Total ram usage:        0 bytes
 22355 ;; Hardware stack levels used: 1
 22356 ;; This function calls:
 22357 ;;		Nothing
 22358 ;; This function is called by:
 22359 ;;		_InterruptManager
 22360 ;; This function uses a non-reentrant model
 22361 ;;
 22362                           
 22363                           	psect	text123
 22364   00562E                     __ptext123:
 22365                           	callstack 0
 22366   00562E                     _INT2_ISR:
 22367                           	callstack 18
 22368   00562E                     
 22369                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 438:     (INTCON3bits.INT2IF = 0);
 22370   00562E  92F0               	bcf	240,1,c	;volatile
 22371   005630  0012               	return		;funcret
 22372   005632                     __end_of_INT2_ISR:
 22373                           	callstack 0
 22374                           
 22375 ;; *************** function _INT1_ISR *****************
 22376 ;; Defined at:
 22377 ;;		line 427 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 22378 ;; Parameters:    Size  Location     Type
 22379 ;;		None
 22380 ;; Auto vars:     Size  Location     Type
 22381 ;;		None
 22382 ;; Return value:  Size  Location     Type
 22383 ;;                  1    wreg      void 
 22384 ;; Registers used:
 22385 ;;		None
 22386 ;; Tracked objects:
 22387 ;;		On entry : 0/0
 22388 ;;		On exit  : 0/0
 22389 ;;		Unchanged: 0/0
 22390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22395 ;;Total ram usage:        0 bytes
 22396 ;; Hardware stack levels used: 1
 22397 ;; This function calls:
 22398 ;;		Nothing
 22399 ;; This function is called by:
 22400 ;;		_InterruptManager
 22401 ;; This function uses a non-reentrant model
 22402 ;;
 22403                           
 22404                           	psect	text124
 22405   005632                     __ptext124:
 22406                           	callstack 0
 22407   005632                     _INT1_ISR:
 22408                           	callstack 18
 22409   005632                     
 22410                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 429:     (INTCON3bits.INT1IF = 0);
 22411   005632  90F0               	bcf	240,0,c	;volatile
 22412   005634  0012               	return		;funcret
 22413   005636                     __end_of_INT1_ISR:
 22414                           	callstack 0
 22415                           
 22416 ;; *************** function _INT0_ISR *****************
 22417 ;; Defined at:
 22418 ;;		line 418 in file "MCAL_layer/Interrupts/mcal_external_interrupts.c"
 22419 ;; Parameters:    Size  Location     Type
 22420 ;;		None
 22421 ;; Auto vars:     Size  Location     Type
 22422 ;;		None
 22423 ;; Return value:  Size  Location     Type
 22424 ;;                  1    wreg      void 
 22425 ;; Registers used:
 22426 ;;		None
 22427 ;; Tracked objects:
 22428 ;;		On entry : 0/0
 22429 ;;		On exit  : 0/0
 22430 ;;		Unchanged: 0/0
 22431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22436 ;;Total ram usage:        0 bytes
 22437 ;; Hardware stack levels used: 1
 22438 ;; This function calls:
 22439 ;;		Nothing
 22440 ;; This function is called by:
 22441 ;;		_InterruptManager
 22442 ;; This function uses a non-reentrant model
 22443 ;;
 22444                           
 22445                           	psect	text125
 22446   005636                     __ptext125:
 22447                           	callstack 0
 22448   005636                     _INT0_ISR:
 22449                           	callstack 18
 22450   005636                     
 22451                           ;MCAL_layer/Interrupts/mcal_external_interrupts.c: 420:     (INTCONbits.INT0IF = 0);
 22452   005636  92F2               	bcf	242,1,c	;volatile
 22453   005638  0012               	return		;funcret
 22454   00563A                     __end_of_INT0_ISR:
 22455                           	callstack 0
 22456                           
 22457 ;; *************** function _EUSART_TX_ISR *****************
 22458 ;; Defined at:
 22459 ;;		line 348 in file "MCAL_layer/USART/hal_usart.c"
 22460 ;; Parameters:    Size  Location     Type
 22461 ;;		None
 22462 ;; Auto vars:     Size  Location     Type
 22463 ;;		None
 22464 ;; Return value:  Size  Location     Type
 22465 ;;                  1    wreg      void 
 22466 ;; Registers used:
 22467 ;;		None
 22468 ;; Tracked objects:
 22469 ;;		On entry : 0/0
 22470 ;;		On exit  : 0/0
 22471 ;;		Unchanged: 0/0
 22472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22476 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22477 ;;Total ram usage:        0 bytes
 22478 ;; Hardware stack levels used: 1
 22479 ;; This function calls:
 22480 ;;		Nothing
 22481 ;; This function is called by:
 22482 ;;		_InterruptManager
 22483 ;; This function uses a non-reentrant model
 22484 ;;
 22485                           
 22486                           	psect	text126
 22487   00563A                     __ptext126:
 22488                           	callstack 0
 22489   00563A                     _EUSART_TX_ISR:
 22490                           	callstack 18
 22491   00563A                     
 22492                           ;MCAL_layer/USART/hal_usart.c: 349:     (PIE1bits.TXIE = 0);
 22493   00563A  989D               	bcf	157,4,c	;volatile
 22494   00563C  0012               	return		;funcret
 22495   00563E                     __end_of_EUSART_TX_ISR:
 22496                           	callstack 0
 22497                           
 22498 ;; *************** function _EUSART_RX_ISR *****************
 22499 ;; Defined at:
 22500 ;;		line 353 in file "MCAL_layer/USART/hal_usart.c"
 22501 ;; Parameters:    Size  Location     Type
 22502 ;;		None
 22503 ;; Auto vars:     Size  Location     Type
 22504 ;;		None
 22505 ;; Return value:  Size  Location     Type
 22506 ;;                  1    wreg      void 
 22507 ;; Registers used:
 22508 ;;		wreg, status,2, status,0
 22509 ;; Tracked objects:
 22510 ;;		On entry : 0/0
 22511 ;;		On exit  : 0/0
 22512 ;;		Unchanged: 0/0
 22513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22518 ;;Total ram usage:        0 bytes
 22519 ;; Hardware stack levels used: 1
 22520 ;; This function calls:
 22521 ;;		Nothing
 22522 ;; This function is called by:
 22523 ;;		_InterruptManager
 22524 ;; This function uses a non-reentrant model
 22525 ;;
 22526                           
 22527                           	psect	text127
 22528   005646                     __ptext127:
 22529                           	callstack 0
 22530   005646                     _EUSART_RX_ISR:
 22531                           	callstack 18
 22532   005646  0012               	return		;funcret
 22533   005648                     __end_of_EUSART_RX_ISR:
 22534                           	callstack 0
 22535                           
 22536 ;; *************** function _CCP2_ISR *****************
 22537 ;; Defined at:
 22538 ;;		line 518 in file "MCAL_layer/CCP/hal_ccp.c"
 22539 ;; Parameters:    Size  Location     Type
 22540 ;;		None
 22541 ;; Auto vars:     Size  Location     Type
 22542 ;;		None
 22543 ;; Return value:  Size  Location     Type
 22544 ;;                  1    wreg      void 
 22545 ;; Registers used:
 22546 ;;		None
 22547 ;; Tracked objects:
 22548 ;;		On entry : 0/0
 22549 ;;		On exit  : 0/0
 22550 ;;		Unchanged: 0/0
 22551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22556 ;;Total ram usage:        0 bytes
 22557 ;; Hardware stack levels used: 1
 22558 ;; This function calls:
 22559 ;;		Nothing
 22560 ;; This function is called by:
 22561 ;;		_InterruptManager
 22562 ;; This function uses a non-reentrant model
 22563 ;;
 22564                           
 22565                           	psect	text128
 22566   00563E                     __ptext128:
 22567                           	callstack 0
 22568   00563E                     _CCP2_ISR:
 22569                           	callstack 18
 22570   00563E                     
 22571                           ;MCAL_layer/CCP/hal_ccp.c: 520:     (PIR2bits.CCP2IF = 0);
 22572   00563E  90A1               	bcf	161,0,c	;volatile
 22573   005640  0012               	return		;funcret
 22574   005642                     __end_of_CCP2_ISR:
 22575                           	callstack 0
 22576                           
 22577 ;; *************** function _CCP1_ISR *****************
 22578 ;; Defined at:
 22579 ;;		line 511 in file "MCAL_layer/CCP/hal_ccp.c"
 22580 ;; Parameters:    Size  Location     Type
 22581 ;;		None
 22582 ;; Auto vars:     Size  Location     Type
 22583 ;;		None
 22584 ;; Return value:  Size  Location     Type
 22585 ;;                  1    wreg      void 
 22586 ;; Registers used:
 22587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
 22588 ;; Tracked objects:
 22589 ;;		On entry : 0/0
 22590 ;;		On exit  : 0/0
 22591 ;;		Unchanged: 0/0
 22592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22597 ;;Total ram usage:        0 bytes
 22598 ;; Hardware stack levels used: 1
 22599 ;; Hardware stack levels required when called: 2
 22600 ;; This function calls:
 22601 ;;		NULL
 22602 ;;		_CCP1_DefaultISR
 22603 ;; This function is called by:
 22604 ;;		_InterruptManager
 22605 ;; This function uses a non-reentrant model
 22606 ;;
 22607                           
 22608                           	psect	text129
 22609   005206                     __ptext129:
 22610                           	callstack 0
 22611   005206                     _CCP1_ISR:
 22612                           	callstack 16
 22613   005206                     
 22614                           ;MCAL_layer/CCP/hal_ccp.c: 513:     (PIR1bits.CCP1IF = 0);
 22615   005206  949E               	bcf	158,2,c	;volatile
 22616   005208                     
 22617                           ;MCAL_layer/CCP/hal_ccp.c: 515:     if(CCP1_InterrptHandle) CCP1_InterrptHandle();
 22618   005208  0100               	movlb	0	; () banked
 22619   00520A  51BF               	movf	_CCP1_InterrptHandle& (0+255),w,b
 22620   00520C  11C0               	iorwf	(_CCP1_InterrptHandle+1)& (0+255),w,b
 22621   00520E  B4D8               	btfsc	status,2,c
 22622   005210  EF0C  F029         	goto	i2u839_41
 22623   005214  EF0E  F029         	goto	i2u839_40
 22624   005218                     i2u839_41:
 22625   005218  EF1A  F029         	goto	i2l698
 22626   00521C                     i2u839_40:
 22627   00521C                     
 22628                           ; BSR set to: 0
 22629   00521C  D802               	call	i2u840_48
 22630   00521E  EF1A  F029         	goto	i2u840_49
 22631   005222                     i2u840_48:
 22632   005222  0005               	push	
 22633   005224  6EFA               	movwf	pclath,c
 22634   005226  51BF               	movf	_CCP1_InterrptHandle& (0+255),w,b
 22635   005228  6EFD               	movwf	tosl,c
 22636   00522A  51C0               	movf	(_CCP1_InterrptHandle+1)& (0+255),w,b
 22637   00522C  6EFE               	movwf	tosh,c
 22638   00522E  6AFF               	clrf	tosu,c
 22639   005230  50FA               	movf	pclath,w,c
 22640   005232  0012               	return		;indir
 22641   005234                     i2u840_49:
 22642   005234                     i2l698:
 22643   005234  0012               	return		;funcret
 22644   005236                     __end_of_CCP1_ISR:
 22645                           	callstack 0
 22646                           
 22647 ;; *************** function _CCP1_DefaultISR *****************
 22648 ;; Defined at:
 22649 ;;		line 17 in file "ECU_layer/Servo_Motor/ecu_servoMotor.c"
 22650 ;; Parameters:    Size  Location     Type
 22651 ;;		None
 22652 ;; Auto vars:     Size  Location     Type
 22653 ;;		None
 22654 ;; Return value:  Size  Location     Type
 22655 ;;                  1    wreg      void 
 22656 ;; Registers used:
 22657 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22658 ;; Tracked objects:
 22659 ;;		On entry : 0/0
 22660 ;;		On exit  : 0/0
 22661 ;;		Unchanged: 0/0
 22662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22667 ;;Total ram usage:        0 bytes
 22668 ;; Hardware stack levels used: 1
 22669 ;; Hardware stack levels required when called: 1
 22670 ;; This function calls:
 22671 ;;		_CCPx_CompareMode_WriteData
 22672 ;;		_Timer1_Write_Value
 22673 ;; This function is called by:
 22674 ;;		_Servo_Init
 22675 ;;		_CCP1_ISR
 22676 ;; This function uses a non-reentrant model
 22677 ;;
 22678                           
 22679                           	psect	text130
 22680   004574                     __ptext130:
 22681                           	callstack 0
 22682   004574                     _CCP1_DefaultISR:
 22683                           	callstack 16
 22684   004574                     
 22685                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 18:     CCP1_flag++;
 22686   004574  2A27               	incf	_CCP1_flag^0,f,c	;volatile
 22687   004576                     
 22688                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 19:     ret = Timer1_Write_Value(&timer1_obj, 0
      +                          );
 22689   004576  0ECD               	movlw	low _timer1_obj
 22690   004578  6E01               	movwf	Timer1_Write_Value@_timer1^0,c
 22691   00457A  0E00               	movlw	0
 22692   00457C  6E03               	movwf	(Timer1_Write_Value@_value+1)^0,c
 22693   00457E  0E00               	movlw	0
 22694   004580  6E02               	movwf	Timer1_Write_Value@_value^0,c
 22695   004582  EC95  F029         	call	_Timer1_Write_Value	;wreg free
 22696   004586  0100               	movlb	0	; () banked
 22697   004588  6FC8               	movwf	_ret@ecu_servoMotor$F857& (0+255),b
 22698   00458A                     
 22699                           ; BSR set to: 0
 22700                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 20:     if(1 == CCP1_flag){
 22701   00458A  0427               	decf	_CCP1_flag^0,w,c	;volatile
 22702   00458C  A4D8               	btfss	status,2,c
 22703   00458E  EFCB  F022         	goto	i2u806_41
 22704   004592  EFCD  F022         	goto	i2u806_40
 22705   004596                     i2u806_41:
 22706   004596  EFDF  F022         	goto	i2l9998
 22707   00459A                     i2u806_40:
 22708   00459A                     
 22709                           ; BSR set to: 0
 22710                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 21:         ret = CCPx_CompareMode_WriteData(&C
      +                          CP1_obj, PWM_Val);
 22711   00459A  0E65               	movlw	low _CCP1_obj
 22712   00459C  6E01               	movwf	CCPx_CompareMode_WriteData@_CCPx^0,c
 22713   00459E  0E01               	movlw	high _CCP1_obj
 22714   0045A0  6E02               	movwf	(CCPx_CompareMode_WriteData@_CCPx+1)^0,c
 22715   0045A2  C022  F003         	movff	_PWM_Val,CCPx_CompareMode_WriteData@_Data	;volatile
 22716   0045A6  C023  F004         	movff	_PWM_Val+1,CCPx_CompareMode_WriteData@_Data+1	;volatile
 22717   0045AA  EC15  F025         	call	_CCPx_CompareMode_WriteData	;wreg free
 22718   0045AE  0100               	movlb	0	; () banked
 22719   0045B0  6FC8               	movwf	_ret@ecu_servoMotor$F857& (0+255),b
 22720   0045B2                     
 22721                           ; BSR set to: 0
 22722                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 22:         (CCP1CONbits.CCP1M = (uint8)0x09);
 22723   0045B2  50BD               	movf	189,w,c	;volatile
 22724   0045B4  0BF0               	andlw	-16
 22725   0045B6  0909               	iorlw	9
 22726   0045B8  6EBD               	movwf	189,c	;volatile
 22727                           
 22728                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 23:     }
 22729   0045BA  EFFD  F022         	goto	i2l384
 22730   0045BE                     i2l9998:
 22731                           
 22732                           ; BSR set to: 0
 22733   0045BE  0E02               	movlw	2
 22734   0045C0  1827               	xorwf	_CCP1_flag^0,w,c	;volatile
 22735   0045C2  A4D8               	btfss	status,2,c
 22736   0045C4  EFE6  F022         	goto	i2u807_41
 22737   0045C8  EFE8  F022         	goto	i2u807_40
 22738   0045CC                     i2u807_41:
 22739   0045CC  EFFD  F022         	goto	i2l384
 22740   0045D0                     i2u807_40:
 22741   0045D0                     
 22742                           ; BSR set to: 0
 22743                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 25:         ret = CCPx_CompareMode_WriteData(&C
      +                          CP1_obj, 20000 - PWM_Val);
 22744   0045D0  0E65               	movlw	low _CCP1_obj
 22745   0045D2  6E01               	movwf	CCPx_CompareMode_WriteData@_CCPx^0,c
 22746   0045D4  0E01               	movlw	high _CCP1_obj
 22747   0045D6  6E02               	movwf	(CCPx_CompareMode_WriteData@_CCPx+1)^0,c
 22748   0045D8  5022               	movf	_PWM_Val^0,w,c	;volatile
 22749   0045DA  0820               	sublw	32
 22750   0045DC  6E03               	movwf	CCPx_CompareMode_WriteData@_Data^0,c
 22751   0045DE  5023               	movf	(_PWM_Val+1)^0,w,c	;volatile
 22752   0045E0  A0D8               	btfss	status,0,c
 22753   0045E2  2AE8               	incf	wreg,f,c
 22754   0045E4  084E               	sublw	78
 22755   0045E6  6E04               	movwf	(CCPx_CompareMode_WriteData@_Data+1)^0,c
 22756   0045E8  EC15  F025         	call	_CCPx_CompareMode_WriteData	;wreg free
 22757   0045EC  0100               	movlb	0	; () banked
 22758   0045EE  6FC8               	movwf	_ret@ecu_servoMotor$F857& (0+255),b
 22759   0045F0                     
 22760                           ; BSR set to: 0
 22761                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 26:         (CCP1CONbits.CCP1M = (uint8)0x08);
 22762   0045F0  50BD               	movf	189,w,c	;volatile
 22763   0045F2  0BF0               	andlw	-16
 22764   0045F4  0908               	iorlw	8
 22765   0045F6  6EBD               	movwf	189,c	;volatile
 22766   0045F8                     
 22767                           ; BSR set to: 0
 22768                           ;ECU_layer/Servo_Motor/ecu_servoMotor.c: 27:         CCP1_flag = 0;
 22769   0045F8  6A27               	clrf	_CCP1_flag^0,c	;volatile
 22770   0045FA                     i2l384:
 22771                           
 22772                           ; BSR set to: 0
 22773   0045FA  0012               	return		;funcret
 22774   0045FC                     __end_of_CCP1_DefaultISR:
 22775                           	callstack 0
 22776                           
 22777 ;; *************** function _Timer1_Write_Value *****************
 22778 ;; Defined at:
 22779 ;;		line 72 in file "MCAL_layer/Timer1/hal_timer1.c"
 22780 ;; Parameters:    Size  Location     Type
 22781 ;;  _timer1         1    0[COMRAM] PTR const struct .
 22782 ;;		 -> timer1_obj(6), 
 22783 ;;  _value          2    1[COMRAM] unsigned short 
 22784 ;; Auto vars:     Size  Location     Type
 22785 ;;  ret             1    3[COMRAM] unsigned char 
 22786 ;; Return value:  Size  Location     Type
 22787 ;;                  1    wreg      unsigned char 
 22788 ;; Registers used:
 22789 ;;		wreg, status,2
 22790 ;; Tracked objects:
 22791 ;;		On entry : 0/0
 22792 ;;		On exit  : 0/0
 22793 ;;		Unchanged: 0/0
 22794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22795 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22796 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22798 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22799 ;;Total ram usage:        4 bytes
 22800 ;; Hardware stack levels used: 1
 22801 ;; This function calls:
 22802 ;;		Nothing
 22803 ;; This function is called by:
 22804 ;;		_CCP1_DefaultISR
 22805 ;;		_Timer1_Init
 22806 ;; This function uses a non-reentrant model
 22807 ;;
 22808                           
 22809                           	psect	text131
 22810   00532A                     __ptext131:
 22811                           	callstack 0
 22812   00532A                     _Timer1_Write_Value:
 22813                           	callstack 16
 22814   00532A                     
 22815                           ;MCAL_layer/Timer1/hal_timer1.c: 74:     if(((void*)0) == _timer1){
 22816   00532A  5001               	movf	Timer1_Write_Value@_timer1^0,w,c
 22817   00532C  A4D8               	btfss	status,2,c
 22818   00532E  EF9B  F029         	goto	i2u751_41
 22819   005332  EF9D  F029         	goto	i2u751_40
 22820   005336                     i2u751_41:
 22821   005336  EFA0  F029         	goto	i2l9592
 22822   00533A                     i2u751_40:
 22823   00533A                     
 22824                           ;MCAL_layer/Timer1/hal_timer1.c: 75:         ret = (STD_ReturnType)0x00;
 22825   00533A  6A04               	clrf	Timer1_Write_Value@ret^0,c
 22826                           
 22827                           ;MCAL_layer/Timer1/hal_timer1.c: 76:     }
 22828   00533C  EFA6  F029         	goto	i2l1782
 22829   005340                     i2l9592:
 22830                           
 22831                           ;MCAL_layer/Timer1/hal_timer1.c: 79:         TMR1H = (uint8)(_value >> 8);
 22832   005340  5003               	movf	(Timer1_Write_Value@_value+1)^0,w,c
 22833   005342  6ECF               	movwf	207,c	;volatile
 22834   005344                     
 22835                           ;MCAL_layer/Timer1/hal_timer1.c: 80:         TMR1L = (uint8)(_value);
 22836   005344  C002  FFCE         	movff	Timer1_Write_Value@_value,4046	;volatile
 22837                           
 22838                           ;MCAL_layer/Timer1/hal_timer1.c: 82:         ret = (STD_ReturnType)0x01;
 22839   005348  0E01               	movlw	1
 22840   00534A  6E04               	movwf	Timer1_Write_Value@ret^0,c
 22841   00534C                     i2l1782:
 22842                           
 22843                           ;MCAL_layer/Timer1/hal_timer1.c: 84:     return ret;
 22844   00534C  5004               	movf	Timer1_Write_Value@ret^0,w,c
 22845   00534E  0012               	return		;funcret
 22846   005350                     __end_of_Timer1_Write_Value:
 22847                           	callstack 0
 22848                           
 22849 ;; *************** function _CCPx_CompareMode_WriteData *****************
 22850 ;; Defined at:
 22851 ;;		line 212 in file "MCAL_layer/CCP/hal_ccp.c"
 22852 ;; Parameters:    Size  Location     Type
 22853 ;;  _CCPx           2    0[COMRAM] PTR const struct .
 22854 ;;		 -> CCP1_obj(11), 
 22855 ;;  _Data           2    2[COMRAM] unsigned short 
 22856 ;; Auto vars:     Size  Location     Type
 22857 ;;  CCPx_reg        2    6[COMRAM] struct .
 22858 ;;  ret             1    5[COMRAM] unsigned char 
 22859 ;; Return value:  Size  Location     Type
 22860 ;;                  1    wreg      unsigned char 
 22861 ;; Registers used:
 22862 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22863 ;; Tracked objects:
 22864 ;;		On entry : 0/0
 22865 ;;		On exit  : 0/0
 22866 ;;		Unchanged: 0/0
 22867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22868 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22869 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22870 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22871 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22872 ;;Total ram usage:        8 bytes
 22873 ;; Hardware stack levels used: 1
 22874 ;; This function calls:
 22875 ;;		Nothing
 22876 ;; This function is called by:
 22877 ;;		_CCP1_DefaultISR
 22878 ;;		_Servo_Set_Angle
 22879 ;; This function uses a non-reentrant model
 22880 ;;
 22881                           
 22882                           	psect	text132
 22883   004A2A                     __ptext132:
 22884                           	callstack 0
 22885   004A2A                     _CCPx_CompareMode_WriteData:
 22886                           	callstack 16
 22887   004A2A                     
 22888                           ;MCAL_layer/CCP/hal_ccp.c: 215:     if(((void*)0) == _CCPx){
 22889   004A2A  5001               	movf	CCPx_CompareMode_WriteData@_CCPx^0,w,c
 22890   004A2C  1002               	iorwf	(CCPx_CompareMode_WriteData@_CCPx+1)^0,w,c
 22891   004A2E  A4D8               	btfss	status,2,c
 22892   004A30  EF1C  F025         	goto	i2u752_41
 22893   004A34  EF1E  F025         	goto	i2u752_40
 22894   004A38                     i2u752_41:
 22895   004A38  EF21  F025         	goto	i2l649
 22896   004A3C                     i2u752_40:
 22897   004A3C                     
 22898                           ;MCAL_layer/CCP/hal_ccp.c: 216:         ret = (STD_ReturnType)0x00;
 22899   004A3C  6A06               	clrf	CCPx_CompareMode_WriteData@ret^0,c
 22900                           
 22901                           ;MCAL_layer/CCP/hal_ccp.c: 217:     }
 22902   004A3E  EF49  F025         	goto	i2l650
 22903   004A42                     i2l649:
 22904                           
 22905                           ;MCAL_layer/CCP/hal_ccp.c: 219:         CCPx_reg.CCPR_16BIT = _Data;
 22906   004A42  C003  F007         	movff	CCPx_CompareMode_WriteData@_Data,CCPx_CompareMode_WriteData@CCPx_reg
 22907   004A46  C004  F008         	movff	CCPx_CompareMode_WriteData@_Data+1,CCPx_CompareMode_WriteData@CCPx_reg+1
 22908   004A4A                     
 22909                           ;MCAL_layer/CCP/hal_ccp.c: 220:         if(CCP1_SELECTED == _CCPx->CCPx_Instance){
 22910   004A4A  C001  FFD9         	movff	CCPx_CompareMode_WriteData@_CCPx,fsr2l
 22911   004A4E  C002  FFDA         	movff	CCPx_CompareMode_WriteData@_CCPx+1,fsr2h
 22912   004A52  50DF               	movf	indf2,w,c
 22913   004A54  A4D8               	btfss	status,2,c
 22914   004A56  EF2F  F025         	goto	i2u753_41
 22915   004A5A  EF31  F025         	goto	i2u753_40
 22916   004A5E                     i2u753_41:
 22917   004A5E  EF37  F025         	goto	i2l9608
 22918   004A62                     i2u753_40:
 22919   004A62                     
 22920                           ;MCAL_layer/CCP/hal_ccp.c: 221:             CCPR1L = CCPx_reg.CCPR_LOW;
 22921   004A62  C007  FFBE         	movff	CCPx_CompareMode_WriteData@CCPx_reg,4030	;volatile
 22922                           
 22923                           ;MCAL_layer/CCP/hal_ccp.c: 222:             CCPR1H = CCPx_reg.CCPR_HIGH;
 22924   004A66  C008  FFBF         	movff	CCPx_CompareMode_WriteData@CCPx_reg+1,4031	;volatile
 22925                           
 22926                           ;MCAL_layer/CCP/hal_ccp.c: 223:         }
 22927   004A6A  EF47  F025         	goto	i2l9612
 22928   004A6E                     i2l9608:
 22929   004A6E  C001  FFD9         	movff	CCPx_CompareMode_WriteData@_CCPx,fsr2l
 22930   004A72  C002  FFDA         	movff	CCPx_CompareMode_WriteData@_CCPx+1,fsr2h
 22931   004A76  04DE               	decf	postinc2,w,c
 22932   004A78  A4D8               	btfss	status,2,c
 22933   004A7A  EF41  F025         	goto	i2u754_41
 22934   004A7E  EF43  F025         	goto	i2u754_40
 22935   004A82                     i2u754_41:
 22936   004A82  EF47  F025         	goto	i2l9612
 22937   004A86                     i2u754_40:
 22938   004A86                     
 22939                           ;MCAL_layer/CCP/hal_ccp.c: 225:             CCPR2L = CCPx_reg.CCPR_LOW;
 22940   004A86  C007  FFBB         	movff	CCPx_CompareMode_WriteData@CCPx_reg,4027	;volatile
 22941                           
 22942                           ;MCAL_layer/CCP/hal_ccp.c: 226:             CCPR2H = CCPx_reg.CCPR_HIGH;
 22943   004A8A  C008  FFBC         	movff	CCPx_CompareMode_WriteData@CCPx_reg+1,4028	;volatile
 22944   004A8E                     i2l9612:
 22945                           
 22946                           ;MCAL_layer/CCP/hal_ccp.c: 231:         ret = (STD_ReturnType)0x01;
 22947   004A8E  0E01               	movlw	1
 22948   004A90  6E06               	movwf	CCPx_CompareMode_WriteData@ret^0,c
 22949   004A92                     i2l650:
 22950                           
 22951                           ;MCAL_layer/CCP/hal_ccp.c: 233:     return ret;
 22952   004A92  5006               	movf	CCPx_CompareMode_WriteData@ret^0,w,c
 22953   004A94  0012               	return		;funcret
 22954   004A96                     __end_of_CCPx_CompareMode_WriteData:
 22955                           	callstack 0
 22956                           
 22957 ;; *************** function _ADC_ISR *****************
 22958 ;; Defined at:
 22959 ;;		line 253 in file "MCAL_layer/ADC/hal_adc.c"
 22960 ;; Parameters:    Size  Location     Type
 22961 ;;		None
 22962 ;; Auto vars:     Size  Location     Type
 22963 ;;		None
 22964 ;; Return value:  Size  Location     Type
 22965 ;;                  1    wreg      void 
 22966 ;; Registers used:
 22967 ;;		None
 22968 ;; Tracked objects:
 22969 ;;		On entry : 0/0
 22970 ;;		On exit  : 0/0
 22971 ;;		Unchanged: 0/0
 22972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22977 ;;Total ram usage:        0 bytes
 22978 ;; Hardware stack levels used: 1
 22979 ;; This function calls:
 22980 ;;		Nothing
 22981 ;; This function is called by:
 22982 ;;		_InterruptManager
 22983 ;; This function uses a non-reentrant model
 22984 ;;
 22985                           
 22986                           	psect	text133
 22987   005642                     __ptext133:
 22988                           	callstack 0
 22989   005642                     _ADC_ISR:
 22990                           	callstack 18
 22991   005642                     
 22992                           ;MCAL_layer/ADC/hal_adc.c: 255:         (PIR1bits.ADIF = 0);
 22993   005642  9C9E               	bcf	158,6,c	;volatile
 22994   005644  0012               	return		;funcret
 22995   005646                     __end_of_ADC_ISR:
 22996                           	callstack 0
 22997                           
 22998                           	psect	rparam
 22999   000001                     ___rparam_used  equ	1
 23000   000000                     ___param_bank   equ	0
 23001   000000                     __Lparam        equ	__Lrparam
 23002   000000                     __Hparam        equ	__Hrparam
 23003                           
 23004                           	psect	temp
 23005   00003F                     btemp:
 23006                           	callstack 0
 23007   00003F                     	ds	1
 23008   00003F                     int$flags       set	btemp
 23009   000040                     wtemp8          set	btemp+1
 23010   000040                     ttemp5          set	btemp+1
 23011   000043                     ttemp6          set	btemp+4
 23012   000047                     ttemp7          set	btemp+8
 23013                           
 23014                           	psect	config
 23015                           
 23016                           ; Padding undefined space
 23017   300000                     	org	3145728
 23018   300000  FF                 	db	255
 23019                           
 23020                           ;Config register CONFIG1H @ 0x300001
 23021                           ;	Oscillator Selection bits
 23022                           ;	FOSC = HS, HS oscillator
 23023                           ;	Fail-Safe Clock Monitor Enable bit
 23024                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 23025                           ;	Internal/External Oscillator Switchover bit
 23026                           ;	IESO = OFF, Oscillator Switchover mode disabled
 23027   300001                     	org	3145729
 23028   300001  02                 	db	2
 23029                           
 23030                           ;Config register CONFIG2L @ 0x300002
 23031                           ;	Power-up Timer Enable bit
 23032                           ;	PWRTEN = OFF, PWRT disabled
 23033                           ;	Brown-out Reset Enable bits
 23034                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 23035                           ;	Brown Out Reset Voltage bits
 23036                           ;	BORV = 18, VBOR set to 1.8 V nominal
 23037   300002                     	org	3145730
 23038   300002  1F                 	db	31
 23039                           
 23040                           ;Config register CONFIG2H @ 0x300003
 23041                           ;	Watchdog Timer Enable bit
 23042                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 23043                           ;	Watchdog Timer Postscale Select bits
 23044                           ;	WDTPS = 32768, 1:32768
 23045   300003                     	org	3145731
 23046   300003  1E                 	db	30
 23047                           
 23048                           ; Padding undefined space
 23049   300004                     	org	3145732
 23050   300004  FF                 	db	255
 23051                           
 23052                           ;Config register CONFIG3H @ 0x300005
 23053                           ;	CCP2 MUX bit
 23054                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 23055                           ;	PORTB A/D Enable bit
 23056                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 23057                           ;	Low-Power Timer1 Oscillator Enable bit
 23058                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 23059                           ;	HFINTOSC Fast Start-up
 23060                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 23061                           ;	MCLR Pin Enable bit
 23062                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 23063   300005                     	org	3145733
 23064   300005  8B                 	db	139
 23065                           
 23066                           ;Config register CONFIG4L @ 0x300006
 23067                           ;	Stack Full/Underflow Reset Enable bit
 23068                           ;	STVREN = ON, Stack full/underflow will cause Reset
 23069                           ;	Single-Supply ICSP Enable bit
 23070                           ;	LVP = ON, Single-Supply ICSP enabled
 23071                           ;	Extended Instruction Set Enable bit
 23072                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 23073                           ;	Background Debugger Enable bit
 23074                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 23075   300006                     	org	3145734
 23076   300006  85                 	db	133
 23077                           
 23078                           ; Padding undefined space
 23079   300007                     	org	3145735
 23080   300007  FF                 	db	255
 23081                           
 23082                           ;Config register CONFIG5L @ 0x300008
 23083                           ;	Code Protection Block 0
 23084                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 23085                           ;	Code Protection Block 1
 23086                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 23087                           ;	Code Protection Block 2
 23088                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 23089                           ;	Code Protection Block 3
 23090                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 23091   300008                     	org	3145736
 23092   300008  0F                 	db	15
 23093                           
 23094                           ;Config register CONFIG5H @ 0x300009
 23095                           ;	Boot Block Code Protection bit
 23096                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 23097                           ;	Data EEPROM Code Protection bit
 23098                           ;	CPD = OFF, Data EEPROM not code-protected
 23099   300009                     	org	3145737
 23100   300009  C0                 	db	192
 23101                           
 23102                           ;Config register CONFIG6L @ 0x30000A
 23103                           ;	Write Protection Block 0
 23104                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 23105                           ;	Write Protection Block 1
 23106                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 23107                           ;	Write Protection Block 2
 23108                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 23109                           ;	Write Protection Block 3
 23110                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 23111   30000A                     	org	3145738
 23112   30000A  0F                 	db	15
 23113                           
 23114                           ;Config register CONFIG6H @ 0x30000B
 23115                           ;	Configuration Register Write Protection bit
 23116                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 23117                           ;	Boot Block Write Protection bit
 23118                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 23119                           ;	Data EEPROM Write Protection bit
 23120                           ;	WRTD = OFF, Data EEPROM not write-protected
 23121   30000B                     	org	3145739
 23122   30000B  E0                 	db	224
 23123                           
 23124                           ;Config register CONFIG7L @ 0x30000C
 23125                           ;	Table Read Protection Block 0
 23126                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 23127                           ;	Table Read Protection Block 1
 23128                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 23129                           ;	Table Read Protection Block 2
 23130                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 23131                           ;	Table Read Protection Block 3
 23132                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 23133   30000C                     	org	3145740
 23134   30000C  0F                 	db	15
 23135                           
 23136                           ;Config register CONFIG7H @ 0x30000D
 23137                           ;	Boot Block Table Read Protection bit
 23138                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 23139   30000D                     	org	3145741
 23140   30000D  40                 	db	64
 23141                           tosu	equ	0xFFF
 23142                           tosh	equ	0xFFE
 23143                           tosl	equ	0xFFD
 23144                           stkptr	equ	0xFFC
 23145                           pclatu	equ	0xFFB
 23146                           pclath	equ	0xFFA
 23147                           pcl	equ	0xFF9
 23148                           tblptru	equ	0xFF8
 23149                           tblptrh	equ	0xFF7
 23150                           tblptrl	equ	0xFF6
 23151                           tablat	equ	0xFF5
 23152                           prodh	equ	0xFF4
 23153                           prodl	equ	0xFF3
 23154                           indf0	equ	0xFEF
 23155                           postinc0	equ	0xFEE
 23156                           postdec0	equ	0xFED
 23157                           preinc0	equ	0xFEC
 23158                           plusw0	equ	0xFEB
 23159                           fsr0h	equ	0xFEA
 23160                           fsr0l	equ	0xFE9
 23161                           wreg	equ	0xFE8
 23162                           indf1	equ	0xFE7
 23163                           postinc1	equ	0xFE6
 23164                           postdec1	equ	0xFE5
 23165                           preinc1	equ	0xFE4
 23166                           plusw1	equ	0xFE3
 23167                           fsr1h	equ	0xFE2
 23168                           fsr1l	equ	0xFE1
 23169                           bsr	equ	0xFE0
 23170                           indf2	equ	0xFDF
 23171                           postinc2	equ	0xFDE
 23172                           postdec2	equ	0xFDD
 23173                           preinc2	equ	0xFDC
 23174                           plusw2	equ	0xFDB
 23175                           fsr2h	equ	0xFDA
 23176                           fsr2l	equ	0xFD9
 23177                           status	equ	0xFD8

Data Sizes:
    Strings     47
    Constant    32
    Data        83
    BSS         174
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      62
    BANK0           160     43     160
    BANK1           256     38     151
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    ADC_Conversion_Result@_ADC_config	PTR const struct . size(2) Largest target is 8
		 -> ADC_LDR(BANK1[8]), 

    ADC_Conversion_Result@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Conversion_Result@_ADC_Result	PTR unsigned short  size(1) Largest target is 1
		 -> LDR_Read_Value(COMRAM[1]), 

    ADC_Get_Conversion_Result_Block@_ADC_config	PTR const struct . size(2) Largest target is 8
		 -> ADC_LDR(BANK1[8]), 

    ADC_Get_Conversion_Result_Block@_ADC_Result	PTR unsigned short  size(1) Largest target is 1
		 -> LDR_Read_Value(COMRAM[1]), 

    ADC_Init@_ADC_config	PTR const struct . size(2) Largest target is 8
		 -> ADC_LDR(BANK1[8]), 

    ADC_Init@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Interrupt_Configuration@_ADC_config	PTR const struct . size(2) Largest target is 8
		 -> ADC_LDR(BANK1[8]), 

    ADC_Interrupt_Configuration@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_LDR$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Result_Format_Control@_ADC_config	PTR const struct . size(2) Largest target is 8
		 -> ADC_LDR(BANK1[8]), 

    ADC_Result_Format_Control@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    ADC_Select_Channel@_ADC_config	PTR const struct . size(2) Largest target is 8
		 -> ADC_LDR(BANK1[8]), 

    ADC_Start_Conversion@_ADC_config	PTR const struct . size(2) Largest target is 8
		 -> ADC_LDR(BANK1[8]), 

    ADC_Voltage_Reference_Control@_ADC_config	PTR const struct . size(2) Largest target is 8
		 -> ADC_LDR(BANK1[8]), 

    ADC_Voltage_Reference_Control@_ADC_config$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    bufferBlock$data	PTR unsigned char  size(2) Largest target is 0

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    cb$0	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    CCP1_InterrptHandle	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), NULL(), 

    CCP1_obj$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCP1_obj$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCP2_InterrptHandle	PTR FTN()void  size(2) Largest target is 2
		 -> CCP1_obj$CCP2_InterruptHandler(BANK1[2]), NULL(), 

    CCPx_Compare_mode_config@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Compare_mode_config@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_CompareMode_IsComplete@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_CompareMode_IsComplete@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_CompareMode_WriteData@_CCPx	PTR const struct . size(2) Largest target is 11
		 -> CCP1_obj(BANK1[11]), 

    CCPx_CompareMode_WriteData@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_CompareMode_WriteData@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_Deinit@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Deinit@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_Init@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Init@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_Interrupt_Configuration@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Interrupt_Configuration@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    CCPx_Timer_Config@_CCPx$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    CCPx_Timer_Config@_CCPx$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    ECU_LCD_4Bit_Initialize@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    ECU_LCD_4Bit_Send_char_Data@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    ECU_LCD_4Bit_Send_Command@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    ECU_LCD_4Bit_Send_String_Data_Postition@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    ECU_LCD_4Bit_Send_String_Data_Postition@_Str	PTR unsigned char  size(2) Largest target is 18
		 -> REALTIMECLOCK_DS1307_Data(BANK1[18]), STR_5(CODE[11]), STR_6(CODE[8]), STR_7(CODE[8]), 
		 -> STR_8(CODE[9]), STR_9(CODE[9]), 

    EUSART_ASYNC_Init@_EUSART	PTR const struct . size(2) Largest target is 17
		 -> UART_obj(BANK1[17]), 

    EUSART_ASYNC_WriteStringBlocking@_Byte	PTR unsigned char  size(2) Largest target is 18
		 -> REALTIMECLOCK_DS1307_Data(BANK1[18]), STR_4(CODE[7]), 

    EUSART_BaudRateCalculation@_EUSART	PTR const struct . size(2) Largest target is 17
		 -> UART_obj(BANK1[17]), 

    EUSART_BaudRateCalculation@_EUSART$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_BaudRateCalculation@_EUSART$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_BaudRateCalculation@_EUSART$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_BaudRateCalculation@_EUSART$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_RX_Init@_EUSART	PTR const struct . size(2) Largest target is 17
		 -> UART_obj(BANK1[17]), 

    EUSART_RX_Init@_EUSART$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_RX_Init@_EUSART$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_RX_Init@_EUSART$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_RX_Init@_EUSART$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_TX_Init@_EUSART	PTR const struct . size(2) Largest target is 17
		 -> UART_obj(BANK1[17]), 

    EUSART_TX_Init@_EUSART$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TX_Init@_EUSART$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TX_Init@_EUSART$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    EUSART_TX_Init@_EUSART$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> Convert_uint16_to_string@Temp_String(COMRAM[6]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@pinConfig	PTR const struct . size(2) Largest target is 8
		 -> Buzz(COMRAM[1]), CCP1_obj$CCPx_PIN$port(BANK1[1]), ECU_Relay_Initialize@relay_t(COMRAM[1]), keypad_1(BANK1[8]), 
		 -> keypad_1$KeypadColoumnsConfig(BANK1[4]), keypad_1$KeypadRowsConfig(BANK1[4]), LCD_1(COMRAM[6]), LCD_1$DataPins(COMRAM[4]), 
		 -> LED_init@LED(COMRAM[1]), pinRC6(BANK0[1]), pinRC7(BANK0[1]), 

    gpio_pin_initialize@pinConfig	PTR const struct . size(2) Largest target is 8
		 -> Buzz(COMRAM[1]), CCP1_obj$CCPx_PIN$port(BANK1[1]), ECU_Relay_Initialize@relay_t(COMRAM[1]), keypad_1(BANK1[8]), 
		 -> keypad_1$KeypadRowsConfig(BANK1[4]), LCD_1(COMRAM[6]), LCD_1$DataPins(COMRAM[4]), pinRC6(BANK0[1]), 
		 -> pinRC7(BANK0[1]), 

    gpio_pin_read_logic@logic	PTR enum E3381 size(1) Largest target is 1
		 -> ECU_Button_Read@Get_buuton_logic(COMRAM[1]), keyPad_Read@coloumn_logic(BANK0[1]), 

    gpio_pin_read_logic@pinConfig	PTR const struct . size(2) Largest target is 8
		 -> keypad_1(BANK1[8]), keypad_1$KeypadColoumnsConfig(BANK1[4]), 

    gpio_pin_write_logic@pinConfig	PTR const struct . size(2) Largest target is 8
		 -> Buzz(COMRAM[1]), CCP1_obj$CCPx_PIN$port(BANK1[1]), ECU_Relay_Initialize@relay_t(COMRAM[1]), ECU_Relay_turnOFF@relay_t(COMRAM[1]), 
		 -> ECU_Relay_turnON@relay_t(COMRAM[1]), keypad_1(BANK1[8]), keypad_1$KeypadRowsConfig(BANK1[4]), LCD_1(COMRAM[6]), 
		 -> LCD_1$DataPins(COMRAM[4]), LED_turnOFF@LED(COMRAM[1]), LED_turnON@LED(COMRAM[1]), pinRC6(BANK0[1]), 
		 -> pinRC7(BANK0[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    i2c_fsmStateTable	const PTR FTN()enum E3128[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_IDLE(), I2C_DO_RCEN(), I2C_DO_RESET(), 
		 -> I2C_DO_RX(), I2C_DO_RX_ACK(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_SEND_ADR_READ(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_READ(), 
		 -> I2C_DO_SEND_RESTART_WRITE(), I2C_DO_SEND_STOP(), I2C_DO_TX(), I2C_DO_TX_EMPTY(), 

    I2C_Init@_I2C$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Init@_I2C$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    I2C_Init@_I2C$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_Config@_I2C$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_Config@_I2C$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    I2C_Interrupt_Config@_I2C$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Configuration@_I2C$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Configuration@_I2C$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    I2C_Master_Mode_Configuration@_I2C$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Read1ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> NULL(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetBuffer@buffer	PTR void  size(1) Largest target is 4
		 -> bufferBlock$data(COMRAM[2]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read1ByteRegister@returnValue$data(COMRAM[2]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read2ByteRegister@returnValue$data(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Write1ByteRegister@data$data(COMRAM[2]), I2C_Write1ByteRegister@reg(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@data$data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E363 size(2) Largest target is 1
		 -> rd1RegCompleteHandler(), rd2RegCompleteHandler(), rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), NULL(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_Slave_Mode_Configuration@_I2C$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configuration@_I2C$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    I2C_Slave_Mode_Configuration@_I2C$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    I2C_Status$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    I2C_Status$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    I2C_Status$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> bufferBlock$data(COMRAM[2]), I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read1ByteRegister@returnValue$data(COMRAM[2]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_Read2ByteRegister@returnValue$data(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Write1ByteRegister@data$data(COMRAM[2]), I2C_Write1ByteRegister@reg(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@data$data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    I2C_Write1ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data$data	PTR unsigned char  size(2) Largest target is 0

    Interrupt_INT0_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INT1_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INT2_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_INTx_Clear_Flag@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Disable@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Edge_Init@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Enable@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Pin_Init@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Priority_Init@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_INTx_Set_Handler@INTx$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RB4_Handler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB4_Handler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB5_Handler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB5_Handler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB6_Handler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB6_Handler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB7_Handler_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RB7_Handler_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Interrupt_RBx_Pin_Init@RBx$Interrupt_Handle_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Pin_Init@RBx$Interrupt_Handle_LOW	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Set_Handler@RBx$Interrupt_Handle_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Set_Handler@RBx$Interrupt_Handle_LOW	PTR FTN()void  size(2) Largest target is 0

    keyPad_Initialize@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad_1(BANK1[8]), 

    keyPad_Read@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad_1(BANK1[8]), 

    keyPad_Read@keypad_value	PTR unsigned char  size(1) Largest target is 1
		 -> exit_alarm(COMRAM[1]), exit_Clock(COMRAM[1]), nextBack(COMRAM[1]), NumberPressed(COMRAM[1]), 
		 -> userInput(COMRAM[1]), 

    lat_registers	PTR volatile unsigned char [5] size(1) Largest target is 1
		 -> LATA(BIGSFR[1]), LATB(BIGSFR[1]), LATC(BIGSFR[1]), LATD(BIGSFR[1]), 
		 -> LATE(BIGSFR[1]), 

    LCD_4Bits_Send_Enable_Signal@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    LCD_4Bits_Set_Curser@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    LCD_Send_4Bits@_LCD	PTR const struct . size(1) Largest target is 6
		 -> LCD_1(COMRAM[6]), 

    PinsConfig@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    port_registers	PTR volatile unsigned char [5] size(1) Largest target is 1
		 -> PORTA(BIGSFR[1]), PORTB(BIGSFR[1]), PORTC(BIGSFR[1]), PORTD(BIGSFR[1]), 
		 -> PORTE(BIGSFR[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rd2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    rdBlkRegCompleteHandler@ptr$data	PTR unsigned char  size(2) Largest target is 0

    S1011$ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S2047$I2C_DefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2047$I2C_Report_Receive_OverFlow	PTR FTN()void  size(2) Largest target is 0

    S2047$I2C_Report_Write_Collision	PTR FTN()void  size(2) Largest target is 0

    S2584$EXT_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S2627$Interrupt_Handle_HIGH	PTR FTN()void  size(2) Largest target is 0

    S2627$Interrupt_Handle_LOW	PTR FTN()void  size(2) Largest target is 0

    S3417$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S3757$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    S4207$TIMER2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S4356$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S5084$data	PTR unsigned char  size(2) Largest target is 0

    S5251$0$0	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S5251$callbackPayload	PTR void [6] size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    S5251$callbackTable	PTR FTN(PTR void ,)enum E363[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), rd1RegCompleteHandler(), rd2RegCompleteHandler(), 
		 -> rdBlkRegCompleteHandler(), wr1RegCompleteHandler(), wr2RegCompleteHandler(), NULL(), 

    S5251$data_ptr	PTR unsigned char  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@reg(BANK0[1]), I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_Write1ByteRegister@data(BANK0[1]), I2C_Write1ByteRegister@reg(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write2ByteRegister@reg(COMRAM[1]), NULL(NULL[0]), 

    S582$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S582$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S582$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S582$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S6443$buffer	PTR unsigned char  size(1) Largest target is 6
		 -> Convert_uint16_to_string@Temp_String(COMRAM[6]), 

    S6443$source	PTR const unsigned char  size(2) Largest target is 0

    S760$CCP1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> CCP1_DefaultISR(), 

    S760$CCP2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    S771$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__memset	PTR void  size(2) Largest target is 0

    sp__REALTIMECLOCK_DS1307_print_Data	PTR unsigned char  size(2) Largest target is 18
		 -> REALTIMECLOCK_DS1307_Data(BANK1[18]), 

    SPI_Clock_Phase_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_Clock_polarity_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_Interrupt_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    SPI_Mode_Variant_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    SPI_Sample_Mode_Config@_SPI$SPI_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    timer0_1$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_Deinit@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Init@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Init@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_Interrupt_Configuration@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Interrupt_Configuration@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), NULL(), 

    Timer0_Prescaler_Config@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Prescaler_Config@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_Read_Value@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_Set_Mode@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Set_Mode@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_Set_Resolution@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Set_Resolution@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer0_Write_Value@_timer0	PTR const struct . size(2) Largest target is 7
		 -> timer0_1(BANK1[7]), 

    Timer0_Write_Value@_timer0$TIMER0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultInterruptHandler(), 

    Timer1_Init@_timer1$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_Interrupt_Configuration@_timer1$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), NULL(NULL[0]), 

    timer1_obj$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_Set_Mode@_timer1$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_Set_Resolution@_timer1$TIMER1_InterruptHandler	PTR FTN()void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    Timer1_Write_Value@_timer1	PTR const struct . size(1) Largest target is 6
		 -> timer1_obj(BANK0[6]), 

    Timer2_Init@_timer2$TIMER2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_Interrupt_Configuration@_timer2$TIMER2_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_Init@_timer3$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Interrupt_Configuration@_timer3$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    Timer3_Set_Mode@_timer3$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    Timer3_Set_Resolution@_timer3$TIMER3_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    tris_registers	PTR volatile unsigned char [5] size(1) Largest target is 1
		 -> TRISA(BIGSFR[1]), TRISB(BIGSFR[1]), TRISC(BIGSFR[1]), TRISD(BIGSFR[1]), 
		 -> TRISE(BIGSFR[1]), 

    UART_obj$EUSART_FramingErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    UART_obj$EUSART_OverrunErrorInterruptHandler	PTR FTN()void  size(2) Largest target is 0

    UART_obj$EUSART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 0

    UART_obj$EUSART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    USART_FRE_InterruptHandler	PTR FTN()void  size(2) Largest target is 2
		 -> UART_obj$EUSART_FramingErrorInterruptHandler(BANK1[2]), NULL(), 

    USART_OVRR_InterruptHandler	PTR FTN()void  size(2) Largest target is 2
		 -> UART_obj$EUSART_OverrunErrorInterruptHandler(BANK1[2]), NULL(), 

    USART_RX_InterruptHandler	PTR FTN()void  size(2) Largest target is 2
		 -> UART_obj$EUSART_RX_InterruptHandler(BANK1[2]), NULL(), 

    USART_TX_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 

    wr2RegCompleteHandler@ptr	PTR void  size(1) Largest target is 4
		 -> I2C_Read1ByteRegister@returnValue(BANK0[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write1ByteRegister@data(BANK0[1]), 
		 -> I2C_Write2ByteRegister@data(COMRAM[2]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptManager in COMRAM

    i2_update_display->i2_ECU_LCD_4Bit_Send_String_Data_Postition
    i2_ECU_LCD_4Bit_Send_String_Data_Postition->i2_LCD_4Bits_Set_Curser
    i2_LCD_4Bits_Set_Curser->i2_ECU_LCD_4Bit_Send_Command
    i2_ECU_LCD_4Bit_Send_Command->i2_LCD_Send_4Bits
    i2_ECU_LCD_4Bit_Send_char_Data->i2_LCD_Send_4Bits
    i2_LCD_Send_4Bits->i2_gpio_pin_write_logic
    i2_LCD_4Bits_Send_Enable_Signal->i2_gpio_pin_write_logic
    _CCP1_DefaultISR->_CCPx_CompareMode_WriteData

Critical Paths under _main in BANK0

    _keyPad_Read->_gpio_pin_read_logic
    _keyPad_Read->_gpio_pin_write_logic
    _keyPad_Initialize->_gpio_pin_initialize
    _Timer0_Init->_Timer0_Write_Value
    _EUSART_ASYNC_WriteStringBlocking->_EUSART_ASYNC_WriteByteBlocking
    _PinsConfig@hal_usart$F4659->_gpio_pin_initialize
    _EUSART_BaudRateCalculation->___fladd
    ___fldiv->___xxtofl
    ___fladd->___fldiv
    _REALTIMECLOCK_DS1307_Get_Data->_I2C_Read1ByteRegister
    _ECU_LCD_4Bit_Initialize->_ECU_LCD_4Bit_Send_Command
    _gpio_pin_initialize->_gpio_pin_write_logic
    _TemperatureSensor_TC74_Read_Temp->_I2C_Read1ByteRegister
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _LCD_4Bits_Set_Curser->_ECU_LCD_4Bit_Send_Command
    _ECU_LCD_4Bit_Send_Command->_LCD_Send_4Bits
    _ECU_LCD_4Bit_Send_char_Data->_LCD_Send_4Bits
    _LCD_Send_4Bits->_gpio_pin_write_logic
    _LCD_4Bits_Send_Enable_Signal->_gpio_pin_write_logic
    _ADC_Get_Conversion_Result_Block->_ADC_Select_Channel
    _ADC_Select_Channel->_ADC_Select_Specific_Channel
    _ADC_Init->_ADC_Result_Format_Control
    _ADC_Init->_ADC_Voltage_Reference_Control

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Dashboard
    _update_display->_ECU_LCD_4Bit_Send_String_Data_Postition
    _REALTIMECLOCK_DS1307_print_Data->_EUSART_ASYNC_Init
    _EUSART_ASYNC_Init->_EUSART_BaudRateCalculation
    _EUSART_BaudRateCalculation->___fladd
    _Dashboard->_ECU_LCD_4Bit_Send_String_Data_Postition
    _ECU_LCD_4Bit_Send_String_Data_Postition->_REALTIMECLOCK_DS1307_print_Data

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  136788
                                             36 BANK1      2     2      0
    _ADC_Get_Conversion_Result_Block
                           _ADC_Init
                          _Dashboard
            _ECU_LCD_4Bit_Initialize
          _ECU_LCD_4Bit_Send_Command
_ECU_LCD_4Bit_Send_String_Data_Posti
             _I2C_Write1ByteRegister
               _LCD_4Bits_Set_Curser
      _REALTIMECLOCK_DS1307_Get_Data
    _REALTIMECLOCK_DS1307_print_Data
                  _SYSTEM_Initialize
   _TemperatureSensor_TC74_Read_Temp
                      _Timer0_Deinit
                        _Timer0_Init
                _gpio_pin_initialize
               _gpio_pin_write_logic
                  _keyPad_Initialize
                        _keyPad_Read
                     _update_display
 ---------------------------------------------------------------------------------
 (1) _update_display                                       0     0      0   19561
          _ECU_LCD_4Bit_Send_Command
_ECU_LCD_4Bit_Send_String_Data_Posti
        _ECU_LCD_4Bit_Send_char_Data
               _LCD_4Bits_Set_Curser
 ---------------------------------------------------------------------------------
 (1) _keyPad_Read                                         10     7      3    2133
                                              6 BANK0     10     7      3
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_read_logic                                  6     3      3     486
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _keyPad_Initialize                                    7     5      2    2568
                                             10 BANK0      7     5      2
      _gpio_pin_direction_initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          3     1      2     697
                                              4 BANK0      3     1      2
     _Timer0_Interrupt_Configuration
            _Timer0_Prescaler_Config
                    _Timer0_Set_Mode
              _Timer0_Set_Resolution
                 _Timer0_Write_Value
 ---------------------------------------------------------------------------------
 (2) _Timer0_Write_Value                                   5     1      4     208
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _Timer0_Set_Resolution                                2     0      2      34
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Timer0_Set_Mode                                      2     0      2      65
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _Timer0_Prescaler_Config                              3     1      2      65
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Timer0_Interrupt_Configuration                       2     0      2      34
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _Timer0_Deinit                                        3     1      2      77
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _I2C_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _REALTIMECLOCK_DS1307_print_Data                      3     1      2    8696
                                             26 BANK1      2     0      2
                  _EUSART_ASYNC_Init
   _EUSART_ASYNC_WriteStringBlocking
 ---------------------------------------------------------------------------------
 (2) _EUSART_ASYNC_WriteStringBlocking                     9     5      4     272
                                              1 BANK0      9     5      4
     _EUSART_ASYNC_WriteByteBlocking
 ---------------------------------------------------------------------------------
 (3) _EUSART_ASYNC_WriteByteBlocking                       2     2      0      53
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_ASYNC_Init                                    3     1      2    8418
                                             24 BANK1      2     0      2
         _EUSART_BaudRateCalculation
                     _EUSART_RX_Init
                     _EUSART_TX_Init
         _PinsConfig@hal_usart$F4659
 ---------------------------------------------------------------------------------
 (3) _PinsConfig@hal_usart$F4659                           1     1      0    1690
                                             10 BANK0      1     1      0
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (3) _EUSART_TX_Init                                       2     0      2     189
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_RX_Init                                       2     0      2     251
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_BaudRateCalculation                          12    10      2    6145
                                             12 BANK1     12    10      2
                            ___fladd
                            ___fldiv
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     532
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     349
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    1767
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             16     8      8    2990
                                             39 BANK0      4     4      0
                                              0 BANK1     12     4      8
                            ___fldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _REALTIMECLOCK_DS1307_Get_Data                        6     0      6   13657
                                             18 BANK0      6     0      6
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (1) _ECU_LCD_4Bit_Initialize                              4     3      1    5963
                                             13 BANK0      4     3      1
          _ECU_LCD_4Bit_Send_Command
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  4     2      2    1681
                                              6 BANK0      4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        5     3      2     541
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Dashboard                                            2     2      0   36286
                                             34 BANK1      2     2      0
    _ADC_Get_Conversion_Result_Block
_ECU_LCD_4Bit_Send_String_Data_Posti
             _I2C_Write1ByteRegister
   _TemperatureSensor_TC74_Read_Temp
 ---------------------------------------------------------------------------------
 (1) _TemperatureSensor_TC74_Read_Temp                     2     2      0   13741
                                             18 BANK0      2     2      0
              _I2C_Read1ByteRegister
 ---------------------------------------------------------------------------------
 (2) _I2C_Read1ByteRegister                                3     2      1   13657
                                             15 BANK0      3     2      1
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (1) _I2C_Write1ByteRegister                               3     1      2   13713
                                             15 BANK0      3     1      2
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4     409
                                              4 BANK0      4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_Open                                             2     2      0      84
                                              0 BANK0      2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0   12369
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterOperation                                  2     2      0   12369
                                             13 BANK0      2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (5) _I2C_Poller                                           0     0      0   12285
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterFsm                                        3     3      0   12285
                                             10 BANK0      3     3      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX_EMPTY                                      2     2      0    3036
                                              8 BANK0      2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_TX                                            2     2      0    3083
                                              8 BANK0      2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_WRITE                                0     0      0      47
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_SEND_ADR_READ                                 0     0      0      47
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendTxData                                 1     1      0      47
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX                                            2     2      0    3036
                                              8 BANK0      2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_DO_ADDRESS_NACK                                  2     2      0    3036
                                              8 BANK0      2     2      0
                                NULL *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _wr2RegCompleteHandler                                1     0      1     598
                                              7 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _wr1RegCompleteHandler                                1     0      1     598
                                              7 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rdBlkRegCompleteHandler                              1     0      1     629
                                              7 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd2RegCompleteHandler                                1     0      1     598
                                              7 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (8) _rd1RegCompleteHandler                                1     0      1     598
                                              7 BANK0      1     0      1
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_SetDataCompleteCallback                          3     0      3     433
                                              4 BANK0      3     0      3
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (4) _I2C_SetCallback                                      4     1      3     311
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (3) _I2C_SetBuffer                                        3     0      3     134
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStop                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterEnableRestart                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnStop                               1     0      1       0
                                              7 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (8) _I2C_CallbackReturnReset                              1     0      1      15
                                              7 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _I2C_Close                                            1     1      0      37
                                              0 BANK0      1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ECU_LCD_4Bit_Send_String_Data_Postition              6     1      5    8096
                                             28 BANK1      6     1      5
        _ECU_LCD_4Bit_Send_char_Data
               _LCD_4Bits_Set_Curser
    _REALTIMECLOCK_DS1307_print_Data (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_4Bits_Set_Curser                                 4     1      3    4117
                                             13 BANK0      4     1      3
          _ECU_LCD_4Bit_Send_Command
 ---------------------------------------------------------------------------------
 (3) _ECU_LCD_4Bit_Send_Command                            3     1      2    3701
                                             10 BANK0      3     1      2
       _LCD_4Bits_Send_Enable_Signal
                     _LCD_Send_4Bits
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _ECU_LCD_4Bit_Send_char_Data                          3     1      2    3647
                                             10 BANK0      3     1      2
       _LCD_4Bits_Send_Enable_Signal
                     _LCD_Send_4Bits
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _LCD_Send_4Bits                                       4     2      2    1277
                                              6 BANK0      4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _LCD_4Bits_Send_Enable_Signal                         3     2      1    1073
                                              6 BANK0      3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_write_logic                                 6     3      3     925
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (2) _ADC_Get_Conversion_Result_Block                      5     1      4     736
                                              7 BANK0      5     1      4
              _ADC_Conversion_Result
                 _ADC_Select_Channel
               _ADC_Start_Conversion
 ---------------------------------------------------------------------------------
 (3) _ADC_Start_Conversion                                 3     1      2      53
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _ADC_Select_Channel                                   5     2      3     168
                                              3 BANK0      4     1      3
        _ADC_Select_Specific_Channel
 ---------------------------------------------------------------------------------
 (3) _ADC_Conversion_Result                                7     4      3     208
                                              0 BANK0      6     3      3
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             4     2      2     440
                                              4 BANK0      4     2      2
        _ADC_Interrupt_Configuration
          _ADC_Result_Format_Control
        _ADC_Select_Specific_Channel
      _ADC_Voltage_Reference_Control
 ---------------------------------------------------------------------------------
 (2) _ADC_Voltage_Reference_Control                        4     2      2      34
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) _ADC_Select_Specific_Channel                          3     3      0      47
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _ADC_Result_Format_Control                            4     2      2      34
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Interrupt_Configuration                          2     0      2      34
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _InterruptManager                                   10    10      0   10181
                                             23 COMRAM    10    10      0
                            _ADC_ISR
                           _CCP1_ISR
                           _CCP2_ISR
                      _EUSART_RX_ISR
                      _EUSART_TX_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                    _MSSP_I2C_BC_ISR
                       _MSSP_I2C_ISR
                       _MSSP_SPI_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
                           _TMR0_ISR
                           _TMR1_ISR
                           _TMR2_ISR
                           _TMR3_ISR
 ---------------------------------------------------------------------------------
 (13) _TMR3_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR0_ISR                                            0     0      0    9644
                                NULL *
     _Timer0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _Timer0_DefaultInterruptHandler                      0     0      0    9644
                            ___awdiv
                            ___awmod
                   i2_update_display
 ---------------------------------------------------------------------------------
 (15) i2_update_display                                    0     0      0    9036
        i2_ECU_LCD_4Bit_Send_Command
i2_ECU_LCD_4Bit_Send_String_Data_Pos
      i2_ECU_LCD_4Bit_Send_char_Data
             i2_LCD_4Bits_Set_Curser
 ---------------------------------------------------------------------------------
 (16) i2_ECU_LCD_4Bit_Send_String_Data_Postition           6     1      5    3778
                                             17 COMRAM     6     1      5
      i2_ECU_LCD_4Bit_Send_char_Data
             i2_LCD_4Bits_Set_Curser
 ---------------------------------------------------------------------------------
 (16) i2_LCD_4Bits_Set_Curser                              4     1      3    1922
                                             13 COMRAM     4     1      3
        i2_ECU_LCD_4Bit_Send_Command
 ---------------------------------------------------------------------------------
 (17) i2_ECU_LCD_4Bit_Send_Command                         3     1      2    1664
                                             10 COMRAM     3     1      2
     i2_LCD_4Bits_Send_Enable_Signal
                   i2_LCD_Send_4Bits
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (16) i2_ECU_LCD_4Bit_Send_char_Data                       3     1      2    1672
                                             10 COMRAM     3     1      2
     i2_LCD_4Bits_Send_Enable_Signal
                   i2_LCD_Send_4Bits
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (18) i2_LCD_Send_4Bits                                    4     2      2     607
                                              6 COMRAM     4     2      2
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (18) i2_LCD_4Bits_Send_Enable_Signal                      3     2      1     469
                                              6 COMRAM     3     2      1
             i2_gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (18) i2_gpio_pin_write_logic                              6     3      3     373
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (15) ___awmod                                             6     2      4     302
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (15) ___awdiv                                             8     4      4     306
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (13) _RB7_ISR                                             1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _RB6_ISR                                             1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _RB5_ISR                                             1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _RB4_ISR                                             1     1      0      58
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) _MSSP_SPI_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _MSSP_I2C_ISR                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _MSSP_I2C_BC_ISR                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _INT2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _INT1_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _INT0_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_TX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_RX_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _CCP2_ISR                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _CCP1_ISR                                            0     0      0     305
                                NULL *
                    _CCP1_DefaultISR *
 ---------------------------------------------------------------------------------
 (14) _CCP1_DefaultISR                                     0     0      0     305
         _CCPx_CompareMode_WriteData
                 _Timer1_Write_Value
 ---------------------------------------------------------------------------------
 (15) _Timer1_Write_Value                                  4     1      3      95
                                              0 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (15) _CCPx_CompareMode_WriteData                          8     4      4     210
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (14) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _ADC_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Get_Conversion_Result_Block
     _ADC_Conversion_Result
     _ADC_Select_Channel
       _ADC_Select_Specific_Channel
     _ADC_Start_Conversion
   _ADC_Init
     _ADC_Interrupt_Configuration
     _ADC_Result_Format_Control
     _ADC_Select_Specific_Channel
     _ADC_Voltage_Reference_Control
   _Dashboard
     _ADC_Get_Conversion_Result_Block
     _ECU_LCD_4Bit_Send_String_Data_Postition
       _ECU_LCD_4Bit_Send_char_Data
         _LCD_4Bits_Send_Enable_Signal
           _gpio_pin_write_logic
         _LCD_Send_4Bits
           _gpio_pin_write_logic
         _gpio_pin_write_logic
       _LCD_4Bits_Set_Curser
         _ECU_LCD_4Bit_Send_Command
           _LCD_4Bits_Send_Enable_Signal
           _LCD_Send_4Bits
           _gpio_pin_write_logic
       _REALTIMECLOCK_DS1307_print_Data (ARG)
         _EUSART_ASYNC_Init
           _EUSART_BaudRateCalculation
             ___fladd
               ___fldiv (ARG)
                 ___xxtofl (ARG)
               ___xxtofl (ARG)
             ___fldiv
             ___fltol
             ___xxtofl
           _EUSART_RX_Init
           _EUSART_TX_Init
           _PinsConfig@hal_usart$F4659
             _gpio_pin_initialize
               _gpio_pin_direction_initialize
               _gpio_pin_write_logic
         _EUSART_ASYNC_WriteStringBlocking
           _EUSART_ASYNC_WriteByteBlocking
     _I2C_Write1ByteRegister
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterWrite
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 NULL(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 NULL(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
               _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
               _I2C_DO_TX *
                 NULL(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                 _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_TX_EMPTY *
                 NULL(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
       _I2C_SetDataCompleteCallback
     _TemperatureSensor_TC74_Read_Temp
       _I2C_Read1ByteRegister
         _I2C_Close
         _I2C_MasterWrite
         _I2C_Open
         _I2C_SetAddressNackCallback
         _I2C_SetBuffer
         _I2C_SetDataCompleteCallback
   _ECU_LCD_4Bit_Initialize
     _ECU_LCD_4Bit_Send_Command
     _gpio_pin_initialize
   _ECU_LCD_4Bit_Send_Command
   _ECU_LCD_4Bit_Send_String_Data_Postition
   _I2C_Write1ByteRegister
   _LCD_4Bits_Set_Curser
   _REALTIMECLOCK_DS1307_Get_Data
     _I2C_Read1ByteRegister
   _REALTIMECLOCK_DS1307_print_Data
   _SYSTEM_Initialize
     _I2C_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _TemperatureSensor_TC74_Read_Temp
   _Timer0_Deinit
   _Timer0_Init
     _Timer0_Interrupt_Configuration
     _Timer0_Prescaler_Config
     _Timer0_Set_Mode
     _Timer0_Set_Resolution
     _Timer0_Write_Value
   _gpio_pin_initialize
   _gpio_pin_write_logic
   _keyPad_Initialize
     _gpio_pin_direction_initialize
     _gpio_pin_initialize
   _keyPad_Read
     _gpio_pin_read_logic
     _gpio_pin_write_logic
   _update_display
     _ECU_LCD_4Bit_Send_Command
     _ECU_LCD_4Bit_Send_String_Data_Postition
     _ECU_LCD_4Bit_Send_char_Data
     _LCD_4Bits_Set_Curser

 _InterruptManager (ROOT)
   _ADC_ISR
   _CCP1_ISR
     NULL(Fake) *
     _CCP1_DefaultISR *
       _CCPx_CompareMode_WriteData
       _Timer1_Write_Value
   _CCP2_ISR
   _EUSART_RX_ISR
   _EUSART_TX_ISR
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _MSSP_I2C_BC_ISR
   _MSSP_I2C_ISR
   _MSSP_SPI_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR
   _TMR0_ISR
     NULL(Fake) *
     _Timer0_DefaultInterruptHandler *
       ___awdiv
       ___awmod
       i2_update_display
         i2_ECU_LCD_4Bit_Send_Command
           i2_LCD_4Bits_Send_Enable_Signal
             i2_gpio_pin_write_logic
           i2_LCD_Send_4Bits
             i2_gpio_pin_write_logic
           i2_gpio_pin_write_logic
         i2_ECU_LCD_4Bit_Send_String_Data_Postition
           i2_ECU_LCD_4Bit_Send_char_Data
             i2_LCD_4Bits_Send_Enable_Signal
             i2_LCD_Send_4Bits
             i2_gpio_pin_write_logic
           i2_LCD_4Bits_Set_Curser
             i2_ECU_LCD_4Bit_Send_Command
         i2_ECU_LCD_4Bit_Send_char_Data
         i2_LCD_4Bits_Set_Curser
   _TMR1_ISR
   _TMR2_ISR
   _TMR3_ISR

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            3935      0       0      0.0%
BITBANK14          256      0       0      0.0%
BANK14             256      0       0      0.0%
BITBANK13          256      0       0      0.0%
BANK13             256      0       0      0.0%
BITBANK12          256      0       0      0.0%
BANK12             256      0       0      0.0%
BITBANK11          256      0       0      0.0%
BANK11             256      0       0      0.0%
BITBANK10          256      0       0      0.0%
BANK10             256      0       0      0.0%
BITBANK9           256      0       0      0.0%
BANK9              256      0       0      0.0%
BITBANK8           256      0       0      0.0%
BANK8              256      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256     38     151     59.0%
BITBANK0           160      0       0      0.0%
BANK0              160     43     160    100.0%
BITBANK15           96      0       0      0.0%
BANK15              96      0       0      0.0%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     33      62     66.0%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRlll        28      0       0      0.0%
BITBIGSFRllh         1      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     367      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Sat Oct 26 20:13:38 2024

                   Timer0_Prescaler_Config@_timer0 00D5                                 ??_InterruptManager 0018  
                           ??_I2C_DO_SEND_ADR_READ 00D5                              ECU_Relay_toggle@F3477 00C9  
                                     ___fldiv@aexp 00FB                                       ___fldiv@bexp 00FA  
                        _REALTIMECLOCK_DS1307_Data 0153                                       ___fldiv@sign 00F3  
                          ??_I2C_DO_SEND_ADR_WRITE 00D6                                        _SSPSTATbits 0FC7  
                                               l50 46C4                                                 l60 3696  
                                               l53 46FC                                                 l47 469E  
                                               l48 46FA                                                 l56 3694  
                                               l58 368E                                                 l67 375A  
                                               l59 3758                                                 l98 345E  
                                     ___awdiv@sign 0006                                    LED_toggle@F3476 0028  
                                   _update_display 3568                       __end_of_LCD_4Bits_Set_Curser 41FE  
                            ??_I2C_DO_SEND_RESTART 00D5                                                l103 4B66  
                                              l212 4F1C                                                l108 4BCE  
                                              l207 432E                                                l320 4AFE  
                                              l129 4298                                                l323 393C  
                                              l500 5406                                                l228 41FC  
                                              l514 40BC                                                l522 4DB2  
                                              l551 4F72                                                l519 4D8C  
                                              l448 54BC                                                l562 4FC0  
                                              l546 3AF6                                                l555 4F7A  
                                              l483 3ECA                                                l811 2AAC  
                                              l564 4FC6                                                l485 3F64  
                                              l566 5004                                                l558 4FBA  
                                              l495 5204                                                l569 5422  
                                              l498 5404                                                l834 2D38  
                                              l791 2A70                                                l871 4C32  
                                              l839 31EE                                                l768 27DC  
                                              l849 3346                                                l789 2A04  
                                              l869 4C0A                                     _LCD_Send_4Bits 429A  
                                  __end_of_ADC_ISR 5646                                                _ret 0196  
                           _I2C_MasterWaitForEvent 550C                 i2LCD_4Bits_Send_Enable_Signal@_LCD 0007  
                 LCD_4Bits_Send_Enable_Signal@_LCD 00DB                                       ___awmod@sign 0006  
                       ?_ECU_LCD_4Bit_Send_Command 00DF                                                prod 0FF3  
                                              tosl 0FFD                                                wreg 0FE8  
           __end_of_Timer0_DefaultInterruptHandler 3BBC                     _Timer0_DefaultInterruptHandler 3AF8  
                                     ?_keyPad_Read 00DB                       ??_I2C_SetAddressNackCallback 00DD  
                           _I2C_Write1ByteRegister 48DE                           ??_I2C_CallbackReturnStop 00DD  
                                     _I2C_DO_RESET 557C                                    __end_of_RB4_ISR 54A6  
                                  __end_of_RB5_ISR 548C                                    __end_of_RB6_ISR 5472  
                                  __end_of_RB7_ISR 5458                                       ___fltol@exp1 00DE  
                          ?i2_LCD_4Bits_Set_Curser 000E                            ??_rd2RegCompleteHandler 00DD  
                                             l2023 4776                                               l2016 5428  
                                             l2050 1BA4                                               l2018 5436  
                                             l2051 1C5E                                               l2043 5162  
                                             l2019 543C                                               l2027 4778  
                                             l2124 486A                                               l2052 1D18  
                                             l2053 1DD0                                               l2142 494C  
                                             l2206 5538                                               l2055 1F20  
                                             l2047 1A30                                               l2320 48DC  
                                             l2064 3EAE                                               l2401 40F2  
                                             l3041 3566                                               l2049 1AEA  
                                             l2081 3A1A                                               l2209 55A0  
                                             l2402 415E                                               l2330 511E  
                                             l2324 5262                                               l2068 3EAE  
                                             l2316 550A                                               l2181 52DA  
                                             l2413 557A                                               l2077 3A1A  
                                             l2190 5302                                               l2343 53B0  
                                             l2503 5600                                               l2184 52B2  
                                             l2512 54E4                                               l2440 55D8  
                                             l2336 55A8                                               l2352 54D0  
                                             l1720 4600                                               l1712 5052  
                                             l2193 519A                                               l3305 23D2  
                                             l2506 5614                                               l2346 54F8  
                                             l3402 31A2                                               l1722 4606  
                                             l1714 5058                                               l2363 4E0E  
                                             l2187 528A                                               l2515 55EE  
                                             l2419 47F2                                               l2443 55D0  
                                             l3331 25C8                                               l2452 55B8  
                                             l3340 26AE                                               l1740 53EA  
                                             l1724 460C                                               l1716 5092  
                                             l2533 5618                                               l2509 560C  
                                             l2437 55E0                                               l2373 4A28  
                                             l3413 313A                                               l1733 4C9C  
                                             l2518 55F4                                               l2382 5546  
                                             l2446 55C8                                               l2542 550C  
                                             l3326 27A0                                               l3406 30DE  
                                             l1726 4612                                               l2710 18F4  
                                             l2455 55B0                                               l1735 4CBC  
                                             l2536 5620                                               l2472 5608  
                                             l2376 558E                                               l2464 4C96  
                                             l3272 2112                                               l3328 2604  
                                             l2385 3C44                                               l2449 55C0  
                                             l2369 53CE                                               l3281 240E  
                                             l3273 20FE                                               l3337 264A  
                                             l1737 4CF6                                               l1729 467E  
                                             l1681 4472                                               l2458 5584  
                                             l2546 551A                                               l3274 20C4  
                                             l3338 2668                                               l2475 5604  
                                             l2491 55FC                                               l2539 55F8  
                                             l2379 552A                                               l3339 26C0  
                                             l1683 44E6                                               l2388 3C7C  
                                             l2485 5390                                               l2741 3DF8  
                                             l2494 5598                                               l3286 22E0  
                                             l1686 531E                                               l1687 5326  
                                             l2647 3662                                               l2719 18F4  
                                             l2488 561C                                               l1688 5328  
                                             l2497 5610                                               l3289 2252  
                                             l1697 4D54                                               l3298 2326  
                                             l3299 2312                                               l2579 5370  
                                             l2675 1A12                                               l3399 3046  
                                             l1991 50D8                                               l1989 50AC  
                                             STR_1 104D                                               STR_4 1046  
                                             STR_5 1021                                               STR_6 103E  
                                             STR_7 103E                                               STR_8 102C  
                                             STR_9 1035                                               _LATA 0F89  
                                             _LATB 0F8A                                               _LATC 0F8B  
                                             _LATD 0F8C                                               _LATE 0F8D  
                                             _TMR2 0FCC                                               _WPUB 0F7C  
                          ??_wr2RegCompleteHandler 00DD                                               _Buzz 003D  
                                             _main 1052                                   ?_CCP1_DefaultISR 0001  
                         ?_I2C_CallbackReturnReset 00DC                                   __end_of_CCP1_ISR 5236  
                                 __end_of_CCP2_ISR 5642                                               fsr0h 0FEA  
                                             fsr1h 0FE2                                               indf0 0FEF  
                                             fsr2h 0FDA                                               fsr0l 0FE9  
                                             indf1 0FE7                                               indf2 0FDF  
                                             fsr1l 0FE1                                               fsr2l 0FD9  
                                 __end_of_I2C_Open 48DE                                               btemp 003F  
                                 __end_of_ADC_Init 3F66                       gpio_pin_read_logic@pinConfig 00D5  
                                             prodl 0FF3                                               start 0456  
                                  ___fldiv@new_exp 00F4                   i2LCD_4Bits_Send_Enable_Signal@rt 0009  
                   LCD_4Bits_Send_Enable_Signal@rt 00DD                                       ___param_bank 0000  
                       __end_of_ADC_Select_Channel 5206           __end_of_TemperatureSensor_TC74_Read_Temp 54BE  
                ?_TemperatureSensor_TC74_Read_Temp 0001                 ??_TemperatureSensor_TC74_Read_Temp 00E7  
                 _TemperatureSensor_TC74_Read_Temp 54A6                       ??_EUSART_BaudRateCalculation 017E  
                               _Timer0_Write_Value 4CF8                             __end_of_update_display 3664  
                             _gpio_pin_write_logic 2A72                                   ?_I2C_MasterClose 0001  
            __end_of_REALTIMECLOCK_DS1307_Get_Data 4B00                      _REALTIMECLOCK_DS1307_Get_Data 4A96  
                                 __end_of_INT0_ISR 563A                                   __end_of_INT1_ISR 5636  
                                 __end_of_INT2_ISR 5632                                   ?_I2C_MasterStart 0001  
                           __end_of_LCD_Send_4Bits 4330                                      _I2C_DO_RX_ACK 55BA  
                                 ?_I2C_MasterWrite 0001                      __end_of_OSCILLATOR_Initialize 55A2  
                                            l13000 5574                                              l13002 5578  
                                            l13100 2CA4                                              l13012 478A  
                                            l13102 2CD4                                              l13014 478E  
                                            l13006 477A                                              l13030 55BA  
                                            l13104 2D0C                                              l13200 5616  
                                            l13008 4782                                              l13024 479C  
                                            l13032 55BE                                              l13120 53B6  
                                            l14000 31F4                                              l13106 2D36  
                                            l13202 561A                                              l13018 4794  
                                            l13050 4C48                                              l13042 4C34  
                                            l13122 53BA                                              l13210 50F6  
                                            l13130 27BA                                              l14002 322C  
                                            l14010 330C                                              l14020 4212  
                                            l13116 5612                                              l13036 557C  
                                            l13044 4C38                                              l13124 53BE  
                                            l13212 5106                                              l13220 511A  
                                            l13204 50DE                                              l13300 489A  
                                            l13140 28AA                                              l13132 27E2  
                                            l14100 4724                                              l14004 3264  
                                            l14012 3344                                              l14030 4294  
                                            l14022 4218                                              l13038 5582  
                                            l13046 4C40                                              l13070 49E4  
                                            l13118 53B2                                              l13214 510E  
                                            l13206 50E4                                              l13310 48B0  
                                            l13302 489C                                              l14110 54AA  
                                            l13150 29A4                                              l13142 28DC  
                                            l13134 2814                                              l13126 27A2  
                                            l13230 4C10                                              l14102 4756  
                                            l14006 329C                                              l14120 5410  
                                            l13080 2AB2                                              l13240 4B12  
                                            l14024 422C                                              l14016 41FE  
                                            l13056 4C50                                              l13072 49EA  
                                            l13064 49BC                                              l13216 5112  
                                            l13208 50F2                                              l13320 48CC  
                                            l13312 48B8                                              l13304 48A4  
                                            l14112 54AA                                              l13152 29D4  
                                            l13144 2914                                              l13136 2846  
                                            l13128 27A8                                              l13232 4C2E  
                                            l13224 4BD0                                              l13400 2028  
                                            l14104 475C                                              l14200 53E8  
                                            l14008 32D4                                              l14122 5420  
                                            l13250 3A24                                              l13090 2BAC  
                                            l13082 2AE4                                              l13074 2A72  
                                            l13170 432C                                              l13162 429A  
                                            l13242 4B18                                              l14026 425E  
                                            l14018 4202                                              l13066 49C0  
                                            l13218 5116                                              l13322 48CE  
                                            l13314 48BA                                              l13306 48A6  
                                            l13330 54BE                                              l14114 54BA  
                                            l13154 2A08                                              l13146 2944  
                                            l13138 2878                                              l13226 4BD6  
                                            l13410 203C                                              l13402 202C  
                                            l14106 4772                                              l14202 54FA  
                                            l14210 535A                                              l14124 4FBC  
                                            l13260 3A42                                              l13252 3A2A  
                                            l13092 2BE4                                              l13084 2B16  
                                            l13076 2A78                                              l13180 4EE0  
                                            l13164 429A                                              l13244 4B64  
                                            l13236 4B00                                              l14028 4262  
                                            l13340 524A                                              l13068 49D0  
                                            l13332 55A2                                              l13324 48D6  
                                            l13316 48C2                                              l13308 48AE  
                                            l13148 2974                                              l13156 2A40  
                                            l13228 4BE8                                              l13500 22BC  
                                            l13420 2050                                              l13412 2040  
                                            l13404 2030                                              l14204 5502  
                                            l14220 5366                                              l14212 535E  
                                            l14300 3744                                              l14118 5408  
                                            l14126 4FCC                                              l13270 3A60  
                                            l13262 3A48                                              l13254 3A30  
                                            l14134 4F6E                                              l14150 4D70  
                                            l13094 2C14                                              l13086 2B48  
                                            l13078 2A8A                                              l13182 4EF6  
                                            l13174 4EC8                                              l13166 42AC  
                                            l13238 4B00                                              l13342 524E  
                                            l13190 5372                                              l13318 48C4  
                                            l13326 48DA                                              l13158 2A6E  
                                            l14310 335C                                              l13510 2308  
                                            l13502 22C0                                              l13430 208E  
                                            l13422 2054                                              l13414 2044  
                                            l13406 2034                                              l13350 1F22  
                                            l14206 5508                                              l14222 536C  
                                            l14214 5360                                              l14230 4680  
                                            l14302 3754                                              l13272 3A66  
                                            l13264 3A4E                                              l13256 3A36  
                                            l13248 3A20                                              l14136 4F82  
                                            l14152 4D9A                                              l14144 4D56  
                                            l13096 2C44                                              l13088 2B7A  
                                            l13184 4EFE                                              l13176 4EC8  
                                            l13168 42B2                                              l13344 525A  
                                            l13336 5236                                              l12800 53A6  
                                            l13192 5380                                              l14320 3388  
                                            l14312 3362                                              l13520 238E  
                                            l13504 22D0                                              l13440 20E2  
                                            l13432 20AC                                              l13424 2058  
                                            l13416 2048                                              l13408 2038  
                                            l13360 1F60                                              l13352 1F30  
                                            l14080 50A8                                              l14224 536E  
                                            l14216 5362                                              l14208 5350  
                                            l14160 504E                                              l14240 46A0  
                                            l14232 4686                                              l13274 3A6C  
                                            l13266 3A54                                              l13258 3A3C  
                                            l14154 4DAA                                              l14146 4D56  
                                            l13098 2C74                                              l13186 4F1A  
                                            l13178 4EDA                                              l13346 525E  
                                            l13338 523C                                              l12802 53AE  
                                            l12810 52B4                                              l13194 5388  
                                            l13290 4888                                              l14330 33CE  
                                            l14322 339C                                              l14314 3386  
                                            l14306 3348                                              l13530 23E0  
                                            l13514 2336                                              l13522 2390  
                                            l13506 22D2                                              l13450 2130  
                                            l13442 20F0                                              l13434 20BC  
                                            l13426 205C                                              l13418 204C  
                                            l13370 1F8E                                              l13362 1F70  
                                            l13354 1F3E                                              l13610 258E  
                                            l13602 2544                                              l14082 50AE  
                                            l14090 46FE                                              l14226 559A  
                                            l14218 5364                                              l14170 4C98  
                                            l14162 505E                                              l14250 46C6  
                                            l14242 46B0                                              l14234 4698  
                                            l13268 3A5A                                              l13276 3A72  
                                            l14156 4DB0                                              l14148 4D6A  
                                            l12804 560E                                              l12812 52C6  
                                            l12820 529E                                              l12900 55F6  
                                            l13196 538E                                              l13292 488A  
                                            l13284 4870                                              l14340 3420  
                                            l14332 33EC                                              l14324 33A0  
                                            l14308 334C                                              l13540 23FE  
                                            l13532 23E6                                              l13524 23A0  
                                            l13516 2342                                              l13508 22F0  
                                            l13460 2170                                              l13444 20F2  
                                            l13436 20D2                                              l13428 2060  
                                            l13380 1FB8                                              l13372 1FA0  
                                            l13364 1F72                                              l13356 1F40  
                                            l13620 25D2                                              l13612 2594  
                                            l13604 255E                                              l14084 50D6  
                                            l14076 5094                                              l14092 46FE  
                                            l14420 384E                                              l14228 559E  
                                            l14500 5304                                              l14172 4C9E  
                                            l14164 45FC                                              l14180 4D0C  
                                            l14252 46E2                                              l14244 46B4  
                                            l14260 3664                                              l15300 10A2  
                                            l12910 561E                                              l12806 560A  
                                            l12814 52D8                                              l12822 52B0  
                                            l12830 5288                                              l12902 5606  
                                            l13294 488C                                              l13286 4876  
                                            l14342 342E                                              l14334 33F6  
                                            l14326 33B0                                              l14414 4A96  
                                            l13534 23E8                                              l13526 23B0  
                                            l13518 2350                                              l13470 219A  
                                            l13462 217C                                              l13454 2144  
                                            l13446 20FC                                              l13438 20DE  
                                            l13382 1FC8                                              l13390 1FF0  
                                            l13374 1FA2                                              l13358 1F50  
                                            l13366 1F78                                              l13630 262A  
                                            l13622 25F0                                              l13614 25A4  
                                            l13606 256E                                              l13550 242E  
                                            l13702 34F2                                              l14086 50D8  
                                            l14078 5094                                              l14094 46FE  
                                            l14430 389E                                              l14422 3866  
                                            l14510 552C                                              l14502 5304  
                                            l14174 4CC2                                              l14166 4618  
                                            l14182 4D10                                              l14254 46E6  
                                            l14262 366C                                              l15310 1104  
                                            l15302 10B8                                              l13800 4160  
                                            l12808 55F0                                              l12912 5586  
                                            l12920 5520                                              l13296 488E  
                                            l13288 4884                                              l14520 3D58  
                                            l14344 343C                                              l14336 3404  
                                            l14328 33C0                                              l14416 4AEC  
                                            l13536 23EE                                              l13528 23D0  
                                            l13480 2230                                              l13464 2180  
                                            l13456 2154                                              l13448 2120  
                                            l13472 21A0                                              l13392 2000  
                                            l13384 1FD8                                              l13376 1FA8  
                                            l13368 1F88                                              l13640 2678  
                                            l13632 2630                                              l13624 25F2  
                                            l13616 25B8                                              l13608 257E  
                                            l13552 243E                                              l13560 2466  
                                            l13544 2410                                              l13720 3556  
                                            l13712 351A                                              l13704 34FC  
                                            l14096 4712                                              l14440 38DA  
                                            l14432 38A2                                              l14424 386A  
                                            l14504 5318                                              l14168 464A  
                                            l14192 4D54                                              l14184 4D2A  
                                            l14176 4CF8                                              l14256 46F6  
                                            l14280 36C0                                              l14264 367E  
                                            l14512 3568                                              l15400 146A  
                                            l15320 115E                                              l15312 1114  
                                            l15304 10C0                                              l13810 4192  
                                            l13802 4164                                              l12834 52DC  
                                            l12818 528C                                              l12826 5264  
                                            l12842 5164                                              l12906 5602  
                                            l12850 54D2                                              l12914 558C  
                                            l12922 5528                                              l12930 5544  
                                            l13298 4892                                              l14530 3DD8  
                                            l14522 3D72                                              l14346 344A  
                                            l14338 3412                                              l13538 23FC  
                                            l13490 228C                                              l13474 21CC  
                                            l13482 2240                                              l13466 218E  
                                            l13458 2162                                              l13394 2012  
                                            l13386 1FE8                                              l13378 1FB6  
                                            l13650 26EA                                              l13642 26A6  
                                            l13634 263A                                              l13626 2602  
                                            l13618 25C6                                              l13570 2492  
                                            l13562 2476                                              l13554 244E  
                                            l13546 241E                                              l13714 3526  
                                            l13706 3506                                              l13730 3056  
                                            l14098 4718                                              l14450 391C  
                                            l14442 38E6                                              l14434 38AE  
                                            l14426 3876                                              l14506 5322  
                                            l14186 4D32                                              l14178 4CF8  
                                            l14290 36F8                                              l14282 36D4  
                                            l14274 3698                                              l14514 362C  
                                            l15410 14CE                                              l15402 1484  
                                            l15330 11A2                                              l15314 112E  
                                            l15306 10D0                                              l15322 1170  
                                            l14460 3EC4                                              l13812 41A8  
                                            l13820 41FA                                              l13804 4166  
                                            l12836 52EE                                              l12828 5276  
                                            l12844 5186                                              l14524 3D8C  
                                            l14348 345C                                              l13492 2296  
                                            l13484 2268                                              l13476 221E  
                                            l13468 2190                                              l13396 2020  
                                            l13388 1FEA                                              l13660 2762  
                                            l13652 2714                                              l13636 2648  
                                            l13628 2614                                              l13572 24A2  
                                            l13580 24CA                                              l13564 247C  
                                            l13556 245E                                              l13548 242C  
                                            l13716 3536                                              l13740 3094  
                                            l13732 306C                                              l13724 2FF0  
                                            l13900 1BFE                                              l14452 3932  
                                            l14444 38F2                                              l14436 38BA  
                                            l14428 3882                                              l14196 53D0  
                                            l14188 4D4C                                              l14292 370A  
                                            l14276 36AC                                              l14516 364C  
                                            l15500 17B4                                              l15420 152C  
                                            l15412 14DE                                              l15404 1494  
                                            l15340 1210                                              l15332 11B4  
                                            l15324 1180                                              l15316 113E  
                                            l15308 10EA                                              l14470 3F4E  
                                            l14462 3ECC                                              l13830 51EC  
                                            l13814 41BE                                              l13806 4176  
                                            l12790 4DF0                                              l12838 5300  
                                            l12846 5198                                              l12854 5594  
                                            l12918 551C                                              l12926 553A  
                                            l12942 3BDC                                              l12934 3BBC  
                                            l12862 55D2                                              l12870 55C6  
                                            l14526 3D9C                                              l14518 3D40  
                                            l13494 22A4                                              l13486 2278  
                                            l13478 2220                                              l13398 2024  
                                            l13670 2794                                              l13662 277A  
                                            l13646 26D0                                              l13654 2718  
                                            l13638 265A                                              l13590 250C  
                                            l13582 24DA                                              l13574 24B2  
                                            l13566 2482                                              l13558 2460  
                                            l13718 3546                                              l13750 311C  
                                            l13742 30C6                                              l13726 3002  
                                            l13910 1DD4                                              l13902 1C64  
                                            l14446 38F6                                              l14438 38D6  
                                            l14198 53D8                                              l14294 3730  
                                            l14278 36B0                                              l15510 180A  
                                            l15502 17CA                                              l15430 15A2  
                                            l15422 1542                                              l15414 14F0  
                                            l15406 14AE                                              l15350 126E  
                                            l15342 122A                                              l15334 11BC  
                                            l15318 114E                                              l14472 3F5A  
                                            l14464 3F24                                              l14456 3EB0  
                                            l13832 51FE                                              l13824 51D4  
                                            l13840 53EC                                              l13808 417C  
                                            l12792 4E04                                              l12784 4DB8  
                                            l12928 553E                                              l12960 3C7A  
                                            l12952 3BEC                                              l12856 55DA  
                                            l12864 55D6                                              l12880 55AA  
                                            l14528 3DB6                                              l13496 22A6  
                                            l13672 2796                                              l13664 277C  
                                            l13656 2732                                              l13648 26DC  
                                            l13584 24F0                                              l13576 24C2  
                                            l13568 2490                                              l13680 3460  
                                            l13760 3172                                              l13752 312A  
                                            l13744 30C8                                              l13736 3080  
                                            l13728 3010                                              l13912 1E28  
                                            l13904 1CB8                                              l14448 3902  
                                            l14480 4458                                              l14296 3732  
                                            l14288 36D8                                              l15600 1992  
                                            l15512 1812                                              l15520 1836  
                                            l15504 17DA                                              l15440 15FE  
                                            l15432 15B4                                              l15424 155C  
                                            l15416 1502                                              l15408 14BE  
                                            l15360 12D4                                              l15352 1288  
                                            l15344 122C                                              l15336 11CC  
                                            l15328 1194                                              l14474 3F5C  
                                            l14466 3F36                                              l14458 3EB0  
                                            l13850 4014                                              l13834 5204  
                                            l13826 51D4                                              l13842 5400  
                                            l13818 41D4                                              l12786 4DCC  
                                            l12794 54E6                                              l12874 55FA  
                                            l12954 3C48                                              l12946 3BE4  
                                            l12938 3BD4                                              l12970 40CC  
                                            l12858 55DE                                              l12882 55AE  
                                            l13770 47F8                                              l13498 22B4  
                                            l13666 2780                                              l13658 2748  
                                            l13586 2500                                              l13594 2520  
                                            l13578 24C4                                              l13690 34B8  
                                            l13682 3478                                              l13762 3182  
                                            l13754 3148                                              l13746 30D4  
                                            l13738 3088                                              l13906 1D1C  
                                            l13914 1E88                                              l13930 3E32  
                                            l14490 44D0                                              l14482 4458  
                                            l14298 3742                                              l15602 19A2  
                                            l15522 1848                                              l15514 1814  
                                            l15506 17EA                                              l15450 1664  
                                            l15442 1618                                              l15426 156E  
                                            l15418 1516                                              l15434 15B8  
                                            l15610 19E6                                              l15370 134C  
                                            l15362 12E8                                              l15354 1298  
                                            l15346 1242                                              l15338 1200  
                                            l15290 1066                                              l14468 3F42  
                                            l14476 3F62                                              l13860 408A  
                                            l13852 4028                                              l13828 51E8  
                                            l13844 5406                                              l12796 5392  
                                            l12788 4DE0                                              l12892 55FE  
                                            l12956 3C5A                                              l12972 40D0  
                                            l12868 55C2                                              l13780 484E  
                                            l13772 47FC                                              l13668 278E  
                                            l13596 2530                                              l13588 2508  
                                            l13692 34C8                                              l13764 3190  
                                            l13756 314A                                              l13748 3110  
                                            l13908 1D70                                              l13916 1EDE  
                                            l13940 3E6E                                              l13932 3E38  
                                            l13924 3DFA                                              l14492 44DC  
                                            l14484 446C                                              l15604 19CE  
                                            l15532 1854                                              l15516 1816  
                                            l15508 17FA                                              l15460 16A2  
                                            l15452 1666                                              l15444 1628  
                                            l15436 15CC                                              l15428 1590  
                                            l15380 1390                                              l15372 135A  
                                            l15364 130A                                              l15356 12AC  
                                            l15348 125A                                              l15612 19FC  
                                            l15292 1074                                              l13854 402C  
                                            l13838 53EC                                              l13790 4B68  
                                            l12798 53A2                                              l12878 55EA  
                                            l12958 3C74                                              l12982 40F8  
                                            l12974 40E8                                              l12894 55CA  
                                            l12886 55B2                                              l13782 4852  
                                            l13774 4814                                              l13598 2530  
                                            l13694 34CC                                              l13686 348C  
                                            l13766 3192                                              l13758 314E  
                                            l13950 395A                                              l13942 3E88  
                                            l13934 3E4C                                              l13926 3E16  
                                            l13870 5120                                              l14494 44DE  
                                            l14486 4474                                              l15550 1898  
                                            l15534 1866                                              l15518 181A  
                                            l15470 16E4                                              l15462 16BA  
                                            l15454 1678                                              l15446 1642  
                                            l15438 15E4                                              l15390 13F0  
                                            l15382 1394                                              l15358 12C2  
                                            l15366 132A                                              l15294 1086  
                                            l15286 1052                                              l13864 40BC  
                                            l13856 4048                                              l13848 4014  
                                            l13792 4B7A                                              l12992 4108  
                                            l12976 40EC                                              l12968 40BE  
                                            l12896 55CE                                              l12888 55B6  
                                            l13784 4866                                              l13776 4826  
                                            l13696 34DA                                              l13688 34B6  
                                            l13960 39BE                                              l13952 395C  
                                            l13944 3E8E                                              l13936 3E52  
                                            l13928 3E18                                              l13880 514C  
                                            l13872 5132                                              l14488 44BA  
                                            l14496 44E4                                              l15560 18A4  
                                            l15536 1876                                              l15472 16E6  
                                            l15456 168A                                              l15464 16BC  
                                            l15448 1654                                              l15608 19D6  
                                            l15392 140A                                              l15384 1398  
                                            l15376 1370                                              l15368 133C  
                                            l15296 1098                                              l15288 1056  
                                    _EUSART_RX_ISR 5646                                              l13858 406E  
                                            l13794 4B80                                              l12986 4100  
                                            l13778 4838                                              l13890 1A36  
                                            l13970 3A14                                              l13962 39D8  
                                            l13954 3976                                              l13946 3EA8  
                                            l13938 3E6C                                              l13882 5150  
                                            l13874 5134                                              l15562 18B6  
                                            l15538 187A                                              l15490 173E  
                                            l15474 16F8                                              l15458 168C  
                                            l15466 16C2                                              l15394 141A  
                                            l15386 13BE                                              l15378 137E  
                                            l15298 109C                                              l13796 4BCC  
                                            l13788 4B68                                              l13980 48E2  
                                            l13892 1A8A                                              l13964 39DA  
                                            l13956 397C                                              l13948 393E  
                                            l13884 5152                                              l13876 5136  
                                            l13868 5120                                              l13972 5428  
                                            l15564 18C6                                              l15548 1886  
                                            l15492 1756                                              l15476 170A  
                                            l15468 16D4                                              l15396 1438  
                                            l15388 13D6                                              l12998 5570  
                                            l13990 4938                                              l13982 48FA  
                                            l13894 1AF0                                              l13966 39F4  
                                            l13958 39B8                                              l13886 5154  
                                            l13878 5144                                              l13974 5438  
                                            l15590 1918                                              l15566 18CA  
                                            l15494 1770                                              l15486 1710  
                                            l15398 1450                                              l13984 490C  
                                            l13896 1B44                                              l13888 1A1A  
                                            l13968 39FA                                              l13976 543C  
                                            l13992 31A4                                              l15576 18D6  
                                            l15496 178A                                              l15488 1722  
                                            l15592 1934                                              l13986 491E  
                                            l13978 48E2                                              l13898 1BAA  
                                            l13994 31AA                                              l15594 1946  
                                            l15578 18E8                                              l15498 179A  
                                            l13988 4934                                              l13996 31BC  
                                            l15596 195E                                              l15588 18F8  
                                            l15870 3C1E                                              l13998 31DE  
                                            l15598 1978                                              l15880 4FEE  
                                            l15872 47CC                                              l15864 1EA8  
                                            l15874 2D20                                              l15866 4C80  
                                            l15876 4FA4                                              l15868 4138  
                                            l15878 3A88       EUSART_ASYNC_WriteStringBlocking@char_counter 00DD  
                                    ___fltol@sign1 00DD                                      _EUSART_TX_ISR 563A  
                                  __end_of___fladd 2410                                              ?_main 0001  
                                  __end_of___fldiv 27A2                                    __end_of___awdiv 3D40  
                                            _EEADR 0FA9                                    __end_of___awmod 4014  
                         __end_ofi2_update_display 384E                                    __end_of___fltol 3568  
                                            _ANSEL 0F7E                                              u11100 53A2  
                                            u11101 539E                                              u11110 54E2  
                                            u11111 54DC                                              u11120 3BD0  
                                            u11200 49D0                                              u12000 244E  
                                            u11121 3BCC                                              u11201 49CC  
                                            u12001 244A                                              u11210 49E4  
                                            u12010 2490                                              u11211 49E0  
                                            u12011 248C                                              u11116 54E4  
                                            u11140 3C74                                              u12100 262A  
                                            u12020 24A2                                              u11141 3C70  
                                            u12101 2626                                              u12021 249E  
                                            u11230 2A8A                                              u11150 40E8  
                                            u12110 2648                                              u12030 24B2  
                                            u11231 2A86                                              u11151 40E4  
                                            u12111 2644                                              u12031 24AE  
                            _I2C_Read1ByteRegister 47F4                                              u11304 2C04  
                                            u11240 2AAC                                              u13000 33B0  
                                            u12200 278E                                              u12120 2668  
                                            u12040 24F0                                              u11305 2C00  
                                            u11241 2AA8                                              u13001 33AC  
                                            u12201 278A                                              u12121 2664  
                                            u12041 24EC                                              u11314 2C34  
                                            u11090 4DCC                                              u11138 3BF6  
                                            u12130 2678                                              u12050 2530  
                                            u12210 3478                                              u11315 2C30  
                                            u11091 4DC8                                              u11139 3C0A  
                                            u12131 2674                                              u12051 252C  
                                            u12211 3474                                              u11324 2C64  
                                            u11500 4EDA                                              u11228 4A12  
                                            u11404 2866                                              u12140 26A6  
                                            u12060 25A4                                              u12220 34AC  
                                            u12300 306C                                              u13100 446C  
                                  ___awdiv@divisor 0003                                              u11325 2C60  
                                            u11501 4ED6                                              u11229 4A24  
                                            u11405 2862                                              u12141 26A2  
                                            u12061 25A0                                              u12301 3068  
                                            u13101 4468                                              u11334 2C94  
                                            u11254 2AD2                                              u11190 551A  
                                            u11350 53CE                                              u11510 5380  
                                            u11414 2898                                              u12150 26BC  
                                            u12070 25C6                                              u12230 34DA  
                                            u12310 30C2                                              u13110 5318  
                                            u11335 2C90                                              u11255 2ACE  
                                            u11191 5516                                              u11351 53CA  
                                            u11511 537C                                              u11415 2894  
                                            u12151 26B8                                              u12071 25C2  
                                            u12231 34D6                                              u12311 30BE  
                                            u13111 5314                                              u11344 2CC4  
                                            u11264 2B04                                              u12400 4B7A  
                                            u11168 4112                                              u11520 50F2  
                                            u11424 28CA                                              u11360 27BA  
                                            u11600 1F50                                              u12160 26D0  
                                            u12080 25F0                                              u12240 34EE  
                                            u12320 310C                                              u14000 134C  
                                            u11345 2CC0                                              u11265 2B00  
                                            u12401 4B76                                              u11169 4124  
                                            u11521 50EE                                              u11425 28C6  
                                            u11361 27B6                                              u11601 1F4C  
                                            u12161 26CC                                              u12081 25EC  
                                            u12241 34EA                                              u12225 34A2  
                                            u12321 3108                                              u14001 1348  
                                            u11274 2B36                                              u12410 4176  
                                            u11178 47A6                                              u11530 5106  
                                            u11434 2934                                              u11370 27DC  
                                            u11610 1F60                                              u12170 26EA  
                                            u12090 2614                                              u12250 3516  
                                            u12330 312A                                              u14010 14BE  
                                            u11275 2B32                                              u12411 4172  
                                            u11179 47B8                                              u11531 5102  
                                            u11435 2930                                              u11371 27D8  
                                            u11611 1F5C                                              u12171 26E6  
                                            u12091 2610                                              u12251 3512  
                                            u12331 3126                                              u14011 14BA  
                                            u12420 51E8                                              u11284 2B68  
                                            u11188 4C5A                                              u11444 2964  
                                            u11540 4BE8                                              u11700 20AA  
                                            u11620 1FA0                                              u12180 2732  
                                            u12260 3536                                              u12340 313A  
                                            u12500 3E6C                                              u14100 168A  
                                            u14020 14CE                                              u12421 51E4  
                                            u11285 2B64                                              u11189 4C6C  
                                            u11445 2960                                              u11541 4BE4  
                                            u11621 1F9C                                              u12181 272E  
                                            u12261 3532                                              u12341 3136  
                                            u12501 3E68                                              u14101 1686  
                                            u14021 14CA                                              u12430 5400  
                                            u11294 2B9A                                              u11454 2994  
                                            u11550 4C0A                                              u11710 20D2  
                                            u11630 1FB6                                              u12190 2762  
                                            u12270 3546                                              u12350 3148  
                                            u12510 3E88                                              u14110 16D4  
                                            u14030 14DE                                              u12431 53FC  
                                            u11295 2B96                                              u11455 2990  
                                            u11551 4C06                                              u11711 20CE  
                                            u11631 1FB2                                              u12191 275E  
                                            u12271 3542                                              u12351 3144  
                                            u12511 3E84                                              u14111 16D0  
                                            u14031 14DA                                              u12440 4028  
                                            u11560 4B12                                              u12600 494C  
                                            u11480 2A58                                              u11464 29C4  
                                            u11384 2802                                              u11800 2230  
                                            u11720 20F0                                              u11640 1FC8  
                                            u12360 3182                                              u12280 3002  
                                            u12520 3EA8                                              u14200 1848  
                                            u14120 16E4                                              u14040 1502  
                                            u12441 4024                                              u11561 4B0E  
                                            u12601 4948                                              u11481 2A52  
                                            u11465 29C0                                              u11385 27FE  
                                            u13081 4AF6                                              u11801 222C  
                                            u11721 20EC                                              u11641 1FC4  
                                            u12361 317E                                              u12281 2FFE  
                                            u12521 3EA4                                              u14201 1844  
                                            u14121 16E0                                              u14041 14FE  
                                            u13090 3EC4                                              u12450 4048  
                                            u11490 42AC                                              u11570 4884  
                                            u11474 29F4                                              u11394 2834  
                                            u11810 2268                                              u11730 2112  
                                            u11650 1FD8                                              u12370 3190  
                                            u12290 3010                                              u12530 395A  
                                            u12610 31BC                                              u14210 1866  
                                            u14130 16F8                                              u14050 156E  
                                            u13091 3EC0                                              u12451 4044  
                                            u11491 42A8                                              u11571 4880  
                                            u11475 29F0                                              u11395 2830  
                                            u11811 2264                                              u11731 210E  
                                            u11651 1FD4                                              u12371 318C  
                                            u12291 300C                                              u12531 3956  
                                            u12611 31B8                                              u14211 1862  
                                            u14131 16F4                                              u14051 156A  
                                            u12460 408A                                              u12700 4252  
                                            u11580 524A                                              u12380 4814  
                                            u11900 2336                                              u11820 2278  
                                            u11740 2120                                              u11660 2012  
                                            u12540 3976                                              u12620 31DE  
                                            u14220 1876                                              u14140 170A  
                                            u14060 15C8                                              u12461 4086  
                                            u11581 5246                                              u12381 4810  
                                            u11901 2332                                              u11821 2274  
                                            u11741 211C                                              u11661 200E  
                                            u12541 3972                                              u12621 31DA  
                                            u14221 1872                                              u14141 1706  
                                            u14061 15C4                                              u12710 4284  
                                            u12390 4866                                              u11486 2A5A  
                                            u11910 2350                                              u11830 22A4  
                                            u11750 2130                                              u11670 2020  
                                            u11590 1F3E                                              u12550 39D8  
                                            u12630 31EE                                              u14230 1898  
                                            u14150 1722                                              u14070 1654  
                                            u12391 4862                                              u11911 234C  
                                            u11831 22A0                                              u11751 212C  
                                            u11671 201C                                              u11591 1F3A  
                                            u12551 39D4                                              u12631 31EA  
                                            u14231 1894                                              u14151 171E  
                                            u14071 1650                                              u12720 4294  
                                            u11920 238E                                              u11840 22B4  
                                            u11760 2162                                              u11680 208E  
                                            u12560 39F4                                              u12480 3E16  
                                            u12800 4772                                              u14240 18B6  
                                            u14160 17DA                                              u14080 1664  
                                            u12721 4290                                              u11921 238A  
                                            u11841 22B0                                              u11761 215E  
                                            u11681 208A                                              u12561 39F0  
                                            u12481 3E12                                              u12801 476E  
                                            u14241 18B2                                              u14161 17D6  
                                            u14081 1660                                              u12810 4D6A  
                                            u11930 23A0                                              u11850 22D0  
                                            u11770 2170                                              u11690 20A8  
                                            u12570 3A14                                              u12490 3E32  
                                            u14250 18C6                                              u14170 17EA  
                                            u14090 1678                                              u12475 40A2  
                                            u12811 4D66                                              u12707 4248  
                                            u11931 239C                                              u11851 22CC  
                                            u11771 216C                                              u11691 20A2  
                                            u12571 3A10                                              u12491 3E2E  
                                            u14251 18C2                                              u14171 17E6  
                                            u14091 1674                                              u14307 10DC  
                                            u12820 4D9A                                              u11940 23B0  
                                            u11860 22E0                                              u11780 218E  
                                            u12580 5436                                              u12900 4698  
                                            u12644 321A                                              u14260 18E8  
                                            u14180 17FA                                              u12821 4D96  
                                            u12717 427A                                              u11941 23AC  
                                            u11861 22DC                                              u11781 218A  
                                            u12581 5432                                              u12901 4694  
                                            u12645 3216                                              u14261 18E4  
                                            u14181 17F6                                              u14317 1120  
                                            u12590 48FA                                              u11950 23D0  
                                            u11870 22F0                                              u11790 21CC  
                                            u12830 507C                                              u12910 46C4  
                                            u12654 3252                                              u14270 1946  
                                            u14190 180A                                              u12591 48F6  
                                            u11951 23CC                                              u11871 22EC  
                                            u11791 21C8                                              u12831 5076  
                                            u12911 46C0                                              u12655 324E  
                                            u14271 1942                                              u14191 1806  
                                            u14407 13E2                                              u14327 11AA  
                                            _LCD_1 0037                                              u11960 23E0  
                                            u11880 2308                                              u12840 4634  
                                            u12920 46F6                                              u12664 328A  
                                            u14280 19E6                                              u11961 23DC  
                                            u11881 2304                                              u12841 462E  
                                            u12921 46F2                                              u12665 3286  
                                            u14281 19E2                                              u14417 1426  
                                            u14337 11D8                                              u12690 4212  
                                            u11970 23FC                                              u11890 2322  
                                            u12770 50A8                                              u12850 4668  
                                            u12674 32C2                                              u12930 367E  
                                            u14290 19F8                                              u12691 420E  
                                            u11971 23F8                                              u11891 231E  
                                            u12771 50A4                                              u12851 4662  
                                            u12675 32BE                                              u12931 367A  
                                            u14291 19F4                                              u14507 1762  
                                            u14427 145C                                              u14347 121C  
                                            u11980 242C                                              u12780 4712  
                                            u12860 4CE0                                              u12836 507E  
                                            u12684 32FA                                              u12940 368E  
                                            u11981 2428                                              u12781 470E  
                                            u12861 4CDA                                              u12685 32F6  
                                            u12941 368A                                              u14517 17A6  
                                            u14437 14A0                                              u14357 1262  
                                            u11990 243E                                              u12790 4752  
                                            u12846 4636                                              u12870 4D0C  
                                            u12950 36C0                                              u14607 3DA8  
                                            u11991 243A                                              u12871 4D08  
                                            u12951 36BC                                              u14527 1826  
                                            u14447 154E                                              u14367 12A0  
                                            u12856 466A                                              u12880 4D2A  
                                            u12960 370A                                              u14617 4EF8  
                                            u12881 4D26                                              u12961 3706  
                                            u14537 1924                                              u14457 1598  
                                            u14377 12DC                                              u12866 4CE2  
                                            u12890 4D4C                                              u12970 3742  
                                            u13930 113E                                              u12891 4D48  
                                            u12971 373E                                              u14547 196A  
                                            u14467 15F0                                              u14387 1362  
                                            u13931 113A                                              u12980 3754  
                                            u13940 114E                                              u12797 4748  
                                            u12981 3750                                              u14557 19AE  
                                            u14477 1634                                              u14397 1386  
                                            u13941 114A                                              u12990 335C  
                                            u13950 115E                                              u14567 33B8  
                                            u12991 3358                                              u14487 16AE  
                                            u13951 115A                                              u13960 1180  
                                            u14577 33D6                                              u14497 172E  
                                            u13961 117C                                              u13970 1190  
                                            u14587 33EE                                              u13971 118C  
                                            u14597 3D64                                              u13981 12CC  
                                            u13990 133C                                              u13991 1338  
                              ?_Timer0_Write_Value 00D5                                              i2l103 4E6A  
                                            i2l212 4F6C                                              i2l108 4EC6  
                                            i2l207 4572                                              i2l129 43C2  
                                            i2l228 4456                                              i2l702 5640  
                                            i2l384 45FA                                              i2l650 4A92  
                                            i2l811 2D72                                              i2l573 5644  
                                            i2l655 4A94                                              i2l649 4A42  
                                            i2l834 2FEA                                              i2l698 5234  
                                  ___awdiv@counter 0005                                              _RCREG 0FAE  
                                            _TMR0H 0FD7                                              _TMR1H 0FCF  
                                            _TMR0L 0FD6                                              _TMR1L 0FCE  
                                            _TMR3H 0FB3                                              _TMR3L 0FB2  
                                            _SPBRG 0FAF                                              _PORTA 0F80  
                                            _PORTB 0F81                                              _PORTC 0F82  
                                            _PORTD 0F83                                              _PORTE 0F84  
                                ??_I2C_DO_TX_EMPTY 00DD                                              _TRISA 0F92  
                                            _TRISB 0F93                                              _TRISC 0F94  
                                            _TRISD 0F95                                              _TRISE 0F96  
                                            _TXREG 0FAD                               keyPad_Read@l_counter 00E1  
                         __end_ofi2_LCD_Send_4Bits 4574                  __end_of_ECU_LCD_4Bit_Send_Command 4B68  
                                 __end_of_TMR0_ISR 51D4                                   __end_of_TMR1_ISR 5564  
                                __end_of_I2C_DO_RX 4160                                  __end_of_I2C_DO_TX 3C7E  
                                 __end_of_TMR2_ISR 55EA                                   __end_of_TMR3_ISR 5556  
   _REALTIMECLOCK_DS1307@RealTimeClock_DS1307$F604 0083                       ??_PinsConfig@hal_usart$F4662 00DF  
                   __end_ofi2_LCD_4Bits_Set_Curser 4458                               _ADC_Start_Conversion 53EC  
                                __end_of_I2C_Close 5264                                              _hours 0024  
                   I2C_MasterOperation@returnValue 00E3                            _I2C_MasterEnableRestart 560E  
                            __end_of_Timer0_Deinit 532A                                              pclath 0FFA  
                                            pclatu 0FFB                                              tablat 0FF5  
                                 ?_I2C_SetCallback 00D5             __end_of_EUSART_ASYNC_WriteByteBlocking 543E  
                   _EUSART_ASYNC_WriteByteBlocking 5424                                  ??_Timer0_Set_Mode 00D7  
                     I2C_SetAddressNackCallback@cb 00D9                                              plusw0 0FEB  
                                            plusw2 0FDB                                              ttemp5 0040  
                                            ttemp6 0043                                              ttemp7 0047  
                                            status 0FD8                                              wtemp8 0040  
                                ?_I2C_DO_SEND_STOP 0001                               ??_Timer0_Write_Value 00D9  
                          _Timer0_Prescaler_Config 4C98                          keyPad_Read@l_rows_counter 00E2  
            __end_ofi2_ECU_LCD_4Bit_Send_char_Data 4EC8                      i2_ECU_LCD_4Bit_Send_char_Data 4E6C  
                               ??_I2C_DO_SEND_STOP 00D5                     ?_gpio_pin_direction_initialize 00D5  
       ADC_Get_Conversion_Result_Block@_ADC_Result 00DF                        _I2C_DefaultInterruptHandler 00BB  
                            _Timer0_Set_Resolution 504E                                    __initialization 494E  
                                     __end_of_main 1A1A                              ?_gpio_pin_write_logic 00D5  
       ADC_Get_Conversion_Result_Block@_ADC_config 00DC                          ?_I2C_DO_SEND_RESTART_READ 0001  
                                  ?_update_display 0001                                 _Timer1_Write_Value 532A  
                            ECU_Relay_turnON@F3467 00CB                  _TemperatureSensor_TC74_Read_Value 003E  
                      i2gpio_pin_write_logic@logic 0003                                     ?_I2C_DO_RX_ACK 0001  
                                        ??_ADC_ISR 0001                                     ?_EUSART_RX_ISR 0001  
                        Timer1_Write_Value@_timer1 0001                                     ?_EUSART_TX_ISR 0001  
                         gpio_pin_read_logic@logic 00D7                                      _lat_registers 0115  
                                  ?_LCD_Send_4Bits 00DB                                    LED_turnON@F3466 002A  
                                           ??_main 0194                                  ?_I2C_MasterIsNack 0001  
                 ??_Timer0_Interrupt_Configuration 00D7                    ?_Timer0_Interrupt_Configuration 00D5  
                                    __activetblptr 0003                                ?_Timer1_Write_Value 0001  
                                        ??_RB4_ISR 0001                                          ??_RB5_ISR 0001  
                                ?_I2C_MasterSetIrq 0001                                          ??_RB6_ISR 0001  
                                        ??_RB7_ISR 0001                                 ??_I2C_MasterIsNack 00D5  
                               ??_I2C_MasterSetIrq 00D5                              ?_ADC_Start_Conversion 00D5  
                                   _EUSART_RX_Init 393E                    __end_of_I2C_CallbackReturnReset 5606  
               __end_of_CCPx_CompareMode_WriteData 4A96                         _CCPx_CompareMode_WriteData 4A2A  
                                           _ADRESH 0FC4                                             _EEADRH 0FAA  
                                           _ADRESL 0FC3                            _ECU_LCD_4Bit_Initialize 3348  
                                           _EEDATA 0FA8                                             _CCPR1H 0FBF  
                                           _CCPR2H 0FBC                                             _CCPR1L 0FBE  
                                           _CCPR2L 0FBB                                  _keyPad_Initialize 4680  
                                           _EECON2 0FA7                                     _EUSART_TX_Init 3DFA  
                                 ___awdiv@dividend 0001                      I2C_SetDataCompleteCallback@cb 00D9  
                                           _ANSELH 0F7F                                  _EUSART_ASYNC_Init 5094  
                                     ??_I2C_Poller 00E2                                             i2l1044 5628  
                                           i2l1048 562C                                             i2l1254 5634  
                                           i2l1249 5638                                             i2l1450 0092  
                                           i2l2091 5646                                             i2l1259 5630  
                                           i2l1347 54A4                                             i2l1380 5456  
                                           i2l1460 01E0                                             i2l1452 00D4  
                                           i2l2085 563C                                             i2l1358 548A  
                                           i2l1470 02EA                                             i2l1462 0224  
                                           i2l1454 0118                                             i2l1446 0052  
                                           i2l1480 038A                                             i2l1472 030A  
                                           i2l1464 0266                                             i2l1456 015A  
                                           i2l1448 0072                                             i2l1369 5470  
                                           i2l1482 03AA                                             i2l1474 032A  
                                           i2l1466 02AA                                             i2l1458 019E  
                                           i2l1491 042A                                             i2l1484 03CA  
                                           i2l1476 034A                                             i2l1468 02CA  
                                           i2l1486 03EA                                             i2l1478 036A  
                                           i2l1823 5562                                             i2l1656 5624  
                                           i2l1744 51D2                                             i2l1488 040A  
                                           i2l1782 534C                                             i2l1870 55E8  
                                           i2l1783 534E                                             i2l2647 384C  
                                           i2l1944 5554                                             i2l2738 3BBA  
                                           i2l2975 3D3E                                             i2l2988 4012  
                                           i2l8700 2D78                                             i2l8710 2E68  
                                           i2l8702 2DA8                                             i2l9600 4A2A  
                                           i2l8720 2F58                                             i2l8712 2EA0  
                                           i2l8704 2DD8                                             i2l9520 4348  
                                           i2l9610 4A86                                             i2l9602 4A3C  
                                           i2l8722 2F86                                             i2l8714 2ECE  
                                           i2l8706 2E08                                             i2l9522 435C  
                                           i2l9514 4330                                             i2l9612 4A8E  
                                           i2l9604 4A4A                                             i2l8716 2EFC  
                                           i2l8708 2E38                                             i2l8724 2FBE  
                                           i2l9524 438A                                             i2l9516 4332  
                                           i2l9606 4A62                                             i2l8718 2F2A  
                                           i2l8726 2FE8                                             i2l8750 44F8  
                                           i2l8830 4E26                                             i2l9526 438E  
                                           i2l9518 4342                                             i2l9608 4A6E  
                                           i2l9800 3D10                                             i2l8760 4F1E  
                                           i2l8752 44FE                                             i2l8832 4E68  
                                           i2l8824 4E10                                             i2l9528 43C0  
                                           i2l9810 3D36                                             i2l9802 3D12  
                                           i2l8770 4F6A                                             i2l8762 4F2E  
                                           i2l8754 4570                                             i2l8746 44E8  
                                           i2l8826 4E10                                             i2l9804 3D18  
                                           i2l9820 3F7E                                             i2l8764 4F34  
                                           i2l8748 44E8                                             i2l8940 4E82  
                                           i2l8828 4E20                                             i2l9590 533A  
                                           i2l9806 3D1E                                             i2l9830 3FB2  
                                           i2l9822 3F82                                             i2l9814 3F66  
                                           i2l8694 2D3A                                             i2l8766 4F4A  
                                           i2l8758 4F1E                                             i2l8942 4EC4  
                                           i2l8934 4E6C                                             i2l8950 43C8  
                                           i2l9592 5340                                             i2l9808 3D2E  
                                           i2l9840 3FEC                                             i2l9832 3FBA  
                                           i2l9824 3F90                                             i2l9816 3F68  
                                           i2l8696 2D3E                                             i2l8768 4F52  
                                           i2l8936 4E6C                                             i2l8960 441A  
                                           i2l8952 43D8                                             i2l9594 5344  
                                           i2l9586 532A                                             i2l9770 3C7E  
                                           i2l9834 3FC8                                             i2l9842 3FF2  
                                           i2l9826 3F98                                             i2l9818 3F76  
                                           i2l8698 2D50                                             i2l8938 4E7C  
                                           i2l8954 43DE                                             i2l8946 43C4  
                                           i2l9850 375C                                             i2l9588 532A  
                                           i2l9780 3CA8                                             i2l9772 3C80  
                                           i2l9844 4002                                             i2l9836 3FDE  
                                           i2l9828 3FAA                                             i2l8956 43F2  
                                           i2l8964 442E                                             i2l8948 43C6  
                                           i2l9852 3818                                             i2l9598 4A2A  
                                           i2l9790 3CD6                                             i2l9782 3CB0  
                                           i2l9774 3C8E                                             i2l9846 400A  
                                           i2l9838 3FE6                                             i2l8958 4406  
                                           i2l8966 4454                                             i2l9854 3838  
                                           i2l9792 3CDE                                             i2l9784 3CB4  
                                           i2l9776 3C96                                             i2l9794 3CEC  
                                           i2l9786 3CBC                                             i2l9778 3C9A  
                          _ret@ecu_servoMotor$F857 00C8                                             i2l9796 3CF2  
                                           i2l9788 3CCE                                             i2l9990 4576  
                                           i2l9798 3D08                                             i2l9992 458A  
                                           i2l9994 459A                                             i2l9996 45B2  
                                           i2l9988 4574                                             i2l9998 45BE  
                               ?_keyPad_Initialize 00DF                                             _OSCCON 0FD3  
                         LCD_4Bits_Set_Curser@_LCD 00E2                                             _SPBRGH 0FB0  
                         i2LCD_4Bits_Set_Curser@rt 0011                                 ?_EUSART_ASYNC_Init 0188  
                                           _SSPADD 0FC8                                             _TRISA5 7C95  
                                           _TRISC3 7CA3                                             _TRISC4 7CA4  
                                           _TRISC5 7CA5                                             _SSPBUF 0FC9  
                                           _SPI_SS 00C4                                 Timer0_Init@_timer0 00D9  
                                 __end_of___xxtofl 31A4                               _LCD_4Bits_Set_Curser 4160  
                             ??_Timer1_Write_Value 0004                                      ??_Timer0_Init 00DB  
                              _I2C_MasterGetRxData 55FA                              EUSART_RX_Init@_EUSART 00D5  
                              ??_keyPad_Initialize 00E1                                ??_EUSART_ASYNC_Init 0100  
                                        ??___fladd 00FC                                          ??___fldiv 00EB  
                                    _I2C_MasterFsm 49BC                                          ??___awdiv 0005  
                                        ??___awmod 0005                                          ??___fltol 00D9  
                                           _pinRC6 00D4                                             _pinRC7 00D3  
               CCPx_CompareMode_WriteData@CCPx_reg 0007                                             clear_0 4994  
                                           clear_1 49A0                                             clear_2 49AC  
                                I2C_SetCallback@cb 00D5                                   ___awdiv@quotient 0007  
                                  ___awmod@divisor 0003                             ?_I2C_Read1ByteRegister 00E4  
                                           isa$std 0001                                    ___awmod@counter 0005  
                                    _I2C_SetBuffer 5392                                 __end_of_I2C_Poller 53D0  
                     __end_of_I2C_MasterDisableIrq 561A                                _CCP2_InterrptHandle 00BD  
                   ?_REALTIMECLOCK_DS1307_Get_Data 00E7                                          ?_CCP1_ISR 0001  
                              _I2C_DO_ADDRESS_NACK 4C34                                       __pdataCOMRAM 0032  
                                        ?_CCP2_ISR 0001                               ?_I2C_MasterGetRxData 0001  
                                        ?_I2C_Open 0001                 __end_of_I2C_SetAddressNackCallback 54D2  
                  i2ECU_LCD_4Bit_Send_char_Data@rt 000D                      ECU_LCD_4Bit_Send_char_Data@rt 00E1  
                       _I2C_SetAddressNackCallback 54BE                         _USART_FRE_InterruptHandler 008B  
                                        ?_ADC_Init 00D9                                       __mediumconst 0000  
                           __end_of_EUSART_RX_Init 3A1C                          ECU_LCD_4Bit_Initialize@rt 00E5  
                                           tblptrh 0FF7                                             tblptrl 0FF6  
                        __end_of_keyPad_Initialize 46FE                                             tblptru 0FF8  
                           __end_of_EUSART_TX_Init 3EB0                          ??_I2C_MasterEnableRestart 00D5  
                        _Interrupt_RB4_Handler_LOW 00AD                          __end_of_EUSART_ASYNC_Init 50DA  
          ADC_Select_Specific_Channel@_ADC_Channel 00D7                      __end_of_ADC_Conversion_Result 40BE  
      ADC_Get_Conversion_Result_Block@_ADC_Channel 00DE                        _USART_OVRR_InterruptHandler 0089  
                          _Timer0_InterruptHandler 009D                                       ___xxtofl@arg 00DF  
                        ??_Timer0_Prescaler_Config 00D7                                       ___xxtofl@exp 00DE  
                                __end_of_Dashboard 3DFA                                  _SYSTEM_Initialize 552C  
                                     ___xxtofl@val 00D5                                         __accesstop 0060  
                          __end_of__initialization 49B2                      ADC_Select_Channel@_ADC_config 00D8  
                                        ?_INT0_ISR 0001                                          ?_INT1_ISR 0001  
                                        ?_INT2_ISR 0001                              ?_LCD_4Bits_Set_Curser 00E2  
                              _I2C_MasterOperation 50DA                                 ?_SYSTEM_Initialize 0001  
                                    ___rparam_used 0001                               ?_I2C_DO_ADDRESS_NACK 0001  
                                       ___fltol@f1 00D5                             ?_Timer0_Set_Resolution 00D5  
                       _I2C_Report_Write_Collision 00B7                            _rdBlkRegCompleteHandler 5164  
                                RB5_ISR@RB5_Source 0001                             ??_gpio_pin_write_logic 00D8  
                                   __pcstackCOMRAM 0001                 __end_of_EUSART_BaudRateCalculation 1F22  
                       _EUSART_BaudRateCalculation 1A1A                                     ?_I2C_MasterFsm 0001  
                                  ??_I2C_DO_RX_ACK 00D5                                       __pidataBANK1 5006  
                           _I2C_CallbackReturnStop 5606                                ??_SYSTEM_Initialize 00D5  
                                        ?_TMR0_ISR 0001                                    ??_EUSART_RX_ISR 0001  
                        _USART_TX_InterruptHandler 008F                                          ?_TMR1_ISR 0001  
                                        ?_TMR2_ISR 0001                                          ?_TMR3_ISR 0001  
                         i2gpio_pin_write_logic@rt 0006                __end_of_ECU_LCD_4Bit_Send_char_Data 4BD0  
                   ?i2_ECU_LCD_4Bit_Send_char_Data 000B                        _ECU_LCD_4Bit_Send_char_Data 4B68  
                           ECU_Relay_turnOFF@F3472 00CA                                    ??_EUSART_TX_ISR 0001  
                         Timer1_Write_Value@_value 0002                                __end_of_Timer0_Init 44E8  
                                   ?_I2C_SetBuffer 00D5                            ?_I2C_MasterWaitForEvent 0001  
                    __end_of_I2C_DO_SEND_ADR_WRITE 5548                         ?_I2C_DO_SEND_RESTART_WRITE 0001  
                             ?_I2C_MasterOperation 0001                              ??_I2C_MasterGetRxData 00D5  
                                       ??_CCP1_ISR 0009                            ?_I2C_Write1ByteRegister 00E4  
                                       ??_CCP2_ISR 0001                                   LED_turnOFF@F3471 0029  
                                       ??_I2C_Open 00D5                                         ??_ADC_Init 00DB  
                           ??_ADC_Start_Conversion 00D7                 __end_of_PinsConfig@hal_usart$F4659 5164  
                       _PinsConfig@hal_usart$F4659 5120                          ??_ECU_LCD_4Bit_Initialize 00E3  
                      ??_ECU_LCD_4Bit_Send_Command 00E1                                    ?_EUSART_RX_Init 00D5  
                       __end_of_I2C_MasterClearIrq 5622                                    ?_EUSART_TX_Init 00D5  
                        _Interrupt_RB5_Handler_LOW 00A9                          __end_of_SYSTEM_Initialize 553A  
                                _I2C_MasterSendAck 55EA              Timer0_Interrupt_Configuration@_timer0 00D5  
                                       __pbssBANK0 0060                                         __pbssBANK1 0147  
          __end_of_REALTIMECLOCK_DS1307_print_Data 393E                  ??_REALTIMECLOCK_DS1307_print_Data 0100  
                 ?_REALTIMECLOCK_DS1307_print_Data 018A                    _REALTIMECLOCK_DS1307_print_Data 384E  
                                    ??_I2C_DO_IDLE 00D5                                      ??_I2C_DO_RCEN 00D5  
                    __end_of_rd2RegCompleteHandler 52B4                       __end_of_I2C_MasterSendTxData 559A  
                               ?_I2C_MasterSendAck 0001                                         ??_INT0_ISR 0001  
                                _I2C_MasterStartRx 55FE                                         ??_INT1_ISR 0001  
                                       ??_INT2_ISR 0001                                         __pnvCOMRAM 003E  
                            ??_I2C_DO_ADDRESS_NACK 00DD                      __end_of_wr2RegCompleteHandler 5304  
          EUSART_ASYNC_WriteStringBlocking@str_len 00D8                                _I2C_DO_RX_NACK_STOP 55B2  
                            _rd1RegCompleteHandler 52B4                                 ?_I2C_MasterStartRx 0001  
                       __end_of_I2C_MasterSendNack 55F6                              _wr1RegCompleteHandler 5264  
                              ??_I2C_MasterSendAck 00D5                           rd1RegCompleteHandler@ptr 00DC  
                      __end_of_I2C_DO_SEND_RESTART 55D2                                    _I2C_DO_TX_EMPTY 477A  
                              I2C_SetBuffer@buffer 00D5                                         ??_TMR0_ISR 0018  
                                       ??_TMR1_ISR 0001                                         ??_TMR2_ISR 0001  
                                       ??_TMR3_ISR 0001                     __end_of_I2C_MasterWaitForEvent 551C  
                              ??_I2C_MasterStartRx 00D5                                            _ADC_LDR 0130  
                                          _ADC_ISR 5642                              ??_I2C_MasterOperation 00E2  
                   I2C_SetDataCompleteCallback@ptr 00DB                     __end_of_I2C_Write1ByteRegister 494E  
                                 LCD_Send_4Bits@rt 00DE                                  RB7_ISR@RB7_Source 0001  
                         ??_I2C_DO_RX_NACK_RESTART 00D5                  __end_of_I2C_DO_SEND_RESTART_WRITE 55DA  
                             ?_I2C_DO_RX_NACK_STOP 0001                                  ?i2_update_display 0001  
                                          i2l10000 45D0                                            i2l10002 45F0  
                                          i2l10004 45F8                                            i2l10130 3B22  
                                          i2l10122 3AF8                                            i2l10140 3B6E  
                                          i2l10124 3B08                                            i2l10132 3B24  
                                          i2l10142 3B86                                            i2l10134 3B26  
                                          i2l10126 3B1C                                            i2l10144 3B9E  
                                          i2l10136 3B3E                                            i2l10128 3B20  
                                          i2l10402 5206                                            i2l10146 3BB6  
                                          i2l10138 3B56                                            i2l10404 5208  
                                          i2l10420 5636                                            i2l10412 5626  
                                          i2l10500 51A8                                            i2l10406 521C  
                                          i2l10502 51BA                                            i2l10408 563E  
                                          i2l10432 562E                                            i2l10416 562A  
                                          i2l10440 5490                                            i2l10504 5556  
                                          i2l10512 55E2                                            i2l10520 5550  
                                          i2l10426 5632                                            i2l10506 5558  
                                          i2l10524 563A                                            i2l10460 548A  
                                          i2l10452 5474                                            i2l10508 555E  
                                          i2l10516 5548                                            i2l10534 5622  
                                          i2l10446 54A4                                            i2l10438 548E  
                                          i2l10454 5476                                            i2l10518 554A  
                                          i2l10528 5646                                            i2l10480 5440  
                                          i2l10474 5470                                            i2l10466 545A  
                                          i2l10482 5442                                            i2l10468 545C  
                                          i2l10398 5642                                            i2l10494 519C  
                                          i2l10488 5456                                            i2l10496 519E  
                                          i2l11800 021E                                            i2l10498 51A4  
                                          i2l11810 0260                                            i2l11802 0232  
                                          i2l11730 0040                                            i2l11820 02A4  
                                          i2l11812 0274                                            i2l11804 0240  
                                          i2l11740 008E                                            i2l11732 004E  
                                          i2l11830 02F8                                            i2l11822 02B8  
                                          i2l11814 0282                                            i2l11806 024E  
                                          i2l11750 00CE                                            i2l11742 00A0  
                                          i2l11734 0060                                            i2l11840 0346  
                                          i2l11832 0306                                            i2l11824 02C6  
                                          i2l11816 0290                                            i2l11808 025E  
                                          i2l11760 0112                                            i2l11752 00E2  
                                          i2l11744 00AE                                            i2l11736 006E  
                                          i2l11728 0032                                            i2l11850 0398  
                                          i2l11842 0358                                            i2l11834 0318  
                                          i2l11826 02D8                                            i2l11818 02A0  
                                          i2l11770 0154                                            i2l11762 0126  
                                          i2l11754 00F0                                            i2l11746 00BC  
                                          i2l11738 0080                                            i2l11860 03E6  
                                          i2l11852 03A6                                            i2l11844 0366  
                                          i2l11836 0326                                            i2l11828 02E6  
                                          i2l11780 0198                                            i2l11772 0168  
                                          i2l11764 0134                                            i2l11756 00FE  
                                          i2l11748 00CC                                            _RB4_ISR 548C  
                                          i2l11862 03F8                                            i2l11854 03B8  
                                          i2l11846 0378                                            i2l11838 0338  
                                          i2l11790 01DA                                            i2l11782 01AC  
                                          i2l11774 0176                                            i2l11766 0142  
                                          i2l11758 010E                                            i2l11864 0406  
                                          i2l11856 03C6                                            i2l11848 0386  
                                          i2l11792 01EE                                            i2l11784 01BA  
                                          i2l11776 0184                                            i2l11768 0152  
                                          i2l11866 0418                                            i2l11858 03D8  
                                          i2l11794 01FC                                            i2l11786 01C8  
                                          i2l11778 0194                                            i2l11868 0426  
                                          i2l11796 020A                                            i2l11788 01D8  
                                          i2l11798 021A                                            _RB5_ISR 5472  
                       ?_ADC_Result_Format_Control 00D5                                            _RB6_ISR 5458  
                                          i2l15882 2FD2                                            _RB7_ISR 543E  
                                  _Timer0_Set_Mode 45FC                                          ?___xxtofl 00D5  
                               _ADC_Select_Channel 51D4                                      ?_MSSP_I2C_ISR 0001  
                               ??i2_update_display 0018                                  ?i2_LCD_Send_4Bits 0007  
                        __end_of_I2C_MasterSendAck 55F0                                            _OSCTUNE 0F9B  
                        _Interrupt_RB6_Handler_LOW 00A5                                            _SSPCON1 0FC6  
                                          _SSPCON2 0FC5                                            _SPI_SDI 00C6  
                                          _SPI_SCK 00C5                                 ??i2_LCD_Send_4Bits 0009  
                                          _SPI_SDO 00C7                                            _SSPSTAT 0FC7  
                                          _PWM_Val 0022                          __end_of_I2C_MasterStartRx 5602  
                              ?_ADC_Select_Channel 00D8                               I2C_Close@returnValue 00D5  
                     ?_I2C_SetDataCompleteCallback 00D9                    i2ECU_LCD_4Bit_Send_Command@_LCD 000B  
                    ECU_LCD_4Bit_Send_Command@_LCD 00DF                                          _I2C_DO_RX 40BE  
                                        _I2C_DO_TX 3BBC                             ??_LCD_4Bits_Set_Curser 00E5  
                 __end_of_I2C_DO_SEND_RESTART_READ 55E2                              gpio_pin_initialize@rt 00DE  
                     I2C_Read1ByteRegister@address 00E5                                     _tris_registers 011A  
                                        _I2C_Close 5236                          ??_rdBlkRegCompleteHandler 00DD  
                                    ?_MSSP_SPI_ISR 0001                                          _CCP1_flag 0027  
                             _I2C_MasterDisableIrq 5616                              gpio_pin_read_logic@rt 00DA  
                                 ??_update_display 0100                                  ??_MSSP_I2C_BC_ISR 0001  
                     ?i2_ECU_LCD_4Bit_Send_Command 000B                          _ECU_LCD_4Bit_Send_Command 4B00  
                     ?_ADC_Select_Specific_Channel 0001                                    ??_I2C_MasterFsm 00DF  
                             _ADC_InterruptHandler 00C1                                            __Hparam 0000  
                                      _Timer0_Init 4458                   ADC_Conversion_Result@_ADC_Result 00D7  
                                          __Lparam 0000                                __end_of_I2C_DO_IDLE 5590  
                              __end_of_I2C_DO_RCEN 557C                                   ??_LCD_Send_4Bits 00DD  
                             _SPI_InterruptHandler 009F                                _gpio_pin_initialize 4BD0  
                                          ___fladd 1F22                                 LCD_Send_4Bits@_LCD 00DB  
                                          ___fldiv 2410                                            ___awdiv 3C7E  
                              _gpio_pin_read_logic 31A4                   ADC_Conversion_Result@_ADC_config 00D5  
                                          ___awmod 3F66                                            ___fltol 3460  
                                  ??_I2C_SetBuffer 00D8                    ?_EUSART_ASYNC_WriteByteBlocking 0001  
                 ??_EUSART_ASYNC_WriteByteBlocking 00D5                               ??_ADC_Select_Channel 00DB  
                            Timer1_Write_Value@ret 0004                            I2C_SetBuffer@bufferSize 00D6  
                                     __psmallconst 1000                                         _exit_Clock 002C  
                          _Timer1_InterruptHandler 0099                                     _I2C_MasterOpen 5372  
                                          __pcinit 494E                                     _I2C_MasterStop 560A  
                                    keyPad_Read@rt 00E0                                     _I2C_Initialize 54FA  
                                          __ramtop 1000                                            __ptext0 1052  
                                          __ptext1 3568                                            __ptext2 3664  
                                          __ptext3 31A4                                            __ptext4 4680  
                                          __ptext5 4458                                            __ptext6 4CF8  
                                          __ptext7 504E                                            __ptext8 45FC  
                                          __ptext9 4C98                                         _exit_alarm 002D  
                            ??_I2C_DO_RX_NACK_STOP 00D5                                          _T0CONbits 0FD5  
                                        _T1CONbits 0FCD                    ??_gpio_pin_direction_initialize 00D7  
                                   ??_MSSP_I2C_ISR 0001                              _OSCILLATOR_Initialize 559A  
                                        _T2CONbits 0FCA                                         ??___xxtofl 00D9  
                                        _T3CONbits 0FB1                                   ___awmod@dividend 0001  
                               I2C_SetCallback@idx 00D8                  __end_of_ADC_Result_Format_Control 5006  
                                          _minutes 0025                           ??_PIN_MANAGER_Initialize 00D5  
                    I2C_CallbackReturnReset@funPtr 00DC                                            _seconds 0026  
           ADC_Interrupt_Configuration@_ADC_config 00D5                                 I2C_SetCallback@ptr 00D7  
                         wr1RegCompleteHandler@ptr 00DC                          I2C_Write1ByteRegister@reg 00E4  
                             ?_gpio_pin_initialize 00DB                          _Interrupt_RB7_Handler_LOW 00A1  
                             ?_gpio_pin_read_logic 00D5                           ??i2_gpio_pin_write_logic 0004  
                      ?_CCPx_CompareMode_WriteData 0001                               end_of_initialization 49B2  
              EUSART_ASYNC_WriteStringBlocking@ret 00DC                                         ?_I2C_DO_RX 0001  
                                       ?_I2C_DO_TX 0001             __end_of_Timer0_Interrupt_Configuration 53EC  
                   _Timer0_Interrupt_Configuration 53D0                       ?_ADC_Interrupt_Configuration 00D5  
                                       ?_I2C_Close 0001                      PinsConfig@hal_usart$F4659@ret 00DF  
                                   ??_MSSP_SPI_ISR 0001                             ?_rd1RegCompleteHandler 00DC  
                                        i2u1000_40 0290                                          i2u1000_41 028C  
                          __end_of_I2C_DO_TX_EMPTY 47F4                                          i2u1001_40 02A0  
                                        i2u1001_41 029C                                          i2u1010_40 0338  
                                        i2u1002_40 02B8                                          i2u1010_41 0334  
                                        i2u1002_41 02B4                                          i2u1011_40 0346  
                                        i2u1003_40 02C6                                          i2u1011_41 0342  
                                        i2u1003_41 02C2                                          i2u1020_40 03D8  
                                        i2u1012_40 0358                                          i2u1004_40 02D8  
                                        i2u1020_41 03D4                                          i2u1012_41 0354  
                                        i2u1004_41 02D4                                          i2u1021_40 03E6  
                                        i2u1013_40 0366                                          i2u1005_40 02E6  
                                        i2u1021_41 03E2                                          i2u1013_41 0362  
                                        i2u1005_41 02E2                                          i2u1022_40 03F8  
                                        i2u1014_40 0378                                          i2u1006_40 02F8  
                                        i2u1022_41 03F4                                          i2u1014_41 0374  
                                        i2u1006_41 02F4                                          i2u1023_40 0406  
                                        i2u1015_40 0386                                          i2u1007_40 0306  
                                        i2u1023_41 0402                                          i2u1015_41 0382  
                                        i2u1007_41 0302                                          i2u1024_40 0418  
                                        i2u1016_40 0398                                          i2u1008_40 0318  
                                        i2u1024_41 0414                                          i2u1016_41 0394  
                                        i2u1008_41 0314                                          i2u1025_40 0426  
                                        i2u1017_40 03A6                                          i2u1009_40 0326  
                                        i2u1025_41 0422                                          i2u1017_41 03A2  
                                        i2u1009_41 0322                                          i2u1018_40 03B8  
                                        i2u1018_41 03B4                                          i2u1019_40 03C6  
                                        i2u1019_41 03C2                              ?_I2C_MasterDisableIrq 0001  
                                        i2u1462_47 4F4C                             ?_wr1RegCompleteHandler 00DC  
                  ??_ADC_Voltage_Reference_Control 00D7                     ADC_Select_Channel@_ADC_Channel 00DA  
                       _Interrupt_RB4_Handler_HIGH 00AF                      ??i2_ECU_LCD_4Bit_Send_Command 000D  
                                        _RCSTAbits 0FAB                                         _timer1_obj 00CD  
                                          postdec1 0FE5                                            postdec2 0FDD  
                          ??_I2C_Read1ByteRegister 00E5                             __end_of_I2C_MasterOpen 5392  
                                          postinc0 0FEE                                            postinc2 0FDE  
                           __end_of_I2C_MasterStop 560E                             __end_of_I2C_Initialize 550C  
                                       _time_array 007D                            __end_of_Timer0_Set_Mode 4680  
                                 Timer0_Deinit@ret 00D7                                          _PORTBbits 0F81  
                  __end_of_rdBlkRegCompleteHandler 519C                 ADC_Get_Conversion_Result_Block@ret 00E0  
                             _I2C_MasterSendTxData 5590                                ADC_Init@_ADC_config 00D9  
                                 _InterruptManager 0008                                        ___fladd@grs 017B  
          __end_of_ADC_Get_Conversion_Result_Block 4DB4                  ??_ADC_Get_Conversion_Result_Block 00E0  
                 ?_ADC_Get_Conversion_Result_Block 00DC                    _ADC_Get_Conversion_Result_Block 4D56  
                                    ___xxtofl@sign 00DD                        ?_I2C_SetAddressNackCallback 00D9  
                                        _TRISCbits 0F94                       gpio_pin_initialize@pinConfig 00DB  
                            ??_gpio_pin_initialize 00DD                              ??_gpio_pin_read_logic 00D8  
                                      ___fldiv@grs 00F6                                        ___fldiv@rem 00EF  
                EUSART_BaudRateCalculation@_EUSART 017C                           EUSART_ASYNC_Init@_EUSART 0188  
                          ??_Timer0_Set_Resolution 00D7                                        _I2C_DO_IDLE 5586  
                                      _I2C_DO_RCEN 5570                         rdBlkRegCompleteHandler@ptr 00DC  
                                      _CCP1CONbits 0FBD                      I2C_Write1ByteRegister@address 00E6  
                                      _CCP2CONbits 0FBA                                          _TXSTAbits 0FAC  
                    CCPx_CompareMode_WriteData@ret 0006                            ?_I2C_CallbackReturnStop 00DC  
                                        _Dashboard 3D40                           _I2C_DO_SEND_RESTART_READ 55DA  
                           Timer0_Set_Mode@_timer0 00D5                        ?_EUSART_BaudRateCalculation 017C  
                     I2C_CallbackReturnStop@funPtr 00DC                                    ?_I2C_MasterOpen 0001  
                                  ?_I2C_MasterStop 0001                                    ?_I2C_Initialize 0001  
                    Convert_uint16_to_string@F3619 014D                            _I2C_CallbackReturnReset 5602  
                         I2C_Read1ByteRegister@reg 00E4                                     _LDR_Read_Value 0031  
                                      _BAUDCONbits 0FB8                                      __pidataCOMRAM 5564  
                                 ??_EUSART_RX_Init 00D7                                     _timer0_preload 009B  
      i2ECU_LCD_4Bit_Send_String_Data_Postition@rt 0017          ECU_LCD_4Bit_Send_String_Data_Postition@rt 0191  
                                 ??_EUSART_TX_Init 00D7                              ?_I2C_MasterSendTxData 0001  
                         ??i2_LCD_4Bits_Set_Curser 0011                             ?_OSCILLATOR_Initialize 0001  
                      ??_I2C_DO_SEND_RESTART_WRITE 00D5                                     _timer1_preload 0097  
                                ??_CCP1_DefaultISR 0009                                     _timer2_preload 00C3  
                  ADC_Start_Conversion@_ADC_config 00D5             EUSART_BaudRateCalculation@baudrate_Val 0180  
                              start_initialization 494E                                     _timer3_preload 0091  
                      ?_PinsConfig@hal_usart$F4660 0001                                      ??_keyPad_Read 00DE  
                                    ?_I2C_DO_RESET 0001             gpio_pin_direction_initialize@pinConfig 00D5  
            __end_of_gpio_pin_direction_initialize 2A72                      _gpio_pin_direction_initialize 27A2  
                  gpio_pin_direction_initialize@rt 00D9                            _Timer2_InterruptHandler 0095  
                                      ??_I2C_DO_RX 00DD                                        ??_I2C_DO_TX 00DD  
                                ??_I2C_MasterClose 00D5                              _ADC_Conversion_Result 4014  
                                    _Timer0_Deinit 5304                             ??_I2C_MasterDisableIrq 00D5  
                                      ??_I2C_Close 00D5                                  ??_I2C_MasterStart 00D5  
                                ??_I2C_MasterWrite 00E4                     __end_of_I2C_CallbackReturnStop 560A  
                         keyPad_Read@coloumn_logic 00E4                             _I2C_DO_RX_NACK_RESTART 55AA  
                                 ?_I2C_DO_TX_EMPTY 0001                                 _I2C_MasterClearIrq 561E  
                                       ?_Dashboard 0001                               __end_of_MSSP_I2C_ISR 562A  
                          LCD_4Bits_Set_Curser@row 00E3                         _Interrupt_RB5_Handler_HIGH 00AB  
                        _USART_RX_InterruptHandler 008D              __end_of_ADC_Voltage_Reference_Control 4FBC  
                    _ADC_Voltage_Reference_Control 4F6E                                ?_I2C_MasterClearIrq 0001  
                      __end_of_I2C_MasterGetRxData 55FE                                        __pdataBANK1 0100  
               keyPad_Initialize@l_coloums_counter 00E5                           Timer0_Write_Value@_value 00D7  
                            __end_of_I2C_DO_RX_ACK 55C2                                   ?_Timer0_Set_Mode 00D5  
                                         ?_ADC_ISR 0001                              i2LCD_Send_4Bits@_Data 0008  
                            __end_of_EUSART_RX_ISR 5648                              __end_of_EUSART_TX_ISR 563E  
                                 _I2C_DO_SEND_STOP 55C2                                  ??_I2C_SetCallback 00D8  
                              I2C_Open@returnValue 00D6                                 _I2C_MasterSendNack 55F0  
                         ?_I2C_MasterEnableRestart 0001                                          ___fladd@a 0174  
                                        ___fladd@b 0170                                  _i2c_fsmStateTable 1001  
                             __end_of_MSSP_SPI_ISR 5626               __end_of_LCD_4Bits_Send_Enable_Signal 4F1E  
                 ??i2_LCD_4Bits_Send_Enable_Signal 0008                    ?i2_LCD_4Bits_Send_Enable_Signal 0007  
                     _LCD_4Bits_Send_Enable_Signal 4EC8                                          ___fldiv@a 00E7  
                                        ___fldiv@b 00E3                                           ?_RB4_ISR 0001  
__end_ofi2_ECU_LCD_4Bit_Send_String_Data_Postition 43C4    __end_of_ECU_LCD_4Bit_Send_String_Data_Postition 429A  
      ??i2_ECU_LCD_4Bit_Send_String_Data_Postition 0017         ?i2_ECU_LCD_4Bit_Send_String_Data_Postition 0012  
        ??_ECU_LCD_4Bit_Send_String_Data_Postition 0100           ?_ECU_LCD_4Bit_Send_String_Data_Postition 018C  
        i2_ECU_LCD_4Bit_Send_String_Data_Postition 4330            _ECU_LCD_4Bit_Send_String_Data_Postition 41FE  
                                         ?_RB5_ISR 0001                                           ?_RB6_ISR 0001  
                            _I2C_DO_SEND_ADR_WRITE 553A                                           ?_RB7_ISR 0001  
                      ??_ADC_Result_Format_Control 00D7                                        __pbssCOMRAM 0022  
         ADC_Voltage_Reference_Control@_ADC_config 00D5                                      __pcstackBANK0 00D5  
                                    __pcstackBANK1 0170                                     ??_I2C_DO_RESET 00D5  
                         ?_Timer0_Prescaler_Config 00D5                                ?_I2C_MasterSendNack 0001  
                                  _MSSP_I2C_BC_ISR 562A                                  keyPad_Read@keypad 00DB  
                                    LED_init@F3461 002B                       __end_of_I2C_DO_SEND_ADR_READ 552C  
                             ??_I2C_MasterClearIrq 00D5                        __end_of_I2C_DO_ADDRESS_NACK 4C98  
                                   ?_Timer0_Deinit 00D5                                   _I2C_MasterIsNack 54D2  
                              __end_of_keyPad_Read 375C                                      _NumberPressed 0030  
                        _I2C_DO_SEND_RESTART_WRITE 55D2                      i2ECU_LCD_4Bit_Send_Command@rt 000D  
                                 _I2C_MasterSetIrq 55F6                                          __pnvBANK1 0196  
                            _rd2RegCompleteHandler 528C                       Timer0_Set_Resolution@_timer0 00D5  
                                     ?_Timer0_Init 00D9                             _PIN_MANAGER_Initialize 5350  
                            _wr2RegCompleteHandler 52DC                          ??_I2C_CallbackReturnReset 00DD  
                      __end_of_I2C_MasterOperation 5120                               ??_I2C_MasterSendNack 00D5  
                         rd2RegCompleteHandler@ptr 00DC                                          __pintcode 0008  
                                         ?___fladd 0170                             i2_gpio_pin_write_logic 2D3A  
                                         ?___fldiv 00E3                                           ?___awdiv 0001  
                                        __ptext101 5548                                          __ptext110 4E6C  
                                        __ptext102 55E2                                          __ptext111 44E8  
                                        __ptext103 5556                                          __ptext120 5622  
                                        __ptext112 4F1E                                          __ptext104 519C  
                                        __ptext121 5626                                          __ptext113 2D3A  
                                        __ptext105 3AF8                                          __ptext130 4574  
                                        __ptext122 562A                                          __ptext114 3F66  
                                        __ptext106 375C                                          __ptext131 532A  
                                        __ptext123 562E                                          __ptext115 3C7E  
                                        __ptext107 4330                                          __ptext132 4A2A  
                                        __ptext124 5632                                          __ptext116 543E  
                                        __ptext108 43C4                                          __ptext133 5642  
                                        __ptext125 5636                                          __ptext117 5458  
                                        __ptext109 4E10                                          __ptext126 563A  
                                        __ptext118 5472                                          __ptext127 5646  
                                        __ptext119 548C                                          __ptext128 563E  
                                        __ptext129 5206                                           ?___awmod 0001  
                                         ?___fltol 00D5                                keyPad_Initialize@rt 00E3  
                           ??_I2C_MasterSendTxData 00D5                                _CCP1_InterrptHandle 00BF  
                        __end_of_i2c_fsmStateTable 1021                          gpio_pin_write_logic@logic 00D7  
              i2ECU_LCD_4Bit_Send_Command@_Command 000C                  ECU_LCD_4Bit_Send_Command@_Command 00E0  
                         ?_ECU_LCD_4Bit_Initialize 00E2                    CCPx_CompareMode_WriteData@_CCPx 0001  
                             Timer0_Deinit@_timer0 00D5                    CCPx_CompareMode_WriteData@_Data 0003  
                                        _btn_value 0100                                        __smallconst 1000  
                                         _CCP1_ISR 5206                                           _CCP2_ISR 563E  
                          I2C_MasterOperation@read 00E2                                           _I2C_Open 486C  
                                         _ADC_Init 3EB0                                           _CCP1_obj 0165  
                    ?_LCD_4Bits_Send_Enable_Signal 00DB                                        ADC_Init@ret 00DC  
                               i2LCD_Send_4Bits@rt 000A                                          _curserPos 0032  
                          ??_rd1RegCompleteHandler 00DD                             ?_ADC_Conversion_Result 00D5  
     TemperatureSensor_TC74_Read_Temp@TC74_Address 00E7                            ??_wr1RegCompleteHandler 00DD  
                                         _INT0_ISR 5636                                           _INT1_ISR 5632  
                                         _INT2_ISR 562E                                           _RB4_Flag 0036  
                                         _RB5_Flag 0035                                           _RB6_Flag 0034  
                                         _RB7_Flag 0033                                  RB4_ISR@RB4_Source 0001  
                         __end_of_InterruptManager 0456                                           _PIE1bits 0F9D  
                                         _PIE2bits 0FA0                          _ADC_Result_Format_Control 4FBC  
                                      ??_Dashboard 0192                      i2LCD_4Bits_Set_Curser@coloumn 0010  
                                         _PIR1bits 0F9E                                           i2u610_44 2DC8  
                                         i2u610_45 2DC4                                           _PIR2bits 0FA1  
                                         i2u611_44 2DF8                                           i2u611_45 2DF4  
                                         i2u612_44 2E28                                           i2u612_45 2E24  
                                         i2u613_44 2E58                                           i2u613_45 2E54  
                                         i2u614_44 2EC0                                           i2u614_45 2EBC  
                                         i2u607_40 2D50                                           i2u623_40 44F8  
                                         i2u607_41 2D4C                                           i2u623_41 44F4  
                                         i2u615_44 2EEE                                           i2u615_45 2EEA  
                                         i2u608_40 2D72                                           i2u624_40 4F2E  
                                         i2u608_41 2D6E                                           i2u624_41 4F2A  
                                         i2u616_44 2F1C                                           i2u616_45 2F18  
                                         i2u617_44 2F4A                                           i2u609_44 2D98  
                                         i2u617_45 2F46                                           i2u609_45 2D94  
                                         i2u618_44 2F78                                           i2u618_45 2F74  
                                         i2u806_40 459A                                           i2u638_40 4E20  
                                         i2u806_41 4596                                           i2u638_41 4E1C  
                                         i2u751_40 533A                                           i2u807_40 45D0  
                                         i2u743_40 4342                                           i2u751_41 5336  
                                         i2u807_41 45CC                                           i2u743_41 433E  
                                         i2u752_40 4A3C                                           i2u744_40 4382  
                                         i2u752_41 4A38                                           i2u744_47 4378  
                                         i2u753_40 4A62                                           i2u840_48 5222  
                                         i2u841_40 54A0                                           i2u657_40 4E7C  
                                         i2u745_40 43B0                                           i2u817_40 3B08  
                                         i2u753_41 4A5E                                           i2u840_49 5234  
                                         i2u841_41 549C                                           i2u657_41 4E78  
                                         i2u817_41 3B04                                           i2u745_47 43A6  
                                         i2u754_40 4A86                                           i2u842_40 5486  
                                         i2u658_40 43D8                                           i2u746_40 43C0  
                                         i2u818_40 3B1C                                           i2u754_41 4A82  
                                         i2u842_41 5482                                           i2u658_41 43D4  
                                         i2u746_41 43BC                                           i2u818_41 3B18  
                                         i2u843_40 546C                                           i2u843_41 5468  
                                         i2u844_40 5452                                           i2u772_40 3C8E  
                                         i2u780_40 3FAA                                           i2u844_41 544E  
                                         i2u772_41 3C8A                                           i2u780_41 3FA6  
                                         i2u773_40 3CA8                                           i2u781_40 3FC8  
                                         i2u845_40 51BA                                           i2u773_41 3CA4  
                                         i2u781_41 3FC4                                           i2u845_41 51B6  
                                         i2u774_40 3CCE                                           i2u782_40 3FDE  
                                         i2u774_41 3CCA                                           i2u782_41 3FDA  
                                         i2u839_40 521C                                           i2u775_40 3CEC  
                                         i2u783_40 4002                                           i2u846_48 51C0  
                                         i2u839_41 5218                                           i2u775_41 3CE8  
                                         i2u783_41 3FFE                                           i2u846_49 51D2  
                                         i2u776_40 3D08                                           i2u776_41 3D04  
                                         i2u777_40 3D2E                                           i2u777_41 3D2A  
                                         i2u778_40 3F76                                           i2u970_40 00A0  
                                         i2u778_41 3F72                                           i2u970_41 009C  
                                         i2u779_40 3F90                                           i2u971_40 00AE  
                                         i2u779_41 3F8C                                           i2u971_41 00AA  
                                         i2u980_40 0142                                           i2u972_40 00BC  
                                         i2u964_40 0040                                           i2u980_41 013E  
                                         i2u972_41 00B8                                           i2u964_41 003C  
                                         i2u981_40 0152                                           i2u973_40 00CC  
                                         i2u965_40 004E                                           i2u981_41 014E  
                                         i2u973_41 00C8                                           i2u965_41 004A  
                            __end_of_I2C_MasterFsm 4A2A                                           i2u990_40 01EE  
                                         i2u982_40 0168                                           i2u974_40 00E2  
                                         i2u966_40 0060                                           i2u990_41 01EA  
                                         i2u982_41 0164                                           i2u974_41 00DE  
                                         i2u966_41 005C                                           i2u991_40 01FC  
                                         i2u983_40 0176                                           i2u975_40 00F0  
                                         i2u967_40 006E                                           i2u991_41 01F8  
                                         i2u983_41 0172                                           i2u975_41 00EC  
                                         i2u967_41 006A                                           i2u992_40 020A  
                                         i2u984_40 0184                                           i2u976_40 00FE  
                                         i2u968_40 0080                                           i2u992_41 0206  
                                         i2u984_41 0180                                           i2u976_41 00FA  
                                         i2u968_41 007C                                           i2u993_40 021A  
                                         i2u985_40 0194                                           i2u977_40 010E  
                                         i2u969_40 008E                                           i2u993_41 0216  
                                         i2u985_41 0190                                           i2u977_41 010A  
                                         i2u969_41 008A                                           i2u994_40 0232  
                                         i2u986_40 01AC                                           i2u978_40 0126  
                                         i2u994_41 022E                                           i2u986_41 01A8  
                                         i2u978_41 0122                                           i2u995_40 0240  
                                         i2u987_40 01BA                                           i2u979_40 0134  
                                         i2u995_41 023C                                           i2u987_41 01B6  
                                         i2u979_41 0130                                           i2u996_40 024E  
                                         i2u988_40 01C8                                           i2u996_41 024A  
                                         i2u988_41 01C4                                           i2u997_40 025E  
                                         i2u989_40 01D8                                           i2u997_41 025A  
                                         i2u989_41 01D4                                           i2u998_40 0274  
                                         i2u998_41 0270                                           i2u999_40 0282  
                                         i2u999_41 027E                         _Interrupt_RB6_Handler_HIGH 00A7  
                 ??_Timer0_DefaultInterruptHandler 0018                    ?_Timer0_DefaultInterruptHandler 0001  
                            EUSART_TX_Init@_EUSART 00D5                        __end_of_I2C_DO_RX_NACK_STOP 55BA  
                                         _TMR0_ISR 519C                                           _TMR1_ISR 5556  
                                         _TMR2_ISR 55E2                                           _TMR3_ISR 5548  
                  __end_of_I2C_MasterEnableRestart 5612                                           _UART_obj 011F  
               ECU_LCD_4Bit_Initialize@LCD_Counter 00E4                        _I2C_Report_Receive_OverFlow 00B9  
                          _Timer3_InterruptHandler 0093                      __end_of_I2C_Read1ByteRegister 486C  
                            __end_of_I2C_SetBuffer 53B2                EUSART_ASYNC_WriteByteBlocking@_Byte 00D5  
                                       _ADCON0bits 0FC2                                         _ADCON1bits 0FC1  
                                       _ADCON2bits 0FC0                             ?_I2C_DO_SEND_ADR_WRITE 0001  
                          __end_of_MSSP_I2C_BC_ISR 562E                    __end_of_Timer0_Prescaler_Config 4CF8  
                   ?_ADC_Voltage_Reference_Control 00D5                           I2C_MasterSendTxData@data 00D5  
                                        _userInput 002E                           wr2RegCompleteHandler@ptr 00DC  
                                      _keyPad_Read 3664                                    ??_Timer0_Deinit 00D7  
                                      _INTCON2bits 0FF1              EUSART_ASYNC_WriteStringBlocking@_Byte 00D6  
                                      _INTCON3bits 0FF0                         ??_I2C_DO_SEND_RESTART_READ 00D5  
                                        copy_data0 4962                                          copy_data1 4982  
                         ?_rdBlkRegCompleteHandler 00DC                                         _I2C_Poller 53B2  
                       __end_of_Timer0_Write_Value 4D56                                         _I2C_Status 0060  
                                     ?_I2C_DO_IDLE 0001                                       ?_I2C_DO_RCEN 0001  
i2ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn 0014    ECU_LCD_4Bit_Send_String_Data_Postition@_Coloumn 018E  
                           i2_LCD_4Bits_Set_Curser 43C4                             ?_rd2RegCompleteHandler 00DC  
                        ECU_Relay_Initialize@F3462 00CC                                         _EECON1bits 0FA6  
                    __end_of_Timer0_Set_Resolution 5094                                   ??_I2C_MasterOpen 00D5  
                           ?_wr2RegCompleteHandler 00DC                                   ??_I2C_MasterStop 00D5  
                         ??_I2C_MasterWaitForEvent 00D5                                   ??_I2C_Initialize 00D5  
                             _REALTIMECLOCK_DS1307 0147                                           __Hrparam 0000  
                           LCD_4Bits_Set_Curser@rt 00E5                                           __Lrparam 0000  
                                  _CCP1_DefaultISR 4574                        ECU_LCD_4Bit_Send_Command@rt 00E1  
                             __end_of_I2C_DO_RESET 5586                           ??_I2C_Write1ByteRegister 00E6  
                  __end_of_ECU_LCD_4Bit_Initialize 3460                               i2LCD_Send_4Bits@_LCD 0007  
                          ??_OSCILLATOR_Initialize 00D5                                  RB6_ISR@RB6_Source 0001  
                     ?_ECU_LCD_4Bit_Send_char_Data 00DF                               _I2C_DO_SEND_ADR_READ 551C  
                        Timer0_Write_Value@_timer0 00D5                                LCD_Send_4Bits@_Data 00DC  
                  i2gpio_pin_write_logic@pinConfig 0001                      gpio_pin_write_logic@pinConfig 00D5  
                           _Interrupt_INT0_Handler 00B5                        __end_of_gpio_pin_initialize 4C34  
                 I2C_Read1ByteRegister@returnValue 00E6                 i2ECU_LCD_4Bit_Send_char_Data@_Data 000C  
                 ECU_LCD_4Bit_Send_char_Data@_Data 00E0                        __end_of_gpio_pin_read_logic 3348  
                           _Interrupt_INT1_Handler 00B3                                    _I2C_MasterClose 561A  
                    I2C_SetAddressNackCallback@ptr 00DB                             _Interrupt_INT2_Handler 00B1  
                                  I2C_Open@address 00D5                                           ___xxtofl 2FEC  
                                  _I2C_MasterStart 5612                                       _MSSP_I2C_ISR 5626  
                                  _I2C_MasterWrite 55A2                                           __ptext10 53D0  
                                         __ptext11 5304                                           __ptext20 5120  
                                         __ptext12 552C                                           __ptext21 3DFA  
                                         __ptext13 5350                                           __ptext30 4BD0  
                                         __ptext22 393E                                           __ptext14 559A  
                                         __ptext31 27A2                                           __ptext23 1A1A  
                                         __ptext15 54FA                                           __ptext40 50DA  
                                         __ptext32 3D40                                           __ptext24 2FEC  
                                         __ptext16 384E                                           __ptext41 53B2  
                                         __ptext33 54A6                                           __ptext25 3460  
                                         __ptext17 46FE                                           __ptext50 55CA  
                                         __ptext42 550C                                           __ptext34 47F4  
                                         __ptext26 2410                                           __ptext18 5424  
                                         __ptext51 55D2                                           __ptext43 49BC  
                                         __ptext35 48DE                                           __ptext27 1F22  
                                         __ptext19 5094                                           __ptext60 55F6  
                                         __ptext52 55DA                                           __ptext44 4C34  
                                         __ptext36 54BE                                           __ptext28 4A96  
                                         __ptext61 54D2                                           __ptext53 5570  
                                         __ptext45 557C                                           __ptext37 486C  
                                         __ptext29 3348                                           __ptext70 5264  
                                         __ptext62 5590                                           __ptext54 40BE  
                                         __ptext46 55AA                                           __ptext38 5372  
                                         __ptext71 528C                                           __ptext63 55EA  
                                         __ptext55 3BBC                                           __ptext47 55B2  
                                         __ptext39 55A2                                           __ptext80 5236  
                                         __ptext72 52B4                                           __ptext64 55FA  
                                         __ptext56 553A                                           __ptext48 55BA  
                                         __ptext81 5616                                           __ptext73 52DC  
                                         __ptext65 55F0                                           __ptext57 551C  
                                         __ptext49 55C2                                           __ptext90 2A72  
                                         __ptext82 561A                                           __ptext74 54E6  
                                         __ptext66 55FE                                           __ptext58 5586  
                                         __ptext91 4D56                                           __ptext83 561E  
                                         __ptext75 4DB4                                           __ptext67 5602  
                                         __ptext59 477A                                           __ptext92 53EC  
                                         __ptext84 41FE                                           __ptext76 5392  
                                         __ptext68 5606                                           __ptext93 51D4  
                                         __ptext85 4160                                           __ptext77 560A  
                                         __ptext69 5164                                           __ptext94 4014  
                                         __ptext86 4B00                                           __ptext78 560E  
                                         __ptext95 3EB0                                           __ptext87 4B68  
                                         __ptext79 5612                                           __ptext96 4F6E  
                                         __ptext88 429A                                           __ptext97 3A1C  
                                         __ptext89 4EC8                                           __ptext98 4FBC  
                                         __ptext99 5408                __end_of_I2C_SetDataCompleteCallback 54FA  
                      _I2C_SetDataCompleteCallback 54E6                            ?_I2C_DO_RX_NACK_RESTART 0001  
                   ??_LCD_4Bits_Send_Enable_Signal 00DC                         __end_of_Timer1_Write_Value 5350  
                         __end_of_I2C_DO_SEND_STOP 55CA                            keyPad_Initialize@keypad 00DF  
                                 i2_update_display 375C                                           _keypad_1 0138  
                                         _nextBack 002F                __end_ofi2_ECU_LCD_4Bit_Send_Command 4E6C  
                      i2_ECU_LCD_4Bit_Send_Command 4E10                __end_of_ADC_Select_Specific_Channel 3AF8  
                      _ADC_Select_Specific_Channel 3A1C                                       _MSSP_SPI_ISR 5622  
                                 i2_LCD_Send_4Bits 44E8                                    _I2C_SetCallback 4DB4  
                    ??_I2C_SetDataCompleteCallback 00DC                         I2C_Write1ByteRegister@data 00E5  
                                         _timer0_1 0140                      keyPad_Read@l_coloumns_counter 00E3  
         __end_of_EUSART_ASYNC_WriteStringBlocking 477A                 ??_EUSART_ASYNC_WriteStringBlocking 00DA  
                ?_EUSART_ASYNC_WriteStringBlocking 00D6                   _EUSART_ASYNC_WriteStringBlocking 46FE  
                                         isa$xinst 0000                         _Interrupt_RB7_Handler_HIGH 00A3  
                                         int$flags 003F                              ?_I2C_DO_SEND_ADR_READ 0001  
                      LCD_4Bits_Set_Curser@coloumn 00E4                      ??_ADC_Select_Specific_Channel 00D5  
                         __end_of_I2C_MasterIsNack 54E6                      ??_ECU_LCD_4Bit_Send_char_Data 00E1  
                           gpio_pin_write_logic@rt 00DA                                     Timer0_Init@ret 00DB  
                         __end_of_I2C_MasterSetIrq 55FA                                   ?_MSSP_I2C_BC_ISR 0001  
                                       _INTCONbits 0FF2                     __end_of_I2C_DO_RX_NACK_RESTART 55B2  
                     __end_of_gpio_pin_write_logic 2D3A                  i2ECU_LCD_4Bit_Send_char_Data@_LCD 000B  
                  ECU_LCD_4Bit_Send_char_Data@_LCD 00DF                                           intlevel2 0000  
                                      ?_I2C_Poller 0001                __end_of_ADC_Interrupt_Configuration 5424  
                      _ADC_Interrupt_Configuration 5408                         i2LCD_4Bits_Set_Curser@_LCD 000E  
                          __end_of_CCP1_DefaultISR 45FC                        ECU_LCD_4Bit_Initialize@_LCD 00E2  
                          ?_PIN_MANAGER_Initialize 0001             __end_ofi2_LCD_4Bits_Send_Enable_Signal 4F6E  
                   i2_LCD_4Bits_Send_Enable_Signal 4F1E                                _I2C_DO_SEND_RESTART 55CA  
                          ?i2_gpio_pin_write_logic 0001                    ??_REALTIMECLOCK_DS1307_Get_Data 00ED  
                     __end_of_ADC_Start_Conversion 5408                      ??_ADC_Interrupt_Configuration 00D7  
   TemperatureSensor_TC74_Read_Temp@TC74_TempValue 00E8                            __end_of_I2C_MasterClose 561E  
                          __end_of_I2C_MasterStart 5616                            __end_of_I2C_MasterWrite 55AA  
                          keyPad_Read@keypad_value 00DD                               ?_I2C_DO_SEND_RESTART 0001  
                                   _port_registers 0110                          i2LCD_4Bits_Set_Curser@row 000F  
                          ??_ADC_Conversion_Result 00D8      i2ECU_LCD_4Bit_Send_String_Data_Postition@_LCD 0012  
      ECU_LCD_4Bit_Send_String_Data_Postition@_LCD 018C                                        _SSPCON1bits 0FC6  
                                      _SSPCON2bits 0FC5      i2ECU_LCD_4Bit_Send_String_Data_Postition@_Row 0013  
      ECU_LCD_4Bit_Send_String_Data_Postition@_Row 018D      i2ECU_LCD_4Bit_Send_String_Data_Postition@_Str 0015  
      ECU_LCD_4Bit_Send_String_Data_Postition@_Str 018F                    _EUSART_BaudRateCalculation$7013 0184  
                                    ___fladd@signs 0178               ADC_Result_Format_Control@_ADC_config 00D5  
                     ??_CCPx_CompareMode_WriteData 0005                            __end_of_I2C_SetCallback 4E10  
                  ??i2_ECU_LCD_4Bit_Send_char_Data 000D                     __end_of_PIN_MANAGER_Initialize 5372  
                    __end_of_rd1RegCompleteHandler 52DC                                       ___fladd@aexp 0179  
                                     ___fladd@bexp 017A                     __end_ofi2_gpio_pin_write_logic 2FEC  
                    __end_of_wr1RegCompleteHandler 528C                                  ?_InterruptManager 0001  
                  keyPad_Initialize@l_rows_counter 00E4  
